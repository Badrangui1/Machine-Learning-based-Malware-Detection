retf    0
retn
retf
retn    0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_408330
mov     eax, large fs:0
push    eax
sub     esp, 18h
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     al, ds:byte_407e91
mov     ecx, edx
movzx   eax, byte ptr [edx]
sub     ecx, offset dword_407598
shl     eax, 18h
xor     edi, edi
or      eax, ecx
inc     edx
mov     ecx, [ebp+arg_c]
mov     [ebp+var_20], eax
push    2
movzx   eax, word ptr [edx]
pop     esi
add     edx, esi
mov     [ebp+var_1c], eax
mov     eax, [edx]
mov     [ebp+var_18], eax
mov     eax, [edx+4]
add     edx, 8
mov     [ebp+var_14], eax
mov     eax, off_42c144
mov     [ecx], eax
mov     [ecx+4], edi
mov     eax, off_42c144
movzx   eax, word ptr [eax]
mov     [ecx+8], eax
mov     [ecx+0ch], esi
mov     [ecx+10h], edx
mov     [ecx+14h], edi
movzx   eax, word ptr [edx]
mov     [ecx+18h], eax
mov     dword ptr [ecx+1ch], 1
mov     esi, off_42c128
test    esi, esi
jnz     short loc_4083c8
push    7fh
pop     eax
jmp     short loc_4083e8
push    ecx
push    [ebp+arg_8]
lea     eax, [ebp+var_20]
mov     ecx, esi
push    edi
push    edi
push    eax
push    dword_42c15c
push    dword_42c158
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
leave
retn    10h
push    ebp
mov     ebp, esp
mov     ecx, dword_42c148
mov     eax, dword_42c14c
and     ecx, [ebp+arg_0]
and     eax, [ebp+arg_4]
or      ecx, eax
jz      short loc_408436
mov     eax, dword_42c150
mov     edx, dword_42c154
and     eax, [ebp+arg_0]
and     edx, [ebp+arg_4]
cmp     eax, dword_42c150
jnz     short loc_408436
cmp     edx, dword_42c154
jnz     short loc_408436
mov     al, 1
jmp     short loc_408438
xor     al, al
pop     ebp
retn    8
push    esi
xor     eax, eax
mov     esi, ecx
push    edi
mov     edi, offset byte_406afd
test    edx, edx
jz      short loc_408454
push    edx
mov     edi, edx
call    _strlen
pop     ecx
and     dword ptr [esi+4], 0
inc     eax
and     dword ptr [esi+0ch], 0
mov     [esi], edi
pop     edi
mov     [esi+8], eax
pop     esi
retn
push    ebx
push    esi
xor     ebx, ebx
mov     esi, ebx
push    edi
mov     edi, offset word_406bd4
test    edx, edx
jz      short loc_40848b
mov     esi, edx
mov     edi, edx
lea     edx, [esi+2]
mov     ax, [esi]
add     esi, 2
cmp     ax, bx
jnz     short loc_40847c
sub     esi, edx
sar     esi, 1
mov     [ecx], edi
lea     eax, ds:2[esi*2]
pop     edi
pop     esi
mov     [ecx+4], ebx
mov     [ecx+0ch], ebx
mov     [ecx+8], eax
pop     ebx
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4084b0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_20]
test    eax, eax
jz      short loc_408541
mov     ecx, [ebp+arg_4]
mov     edi, [ebp+arg_18]
mov     ebx, [ebp+arg_14]
mov     edx, [ebp+arg_8]
sub     ecx, 0
jz      short loc_408517
sub     ecx, 1
jnz     short loc_40851a
test    dl, dl
jz      short loc_4084fc
movzx   ecx, dl
inc     ecx
jmp     short loc_408501
mov     ecx, 100h
mov     [eax], ecx
mov     ecx, [ebp+arg_c]
mov     [eax+8], ecx
mov     ecx, [ebp+arg_10]
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     [eax+14h], edi
jmp     short loc_40851d
and     dword ptr [eax], 0
mov     ecx, [ebp+arg_10]
mov     esi, [eax+20h]
test    esi, esi
jz      short loc_408541
push    dword ptr [eax+24h]
push    [ebp+arg_1c]
push    edi
push    ebx
push    ecx
push    [ebp+arg_c]
mov     ecx, esi
push    edx
push    [ebp+arg_4]
push    [ebp+arg_0]
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn    24h
push    ebx
mov     ebx, esp
push    ecx
push    ecx
and     esp, 0fffffff8h
add     esp, 4
push    ebp
mov     ebp, [ebx+4]
mov     [esp+0ch+var_8], ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_42b268
mov     eax, large fs:0
push    eax
push    ebx
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp-14h], eax
push    esi
push    edi
push    eax
lea     eax, [ebp-0ch]
mov     large fs:0, eax
mov     esi, off_42c144
lea     edi, [ebp-24h]
lea     esi, [esi-10h]
movsd
movsd
movsd
movsd
and     dword_42c160, 0
and     dword_42c164, 0
mov     esi, off_42c11c
test    esi, esi
jnz     short loc_4085bd
push    7fh
pop     esi
jmp     short loc_4085e2
push    offset dword_42c158
push    offset dword_42c140
push    offset sub_4084b0
lea     eax, [ebp-24h]
mov     ecx, esi
push    eax
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jz      short loc_4085ed
jle     short loc_4085fd
movzx   esi, si
or      esi, 80070000h
jmp     short loc_4085fd
mov     edx, off_42c144
movzx   ecx, word ptr [edx]
push    ecx
push    edx
call    sub_40861f
mov     eax, esi
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp-14h]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
mov     esp, ebx
pop     ebx
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4084b0
mov     eax, large fs:0
push    eax
push    ecx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    32h
pop     esi
lea     eax, [ebp+phmodule]
push    eax
push    offset modulename
push    0
call    ds:getmodulehandleexw
test    eax, eax
jnz     short loc_408671
lea     eax, [ebp+phmodule]
push    eax
push    offset aadvapi32
push    0
call    ds:getmodulehandleexw
test    eax, eax
jz      short loc_4086b2
push    offset procname
push    [ebp+phmodule]
call    ds:getprocaddress
mov     edi, eax
test    edi, edi
jz      short loc_4086a5
push    [ebp+arg_4]
mov     ecx, edi
push    [ebp+arg_0]
push    2
push    dword_42c15c
push    dword_42c158
call    ds:___guard_check_icall_fptr
call    edi
mov     esi, eax
push    [ebp+phmodule]
call    ds:freelibrary
test    esi, esi
jle     short loc_4086bb
movzx   esi, si
or      esi, 80070000h
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
leave
retn    8
push    offset function
call    sub_417c81
pop     ecx
retn
push    offset sub_4113e0
mov     edx, offset sub_411410
mov     ecx, offset dword_42d628
call    sub_4116f1
retn
push    offset sub_411cf0
mov     edx, offset sub_411d20
mov     ecx, offset dword_42d654
call    sub_4116f1
and     dword_42d668, 0
and     dword_42d66c, 0
retn
push    offset sub_42b430
call    sub_417c81
pop     ecx
retn
push    ebp
mov     ebp, esp
push    0
push    ecx
push    edx
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 18h
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+str]
mov     ebx, ecx
push    edi
mov     edi, edx
test    esi, esi
jz      short loc_408777
push    esi
call    _wcslen
pop     ecx
inc     eax
jmp     short loc_40877a
push    5
pop     eax
add     eax, eax
test    esi, esi
jnz     short loc_408785
mov     esi, offset anull
push    0
push    eax
push    esi
push    4
lea     eax, [ebp+arg_8]
push    eax
push    ebx
push    edi
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+str]
push    edi
push    5
pop     ebx
test    esi, esi
jz      short loc_4087c4
push    esi
call    _wcslen
pop     ecx
inc     eax
jmp     short loc_4087c6
mov     eax, ebx
add     eax, eax
mov     [ebp+var_4], eax
test    esi, esi
jnz     short loc_4087d4
mov     esi, offset anull
mov     edi, [ebp+arg_c]
test    edi, edi
jz      short loc_4087e8
push    edi
call    _wcslen
pop     ecx
lea     ebx, [eax+1]
mov     eax, [ebp+var_4]
add     ebx, ebx
test    edi, edi
jnz     short loc_4087f3
mov     edi, offset anull
push    0
push    eax
push    esi
push    ebx
push    edi
push    4
lea     eax, [ebp+arg_8]
push    eax
push    12h
push    offset messageguid
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 30h
pop     edi
pop     esi
pop     ebx
leave
retn    14h
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, [ebp+str]
push    edi
push    5
pop     edi
test    esi, esi
jz      short loc_40883a
push    esi
call    _wcslen
pop     ecx
inc     eax
jmp     short loc_40883c
mov     eax, edi
add     eax, eax
mov     [ebp+var_8], eax
test    esi, esi
jnz     short loc_40884a
mov     esi, offset anull
mov     ebx, [ebp+arg_10]
test    ebx, ebx
jz      short loc_40885b
push    ebx
call    _wcslen
pop     ecx
inc     eax
jmp     short loc_40885d
mov     eax, edi
lea     ecx, [eax+eax]
mov     [ebp+var_4], ecx
test    ebx, ebx
jnz     short loc_40886c
mov     ebx, offset anull
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_408883
push    eax
call    _wcslen
pop     ecx
mov     ecx, [ebp+var_4]
lea     edi, [eax+1]
mov     eax, [ebp+arg_c]
add     edi, edi
test    eax, eax
jnz     short loc_40888e
mov     eax, offset anull
push    0
push    [ebp+var_8]
push    esi
push    ecx
push    ebx
push    edi
push    eax
push    4
lea     eax, [ebp+arg_8]
push    eax
push    14h
push    offset messageguid
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 38h
pop     edi
pop     esi
pop     ebx
leave
retn    18h
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+str]
mov     ebx, ecx
push    edi
mov     edi, edx
test    esi, esi
jz      short loc_4088d8
push    esi
call    _wcslen
pop     ecx
inc     eax
jmp     short loc_4088db
push    5
pop     eax
add     eax, eax
test    esi, esi
jnz     short loc_4088e6
mov     esi, offset anull
push    0
push    eax
push    esi
push    ebx
push    edi
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 20h
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+str]
mov     ebx, ecx
push    edi
mov     edi, edx
test    esi, esi
jz      short loc_40891f
push    esi
call    _wcslen
pop     ecx
inc     eax
jmp     short loc_408922
push    5
pop     eax
add     eax, eax
test    esi, esi
jnz     short loc_40892d
mov     esi, offset anull
push    0
push    4
lea     ecx, [ebp+arg_c]
push    ecx
push    eax
push    esi
push    ebx
push    edi
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    0
push    4
lea     eax, [ebp+arg_8]
push    eax
push    ecx
push    edx
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 20h
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+buffersize]
push    ebx
xor     ebx, ebx
push    esi
mov     esi, [ebp+requestcontext]
mov     [eax], ebx
mov     eax, [ebp+requestcode]
push    edi
sub     eax, 4
jz      short loc_4089ab
sub     eax, 1
jz      short loc_4089a3
push    57h
pop     eax
jmp     short loc_4089eb
mov     edi, ebx
mov     eax, ebx
mov     dl, bl
jmp     short loc_4089ce
push    [ebp+buffer]
call    ds:gettraceloggerhandle
mov     edi, edx
mov     ebx, eax
push    edi
push    ebx
call    ds:gettraceenablelevel
push    edi
push    ebx
mov     [ebp+var_1], al
call    ds:gettraceenableflags
mov     dl, [ebp+var_1]
test    byte ptr [esi+1ah], 2
jz      short loc_4089dd
mov     ecx, [esi+10h]
test    ecx, ecx
jz      short loc_4089dd
mov     esi, ecx
mov     [esi+1ch], eax
xor     eax, eax
mov     [esi+10h], ebx
mov     [esi+14h], edi
mov     [esi+19h], dl
pop     edi
pop     esi
pop     ebx
leave
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4089f2
mov     eax, large fs:0
push    eax
sub     esp, 2b4h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     [ebp+exitcode], edx
mov     dword ptr [ebp+var_280], ecx
xor     ebx, ebx
mov     [ebp+block], ebx
push    ecx
mov     [ebp+var_4], ebx
lea     edx, [ebp+block]
mov     ecx, ds:getsystemdirectoryw
push    offset ampsigstubexe
call    sub_40eb90
mov     esi, eax
test    esi, esi
jns     short loc_408a9b
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_408a7f
test    byte ptr [ecx+1ch], 1
jz      short loc_408a7f
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset messageguid
push    dword ptr [ecx+10h]
push    0ah
pop     ecx
call    sub_408951
cmp     [ebp+block], 0
jz      short loc_408a94
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     eax, esi
jmp     loc_4095c6
or      [ebp+hobject], 0ffffffffh
mov     byte ptr [ebp+var_4], 1
lea     eax, [ebp+var_290]
mov     esi, [ebp+block]
lea     edx, [ebp+var_2a8]
push    esi
push    eax
lea     ecx, [ebp+hobject]
call    sub_409c39
mov     edi, eax
test    edi, edi
jns     short loc_408b1a
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_408af3
test    byte ptr [ecx+1ch], 1
jz      short loc_408af3
push    edi
push    dword ptr [ecx+14h]
mov     edx, offset messageguid
push    dword ptr [ecx+10h]
push    0bh
pop     ecx
call    sub_408951
cmp     [ebp+hobject], 0ffffffffh
jz      short loc_408b08
push    [ebp+hobject]
call    ds:closehandle
test    esi, esi
jz      short loc_408b13
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
jmp     loc_4095c6
push    7
pop     ecx
xor     eax, eax
mov     dword ptr [ebp+var_27c], ebx
mov     [ebp+var_f8], ebx
mov     [ebp+var_f4], ecx
mov     [ebp+applicationname], ax
mov     [ebp+var_e0], ebx
mov     [ebp+var_dc], ecx
mov     word ptr [ebp+var_f0], ax
push    esi
lea     ecx, [ebp+applicationname]
mov     byte ptr [ebp+var_286], bl
mov     [ebp+var_275], bl
mov     byte ptr [ebp+var_4], 3
call    sub_40cac8
push    30h
lea     eax, [ebp+dst]
push    ebx
push    eax
call    _memset
add     esp, 0ch
lea     ecx, [ebp+applicationname]
push    offset astub
call    sub_40cac8
lea     edx, [ebp+dst]
mov     edi, eax
lea     ecx, [ebp+var_2a8]
call    sub_409e16
push    eax
mov     ecx, edi
call    sub_40cac8
push    30h
lea     eax, [ebp+dst]
push    ebx
push    eax
call    _memset
add     esp, 0ch
lea     ecx, [ebp+applicationname]
push    offset apayload
call    sub_40cac8
lea     edx, [ebp+dst]
mov     edi, eax
lea     ecx, [ebp+var_290]
call    sub_409e16
push    eax
mov     ecx, edi
call    sub_40cac8
push    offset ampwustub
lea     ecx, [ebp+applicationname]
call    sub_40cac8
push    offset aprogram
mov     ecx, eax
call    sub_40cac8
mov     edi, ebx
cmp     edi, dword ptr [ebp+var_280]
jnb     loc_408c92
mov     eax, [ebp+exitcode]
lea     ecx, [ebp+applicationname]
push    dword ptr [eax+edi*4]
call    sub_40cac8
mov     eax, [ebp+exitcode]
mov     ecx, [eax+edi*4]
movzx   eax, word ptr [ecx]
cmp     eax, 2fh
jz      short loc_408c35
cmp     eax, 2dh
jnz     short loc_408c76
lea     eax, [ecx+2]
push    offset alastpackage
push    eax
call    __wcsicmp
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_408c52
mov     byte ptr [ebp+var_286], 1
jmp     short loc_408c76
mov     eax, [ebp+exitcode]
push    offset anomaxretries
mov     eax, [eax+edi*4]
add     eax, 2
push    eax
call    __wcsicmp
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_408c76
mov     [ebp+var_275], 1
inc     edi
jmp     short loc_408bff
call    sub_40f622
mov     dword ptr [ebp+var_27c], eax
mov     eax, offset loc_408c8a
retn
mov     esi, [ebp+block]
xor     ebx, ebx
mov     edi, dword ptr [ebp+var_27c]
test    edi, edi
jns     short loc_408cb7
lea     ecx, [ebp+var_f0]
call    sub_4097c4
lea     ecx, [ebp+applicationname]
call    sub_4097c4
jmp     loc_408af3
call    ds:getcurrentprocessid
push    eax
lea     ecx, [ebp+var_29c]
call    sub_40b632
lea     ecx, [ebp+var_2b4]
push    ecx
mov     ecx, eax
call    sub_40b6ab
lea     ecx, [ebp+var_2b4]
call    sub_40b187
test    al, al
jnz     loc_408d6a
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_408d2a
test    byte ptr [eax+1ch], 1
jz      short loc_408d2a
xor     eax, eax
mov     [ebp+var_13c], ax
lea     eax, [ebp+var_13c]
push    eax
call    sub_40c93d
push    eax
mov     eax, off_42c118
mov     edx, offset messageguid
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    0ch
pop     ecx
call    sub_4088bd
lea     ecx, [ebp+var_f0]
call    sub_4097c4
lea     ecx, [ebp+applicationname]
call    sub_4097c4
cmp     [ebp+hobject], 0ffffffffh
jz      short loc_408d55
push    [ebp+hobject]
call    ds:closehandle
test    esi, esi
jz      short loc_408d60
push    esi
call    sub_41731b
pop     ecx
mov     eax, 8000ffffh
jmp     loc_4095c6
mov     edi, [ebp+hobject]
mov     dword ptr [ebp+var_280], ebx
lea     edx, [ebp+var_120]
mov     [ebp+var_268], ebx
lea     ecx, [ebp+var_268]
mov     [ebp+var_120], ebx
mov     [ebp+var_11c], ebx
mov     [ebp+var_118], ebx
mov     [ebp+var_114], ebx
mov     [ebp+var_110], ebx
mov     [ebp+var_10c], ebx
call    sub_40ab4d
mov     dword ptr [ebp+var_27c], eax
test    eax, eax
jns     loc_409072
lea     ecx, [ebp+hobject]
mov     dword ptr [ebp+var_27c], ebx
mov     [ebp+hobject], ebx
call    sub_40a2af
mov     ecx, eax
mov     [ebp+exitcode], ecx
test    ecx, ecx
js      loc_4094f7
lea     eax, [ebp+var_2a8]
push    eax
call    sub_409778
mov     ecx, [ebp+var_2a8]
test    ecx, ecx
jz      short loc_408e01
call    sub_40d871
lea     ecx, [ebp+var_2a8]
call    sub_409748
cmp     [ebp+var_f4], 8
lea     eax, [ebp+applicationname]
mov     [ebp+process], ebx
jb      short loc_408e27
mov     eax, dword ptr [ebp+applicationname]
cmp     [ebp+var_dc], 8
lea     edx, [ebp+var_f0]
jb      short loc_408e3c
mov     edx, [ebp+var_f0]
push    [ebp+hobject]
sub     esp, 10h
push    eax
push    ecx
push    ecx
lea     ecx, [ebp+process]
call    sub_40f193
mov     ecx, eax
mov     [ebp+exitcode], ecx
test    ecx, ecx
js      loc_4094ba
cmp     edi, 0ffffffffh
jz      short loc_408e72
push    edi
call    ds:closehandle
or      edi, 0ffffffffh
push    [ebp+process]
call    ds:getprocessid
push    eax
lea     ecx, [ebp+var_29c]
call    sub_40b632
mov     eax, dword ptr [ebp+var_27c]
mov     edx, ebx
mov     ecx, off_42c118
mov     [ebp+block], eax
cmp     [ebp+var_275], 0
mov     [ebp+exitcode], edx
jz      short loc_408eb2
xor     edx, edx
inc     edx
jmp     short loc_408ebc
cmp     edx, 0f0h
sbb     edx, edx
neg     edx
test    edx, edx
jz      loc_40903a
cmp     ecx, offset off_42c118
jz      short loc_408f0c
test    byte ptr [ecx+1ch], 4
jz      short loc_408f0c
xor     eax, eax
lea     ecx, [ebp+var_29c]
mov     [ebp+var_170], ax
lea     eax, [ebp+var_170]
push    eax
call    sub_40c93d
push    eax
push    [ebp+exitcode]
mov     eax, off_42c118
mov     edx, offset messageguid
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    0fh
pop     ecx
call    sub_40875c
mov     ecx, [ebp+process]
mov     edx, 1f4h
call    sub_40ea05
test    al, al
jz      loc_409339
cmp     [ebp+var_268], 0
jz      short loc_408f3f
push    [ebp+var_268]
call    sub_41731b
pop     ecx
mov     [ebp+var_268], ebx
lea     edx, [ebp+var_120]
lea     ecx, [ebp+var_268]
call    sub_40ab4d
mov     [ebp+block], eax
mov     dword ptr [ebp+var_27c], eax
test    eax, eax
js      loc_409014
mov     eax, [ebp+var_298]
cmp     eax, [ebp+var_11c]
jnz     short loc_408f90
mov     eax, [ebp+var_29c]
cmp     eax, [ebp+var_120]
jnz     short loc_408f90
mov     eax, [ebp+var_294]
cmp     eax, [ebp+var_118]
mov     al, 1
jz      short loc_408f92
mov     al, bl
test    al, al
jnz     loc_40902e
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40901c
test    byte ptr [ecx+1ch], 2
jz      short loc_40901c
xor     eax, eax
lea     ecx, [ebp+var_29c]
mov     [ebp+var_170], ax
lea     eax, [ebp+var_170]
push    eax
call    sub_40c93d
mov     ebx, eax
lea     ecx, [ebp+var_120]
xor     eax, eax
mov     [ebp+var_1a4], ax
lea     eax, [ebp+var_1a4]
push    eax
call    sub_40c93d
push    ebx
push    eax
mov     eax, off_42c118
push    [ebp+exitcode]
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
call    sub_4087a9
mov     eax, dword ptr [ebp+var_27c]
xor     ebx, ebx
mov     ecx, off_42c118
mov     [ebp+block], eax
jmp     short loc_409022
mov     ecx, off_42c118
jmp     short loc_409022
mov     eax, [ebp+block]
mov     edx, [ebp+exitcode]
inc     edx
jmp     loc_408e9e
mov     ecx, off_42c118
mov     eax, [ebp+block]
test    eax, eax
js      loc_409421
cmp     [ebp+process], 0
jz      short loc_40905d
push    [ebp+process]
call    ds:closehandle
mov     ecx, off_42c118
cmp     [ebp+hobject], 0
jz      short loc_409078
push    [ebp+hobject]
call    sub_41731b
pop     ecx
mov     ecx, off_42c118
mov     eax, [ebp+var_110]
cmp     eax, [ebp+var_2b0]
jnz     short loc_4090a4
mov     eax, [ebp+var_114]
cmp     eax, [ebp+var_2b4]
jnz     short loc_4090a4
mov     eax, [ebp+var_10c]
cmp     eax, [ebp+var_2ac]
mov     al, 1
jz      short loc_4090a6
mov     al, bl
test    al, al
jnz     loc_409142
cmp     ecx, offset off_42c118
jz      loc_4092f7
test    byte ptr [ecx+1ch], 2
jz      loc_4092f7
xor     eax, eax
lea     ecx, [ebp+var_114]
mov     [ebp+var_1a4], ax
lea     eax, [ebp+var_1a4]
push    eax
call    sub_40c93d
mov     [ebp+exitcode], eax
lea     ecx, [ebp+var_2b4]
xor     eax, eax
mov     [ebp+var_170], ax
lea     eax, [ebp+var_170]
push    eax
call    sub_40c93d
mov     ebx, eax
lea     ecx, [ebp+var_120]
xor     eax, eax
mov     [ebp+var_1d8], ax
lea     eax, [ebp+var_1d8]
push    eax
call    sub_40c93d
push    [ebp+exitcode]
push    ebx
push    eax
mov     eax, off_42c118
push    dword ptr [ebp+var_280]
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
call    sub_40881e
xor     ebx, ebx
jmp     loc_4092f7
push    [ebp+var_286]
mov     ecx, [ebp+var_268]
lea     edx, [ebp+var_120]
call    sub_40a5cc
mov     dword ptr [ebp+var_27c], eax
lea     eax, [ebp+var_290]
push    eax
call    sub_409778
cmp     [ebp+var_290], 0
jz      loc_4092b7
cmp     dword_42c140, 5
jbe     loc_4092b7
push    2000h
push    ebx
call    sub_4083f9
test    al, al
jz      loc_4092b7
call    sub_40ca1c
mov     [ebp+var_281], al
lea     ecx, [ebp+var_a8]
lea     eax, [ebp+var_281]
mov     [ebp+var_b4], ebx
mov     [ebp+var_b8], eax
mov     eax, [ebp+var_290]
mov     [ebp+var_b0], 1
mov     [ebp+var_ac], ebx
mov     edx, [eax+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_98]
call    sub_40843c
mov     edx, [ebp+var_290]
lea     ecx, [ebp+var_88]
lea     edx, [edx+18h]
call    sub_40843c
call    sub_40d864
mov     ecx, [ebp+var_290]
mov     [ebp+var_2b8], eax
lea     eax, [ebp+var_2b8]
mov     [ebp+var_78], eax
mov     [ebp+var_74], ebx
mov     [ebp+var_70], 4
mov     [ebp+var_6c], ebx
mov     al, [ecx+10h]
mov     [ebp+var_282], al
lea     eax, [ebp+var_282]
mov     [ebp+var_68], eax
lea     eax, [ebp+var_260]
push    eax
mov     [ebp+var_64], ebx
mov     [ebp+var_60], 1
mov     [ebp+var_5c], ebx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_58]
call    sub_40843c
lea     eax, [ebp+var_286]
mov     [ebp+var_44], ebx
mov     [ebp+var_48], eax
lea     eax, [ebp+var_27c]
mov     [ebp+var_38], eax
mov     eax, dword ptr [ebp+var_280]
push    4
pop     ecx
mov     [ebp+var_2bc], eax
lea     eax, [ebp+var_2bc]
mov     [ebp+var_40], 1
mov     [ebp+var_3c], ebx
mov     [ebp+var_34], ebx
mov     [ebp+var_30], ecx
mov     [ebp+var_2c], ebx
mov     [ebp+var_28], eax
mov     [ebp+var_24], ebx
mov     [ebp+var_20], ecx
mov     [ebp+var_1c], ebx
lea     eax, [ebp+var_d8]
mov     edx, offset byte_4075a9
push    eax
push    0ch
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_290]
call    sub_409748
cmp     dword ptr [ebp+var_27c], 80070020h
jnz     loc_40957c
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_4092f7
test    byte ptr [eax+1ch], 2
jz      short loc_4092f7
push    dword ptr [eax+14h]
mov     edx, offset messageguid
push    dword ptr [eax+10h]
push    15h
pop     ecx
call    sub_408740
mov     ecx, dword ptr [ebp+var_280]
push    64h
pop     eax
shl     eax, cl
push    eax
call    ds:sleep
cmp     [ebp+var_268], 0
jz      short loc_40931e
push    [ebp+var_268]
call    sub_41731b
pop     ecx
mov     eax, dword ptr [ebp+var_280]
inc     eax
mov     dword ptr [ebp+var_280], eax
cmp     eax, 0ah
jb      loc_408d76
jmp     loc_409591
lea     eax, [ebp+exitcode]
push    eax
push    [ebp+process]
call    ds:getexitcodeprocess
test    eax, eax
jnz     short loc_409357
call    sub_40fba5
mov     ebx, eax
test    ebx, ebx
jns     short loc_4093c9
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_409381
test    byte ptr [eax+1ch], 1
jz      short loc_409381
push    ebx
push    dword ptr [eax+14h]
mov     edx, offset messageguid
push    dword ptr [eax+10h]
push    10h
pop     ecx
call    sub_408951
cmp     [ebp+process], 0
jz      short loc_409396
push    [ebp+process]
call    ds:closehandle
cmp     [ebp+hobject], 0
jz      short loc_4093ab
push    [ebp+hobject]
call    sub_41731b
pop     ecx
cmp     [ebp+var_268], 0
jz      loc_409597
push    [ebp+var_268]
call    sub_41731b
pop     ecx
jmp     loc_409597
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_409416
test    byte ptr [eax+1ch], 1
jz      short loc_409416
mov     ebx, [ebp+exitcode]
lea     ecx, [ebp+var_29c]
xor     eax, eax
mov     [ebp+var_1d8], ax
lea     eax, [ebp+var_1d8]
push    eax
call    sub_40c93d
push    ebx
push    eax
mov     eax, off_42c118
mov     edx, offset messageguid
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    11h
pop     ecx
call    sub_408904
mov     ebx, [ebp+exitcode]
jmp     loc_409381
cmp     ecx, offset off_42c118
jz      short loc_409443
test    byte ptr [ecx+1ch], 1
jz      short loc_409443
push    eax
push    dword ptr [ecx+14h]
mov     edx, offset messageguid
push    dword ptr [ecx+10h]
push    13h
pop     ecx
call    sub_408951
cmp     [ebp+process], 0
jz      short loc_409458
push    [ebp+process]
call    ds:closehandle
cmp     [ebp+hobject], 0
jz      short loc_40946d
push    [ebp+hobject]
call    sub_41731b
pop     ecx
cmp     [ebp+var_268], 0
jz      short loc_409482
push    [ebp+var_268]
call    sub_41731b
pop     ecx
lea     ecx, [ebp+var_f0]
call    sub_4097c4
lea     ecx, [ebp+applicationname]
call    sub_4097c4
cmp     edi, 0ffffffffh
jz      short loc_4094a4
push    edi
call    ds:closehandle
test    esi, esi
jz      short loc_4094af
push    esi
call    sub_41731b
pop     ecx
mov     eax, [ebp+block]
jmp     loc_4095c6
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_4094e0
test    byte ptr [eax+1ch], 1
jz      short loc_4094e0
push    ecx
push    dword ptr [eax+14h]
mov     edx, offset messageguid
push    dword ptr [eax+10h]
push    0eh
pop     ecx
call    sub_408951
cmp     [ebp+process], 0
jz      short loc_40951d
push    [ebp+process]
call    ds:closehandle
jmp     short loc_40951d
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40951d
test    byte ptr [eax+1ch], 1
jz      short loc_40951d
push    ecx
push    dword ptr [eax+14h]
mov     edx, offset messageguid
push    dword ptr [eax+10h]
push    0dh
pop     ecx
call    sub_408951
cmp     [ebp+hobject], 0
jz      short loc_409532
push    [ebp+hobject]
call    sub_41731b
pop     ecx
cmp     [ebp+var_268], 0
jz      short loc_409547
push    [ebp+var_268]
call    sub_41731b
pop     ecx
lea     ecx, [ebp+var_f0]
call    sub_4097c4
lea     ecx, [ebp+applicationname]
call    sub_4097c4
cmp     edi, 0ffffffffh
jz      short loc_409569
push    edi
call    ds:closehandle
test    esi, esi
jz      short loc_409574
push    esi
call    sub_41731b
pop     ecx
mov     eax, [ebp+exitcode]
jmp     short loc_4095c6
cmp     [ebp+var_268], 0
jz      short loc_409591
push    [ebp+var_268]
call    sub_41731b
pop     ecx
mov     ebx, dword ptr [ebp+var_27c]
lea     ecx, [ebp+var_f0]
call    sub_4097c4
lea     ecx, [ebp+applicationname]
call    sub_4097c4
cmp     edi, 0ffffffffh
jz      short loc_4095b9
push    edi
call    ds:closehandle
test    esi, esi
jz      short loc_4095c4
push    esi
call    sub_41731b
pop     ecx
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
leave
retn
cmp     dword ptr [ecx], 0ffffffffh
jz      short locret_4095ed
push    dword ptr [ecx]
call    ds:closehandle
retn
push    esi
mov     esi, ecx
lea     ecx, [esi+18h]
call    sub_4097c4
mov     ecx, esi
pop     esi
jmp     sub_4097c4
cmp     dword ptr [ecx], 0
jz      short locret_40960e
push    dword ptr [ecx]
call    ds:closehandle
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
push    ebx
push    esi
push    edi
xor     edx, edx
mov     dword_42d608, 1
mov     esi, offset dword_42d5f0
mov     dword_42d600, edx
mov     dword_42d5f0, edx
mov     edi, offset dword_42d5e8
mov     dword_42d60c, edx
mov     dword_42d5e8, offset dword_406bb0
mov     off_42c118, esi
mov     ecx, [edi]
lea     eax, [esi+8]
push    eax
push    edx
push    edx
lea     eax, [esp+3ch+traceguidreg]
mov     [esp+3ch+traceguidreg.guid], ecx
push    eax
push    1
push    ecx
push    esi
mov     [esp+4ch+traceguidreg.reghandle], edx
lea     edi, [edi+4]
push    offset requestaddress
mov     [esi+20h], ecx
call    ds:registertraceguidsw
mov     esi, [esi]
push    0
pop     edx
test    esi, esi
jnz     short loc_409653
call    sub_40f6d2
mov     ebx, eax
test    ebx, ebx
jns     short loc_409695
xor     esi, esi
jmp     short loc_40969c
mov     esi, 795c4bd4h
xor     ebx, ebx
mov     [esp+30h+var_20], ebx
test    ebx, ebx
jns     short loc_4096ce
mov     edi, off_42c118
cmp     edi, offset off_42c118
jz      short loc_4096fd
test    byte ptr [edi+1ch], 1
jz      short loc_4096fd
push    ebx
push    dword ptr [edi+14h]
mov     edx, offset messageguid
push    dword ptr [edi+10h]
push    16h
pop     ecx
call    sub_408951
jmp     short loc_4096f7
lea     eax, [esp+30h+var_20]
push    eax
push    ecx
lea     ecx, [esp+38h+var_14]
call    sub_40daf8
mov     edx, [ebp+argv]
mov     ecx, [ebp+argc]
call    sub_4089f2
mov     ebx, eax
lea     ecx, [esp+30h+var_14]
mov     [esp+30h+var_20], ebx
call    sub_40ddec
mov     edi, off_42c118
test    esi, esi
jz      short loc_40970c
call    sub_40f72b
mov     edi, off_42c118
mov     esi, offset off_42c118
cmp     edi, esi
jz      short loc_40973f
jmp     short loc_409735
mov     eax, [edi+8]
or      eax, [edi+0ch]
jz      short loc_409733
push    dword ptr [edi+0ch]
push    dword ptr [edi+8]
call    ds:unregistertraceguids
and     dword ptr [edi+8], 0
and     dword ptr [edi+0ch], 0
mov     edi, [edi]
test    edi, edi
jnz     short loc_409717
mov     off_42c118, esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, [ecx+4]
test    esi, esi
jz      short loc_409776
push    edi
or      edi, 0ffffffffh
mov     eax, edi
lock xadd [esi+4], eax
jnz     short loc_409775
mov     ecx, esi
call    sub_40e240
lock xadd [esi+8], edi
dec     edi
jnz     short loc_409775
pop     edi
mov     ecx, esi
pop     esi
jmp     ?_delete_this@?$_ref_count_obj@v__exceptionptr@@@std@@eaexxz
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    edi
and     dword ptr [edx], 0
and     dword ptr [edx+4], 0
mov     edi, dword_42d61c
test    edi, edi
jz      short loc_4097bd
push    esi
add     edi, 4
jmp     short loc_4097a3
lea     ecx, [esi+1]
mov     eax, esi
lock cmpxchg [edi], ecx
cmp     eax, esi
jz      short loc_4097ab
mov     esi, [edi]
test    esi, esi
jnz     short loc_409796
jmp     short loc_4097bc
mov     ecx, dword_42d618
mov     [edx], ecx
mov     ecx, dword_42d61c
mov     [edx+4], ecx
pop     esi
mov     eax, edx
pop     edi
pop     ebp
retn    4
push    esi
mov     esi, ecx
mov     edx, [esi+14h]
cmp     edx, 8
jb      short loc_4097dd
mov     ecx, [esi]
lea     edx, ds:2[edx*2]
call    sub_4097fd
and     dword ptr [esi+10h], 0
xor     eax, eax
mov     dword ptr [esi+14h], 7
mov     [esi], ax
pop     esi
retn
cmp     dword ptr [ecx], 0
jz      short locret_4097fc
push    dword ptr [ecx]
call    sub_41731b
pop     ecx
retn
cmp     edx, 1000h
jb      short loc_409819
push    esi
mov     esi, [ecx-4]
add     edx, 23h
sub     ecx, esi
lea     eax, [ecx-4]
cmp     eax, 1fh
ja      short loc_409823
mov     ecx, esi
pop     esi
push    edx
push    ecx
call    sub_417320
pop     ecx
pop     ecx
retn
call    __invalid_parameter_noinfo_noreturn
mov     eax, offset dword_42d7c0
retn
push    ebp
mov     ebp, esp
push    [ebp+arg_4]
push    0
push    [ebp+arg_0]
push    edx
push    ecx
call    sub_409829
mov     ecx, [eax]
push    dword ptr [eax+4]
or      ecx, 1
push    ecx
call    sub_41d79e
add     esp, 1ch
test    eax, eax
jns     short loc_409859
or      eax, 0ffffffffh
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    esi
xor     esi, esi
test    eax, eax
jz      short loc_40986f
cmp     eax, 7fffffffh
jbe     short loc_409874
mov     esi, 80070057h
test    esi, esi
js      short loc_4098af
push    ebx
mov     ebx, [ebp+arg_0]
xor     esi, esi
push    edi
lea     edi, [eax-1]
mov     ecx, ebx
lea     eax, [ebp+arg_c]
mov     edx, edi
push    eax
push    [ebp+arg_8]
call    sub_40982f
pop     ecx
pop     ecx
test    eax, eax
js      short loc_4098a0
cmp     eax, edi
ja      short loc_4098a0
jnz     short loc_4098ab
jmp     short loc_4098a5
mov     esi, 8007007ah
xor     eax, eax
mov     [ebx+edi*2], ax
pop     edi
pop     ebx
jmp     short loc_4098bb
test    eax, eax
jz      short loc_4098bb
mov     ecx, [ebp+arg_0]
xor     eax, eax
mov     [ecx], ax
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0
push    4
lea     eax, [ebp+arg_c]
push    eax
push    4
lea     eax, [ebp+arg_8]
push    eax
push    ecx
push    edx
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_c]
xor     ebx, ebx
mov     [ebp+messageguid], edx
mov     dword ptr [ebp+messagenumber], ecx
mov     [ebp+var_4], ebx
push    edi
push    0ah
pop     edi
test    esi, esi
jz      short loc_409923
mov     edx, esi
lea     ecx, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, bx
jnz     short loc_40990b
sub     edx, ecx
sar     edx, 1
lea     ebx, ds:2[edx*2]
jmp     short loc_409925
mov     ebx, edi
test    esi, esi
jnz     short loc_40992e
mov     esi, offset anull
mov     ecx, [ebp+arg_8]
test    ecx, ecx
jz      short loc_409955
mov     edx, ecx
lea     edi, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, word ptr [ebp+var_4]
jnz     short loc_40993a
sub     edx, edi
sar     edx, 1
lea     edi, ds:2[edx*2]
test    ecx, ecx
jnz     short loc_40995a
mov     ecx, offset anull
xor     eax, eax
push    eax
push    ebx
push    esi
push    edi
push    ecx
push    dword ptr [ebp+messagenumber]
push    [ebp+messageguid]
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     edi
pop     esi
pop     ebx
leave
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_10]
xor     esi, esi
mov     [ebp+messageguid], edx
mov     dword ptr [ebp+messagenumber], ecx
mov     [ebp+var_4], esi
push    0ah
pop     ebx
test    edi, edi
jz      short loc_4099bd
mov     edx, edi
lea     ecx, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, si
jnz     short loc_4099a2
sub     edx, ecx
sar     edx, 1
lea     eax, ds:2[edx*2]
mov     [ebp+var_8], eax
jmp     short loc_4099c0
mov     [ebp+var_8], ebx
test    edi, edi
jnz     short loc_4099c9
mov     edi, offset anull
mov     esi, [ebp+arg_c]
test    esi, esi
jz      short loc_4099f1
mov     ecx, esi
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
cmp     ax, word ptr [ebp+var_4]
jnz     short loc_4099d5
sub     ecx, edx
sar     ecx, 1
lea     eax, ds:2[ecx*2]
mov     [ebp+var_c], eax
jmp     short loc_4099f4
mov     [ebp+var_c], ebx
test    esi, esi
jnz     short loc_4099fd
mov     esi, offset anull
mov     ecx, [ebp+arg_8]
test    ecx, ecx
jz      short loc_409a24
mov     edx, ecx
lea     ebx, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, word ptr [ebp+var_4]
jnz     short loc_409a09
sub     edx, ebx
sar     edx, 1
lea     ebx, ds:2[edx*2]
test    ecx, ecx
jnz     short loc_409a29
mov     ecx, offset anull
xor     eax, eax
push    eax
push    [ebp+var_8]
push    edi
push    [ebp+var_c]
push    esi
push    ebx
push    ecx
push    dword ptr [ebp+messagenumber]
push    [ebp+messageguid]
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 30h
pop     edi
pop     esi
pop     ebx
leave
retn    14h
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_c]
push    esi
push    edi
xor     edi, edi
test    ecx, ecx
jz      short loc_409a7f
mov     edx, ecx
lea     esi, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, di
jnz     short loc_409a67
sub     edx, esi
sar     edx, 1
lea     edx, ds:2[edx*2]
jmp     short loc_409a82
push    0ah
pop     edx
test    ecx, ecx
jnz     short loc_409a8b
mov     ecx, offset anull
push    edi
push    edx
push    ecx
push    4
lea     eax, [ebp+arg_8]
push    eax
push    12h
push    offset stru_406bf8
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     edi
pop     esi
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 3ch
push    ebx
mov     ebx, ecx
xor     eax, eax
push    esi
push    edi
lea     ecx, [ebp+block]
mov     [ebp+block], eax
mov     edi, edx
mov     [ebx], eax
mov     [ebx+4], eax
call    sub_40f745
mov     esi, eax
test    esi, esi
jns     short loc_409b0b
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_409af8
test    byte ptr [ecx+1ch], 1
jz      short loc_409af8
push    edi
push    esi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
call    sub_409a54
cmp     [ebp+block], 0
jz      short loc_409b07
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     eax, esi
jmp     short loc_409b82
push    34h
lea     eax, [ebp+dst]
push    0
push    eax
call    _memset
mov     esi, [ebp+block]
lea     ecx, [ebp+dst]
add     esp, 0ch
mov     edx, esi
call    sub_40f827
mov     edi, eax
test    edi, edi
jns     short loc_409b65
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_409b56
test    byte ptr [ecx+1ch], 1
jz      short loc_409b56
push    edi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406bf8
push    dword ptr [ecx+10h]
push    13h
pop     ecx
call    sub_408951
test    esi, esi
jz      short loc_409b61
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
jmp     short loc_409b82
mov     ecx, [ebp+var_30]
xor     eax, eax
add     eax, [ebp+var_2c]
mov     [ebx], eax
adc     ecx, 0
mov     [ebx+4], ecx
test    esi, esi
jz      short loc_409b80
push    esi
call    sub_41731b
pop     ecx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
and     [ebp+block], 0
xor     edx, edx
push    esi
push    edi
mov     edi, ecx
lea     ecx, [ebp+block]
call    sub_40ee9f
mov     esi, eax
test    esi, esi
jns     short loc_409bdf
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_409bcc
test    byte ptr [ecx+1ch], 1
jz      short loc_409bcc
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406bf8
push    dword ptr [ecx+10h]
push    15h
pop     ecx
call    sub_408951
cmp     [ebp+block], 0
jz      short loc_409bdb
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     eax, esi
jmp     short loc_409c35
mov     esi, [ebp+block]
mov     ecx, edi
mov     edx, esi
call    sub_409ab2
mov     edi, eax
test    edi, edi
jns     short loc_409c28
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_409c19
test    byte ptr [ecx+1ch], 1
jz      short loc_409c19
push    edi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406bf8
push    dword ptr [ecx+10h]
push    16h
pop     ecx
call    sub_408951
test    esi, esi
jz      short loc_409c24
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
jmp     short loc_409c35
test    esi, esi
jz      short loc_409c33
push    esi
call    sub_41731b
pop     ecx
xor     eax, eax
pop     edi
pop     esi
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 7ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_4]
mov     eax, ecx
mov     ecx, [ebp+arg_0]
push    esi
push    edi
or      dword ptr [eax], 0ffffffffh
mov     edi, edx
mov     [ebp+var_6c], eax
mov     dword ptr [edi], 3f480001h
mov     dword ptr [edi+4], 10001h
call    sub_409b87
mov     esi, eax
test    esi, esi
jns     short loc_409ca3
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_409c9c
test    byte ptr [ecx+1ch], 1
jz      short loc_409c9c
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406bf8
push    dword ptr [ecx+10h]
push    17h
pop     ecx
call    sub_408951
mov     eax, esi
jmp     loc_409e05
or      [ebp+hobject], 0ffffffffh
mov     edx, ebx
push    ecx
push    ecx
push    0
push    3
push    5
push    80000000h
lea     ecx, [ebp+hobject]
call    sub_40efd7
mov     esi, eax
test    esi, esi
jns     short loc_409cfd
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_409cec
test    byte ptr [ecx+1ch], 1
jz      short loc_409cec
push    esi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    18h
mov     edx, offset stru_406bf8
pop     ecx
call    sub_408951
cmp     [ebp+hobject], 0ffffffffh
jz      short loc_409c9c
push    [ebp+hobject]
call    ds:closehandle
jmp     short loc_409c9c
mov     edx, ebx
lea     ecx, [ebp+var_78]
call    sub_409ab2
mov     esi, eax
test    esi, esi
jns     short loc_409d2c
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_409cec
test    byte ptr [ecx+1ch], 1
jz      short loc_409cec
push    esi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    19h
jmp     short loc_409ce1
mov     eax, [ebp+var_78]
cmp     eax, [edi]
jnz     short loc_409d8d
mov     eax, [ebp+var_74]
cmp     eax, [edi+4]
jnz     short loc_409d8d
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_409d81
test    byte ptr [eax+1ch], 4
jz      short loc_409d81
push    30h
lea     eax, [ebp+dst]
push    0
push    eax
call    _memset
add     esp, 0ch
lea     edx, [ebp+dst]
mov     ecx, edi
call    sub_409e16
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406bf8
push    ebx
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    1ah
pop     ecx
call    sub_4098e8
mov     ecx, [ebp+var_6c]
mov     eax, [ebp+hobject]
mov     [ecx], eax
xor     eax, eax
jmp     short loc_409e05
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_409df1
test    byte ptr [eax+1ch], 1
jz      short loc_409df1
push    30h
lea     eax, [ebp+dst]
push    0
push    eax
call    _memset
add     esp, 0ch
lea     eax, [ebp+var_64]
push    30h
push    0
push    eax
call    _memset
add     esp, 0ch
lea     edx, [ebp+dst]
lea     ecx, [ebp+var_78]
call    sub_409e16
lea     edx, [ebp+var_64]
mov     ecx, edi
mov     esi, eax
call    sub_409e16
push    ebx
push    esi
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406bf8
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    1bh
pop     ecx
call    sub_40997f
cmp     [ebp+hobject], 0ffffffffh
jz      short loc_409e00
push    [ebp+hobject]
call    ds:closehandle
mov     eax, 80070650h
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    8
push    ebx
push    esi
mov     esi, [ecx]
mov     ebx, edx
push    edi
mov     edi, [ecx+4]
movzx   eax, si
push    eax
mov     eax, edi
shrd    esi, eax, 10h
movzx   eax, si
push    eax
movzx   eax, di
push    eax
shr     edi, 10h
push    edi
push    offset ahuhuhuhu
push    18h
push    ebx
call    sub_40985b
add     esp, 1ch
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 144h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+144h+var_4], eax
push    ebx
push    esi
push    edi
call    sub_40f452
mov     [esp+150h+var_140], eax
lea     eax, [esp+150h+var_138]
push    eax
call    sub_409778
mov     esi, [esp+150h+var_138]
test    esi, esi
jz      loc_409fac
cmp     dword_42c140, 5
jbe     loc_409fac
push    2000h
xor     edi, edi
push    edi
call    sub_4083f9
test    al, al
jz      loc_409fac
call    sub_40ca1c
mov     [esp+150h+var_142], al
lea     ecx, [esp+150h+var_78]
xor     ebx, ebx
mov     [esp+150h+var_84], edi
lea     eax, [esp+150h+var_142]
mov     [esp+150h+var_7c], edi
inc     ebx
mov     [esp+150h+var_88], eax
mov     [esp+150h+var_80], ebx
mov     edx, [esi+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [esp+150h+var_68]
call    sub_40843c
lea     edx, [esi+18h]
lea     ecx, [esp+150h+var_58]
call    sub_40843c
call    sub_40d864
mov     [esp+150h+var_13c], eax
xor     ecx, ecx
push    4
mov     [esp+154h+var_44], edi
lea     eax, [esp+154h+var_13c]
pop     edi
mov     [esp+150h+var_48], eax
mov     [esp+150h+var_3c], ecx
mov     [esp+150h+var_40], edi
mov     al, [esi+10h]
mov     [esp+150h+var_141], al
lea     eax, [esp+150h+var_141]
mov     [esp+150h+var_38], eax
lea     eax, [esp+150h+dst]
mov     [esp+150h+var_34], ecx
mov     [esp+150h+var_2c], ecx
mov     ecx, esi
push    eax
mov     [esp+154h+var_30], ebx
call    sub_40d839
mov     edx, eax
lea     ecx, [esp+150h+var_28]
call    sub_40843c
and     [esp+150h+var_14], 0
lea     eax, [esp+150h+var_140]
and     [esp+150h+var_c], 0
mov     [esp+150h+var_18], eax
mov     [esp+150h+var_10], edi
lea     eax, [esp+150h+var_a8]
mov     edx, offset byte_40764b
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [esp+150h+var_138]
call    sub_409748
mov     ecx, [esp+150h+var_4]
mov     eax, [esp+150h+var_140]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
push    offset word_42d622
push    edx
mov     esi, ecx
call    sub_42a95d
mov     [esi], eax
neg     eax
pop     ecx
sbb     eax, eax
pop     ecx
and     eax, 7ff8fff2h
add     eax, 8007000eh
pop     esi
retn
push    esi
push    offset word_42d622
mov     esi, ecx
mov     eax, edx
xor     ecx, ecx
push    2
pop     edx
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx
call    sub_42a95d
mov     [esi], eax
neg     eax
pop     ecx
sbb     eax, eax
pop     ecx
and     eax, 7ff8fff2h
add     eax, 8007000eh
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
lea     eax, [ebp+usertime]
push    eax
lea     eax, [ebp+kerneltime]
push    eax
lea     eax, [ebp+exittime]
push    eax
lea     eax, [ebp+creationtime]
push    eax
call    ds:getcurrentthread
push    eax
call    ds:getthreadtimes
test    eax, eax
jnz     short loc_40a04d
mov     edx, eax
leave
retn
mov     edx, [ebp+creationtime.dwhighdatetime]
xor     eax, eax
or      eax, [ebp+creationtime.dwlowdatetime]
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
and     [ebp+hkey], 0
push    ebx
push    esi
push    edi
push    1
mov     ebx, ecx
lea     ecx, [ebp+hkey]
push    offset subkey
call    sub_40fc2a
mov     esi, eax
test    esi, esi
jns     short loc_40a0b9
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a0a3
test    byte ptr [ecx+1ch], 1
jz      short loc_40a0a3
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406cbc
push    dword ptr [ecx+10h]
push    0ah
pop     ecx
call    sub_408951
cmp     [ebp+hkey], 0
jz      short loc_40a0b2
push    [ebp+hkey]
call    ds:regclosekey
mov     eax, esi
jmp     loc_40a172
mov     esi, [ebp+hkey]
lea     eax, [ebp+var_c]
and     [ebp+var_8], 0
mov     edx, offset str
push    ebx
push    eax
lea     eax, [ebp+var_8]
mov     [ebp+var_c], 8
push    eax
mov     ecx, esi
call    sub_40fee9
mov     edi, eax
push    0bh
pop     ecx
cmp     edi, 800700eah
jnz     short loc_40a0f0
mov     edi, 8007065dh
jmp     short loc_40a0fd
test    edi, edi
js      short loc_40a0fd
cmp     [ebp+var_8], ecx
jnz     short loc_40a0e9
test    edi, edi
jns     short loc_40a12f
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40a120
test    byte ptr [eax+1ch], 1
jz      short loc_40a120
push    edi
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
mov     edx, offset stru_406cbc
call    sub_408951
test    esi, esi
jz      short loc_40a12b
push    esi
call    ds:regclosekey
mov     eax, edi
jmp     short loc_40a172
lea     eax, [ebx+8]
mov     edx, offset alastexitcode
push    eax
mov     ecx, esi
call    sub_4100d5
mov     edi, eax
test    edi, edi
jns     short loc_40a165
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a120
test    byte ptr [ecx+1ch], 1
jz      short loc_40a120
push    edi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    0ch
pop     ecx
jmp     short loc_40a116
test    esi, esi
jz      short loc_40a170
push    esi
call    ds:regclosekey
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
and     [ebp+hkey], 0
push    ebx
push    esi
push    edi
push    2
mov     ebx, ecx
lea     ecx, [ebp+hkey]
push    offset subkey
call    sub_40fc2a
test    eax, eax
jns     short loc_40a202
cmp     eax, 80070002h
jnz     short loc_40a202
cmp     [ebp+hkey], 0
jz      short loc_40a1b3
push    [ebp+hkey]
call    ds:regclosekey
and     [ebp+hkey], 0
sub     esp, 10h
lea     ecx, [ebp+hkey]
call    sub_40fcf6
mov     esi, eax
test    esi, esi
jns     short loc_40a202
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a1ec
test    byte ptr [ecx+1ch], 1
jz      short loc_40a1ec
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406cbc
push    dword ptr [ecx+10h]
push    0dh
pop     ecx
call    sub_408951
cmp     [ebp+hkey], 0
jz      short loc_40a1fb
push    [ebp+hkey]
call    ds:regclosekey
mov     eax, esi
jmp     loc_40a2aa
call    sub_40a022
mov     esi, [ebp+hkey]
mov     ecx, esi
mov     dword ptr [ebp+data], eax
lea     eax, [ebp+data]
push    eax
push    8
mov     [ebp+var_c], edx
mov     edx, offset str
push    0bh
call    sub_410173
mov     edi, eax
test    edi, edi
jns     short loc_40a261
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a252
test    byte ptr [ecx+1ch], 1
jz      short loc_40a252
push    edi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    0eh
mov     edx, offset stru_406cbc
pop     ecx
call    sub_408951
test    esi, esi
jz      short loc_40a25d
push    esi
call    ds:regclosekey
mov     eax, edi
jmp     short loc_40a2aa
lea     eax, [ebp+hkey]
mov     [ebp+hkey], ebx
push    eax
push    4
push    4
mov     edx, offset alastexitcode
mov     ecx, esi
call    sub_410173
mov     edi, eax
test    edi, edi
jns     short loc_40a29d
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a252
test    byte ptr [ecx+1ch], 1
jz      short loc_40a252
push    edi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    0fh
jmp     short loc_40a247
test    esi, esi
jz      short loc_40a2a8
push    esi
call    ds:regclosekey
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
and     [ebp+hkey], 0
push    ebx
push    esi
push    edi
push    1
mov     [ebp+var_c], ecx
lea     ecx, [ebp+hkey]
push    offset subkey
call    sub_40fc2a
mov     esi, eax
test    esi, esi
jns     short loc_40a312
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a2fc
test    byte ptr [ecx+1ch], 1
jz      short loc_40a2fc
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406cbc
push    dword ptr [ecx+10h]
push    14h
pop     ecx
call    sub_408951
cmp     [ebp+hkey], 0
jz      short loc_40a30b
push    [ebp+hkey]
call    ds:regclosekey
mov     eax, esi
jmp     loc_40a417
mov     esi, [ebp+hkey]
lea     eax, [ebp+lppathname]
and     [ebp+lppathname], 0
push    ecx
push    ecx
push    eax
mov     ecx, esi
call    sub_410125
mov     edi, eax
test    edi, edi
jns     short loc_40a375
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a354
test    byte ptr [ecx+1ch], 1
jz      short loc_40a354
push    edi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406cbc
push    dword ptr [ecx+10h]
push    15h
pop     ecx
call    sub_408951
cmp     [ebp+lppathname], 0
jz      short loc_40a363
push    [ebp+lppathname]
call    sub_41731b
pop     ecx
test    esi, esi
jz      short loc_40a36e
push    esi
call    ds:regclosekey
mov     eax, edi
jmp     loc_40a417
call    sub_40ca1c
mov     edi, [ebp+lppathname]
mov     ecx, edi
test    al, al
jz      short loc_40a3d0
call    sub_4108e1
mov     ebx, eax
test    ebx, ebx
jns     short loc_40a405
cmp     ebx, 80070002h
jz      short loc_40a39e
cmp     ebx, 80070003h
jnz     short loc_40a3b6
call    sub_4109b5
push    eax
push    edi
call    ds:createdirectoryw
test    eax, eax
jnz     short loc_40a405
call    sub_40fba5
mov     ebx, eax
test    edi, edi
jz      short loc_40a3c1
push    edi
call    sub_41731b
pop     ecx
test    esi, esi
jz      short loc_40a3cc
push    esi
call    ds:regclosekey
mov     eax, ebx
jmp     short loc_40a417
call    sub_40f2ad
mov     ebx, eax
test    ebx, ebx
jns     short loc_40a405
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a3b6
test    byte ptr [ecx+1ch], 1
jz      short loc_40a3b6
push    ebx
push    dword ptr [ecx+14h]
mov     edx, offset stru_406cbc
push    dword ptr [ecx+10h]
push    16h
pop     ecx
call    sub_408951
jmp     short loc_40a3b6
mov     eax, [ebp+var_c]
mov     [eax], edi
test    esi, esi
jz      short loc_40a415
push    esi
call    ds:regclosekey
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
and     [ebp+block], 0
push    esi
push    edi
mov     edi, ecx
lea     ecx, [ebp+block]
call    sub_40a2af
mov     esi, eax
test    esi, esi
jns     short loc_40a472
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a45f
test    byte ptr [ecx+1ch], 1
jz      short loc_40a45f
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406cbc
push    dword ptr [ecx+10h]
push    17h
pop     ecx
call    sub_408951
cmp     [ebp+block], 0
jz      short loc_40a46e
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     eax, esi
jmp     short loc_40a493
mov     esi, [ebp+block]
push    esi
push    offset awsmpsigstubpid
push    edi
call    sub_40fa00
add     esp, 0ch
mov     edi, eax
test    esi, esi
jz      short loc_40a491
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
pop     edi
pop     esi
leave
retn
mov     eax, offset dword_42d7c8
retn
push    ebp
mov     ebp, esp
lea     eax, [ebp+arglist]
push    eax
push    0
push    [ebp+format]
push    0ffffffffh
push    [ebp+buffer]
call    sub_40a497
mov     ecx, [eax]
push    dword ptr [eax+4]
or      ecx, 1
push    ecx
call    ___stdio_common_vswscanf
add     esp, 1ch
pop     ebp
retn
call    ds:getlasterror
test    eax, eax
jle     short locret_40a4d8
movzx   eax, ax
or      eax, 80070000h
retn
push    ebp
mov     ebp, esp
push    0
push    8
lea     eax, [ebp+arg_c]
push    eax
push    4
lea     eax, [ebp+arg_8]
push    eax
push    20h
push    offset stru_406d20
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
push    0
push    8
lea     eax, [ebp+arg_8]
push    eax
push    1dh
push    offset stru_406d20
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 20h
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    0
push    8
lea     eax, [ebp+arg_10]
push    eax
push    8
lea     eax, [ebp+arg_8]
push    eax
push    22h
push    offset stru_406d20
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     ebp
retn    18h
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
test    esi, esi
jz      short loc_40a578
mov     edi, esi
lea     ebx, [edi+1]
mov     al, [edi]
inc     edi
test    al, al
jnz     short loc_40a56c
sub     edi, ebx
inc     edi
jmp     short loc_40a57b
push    5
pop     edi
test    esi, esi
jnz     short loc_40a584
mov     esi, offset anull_0
push    0
push    edi
push    esi
push    ecx
push    edx
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 20h
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    1ch
lea     eax, [ebp+buffer]
push    eax
push    offset sub_40a5b0
call    ds:virtualquery
mov     eax, [ebp+buffer.allocationbase]
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 1a0h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
push    ebx
push    esi
push    edi
xor     edi, edi
mov     [ebp+var_180], edx
mov     [ebp+lpnamedpipename], ecx
mov     [ebp+lpinbuffer], edi
call    sub_40a5b0
mov     edx, eax
lea     ecx, [ebp+lpinbuffer]
call    sub_40ee9f
mov     esi, eax
test    esi, esi
jns     short loc_40a651
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a636
test    byte ptr [ecx+1ch], 1
jz      short loc_40a636
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406d20
push    dword ptr [ecx+10h]
push    0ah
pop     ecx
call    sub_408951
cmp     [ebp+lpinbuffer], edi
jz      short loc_40a64a
push    [ebp+lpinbuffer]
call    sub_41731b
pop     ecx
mov     eax, esi
jmp     loc_40ab3c
mov     esi, [ebp+lpinbuffer]
mov     ebx, esi
lea     ecx, [ebx+2]
mov     ax, [ebx]
add     ebx, 2
cmp     ax, di
jnz     short loc_40a65c
sub     ebx, ecx
sar     ebx, 1
cmp     ebx, 0ffffh
jbe     short loc_40a688
test    esi, esi
jz      short loc_40a67e
push    esi
call    sub_41731b
pop     ecx
mov     eax, 80070032h
jmp     loc_40ab3c
lea     eax, ds:0eh[ebx*2]
mov     [ebp+ninbuffersize], eax
call    ds:getcurrentprocessid
push    eax
lea     ecx, [ebp+var_19c]
call    sub_40b632
lea     eax, ds:0eh[ebx*2]
mov     [ebp+lpinbuffer], edi
cmp     eax, 10h
jnb     short loc_40a6c6
mov     eax, 80070057h
mov     [ebp+hobject], eax
jmp     short loc_40a6e3
mov     edx, eax
lea     ecx, [ebp+lpinbuffer]
call    sub_40f92c
mov     [ebp+hobject], eax
test    eax, eax
jns     short loc_40a72f
mov     edi, [ebp+lpinbuffer]
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a70b
test    byte ptr [ecx+1ch], 1
jz      short loc_40a70b
push    eax
push    dword ptr [ecx+14h]
mov     edx, offset stru_406d20
push    dword ptr [ecx+10h]
push    0bh
pop     ecx
call    sub_408951
test    edi, edi
jz      short loc_40a719
push    10h
push    edi
call    sub_417320
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_40a724
push    esi
call    sub_41731b
pop     ecx
mov     eax, [ebp+hobject]
jmp     loc_40ab3c
mov     eax, [ebp+lpinbuffer]
mov     ecx, [ebp+var_19c]
mov     [eax], ecx
mov     ecx, [ebp+var_198]
mov     [eax+4], ecx
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a784
test    byte ptr [ecx+1ch], 4
jz      short loc_40a784
cmp     [ebp+arg_0], 0
mov     eax, offset atrue
jnz     short loc_40a76a
mov     eax, offset afalse
push    eax
push    dword ptr [ecx+14h]
mov     edx, offset stru_406d20
push    dword ptr [ecx+10h]
push    0ch
pop     ecx
call    sub_40a55a
mov     eax, [ebp+lpinbuffer]
movzx   ecx, [ebp+arg_0]
or      ecx, [ebp+var_194]
push    ebx
push    esi
mov     [eax+8], ecx
mov     [eax+0ch], bx
add     eax, 0eh
push    ebx
push    eax
call    _wmemcpy_s
mov     ecx, [ebp+var_180]
lea     eax, [ebp+hobject]
add     esp, 10h
mov     [ebp+outbuffer], edi
mov     [ebp+noutbuffersize], 4
mov     [ebp+hobject], edi
push    100000h
push    eax
call    sub_40c961
mov     ebx, eax
test    ebx, ebx
jns     short loc_40a834
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a7ff
test    byte ptr [ecx+1ch], 1
jz      short loc_40a7ff
push    ebx
push    dword ptr [ecx+14h]
mov     edx, offset stru_406d20
push    dword ptr [ecx+10h]
push    0dh
pop     ecx
call    sub_408951
cmp     [ebp+hobject], edi
jz      short loc_40a813
push    [ebp+hobject]
call    ds:closehandle
push    10h
push    [ebp+lpinbuffer]
call    sub_417320
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_40a82d
push    esi
call    sub_41731b
pop     ecx
mov     eax, ebx
jmp     loc_40ab3c
mov     ebx, [ebp+lpnamedpipename]
lea     eax, [ebp+noutbuffersize]
push    edi
push    eax
push    [ebp+noutbuffersize]
lea     eax, [ebp+outbuffer]
push    eax
mov     eax, [ebp+ninbuffersize]
push    eax
push    [ebp+lpinbuffer]
push    ebx
call    ds:callnamedpipew
test    eax, eax
jnz     loc_40a9cc
call    sub_40fba5
mov     [ebp+outbuffer], eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40a89f
test    byte ptr [ecx+1ch], 1
jz      short loc_40a89f
push    eax
push    ebx
push    dword ptr [ecx+14h]
mov     edx, offset stru_406d20
push    dword ptr [ecx+10h]
push    0eh
pop     ecx
call    sub_408904
lea     eax, [ebp+var_190]
push    eax
call    sub_409778
mov     ebx, [ebp+var_190]
test    ebx, ebx
jz      loc_40a9bc
call    sub_40d864
push    eax
push    [ebp+outbuffer]
mov     ecx, ebx
mov     [ebp+lpnamedpipename], eax
push    offset aupdatecallname
call    sub_40d81b
cmp     dword_42c140, 5
jbe     loc_40a9bc
push    2000h
push    edi
call    sub_4083f9
test    al, al
jz      loc_40a9bc
call    sub_40ca1c
mov     [ebp+var_179], al
lea     ecx, [ebp+var_7c]
lea     eax, [ebp+var_179]
mov     [ebp+var_88], edi
mov     [ebp+var_8c], eax
mov     [ebp+var_84], 1
mov     [ebp+var_80], edi
mov     edx, [ebx+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
lea     edx, [ebx+18h]
lea     ecx, [ebp+var_5c]
call    sub_40843c
lea     eax, [ebp+lpnamedpipename]
mov     [ebp+var_48], edi
mov     [ebp+var_4c], eax
mov     ecx, ebx
mov     [ebp+var_44], 4
mov     [ebp+var_40], edi
mov     al, [ebx+10h]
mov     [ebp+var_17a], al
lea     eax, [ebp+var_17a]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_38], edi
mov     [ebp+var_34], 1
mov     [ebp+var_30], edi
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
lea     eax, [ebp+outbuffer]
mov     [ebp+var_18], edi
mov     [ebp+var_1c], eax
mov     [ebp+var_14], 4
mov     [ebp+var_10], edi
lea     eax, [ebp+var_ac]
mov     edx, offset dword_4076c8
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_190]
call    sub_409748
jmp     loc_40ab05
cmp     [ebp+noutbuffersize], 4
jz      short loc_40aa0d
cmp     [ebp+hobject], edi
jz      short loc_40a9e9
push    [ebp+hobject]
call    ds:closehandle
push    10h
push    [ebp+lpinbuffer]
call    sub_417320
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_40aa03
push    esi
call    sub_41731b
pop     ecx
mov     eax, 8007000dh
jmp     loc_40ab3c
mov     eax, off_42c118
mov     ecx, offset off_42c118
cmp     eax, ecx
jz      short loc_40aa44
test    byte ptr [eax+1ch], 4
jz      short loc_40aa44
push    [ebp+outbuffer]
mov     edx, offset stru_406d20
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    0fh
pop     ecx
call    sub_408951
mov     eax, off_42c118
mov     ecx, offset off_42c118
cmp     [ebp+outbuffer], 1
jnz     short loc_40aa75
cmp     eax, ecx
jz      short loc_40aa6a
test    byte ptr [eax+1ch], 4
jz      short loc_40aa6a
push    dword ptr [eax+14h]
mov     edx, offset stru_406d20
push    dword ptr [eax+10h]
push    10h
pop     ecx
call    sub_408740
mov     [ebp+outbuffer], edi
jmp     loc_40ab05
mov     ebx, [ebp+var_180]
cmp     eax, ecx
jz      short loc_40aab5
test    byte ptr [eax+1ch], 4
jz      short loc_40aab5
xor     eax, eax
mov     ecx, ebx
mov     [ebp+var_e0], ax
lea     eax, [ebp+var_e0]
push    eax
call    sub_40c93d
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406d20
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    11h
pop     ecx
call    sub_4088bd
mov     ecx, [ebp+hobject]
or      edx, 0ffffffffh
call    sub_40ea05
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40ab05
test    byte ptr [eax+1ch], 4
jz      short loc_40ab05
xor     eax, eax
mov     ecx, ebx
mov     [ebp+var_e0], ax
lea     eax, [ebp+var_e0]
push    eax
call    sub_40c93d
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406d20
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    12h
pop     ecx
call    sub_4088bd
cmp     [ebp+hobject], 0
mov     edi, [ebp+outbuffer]
jz      short loc_40ab20
push    [ebp+hobject]
call    ds:closehandle
push    10h
push    [ebp+lpinbuffer]
call    sub_417320
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_40ab3a
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 5ch
push    ebx
push    esi
mov     [ebp+var_40], ecx
xor     ebx, ebx
push    edi
lea     ecx, [ebp+block]
mov     [ebp+var_38], edx
mov     [ebp+block], ebx
call    sub_40a41c
mov     esi, eax
test    esi, esi
jns     short loc_40abac
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40ab97
test    byte ptr [ecx+1ch], 1
jz      short loc_40ab97
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406d20
push    dword ptr [ecx+10h]
push    19h
pop     ecx
call    sub_408951
cmp     [ebp+block], ebx
jz      short loc_40aba5
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     eax, esi
jmp     loc_40afe9
mov     edx, [ebp+block]
or      [ebp+hobject], 0ffffffffh
push    ecx
push    ecx
push    ebx
push    3
push    5
push    80000000h
lea     ecx, [ebp+hobject]
call    sub_40efd7
mov     esi, eax
test    esi, esi
jns     short loc_40ac06
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40abf5
test    byte ptr [ecx+1ch], 1
jz      short loc_40abf5
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406d20
push    dword ptr [ecx+10h]
push    1ah
pop     ecx
call    sub_408951
cmp     [ebp+hobject], 0ffffffffh
jz      short loc_40ab97
push    [ebp+hobject]
call    ds:closehandle
jmp     short loc_40ab97
mov     esi, [ebp+hobject]
lea     eax, [ebp+block]
mov     [ebp+var_44], eax
lea     eax, [ebp+filesize]
push    eax
push    esi
mov     [ebp+var_48], bl
call    ds:getfilesizeex
test    eax, eax
jnz     short loc_40ac33
call    sub_40f0e3
mov     ecx, [ebp+var_54]
mov     edx, eax
mov     edi, dword ptr [ebp+var_58]
mov     dword ptr [ebp+var_18], edx
jmp     short loc_40ac3e
mov     edi, dword ptr [ebp+filesize]
mov     edx, ebx
mov     ecx, dword ptr [ebp+filesize+4]
mov     dword ptr [ebp+var_18], ebx
mov     [ebp+var_14], ecx
mov     dword ptr [ebp+var_10], edi
test    edx, edx
jns     short loc_40ac98
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40ac6e
test    byte ptr [eax+1ch], 1
jz      short loc_40ac6e
push    edx
push    dword ptr [eax+14h]
mov     edx, offset stru_406d20
push    dword ptr [eax+10h]
push    1ch
pop     ecx
call    sub_408951
lea     ecx, [ebp+var_48]
call    sub_40afee
cmp     esi, 0ffffffffh
jz      short loc_40ac82
push    esi
call    ds:closehandle
cmp     [ebp+block], ebx
jz      short loc_40ac90
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     eax, dword ptr [ebp+var_18]
jmp     loc_40afe9
cmp     ecx, ebx
ja      loc_40afa3
jb      short loc_40acae
cmp     edi, 200h
ja      loc_40afa3
mov     eax, edi
and     eax, 1
or      eax, ebx
jnz     loc_40afa3
cmp     ecx, ebx
ja      short loc_40acc8
cmp     edi, 12h
jb      loc_40afa3
mov     eax, ecx
mov     [ebp+str], ebx
mov     edx, edi
lea     ecx, [ebp+str]
shrd    edx, eax, 1
mov     [ebp+var_28], edx
inc     edx
call    sub_409ff0
mov     dword ptr [ebp+var_18], eax
test    eax, eax
jns     short loc_40ad25
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40ad0e
test    byte ptr [ecx+1ch], 1
jz      short loc_40ad0e
push    eax
push    dword ptr [ecx+14h]
mov     edx, offset stru_406d20
push    dword ptr [ecx+10h]
push    1eh
pop     ecx
call    sub_408951
cmp     [ebp+str], ebx
jz      loc_40ac6e
push    [ebp+str]
call    sub_41731b
pop     ecx
jmp     loc_40ac6e
mov     dword ptr [ebp+var_18], edi
lea     edx, [ebp+var_18]
mov     edi, [ebp+str]
mov     ecx, esi
push    edi
call    sub_40f066
mov     [ebp+str], eax
test    eax, eax
jns     short loc_40ad9a
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40ad65
test    byte ptr [ecx+1ch], 1
jz      short loc_40ad65
push    eax
push    dword ptr [ecx+14h]
mov     edx, offset stru_406d20
push    dword ptr [ecx+10h]
push    1fh
pop     ecx
call    sub_408951
test    edi, edi
jz      short loc_40ad70
push    edi
call    sub_41731b
pop     ecx
lea     ecx, [ebp+var_48]
call    sub_40afee
cmp     esi, 0ffffffffh
jz      short loc_40ad84
push    esi
call    ds:closehandle
cmp     [ebp+block], ebx
jz      short loc_40ad92
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     eax, [ebp+str]
jmp     loc_40afe9
mov     eax, dword ptr [ebp+var_10]
mov     ecx, [ebp+var_14]
cmp     dword ptr [ebp+var_18], eax
jnz     loc_40af72
cmp     ebx, ecx
jnz     loc_40af72
mov     esi, offset apipe
mov     [ebp+var_14], 8
sub     esi, edi
mov     edx, edi
mov     [ebp+str], esi
mov     esi, [ebp+str]
movzx   eax, word ptr [edx]
mov     [ebp+var_1c], eax
movzx   esi, word ptr [edx+esi]
cmp     si, ax
mov     [ebp+var_20], esi
mov     esi, [ebp+hobject]
mov     eax, dword ptr [ebp+var_10]
jnz     short loc_40adea
add     edx, 2
sub     [ebp+var_14], 1
jnz     short loc_40adc4
jmp     short loc_40adf7
mov     edx, [ebp+var_1c]
cmp     word ptr [ebp+var_20], dx
sbb     ebx, ebx
and     ebx, 0fffffffeh
inc     ebx
test    ebx, ebx
jnz     loc_40af72
mov     eax, [ebp+var_28]
xor     ecx, ecx
mov     [edi+eax*2], cx
lea     eax, [ebp+var_58]
push    eax
lea     eax, [ebp+var_34]
push    eax
lea     eax, [ebp+var_50]
push    eax
lea     eax, [ebp+arglist]
push    eax
lea     eax, [edi+12h]
push    offset axi64xxi64x
push    eax
call    sub_40a49d
add     esp, 18h
cmp     eax, 4
jz      short loc_40ae7c
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40ae54
test    byte ptr [eax+1ch], 1
jz      short loc_40ae54
push    edi
push    dword ptr [eax+14h]
mov     edx, offset stru_406d20
push    dword ptr [eax+10h]
push    21h
pop     ecx
call    sub_4088bd
test    edi, edi
jz      short loc_40ae5f
push    edi
call    sub_41731b
pop     ecx
lea     ecx, [ebp+var_48]
call    sub_40afee
cmp     esi, 0ffffffffh
jz      short loc_40ae73
push    esi
call    ds:closehandle
cmp     [ebp+block], 0
jmp     loc_40afd9
mov     eax, dword ptr [ebp+var_58]
mov     ebx, [ebp+var_38]
mov     ecx, [ebp+var_54]
mov     dword ptr [ebp+filesize], eax
mov     eax, [ebp+var_34]
mov     [ebp+var_28], eax
lea     eax, [ebp+filesize]
mov     dword ptr [ebp+filesize+4], ecx
lea     ecx, [ebx+0ch]
push    eax
call    sub_40b68b
push    dword ptr [ebp+arglist]
lea     ecx, [ebp+filesize]
call    sub_40b632
push    eax
mov     ecx, ebx
call    sub_40b68b
mov     edx, [ebx]
mov     ecx, [ebx+4]
cmp     edx, dword ptr [ebp+var_50]
jnz     short loc_40af18
cmp     ecx, [ebp+var_4c]
jnz     short loc_40af18
mov     eax, [ebp+var_40]
mov     [eax], edi
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40aeea
test    byte ptr [eax+1ch], 4
jz      short loc_40aeea
push    edi
push    dword ptr [eax+14h]
mov     edx, offset stru_406d20
push    dword ptr [eax+10h]
push    23h
pop     ecx
call    sub_4088bd
lea     ecx, [ebp+var_48]
mov     [ebp+var_48], 1
call    sub_40afee
cmp     esi, 0ffffffffh
jz      short loc_40af02
push    esi
call    ds:closehandle
cmp     [ebp+block], 0
jz      short loc_40af11
push    [ebp+block]
call    sub_41731b
pop     ecx
xor     eax, eax
jmp     loc_40afe9
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40af3d
test    byte ptr [eax+1ch], 1
jz      short loc_40af3d
push    ecx
push    edx
push    [ebp+var_4c]
push    dword ptr [ebp+var_50]
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
call    sub_40a52d
test    edi, edi
jz      short loc_40af48
push    edi
call    sub_41731b
pop     ecx
lea     ecx, [ebp+var_48]
call    sub_40afee
cmp     esi, 0ffffffffh
jz      short loc_40af5c
push    esi
call    ds:closehandle
cmp     [ebp+block], 0
jz      short loc_40af6b
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     eax, 80070426h
jmp     short loc_40afe9
mov     edx, off_42c118
cmp     edx, offset off_42c118
jz      loc_40ae54
test    byte ptr [edx+1ch], 1
jz      loc_40ae54
push    ecx
push    eax
push    dword ptr [ebp+var_18]
push    dword ptr [edx+14h]
push    dword ptr [edx+10h]
call    sub_40a4d9
jmp     loc_40ae54
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40afc2
test    byte ptr [eax+1ch], 1
jz      short loc_40afc2
push    ecx
push    edi
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
call    sub_40a506
lea     ecx, [ebp+var_48]
call    sub_40afee
cmp     esi, 0ffffffffh
jz      short loc_40afd6
push    esi
call    ds:closehandle
cmp     [ebp+block], ebx
jz      short loc_40afe4
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     eax, 80070570h
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    esi
mov     esi, ecx
cmp     byte ptr [esi], 0
jnz     short loc_40b034
mov     ecx, [esi+4]
mov     ecx, [ecx]
call    sub_409e4c
mov     edx, off_42c118
cmp     edx, offset off_42c118
jz      short loc_40b034
test    byte ptr [edx+1ch], 4
jz      short loc_40b034
mov     ecx, [esi+4]
push    dword ptr [ecx]
push    eax
push    dword ptr [edx+14h]
push    dword ptr [edx+10h]
mov     edx, offset stru_406d20
push    1bh
pop     ecx
call    sub_40875c
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     ecx, 1000h
jb      short loc_40b066
lea     eax, [ecx+23h]
cmp     eax, ecx
ja      short loc_40b04b
or      eax, 0ffffffffh
push    eax
call    sub_42a968
pop     ecx
mov     ecx, eax
test    ecx, ecx
jz      __invalid_parameter_noinfo_noreturn
lea     eax, [ecx+23h]
and     eax, 0ffffffe0h
mov     [eax-4], ecx
retn
test    ecx, ecx
jz      short loc_40b072
push    ecx
call    sub_42a968
pop     ecx
retn
xor     eax, eax
retn
push    ebp
mov     ebp, esp
push    esi
xor     esi, esi
mov     eax, 80070057h
push    edi
test    edx, edx
jz      short loc_40b08d
cmp     edx, 7fffffffh
jbe     short loc_40b08f
mov     esi, eax
test    esi, esi
js      short loc_40b0e5
mov     edi, [ebp+arg_4]
cmp     edi, 7ffffffeh
jbe     short loc_40b0a2
mov     esi, eax
jmp     short loc_40b0e9
mov     esi, edx
test    edx, edx
jz      short loc_40b0ce
sub     edi, edx
mov     edx, [ebp+arg_0]
sub     edx, ecx
lea     eax, [edi+esi]
test    eax, eax
jz      short loc_40b0ca
movzx   eax, word ptr [edx+ecx]
test    ax, ax
jz      short loc_40b0ca
mov     [ecx], ax
add     ecx, 2
sub     esi, 1
jnz     short loc_40b0af
test    esi, esi
jnz     short loc_40b0d1
sub     ecx, 2
xor     eax, eax
neg     esi
sbb     esi, esi
and     esi, 7ff8ff86h
add     esi, 8007007ah
jmp     short loc_40b0eb
test    edx, edx
jz      short loc_40b0ee
xor     eax, eax
mov     [ecx], ax
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_8]
push    esi
push    edi
xor     edi, edi
test    ecx, ecx
jz      short loc_40b121
mov     edx, ecx
lea     esi, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, di
jnz     short loc_40b109
sub     edx, esi
sar     edx, 1
lea     edx, ds:2[edx*2]
jmp     short loc_40b124
push    0ah
pop     edx
test    ecx, ecx
jnz     short loc_40b12d
mov     ecx, offset anull
push    edi
push    8
lea     eax, [ebp+arg_c]
push    eax
push    edx
push    ecx
push    1ch
push    offset stru_406e14
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     edi
pop     esi
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
push    0
push    4
lea     eax, [ebp+arg_18]
push    eax
push    8
lea     eax, [ebp+arg_10]
push    eax
push    8
lea     eax, [ebp+arg_8]
push    eax
push    21h
push    offset stru_406e14
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 30h
pop     ebp
retn    1ch
xor     eax, eax
test    byte ptr [ecx+8], 3
jnz     short locret_40b19a
cmp     [ecx+4], eax
jnz     short loc_40b198
cmp     [ecx], eax
jz      short locret_40b19a
mov     al, 1
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     eax, [ecx+4]
cmp     eax, [edx+4]
jnz     short loc_40b1bb
mov     eax, [ecx]
cmp     eax, [edx]
jnz     short loc_40b1bb
mov     eax, [ecx+8]
cmp     eax, [edx+8]
jnz     short loc_40b1bb
mov     al, 1
jmp     short loc_40b1bd
xor     al, al
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 270h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
push    ebx
push    esi
mov     esi, edx
mov     ebx, ecx
push    edi
test    esi, esi
jnz     short loc_40b1e9
mov     eax, 80070057h
jmp     loc_40b5f4
lea     ecx, [ebp+versioninformation]
call    sub_410a2b
mov     edi, eax
test    edi, edi
jns     short loc_40b229
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40b222
test    byte ptr [ecx+1ch], 1
jz      short loc_40b222
push    edi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406e14
push    dword ptr [ecx+10h]
push    0ah
pop     ecx
call    sub_408951
mov     eax, edi
jmp     loc_40b5f4
xor     edi, edi
cmp     [ebp+versioninformation.dwmajorversion], 5
mov     eax, [ebp+arg_0]
jbe     short loc_40b273
push    esi
or      eax, 1000h
push    0
push    eax
mov     [ebp+arg_0], eax
call    ds:openprocess
mov     [ebx], eax
test    eax, eax
jnz     short loc_40b2cd
mov     ecx, esi
call    sub_40ea64
mov     [ebp+var_264], eax
test    eax, eax
jns     short loc_40b2d5
cmp     eax, 80070057h
jz      loc_40b48c
mov     eax, [ebp+arg_0]
and     eax, 0ffffefffh
push    esi
or      eax, 400h
push    0
push    eax
mov     [ebp+arg_0], eax
call    ds:openprocess
mov     [ebx], eax
test    eax, eax
jnz     loc_40b455
mov     ecx, esi
call    sub_40ea64
mov     [ebp+var_264], eax
test    eax, eax
jns     loc_40b45d
test    edi, edi
jnz     short loc_40b2be
cmp     eax, 80070005h
jnz     short loc_40b2be
call    sub_410d15
mov     [ebp+var_264], eax
test    eax, eax
js      short loc_40b300
inc     edi
cmp     edi, 2
jb      loc_40b22b
jmp     loc_40b48c
xor     eax, eax
mov     [ebp+var_264], eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      loc_40b492
test    byte ptr [ecx+1ch], 10h
jz      loc_40b492
push    edi
push    esi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    0bh
jmp     loc_40b47b
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40b329
test    byte ptr [ecx+1ch], 4
jz      short loc_40b329
push    eax
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406e14
push    dword ptr [ecx+10h]
push    0dh
pop     ecx
call    sub_4098c0
lea     eax, [ebp+var_270]
push    eax
call    sub_409778
mov     edi, [ebp+var_270]
test    edi, edi
jz      loc_40b448
call    sub_40d864
push    eax
push    [ebp+var_264]
mov     ecx, edi
mov     [ebp+var_268], eax
push    offset aupdateprocessi
call    sub_40d81b
cmp     dword_42c140, 5
jbe     loc_40b448
push    2000h
xor     ebx, ebx
push    ebx
call    sub_4083f9
test    al, al
jz      loc_40b448
call    sub_40ca1c
mov     [ebp+var_25d], al
lea     ecx, [ebp+var_7c]
lea     eax, [ebp+var_25d]
mov     [ebp+var_88], ebx
mov     [ebp+var_8c], eax
mov     [ebp+var_84], 1
mov     [ebp+var_80], ebx
mov     edx, [edi+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
lea     edx, [edi+18h]
lea     ecx, [ebp+var_5c]
call    sub_40843c
lea     eax, [ebp+var_268]
mov     [ebp+var_48], ebx
mov     [ebp+var_4c], eax
mov     ecx, edi
mov     [ebp+var_44], 4
mov     [ebp+var_40], ebx
mov     al, [edi+10h]
mov     [ebp+var_25e], al
lea     eax, [ebp+var_25e]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_38], ebx
mov     [ebp+var_34], 1
mov     [ebp+var_30], ebx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
lea     eax, [ebp+var_264]
mov     [ebp+var_18], ebx
mov     [ebp+var_1c], eax
mov     [ebp+var_14], 4
mov     [ebp+var_10], ebx
lea     eax, [ebp+var_ac]
mov     edx, offset dword_407ba4
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_270]
call    sub_409748
jmp     short loc_40b486
xor     eax, eax
mov     [ebp+var_264], eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40b492
test    byte ptr [ecx+1ch], 10h
jz      short loc_40b492
push    edi
push    esi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    0ch
mov     edx, offset stru_406e14
pop     ecx
call    sub_4098c0
mov     eax, [ebp+var_264]
mov     ecx, off_42c118
test    eax, eax
jns     short loc_40b4c7
cmp     eax, 80070057h
jz      short loc_40b4c7
cmp     eax, 80070005h
jz      short loc_40b4c7
cmp     ecx, offset off_42c118
jz      short loc_40b4c7
test    byte ptr [ecx+1ch], 1
jz      short loc_40b4c7
push    eax
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406e14
push    dword ptr [ecx+10h]
push    0eh
pop     ecx
call    sub_4098c0
lea     eax, [ebp+var_270]
push    eax
call    sub_409778
mov     esi, [ebp+var_270]
test    esi, esi
jz      loc_40b5e3
cmp     dword_42c140, 5
jbe     loc_40b5e3
push    2000h
xor     ebx, ebx
push    ebx
call    sub_4083f9
test    al, al
jz      loc_40b5e3
call    sub_40ca1c
mov     [ebp+var_25e], al
lea     ecx, [ebp+var_8c]
lea     eax, [ebp+var_25e]
mov     [ebp+var_98], ebx
mov     [ebp+var_9c], eax
mov     [ebp+var_94], 1
mov     [ebp+var_90], ebx
mov     edx, [esi+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_7c]
call    sub_40843c
lea     edx, [esi+18h]
lea     ecx, [ebp+var_6c]
call    sub_40843c
call    sub_40d864
mov     [ebp+var_268], eax
mov     ecx, esi
push    4
lea     eax, [ebp+var_268]
mov     [ebp+var_58], ebx
pop     edi
mov     [ebp+var_5c], eax
mov     [ebp+var_54], edi
mov     [ebp+var_50], ebx
mov     al, [esi+10h]
mov     [ebp+var_25d], al
lea     eax, [ebp+var_25d]
mov     [ebp+var_4c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_48], ebx
mov     [ebp+var_44], 1
mov     [ebp+var_40], ebx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_3c]
call    sub_40843c
lea     eax, [ebp+var_264]
mov     [ebp+var_28], ebx
mov     [ebp+var_2c], eax
lea     eax, [ebp+arg_0]
mov     [ebp+var_24], edi
mov     [ebp+var_20], ebx
mov     [ebp+var_1c], eax
mov     [ebp+var_18], ebx
mov     [ebp+var_14], edi
mov     [ebp+var_10], ebx
lea     eax, [ebp+var_bc]
mov     edx, offset word_407962
push    eax
push    0bh
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_270]
call    sub_409748
mov     eax, [ebp+var_264]
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 20h
lea     eax, [ebp+usertime]
push    eax
lea     eax, [ebp+kerneltime]
push    eax
lea     eax, [ebp+exittime]
push    eax
lea     eax, [ebp+creationtime]
push    eax
push    ecx
call    ds:getprocesstimes
test    eax, eax
jnz     short loc_40b62a
mov     edx, eax
leave
retn
mov     edx, [ebp+creationtime.dwhighdatetime]
mov     eax, [ebp+creationtime.dwlowdatetime]
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     edx, [ebp+arg_0]
push    ebx
push    edi
xor     edi, edi
mov     ebx, ecx
push    edi
lea     ecx, [ebp+hobject]
mov     [ebp+hobject], edi
call    sub_40b1c1
test    eax, eax
js      short loc_40b664
mov     ecx, [ebp+hobject]
call    sub_40b605
cmp     [ebp+hobject], 0
mov     edi, eax
mov     [ebp+var_8], edx
jmp     short loc_40b66a
cmp     [ebp+hobject], edi
mov     [ebp+var_8], edi
jz      short loc_40b675
push    [ebp+hobject]
call    ds:closehandle
mov     eax, [ebp+var_8]
mov     [ebx+4], eax
mov     eax, [ebp+arg_0]
mov     [ebx], edi
mov     [ebx+8], eax
mov     eax, ebx
pop     edi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
cmp     ecx, edx
jz      short loc_40b6a5
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
mov     [ecx+4], eax
mov     eax, [edx+8]
mov     [ecx+8], eax
mov     eax, ecx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 3f8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
xor     ebx, ebx
push    ebx
push    2
mov     [ebp+var_3ec], ecx
mov     [ebp+var_3e0], edi
call    ds:createtoolhelp32snapshot
mov     esi, eax
mov     dword ptr [ebp+var_3dc], ebx
cmp     esi, 0ffffffffh
jnz     loc_40b981
call    sub_40fba5
mov     dword ptr [ebp+var_3dc], eax
lea     eax, [ebp+var_3e8]
push    eax
call    sub_409778
inc     ebx
mov     esi, 2000h
cmp     [ebp+var_3e8], 0
jz      loc_40b817
cmp     dword_42c140, 5
jbe     loc_40b817
push    esi
push    0
call    sub_4083f9
test    al, al
jz      loc_40b817
call    sub_40ca1c
and     [ebp+var_88], 0
lea     ecx, [ebp+var_7c]
and     [ebp+var_80], 0
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_3e8]
mov     [ebp+var_84], ebx
mov     edx, [eax+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
mov     edx, [ebp+var_3e8]
lea     ecx, [ebp+var_5c]
lea     edx, [edx+18h]
call    sub_40843c
call    sub_40d864
mov     ecx, [ebp+var_3e8]
xor     edx, edx
mov     [ebp+var_3e0], eax
lea     eax, [ebp+var_3e0]
mov     [ebp+var_4c], eax
mov     [ebp+var_48], edx
mov     [ebp+var_44], 4
mov     [ebp+var_40], edx
mov     al, [ecx+10h]
mov     [ebp+var_3ce], al
lea     eax, [ebp+var_3ce]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_38], edx
mov     [ebp+var_34], ebx
mov     [ebp+var_30], edx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
xor     ecx, ecx
mov     [ebp+var_14], 4
lea     eax, [ebp+var_3ec]
mov     [ebp+var_3ec], ecx
mov     [ebp+var_1c], eax
mov     [ebp+var_18], ecx
mov     [ebp+var_10], ecx
lea     eax, [ebp+var_ac]
mov     edx, offset word_407856
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_3e8]
call    sub_409748
lea     eax, [ebp+var_3d8]
push    eax
call    sub_409778
mov     ecx, [ebp+var_3d8]
test    ecx, ecx
jz      loc_40b93d
call    sub_40d864
push    eax
push    dword ptr [ebp+var_3dc]
mov     [ebp+var_3e0], eax
push    offset aupdateprocessi_0
call    sub_40d81b
cmp     dword_42c140, 5
jbe     loc_40b93d
push    esi
xor     esi, esi
push    esi
call    sub_4083f9
test    al, al
jz      loc_40b93d
call    sub_40ca1c
mov     [ebp+var_88], esi
lea     ecx, [ebp+var_7c]
mov     [ebp+var_80], esi
mov     esi, [ebp+var_3d8]
mov     [ebp+var_3ce], al
lea     eax, [ebp+var_3ce]
mov     [ebp+var_8c], eax
mov     [ebp+var_84], ebx
mov     edx, [esi+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
lea     edx, [esi+18h]
lea     ecx, [ebp+var_5c]
call    sub_40843c
xor     ecx, ecx
mov     [ebp+var_44], 4
lea     eax, [ebp+var_3e0]
mov     [ebp+var_48], ecx
mov     [ebp+var_4c], eax
mov     [ebp+var_40], ecx
mov     al, [esi+10h]
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
mov     [ebp+var_38], ecx
mov     [ebp+var_30], ecx
mov     ecx, esi
push    eax
mov     [ebp+var_34], ebx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
and     [ebp+var_18], 0
lea     eax, [ebp+var_3dc]
and     [ebp+var_10], 0
mov     [ebp+var_1c], eax
mov     [ebp+var_14], 4
lea     eax, [ebp+var_ac]
mov     edx, offset byte_407b0f
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_3d8]
call    sub_409748
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40b972
test    [eax+1ch], bl
jz      short loc_40b972
push    dword ptr [ebp+var_3dc]
mov     edx, offset stru_406e14
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    12h
pop     ecx
call    sub_408951
xor     eax, eax
mov     [edi], eax
mov     [edi+4], eax
mov     [edi+8], eax
jmp     loc_40bcd5
push    228h
lea     eax, [ebp+pe.cntusage]
mov     [ebp+pe.dwsize], 22ch
push    ebx
push    eax
call    _memset
add     esp, 0ch
lea     eax, [ebp+pe]
push    eax
push    esi
call    ds:process32firstw
xor     ebx, ebx
inc     ebx
jmp     short loc_40b9d6
mov     ecx, [ebp+var_3ec]
mov     eax, [ebp+pe.th32processid]
cmp     eax, [ecx+8]
jz      loc_40bce8
lea     eax, [ebp+pe]
push    eax
push    esi
call    ds:process32nextw
test    eax, eax
jnz     short loc_40b9b3
call    sub_40a4c6
lea     ecx, [eax+7ff8ffeeh]
neg     ecx
sbb     ecx, ecx
and     ecx, eax
mov     dword ptr [ebp+var_3dc], ecx
jge     loc_40bb56
lea     eax, [ebp+var_3d8]
push    eax
call    sub_409778
mov     ecx, [ebp+var_3d8]
test    ecx, ecx
jz      loc_40bb21
call    sub_40d864
push    eax
push    dword ptr [ebp+var_3dc]
mov     [ebp+var_3e4], eax
push    offset aupdateprocessi_1
call    sub_40d81b
cmp     dword_42c140, 5
jbe     loc_40bb21
push    2000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40bb21
call    sub_40ca1c
mov     edx, [ebp+var_3d8]
lea     ecx, [ebp+var_7c]
and     [ebp+var_88], 0
and     [ebp+var_80], 0
mov     [ebp+var_3ce], al
lea     eax, [ebp+var_3ce]
mov     [ebp+var_8c], eax
mov     [ebp+var_84], ebx
mov     edx, [edx+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
mov     edx, [ebp+var_3d8]
lea     ecx, [ebp+var_5c]
lea     edx, [edx+18h]
call    sub_40843c
mov     ecx, [ebp+var_3d8]
lea     eax, [ebp+var_3e4]
xor     edx, edx
mov     [ebp+var_4c], eax
mov     [ebp+var_48], edx
mov     [ebp+var_44], 4
mov     [ebp+var_40], edx
mov     al, [ecx+10h]
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_38], edx
mov     [ebp+var_34], ebx
mov     [ebp+var_30], edx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
and     [ebp+var_18], 0
lea     eax, [ebp+var_3dc]
and     [ebp+var_10], 0
mov     [ebp+var_1c], eax
mov     [ebp+var_14], 4
lea     eax, [ebp+var_ac]
mov     edx, offset dword_407a84
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_3d8]
call    sub_409748
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40bb9b
test    [eax+1ch], bl
jz      short loc_40bb5b
push    dword ptr [ebp+var_3dc]
mov     edx, offset stru_406e14
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    13h
pop     ecx
call    sub_408951
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40bb9b
test    [eax+1ch], bl
jz      short loc_40bb9b
mov     ecx, [ebp+var_3ec]
xor     eax, eax
mov     [ebp+var_e0], ax
lea     eax, [ebp+var_e0]
push    eax
call    sub_40c93d
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406e14
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    1ah
pop     ecx
call    sub_4088bd
lea     eax, [ebp+var_3d8]
push    eax
call    sub_409778
cmp     [ebp+var_3d8], 0
jz      loc_40bcb9
cmp     dword_42c140, 5
jbe     loc_40bcb9
push    2000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40bcb9
call    sub_40ca1c
and     [ebp+var_88], 0
lea     ecx, [ebp+var_7c]
and     [ebp+var_80], 0
mov     [ebp+var_3ce], al
lea     eax, [ebp+var_3ce]
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_3d8]
mov     [ebp+var_84], ebx
mov     edx, [eax+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
mov     edx, [ebp+var_3d8]
lea     ecx, [ebp+var_5c]
lea     edx, [edx+18h]
call    sub_40843c
call    sub_40d864
mov     ecx, [ebp+var_3d8]
xor     edx, edx
mov     [ebp+var_3e4], eax
lea     eax, [ebp+var_3e4]
mov     [ebp+var_4c], eax
mov     [ebp+var_48], edx
mov     [ebp+var_44], 4
mov     [ebp+var_40], edx
mov     al, [ecx+10h]
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_38], edx
mov     [ebp+var_34], ebx
mov     [ebp+var_30], edx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
xor     ecx, ecx
mov     [ebp+var_14], 4
lea     eax, [ebp+var_3e0]
mov     [ebp+var_3e0], ecx
mov     [ebp+var_1c], eax
mov     [ebp+var_18], ecx
mov     [ebp+var_10], ecx
lea     eax, [ebp+var_ac]
mov     edx, offset word_407856
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_3d8]
call    sub_409748
xor     eax, eax
mov     [edi], eax
mov     [edi+4], eax
push    esi
mov     [edi+8], eax
call    ds:closehandle
mov     ecx, [ebp+var_8]
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    4
mov     eax, [ebp+pe.th32parentprocessid]
test    eax, eax
jz      loc_40bb56
mov     edx, off_42c118
cmp     edx, offset off_42c118
jz      short loc_40bd3e
test    byte ptr [edx+1ch], 4
jz      short loc_40bd3e
xor     eax, eax
mov     [ebp+var_114], ax
lea     eax, [ebp+var_114]
push    eax
call    sub_40c93d
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406e14
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    14h
pop     ecx
call    sub_4088bd
mov     eax, [ebp+pe.th32parentprocessid]
push    eax
lea     ecx, [ebp+var_3f8]
call    sub_40b632
lea     ecx, [ebp+var_3f8]
call    sub_40b187
test    al, al
jz      loc_40c4f6
mov     eax, [ebp+var_3ec]
mov     ecx, [ebp+var_3f4]
mov     edx, [eax]
cmp     ecx, [eax+4]
ja      loc_40c4f6
jb      short loc_40bd82
cmp     [ebp+var_3f8], edx
ja      loc_40c4f6
push    eax
lea     ecx, [ebp+var_3f8]
call    sub_40b19b
test    al, al
jz      loc_40bf2f
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40bdfa
test    byte ptr [eax+1ch], 2
jz      short loc_40bdfa
xor     eax, eax
mov     [ebp+var_114], ax
lea     eax, [ebp+var_114]
push    eax
call    sub_40c93d
mov     ecx, [ebp+var_3ec]
mov     edi, eax
xor     eax, eax
mov     [ebp+var_e0], ax
lea     eax, [ebp+var_e0]
push    eax
call    sub_40c93d
push    edi
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406e14
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    15h
pop     ecx
call    sub_4098e8
mov     edi, [ebp+var_3e0]
lea     eax, [ebp+var_3e8]
push    eax
call    sub_409778
cmp     [ebp+var_3e8], 0
jz      loc_40bf1f
cmp     dword_42c140, 5
jbe     loc_40bf1f
push    2000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40bf1f
call    sub_40ca1c
and     [ebp+var_88], 0
lea     ecx, [ebp+var_7c]
and     [ebp+var_80], 0
mov     [ebp+var_3ce], al
lea     eax, [ebp+var_3ce]
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_3e8]
mov     [ebp+var_84], ebx
mov     edx, [eax+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
mov     edx, [ebp+var_3e8]
lea     ecx, [ebp+var_5c]
lea     edx, [edx+18h]
call    sub_40843c
call    sub_40d864
mov     ecx, [ebp+var_3e8]
xor     edx, edx
mov     [ebp+var_3e0], eax
lea     eax, [ebp+var_3e0]
mov     [ebp+var_4c], eax
mov     [ebp+var_48], edx
mov     [ebp+var_44], 4
mov     [ebp+var_40], edx
mov     al, [ecx+10h]
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_38], edx
mov     [ebp+var_34], ebx
mov     [ebp+var_30], edx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
mov     ecx, [ebp+var_3ec]
xor     eax, eax
mov     [ebp+var_e0], ax
lea     eax, [ebp+var_e0]
push    eax
call    sub_40c93d
mov     edx, eax
lea     ecx, [ebp+var_1c]
call    sub_408465
lea     eax, [ebp+var_ac]
mov     edx, offset byte_4077c9
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_3e8]
call    sub_409748
jmp     loc_40bb56
lea     eax, [ebp+pe]
mov     [ebp+pe.dwsize], 22ch
push    eax
push    esi
call    ds:process32firstw
test    eax, eax
jnz     loc_40c0ac
call    sub_40a4c6
mov     dword ptr [ebp+var_3dc], eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40bf81
test    [ecx+1ch], bl
jz      short loc_40bf81
push    eax
push    dword ptr [ecx+14h]
mov     edx, offset stru_406e14
push    dword ptr [ecx+10h]
push    16h
pop     ecx
call    sub_408951
lea     eax, [ebp+var_3e8]
push    eax
call    sub_409778
mov     ecx, [ebp+var_3e8]
test    ecx, ecx
jz      short loc_40bf1f
call    sub_40d864
push    eax
push    dword ptr [ebp+var_3dc]
mov     [ebp+var_3e0], eax
push    offset aupdateprocessi_2
call    sub_40d81b
cmp     dword_42c140, 5
jbe     loc_40bf1f
push    2000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40bf1f
call    sub_40ca1c
mov     edx, [ebp+var_3e8]
lea     ecx, [ebp+var_7c]
and     [ebp+var_88], 0
and     [ebp+var_80], 0
mov     [ebp+var_3ce], al
lea     eax, [ebp+var_3ce]
mov     [ebp+var_8c], eax
mov     [ebp+var_84], ebx
mov     edx, [edx+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
mov     edx, [ebp+var_3e8]
lea     ecx, [ebp+var_5c]
lea     edx, [edx+18h]
call    sub_40843c
mov     ecx, [ebp+var_3e8]
lea     eax, [ebp+var_3e0]
xor     edx, edx
mov     [ebp+var_4c], eax
mov     [ebp+var_48], edx
mov     [ebp+var_44], 4
mov     [ebp+var_40], edx
mov     al, [ecx+10h]
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_38], edx
mov     [ebp+var_34], ebx
mov     [ebp+var_30], edx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
and     [ebp+var_18], 0
lea     eax, [ebp+var_3dc]
and     [ebp+var_10], 0
mov     [ebp+var_1c], eax
mov     [ebp+var_14], 4
lea     eax, [ebp+var_ac]
mov     edx, offset dword_4079f8
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
jmp     loc_40bf1f
mov     eax, [ebp+var_3f0]
cmp     [ebp+pe.th32processid], eax
jz      loc_40c3ae
lea     eax, [ebp+pe]
push    eax
push    esi
call    ds:process32nextw
test    eax, eax
jnz     short loc_40c0ac
call    sub_40a4c6
mov     dword ptr [ebp+var_3dc], eax
cmp     eax, 80070012h
jz      loc_40c242
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40c10d
test    [ecx+1ch], bl
jz      short loc_40c10d
push    eax
push    dword ptr [ecx+14h]
mov     edx, offset stru_406e14
push    dword ptr [ecx+10h]
push    17h
pop     ecx
call    sub_408951
lea     eax, [ebp+var_3d8]
push    eax
call    sub_409778
mov     ecx, [ebp+var_3d8]
test    ecx, ecx
jz      loc_40c237
call    sub_40d864
push    eax
push    dword ptr [ebp+var_3dc]
mov     [ebp+var_3e4], eax
push    offset aupdateprocessi_1
call    sub_40d81b
cmp     dword_42c140, 5
jbe     loc_40c237
push    2000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40c237
call    sub_40ca1c
mov     edx, [ebp+var_3d8]
lea     ecx, [ebp+var_7c]
and     [ebp+var_88], 0
and     [ebp+var_80], 0
mov     [ebp+var_3ce], al
lea     eax, [ebp+var_3ce]
mov     [ebp+var_8c], eax
mov     [ebp+var_84], ebx
mov     edx, [edx+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
mov     edx, [ebp+var_3d8]
lea     ecx, [ebp+var_5c]
lea     edx, [edx+18h]
call    sub_40843c
mov     ecx, [ebp+var_3d8]
lea     eax, [ebp+var_3e4]
xor     edx, edx
mov     [ebp+var_4c], eax
mov     [ebp+var_48], edx
mov     [ebp+var_44], 4
mov     [ebp+var_40], edx
mov     al, [ecx+10h]
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_38], edx
mov     [ebp+var_34], ebx
mov     [ebp+var_30], edx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
and     [ebp+var_18], 0
lea     eax, [ebp+var_3dc]
and     [ebp+var_10], 0
mov     [ebp+var_1c], eax
mov     [ebp+var_14], 4
lea     eax, [ebp+var_ac]
mov     edx, offset dword_407a84
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_3d8]
call    sub_409748
and     dword ptr [ebp+var_3dc], 0
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40c2b2
test    [eax+1ch], bl
jz      short loc_40c2b2
mov     ecx, [ebp+var_3ec]
xor     eax, eax
mov     [ebp+var_e0], ax
lea     eax, [ebp+var_e0]
push    eax
call    sub_40c93d
mov     edi, eax
lea     ecx, [ebp+var_3f8]
xor     eax, eax
mov     [ebp+var_114], ax
lea     eax, [ebp+var_114]
push    eax
call    sub_40c93d
push    edi
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406e14
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    18h
pop     ecx
call    sub_4098e8
mov     edi, [ebp+var_3e0]
lea     eax, [ebp+var_3d8]
push    eax
call    sub_409778
cmp     [ebp+var_3d8], 0
jz      loc_40c656
cmp     dword_42c140, 5
jbe     loc_40c656
push    2000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40c656
call    sub_40ca1c
and     [ebp+var_78], 0
lea     ecx, [ebp+var_6c]
and     [ebp+var_70], 0
mov     [ebp+var_3ce], al
lea     eax, [ebp+var_3ce]
mov     [ebp+var_7c], eax
mov     eax, [ebp+var_3d8]
mov     [ebp+var_74], ebx
mov     edx, [eax+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_5c]
call    sub_40843c
mov     edx, [ebp+var_3d8]
lea     ecx, [ebp+var_4c]
lea     edx, [edx+18h]
call    sub_40843c
call    sub_40d864
mov     ecx, [ebp+var_3d8]
xor     edx, edx
mov     [ebp+var_3e4], eax
lea     eax, [ebp+var_3e4]
mov     [ebp+var_3c], eax
mov     [ebp+var_38], edx
mov     [ebp+var_34], 4
mov     [ebp+var_30], edx
mov     al, [ecx+10h]
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_2c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_28], edx
mov     [ebp+var_24], ebx
mov     [ebp+var_20], edx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_1c]
call    sub_40843c
lea     eax, [ebp+var_9c]
mov     edx, offset dword_4078e4
push    eax
push    9
push    ecx
push    ecx
call    sub_408330
jmp     loc_40c656
lea     eax, [ebp+var_3d8]
push    eax
call    sub_409778
cmp     [ebp+var_3d8], 0
jz      loc_40c4cf
cmp     dword_42c140, 5
jbe     loc_40c4cf
push    2000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40c4cf
call    sub_40ca1c
and     [ebp+var_88], 0
lea     ecx, [ebp+var_7c]
and     [ebp+var_80], 0
xor     ebx, ebx
mov     [ebp+var_3ce], al
inc     ebx
lea     eax, [ebp+var_3ce]
mov     [ebp+var_84], ebx
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_3d8]
mov     edx, [eax+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_6c]
call    sub_40843c
mov     edx, [ebp+var_3d8]
lea     ecx, [ebp+var_5c]
lea     edx, [edx+18h]
call    sub_40843c
call    sub_40d864
mov     ecx, [ebp+var_3d8]
xor     edx, edx
mov     [ebp+var_3e4], eax
lea     eax, [ebp+var_3e4]
mov     [ebp+var_4c], eax
mov     [ebp+var_48], edx
mov     [ebp+var_44], 4
mov     [ebp+var_40], edx
mov     al, [ecx+10h]
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_3c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_38], edx
mov     [ebp+var_34], ebx
mov     [ebp+var_30], edx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_2c]
call    sub_40843c
and     [ebp+var_18], 0
lea     eax, [ebp+var_3e0]
and     [ebp+var_10], 0
mov     [ebp+var_3e0], ebx
mov     [ebp+var_1c], eax
mov     [ebp+var_14], 4
lea     eax, [ebp+var_ac]
mov     edx, offset word_407856
push    eax
push    0ah
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_3d8]
call    sub_409748
mov     eax, [ebp+var_3f8]
mov     [edi], eax
mov     eax, [ebp+var_3f4]
mov     [edi+4], eax
mov     eax, [ebp+var_3f0]
jmp     loc_40bccb
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40c55f
test    [eax+1ch], bl
jz      short loc_40c55f
xor     eax, eax
lea     ecx, [ebp+var_3f8]
mov     [ebp+var_e0], ax
lea     eax, [ebp+var_e0]
push    eax
call    sub_40c93d
mov     ecx, [ebp+var_3ec]
mov     edi, eax
xor     eax, eax
mov     [ebp+var_114], ax
lea     eax, [ebp+var_114]
push    eax
call    sub_40c93d
push    edi
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406e14
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    19h
pop     ecx
call    sub_4098e8
mov     edi, [ebp+var_3e0]
lea     eax, [ebp+var_3d8]
push    eax
call    sub_409778
cmp     [ebp+var_3d8], 0
jz      loc_40c656
cmp     dword_42c140, 5
jbe     loc_40c656
push    2000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40c656
call    sub_40ca1c
and     [ebp+var_78], 0
lea     ecx, [ebp+var_6c]
and     [ebp+var_70], 0
mov     [ebp+var_3ce], al
lea     eax, [ebp+var_3ce]
mov     [ebp+var_7c], eax
mov     eax, [ebp+var_3d8]
mov     [ebp+var_74], ebx
mov     edx, [eax+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_5c]
call    sub_40843c
mov     edx, [ebp+var_3d8]
lea     ecx, [ebp+var_4c]
lea     edx, [edx+18h]
call    sub_40843c
call    sub_40d864
mov     ecx, [ebp+var_3d8]
xor     edx, edx
mov     [ebp+var_3e4], eax
lea     eax, [ebp+var_3e4]
mov     [ebp+var_3c], eax
mov     [ebp+var_38], edx
mov     [ebp+var_34], 4
mov     [ebp+var_30], edx
mov     al, [ecx+10h]
mov     [ebp+var_3cd], al
lea     eax, [ebp+var_3cd]
mov     [ebp+var_2c], eax
lea     eax, [ebp+dst]
push    eax
mov     [ebp+var_28], edx
mov     [ebp+var_24], ebx
mov     [ebp+var_20], edx
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_1c]
call    sub_40843c
lea     eax, [ebp+var_9c]
mov     edx, offset byte_407749
push    eax
push    9
push    ecx
push    ecx
call    sub_408330
lea     ecx, [ebp+var_3d8]
jmp     loc_40bf25
push    58h
mov     eax, offset loc_42b19b
call    __eh_prolog3_gs
mov     ebx, ecx
mov     esi, [ebp+arg_0]
mov     [ebp+var_48], esi
mov     [ebp+var_58], esi
call    sub_40b187
test    al, al
jnz     short loc_40c6c8
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      loc_40c776
test    byte ptr [eax+1ch], 10h
jz      loc_40c776
xor     eax, eax
mov     [ebp+var_44], ax
lea     eax, [ebp+var_44]
push    eax
call    sub_40c93d
push    eax
mov     eax, off_42c118
mov     edx, offset stru_406e14
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    1bh
pop     ecx
call    sub_4088bd
jmp     loc_40c776
and     [ebp+processhandle], 0
and     [ebp+var_4], 0
lea     eax, [ebp+processhandle]
push    dword ptr [ebx+8]
mov     ecx, ebx
push    eax
call    sub_40c961
test    eax, eax
js      loc_40c91d
mov     esi, [ebp+processhandle]
mov     ecx, esi
call    sub_40b605
mov     edi, eax
mov     eax, edx
mov     [ebp+var_58], eax
cmp     eax, [ebx+4]
jnz     loc_40c8d7
cmp     edi, [ebx]
jnz     loc_40c8d7
lea     eax, [ebp+returnlength]
push    eax
push    0
push    0
push    1bh
push    esi
call    ds:ntqueryinformationprocess
mov     edi, eax
cmp     edi, 0c0000004h
jz      loc_40c7b9
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40c768
test    byte ptr [ecx+1ch], 1
jz      short loc_40c768
xor     eax, eax
mov     ecx, ebx
mov     [ebp+var_44], ax
lea     eax, [ebp+var_44]
push    eax
call    sub_40c93d
mov     ecx, eax
mov     edx, offset stru_406e14
mov     eax, off_42c118
push    edi
push    ecx
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    1dh
pop     ecx
call    sub_408904
test    esi, esi
jz      short loc_40c773
push    esi
call    ds:closehandle
mov     esi, [ebp+var_48]
and     [ebp+returnlength], 0
xor     edx, edx
mov     [ebp+var_4], 3
inc     edx
lea     ecx, [ebp+returnlength]
call    sub_409ff0
mov     ecx, eax
mov     eax, [ebp+returnlength]
test    ecx, ecx
js      loc_40c937
mov     cx, ds:word_406bd4
mov     [eax], cx
xor     ecx, ecx
test    ecx, ecx
js      loc_40c937
mov     [esi], eax
mov     eax, esi
call    __eh_epilog3_gs
retn    4
push    [ebp+returnlength]
call    sub_42a99a
mov     edi, eax
pop     ecx
mov     [ebp+var_60], edi
push    0
push    [ebp+returnlength]
push    edi
push    1bh
push    esi
call    ds:ntqueryinformationprocess
mov     dword ptr [ebp+var_4c], eax
test    eax, eax
jns     short loc_40c834
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40c820
test    byte ptr [ecx+1ch], 1
jz      short loc_40c820
xor     eax, eax
mov     ecx, ebx
mov     [ebp+var_44], ax
lea     eax, [ebp+var_44]
push    eax
call    sub_40c93d
push    dword ptr [ebp+var_4c]
mov     ecx, eax
mov     edx, offset stru_406e14
mov     eax, off_42c118
push    ecx
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    1eh
pop     ecx
call    sub_408904
test    edi, edi
jz      loc_40c768
push    edi
call    sub_41731b
pop     ecx
jmp     loc_40c768
mov     ax, [edi]
and     dword ptr [ebp+var_4c], 0
shr     ax, 1
movzx   eax, ax
mov     [ebp+var_5c], eax
lea     ecx, [ebp+var_4c]
inc     eax
mov     byte ptr [ebp+var_4], 2
mov     edx, eax
mov     [ebp+var_58], eax
call    sub_409ff0
test    eax, eax
js      loc_40c935
push    [ebp+var_5c]
mov     edx, [ebp+var_58]
push    dword ptr [edi+4]
mov     ecx, dword ptr [ebp+var_4c]
call    sub_40b075
test    eax, eax
js      loc_40c935
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40c8b6
test    byte ptr [eax+1ch], 4
jz      short loc_40c8b6
xor     eax, eax
mov     ecx, ebx
mov     [ebp+var_44], ax
lea     eax, [ebp+var_44]
push    eax
call    sub_40c93d
push    dword ptr [ebp+var_4c]
mov     edx, offset stru_406e14
push    eax
mov     eax, off_42c118
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    1fh
pop     ecx
call    sub_4098e8
mov     ebx, [ebp+var_48]
mov     eax, dword ptr [ebp+var_4c]
push    edi
mov     [ebx], eax
call    sub_41731b
pop     ecx
test    esi, esi
jz      short loc_40c8d0
push    esi
call    ds:closehandle
mov     eax, ebx
jmp     loc_40c7b1
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      loc_40c768
test    byte ptr [eax+1ch], 10h
jz      loc_40c768
xor     eax, eax
mov     ecx, ebx
mov     [ebp+var_44], ax
lea     eax, [ebp+var_44]
push    eax
call    sub_40c93d
push    [ebp+var_58]
mov     ecx, off_42c118
push    edi
push    eax
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
call    sub_40b0f6
jmp     loc_40c768
cmp     [ebp+processhandle], 0
jz      loc_40c776
push    [ebp+processhandle]
call    ds:closehandle
jmp     loc_40c776
mov     ecx, eax
call    sub_40f52d
push    ebp
mov     ebp, esp
push    dword ptr [ecx+4]
push    dword ptr [ecx]
push    dword ptr [ecx+8]
push    offset axi64x
push    1ah
push    [ebp+arg_0]
call    sub_40985b
mov     eax, [ebp+arg_0]
add     esp, 18h
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+hobject], 0
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
push    [ebp+arg_4]
and     dword ptr [ebx], 0
mov     edi, ecx
lea     ecx, [ebp+hobject]
mov     edx, [edi+8]
call    sub_40b1c1
mov     esi, eax
test    esi, esi
jns     short loc_40c9c3
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40c9b0
test    byte ptr [ecx+1ch], 1
jz      short loc_40c9b0
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_406e14
push    dword ptr [ecx+10h]
push    20h
pop     ecx
call    sub_408951
cmp     [ebp+hobject], 0
jz      short loc_40c9bf
push    [ebp+hobject]
call    ds:closehandle
mov     eax, esi
jmp     short loc_40ca15
mov     esi, [ebp+hobject]
mov     ecx, esi
call    sub_40b605
mov     ecx, eax
cmp     [edi], ecx
jnz     short loc_40c9de
cmp     [edi+4], edx
jnz     short loc_40c9de
mov     [ebx], esi
xor     eax, eax
jmp     short loc_40ca15
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40ca05
test    byte ptr [eax+1ch], 1
jz      short loc_40ca05
push    dword ptr [edi+8]
push    edx
push    ecx
push    dword ptr [edi+4]
push    dword ptr [edi]
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
call    sub_40b154
test    esi, esi
jz      short loc_40ca10
push    esi
call    ds:closehandle
mov     eax, 80070057h
pop     edi
pop     esi
pop     ebx
leave
retn    8
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, large fs:2ch
push    ebx
push    esi
mov     ecx, [eax]
mov     eax, dword_42d7e4
cmp     eax, [ecx+4]
jg      short loc_40ca41
mov     al, byte_42d7e1
pop     esi
pop     ebx
leave
retn
mov     esi, offset dword_42d7e4
push    esi
call    sub_42aafd
cmp     dword_42d7e4, 0ffffffffh
pop     ecx
jnz     short loc_40ca38
lea     ecx, [ebp+var_1]
call    sub_410cc8
mov     ecx, off_42c118
mov     bl, [ebp+var_1]
cmp     ecx, offset off_42c118
jz      short loc_40ca8e
test    byte ptr [ecx+1ch], 4
jz      short loc_40ca8e
movzx   eax, bl
mov     edx, offset stru_406e14
push    eax
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    22h
pop     ecx
call    sub_408951
jmp     short $+2
push    esi
mov     byte_42d7e1, bl
call    sub_42aabc
pop     ecx
jmp     short loc_40ca38
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     esi, edx
mov     edi, ecx
call    sub_409ff0
test    eax, eax
js      short loc_40cac2
lea     eax, [esi+esi]
push    eax
push    [ebp+src]
push    dword ptr [edi]
call    _memmove_0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, ecx
xor     eax, eax
push    edi
mov     edi, [ebp+str]
mov     [ebp+var_8], eax
cmp     [esi+10h], eax
jnz     short loc_40cae7
push    edi
call    sub_40cba7
xor     eax, eax
lea     ebx, [esi+18h]
cmp     [esi+28h], eax
jz      short loc_40caf8
push    20h
mov     ecx, ebx
call    sub_40cb5e
push    20h
push    edi
call    _wcschr
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_40cb23
push    22h
push    edi
call    _wcschr
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_40cb23
push    22h
mov     ecx, ebx
mov     [ebp+var_1], 1
call    sub_40cb5e
jmp     short loc_40cb28
xor     eax, eax
mov     [ebp+var_1], al
mov     edx, edi
lea     ecx, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, word ptr [ebp+var_8]
jnz     short loc_40cb2d
sub     edx, ecx
mov     ecx, ebx
sar     edx, 1
push    edx
push    edi
call    ?append@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaeaav12@qb_wi@z
cmp     [ebp+var_1], 0
jz      short loc_40cb55
push    22h
mov     ecx, ebx
call    sub_40cb5e
pop     edi
mov     eax, esi
pop     esi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, ecx
mov     ecx, [esi+10h]
cmp     ecx, [esi+14h]
jnb     short loc_40cb8e
cmp     dword ptr [esi+14h], 8
lea     eax, [ecx+1]
mov     [esi+10h], eax
mov     edx, esi
jb      short loc_40cb7d
mov     edx, [esi]
mov     ax, [ebp+arg_0]
mov     [edx+ecx*2], ax
xor     eax, eax
mov     [edx+ecx*2+2], ax
jmp     short loc_40cba0
push    dword ptr [ebp+arg_0]
mov     byte ptr [ebp+var_4], 0
push    [ebp+var_4]
push    ecx
mov     ecx, esi
call    sub_40cc6c
mov     eax, esi
pop     esi
leave
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    edi
mov     edi, ecx
xor     ebx, ebx
mov     ecx, [ebp+src]
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
cmp     ax, bx
jnz     short loc_40cbb7
sub     ecx, edx
sar     ecx, 1
cmp     ecx, [edi+14h]
ja      short loc_40cbf2
cmp     dword ptr [edi+14h], 8
mov     ebx, edi
jb      short loc_40cbd5
mov     ebx, [edi]
push    esi
lea     esi, [ecx+ecx]
mov     [edi+10h], ecx
push    esi
push    [ebp+src]
push    ebx
call    _memmove_0
add     esp, 0ch
xor     eax, eax
mov     [esi+ebx], ax
pop     esi
jmp     short loc_40cc05
push    [ebp+src]
mov     byte ptr [ebp+var_4], bl
push    [ebp+var_4]
push    ecx
mov     ecx, edi
call    sub_40cd35
mov     edi, eax
mov     eax, edi
pop     edi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     eax, 7ffffffeh
mov     esi, [edi+10h]
sub     eax, esi
mov     [ebp+var_4], esi
cmp     eax, 1
jb      loc_40cd2f
mov     eax, [edi+14h]
lea     ecx, [esi+1]
push    ecx
mov     ecx, edi
mov     [ebp+var_8], eax
call    unknown_libname_2
mov     [ebp+var_c], eax
lea     ecx, [eax+1]
lea     edx, [ecx+ecx]
cmp     ecx, 7fffffffh
jbe     short loc_40ccb2
or      edx, 0ffffffffh
mov     ecx, edx
call    sub_40b039
mov     ebx, eax
lea     eax, [esi+1]
mov     [edi+10h], eax
add     esi, esi
cmp     [ebp+var_8], 8
mov     eax, [ebp+var_c]
mov     [edi+14h], eax
jb      short loc_40cd0a
mov     ecx, [ebp+var_4]
mov     esi, [edi]
lea     eax, [ecx+ecx]
push    eax
push    esi
push    ebx
call    _memmove
mov     edx, [ebp+var_4]
add     esp, 0ch
mov     ax, [ebp+arg_8]
lea     ecx, [edx+edx]
mov     [ecx+ebx], ax
xor     eax, eax
mov     [ecx+ebx+2], ax
mov     ecx, esi
mov     eax, [ebp+var_8]
lea     edx, ds:2[eax*2]
call    sub_4097fd
jmp     short loc_40cd24
push    esi
push    edi
push    ebx
call    _memmove
mov     ax, [ebp+arg_8]
add     esp, 0ch
mov     [esi+ebx], ax
xor     eax, eax
mov     [esi+ebx+2], ax
mov     [edi], ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
call    sub_40ce97
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, ecx
cmp     esi, 7ffffffeh
ja      short loc_40cdb2
mov     eax, [edi+14h]
push    esi
mov     [ebp+var_8], eax
call    unknown_libname_2
mov     [ebp+var_4], eax
lea     ecx, [eax+1]
lea     edx, [ecx+ecx]
cmp     ecx, 7fffffffh
jbe     short loc_40cd6a
or      edx, 0ffffffffh
mov     ecx, edx
call    sub_40b039
mov     [edi+10h], esi
mov     ebx, eax
mov     eax, [ebp+var_4]
add     esi, esi
push    esi
push    [ebp+src]
mov     [edi+14h], eax
push    ebx
call    _memmove
xor     eax, eax
add     esp, 0ch
mov     [esi+ebx], ax
mov     eax, [ebp+var_8]
cmp     eax, 8
jb      short loc_40cda7
mov     ecx, [edi]
lea     edx, ds:2[eax*2]
call    sub_4097fd
mov     [edi], ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
call    sub_40ce97
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, 7ffffffeh
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ecx, [ebp+arg_0]
mov     esi, [edi+10h]
sub     eax, esi
cmp     eax, ecx
jb      loc_40ce91
mov     eax, [edi+14h]
add     ecx, esi
mov     [ebp+dst], ecx
push    ecx
mov     ecx, edi
mov     [ebp+var_4], eax
call    unknown_libname_2
mov     [ebp+maxcount], eax
lea     ecx, [eax+1]
lea     edx, [ecx+ecx]
cmp     ecx, 7fffffffh
jbe     short loc_40cdff
or      edx, 0ffffffffh
mov     ecx, edx
call    sub_40b039
mov     ecx, [ebp+arg_c]
mov     ebx, eax
mov     eax, [ebp+dst]
mov     [edi+10h], eax
mov     eax, [ebp+maxcount]
lea     edx, [ecx+ecx]
mov     [edi+14h], eax
lea     eax, [esi+esi]
mov     [ebp+maxcount], edx
add     esi, ecx
lea     edx, [eax+ebx]
cmp     [ebp+var_4], 8
mov     [ebp+dst], edx
mov     [ebp+var_10], esi
push    eax
jb      short loc_40ce68
mov     esi, [edi]
push    esi
push    ebx
call    _memmove
push    [ebp+maxcount]
push    [ebp+src]
push    [ebp+dst]
call    _memmove
mov     eax, [ebp+var_10]
xor     ecx, ecx
add     esp, 18h
mov     [ebx+eax*2], cx
mov     ecx, esi
mov     eax, [ebp+var_4]
lea     edx, ds:2[eax*2]
call    sub_4097fd
jmp     short loc_40ce86
push    edi
push    ebx
call    _memmove
push    [ebp+maxcount]
push    [ebp+src]
push    [ebp+dst]
call    _memmove
add     esp, 18h
xor     eax, eax
mov     [ebx+esi*2], ax
mov     [edi], ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn    10h
call    sub_40ce97
mov     ecx, offset astringtoolong
jmp     sub_41214d
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+maxcount]
push    edi
mov     edi, edx
test    esi, esi
jnz     short loc_40cee9
xor     eax, eax
jmp     short loc_40cf4f
test    ecx, ecx
jnz     short loc_40cf00
call    __errno
push    16h
pop     esi
mov     [eax], esi
call    __invalid_parameter_noinfo
mov     eax, esi
jmp     short loc_40cf4f
push    ebx
mov     ebx, [ebp+src]
test    ebx, ebx
jz      short loc_40cf1b
cmp     edi, esi
jb      short loc_40cf1b
push    esi
push    ebx
push    ecx
call    _memmove
add     esp, 0ch
xor     eax, eax
jmp     short loc_40cf4e
push    edi
push    0
push    ecx
call    _memset
add     esp, 0ch
test    ebx, ebx
jnz     short loc_40cf34
call    __errno
push    16h
jmp     short loc_40cf3f
cmp     edi, esi
jnb     short loc_40cf4b
call    __errno
push    22h
pop     esi
mov     [eax], esi
call    __invalid_parameter_noinfo
mov     eax, esi
jmp     short loc_40cf4e
push    16h
pop     eax
pop     ebx
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    [ebp+arg_4]
push    0
push    [ebp+arg_0]
push    edx
push    ecx
call    sub_409829
mov     ecx, [eax]
push    dword ptr [eax+4]
or      ecx, 1
push    ecx
call    sub_41d756
add     esp, 1ch
test    eax, eax
jns     short loc_40cf7d
or      eax, 0ffffffffh
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    esi
xor     esi, esi
test    eax, eax
jz      short loc_40cfdc
cmp     eax, 7fffffffh
jbe     short loc_40cfe1
mov     esi, 80070057h
test    esi, esi
js      short loc_40d01a
push    ebx
mov     ebx, [ebp+arg_0]
xor     esi, esi
push    edi
lea     edi, [eax-1]
mov     ecx, ebx
lea     eax, [ebp+arg_c]
mov     edx, edi
push    eax
push    [ebp+arg_8]
call    sub_40cf53
pop     ecx
pop     ecx
test    eax, eax
js      short loc_40d00d
cmp     eax, edi
ja      short loc_40d00d
jnz     short loc_40d016
jmp     short loc_40d012
mov     esi, 8007007ah
mov     byte ptr [edi+ebx], 0
pop     edi
pop     ebx
jmp     short loc_40d024
test    eax, eax
jz      short loc_40d024
mov     ecx, [ebp+arg_0]
mov     byte ptr [ecx], 0
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
push    ebx
push    esi
push    edi
xor     eax, eax
lea     edi, [ebp+uuid]
stosd
mov     ebx, ecx
stosd
mov     byte ptr [ebx+82h], 81h
stosd
stosd
lea     eax, [ebp+uuid]
push    eax
call    ds:uuidcreate
lea     esi, [ebp+uuid]
mov     byte ptr [ebx+81h], 17h
lea     edi, [ebp+var_28]
movsd
push    81h
push    0
push    ebx
movsd
movsd
movsd
mov     dword ptr [ebx+88h], 0
mov     dword ptr [ebx+8ch], 19h
call    _memset
add     esp, 0ch
lea     ecx, [ebp+var_28]
push    ebx
push    10h
pop     edx
call    sub_40e261
mov     ecx, [ebp+var_8]
mov     eax, ebx
pop     edi
pop     esi
mov     word ptr [ebx+16h], 2eh
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, ecx
xor     dl, dl
push    edi
mov     [ebp+var_1c], esi
call    sub_40d559
mov     bl, al
test    bl, bl
jz      loc_40d336
xor     edx, edx
mov     ecx, esi
cmp     bl, 1
setnz   dl
dec     edx
lea     edi, [ecx+1]
and     edx, 0ffffffc0h
add     edx, 81h
mov     [ebp+var_24], edx
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_40d199
sub     ecx, edi
mov     [ebp+var_18], ecx
lea     edi, [ecx+1]
mov     [ebp+var_20], edi
cmp     edi, edx
jb      short loc_40d1c0
jnz     loc_40d336
cmp     byte ptr [esi+ecx-1], 21h
jnz     loc_40d336
movzx   eax, bl
sub     eax, 1
jz      short loc_40d1f9
sub     eax, 1
jnz     loc_40d336
push    offset word_42d622
push    90h
call    sub_42abf7
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_40d245
movzx   ecx, ds:byte_406f00
push    ecx
mov     ecx, eax
call    sub_40d0cd
mov     ebx, eax
jmp     short loc_40d247
push    offset word_42d622
push    90h
call    sub_42abf7
mov     ebx, eax
pop     ecx
pop     ecx
test    ebx, ebx
jz      short loc_40d245
xor     eax, eax
mov     byte ptr [ebx+82h], 41h
lea     edi, [ebp+uuid]
stosd
stosd
stosd
stosd
lea     eax, [ebp+uuid]
push    eax
call    ds:uuidcreate
sub     esp, 10h
lea     esi, [ebp+uuid]
mov     edi, esp
mov     ecx, ebx
movsd
movsd
movsd
movsd
call    sub_40e1a4
mov     esi, [ebp+var_1c]
mov     edi, [ebp+var_20]
jmp     short loc_40d247
xor     ebx, ebx
test    ebx, ebx
jz      loc_40d336
mov     eax, [ebp+var_18]
cmp     byte ptr [esi+eax-1], 21h
jnz     short loc_40d271
dec     eax
push    eax
push    esi
push    81h
push    ebx
call    sub_416e5f
mov     eax, [ebp+var_18]
add     esp, 10h
dec     al
jmp     short loc_40d2ac
mov     ecx, [ebp+var_24]
lea     edi, [eax+2]
push    eax
push    esi
push    81h
push    ebx
cmp     edi, ecx
jnz     short loc_40d290
call    sub_416e5f
mov     eax, [ebp+var_18]
add     esp, 10h
jmp     short loc_40d2ac
and     [ebp+var_24], 0
lea     edi, [eax+3]
cmp     edi, ecx
jnz     short loc_40d2e2
call    sub_416e5f
mov     eax, [ebp+var_18]
add     esp, 10h
mov     byte ptr [ebx+eax], 2eh
inc     al
mov     [ebx+81h], al
mov     dword ptr [ebx+88h], 0
mov     [ebx+8ch], edi
mov     eax, [ebx+88h]
mov     ecx, [ebx+8ch]
or      ecx, 80000000h
mov     [ebx+88h], eax
mov     [ebx+8ch], ecx
jmp     short loc_40d327
call    sub_416e5f
mov     eax, [ebp+var_18]
add     esp, 10h
mov     byte ptr [ebx+eax], 2eh
inc     al
mov     [ebx+81h], al
mov     dword ptr [ebx+88h], 0
mov     [ebx+8ch], edi
mov     ecx, [ebx+88h]
mov     edx, [ebx+8ch]
and     edx, 7fffffffh
mov     [ebx+88h], ecx
mov     [ebx+8ch], edx
movzx   ecx, byte ptr [ebx+81h]
mov     eax, ebx
mov     byte ptr [ecx+ebx], 0
jmp     short loc_40d338
xor     eax, eax
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, ecx
push    ebx
mov     [ebp+var_10], eax
add     eax, 88h
push    esi
push    edi
mov     [ebp+var_4], eax
jmp     short loc_40d362
mov     eax, [ebp+var_4]
mov     edi, [eax]
mov     esi, [eax+4]
mov     eax, edi
mov     [ebp+var_c], edi
mov     edx, esi
mov     [ebp+var_8], esi
mov     ecx, esi
mov     ebx, edi
mov     esi, [ebp+var_4]
lock cmpxchg8b qword ptr [esi]
mov     esi, ecx
cmp     eax, edi
jnz     short loc_40d35f
cmp     edx, esi
jnz     short loc_40d35f
mov     ebx, 7fffffffh
xor     edx, edx
and     ecx, ebx
cmp     esi, edx
jg      short loc_40d39d
jl      short loc_40d399
cmp     edi, edx
jnb     short loc_40d39d
mov     al, 1
jmp     short loc_40d39f
mov     al, dl
cmp     edi, ebx
jz      loc_40d4a9
test    al, al
jnz     loc_40d4a9
add     edi, 1
mov     esi, edx
mov     ebx, edx
adc     esi, edx
cmp     edi, 0ah
jnz     short loc_40d3c1
cmp     esi, edx
jz      short loc_40d41e
cmp     edi, 64h
jnz     short loc_40d3ca
cmp     esi, edx
jz      short loc_40d41e
cmp     edi, 3e8h
jnz     short loc_40d3d6
cmp     esi, edx
jz      short loc_40d41e
cmp     edi, 2710h
jnz     short loc_40d3e2
cmp     esi, edx
jz      short loc_40d41e
cmp     edi, 186a0h
jnz     short loc_40d3ee
cmp     esi, edx
jz      short loc_40d41e
cmp     edi, 0f4240h
jnz     short loc_40d3fa
cmp     esi, edx
jz      short loc_40d41e
cmp     edi, 989680h
jnz     short loc_40d406
cmp     esi, edx
jz      short loc_40d41e
cmp     edi, 5f5e100h
jnz     short loc_40d412
cmp     esi, edx
jz      short loc_40d41e
cmp     edi, 3b9aca00h
jnz     short loc_40d423
cmp     esi, edx
jnz     short loc_40d423
add     ecx, 1
adc     ebx, edx
mov     eax, [ebp+var_10]
movzx   eax, byte ptr [eax+82h]
cdq
cmp     ebx, edx
jb      short loc_40d472
ja      short loc_40d438
cmp     ecx, eax
jb      short loc_40d472
mov     edi, [ebp+var_c]
xor     edx, edx
mov     ebx, edx
or      ecx, edx
mov     edx, [ebp+var_8]
or      ebx, edi
mov     [ebp+var_c], ebx
or      ecx, 80000000h
mov     eax, edi
mov     esi, [ebp+var_4]
lock cmpxchg8b qword ptr [esi]
mov     esi, [ebp+var_8]
cmp     eax, edi
jnz     loc_40d35f
cmp     edx, esi
jnz     loc_40d35f
mov     eax, [ebp+var_c]
mov     edx, ecx
jmp     short loc_40d4ad
mov     eax, [ebp+var_c]
xor     edx, edx
mov     ebx, edx
or      ecx, esi
mov     edx, [ebp+var_8]
or      ebx, edi
mov     [ebp+var_14], ebx
and     ecx, 7fffffffh
mov     esi, [ebp+var_4]
lock cmpxchg8b qword ptr [esi]
mov     esi, [ebp+var_8]
cmp     eax, [ebp+var_c]
jnz     loc_40d35f
cmp     edx, esi
jnz     loc_40d35f
mov     eax, [ebp+var_14]
jmp     short loc_40d46e
mov     eax, edi
mov     edx, esi
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_4]
push    ebx
mov     ebx, ecx
movzx   ecx, ax
push    esi
mov     esi, [ebp+dst]
push    edi
mov     edi, [ebp+arg_0]
test    eax, eax
jg      short loc_40d4d7
jl      short loc_40d4d1
test    edi, edi
jnb     short loc_40d4d7
mov     [ebp+var_1], 1
jmp     short loc_40d4db
mov     [ebp+var_1], 0
test    esi, esi
jz      short loc_40d549
push    ecx
mov     byte ptr [esi], 0
mov     ecx, esi
movzx   edx, byte ptr [ebx+82h]
push    ebx
call    sub_40ced7
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_40d549
mov     dl, [ebp+var_1]
test    dl, dl
jz      short loc_40d51e
test    edi, edi
jnz     short loc_40d51e
movzx   eax, byte ptr [ebx+81h]
mov     byte ptr [eax+esi], 21h
movzx   eax, byte ptr [ebx+81h]
mov     byte ptr [eax+esi+1], 0
mov     al, 1
jmp     short loc_40d54b
movzx   eax, byte ptr [ebx+81h]
movzx   ecx, byte ptr [ebx+82h]
sub     ecx, eax
add     eax, esi
push    edi
test    dl, dl
jz      short loc_40d552
push    offset format
push    ecx
push    eax
call    _sprintf_s
add     esp, 10h
cmp     eax, 0ffffffffh
jnz     short loc_40d51a
xor     al, al
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
push    offset au_0
jmp     short loc_40d53a
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     bl, dl
push    2eh
push    edi
mov     [ebp+var_18], edi
call    _strchr
mov     edx, eax
sub     edx, edi
pop     ecx
pop     ecx
cmp     edx, 16h
jnz     short loc_40d58a
mov     cl, 2
jmp     short loc_40d591
cmp     edx, 10h
jnz     short loc_40d5b6
mov     cl, 1
mov     [ebp+var_11], cl
test    bl, bl
jz      short loc_40d59c
mov     al, cl
jmp     short loc_40d5b8
mov     ebx, edi
lea     esi, [ebx+1]
mov     al, [ebx]
inc     ebx
test    al, al
jnz     short loc_40d5a1
sub     ebx, esi
xor     esi, esi
cmp     cl, 1
jnz     short loc_40d5c7
cmp     ebx, 41h
jbe     short loc_40d5d4
xor     al, al
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
cmp     cl, 2
jnz     short loc_40d5d4
cmp     ebx, 81h
ja      short loc_40d5b6
test    edx, edx
jz      short loc_40d600
mov     al, [edi+esi]
cmp     al, 30h
jl      short loc_40d5e3
cmp     al, 39h
jle     short loc_40d5fb
cmp     al, 41h
jl      short loc_40d5eb
cmp     al, 5ah
jle     short loc_40d5fb
cmp     al, 61h
jl      short loc_40d5f3
cmp     al, 7ah
jle     short loc_40d5fb
cmp     al, 2bh
jz      short loc_40d5fb
cmp     al, 2fh
jnz     short loc_40d5b6
inc     esi
cmp     esi, edx
jb      short loc_40d5d8
cmp     byte ptr [edi+esi], 2eh
jnz     short loc_40d5b6
inc     esi
cmp     esi, ebx
jnb     short loc_40d5b6
xor     eax, eax
lea     edi, [ebp+var_10]
stosd
push    2eh
stosd
stosw
stosb
mov     eax, [ebp+var_18]
add     eax, esi
push    eax
mov     [ebp+var_1c], eax
call    _strchr
mov     edi, eax
pop     ecx
pop     ecx
test    edi, edi
jnz     short loc_40d631
mov     edi, ebx
jmp     short loc_40d634
sub     edi, [ebp+var_18]
sub     edi, esi
cmp     edi, 0bh
ja      loc_40d5b6
push    edi
push    [ebp+var_1c]
lea     eax, [ebp+var_10]
push    0bh
push    eax
call    sub_416e5f
push    0
call    __set_errno
push    0ah
lea     eax, [ebp+var_10]
push    0
push    eax
call    sub_423139
add     esp, 20h
test    eax, eax
jnz     short loc_40d678
cmp     byte ptr [ebp+var_10], 30h
jz      short loc_40d678
cmp     byte ptr [ebp+var_10+1], al
jnz     loc_40d5b6
call    __errno
cmp     dword ptr [eax], 22h
jz      loc_40d5b6
add     esi, edi
mov     edi, [ebp+var_18]
cmp     esi, ebx
jb      loc_40d600
mov     al, [ebp+var_11]
jmp     loc_40d5b8
xor     eax, eax
retn    4
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@qbd@z
mov     dword ptr [esi], offset ??_7invalid_argument@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 1ach
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
push    edi
lea     eax, [ebp+buffer]
mov     esi, 81h
push    eax
lea     edx, [ebp+var_1ac]
mov     [ebp+var_1ac], esi
call    sub_40f352
test    eax, eax
js      short loc_40d75a
mov     ecx, [ebp+var_1ac]
test    ecx, ecx
jz      short loc_40d753
cmp     ecx, esi
ja      short loc_40d753
xor     edx, edx
test    ecx, ecx
jz      short loc_40d72f
mov     al, byte ptr [ebp+edx*2+buffer]
mov     [ebp+edx+var_90], al
inc     edx
cmp     edx, ecx
jb      short loc_40d71c
dec     ecx
cmp     ecx, esi
jnb     loc_40d7d7
mov     [ebp+ecx+var_90], 0
lea     ecx, [ebp+var_90]
call    sub_40d156
mov     ebx, eax
test    ebx, ebx
jz      short loc_40d7b4
jmp     short loc_40d7a3
push    offset aupdatetelemetr
jmp     short loc_40d7bb
push    90h
call    sub_42a968
mov     ebx, eax
lea     edi, [ebp+uuid]
mov     [ebp+var_1ac], ebx
xor     eax, eax
stosd
pop     ecx
mov     byte ptr [ebx+82h], 41h
stosd
stosd
stosd
lea     eax, [ebp+uuid]
push    eax
call    ds:uuidcreate
sub     esp, 10h
lea     esi, [ebp+uuid]
mov     edi, esp
mov     ecx, ebx
movsd
movsd
movsd
movsd
call    sub_40e1a4
mov     ecx, [ebp+var_4]
mov     eax, ebx
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
lea     eax, [ebp+var_90]
push    eax
lea     ecx, [ebp+uuid.data2]
call    sub_40d6a5
push    offset __ti3?avinvalid_argument@std@@
lea     eax, [ebp+uuid.data2]
push    eax
call    sub_41a2a3
call    sub_417825
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7invalid_argument@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7logic_error@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
cmp     edx, [ecx+14h]
jz      short loc_40d835
mov     eax, [ebp+arg_0]
mov     [ecx+4], eax
mov     eax, [ebp+arg_8]
mov     [ecx+14h], edx
mov     [ecx+0ch], eax
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ecx]
mov     ecx, esi
push    edi
call    sub_40d347
mov     edi, [ebp+dst]
mov     ecx, esi
push    edi
push    edx
push    eax
call    sub_40d4b2
test    al, al
jnz     short loc_40d85b
mov     [edi], al
mov     eax, edi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+4]
sub     eax, 400000h
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 198h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
lea     eax, [ebp+dst]
push    eax
call    sub_40d839
xor     edx, edx
movsx   cx, byte ptr [edx+eax]
mov     [ebp+edx*2+var_110], cx
test    cx, cx
jz      short loc_40d8b4
inc     edx
cmp     edx, 81h
jb      short loc_40d892
mov     eax, 80004005h
jmp     short loc_40d8bf
lea     edx, [ebp+var_110]
call    sub_40f2fe
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     [ebp+var_8], ebx
call    sub_40d6d1
mov     [ebx], eax
mov     eax, [ebp+arg_0]
and     dword ptr [ebx+0ch], 0
mov     dword ptr [ebx+4], offset byte_406afd
mov     [ebx+8], eax
call    sub_40e505
and     dword ptr [ebx+14h], 0
lea     esi, [ebx+18h]
mov     [ebx+10h], al
mov     edi, esi
push    6
pop     ecx
xor     eax, eax
rep stosd
xor     edi, edi
lea     ecx, [ebp+var_c]
mov     [ebp+var_c], edi
mov     [ebp+var_8], edi
call    sub_40f893
mov     ecx, [ebp+var_c]
mov     edx, [ebp+var_8]
movzx   eax, cx
push    eax
mov     eax, edx
shrd    ecx, eax, 10h
movzx   eax, cx
push    eax
movzx   eax, dx
push    eax
shr     edx, 10h
push    edx
push    offset auuuu
push    18h
push    esi
call    sub_40cfc8
add     esp, 1ch
mov     [ebp+var_10], edi
mov     ecx, offset stru_42d810
mov     [ebp+var_24], edi
mov     [ebp+var_20], edi
mov     [ebp+var_1c], edi
mov     [ebp+var_18], edi
mov     [ebp+block], edi
mov     stru_42d810.recursioncount, 0f12192eh
mov     lpcriticalsection, ecx
call    sub_411038
test    eax, eax
jns     short loc_40d988
mov     ecx, lpcriticalsection
call    sub_411048
mov     lpcriticalsection, edi
jmp     short loc_40d9cd
call    sub_40e6f6
lea     ecx, [ebp+var_24]
call    sub_40e642
cmp     [ebp+block], edi
jz      short loc_40d9a3
push    [ebp+block]
call    sub_41731b
pop     ecx
cmp     [ebp+var_18], edi
jz      short loc_40d9b1
push    [ebp+var_18]
call    sub_41731b
pop     ecx
cmp     [ebp+var_1c], edi
jz      short loc_40d9bf
push    [ebp+var_1c]
call    sub_41731b
pop     ecx
cmp     [ebp+var_20], edi
jz      short loc_40d9cd
push    [ebp+var_20]
call    sub_41731b
pop     ecx
lea     ecx, [ebp+var_24]
call    sub_40e187
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
leave
retn    4
push    14h
mov     eax, offset loc_42b1c8
call    __eh_prolog3
mov     eax, edx
mov     [ebp+var_18], ecx
xor     ebx, ebx
mov     [ebp+var_1c], ebx
push    ecx
lea     edx, [ebp+var_14]
mov     [ebp+var_4], ebx
mov     ecx, eax
call    sub_410df8
lea     ecx, [ebp+block]
test    eax, eax
jnz     short loc_40da2a
mov     edx, [ebp+var_14]
call    sub_40f96e
mov     esi, [eax]
mov     [eax], ebx
mov     [ebp+var_14], esi
cmp     [ebp+block], ebx
jz      short loc_40da26
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     edi, esi
jmp     short loc_40da4c
mov     edx, offset aunknownexe
call    sub_40f96e
mov     esi, [eax]
mov     edi, esi
mov     [eax], ebx
cmp     [ebp+block], 0
mov     [ebp+var_14], esi
jz      short loc_40da4c
push    [ebp+block]
call    sub_41731b
pop     ecx
movzx   eax, word ptr [esi]
test    ax, ax
jz      short loc_40da6d
mov     ecx, eax
push    ecx
call    sub_412bca
mov     [edi], ax
lea     edi, [edi+2]
movzx   eax, word ptr [edi]
pop     ecx
mov     ecx, eax
test    ax, ax
jnz     short loc_40da56
xor     ebx, ebx
xor     eax, eax
inc     ebx
mov     edi, esi
cmp     [esi], ax
jz      short loc_40daed
movzx   ecx, word ptr [edi]
xor     esi, esi
movzx   ecx, cx
mov     edx, offset asc_406eb8
mov     [ebp+block], ecx
movsx   eax, byte ptr [edx]
cmp     eax, [ebp+block]
jz      short loc_40dacd
inc     edx
cmp     edx, (offset asc_406eb8+5)
jnz     short loc_40da89
push    30h
pop     eax
cmp     cx, ax
jnz     short loc_40daa9
cmp     word ptr [edi+2], 78h
jz      short loc_40dad7
push    ecx
call    _iswxdigit
pop     ecx
test    eax, eax
jz      short loc_40dac9
cmp     ebx, 1
jnz     short loc_40dabc
push    2
pop     ebx
cmp     ebx, 2
jnz     short loc_40dadd
push    23h
pop     eax
mov     [edi], ax
jmp     short loc_40dadd
mov     ebx, esi
jmp     short loc_40dadd
mov     eax, ecx
push    30h
pop     ecx
cmp     ax, cx
jnz     short loc_40dada
add     edi, 4
xor     ebx, ebx
inc     ebx
add     edi, 2
movzx   eax, word ptr [edi]
mov     ecx, eax
test    ax, ax
jnz     short loc_40da7e
mov     esi, [ebp+var_14]
mov     eax, [ebp+var_18]
mov     [eax], esi
call    __eh_epilog3
retn
push    1ach
mov     eax, offset loc_42b225
call    __eh_prolog3_gs
mov     [ebp+var_170], ecx
mov     [ebp+var_174], ecx
mov     eax, [ebp+arg_4]
lea     ebx, [ecx+4]
mov     [ebp+src], ecx
push    3ch
mov     [ecx], eax
mov     [ebp+var_174], ebx
call    sub_42a968
mov     edi, eax
mov     [ebp+var_180], edi
and     [ebp+var_4], 0
lea     esi, [edi+0ch]
xor     eax, eax
mov     dword ptr [edi], offset ??_7?$_ref_count_obj@vcupdatetelemetry@@@std@@6b@
inc     eax
mov     [esp+1cch+var_1cc], offset ampwustub_0
mov     ecx, esi
mov     [edi+4], eax
mov     [edi+8], eax
call    sub_40d8cb
mov     [ebx], esi
mov     [ebx+4], edi
mov     [ebp+var_4], 1
call    ds:getcurrentprocessid
push    eax
lea     ecx, [ebp+var_1a0]
call    sub_40b632
lea     ecx, [ebp+block]
push    ecx
mov     ecx, eax
call    sub_40c661
mov     byte ptr [ebp+var_4], 2
lea     ecx, [ebp+var_184]
mov     edx, [eax]
call    sub_40d9de
cmp     [ebp+block], 0
jz      short loc_40dbac
push    [ebp+block]
call    sub_41731b
pop     ecx
mov     esi, [ebp+var_170]
mov     eax, [ebp+var_184]
mov     [esi+0ch], eax
mov     byte ptr [ebp+var_4], 3
call    ds:getcurrentprocessid
push    eax
lea     ecx, [ebp+var_1ac]
call    sub_40b632
lea     ecx, [ebp+var_1b8]
push    ecx
mov     ecx, eax
call    sub_40b6ab
lea     ecx, [ebp+var_170]
push    ecx
mov     ecx, eax
call    sub_40c661
mov     byte ptr [ebp+var_4], 4
lea     ecx, [ebp+var_188]
mov     edx, [eax]
call    sub_40d9de
cmp     [ebp+var_170], 0
jz      short loc_40dc13
push    [ebp+var_170]
call    sub_41731b
pop     ecx
mov     eax, [ebp+var_188]
mov     [esi+10h], eax
mov     edx, [ebx+4]
test    edx, edx
jz      short loc_40dc2a
lock inc dword ptr [edx+8]
mov     edx, [ebx+4]
mov     ecx, dword_42d61c
mov     eax, [ebx]
mov     dword_42d618, eax
mov     dword_42d61c, edx
test    ecx, ecx
jz      short loc_40dc50
or      eax, 0ffffffffh
lock xadd [ecx+8], eax
jnz     short loc_40dc50
call    ?_delete_this@?$_ref_count_obj@v__exceptionptr@@@std@@eaexxz
push    0
call    ds:getmodulehandlew
mov     [ebp+var_174], eax
test    eax, eax
jnz     short loc_40dc69
xor     ecx, ecx
call    sub_40ef9c
cmp     dword_42c140, 5
jbe     loc_40dde2
push    4000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40dde2
mov     eax, [ebx]
mov     eax, [eax]
mov     [ebp+src], eax
lea     edi, [eax+88h]
mov     ebx, [edi]
mov     eax, ebx
mov     ecx, [edi+4]
mov     edx, ecx
mov     [ebp+var_18c], ebx
lock cmpxchg8b qword ptr [edi]
mov     ebx, edx
mov     edx, [ebp+var_18c]
cmp     eax, edx
jnz     short loc_40dc9a
cmp     ebx, ecx
jnz     short loc_40dc9a
lea     eax, [ebp+dst]
push    eax
push    ecx
mov     ecx, [ebp+src]
push    edx
call    sub_40d4b2
neg     al
lea     edx, [ebp+dst]
lea     ecx, [ebp+var_c0]
sbb     al, al
and     [ebp+dst], al
call    sub_40843c
mov     edx, [esi+0ch]
lea     ecx, [ebp+var_b0]
call    sub_408465
mov     edx, [esi+10h]
lea     ecx, [ebp+var_a0]
call    sub_408465
mov     eax, [ebp+var_174]
xor     ebx, ebx
push    4
mov     [ebp+var_190], eax
lea     eax, [ebp+var_190]
pop     edi
mov     [ebp+var_90], eax
mov     [ebp+var_8c], ebx
mov     [ebp+var_88], edi
mov     [ebp+var_84], ebx
call    sub_40ca1c
mov     edx, [esi+4]
lea     ecx, [ebp+var_70]
movzx   eax, al
mov     [ebp+var_194], eax
lea     eax, [ebp+var_194]
mov     [ebp+var_80], eax
mov     [ebp+var_7c], ebx
mov     [ebp+var_78], edi
mov     [ebp+var_74], ebx
mov     edx, [edx+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_60]
call    sub_40843c
mov     edx, [esi+4]
lea     ecx, [ebp+var_50]
add     edx, 18h
call    sub_40843c
mov     eax, [esi+4]
xor     edi, edi
inc     edi
mov     al, [eax+10h]
mov     [ebp+var_169], al
lea     eax, [ebp+var_169]
mov     [ebp+var_40], eax
mov     [ebp+var_3c], ebx
mov     [ebp+var_38], edi
mov     [ebp+var_34], ebx
call    ds:getcommandlinew
mov     edx, eax
lea     ecx, [ebp+var_30]
call    sub_408465
lea     eax, [ebp+var_180]
mov     [ebp+var_180], edi
mov     [ebp+var_20], eax
mov     [ebp+var_1c], ebx
mov     [ebp+var_18], 4
mov     [ebp+var_14], ebx
lea     eax, [ebp+var_e0]
mov     edx, offset byte_407ce7
push    eax
push    0dh
push    ecx
push    ecx
call    sub_408330
mov     eax, esi
call    __eh_epilog3_gs
retn    8
push    ebp
mov     ebp, esp
sub     esp, 1bch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
xor     ebx, ebx
mov     esi, ecx
push    edi
lea     ecx, [ebp+var_1a8]
mov     [ebp+var_1a8], ebx
mov     [ebp+var_1a4], ebx
mov     [ebp+var_1a0], ebx
call    sub_40a057
test    eax, eax
js      short loc_40de51
call    sub_40a022
cmp     edx, [ebp+var_1a4]
jb      short loc_40de51
ja      short loc_40de3e
cmp     eax, [ebp+var_1a8]
jbe     short loc_40de51
call    sub_40a022
sub     eax, [ebp+var_1a8]
sbb     edx, [ebp+var_1a4]
jmp     short loc_40de55
mov     eax, ebx
mov     edx, ebx
mov     [ebp+var_1b8], eax
lea     edi, [esi+4]
mov     eax, [esi]
mov     ebx, [edi]
mov     [ebp+var_1b4], edx
mov     eax, [eax]
cmp     eax, [ebx+14h]
jz      loc_40dfc0
cmp     dword_42c140, 5
jbe     loc_40e141
push    4000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40e141
lea     eax, [ebp+dst]
mov     ecx, ebx
push    eax
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_c8]
call    sub_40843c
call    sub_40ca1c
mov     edx, [esi+0ch]
xor     ecx, ecx
mov     [ebp+var_191], al
lea     eax, [ebp+var_191]
push    4
mov     [ebp+var_b8], eax
mov     eax, [esi]
mov     [ebp+var_b4], ecx
mov     [ebp+var_ac], ecx
mov     [ebp+var_a4], ecx
pop     ebx
mov     [ebp+var_9c], ecx
lea     ecx, [ebp+var_98]
mov     [ebp+var_b0], 1
mov     [ebp+var_a8], eax
mov     [ebp+var_a0], ebx
call    sub_408465
mov     edx, [esi+10h]
lea     ecx, [ebp+var_88]
call    sub_408465
mov     edx, [edi]
lea     ecx, [ebp+var_68]
mov     al, [edx+10h]
and     [ebp+var_74], 0
and     [ebp+var_6c], 0
mov     [ebp+var_192], al
lea     eax, [ebp+var_192]
mov     [ebp+var_78], eax
mov     [ebp+var_70], 1
mov     edx, [edx+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_58]
call    sub_40843c
mov     edx, [edi]
lea     ecx, [ebp+var_48]
add     edx, 18h
call    sub_40843c
mov     eax, [ebp+var_1a0]
lea     ecx, [ebp+var_1b8]
mov     [ebp+var_198], eax
xor     edx, edx
lea     eax, [ebp+var_198]
mov     [ebp+var_34], edx
mov     [ebp+var_38], eax
lea     eax, [ebp+var_1a8]
push    8
mov     [ebp+var_28], eax
pop     eax
mov     [ebp+var_30], ebx
mov     [ebp+var_2c], edx
mov     [ebp+var_24], edx
mov     [ebp+var_20], eax
mov     [ebp+var_1c], edx
mov     [ebp+var_18], ecx
mov     [ebp+var_14], edx
mov     [ebp+var_10], eax
mov     [ebp+var_c], edx
lea     eax, [ebp+var_e8]
mov     edx, offset byte_407c35
push    eax
push    0eh
push    ecx
push    ecx
call    sub_408330
jmp     loc_40e141
cmp     dword_42c140, 5
jbe     loc_40e141
push    4000h
push    0
call    sub_4083f9
test    al, al
jz      loc_40e141
lea     eax, [ebp+dst]
mov     ecx, ebx
push    eax
call    sub_40d839
mov     edx, eax
lea     ecx, [ebp+var_e8]
call    sub_40843c
call    sub_40ca1c
mov     edx, [esi+0ch]
xor     ecx, ecx
mov     [ebp+var_192], al
lea     eax, [ebp+var_192]
push    4
mov     [ebp+var_d8], eax
mov     eax, [esi]
mov     [ebp+var_d4], ecx
mov     [ebp+var_cc], ecx
mov     [ebp+var_c4], ecx
pop     ebx
mov     [ebp+var_bc], ecx
lea     ecx, [ebp+var_b8]
mov     [ebp+var_d0], 1
mov     [ebp+var_c8], eax
mov     [ebp+var_c0], ebx
call    sub_408465
mov     edx, [esi+10h]
lea     ecx, [ebp+var_a8]
call    sub_408465
mov     edx, [edi]
lea     ecx, [ebp+var_88]
mov     al, [edx+10h]
and     [ebp+var_94], 0
and     [ebp+var_8c], 0
mov     [ebp+var_191], al
lea     eax, [ebp+var_191]
mov     [ebp+var_98], eax
mov     [ebp+var_90], 1
mov     edx, [edx+8]
call    sub_40843c
mov     edx, offset a11162001
lea     ecx, [ebp+var_78]
call    sub_40843c
mov     edx, [edi]
lea     ecx, [ebp+var_68]
mov     edx, [edx+4]
call    sub_40843c
mov     edx, [edi]
lea     ecx, [ebp+var_58]
add     edx, 18h
call    sub_40843c
mov     eax, [edi]
lea     ecx, [ebp+var_1b8]
xor     edx, edx
push    8
mov     eax, [eax+0ch]
mov     [ebp+var_198], eax
lea     eax, [ebp+var_198]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_1a0]
mov     [ebp+var_1ac], eax
lea     eax, [ebp+var_1ac]
mov     [ebp+var_38], eax
lea     eax, [ebp+var_1a8]
mov     [ebp+var_28], eax
pop     eax
mov     [ebp+var_44], edx
mov     [ebp+var_40], ebx
mov     [ebp+var_3c], edx
mov     [ebp+var_34], edx
mov     [ebp+var_30], ebx
mov     [ebp+var_2c], edx
mov     [ebp+var_24], edx
mov     [ebp+var_20], eax
mov     [ebp+var_1c], edx
mov     [ebp+var_18], ecx
mov     [ebp+var_14], edx
mov     [ebp+var_10], eax
mov     [ebp+var_c], edx
lea     eax, [ebp+var_108]
mov     edx, offset word_407d8a
push    eax
push    10h
push    ecx
push    ecx
call    sub_408330
call    sub_40ca1c
test    al, al
jz      short loc_40e153
mov     ecx, [esi]
mov     ecx, [ecx]
call    sub_40a177
cmp     dword ptr [esi+10h], 0
jz      short loc_40e162
push    dword ptr [esi+10h]
call    sub_41731b
pop     ecx
cmp     dword ptr [esi+0ch], 0
jz      short loc_40e171
push    dword ptr [esi+0ch]
call    sub_41731b
pop     ecx
mov     ecx, edi
call    sub_409748
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
push    edi
mov     edi, [ecx]
test    edi, edi
jz      short loc_40e1a2
mov     eax, [edi]
push    esi
push    1
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     esi
pop     edi
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
push    edi
lea     esi, [ebp+arg_0]
mov     ebx, ecx
lea     edi, [ebp+var_14]
movsd
push    81h
mov     byte ptr [ebx+81h], 11h
push    0
movsd
push    ebx
movsd
movsd
mov     dword ptr [ebx+88h], 0
mov     dword ptr [ebx+8ch], 13h
call    _memset
add     esp, 0ch
lea     ecx, [ebp+var_14]
push    ebx
push    0ch
pop     edx
call    sub_40e261
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
mov     word ptr [ebx+10h], 2eh
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    10h
push    esi
mov     esi, ecx
xor     cl, cl
call    sub_40e608
cmp     dword ptr [esi+0ch], 0
jz      short loc_40e25f
push    90h
push    dword ptr [esi+0ch]
call    sub_417320
pop     ecx
pop     ecx
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     ebx, ecx
mov     eax, edx
xor     edx, edx
mov     [ebp+var_4], ebx
push    3
pop     ecx
div     ecx
xor     ecx, ecx
cmp     edx, 1
mov     [ebp+var_c], edx
mov     edi, eax
mov     esi, edx
setnz   cl
mov     [ebp+var_8], edi
add     ecx, 2
neg     esi
sbb     esi, esi
lea     eax, ds:1[edi*4]
and     esi, ecx
add     eax, esi
cmp     eax, 81h
ja      loc_40e3a9
xor     esi, esi
test    edi, edi
mov     edi, [ebp+arg_0]
jz      short loc_40e324
mov     eax, [ebp+var_4]
mov     cl, [eax]
mov     bl, [eax+1]
mov     dl, [eax+2]
add     eax, 3
mov     [ebp+var_4], eax
movzx   eax, cl
and     cl, 3
shr     eax, 2
shl     cl, 4
movzx   ecx, cl
movzx   edx, dl
mov     al, ds:byte_406ec0[eax]
mov     [esi+edi], al
movzx   eax, bl
and     bl, 0fh
shr     eax, 4
or      ecx, eax
shl     bl, 2
mov     al, ds:byte_406ec0[ecx]
mov     [esi+edi+1], al
mov     eax, edx
shr     eax, 6
and     edx, 3fh
movzx   ecx, bl
or      ecx, eax
mov     al, ds:byte_406ec0[ecx]
mov     [esi+edi+2], al
mov     al, ds:byte_406ec0[edx]
mov     [esi+edi+3], al
add     esi, 4
sub     [ebp+var_8], 1
jnz     short loc_40e2b0
mov     edx, [ebp+var_c]
mov     ebx, [ebp+var_4]
sub     edx, 1
jz      short loc_40e377
sub     edx, 1
jnz     short loc_40e3a5
mov     cl, [ebx]
mov     dl, [ebx+1]
movzx   eax, cl
and     cl, 3
shr     eax, 2
shl     cl, 4
movzx   ecx, cl
mov     al, ds:byte_406ec0[eax]
mov     [esi+edi], al
movzx   eax, dl
and     dl, 0fh
shr     eax, 4
or      ecx, eax
shl     dl, 2
mov     al, ds:byte_406ec0[ecx]
mov     [esi+edi+1], al
movzx   eax, dl
mov     al, ds:byte_406ec0[eax]
mov     [esi+edi+2], al
mov     byte ptr [esi+edi+3], 3dh
jmp     short loc_40e3a2
mov     cl, [ebx]
movzx   eax, cl
and     cl, 3
shr     eax, 2
shl     cl, 4
mov     al, ds:byte_406ec0[eax]
mov     [esi+edi], al
movzx   eax, cl
mov     al, ds:byte_406ec0[eax]
mov     [esi+edi+1], al
mov     word ptr [esi+edi+2], 3d3dh
add     esi, 4
mov     byte ptr [esi+edi], 0
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
jz      short loc_40e3c6
push    3ch
push    esi
call    sub_417320
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
cmp     dword ptr [ecx], 0
jz      short locret_40e3da
push    dword ptr [ecx]
call    ds:freelibrary
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     eax, [edx]
mov     edi, ecx
xor     ecx, ecx
mov     [edx], ecx
mov     [edi], eax
mov     eax, [edx+4]
mov     [edi+4], eax
mov     [edx+4], ecx
mov     eax, [edx+8]
mov     [edi+8], eax
mov     [edx+8], ecx
mov     eax, [edx+0ch]
mov     [edi+0ch], eax
mov     [edx+0ch], ecx
mov     eax, [edx+10h]
mov     [edi+10h], eax
mov     [edx+10h], ecx
mov     al, [edx+14h]
mov     [edi+14h], al
mov     al, [edx+15h]
mov     [edi+15h], al
mov     al, [edx+16h]
mov     [edi+16h], al
mov     al, [edx+17h]
mov     [edi+17h], al
call    sub_40e505
lea     edx, [edi+20h]
mov     [edi+18h], al
lea     ecx, [edi+1ch]
call    sub_40e564
mov     ebx, [edi]
test    ebx, ebx
jz      short loc_40e45c
mov     eax, [ebx]
push    offset dword_42c140
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
jmp     short loc_40e462
push    ecx
call    sub_408553
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ebx, [edi]
test    ebx, ebx
jz      short loc_40e48e
mov     eax, [ebx]
push    offset dword_42c140
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
jmp     short loc_40e4bf
mov     esi, off_42c120
test    esi, esi
jz      short loc_40e4ae
push    dword_42c15c
mov     ecx, esi
push    dword_42c158
call    ds:___guard_check_icall_fptr
call    esi
xor     eax, eax
mov     dword_42c158, eax
mov     dword_42c15c, eax
mov     dword_42c140, eax
cmp     dword ptr [edi+10h], 0
jz      short loc_40e4ce
push    dword ptr [edi+10h]
call    sub_41731b
pop     ecx
cmp     dword ptr [edi+0ch], 0
jz      short loc_40e4dd
push    dword ptr [edi+0ch]
call    sub_41731b
pop     ecx
cmp     dword ptr [edi+8], 0
jz      short loc_40e4ec
push    dword ptr [edi+8]
call    sub_41731b
pop     ecx
cmp     dword ptr [edi+4], 0
jz      short loc_40e4fb
push    dword ptr [edi+4]
call    sub_41731b
pop     ecx
mov     ecx, edi
pop     edi
pop     esi
pop     ebx
jmp     sub_40e187
push    ebp
mov     ebp, esp
push    ecx
push    ecx
and     [ebp+hkey], 0
lea     ecx, [ebp+hkey]
push    ebx
push    esi
push    20019h
push    offset asoftwaremicros_0
call    sub_40fc2a
mov     esi, [ebp+hkey]
test    eax, eax
js      short loc_40e553
lea     eax, [ebp+hkey]
mov     edx, offset asenseenabled
push    eax
mov     ecx, esi
call    sub_4100d5
test    eax, eax
js      short loc_40e553
cmp     [ebp+hkey], 0
setnz   bl
test    esi, esi
jz      short loc_40e54f
push    esi
call    ds:regclosekey
mov     al, bl
jmp     short loc_40e560
test    esi, esi
jz      short loc_40e55e
push    esi
call    ds:regclosekey
xor     al, al
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+hkey], 0
push    ebx
push    esi
push    edi
mov     ebx, ecx
mov     edi, edx
push    20019h
push    offset asoftwaremicros_1
lea     ecx, [ebp+hkey]
or      dword ptr [ebx], 0ffffffffh
or      dword ptr [edi], 0ffffffffh
call    sub_40fc2a
mov     esi, [ebp+hkey]
test    eax, eax
js      short loc_40e5ac
push    ebx
mov     edx, offset ampenginering
mov     ecx, esi
call    sub_4100d5
push    edi
mov     edx, offset ampcampring
mov     ecx, esi
call    sub_4100d5
cmp     dword ptr [ebx], 0ffffffffh
jnz     short loc_40e5f8
cmp     dword ptr [edi], 0ffffffffh
jnz     short loc_40e5f8
test    esi, esi
jz      short loc_40e5c5
push    esi
call    ds:regclosekey
and     [ebp+hkey], 0
push    20019h
push    offset asoftwaremicros_2
lea     ecx, [ebp+hkey]
call    sub_40fc2a
mov     esi, [ebp+hkey]
test    eax, eax
js      short loc_40e5f8
push    ebx
mov     edx, offset ampenginering
mov     ecx, esi
call    sub_4100d5
push    edi
mov     edx, offset ampcampring
mov     ecx, esi
call    sub_4100d5
test    esi, esi
jz      short loc_40e603
push    esi
call    ds:regclosekey
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebx
mov     bl, cl
mov     ecx, dword_42d7d0
test    ecx, ecx
jz      short loc_40e621
call    sub_40e46b
and     dword_42d7d0, 0
call    sub_40e7e7
test    bl, bl
pop     ebx
jnz     short locret_40e641
mov     ecx, lpcriticalsection
test    ecx, ecx
jz      short locret_40e641
call    sub_411048
and     lpcriticalsection, 0
retn
push    ebp
mov     ebp, esp
mov     eax, lpcriticalsection
sub     esp, 0ch
push    esi
mov     esi, ecx
test    eax, eax
jz      short loc_40e6a2
push    eax
lea     ecx, [ebp+lpcriticalsection]
call    sub_40e6a5
cmp     [ebp+var_4], 0
jz      short loc_40e693
mov     ecx, dword_42d7d0
test    ecx, ecx
jz      short loc_40e683
call    sub_40e46b
and     dword_42d7d0, 0
call    sub_40e7e7
call    sub_40e6f6
push    esi
mov     ecx, offset dword_42d7e8
call    sub_40e3dc
mov     dword_42d7d0, eax
cmp     [ebp+var_8], 0
jz      short loc_40e6a2
push    [ebp+lpcriticalsection]
call    ds:leavecriticalsection
pop     esi
leave
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+lpcriticalsection]
push    esi
mov     esi, ecx
push    eax
mov     [esi], eax
mov     byte ptr [esi+4], 0
call    ds:entercriticalsection
mov     byte ptr [esi+4], 1
mov     eax, esi
mov     byte ptr [esi+8], 1
pop     esi
pop     ebp
retn    4
push    7fh
pop     eax
retn    10h
push    7fh
pop     eax
retn    8
push    7fh
pop     eax
retn    1ch
push    4
mov     eax, offset loc_42b28d
call    __eh_prolog3
mov     edx, offset aadvapi32dll_0
mov     ecx, offset hmodule
xor     ebx, ebx
call    sub_40ec60
test    eax, eax
js      loc_40e7d1
mov     esi, offset aeventregister
push    esi
push    hmodule
call    ds:getprocaddress
mov     off_42c11c, eax
test    eax, eax
jnz     short loc_40e741
xor     dl, dl
mov     ecx, esi
call    sub_40ed34
jmp     short loc_40e743
mov     eax, ebx
test    eax, eax
js      loc_40e7d1
mov     esi, offset aeventunregiste
push    esi
push    hmodule
call    ds:getprocaddress
mov     off_42c120, eax
test    eax, eax
jnz     short loc_40e771
xor     dl, dl
mov     ecx, esi
call    sub_40ed34
jmp     short loc_40e773
mov     eax, ebx
test    eax, eax
js      short loc_40e7d1
mov     esi, offset aeventwritetran
push    esi
push    hmodule
call    ds:getprocaddress
mov     off_42c128, eax
test    eax, eax
jnz     short loc_40e79d
xor     dl, dl
mov     ecx, esi
call    sub_40ed34
jmp     short loc_40e79f
mov     eax, ebx
test    eax, eax
js      short loc_40e7d1
mov     esi, offset aeventactivityi
push    esi
push    hmodule
call    ds:getprocaddress
mov     off_42c124, eax
test    eax, eax
jnz     short loc_40e7c9
xor     dl, dl
mov     ecx, esi
call    sub_40ed34
jmp     short loc_40e7cb
mov     eax, ebx
test    eax, eax
js      short loc_40e7d1
mov     bl, 1
mov     [ebp+var_4], 5
test    bl, bl
jnz     short loc_40e7e1
call    sub_40e7e7
call    __eh_epilog3
retn
mov     eax, hmodule
mov     off_42c11c, offset sub_40e6d0
mov     off_42c120, offset sub_40e6e0
mov     off_42c128, offset sub_40e6f0
mov     off_42c124, offset sub_40e6e0
test    eax, eax
jz      short locret_40e826
push    eax
call    ds:freelibrary
and     hmodule, 0
retn
push    ebp
mov     ebp, esp
push    0
push    4
lea     eax, [ebp+arg_c]
push    eax
push    4
lea     eax, [ebp+arg_8]
push    eax
push    ecx
push    offset stru_407220
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_8]
push    esi
push    edi
xor     edi, edi
mov     [ebp+var_4], 8
test    ecx, ecx
jz      short loc_40e886
mov     edx, ecx
lea     esi, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, di
jnz     short loc_40e86e
sub     edx, esi
sar     edx, 1
lea     edx, ds:2[edx*2]
jmp     short loc_40e889
push    0ah
pop     edx
test    ecx, ecx
jnz     short loc_40e892
mov     ecx, offset anull
push    edi
push    4
lea     eax, [ebp+arg_10]
push    eax
push    4
lea     eax, [ebp+var_4]
push    eax
push    edx
push    ecx
push    1ah
push    offset stru_407220
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 30h
pop     edi
pop     esi
leave
retn    14h
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_c]
push    esi
push    edi
xor     edi, edi
test    ecx, ecx
jz      short loc_40e8ea
mov     edx, ecx
lea     esi, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, di
jnz     short loc_40e8d2
sub     edx, esi
sar     edx, 1
lea     edx, ds:2[edx*2]
jmp     short loc_40e8ed
push    0ah
pop     edx
test    ecx, ecx
jnz     short loc_40e8f6
mov     ecx, offset anull
push    edi
push    4
lea     eax, [ebp+arg_10]
push    eax
push    edx
push    ecx
push    24h
push    offset name
push    3ah
push    offset stru_407220
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 30h
pop     edi
pop     esi
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_8]
xor     eax, eax
mov     [ebp+var_4], eax
test    edi, edi
jz      short loc_40e957
mov     esi, edi
lea     ebx, [esi+2]
mov     ax, [esi]
add     esi, 2
cmp     ax, word ptr [ebp+var_4]
jnz     short loc_40e93c
sub     esi, ebx
sar     esi, 1
xor     eax, eax
lea     esi, ds:2[esi*2]
jmp     short loc_40e95a
push    0ah
pop     esi
test    edi, edi
jnz     short loc_40e963
mov     edi, offset anull
push    eax
push    4
lea     eax, [ebp+arg_c]
push    eax
push    esi
push    edi
push    ecx
push    edx
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     edi
pop     esi
pop     ebx
leave
retn    10h
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_8]
push    esi
test    ecx, ecx
jz      short loc_40e9a2
mov     edx, ecx
lea     esi, [edx+1]
mov     al, [edx]
inc     edx
test    al, al
jnz     short loc_40e996
sub     edx, esi
inc     edx
jmp     short loc_40e9a5
push    5
pop     edx
test    ecx, ecx
jnz     short loc_40e9ae
mov     ecx, offset anull_0
push    0
push    4
lea     eax, [ebp+arg_c]
push    eax
push    edx
push    ecx
push    1ch
push    offset stru_407220
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 28h
pop     esi
pop     ebp
retn    10h
push    ecx
call    sub_40fba5
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40ea03
test    byte ptr [ecx+1ch], 1
jz      short loc_40ea03
push    eax
push    dword ptr [ecx+14h]
mov     edx, offset stru_407220
push    dword ptr [ecx+10h]
push    0ah
pop     ecx
call    sub_408951
pop     ecx
retn
push    esi
mov     esi, edx
push    esi
push    ecx
call    ds:waitforsingleobject
mov     ecx, 102h
test    eax, eax
jz      short loc_40ea5d
cmp     eax, 80h
jz      short loc_40ea5d
cmp     eax, ecx
jz      short loc_40ea5f
mov     edx, 80070006h
cmp     eax, 0ffffffffh
jnz     short loc_40ea35
call    sub_40fba5
mov     edx, eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40ea59
test    byte ptr [ecx+1ch], 1
jz      short loc_40ea59
push    edx
push    esi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    12h
pop     ecx
call    sub_40e827
xor     al, al
pop     esi
retn
cmp     eax, ecx
setz    al
pop     esi
retn
push    ebx
push    esi
push    edi
mov     edi, ecx
call    sub_40fba5
mov     esi, eax
mov     ebx, 80070057h
cmp     esi, ebx
jz      short loc_40eaa1
mov     edx, off_42c118
cmp     edx, offset off_42c118
jz      short loc_40ea9d
test    byte ptr [edx+1ch], 1
jz      short loc_40ea9d
push    esi
push    edi
push    dword ptr [edx+14h]
push    dword ptr [edx+10h]
push    13h
pop     ecx
call    sub_40e827
mov     eax, esi
jmp     short loc_40eac7
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40eac5
test    byte ptr [ecx+1ch], 4
jz      short loc_40eac5
push    ebx
push    edi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    14h
pop     ecx
call    sub_40e827
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_40fba5
mov     esi, eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40eafb
test    byte ptr [ecx+1ch], 1
jz      short loc_40eafb
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407220
push    dword ptr [ecx+10h]
push    15h
pop     ecx
call    sub_408951
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     eax, edx
xor     esi, esi
push    esi
mov     ebx, ecx
mov     [ebp+var_c], eax
push    esi
mov     [ebp+var_8], ebx
mov     [eax], esi
call    ds:___guard_check_icall_fptr
call    ebx
mov     ebx, eax
test    ebx, ebx
jnz     short loc_40eb2c
call    sub_40fba5
jmp     short loc_40eb8a
push    edi
mov     edx, ebx
mov     [ebp+block], esi
lea     ecx, [ebp+block]
call    sub_409ff0
mov     esi, [ebp+block]
mov     edi, eax
test    edi, edi
js      short loc_40eb7c
mov     edi, [ebp+var_8]
mov     ecx, edi
push    ebx
push    esi
call    ds:___guard_check_icall_fptr
call    edi
lea     ecx, [ebx-1]
cmp     eax, ecx
jz      short loc_40eb62
call    sub_40fba5
mov     edi, eax
jmp     short loc_40eb7c
cmp     word ptr [esi+eax*2-2], 5ch
jnz     short loc_40eb71
xor     ecx, ecx
mov     [esi+eax*2-2], cx
mov     ecx, [ebp+var_c]
mov     eax, esi
xor     esi, esi
xor     edi, edi
mov     [ecx], eax
test    esi, esi
jz      short loc_40eb87
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+block], 0
push    ebx
push    esi
push    edi
mov     ebx, edx
lea     edx, [ebp+block]
push    ecx
call    sub_40eaff
mov     esi, [ebp+block]
mov     edi, eax
test    edi, edi
js      short loc_40ebd7
cmp     [ebp+arg_0], 0
jz      short loc_40ebc9
push    [ebp+arg_0]
push    esi
push    offset alsls
push    ebx
call    sub_40fa00
add     esp, 10h
jmp     short loc_40ebd5
mov     esi, [ebp+block]
mov     ecx, ebx
mov     edx, esi
call    sub_40f94e
mov     edi, eax
test    esi, esi
jz      short loc_40ebe2
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn    8
push    ecx
push    ebx
push    esi
push    edi
mov     edi, edx
mov     esi, ecx
mov     eax, off_42c118
mov     ebx, offset off_42c118
cmp     eax, ebx
jz      short loc_40ec1d
test    byte ptr [eax+1ch], 4
jz      short loc_40ec1d
push    8
push    edi
push    dword ptr [eax+14h]
mov     edx, offset stru_407220
push    dword ptr [eax+10h]
push    19h
pop     ecx
call    sub_408904
push    8
push    0
push    edi
call    ds:loadlibraryexw
mov     [esi], eax
test    eax, eax
jnz     short loc_40ec57
call    sub_40fba5
mov     esi, eax
mov     ecx, off_42c118
cmp     ecx, ebx
jz      short loc_40ec53
test    byte ptr [ecx+1ch], 1
jz      short loc_40ec53
push    esi
push    ecx
push    edi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
call    sub_40e853
mov     eax, esi
jmp     short loc_40ec59
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ecx
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
and     [esp+0ch+str], 0
push    ebx
push    esi
push    edi
mov     edi, edx
mov     [esp+18h+var_4], ecx
push    ecx
mov     ecx, ds:getsystemdirectoryw
lea     edx, [esp+1ch+str]
push    edi
call    sub_40eb90
mov     esi, [esp+18h+str]
mov     ebx, eax
test    ebx, ebx
js      loc_40ed20
mov     ecx, esi
call    sub_40f25c
test    eax, eax
jns     short loc_40ed12
and     [esp+18h+block], 0
lea     eax, [esp+18h+block]
push    edi
push    offset aforwardersls
push    eax
call    sub_40fa00
mov     edi, [esp+24h+block]
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
js      short loc_40ecfa
test    esi, esi
jz      short loc_40ecd2
push    esi
call    sub_41731b
and     [esp+1ch+str], 0
pop     ecx
push    ecx
mov     ecx, ds:getsystemdirectoryw
lea     edx, [esp+1ch+str]
push    edi
call    sub_40eb90
mov     esi, [esp+18h+str]
mov     ebx, eax
test    ebx, ebx
js      short loc_40ecfa
mov     ecx, esi
call    sub_40f25c
mov     ebx, eax
test    ebx, ebx
jns     short loc_40ed07
test    edi, edi
jz      short loc_40ed20
push    edi
call    sub_41731b
pop     ecx
jmp     short loc_40ed20
test    edi, edi
jz      short loc_40ed12
push    edi
call    sub_41731b
pop     ecx
push    ecx
mov     ecx, [esp+1ch+var_4]
mov     edx, esi
call    sub_40ebeb
mov     ebx, eax
test    esi, esi
jz      short loc_40ed2b
push    esi
call    sub_41731b
pop     ecx
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
push    esi
push    edi
mov     edi, ecx
call    sub_40fba5
mov     esi, eax
mov     eax, 8007007fh
cmp     esi, eax
jz      short loc_40ed9e
test    edi, 0ffff0000h
jnz     short loc_40ed75
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40ed94
test    byte ptr [eax+1ch], 2
jz      short loc_40ed94
push    esi
push    edi
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    1bh
pop     ecx
call    sub_40e827
jmp     short loc_40ed94
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40ed94
test    byte ptr [eax+1ch], 2
jz      short loc_40ed94
push    esi
push    edi
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
call    sub_40e986
test    esi, esi
jns     short loc_40ed9c
mov     eax, esi
jmp     short loc_40ed9e
xor     eax, eax
pop     edi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, edx
mov     ebx, ecx
push    edi
call    ds:getmodulehandlew
test    eax, eax
jnz     short loc_40edeb
call    sub_40fba5
mov     esi, eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40ede7
test    byte ptr [ecx+1ch], 1
jz      short loc_40ede7
push    esi
push    edi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407220
push    dword ptr [ecx+10h]
push    1dh
pop     ecx
call    sub_40e924
mov     eax, esi
jmp     short loc_40ee1f
push    [ebp+lpprocname]
push    eax
call    ds:getprocaddress
mov     esi, eax
test    esi, esi
jnz     short loc_40ee08
mov     dl, [ebp+arg_4]
mov     ecx, [ebp+lpprocname]
call    sub_40ed34
jmp     short loc_40ee0a
xor     eax, eax
mov     ecx, 8007007fh
cmp     eax, ecx
jnz     short loc_40ee17
mov     eax, ecx
jmp     short loc_40ee1f
test    eax, eax
js      short loc_40ee1f
mov     [ebx], esi
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, ecx
push    esi
push    edi
mov     edi, edx
mov     esi, [ebx]
test    esi, esi
jz      short loc_40ee93
push    esi
push    edi
push    [ebp+hmodule]
call    ds:getmodulefilenamew
test    eax, eax
jnz     short loc_40ee78
call    sub_40fba5
mov     esi, eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40ee74
test    byte ptr [ecx+1ch], 1
jz      short loc_40ee74
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407220
push    dword ptr [ecx+10h]
push    1eh
pop     ecx
call    sub_408951
mov     eax, esi
jmp     short loc_40ee98
cmp     eax, esi
jnb     short loc_40ee8c
cmp     word ptr [edi+eax*2], 0
jnz     short loc_40ee8a
inc     eax
mov     [ebx], eax
xor     eax, eax
jmp     short loc_40ee98
cmp     eax, esi
mov     eax, 8000ffffh
jnz     short loc_40ee98
mov     eax, 8007007ah
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 21ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     eax, edx
mov     [ebp+var_214], 104h
push    edi
mov     ebx, ecx
mov     [ebp+var_21c], eax
push    eax
lea     edx, [ebp+var_210]
lea     ecx, [ebp+var_214]
call    sub_40ee26
mov     edx, eax
test    edx, edx
js      short loc_40eef3
lea     edx, [ebp+var_210]
mov     ecx, ebx
call    sub_40f94e
jmp     loc_40ef80
lea     eax, [edx+7ff8ff86h]
neg     eax
sbb     eax, eax
and     eax, edx
jl      short loc_40ef80
xor     esi, esi
mov     [ebp+block], esi
jmp     short loc_40ef5d
mov     [ebp+var_214], edi
test    esi, esi
jz      short loc_40ef23
push    esi
call    sub_41731b
and     [ebp+block], 0
pop     ecx
mov     edx, edi
lea     ecx, [ebp+block]
call    sub_409ff0
mov     esi, [ebp+block]
mov     edi, eax
test    edi, edi
js      short loc_40ef73
push    [ebp+var_21c]
mov     edx, esi
lea     ecx, [ebp+var_214]
call    sub_40ee26
mov     edi, eax
test    edi, edi
jns     short loc_40ef8f
cmp     edi, 8007007ah
jnz     short loc_40ef73
imul    edi, [ebp+var_214], 3
shr     edi, 1
cmp     [ebp+var_214], edi
jb      short loc_40ef0b
mov     edi, 8007000eh
test    esi, esi
jz      short loc_40ef7e
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
mov     edx, esi
mov     ecx, ebx
call    sub_40f94e
mov     edi, eax
jmp     short loc_40ef73
push    ecx
push    esi
push    edi
mov     edi, ecx
call    sub_40fba5
mov     esi, eax
mov     edx, off_42c118
cmp     edx, offset off_42c118
jz      short loc_40efd1
test    byte ptr [edx+1ch], 1
jz      short loc_40efd1
push    esi
push    edi
push    dword ptr [edx+14h]
push    dword ptr [edx+10h]
mov     edx, offset stru_407220
push    1fh
pop     ecx
call    sub_40e924
pop     edi
mov     eax, esi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
push    0
push    [ebp+dwflagsandattributes]
mov     esi, ecx
mov     edi, edx
push    [ebp+dwcreationdisposition]
push    0
push    [ebp+dwsharemode]
or      dword ptr [esi], 0ffffffffh
push    [ebp+dwdesiredaccess]
push    edi
call    ds:createfilew
mov     [esi], eax
cmp     eax, 0ffffffffh
jz      short loc_40f005
xor     eax, eax
jmp     short loc_40f060
call    sub_40fba5
mov     esi, eax
lea     ecx, [esi+7ff8fffeh]
cmp     ecx, 1
ja      short loc_40f037
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40f05e
test    byte ptr [ecx+1ch], 4
jz      short loc_40f05e
push    esi
push    edi
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    20h
jmp     short loc_40f053
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40f05e
test    byte ptr [eax+1ch], 1
jz      short loc_40f05e
push    esi
push    edi
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    21h
mov     edx, offset stru_407220
pop     ecx
call    sub_40e924
mov     eax, esi
pop     edi
pop     esi
pop     ebp
retn    18h
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
push    edi
mov     edi, edx
lea     eax, [ebp+numberofbytesread]
xor     ebx, ebx
push    ebx
push    eax
mov     esi, [edi]
push    esi
push    [ebp+lpbuffer]
mov     [edi], ebx
push    ecx
mov     [ebp+numberofbytesread], ebx
call    ds:readfile
test    eax, eax
jnz     short loc_40f0ca
call    sub_40fba5
mov     esi, eax
cmp     esi, 80070026h
jnz     short loc_40f0a0
mov     [edi], ebx
jmp     short loc_40f0da
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40f0c6
test    byte ptr [eax+1ch], 1
jz      short loc_40f0c6
push    esi
push    dword ptr [eax+14h]
mov     edx, offset stru_407220
push    dword ptr [eax+10h]
push    2ah
pop     ecx
call    sub_408951
mov     eax, esi
jmp     short loc_40f0dc
mov     eax, [ebp+numberofbytesread]
cmp     eax, esi
jbe     short loc_40f0d8
mov     eax, 8000ffffh
jmp     short loc_40f0dc
mov     [edi], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    esi
call    sub_40fba5
mov     esi, eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40f113
test    byte ptr [ecx+1ch], 1
jz      short loc_40f113
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407220
push    dword ptr [ecx+10h]
push    2bh
pop     ecx
call    sub_408951
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     esi, edx
and     dword ptr [edi], 0
cmp     [ebp+arg_0], 0
jnz     short loc_40f174
cmp     word ptr [esi], 22h
jz      short loc_40f174
push    2eh
push    esi
call    _wcschr
mov     ebx, eax
pop     ecx
pop     ecx
test    ebx, ebx
jz      short loc_40f17a
mov     ecx, esi
call    sub_410dcf
cmp     eax, ebx
ja      short loc_40f17a
mov     ecx, ebx
call    sub_410dcf
mov     ecx, eax
sub     ecx, esi
sar     ecx, 1
jns     short loc_40f161
mov     eax, 80070057h
jmp     short loc_40f18c
push    eax
push    esi
push    ecx
push    offset alsls_0
push    edi
call    sub_40fa00
add     esp, 14h
jmp     short loc_40f176
xor     eax, eax
test    eax, eax
js      short loc_40f18c
cmp     dword ptr [edi], 0
jnz     short loc_40f18a
mov     edx, esi
mov     ecx, edi
call    sub_40f94e
jmp     short loc_40f18c
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 64h
and     [ebp+lpcommandline], 0
push    ebx
push    esi
push    edi
push    [ebp+lpapplicationname]
mov     ebx, ecx
lea     ecx, [ebp+lpcommandline]
call    sub_40f117
mov     esi, [ebp+lpcommandline]
mov     edi, eax
test    edi, edi
js      loc_40f248
xor     eax, eax
lea     edi, [ebp+processinformation]
stosd
push    44h
stosd
stosd
stosd
lea     eax, [ebp+startupinfo]
pop     edi
push    edi
push    0
push    eax
call    _memset
add     esp, 0ch
mov     [ebp+startupinfo.cb], edi
lea     eax, [ebp+processinformation]
xor     edi, edi
push    eax
lea     eax, [ebp+startupinfo]
push    eax
push    [ebp+lpcurrentdirectory]
push    edi
push    8000000h
push    edi
push    edi
push    edi
push    esi
push    [ebp+lpapplicationname]
call    ds:createprocessw
test    eax, eax
jnz     short loc_40f22c
call    sub_40fba5
mov     edi, eax
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40f248
test    byte ptr [eax+1ch], 1
jz      short loc_40f248
push    edi
push    esi
push    dword ptr [eax+14h]
mov     edx, offset stru_407220
push    dword ptr [eax+10h]
push    2eh
pop     ecx
call    sub_40e924
jmp     short loc_40f248
cmp     [ebp+processinformation.hthread], edi
jz      short loc_40f243
push    [ebp+processinformation.hthread]
call    ds:closehandle
test    eax, eax
jnz     short loc_40f243
call    sub_40e9d5
mov     eax, [ebp+processinformation.hprocess]
mov     [ebx], eax
test    esi, esi
jz      short loc_40f253
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn    20h
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+var_4], 0
push    esi
mov     esi, ecx
lea     ecx, [ebp+var_4]
mov     edx, esi
call    sub_40f3f5
test    eax, eax
js      short loc_40f2aa
test    byte ptr [ebp+var_4], 10h
jz      short loc_40f2a8
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40f2a1
test    byte ptr [eax+1ch], 1
jz      short loc_40f2a1
push    esi
push    dword ptr [eax+14h]
mov     edx, offset stru_407220
push    dword ptr [eax+10h]
push    36h
pop     ecx
call    sub_4088bd
mov     eax, 800700b7h
jmp     short loc_40f2aa
xor     eax, eax
pop     esi
leave
retn
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+var_4], 0
push    esi
mov     esi, ecx
lea     ecx, [ebp+var_4]
mov     edx, esi
call    sub_40f3f5
test    eax, eax
js      short loc_40f2fb
test    byte ptr [ebp+var_4], 10h
jnz     short loc_40f2f9
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40f2f2
test    byte ptr [eax+1ch], 1
jz      short loc_40f2f2
push    esi
push    dword ptr [eax+14h]
mov     edx, offset stru_407220
push    dword ptr [eax+10h]
push    37h
pop     ecx
call    sub_4088bd
mov     eax, 800700b7h
jmp     short loc_40f2fb
xor     eax, eax
pop     esi
leave
retn
push    ecx
push    esi
push    edi
mov     edi, edx
push    edi
push    offset name
call    ds:setenvironmentvariablew
test    eax, eax
jnz     short loc_40f34c
call    sub_40fba5
mov     esi, eax
test    edi, edi
jnz     short loc_40f326
cmp     esi, 800700cbh
jz      short loc_40f34c
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40f348
test    byte ptr [ecx+1ch], 1
jz      short loc_40f348
push    esi
push    edi
push    ecx
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
call    sub_40e8bf
mov     eax, esi
jmp     short loc_40f34e
xor     eax, eax
pop     edi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, edx
push    ebx
push    esi
mov     [ebp+var_4], eax
mov     ebx, [eax]
xor     eax, eax
push    edi
push    eax
call    ds:setlasterror
mov     edi, [ebp+lpbuffer]
push    ebx
push    edi
push    offset name
call    ds:getenvironmentvariablew
mov     esi, eax
test    esi, esi
jnz     short loc_40f3c6
call    sub_40a4c6
mov     edi, eax
test    edi, edi
jns     short loc_40f3c3
mov     eax, 800700cbh
cmp     edi, eax
jz      short loc_40f3ee
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40f3bf
test    byte ptr [eax+1ch], 1
jz      short loc_40f3bf
push    edi
push    offset name
push    dword ptr [eax+14h]
mov     edx, offset stru_407220
push    dword ptr [eax+10h]
push    3bh
pop     ecx
call    sub_40e924
mov     eax, edi
jmp     short loc_40f3ee
mov     edi, [ebp+lpbuffer]
cmp     esi, ebx
jnb     short loc_40f3d9
xor     eax, eax
cmp     [edi+esi*2], ax
jz      short loc_40f3d9
mov     eax, 8000ffffh
jmp     short loc_40f3ee
inc     esi
cmp     esi, ebx
jbe     short loc_40f3e7
test    ebx, ebx
jz      short loc_40f3e7
xor     eax, eax
mov     [edi], ax
mov     eax, [ebp+var_4]
mov     [eax], esi
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    ecx
push    esi
push    edi
mov     edi, edx
mov     esi, ecx
push    edi
call    ds:getfileattributesw
cmp     eax, 0ffffffffh
jnz     short loc_40f44a
call    sub_40fba5
mov     esi, eax
cmp     esi, 80070002h
jz      short loc_40f446
cmp     esi, 80070003h
jz      short loc_40f446
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40f446
test    byte ptr [eax+1ch], 1
jz      short loc_40f446
push    esi
push    edi
push    dword ptr [eax+14h]
mov     edx, offset stru_407220
push    dword ptr [eax+10h]
push    3eh
pop     ecx
call    sub_40e924
mov     eax, esi
jmp     short loc_40f44e
mov     [esi], eax
xor     eax, eax
pop     edi
pop     esi
pop     ecx
retn
push    ecx
push    esi
push    edi
mov     edi, ecx
push    edi
call    ds:deletefilew
test    eax, eax
jz      short loc_40f466
xor     eax, eax
jmp     short loc_40f4a6
call    sub_40fba5
mov     esi, eax
cmp     esi, 80070002h
jz      short loc_40f4a4
cmp     esi, 80070003h
jz      short loc_40f4a4
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40f4a4
test    byte ptr [eax+1ch], 1
jz      short loc_40f4a4
push    esi
push    edi
push    dword ptr [eax+14h]
mov     edx, offset stru_407220
push    dword ptr [eax+10h]
push    40h
pop     ecx
call    sub_40e924
mov     eax, esi
pop     edi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
push    eax
push    offset ahr0x08x
push    0eh
and     dword ptr [esi+4], 0
and     dword ptr [esi+8], 0
mov     [esi+1ch], eax
lea     eax, [esi+0ch]
push    eax
mov     dword ptr [esi], offset ??_7chresultexceptionimpl@commonutil@@6b@
call    sub_40cfc8
add     esp, 10h
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     eax, [ecx+1ch]
retn
lea     eax, [ecx+0ch]
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     eax, [esi+4]
mov     dword ptr [esi], offset ??_7exception@std@@6b@
push    eax
call    sub_41a282
test    [ebp+arg_0], 1
pop     ecx
jz      short loc_40f526
push    20h
push    esi
call    sub_417320
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 24h
push    ebx
push    esi
mov     esi, ecx
mov     ebx, offset stru_40723c
push    edi
mov     edi, offset off_42c118
test    esi, esi
js      short loc_40f571
mov     eax, off_42c118
cmp     eax, edi
jz      short loc_40f56a
test    byte ptr [eax+1ch], 1
jz      short loc_40f56a
push    dword ptr [eax+14h]
mov     edx, ebx
push    dword ptr [eax+10h]
push    0ah
pop     ecx
call    sub_408740
mov     eax, off_42c118
mov     esi, 8000ffffh
jmp     short loc_40f576
mov     eax, off_42c118
cmp     eax, edi
jz      short loc_40f591
test    byte ptr [eax+1ch], 1
jz      short loc_40f591
push    esi
push    dword ptr [eax+14h]
mov     edx, ebx
push    dword ptr [eax+10h]
push    0bh
pop     ecx
call    sub_408951
push    esi
lea     ecx, [ebp+var_20]
call    sub_40f4aa
push    offset __ti3?avchresultexceptionimpl@commonutil@@
lea     eax, [ebp+var_20]
push    eax
call    sub_41a2a3
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, ecx
push    ebx
mov     [ebp+var_4], edi
call    ??0exception@std@@qae@abv01@@z
mov     ecx, [ebp+var_4]
lea     esi, [ebx+0ch]
mov     dword ptr [edi], offset ??_7chresultexceptionimpl@commonutil@@6b@
add     edi, 0ch
movsd
movsd
movsd
movsw
mov     eax, [ebx+1ch]
pop     edi
pop     esi
mov     [ecx+1ch], eax
mov     eax, ecx
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7chresultexception@commonutil@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     eax, ecx
push    ecx
test    eax, eax
jle     short loc_40f61a
movzx   eax, ax
or      eax, 80070000h
mov     ecx, eax
call    sub_40f52d
push    1ch
mov     eax, offset loc_42b2a8
call    __eh_prolog3_catch
xor     eax, eax
push    eax
push    eax
mov     [ebp+var_4], eax
call    sub_41a2a3
mov     edi, [ebp+var_18]
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     [ebp+var_14], eax
test    eax, eax
js      short loc_40f65c
mov     [ebp+var_14], 8000ffffh
mov     eax, offset loc_40f696
retn
mov     [ebp+var_14], 8007000eh
mov     eax, offset loc_40f696
retn
mov     [ebp+var_14], 80070585h
mov     eax, offset loc_40f696
retn
mov     [ebp+var_14], 80070585h
mov     eax, offset loc_40f696
retn
mov     [ebp+var_14], 80004005h
mov     eax, offset loc_40f696
retn
mov     eax, [ebp+var_14]
call    __eh_epilog3
retn
push    esi
movzx   esi, cl
xor     cl, 1
push    edi
mov     edi, dword_42d674
jnz     short loc_40f6b7
mov     dword_42d680, esi
jmp     short loc_40f6c3
cmp     cl, 1
jnz     short loc_40f6cf
mov     ecx, edi
call    sub_411059
mov     dword_42d678, edi
mov     dword_42d67c, esi
pop     edi
pop     esi
retn
push    ecx
push    esi
push    edi
xor     edi, edi
push    edi
call    ds:getmodulehandlew
xor     cl, cl
mov     dword_42d674, eax
call    sub_40f69f
call    sub_41115d
mov     esi, eax
test    esi, esi
jns     short loc_40f700
mov     cl, 1
call    sub_40f69f
mov     eax, esi
jmp     short loc_40f727
push    edi
push    edi
push    1
push    edi
call    ds:heapsetinformation
call    sub_411fe7
mov     esi, eax
test    esi, esi
jns     short loc_40f725
cmp     dword_42d7dc, edi
jz      short loc_40f6f5
call    sub_411110
jmp     short loc_40f6f5
xor     eax, eax
pop     edi
pop     esi
pop     ecx
retn
call    sub_412047
cmp     dword_42d7dc, 0
jz      short loc_40f73e
call    sub_411110
mov     cl, 1
jmp     sub_40f69f
push    ebp
mov     ebp, esp
sub     esp, 14h
and     [ebp+var_8], 0
mov     eax, edx
push    ebx
push    esi
mov     esi, off_42c138
push    edi
mov     [ebp+var_10], ecx
lea     ecx, [ebp+var_8]
push    ecx
push    eax
push    1
mov     ecx, esi
mov     [ebp+var_c], eax
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
test    ebx, ebx
jz      short loc_40f77b
xor     eax, eax
jmp     short loc_40f786
call    sub_40fba5
test    eax, eax
jns     short loc_40f78e
xor     ebx, ebx
test    eax, eax
js      loc_40f822
add     ebx, 8
cmp     ebx, 8
ja      short loc_40f7a0
mov     eax, 80070216h
jmp     loc_40f822
and     [ebp+block], 0
lea     ecx, [ebp+block]
mov     edx, ebx
call    sub_409fce
mov     esi, [ebp+block]
mov     edi, eax
test    edi, edi
js      short loc_40f815
mov     edi, off_42c12c
mov     ecx, edi
push    esi
push    ebx
push    [ebp+var_8]
mov     ebx, [ebp+var_c]
push    ebx
push    1
call    ds:___guard_check_icall_fptr
call    edi
test    eax, eax
jnz     short loc_40f80a
call    sub_40fba5
mov     edi, eax
test    edi, edi
jns     short loc_40f80a
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40f815
test    byte ptr [eax+1ch], 1
jz      short loc_40f815
push    edi
push    ebx
push    dword ptr [eax+14h]
mov     edx, offset stru_40724c
push    dword ptr [eax+10h]
push    0ah
pop     ecx
call    sub_40e924
jmp     short loc_40f815
mov     ecx, [ebp+var_10]
mov     eax, esi
xor     esi, esi
xor     edi, edi
mov     [ecx], eax
test    esi, esi
jz      short loc_40f820
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, off_42c130
lea     eax, [ebp+var_4]
push    edi
push    eax
lea     eax, [ebp+var_8]
mov     ebx, ecx
push    eax
push    offset dword_406bd0
xor     edi, edi
mov     ecx, esi
push    edx
mov     [ebp+var_4], edi
mov     [ebp+var_8], edi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jnz     short loc_40f86d
call    sub_40a4c6
mov     edi, eax
test    edi, edi
js      short loc_40f871
mov     edi, 80070715h
jmp     short loc_40f871
test    edi, edi
jns     short loc_40f875
mov     eax, edi
jmp     short loc_40f88e
cmp     [ebp+var_4], 34h
jnb     short loc_40f882
mov     eax, 8000ffffh
jmp     short loc_40f88e
mov     esi, [ebp+var_8]
mov     edi, ebx
push    0dh
pop     ecx
rep movsd
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 40h
push    ebx
push    esi
push    0
mov     [ebp+var_c], ecx
call    ds:getmodulehandlew
mov     esi, eax
test    esi, esi
jnz     short loc_40f8b5
xor     ecx, ecx
call    sub_40ef9c
jmp     short loc_40f8b7
xor     eax, eax
test    eax, eax
js      short loc_40f928
and     [ebp+var_4], 0
lea     ecx, [ebp+var_4]
mov     edx, esi
call    sub_40ee9f
mov     ebx, eax
test    ebx, ebx
js      short loc_40f917
mov     edx, [ebp+var_4]
lea     ecx, [ebp+block]
and     [ebp+block], 0
call    sub_40f745
mov     esi, [ebp+block]
mov     ebx, eax
test    ebx, ebx
js      short loc_40f90c
mov     edx, esi
lea     ecx, [ebp+var_40]
call    sub_40f827
mov     ebx, eax
test    ebx, ebx
js      short loc_40f90c
mov     edx, [ebp+var_c]
xor     eax, eax
add     eax, [ebp+var_34]
mov     ecx, [ebp+var_38]
adc     ecx, 0
xor     ebx, ebx
mov     [edx], eax
mov     [edx+4], ecx
test    esi, esi
jz      short loc_40f917
push    esi
call    sub_41731b
pop     ecx
cmp     [ebp+var_4], 0
jz      short loc_40f926
push    [ebp+var_4]
call    sub_41731b
pop     ecx
mov     eax, ebx
pop     esi
pop     ebx
leave
retn
push    esi
push    offset word_42d622
push    edx
mov     esi, ecx
call    sub_42abf7
mov     [esi], eax
neg     eax
pop     ecx
sbb     eax, eax
pop     ecx
and     eax, 7ff8fff2h
add     eax, 8007000eh
pop     esi
retn
push    esi
push    edi
mov     esi, edx
lea     edi, [edx+2]
mov     ax, [edx]
add     edx, 2
test    ax, ax
jnz     short loc_40f955
sub     edx, edi
sar     edx, 1
push    esi
inc     edx
call    sub_40ca9d
pop     edi
pop     esi
retn
push    4
mov     eax, offset loc_42b2cb
call    __eh_prolog3
mov     esi, ecx
mov     [ebp+var_10], esi
and     [ebp+var_10], 0
and     [ebp+var_4], 0
lea     ecx, [ebp+var_10]
call    sub_40f94e
test    eax, eax
js      short loc_40f9a0
mov     eax, [ebp+var_10]
mov     [esi], eax
mov     eax, esi
call    __eh_epilog3
retn
mov     ecx, eax
call    sub_40f52d
cmp     dword ptr [ecx], 0
jz      short locret_40f9b5
push    dword ptr [ecx]
call    sub_417dfe
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
push    edi
push    ecx
push    [ebp+arg_0]
mov     ebx, ecx
xor     esi, esi
push    edx
lea     edx, [ebp+block]
mov     [ebp+block], esi
lea     ecx, [ebp+var_8]
mov     [ebp+var_8], esi
mov     [ebx], esi
call    sub_40fa14
mov     edi, eax
test    edi, edi
jns     short loc_40f9e5
mov     esi, [ebp+block]
jmp     short loc_40f9ec
mov     eax, [ebp+block]
mov     edi, esi
mov     [ebx], eax
test    esi, esi
jz      short loc_40f9f7
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
lea     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
push    eax
call    sub_40f9b6
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 218h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     edi, edx
mov     [ebp+var_218], eax
mov     ebx, ecx
xor     edx, edx
mov     ecx, [ebp+arg_4]
push    ecx
push    eax
mov     esi, [ebx]
lea     eax, [ebp+var_210]
mov     [ebp+var_210], edx
mov     edx, [edi]
mov     [ebp+var_214], ecx
push    eax
test    edx, edx
jnz     loc_40fae3
mov     esi, 104h
lea     edx, [ebp+src]
mov     ecx, esi
call    sub_41218d
test    eax, eax
js      short loc_40faf1
lea     ecx, [ebp+src]
xor     esi, esi
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
cmp     ax, si
jnz     short loc_40fa7e
sub     ecx, edx
sar     ecx, 1
lea     esi, [ecx+1]
mov     ecx, edi
mov     edx, esi
call    sub_40fb66
test    eax, eax
jns     short loc_40faa1
xor     esi, esi
jmp     short loc_40faba
lea     eax, [esi+esi]
push    eax
lea     eax, [ebp+src]
push    eax
push    dword ptr [edi]
call    _memmove
add     esp, 0ch
xor     esi, esi
mov     eax, esi
test    eax, eax
js      loc_40fb55
lea     ecx, [ebp+src]
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
cmp     ax, si
jnz     short loc_40facb
sub     ecx, edx
sar     ecx, 1
lea     eax, [ecx+1]
mov     [ebx], eax
xor     eax, eax
jmp     short loc_40fb55
mov     ecx, esi
call    sub_41218d
cmp     eax, 8007007ah
jnz     short loc_40fb55
cmp     esi, [ebp+var_210]
jnb     short loc_40fb01
mov     esi, [ebp+var_210]
jmp     short loc_40fb06
imul    esi, 3
shr     esi, 1
cmp     esi, 7fffffffh
ja      short loc_40fb50
mov     edx, esi
mov     ecx, edi
call    sub_40fb66
test    eax, eax
js      short loc_40fb46
push    [ebp+var_214]
lea     eax, [ebp+var_210]
mov     [ebx], esi
push    [ebp+var_218]
mov     edx, [edi]
mov     ecx, esi
push    eax
call    sub_41218d
cmp     eax, 8007007ah
jz      short loc_40faf1
test    eax, eax
js      short loc_40fb55
jmp     short loc_40fadf
xor     ecx, ecx
cmp     [edi], ecx
jnz     short loc_40fb55
mov     [ebx], ecx
jmp     short loc_40fb55
mov     eax, 8007007ah
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    0ch
push    esi
push    edi
mov     edi, ecx
mov     esi, edx
push    dword ptr [edi]
call    sub_41731b
mov     [esp+0ch+var_c], offset word_42d622
xor     ecx, ecx
push    2
pop     edx
mov     eax, esi
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx
call    sub_42a95d
mov     [edi], eax
neg     eax
pop     ecx
pop     ecx
sbb     eax, eax
and     eax, 7ff8fff2h
pop     edi
add     eax, 8007000eh
pop     esi
retn
call    sub_40a4c6
test    eax, eax
js      short locret_40fbb3
mov     eax, 80004005h
retn
push    edi
mov     edi, ecx
or      eax, 0ffffffffh
lock xadd [edi+4], eax
dec     eax
test    eax, eax
jg      short loc_40fbde
test    edi, edi
jz      short loc_40fbdc
mov     eax, [edi]
push    esi
push    1
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     esi
xor     eax, eax
pop     edi
retn
push    ebp
mov     ebp, esp
push    0
push    4
lea     eax, [ebp+arg_8]
push    eax
push    29h
push    offset stru_407404
push    2bh
push    dword ptr [ebp+loggerhandle+4]
push    dword ptr [ebp+loggerhandle]
call    ds:tracemessage
add     esp, 20h
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    ecx
and     [ebp+phkresult], 0
lea     eax, [ebp+phkresult]
push    esi
push    edi
push    eax
push    [ebp+samdesired]
mov     edi, ecx
push    0
push    [ebp+lpsubkey]
and     dword ptr [edi], 0
push    80000002h
call    ds:regopenkeyexw
mov     esi, eax
cmp     esi, 2
jnz     short loc_40fc87
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40fc80
test    byte ptr [eax+1ch], 4
jz      short loc_40fc80
push    [ebp+lpsubkey]
mov     edx, offset stru_407404
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    0ah
pop     ecx
call    sub_4088bd
mov     esi, 80070002h
jmp     short loc_40fcc5
test    esi, esi
jz      short loc_40fcca
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40fcb4
test    byte ptr [eax+1ch], 1
jz      short loc_40fcb4
push    esi
push    [ebp+lpsubkey]
mov     edx, offset stru_407404
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    0bh
pop     ecx
call    sub_408904
test    esi, esi
jle     short loc_40fcc3
movzx   esi, si
or      esi, 80070000h
test    esi, esi
jns     short loc_40fcca
mov     eax, [ebp+phkresult]
jmp     short loc_40fce3
mov     eax, [ebp+phkresult]
test    eax, eax
jnz     short loc_40fcd8
mov     esi, 8000ffffh
jmp     short loc_40fce3
mov     ecx, eax
xor     eax, eax
mov     [ebp+phkresult], eax
xor     esi, esi
mov     [edi], ecx
test    eax, eax
jz      short loc_40fcee
push    eax
call    ds:regclosekey
pop     edi
mov     eax, esi
pop     esi
leave
retn    8
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
xor     edi, edi
lea     eax, [ebp+dwdisposition]
push    eax
lea     eax, [ebp+phkresult]
mov     [ebp+dwdisposition], edi
push    eax
push    edi
push    2
push    edi
push    edi
push    edi
mov     esi, ecx
mov     [ebp+phkresult], edi
push    offset subkey
push    80000002h
mov     [esi], edi
call    ds:regcreatekeyexw
mov     ebx, eax
test    ebx, ebx
jz      short loc_40fd70
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40fd5a
test    byte ptr [eax+1ch], 1
jz      short loc_40fd5a
push    ebx
push    offset subkey
push    dword ptr [eax+14h]
mov     edx, offset stru_407404
push    dword ptr [eax+10h]
push    0ch
pop     ecx
call    sub_408904
test    ebx, ebx
jle     short loc_40fd69
movzx   ebx, bx
or      ebx, 80070000h
test    ebx, ebx
jns     short loc_40fd70
mov     eax, [ebp+phkresult]
jmp     short loc_40fd90
mov     eax, [ebp+phkresult]
test    eax, eax
jnz     short loc_40fd7e
mov     ebx, 8000ffffh
jmp     short loc_40fd90
xor     ebx, ebx
mov     ecx, eax
cmp     [ebp+dwdisposition], 2
mov     eax, edi
mov     [ebp+phkresult], eax
mov     [esi], ecx
setz    bl
test    eax, eax
jz      short loc_40fd9b
push    eax
call    ds:regclosekey
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
leave
retn    10h
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
xor     ebx, ebx
mov     [ebp+str], edx
mov     eax, [edi]
mov     [ebp+cbdata], eax
lea     eax, [ebp+cbdata]
push    eax
push    [ebp+lpdata]
push    [ebp+lptype]
push    ebx
push    edx
push    ecx
call    ds:regqueryvalueexw
mov     esi, eax
test    esi, esi
jle     short loc_40fddb
movzx   esi, si
or      esi, 80070000h
mov     ecx, 800700eah
test    esi, esi
js      short loc_40fdfd
mov     eax, [ebp+cbdata]
cmp     [ebp+lpdata], ebx
jz      short loc_40fdf2
cmp     eax, [edi]
jbe     short loc_40fdf2
mov     ebx, ecx
mov     [edi], eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
mov     ebx, 80070002h
cmp     esi, ebx
jnz     short loc_40fe30
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_40fdf4
test    byte ptr [eax+1ch], 4
jz      short loc_40fdf4
push    [ebp+str]
mov     edx, offset stru_407404
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    15h
pop     ecx
call    sub_4088bd
jmp     short loc_40fdf4
cmp     esi, ecx
jz      short loc_40fe63
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40fe5f
test    byte ptr [ecx+1ch], 1
jz      short loc_40fe5f
push    esi
push    [ebp+str]
mov     edx, offset stru_407404
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
push    16h
pop     ecx
call    sub_40e924
mov     eax, esi
jmp     short loc_40fdf6
mov     eax, [ebp+cbdata]
cmp     [edi], eax
jb      short loc_40fdf0
mov     eax, 8000ffffh
jmp     short loc_40fdf6
push    ebp
mov     ebp, esp
push    ecx
cmp     [ebp+arg_8], 0
push    ebx
push    edi
mov     edi, ecx
jnz     short loc_40fe83
xor     eax, eax
jmp     short loc_40fee2
mov     ebx, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    ebx
push    [ebp+arg_8]
call    sub_412086
test    eax, eax
jz      short loc_40fee2
cmp     eax, 800700eah
jz      short loc_40fee2
cmp     eax, 8007139fh
jz      short loc_40feb5
push    [ebp+arg_8]
mov     edx, [ebx]
mov     ecx, [ebp+arg_0]
call    sub_410334
test    eax, eax
jnz     short loc_40fe7f
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_40fedd
test    byte ptr [ecx+1ch], 1
jz      short loc_40fedd
push    edi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407404
push    dword ptr [ecx+10h]
push    17h
pop     ecx
call    sub_4088bd
mov     eax, 8007139fh
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
mov     ebx, [ebp+lptype]
push    esi
mov     esi, [ebp+arg_4]
push    edi
push    [ebp+lpdata]
mov     edi, edx
mov     eax, [esi]
push    esi
push    ebx
mov     [ebp+var_4], eax
call    sub_40fda4
test    eax, eax
js      short loc_40ff1c
push    [ebp+lpdata]
mov     edx, [ebp+var_4]
mov     ecx, edi
push    esi
push    dword ptr [ebx]
call    sub_40fe71
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 0
jge     short loc_40ff35
cmp     [ebp+arg_0], 800700eah
jnz     short loc_40ff43
cmp     edx, 1
jz      short loc_40ff43
cmp     edx, 2
jz      short loc_40ff43
mov     al, 1
jmp     short loc_40ff45
xor     al, al
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 128h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_c]
mov     eax, ecx
push    esi
mov     esi, [ebp+arg_4]
lea     ecx, [ebp+src]
push    edi
mov     edi, [ebp+arg_8]
mov     edx, offset adroplocation
push    ecx
lea     ecx, [ebp+maxcount]
mov     [ebp+var_120], eax
push    ecx
push    esi
mov     ecx, eax
mov     [ebp+var_11c], esi
mov     [ebp+var_124], edi
mov     [ebp+maxcount], 104h
call    sub_40fee9
mov     edx, [esi]
mov     ecx, eax
push    ecx
call    sub_40ff23
test    al, al
jz      short loc_40ffb9
mov     eax, 8007065dh
jmp     loc_4100c4
test    ecx, ecx
js      short loc_40ffef
mov     esi, [ebp+maxcount]
mov     ecx, ebx
mov     edx, esi
mov     [edi], esi
call    sub_409fce
test    eax, eax
js      loc_4100c4
push    esi
lea     eax, [ebp+src]
push    eax
push    dword ptr [ebx]
call    _memmove_0
add     esp, 0ch
xor     eax, eax
jmp     loc_4100c4
lea     eax, [ecx+7ff8ff16h]
neg     eax
sbb     eax, eax
and     eax, ecx
mov     ecx, 80070002h
cmp     eax, ecx
jnz     short loc_41000b
mov     eax, ecx
jmp     loc_4100c4
test    eax, eax
js      loc_4100c4
xor     edi, edi
mov     esi, edi
mov     [ebp+block], esi
test    esi, esi
jz      short loc_41002e
push    esi
call    sub_41731b
pop     ecx
mov     [ebp+block], edi
mov     edx, [ebp+maxcount]
lea     ecx, [ebp+block]
call    sub_409fce
mov     esi, [ebp+block]
test    eax, eax
js      short loc_4100b5
mov     ecx, [ebp+var_120]
lea     eax, [ebp+maxcount]
push    esi
push    eax
push    [ebp+var_11c]
mov     edx, offset adroplocation
call    sub_40fee9
mov     ecx, eax
mov     eax, [ebp+var_11c]
push    ecx
mov     edx, [eax]
call    sub_40ff23
test    al, al
jnz     short loc_4100b0
test    ecx, ecx
jns     short loc_41009e
lea     eax, [ecx+7ff8ff16h]
neg     eax
sbb     eax, eax
and     eax, ecx
mov     ecx, 80070002h
cmp     eax, ecx
jz      short loc_41009a
test    eax, eax
jns     short loc_41001d
jmp     short loc_4100b5
mov     eax, ecx
jmp     short loc_4100b5
mov     ecx, [ebp+var_124]
mov     eax, [ebp+maxcount]
mov     [ecx], eax
mov     [ebx], esi
jmp     short loc_4100c2
mov     eax, 8007065dh
mov     edi, eax
test    esi, esi
jz      short loc_4100c2
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    [ebp+arg_0]
and     [ebp+var_4], 0
lea     eax, [ebp+var_8]
push    eax
lea     eax, [ebp+var_4]
mov     [ebp+var_8], 4
push    eax
call    sub_40fee9
cmp     eax, 800700eah
jz      short loc_41011c
test    eax, eax
js      short loc_410107
cmp     [ebp+var_4], 4
jnz     short loc_41011c
mov     ecx, 80070002h
cmp     eax, ecx
jnz     short loc_410114
mov     eax, ecx
jmp     short locret_410121
test    eax, eax
js      short locret_410121
xor     eax, eax
jmp     short locret_410121
mov     eax, 8007065dh
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
push    edi
push    ecx
lea     eax, [ebp+block]
xor     esi, esi
push    eax
lea     eax, [ebp+var_8]
mov     [ebp+var_c], esi
push    eax
lea     eax, [ebp+var_c]
mov     [ebp+var_8], esi
push    eax
push    ecx
mov     [ebp+block], esi
call    sub_40ff49
mov     edi, eax
test    edi, edi
jns     short loc_410156
mov     esi, [ebp+block]
jmp     short loc_410160
mov     eax, [ebp+arg_0]
mov     edi, esi
mov     ecx, [ebp+block]
mov     [eax], ecx
test    esi, esi
jz      short loc_41016b
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
pop     edi
pop     esi
leave
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
push    [ebp+cbdata]
mov     edi, edx
push    [ebp+lpdata]
push    [ebp+dwtype]
push    0
push    edi
push    ecx
call    ds:regsetvalueexw
mov     esi, eax
test    esi, esi
jz      short loc_4101d0
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_4101bb
test    byte ptr [eax+1ch], 1
jz      short loc_4101bb
push    esi
push    edi
push    dword ptr [eax+14h]
mov     edx, offset stru_407404
push    dword ptr [eax+10h]
push    18h
pop     ecx
call    sub_408904
test    esi, esi
jle     short loc_4101ca
movzx   esi, si
or      esi, 80070000h
test    esi, esi
jns     short loc_4101d0
mov     eax, esi
jmp     short loc_4101d2
xor     eax, eax
pop     edi
pop     esi
pop     ecx
pop     ebp
retn    0ch
push    ecx
test    ecx, ecx
jnz     short loc_410205
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_410230
test    byte ptr [eax+1ch], 1
jz      short loc_410230
push    dword ptr [eax+14h]
mov     edx, offset stru_407404
push    dword ptr [eax+10h]
push    27h
pop     ecx
call    sub_408740
jmp     short loc_410230
test    cl, 1
jz      short loc_410234
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_410230
test    byte ptr [eax+1ch], 1
jz      short loc_410230
push    ecx
push    dword ptr [eax+14h]
mov     edx, offset stru_407404
push    dword ptr [eax+10h]
push    28h
pop     ecx
call    sub_408951
xor     al, al
pop     ecx
retn
test    dl, 1
jz      short loc_410259
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_410259
test    byte ptr [ecx+1ch], 1
jz      short loc_410259
push    edx
push    dword ptr [ecx+14h]
push    dword ptr [ecx+10h]
call    sub_40fc03
mov     al, 1
pop     ecx
retn
push    ecx
push    esi
push    edi
test    ecx, ecx
jz      short loc_410292
xor     edi, edi
cmp     [edx+ecx*2-2], di
jz      short loc_410298
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_410292
test    byte ptr [eax+1ch], 1
jz      short loc_410292
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    2ah
mov     edx, offset stru_407404
pop     ecx
call    sub_408740
xor     al, al
pop     edi
pop     esi
pop     ecx
retn
lea     esi, [edx+2]
mov     ax, [edx]
add     edx, 2
cmp     ax, di
jnz     short loc_41029b
sub     edx, esi
sar     edx, 1
lea     eax, [edx+1]
cmp     eax, ecx
jz      short loc_4102cd
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_410292
test    byte ptr [eax+1ch], 1
jz      short loc_410292
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    2bh
jmp     short loc_410287
mov     al, 1
jmp     short loc_410294
push    ecx
test    ecx, ecx
jz      short loc_410304
xor     eax, eax
cmp     [edx+ecx*2-2], ax
jz      short loc_410308
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_410304
test    byte ptr [eax+1ch], 1
jz      short loc_410304
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    2ch
mov     edx, offset stru_407404
pop     ecx
call    sub_408740
xor     al, al
pop     ecx
retn
cmp     ecx, 1
jz      short loc_410330
cmp     [edx+ecx*2-4], ax
jz      short loc_410330
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_410304
test    byte ptr [eax+1ch], 1
jz      short loc_410304
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    2dh
jmp     short loc_4102f9
mov     al, 1
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, dword ptr [ebp+arg_0]
mov     esi, edx
test    edi, edi
jnz     short loc_41036f
cmp     ecx, 3
jz      short loc_41036f
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      loc_41047d
test    byte ptr [eax+1ch], 1
jz      loc_41047d
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    2fh
jmp     loc_410461
test    ecx, ecx
jz      loc_410481
cmp     ecx, 2
jbe     loc_41043a
cmp     ecx, 3
jz      loc_410416
jbe     loc_410481
cmp     ecx, 5
jbe     short loc_4103e1
cmp     ecx, 7
jnz     loc_410481
mov     edx, edi
mov     ecx, esi
call    sub_4101d9
test    al, al
jnz     short loc_4103d1
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      loc_41047d
test    byte ptr [eax+1ch], 1
jz      loc_41047d
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    32h
jmp     loc_410461
shr     esi, 1
mov     edx, edi
mov     ecx, esi
call    sub_4102d1
jmp     loc_410479
cmp     esi, 4
jz      loc_410481
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      loc_41047d
test    byte ptr [eax+1ch], 1
jz      short loc_41047d
push    esi
push    dword ptr [eax+14h]
mov     edx, offset stru_407404
push    dword ptr [eax+10h]
push    30h
pop     ecx
call    sub_408951
jmp     short loc_41047d
test    edi, edi
jnz     short loc_410481
test    esi, esi
jz      short loc_410481
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_41047d
test    byte ptr [eax+1ch], 1
jz      short loc_41047d
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    33h
jmp     short loc_410461
mov     edx, edi
mov     ecx, esi
call    sub_4101d9
test    al, al
jnz     short loc_41046e
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_41047d
test    byte ptr [eax+1ch], 1
jz      short loc_41047d
push    dword ptr [eax+14h]
push    dword ptr [eax+10h]
push    31h
mov     edx, offset stru_407404
pop     ecx
call    sub_408740
jmp     short loc_41047d
shr     esi, 1
mov     edx, edi
mov     ecx, esi
call    sub_41025d
test    al, al
jnz     short loc_410481
xor     eax, eax
jmp     short loc_410484
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ecx
pop     ebp
retn    4
push    ecx
push    esi
push    edi
mov     edi, edx
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_410493
sub     ecx, edx
sar     ecx, 1
lea     esi, ds:2[ecx*2]
cmp     [edi], esi
jz      short loc_4104d4
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_4104d2
test    byte ptr [eax+1ch], 1
jz      short loc_4104d2
push    dword ptr [eax+14h]
mov     edx, offset stru_407404
push    dword ptr [eax+10h]
push    34h
pop     ecx
call    sub_408740
mov     [edi], esi
pop     edi
xor     eax, eax
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, edx
mov     edx, ecx
push    edi
mov     [ebp+var_4], edx
mov     eax, [esi]
test    al, 1
jz      short loc_41052e
mov     ecx, off_42c118
mov     edx, eax
cmp     ecx, offset off_42c118
jz      short loc_410524
test    byte ptr [ecx+1ch], 1
jz      short loc_410524
push    eax
push    dword ptr [ecx+14h]
mov     edx, offset stru_407404
push    dword ptr [ecx+10h]
push    35h
pop     ecx
call    sub_408951
mov     edx, [esi]
mov     ecx, off_42c118
lea     eax, [edx-1]
mov     edx, [ebp+var_4]
mov     [esi], eax
jmp     short loc_410534
mov     ecx, off_42c118
mov     edi, eax
shr     edi, 1
jz      short loc_41054d
cmp     word ptr [ebx+edi*2-2], 0
jnz     short loc_41054d
mov     edx, esi
mov     ecx, ebx
call    sub_41048b
jmp     short loc_4105ae
cmp     edi, edx
jnb     short loc_410581
cmp     ecx, offset off_42c118
jz      short loc_410574
test    byte ptr [ecx+1ch], 1
jz      short loc_410574
push    dword ptr [ecx+14h]
mov     edx, offset stru_407404
push    dword ptr [ecx+10h]
push    36h
pop     ecx
call    sub_408740
mov     eax, [esi]
xor     ecx, ecx
add     eax, 2
mov     [ebx+edi*2], cx
mov     [esi], eax
jmp     short loc_410542
cmp     ecx, offset off_42c118
jz      short loc_4105a4
test    byte ptr [ecx+1ch], 2
jz      short loc_4105a4
push    dword ptr [ecx+14h]
mov     edx, offset stru_407404
push    dword ptr [ecx+10h]
push    37h
pop     ecx
call    sub_408740
mov     eax, [esi]
add     eax, 2
mov     [esi], eax
mov     eax, 800700eah
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, ecx
mov     ebx, edx
mov     [ebp+var_4], eax
mov     ecx, [edi]
test    cl, 1
jz      short loc_41060a
mov     edx, off_42c118
mov     eax, ecx
cmp     edx, offset off_42c118
jz      short loc_410600
test    byte ptr [edx+1ch], 1
jz      short loc_410600
push    ecx
push    dword ptr [edx+14h]
push    dword ptr [edx+10h]
mov     edx, offset stru_407404
push    38h
pop     ecx
call    sub_408951
mov     eax, [edi]
mov     edx, off_42c118
lea     ecx, [eax-1]
mov     eax, [ebp+var_4]
mov     [edi], ecx
jmp     short loc_410610
mov     edx, off_42c118
mov     esi, ecx
shr     esi, 1
cmp     esi, 1
jbe     short loc_410643
xor     eax, eax
cmp     [ebx+esi*2-4], ax
mov     eax, [ebp+var_4]
jnz     short loc_410640
xor     edx, edx
cmp     [ebx+esi*2-2], dx
mov     edx, off_42c118
jnz     short loc_410640
cmp     esi, 2
jnz     short loc_41064f
lea     eax, [ecx-2]
mov     [edi], eax
jmp     short loc_41064f
cmp     esi, 1
jnz     short loc_410656
xor     eax, eax
cmp     [ebx], ax
mov     eax, [ebp+var_4]
jnz     short loc_41066f
xor     eax, eax
jmp     loc_410717
test    esi, esi
jnz     short loc_41066f
mov     dword ptr [edi], 2
test    eax, eax
jz      loc_410712
xor     eax, eax
mov     [ebx], ax
jmp     short loc_41064f
xor     edi, edi
cmp     [ebx+esi*2-2], di
mov     edi, [ebp+arg_0]
jnz     short loc_4106b2
cmp     esi, eax
jnb     short loc_4106ad
cmp     edx, offset off_42c118
jz      short loc_4106a2
test    byte ptr [edx+1ch], 1
jz      short loc_4106a2
push    dword ptr [edx+14h]
push    dword ptr [edx+10h]
mov     edx, offset stru_407404
push    39h
pop     ecx
call    sub_408740
mov     ecx, [edi]
xor     eax, eax
mov     [ebx+esi*2], ax
lea     eax, [ecx+2]
jmp     short loc_41063c
lea     eax, [ecx+2]
jmp     short loc_410710
lea     eax, [esi+1]
cmp     eax, [ebp+var_4]
jnb     short loc_4106ea
cmp     edx, offset off_42c118
jz      short loc_4106dd
test    byte ptr [edx+1ch], 1
jz      short loc_4106dd
push    dword ptr [edx+14h]
push    dword ptr [edx+10h]
mov     edx, offset stru_407404
push    3ah
pop     ecx
call    sub_408740
mov     ecx, [edi]
xor     eax, eax
mov     [ebx+esi*2], eax
lea     eax, [ecx+4]
jmp     loc_41063c
cmp     edx, offset off_42c118
jz      short loc_41070d
test    byte ptr [edx+1ch], 2
jz      short loc_41070d
push    dword ptr [edx+14h]
push    dword ptr [edx+10h]
mov     edx, offset stru_407404
push    3bh
pop     ecx
call    sub_408740
mov     ecx, [edi]
lea     eax, [ecx+4]
mov     [edi], eax
mov     eax, 800700eah
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 40h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
push    ebx
push    esi
push    edi
lea     eax, [ebp+uuid]
mov     [ebp+var_3c], ecx
mov     ebx, edx
push    eax
mov     [ebp+var_24], ebx
call    ds:uuidcreate
mov     esi, eax
test    esi, esi
jns     short loc_410778
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_410771
test    byte ptr [ecx+1ch], 1
jz      short loc_410771
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407420
push    dword ptr [ecx+10h]
push    0ah
pop     ecx
call    sub_408951
mov     eax, esi
jmp     loc_4108d0
mov     ecx, ebx
xor     edi, edi
mov     esi, edi
mov     [ebp+block], esi
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
cmp     ax, di
jnz     short loc_410784
sub     ecx, edx
mov     [ebp+var_20], edi
sar     ecx, 1
jz      short loc_410801
cmp     word ptr [ebx+ecx*2-2], 5ch
mov     [ebp+var_20], edi
jz      short loc_410801
push    ebx
lea     eax, [ebp+block]
push    offset aws
push    eax
call    sub_40fa00
mov     esi, eax
add     esp, 0ch
test    esi, esi
jns     short loc_4107f6
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_4107e3
test    byte ptr [ecx+1ch], 1
jz      short loc_4107e3
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407420
push    dword ptr [ecx+10h]
push    0bh
pop     ecx
call    sub_408951
cmp     [ebp+block], edi
jz      short loc_410771
push    [ebp+block]
call    sub_41731b
pop     ecx
jmp     loc_410771
mov     esi, [ebp+block]
mov     eax, esi
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
movzx   eax, [ebp+uuid.data4+7]
movzx   ebx, [ebp+uuid.data4+2]
movzx   edx, [ebp+uuid.data4]
push    offset word_406bd4
movzx   ecx, [ebp+uuid.data3]
mov     [ebp+var_28], eax
push    [ebp+var_28]
movzx   eax, [ebp+uuid.data4+6]
mov     [ebp+var_2c], eax
push    [ebp+var_2c]
movzx   eax, [ebp+uuid.data4+5]
mov     [ebp+var_30], eax
push    [ebp+var_30]
movzx   eax, [ebp+uuid.data4+4]
mov     [ebp+var_34], eax
push    [ebp+var_34]
movzx   eax, [ebp+uuid.data4+3]
mov     [ebp+var_38], eax
push    [ebp+var_38]
movzx   eax, [ebp+uuid.data2]
push    ebx
mov     [ebp+block], edi
movzx   edi, [ebp+uuid.data4+1]
push    edi
push    edx
push    ecx
push    eax
push    [ebp+uuid.data1]
lea     eax, [ebp+block]
push    [ebp+var_24]
push    offset as08x04x04x02x0
push    eax
call    sub_40fa00
mov     edi, eax
add     esp, 3ch
test    edi, edi
jns     short loc_4108b9
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_410899
test    byte ptr [ecx+1ch], 1
jz      short loc_410899
push    edi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407420
push    dword ptr [ecx+10h]
push    0ch
pop     ecx
call    sub_408951
cmp     [ebp+block], 0
jz      short loc_4108a8
push    [ebp+block]
call    sub_41731b
pop     ecx
cmp     [ebp+var_20], 0
jz      short loc_4108b5
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
jmp     short loc_4108d0
cmp     [ebp+var_20], 0
mov     ecx, [ebp+var_3c]
mov     eax, [ebp+block]
mov     [ecx], eax
jz      short loc_4108ce
push    esi
call    sub_41731b
pop     ecx
xor     eax, eax
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    esi
push    edi
mov     edi, ecx
call    sub_40f2ad
mov     esi, eax
test    esi, esi
jns     short loc_410924
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_41091d
test    byte ptr [ecx+1ch], 1
jz      short loc_41091d
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407420
push    dword ptr [ecx+10h]
push    0dh
pop     ecx
call    sub_408951
mov     eax, esi
jmp     loc_4109b1
and     [ebp+block], 0
mov     edx, edi
push    ecx
lea     ecx, [ebp+block]
call    sub_41071e
mov     esi, eax
test    esi, esi
jns     short loc_410972
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_410961
test    byte ptr [ecx+1ch], 1
jz      short loc_410961
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_407420
push    dword ptr [ecx+10h]
push    0eh
pop     ecx
call    sub_408951
cmp     [ebp+block], 0
jz      short loc_41091d
push    [ebp+block]
call    sub_41731b
pop     ecx
jmp     short loc_41091d
mov     esi, [ebp+block]
mov     edx, esi
or      [ebp+hobject], 0ffffffffh
push    ecx
push    ecx
push    4000000h
push    1
push    0
push    0c0000000h
lea     ecx, [ebp+hobject]
call    sub_40efd7
cmp     [ebp+hobject], 0ffffffffh
mov     edi, eax
jz      short loc_4109a4
push    [ebp+hobject]
call    ds:closehandle
test    esi, esi
jz      short loc_4109af
push    esi
call    sub_41731b
pop     ecx
mov     eax, edi
pop     edi
pop     esi
leave
retn
mov     eax, large fs:2ch
push    esi
mov     ecx, [eax]
mov     eax, dword_42d84c
cmp     eax, [ecx+4]
jg      short loc_4109d2
mov     eax, offset dword_42d83c
pop     esi
retn
mov     esi, offset dword_42d84c
push    esi
call    sub_42aafd
pop     ecx
cmp     dword_42d84c, 0ffffffffh
jnz     short loc_4109cb
call    sub_411461
push    offset sub_42b410
call    sub_417c81
pop     ecx
push    esi
call    sub_42aabc
pop     ecx
jmp     short loc_4109cb
test    ecx, ecx
jns     short loc_410a28
push    ecx
call    ds:rtlntstatustodoserror
push    eax
call    ds:setlasterror
jmp     sub_40a4c6
xor     eax, eax
retn
push    ebp
mov     ebp, esp
sub     esp, 114h
push    ebx
push    esi
push    edi
push    110h
lea     eax, [ebp+dst]
mov     [ebp+var_114], 114h
push    0
push    eax
mov     ebx, ecx
call    _memset
add     esp, 0ch
lea     esi, [ebp+var_114]
mov     edi, ebx
push    45h
pop     ecx
rep movsd
push    ebx
call    ds:rtlgetversion
mov     ecx, eax
call    sub_410a11
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     ebx, edx
mov     [ebp+var_c], ecx
push    ebx
call    ds:getlengthsid
and     [ebp+pdestinationsid], 0
lea     ecx, [ebp+pdestinationsid]
mov     edx, eax
mov     [ebp+ndestinationsidlength], eax
call    sub_40f92c
mov     esi, [ebp+pdestinationsid]
mov     edi, eax
test    edi, edi
js      short loc_410acb
push    ebx
push    esi
push    [ebp+ndestinationsidlength]
call    ds:copysid
test    eax, eax
jnz     short loc_410ac0
call    sub_40fba5
mov     edi, eax
jmp     short loc_410acb
mov     ecx, [ebp+var_c]
mov     eax, esi
xor     esi, esi
xor     edi, edi
mov     [ecx], eax
test    esi, esi
jz      short loc_410ad6
push    esi
call    sub_417dfe
pop     ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+pidentifierauthority]
push    ebx
push    esi
mov     esi, ecx
cmp     edx, 1
jb      loc_410b92
cmp     edx, 8
ja      loc_410b92
xor     ebx, ebx
mov     [ebp+var_8], 500h
mov     [ebp+var_c], ebx
mov     [ebp+var_14], ebx
mov     [ebp+var_10], 100h
test    eax, eax
jnz     short loc_410b29
lea     eax, [ebp+var_c]
cmp     [ebp+nsubauthority0], ebx
jnz     short loc_410b29
lea     eax, [ebp+var_14]
lea     ecx, [ebp+psid]
mov     [ebp+psid], ebx
push    ecx
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    [ebp+nsubauthority1]
push    [ebp+nsubauthority0]
push    edx
push    eax
call    ds:allocateandinitializesid
test    eax, eax
jnz     short loc_410b7b
call    sub_40fba5
mov     esi, eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_410b77
test    byte ptr [ecx+1ch], 1
jz      short loc_410b77
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset nullsub_1
push    dword ptr [ecx+10h]
push    0dh
pop     ecx
call    sub_408951
mov     eax, esi
jmp     short loc_410b97
mov     edx, [ebp+psid]
mov     ecx, esi
call    sub_410a79
push    [ebp+psid]
mov     esi, eax
call    ds:freesid
jmp     short loc_410b77
mov     eax, 80070057h
mov     ecx, [ebp+var_4]
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    24h
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     [ebp+tokenhandle], edx
mov     esi, ebx
mov     [ebp+var_14], ecx
push    40h
mov     [ebp+tokeninformation], esi
pop     edi
mov     [ebp+tokeninformationlength], edi
test    esi, esi
jz      short loc_410bd1
push    esi
call    sub_417dfe
pop     ecx
mov     [ebp+tokeninformation], ebx
mov     edx, edi
lea     ecx, [ebp+tokeninformation]
call    sub_40f92c
mov     esi, [ebp+tokeninformation]
mov     edi, eax
test    edi, edi
js      short loc_410c1f
lea     eax, [ebp+returnlength]
mov     [ebp+returnlength], ebx
push    eax
push    [ebp+tokeninformationlength]
push    esi
push    [ebp+tokeninformationclass]
push    [ebp+tokenhandle]
call    ds:gettokeninformation
test    eax, eax
jnz     short loc_410c5d
call    sub_40fba5
mov     edi, eax
test    edi, edi
jns     short loc_410c12
cmp     edi, 8007007ah
jnz     short loc_410c35
mov     edi, [ebp+returnlength]
cmp     [ebp+tokeninformationlength], edi
jb      short loc_410bc0
mov     edi, 8000ffffh
mov     ebx, edi
test    esi, esi
jz      short loc_410c2c
push    esi
call    sub_417dfe
pop     ecx
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
leave
retn    4
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_410c1f
test    byte ptr [eax+1ch], 1
jz      short loc_410c1f
push    edi
push    dword ptr [eax+14h]
mov     edx, offset nullsub_1
push    dword ptr [eax+10h]
push    10h
pop     ecx
call    sub_408951
jmp     short loc_410c1f
mov     eax, [ebp+var_14]
mov     [eax], esi
jmp     short loc_410c2c
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    esi
lea     eax, [ebp+ismember]
mov     esi, ecx
push    eax
push    [ebp+sidtocheck]
xor     ecx, ecx
push    ecx
mov     [esi], cl
mov     [ebp+ismember], ecx
call    ds:checktokenmembership
test    eax, eax
jnz     short loc_410cb8
call    sub_40fba5
mov     esi, eax
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_410cb4
test    byte ptr [ecx+1ch], 1
jz      short loc_410cb4
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset nullsub_1
push    dword ptr [ecx+10h]
push    1ah
pop     ecx
call    sub_408951
mov     eax, esi
jmp     short loc_410cc3
cmp     [ebp+ismember], 0
setnz   al
mov     [esi], al
xor     eax, eax
pop     esi
leave
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    edi
sub     esp, 18h
xor     eax, eax
mov     ebx, ecx
mov     [ebp+sidtocheck], eax
lea     ecx, [ebp+sidtocheck]
push    eax
push    220h
push    20h
push    2
pop     edx
mov     [ebx], al
call    sub_410add
mov     edi, eax
test    edi, edi
js      short loc_410d00
push    [ebp+sidtocheck]
mov     ecx, ebx
call    sub_410c64
mov     edi, eax
cmp     [ebp+sidtocheck], 0
jz      short loc_410d0f
push    [ebp+sidtocheck]
call    sub_417dfe
pop     ecx
mov     eax, edi
pop     edi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
push    edi
xor     eax, eax
lea     edi, [ebp+newstate]
stosd
xor     ebx, ebx
mov     esi, ebx
stosd
stosd
stosd
lea     eax, [ebp+newstate.privileges]
push    eax
push    offset asedebugprivile
push    ebx
call    ds:lookupprivilegevaluew
test    eax, eax
jnz     short loc_410d50
mov     edi, 80070057h
jmp     short loc_410db3
mov     [ebp+newstate.privilegecount], 1
mov     [ebp+newstate.privileges.attributes], 2
call    ds:getcurrentprocess
lea     ecx, [ebp+tokenhandle]
mov     [ebp+tokenhandle], ebx
push    ecx
push    28h
push    eax
call    ds:openprocesstoken
test    eax, eax
jnz     short loc_410d81
call    sub_40eacb
mov     edi, eax
jmp     short loc_410d86
mov     esi, [ebp+tokenhandle]
mov     edi, ebx
test    edi, edi
js      short loc_410db3
push    ebx
push    ebx
push    ebx
lea     eax, [ebp+newstate]
push    eax
push    ebx
push    esi
call    ds:adjusttokenprivileges
test    eax, eax
jnz     short loc_410da6
call    sub_40fba5
mov     edi, eax
jmp     short loc_410db3
call    sub_40a4c6
mov     edi, eax
test    edi, edi
js      short loc_410db3
mov     edi, ebx
test    esi, esi
jz      short loc_410dbe
push    esi
call    ds:closehandle
mov     ecx, [ebp+var_4]
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
push    esi
mov     esi, ecx
movzx   eax, word ptr [esi]
test    ax, ax
jz      short loc_410df4
mov     ecx, eax
push    ecx
call    _iswspace
pop     ecx
test    eax, eax
jnz     short loc_410df4
add     esi, 2
movzx   eax, word ptr [esi]
mov     ecx, eax
test    ax, ax
jnz     short loc_410ddc
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 3ch
mov     eax, edx
mov     [ebp+var_18], ecx
lea     edx, [ebp+var_8]
mov     [ebp+var_28], eax
mov     [ebp+var_3c], edx
lea     edx, [ebp+var_1]
push    ebx
mov     [ebp+var_38], edx
xor     ebx, ebx
push    esi
lea     edx, [ebp+var_18]
mov     [eax], ebx
mov     [ebp+var_34], edx
xor     eax, eax
push    edi
lea     edx, [ebp+var_1c]
mov     [ebp+var_1c], ebx
mov     [ebp+var_30], edx
mov     esi, eax
lea     edx, [ebp+var_14]
mov     [ebp+var_8], ebx
push    5ch
mov     [ebp+var_2c], edx
pop     edx
push    2fh
mov     [ebp+var_1], bl
movzx   eax, word ptr [ecx]
pop     edi
mov     [ebp+var_24], 3ah
mov     [ebp+var_c], edx
mov     [ebp+var_20], edi
cmp     ax, di
jz      short loc_410e5c
cmp     ax, dx
jnz     loc_410f3e
movzx   eax, word ptr [ecx+2]
cmp     ax, di
jz      short loc_410e6e
cmp     ax, dx
jnz     loc_410f3e
movzx   eax, word ptr [ecx+4]
push    2eh
pop     edx
cmp     ax, dx
jnz     short loc_410e90
movzx   edx, word ptr [ecx+6]
cmp     dx, di
jz      short loc_410e89
cmp     dx, word ptr [ebp+var_c]
jnz     short loc_410e90
push    4
jmp     loc_410f3d
cmp     eax, 3fh
jnz     loc_410f2c
movzx   edx, word ptr [ecx+6]
cmp     dx, di
jz      short loc_410eac
cmp     dx, word ptr [ebp+var_c]
jnz     loc_410f2c
movzx   eax, word ptr [ecx+8]
push    4
pop     esi
cmp     eax, 55h
jz      short loc_410ebd
cmp     eax, 75h
jnz     short loc_410ed9
movzx   edx, word ptr [ecx+0ah]
cmp     edx, 4eh
jz      short loc_410ecb
cmp     edx, 6eh
jnz     short loc_410ed9
movzx   edx, word ptr [ecx+0ch]
cmp     edx, 43h
jz      short loc_410f13
cmp     edx, 63h
jz      short loc_410f13
cmp     eax, 61h
jb      short loc_410ee3
cmp     eax, 7ah
jbe     short loc_410ef0
add     eax, 0ffffffbfh
cmp     ax, 19h
ja      loc_410ffe
push    3ah
pop     eax
cmp     [ecx+0ah], ax
jnz     loc_410ffe
movzx   eax, word ptr [ecx+0ch]
cmp     ax, di
jz      short loc_410f3e
push    5ch
pop     edx
cmp     ax, dx
jz      short loc_410f3e
jmp     loc_410ffe
movzx   eax, word ptr [ecx+0eh]
cmp     ax, di
jz      short loc_410f28
push    5ch
pop     edx
cmp     ax, dx
jnz     loc_410ffe
push    8
jmp     short loc_410f3b
cmp     ax, di
jz      short loc_410f3e
push    5ch
pop     edx
cmp     ax, dx
jz      short loc_410f3e
push    2
mov     bl, 1
pop     esi
mov     edi, esi
mov     [ebp+var_14], esi
mov     [ebp+var_8], edi
lea     eax, [esi+esi]
mov     [ebp+var_10], edi
mov     edx, esi
xor     edi, edi
cmp     [eax+ecx], di
mov     edi, esi
jz      short loc_410f9e
movzx   eax, word ptr [eax+ecx]
cmp     ax, word ptr [ebp+var_20]
jz      short loc_410f77
cmp     ax, word ptr [ebp+var_c]
jz      short loc_410f77
cmp     ax, word ptr [ebp+var_24]
jnz     short loc_410f85
mov     eax, edi
sub     eax, esi
cmp     eax, 1
jnz     short loc_410fdd
lea     ecx, [ebp+var_3c]
call    sub_411005
mov     ecx, [ebp+var_18]
mov     edi, [ebp+var_8]
inc     edi
mov     [ebp+var_8], edi
mov     edx, edi
mov     [ebp+var_10], edi
lea     eax, [edi+edi]
xor     edi, edi
cmp     [eax+ecx], di
mov     edi, edx
jnz     short loc_410f58
mov     esi, [ebp+var_14]
sub     edx, esi
test    bl, bl
jz      short loc_410faa
cmp     [ebp+var_1c], 2
jb      short loc_410ffe
cmp     edx, 2
ja      short loc_410fc3
sub     edx, 1
jz      short loc_410ff5
sub     edx, 1
jnz     short loc_410ffe
push    2eh
pop     eax
cmp     [ecx+esi*2+2], ax
jz      short loc_410ff8
mov     edx, [ebp+var_28]
lea     eax, [ecx+esi*2]
mov     [edx], eax
xor     edx, edx
xor     eax, eax
cmp     dx, [ecx+edi*2]
setnz   al
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    2fh
pop     eax
cmp     [ecx+edi*2+2], ax
jnz     short loc_410f9b
cmp     [ecx+edi*2+4], ax
jnz     short loc_410f9b
mov     eax, 80004001h
jmp     short loc_410fd6
push    2eh
pop     eax
cmp     [ecx+esi*2], ax
jnz     short loc_410fc3
mov     eax, 80070002h
jmp     short loc_410fd6
push    esi
mov     esi, ecx
mov     eax, [esi]
inc     dword ptr [eax]
mov     eax, [esi]
mov     edx, [eax]
mov     eax, [esi+8]
mov     eax, [eax]
movzx   eax, word ptr [eax+edx*2]
cmp     eax, 2fh
jz      short loc_411008
cmp     eax, 5ch
jz      short loc_411008
mov     eax, [esi+0ch]
inc     dword ptr [eax]
mov     ecx, [esi]
mov     edx, [ecx]
lea     eax, [edx-1]
mov     [ecx], eax
mov     eax, [esi+10h]
pop     esi
mov     [eax], edx
retn
and     dword ptr [ecx+8], 0
push    0
push    ecx
call    ds:initializecriticalsectionandspincount
xor     eax, eax
retn
cmp     dword ptr [ecx+8], 0f12192eh
jz      short locret_411058
push    ecx
call    ds:deletecriticalsection
retn
push    esi
mov     esi, ecx
test    si, si
jnz     loc_41110e
mov     eax, 5a4dh
cmp     [esi], ax
jnz     loc_41110e
mov     edx, [esi+3ch]
test    dl, 3
jnz     loc_41110e
cmp     dword ptr [edx+esi], 4550h
jnz     loc_41110e
cmp     dword ptr [edx+esi+74h], 6
jb      short loc_41110e
push    ebx
mov     ebx, [edx+esi+50h]
push    edi
mov     edi, [edx+esi+0a8h]
lea     eax, [ebx-1]
lea     ecx, [edi-1]
cmp     ecx, eax
jnb     short loc_41110c
mov     eax, [edx+esi+0ach]
mov     ecx, ebx
sub     ecx, edi
cmp     eax, ecx
ja      short loc_41110c
xor     edx, edx
add     edi, esi
push    1ch
pop     ecx
div     ecx
mov     edx, eax
test    edx, edx
jz      short loc_41110c
imul    ecx, edx, 1ch
add     ecx, 14h
add     ecx, edi
lea     ecx, [ecx-1ch]
dec     edx
cmp     dword ptr [ecx-8], 2
lea     edi, [ecx-14h]
jnz     short loc_4110ea
cmp     [ecx], ebx
jnb     short loc_4110ea
mov     eax, ebx
sub     eax, [ecx]
cmp     [ecx-4], eax
jbe     short loc_4110f0
test    edx, edx
jnz     short loc_4110d0
jmp     short loc_41110c
push    1ch
push    edi
call    ds:virtuallock
test    eax, eax
jz      short loc_41110c
mov     eax, [edi+14h]
push    dword ptr [edi+10h]
add     eax, esi
push    eax
call    ds:virtuallock
pop     edi
pop     ebx
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, dword_42d7dc
mov     eax, ecx
shr     eax, 2
test    al, 1
jz      short loc_41112e
call    sub_4117e9
mov     ecx, dword_42d7dc
shr     ecx, 1
test    cl, 1
jz      short loc_411154
mov     eax, dword_42d684
and     [ebp+var_4], 0
and     dword_42d684, 0
test    eax, eax
jz      short loc_41114c
mov     [ebp+var_4], eax
lea     ecx, [ebp+var_4]
call    sub_40e187
and     dword_42d7dc, 0
leave
retn
cmp     dword_42d7dc, 0
push    esi
jz      short loc_41116e
mov     esi, 80070057h
jmp     short loc_4111a3
call    sub_4119b1
mov     esi, eax
test    esi, esi
js      short loc_4111a3
call    sub_411f29
mov     esi, eax
test    esi, esi
js      short loc_4111a3
or      dword_42d7dc, 2
call    sub_411731
mov     esi, eax
test    esi, esi
js      short loc_4111a3
or      dword_42d7dc, 4
xor     esi, esi
test    esi, esi
jns     short loc_4111ac
call    sub_411110
mov     eax, esi
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    78h
call    ds:setlasterror
xor     eax, eax
retn    8
push    78h
call    ds:setlasterror
xor     eax, eax
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset ___std_create_threadpool_work@12_seh
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    [ebp+arg_10]
mov     esi, off_42c13c
mov     ecx, esi
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
leave
retn    14h
mov     off_42c134, offset sub_4111b0
mov     off_42c13c, offset sub_4111c0
mov     off_42c130, offset sub_4111c0
mov     off_42c138, offset ___std_create_threadpool_work@12
mov     off_42c12c, offset sub_411220
retn
push    28h
mov     eax, offset loc_42b319
call    __eh_prolog3_gs
mov     esi, ecx
mov     [ebp+var_2c], esi
xor     eax, eax
mov     [ebp+var_34], esi
mov     [esi], eax
mov     [ebp+var_4], eax
mov     [ebp+var_2c], eax
push    76h
pop     eax
push    65h
mov     byte ptr [ebp+var_4], 1
lea     edx, [ebp+var_28]
mov     [ebp+var_28], ax
lea     ecx, [ebp+var_2c]
pop     eax
push    72h
mov     [ebp+var_26], ax
pop     eax
push    73h
mov     [ebp+var_24], ax
pop     eax
push    69h
mov     [ebp+var_22], ax
pop     eax
push    6fh
mov     [ebp+var_20], ax
pop     eax
push    6eh
mov     [ebp+var_1e], ax
pop     eax
push    2eh
mov     [ebp+var_1c], ax
pop     eax
push    64h
mov     [ebp+var_1a], ax
pop     eax
mov     [ebp+var_18], ax
push    6ch
pop     eax
mov     [ebp+var_16], ax
mov     [ebp+var_14], ax
xor     eax, eax
mov     [ebp+var_12], ax
call    sub_40ec60
test    eax, eax
js      loc_4113bf
mov     [ebp+var_30], 0
push    0
push    offset agetfileversion
lea     edx, [ebp+var_28]
mov     byte ptr [ebp+var_4], 2
mov     ecx, offset off_42c138
call    sub_40eda2
lea     edx, [ebp+var_28]
push    1
test    eax, eax
jns     short loc_4113b3
push    offset agetfileversion_0
mov     ecx, offset off_42c134
mov     off_42c138, offset ___std_create_threadpool_work@12
call    sub_40eda2
test    eax, eax
js      short loc_4113bf
push    1
push    offset agetfileversion_1
lea     edx, [ebp+var_28]
mov     ecx, offset off_42c13c
call    sub_40eda2
test    eax, eax
js      short loc_4113bf
push    1
push    offset averqueryvaluew
lea     edx, [ebp+var_28]
mov     ecx, offset off_42c130
call    sub_40eda2
test    eax, eax
js      short loc_4113bf
mov     edx, [esi]
mov     ecx, [ebp+var_2c]
mov     [esi], ecx
test    edx, edx
jz      short loc_4113ab
push    edx
call    ds:freelibrary
mov     eax, esi
call    __eh_epilog3_gs
retn
push    offset agetfileversion_2
mov     ecx, offset off_42c12c
jmp     short loc_411378
mov     ecx, eax
call    sub_40f52d
cmp     byte ptr [ecx], 0
jz      sub_41126f
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+10h], 0
jz      short loc_411409
mov     byte ptr [esi+10h], 0
call    sub_41126f
cmp     dword ptr [esi-4], 0
jz      short loc_411405
push    dword ptr [esi-4]
call    ds:freelibrary
and     dword ptr [esi-4], 0
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+10h], 0
jz      short loc_411424
mov     eax, 80070057h
jmp     short loc_411441
lea     edx, [esi-4]
mov     byte ptr [esi+10h], 1
mov     ecx, offset sub_411450
call    sub_411831
test    eax, eax
jns     short loc_41143f
mov     byte ptr [esi+10h], 0
jmp     short loc_411441
xor     eax, eax
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
call    sub_4112a2
xor     eax, eax
pop     ebp
retn    4
push    44h
mov     eax, offset loc_42b379
call    __eh_prolog3_gs
mov     eax, [ebp+var_3c]
mov     ecx, offset dword_42d828
mov     [ebp+var_44], eax
mov     edi, ecx
xor     eax, eax
mov     [ebp+var_44], ecx
xor     ebx, ebx
stosd
stosd
stosd
stosd
stosd
mov     dword_42d83c, 0ch
mov     psecuritydescriptor, ecx
mov     dword_42d844, ebx
mov     dword_42d848, ebx
mov     [ebp+var_4], ebx
mov     [ebp+var_34], ebx
sub     esp, 18h
mov     byte ptr [ebp+var_4], 1
lea     eax, [ebp+var_28]
mov     [ebp+var_28], ebx
lea     ecx, [ebp+var_34]
mov     [ebp+var_24], 500h
push    eax
push    220h
push    20h
push    2
pop     edx
call    sub_410add
test    eax, eax
js      loc_4116d1
mov     [ebp+block], ebx
sub     esp, 18h
mov     byte ptr [ebp+var_4], 2
lea     eax, [ebp+var_28]
lea     ecx, [ebp+block]
push    eax
push    221h
push    20h
push    2
pop     edx
call    sub_410add
test    eax, eax
js      loc_4116d1
mov     esi, ebx
mov     [ebp+var_48], esi
mov     byte ptr [ebp+var_4], 3
call    ds:getcurrentprocess
lea     ecx, [ebp+tokenhandle]
mov     [ebp+tokenhandle], ebx
push    ecx
push    8
push    eax
call    ds:openprocesstoken
test    eax, eax
jnz     short loc_411528
call    sub_40eacb
jmp     short loc_411530
mov     esi, [ebp+tokenhandle]
mov     eax, ebx
mov     [ebp+var_48], esi
test    eax, eax
js      loc_4116d1
mov     [ebp+tokenhandle], ebx
push    1
mov     edx, esi
mov     byte ptr [ebp+var_4], 4
lea     ecx, [ebp+tokenhandle]
call    sub_410ba7
test    eax, eax
js      loc_4116d1
mov     eax, [ebp+tokenhandle]
and     [ebp+var_38], 0
mov     ebx, [eax]
mov     [ebp+var_3c], ebx
push    4
mov     edx, esi
mov     byte ptr [ebp+var_4], 5
lea     ecx, [ebp+var_38]
call    sub_410ba7
test    eax, eax
js      loc_4116d1
mov     eax, [ebp+var_38]
xor     edi, edi
push    38h
mov     [ebp+var_18], ebx
pop     ebx
mov     ecx, [eax]
mov     eax, [ebp+block]
mov     [ebp+psid], eax
mov     eax, [ebp+var_34]
mov     [ebp+var_4c], ecx
mov     [ebp+var_1c], eax
mov     [ebp+var_14], ecx
push    [ebp+edi*4+psid]
call    ds:getlengthsid
add     ebx, 0fffffffch
add     ebx, eax
inc     edi
cmp     edi, 4
jb      short loc_411596
and     [ebp+pacl], 0
add     ebx, 3
and     ebx, 0fffffffch
mov     byte ptr [ebp+var_4], 6
cmp     ebx, 8
jnb     short loc_4115c8
mov     eax, 80070057h
jmp     loc_4116d1
mov     edx, ebx
lea     ecx, [ebp+pacl]
call    sub_40f92c
test    eax, eax
js      loc_4116d1
push    1
push    psecuritydescriptor
call    ds:initializesecuritydescriptor
mov     edi, [ebp+pacl]
test    eax, eax
jz      short loc_411665
push    2
push    ebx
push    edi
call    ds:initializeacl
test    eax, eax
jz      short loc_411665
push    [ebp+block]
push    80000000h
push    2
pop     ebx
push    ebx
push    edi
call    ds:addaccessallowedace
test    eax, eax
jz      short loc_411665
push    [ebp+var_34]
push    10000000h
push    ebx
push    edi
call    ds:addaccessallowedace
test    eax, eax
jz      short loc_411665
push    [ebp+var_4c]
push    10000000h
push    ebx
push    edi
call    ds:addaccessallowedace
test    eax, eax
jz      short loc_411665
push    [ebp+var_3c]
push    10000000h
push    ebx
push    edi
call    ds:addaccessallowedace
test    eax, eax
jz      short loc_411665
push    0
push    edi
push    1
push    psecuritydescriptor
call    ds:setsecuritydescriptordacl
test    eax, eax
jnz     short loc_41166f
call    ds:getlasterror
test    eax, eax
jnz     short loc_4116d8
mov     eax, dword_42d848
mov     dword_42d848, edi
test    eax, eax
jz      short loc_411688
push    8
push    eax
call    sub_417320
pop     ecx
pop     ecx
push    4
push    [ebp+var_38]
call    sub_417320
push    8
push    [ebp+tokenhandle]
call    sub_417320
add     esp, 10h
test    esi, esi
jz      short loc_4116aa
push    esi
call    ds:closehandle
mov     eax, [ebp+block]
test    eax, eax
jz      short loc_4116b8
push    eax
call    sub_417dfe
pop     ecx
mov     eax, [ebp+var_34]
test    eax, eax
jz      short loc_4116c6
push    eax
call    sub_417dfe
pop     ecx
mov     eax, offset dword_42d828
call    __eh_epilog3_gs
retn
mov     ecx, eax
call    sub_40f52d
mov     ecx, eax
call    sub_40f60b
cmp     dword ptr [ecx], 0
jz      short locret_4116f0
push    4
push    dword ptr [ecx]
call    sub_417320
pop     ecx
pop     ecx
retn
push    ebp
mov     ebp, esp
cmp     byte_42d7e0, 0
push    esi
mov     esi, ecx
jnz     short loc_41172c
mov     eax, off_42c16c
mov     dword ptr [esi], offset off_42c168
mov     [esi+4], eax
push    edx
mov     [eax], esi
mov     off_42c16c, esi
call    ds:encodepointer
push    [ebp+ptr]
mov     [esi+8], eax
call    ds:encodepointer
mov     [esi+0ch], eax
pop     esi
pop     ebp
retn    4
push    ebx
xor     ebx, ebx
push    esi
push    edi
cmp     byte_42d7e0, bl
jz      short loc_411748
mov     eax, 80070057h
jmp     loc_4117e5
mov     edi, off_42c168
cmp     edi, offset off_42c168
jnz     short loc_41175e
xor     eax, eax
inc     eax
jmp     loc_4117e5
mov     byte_42d7e0, 1
cmp     edi, offset off_42c168
jz      short loc_411791
test    edi, edi
jz      short loc_411791
push    dword ptr [edi+8]
call    ds:decodepointer
mov     esi, eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
test    ebx, ebx
js      short loc_411799
mov     edi, [edi]
jmp     short loc_411765
test    ebx, ebx
js      short loc_411799
xor     eax, eax
jmp     short loc_4117e5
mov     edi, [edi+4]
cmp     edi, offset off_42c168
jz      short loc_4117c0
test    edi, edi
jz      short loc_4117c0
push    dword ptr [edi+0ch]
call    ds:decodepointer
mov     esi, eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_411799
mov     eax, off_42c168
cmp     eax, offset off_42c168
jz      short loc_4117dc
mov     eax, [eax]
mov     off_42c168, eax
mov     dword ptr [eax+4], offset off_42c168
jmp     short loc_4117c0
mov     byte_42d7e0, 0
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
cmp     byte_42d7e0, 0
jz      short locret_411830
push    ebx
push    esi
push    edi
mov     ebx, offset off_42c168
mov     edi, off_42c168
cmp     edi, ebx
jz      short loc_411826
mov     eax, [edi]
mov     off_42c168, eax
mov     [eax+4], ebx
push    dword ptr [edi+0ch]
call    ds:decodepointer
mov     esi, eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_4117fa
pop     edi
pop     esi
mov     byte_42d7e0, 0
pop     ebx
retn
push    0ch
mov     eax, offset loc_42b39e
call    __eh_prolog3_catch
mov     esi, ecx
and     [ebp+var_4], 0
push    edx
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
jmp     short loc_41186e
call    sub_40f622
mov     [ebp+var_14], eax
mov     eax, offset loc_41186b
retn
mov     [ebp+var_14], 80004005h
mov     eax, offset loc_41186b
retn
mov     esi, [ebp+var_14]
test    esi, esi
jns     short loc_41189e
mov     ecx, off_42c118
cmp     ecx, offset off_42c118
jz      short loc_41189a
test    byte ptr [ecx+1ch], 1
jz      short loc_41189a
push    esi
push    dword ptr [ecx+14h]
mov     edx, offset stru_4074b0
push    dword ptr [ecx+10h]
push    0ah
pop     ecx
call    sub_408951
mov     eax, esi
jmp     short loc_4118a0
xor     eax, eax
call    __eh_epilog3
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     ecx, [esi+8]
mov     dword ptr [esi], offset ??_7cmpglobalvarstable@commonutil@@6b@
call    sub_411b26
test    [ebp+arg_0], 1
mov     dword ptr [esi], offset ??_7crefobject@commonutil@@6b@
jz      short loc_4118da
push    1ch
push    esi
call    sub_417320
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, ecx
push    edi
mov     dword ptr [ebx+8], 12345678h
mov     ecx, [ebx+0ch]
test    ecx, ecx
jz      short loc_4118fc
call    sub_40fbb4
and     dword ptr [ebx+0ch], 0
lea     ecx, [ebp+var_4]
and     [ebp+var_4], 0
call    sub_411d8f
mov     edi, eax
test    edi, edi
jns     short loc_411920
mov     ecx, [ebp+var_4]
test    ecx, ecx
jz      short loc_411950
call    sub_40fbb4
jmp     short loc_411950
push    esi
push    [ebp+var_4]
mov     esi, [ebp+var_4]
push    ecx
push    ecx
lea     ecx, [esi+8]
call    sub_411b88
mov     edi, eax
test    edi, edi
js      short loc_41193d
xor     edi, edi
test    edi, edi
jns     short loc_41194a
test    esi, esi
jz      short loc_41194f
mov     ecx, esi
call    sub_40fbb4
jmp     short loc_41194f
mov     [ebx+0ch], esi
xor     edi, edi
pop     esi
test    edi, edi
jns     short loc_411958
mov     eax, edi
jmp     short loc_41195a
xor     eax, eax
pop     edi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     ecx, [esi+18h]
mov     dword ptr [esi], offset ??_7cmputilslibrary@commonutil@@6b@
call    sub_411b0a
lea     ecx, [esi+14h]
call    sub_411b0a
mov     ecx, [esi+10h]
test    ecx, ecx
jz      short loc_411988
call    sub_40fbb4
mov     ecx, [esi+0ch]
test    ecx, ecx
jz      short loc_411994
call    sub_40fbb4
test    [ebp+arg_0], 1
mov     dword ptr [esi], offset ??_7crefobject@commonutil@@6b@
jz      short loc_4119aa
push    1ch
push    esi
call    sub_417320
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 11ch
push    esi
push    edi
push    118h
lea     eax, [ebp+dst]
mov     [ebp+var_11c], 11ch
push    0
push    eax
call    _memset
add     esp, 0ch
lea     esi, [ebp+var_11c]
mov     edi, offset versioninformation
push    47h
pop     ecx
rep movsd
push    offset versioninformation
call    ds:rtlgetversion
mov     ecx, eax
mov     byte_42d7a7, 0
call    sub_410a11
pop     edi
pop     esi
test    eax, eax
js      short locret_411a3f
mov     ecx, versioninformation.dwmajorversion
xor     eax, eax
or      eax, versioninformation.dwbuildnumber
shl     ecx, 10h
or      ecx, versioninformation.dwminorversion
mov     dword_42d7b0, eax
xor     eax, eax
mov     dword_42d7a8, ecx
mov     dword_42d7b4, ecx
mov     dword_42d688, 130h
leave
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, offset criticalsection
push    edi
call    ds:entercriticalsection
mov     ecx, dword_42d668
lea     eax, [ecx+1]
test    eax, eax
jnz     short loc_411a68
mov     ebx, 80070057h
jmp     short loc_411ac4
test    ecx, ecx
jz      short loc_411a7f
cmp     dword_42d66c, 0
mov     dword_42d668, eax
jz      short loc_411a7f
xor     ebx, ebx
inc     ebx
jmp     short loc_411ac4
push    edi
call    ds:leavecriticalsection
xor     esi, esi
lea     ecx, [ebp+var_4]
mov     [ebp+var_4], esi
call    sub_411c8e
push    edi
mov     ebx, eax
call    ds:entercriticalsection
mov     eax, dword_42d668
test    eax, eax
jnz     short loc_411aa9
mov     eax, esi
jmp     short loc_411ac0
lea     ecx, [eax+1]
test    ecx, ecx
jz      short loc_411ac0
mov     eax, ecx
mov     dword_42d668, ecx
cmp     dword_42d66c, esi
jnz     short loc_411ae5
test    ebx, ebx
jns     short loc_411acd
push    edi
call    ds:leavecriticalsection
jmp     short loc_411b01
test    eax, eax
jnz     short loc_411ae5
mov     eax, [ebp+var_4]
mov     dword_42d668, 1
mov     dword_42d66c, eax
jmp     short loc_411ae8
mov     esi, [ebp+var_4]
push    edi
call    ds:leavecriticalsection
test    esi, esi
jz      short loc_411afa
mov     ecx, esi
call    sub_40fbb4
xor     ebx, ebx
test    esi, esi
setnz   bl
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
leave
retn    4
push    edi
mov     edi, [ecx]
test    edi, edi
jz      short loc_411b24
mov     eax, [edi]
push    esi
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     esi
pop     edi
retn
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+var_4], 0
push    esi
mov     esi, ecx
cmp     dword ptr [esi+4], 0
jbe     short loc_411b7d
push    ebx
push    edi
xor     edi, edi
mov     ebx, [esi]
add     ebx, 4
add     ebx, edi
mov     ecx, [ebx]
cmp     ecx, ebx
jz      short loc_411b66
mov     eax, [ecx]
mov     [ebx], eax
mov     [eax+4], ebx
add     ecx, 0fffffff4h
jz      short loc_411b66
dec     dword ptr [esi+8]
lea     eax, [ecx+0ch]
mov     [eax+4], eax
mov     [eax], eax
call    sub_40fbb4
jmp     short loc_411b42
mov     eax, [esi]
mov     ecx, [ebp+var_4]
and     dword ptr [edi+eax], 0
inc     ecx
add     edi, 0ch
mov     [ebp+var_4], ecx
cmp     ecx, [esi+4]
jb      short loc_411b3b
pop     edi
pop     ebx
push    dword ptr [esi]
call    sub_417dfe
pop     ecx
pop     esi
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    esi
push    edi
mov     edi, ecx
xor     esi, esi
cmp     [edi], esi
jz      short loc_411b9f
mov     eax, 80070057h
jmp     short loc_411bf0
push    [ebp+arg_8]
push    ecx
push    1
lea     ecx, [ebp+var_14]
call    sub_411bf6
mov     ecx, [ebp+var_14]
test    ecx, ecx
jnz     short loc_411bbb
mov     esi, 8007000eh
jmp     short loc_411be6
mov     eax, [edi]
mov     edx, [edi+0ch]
mov     [edi], ecx
mov     ecx, [edi+4]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_10], ecx
mov     ecx, [edi+8]
mov     [edi+4], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_c], ecx
mov     ecx, [ebp+var_8]
mov     [edi+8], eax
mov     [edi+0ch], ecx
mov     [ebp+var_8], edx
lea     ecx, [ebp+var_14]
call    sub_411b26
mov     eax, esi
pop     edi
pop     esi
leave
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
mov     edx, offset dword_407260
push    esi
mov     esi, ecx
push    edi
push    69h
pop     ecx
and     dword ptr [esi], 0
mov     edi, ecx
sar     edi, 1
lea     eax, [edx+edi*4]
cmp     [eax], ebx
jnb     short loc_411c23
lea     edx, [eax+4]
or      eax, 0ffffffffh
sub     eax, edi
add     ecx, eax
jmp     short loc_411c25
mov     ecx, edi
test    ecx, ecx
jg      short loc_411c0c
cmp     edx, offset stru_407404
jnz     short loc_411c36
push    0fffffffbh
pop     eax
jmp     short loc_411c38
mov     eax, [edx]
xor     edi, edi
mov     [esi+4], eax
mov     [esi+8], edi
mov     [esi+0ch], edi
test    ebx, ebx
jz      short loc_411c82
mov     ecx, edi
cmp     eax, 15555555h
ja      short loc_411c5c
imul    edx, eax, 0ch
mov     ecx, esi
call    sub_40f92c
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_411c82
mov     ecx, edi
cmp     [esi+4], edi
jbe     short loc_411c85
mov     edx, edi
mov     eax, [esi]
add     eax, edx
add     edx, 0ch
mov     [eax], edi
add     eax, 4
inc     ecx
mov     [eax+4], eax
mov     [eax], eax
cmp     ecx, [esi+4]
jb      short loc_411c69
jmp     short loc_411c85
mov     [esi+4], edi
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+var_4], 0
push    ebx
mov     ebx, ecx
lea     ecx, [ebp+var_4]
push    edi
and     dword ptr [ebx], 0
call    sub_411dde
mov     edi, eax
test    edi, edi
jns     short loc_411cb9
mov     ecx, [ebp+var_4]
test    ecx, ecx
jz      short loc_411cdc
call    sub_40fbb4
jmp     short loc_411cdc
push    esi
mov     esi, [ebp+var_4]
mov     ecx, esi
call    sub_4118e1
mov     edi, eax
test    edi, edi
jns     short loc_411cd7
test    esi, esi
jz      short loc_411cdb
mov     ecx, esi
call    sub_40fbb4
jmp     short loc_411cdb
mov     [ebx], esi
xor     edi, edi
pop     esi
mov     eax, edi
pop     edi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_0]
add     edi, 0ffffffe8h
cmp     byte ptr [edi+28h], 0
jz      short loc_411d12
mov     ecx, edi
mov     byte ptr [edi+28h], 0
call    sub_411048
push    6
pop     ecx
xor     eax, eax
rep stosd
pop     edi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+10h], 0
jz      short loc_411d34
mov     eax, 80070057h
jmp     short loc_411d51
lea     edx, [esi-18h]
mov     byte ptr [esi+10h], 1
mov     ecx, offset sub_411d60
call    sub_411831
test    eax, eax
jns     short loc_411d4f
mov     byte ptr [esi+10h], 0
jmp     short loc_411d51
xor     eax, eax
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+lpcriticalsection]
mov     ecx, edi
mov     dword ptr [edi+8], 0f12192eh
call    sub_411038
mov     esi, eax
test    esi, esi
jns     short loc_411d85
mov     ecx, edi
call    sub_411048
jmp     short loc_411d87
xor     esi, esi
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
push    offset word_42d622
push    1ch
mov     edi, ecx
call    sub_42abf7
mov     esi, eax
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_411dc5
push    [ebp+var_4]
and     dword ptr [esi+4], 0
push    ecx
push    0
lea     ecx, [esi+8]
mov     dword ptr [esi], offset ??_7cmpglobalvarstable@commonutil@@6b@
call    sub_411bf6
jmp     short loc_411dc7
xor     esi, esi
test    esi, esi
jz      short loc_411dd5
lock inc dword ptr [esi+4]
mov     [edi], esi
xor     eax, eax
jmp     short loc_411dda
mov     eax, 8007000eh
pop     edi
pop     esi
leave
retn
push    esi
push    offset word_42d622
push    1ch
mov     esi, ecx
call    sub_42abf7
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_411e0f
xor     ecx, ecx
mov     dword ptr [eax], offset ??_7cmputilslibrary@commonutil@@6b@
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
jmp     short loc_411e11
xor     eax, eax
test    eax, eax
jz      short loc_411e1f
lock inc dword ptr [eax+4]
mov     [esi], eax
xor     eax, eax
pop     esi
retn
mov     eax, 8007000eh
pop     esi
retn
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7cptrobjectprocessheap@commonutil@@6b@
jz      short loc_411e64
test    [ebp+arg_0], 4
jnz     short loc_411e5a
push    esi
push    0
call    ds:getprocessheap
push    eax
call    ds:heapfree
jmp     short loc_411e64
push    4
push    esi
call    nullsub_2
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4084b0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     ebx, [edi+24h]
test    ebx, ebx
jz      short loc_411eaf
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
mov     ebx, [edi+20h]
test    ebx, ebx
jz      short loc_411ec7
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
mov     ebx, [edi+1ch]
test    ebx, ebx
jz      short loc_411edf
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
lea     ecx, [edi+4]
call    sub_411048
test    [ebp+arg_0], 1
mov     dword ptr [edi], offset ??_7cptrobjectprocessheap@commonutil@@6b@
jz      short loc_411f15
test    [ebp+arg_0], 4
jnz     short loc_411f0b
push    edi
push    0
call    ds:getprocessheap
push    eax
call    ds:heapfree
jmp     short loc_411f15
push    28h
push    edi
call    nullsub_2
pop     ecx
pop     ecx
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
xor     ebx, ebx
lea     ecx, [ebp+var_4]
push    edi
mov     [ebp+var_8], ebx
mov     [ebp+var_4], ebx
call    sub_411f8e
mov     esi, eax
test    esi, esi
jns     short loc_411f4b
mov     edi, ebx
jmp     short loc_411f68
mov     edi, [ebp+var_4]
lea     ecx, [edi+4]
call    sub_411038
mov     esi, eax
test    esi, esi
js      short loc_411f47
mov     esi, ebx
test    esi, esi
js      short loc_411f47
mov     [ebp+var_4], ebx
mov     [ebp+var_8], edi
lea     ecx, [ebp+var_4]
call    sub_40e187
test    esi, esi
js      short loc_411f7f
mov     [ebp+var_8], ebx
mov     esi, ebx
mov     dword_42d684, edi
lea     ecx, [ebp+var_8]
call    sub_40e187
pop     edi
mov     eax, esi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
push    28h
xor     esi, esi
mov     edi, ecx
push    esi
call    ds:getprocessheap
push    eax
call    ds:heapalloc
test    eax, eax
jz      short loc_411fc4
mov     dword ptr [eax], offset ??_7cpredefinedmpheapsholder@commonutil@@6b@
mov     dword ptr [eax+0ch], 0f12192eh
mov     [eax+1ch], esi
mov     [eax+20h], esi
mov     [eax+24h], esi
jmp     short loc_411fc6
mov     eax, esi
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_411fd4
mov     esi, 8007000eh
jmp     short loc_411fd9
mov     [ebp+var_4], esi
mov     [edi], eax
lea     ecx, [ebp+var_4]
call    sub_40e187
pop     edi
mov     eax, esi
pop     esi
leave
retn
push    esi
push    ecx
call    sub_411a41
mov     esi, eax
test    esi, esi
jns     short loc_41201c
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_412043
test    byte ptr [eax+1ch], 1
jz      short loc_412043
push    esi
push    dword ptr [eax+14h]
mov     edx, offset stru_4074c0
push    dword ptr [eax+10h]
push    0ah
pop     ecx
call    sub_408951
jmp     short loc_412043
mov     eax, off_42c118
cmp     eax, offset off_42c118
jz      short loc_412041
test    byte ptr [eax+1ch], 4
jz      short loc_412041
push    dword ptr [eax+14h]
mov     edx, offset stru_4074c0
push    dword ptr [eax+10h]
push    0bh
pop     ecx
call    sub_408740
xor     esi, esi
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, offset criticalsection
push    esi
call    ds:entercriticalsection
mov     eax, dword_42d668
test    eax, eax
jz      short loc_41207d
sub     eax, 1
mov     dword_42d668, eax
jnz     short loc_41207d
mov     ecx, dword_42d66c
and     dword_42d66c, 0
test    ecx, ecx
jz      short loc_41207d
call    sub_40fbb4
push    esi
call    ds:leavecriticalsection
pop     esi
retn
push    ebp
mov     ebp, esp
mov     eax, edx
xor     edx, edx
inc     edx
cmp     ecx, edx
jz      short loc_4120ad
cmp     ecx, 2
jz      short loc_4120ad
cmp     ecx, 7
jnz     short loc_4120be
push    [ebp+arg_4]
mov     edx, [ebp+arg_0]
shr     eax, 1
mov     ecx, eax
call    sub_4105b5
jmp     short loc_4120bc
push    [ebp+arg_4]
mov     edx, [ebp+arg_0]
shr     eax, 1
mov     ecx, eax
call    sub_4104da
mov     edx, eax
mov     eax, edx
pop     ebp
retn    8
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadallocation
mov     dword ptr [ecx], offset ??_7bad_alloc@std@@6b@
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     eax, [esi+4]
mov     dword ptr [esi], offset ??_7exception@std@@6b@
push    eax
call    sub_41a282
test    [ebp+arg_0], 1
pop     ecx
jz      short loc_412108
push    0ch
push    esi
call    sub_417320
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@qbd@z
mov     dword ptr [esi], offset ??_7length_error@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7bad_alloc@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ecx
lea     ecx, [ebp+var_c]
call    sub_41210f
push    offset __ti3?avlength_error@std@@
lea     eax, [ebp+var_c]
push    eax
call    sub_41a2a3
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7length_error@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     eax, edx
xor     esi, esi
mov     [ebp+var_4], eax
test    edi, edi
jz      short loc_4121a9
cmp     edi, 7fffffffh
jbe     short loc_4121ae
mov     esi, 80070057h
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
test    esi, esi
js      short loc_4121ec
push    ecx
lea     ebx, [edi-1]
mov     ecx, eax
push    edx
mov     edx, ebx
xor     esi, esi
call    sub_40982f
pop     ecx
pop     ecx
test    eax, eax
js      short loc_4121d6
cmp     eax, ebx
ja      short loc_4121d6
jnz     short loc_4121e4
jmp     short loc_4121db
mov     esi, 8007007ah
mov     eax, [ebp+var_4]
xor     ecx, ecx
mov     [eax+ebx*2], cx
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
jmp     short loc_4121f5
test    edi, edi
jz      short loc_4121f5
xor     ebx, ebx
mov     [eax], bx
mov     ebx, [ebp+arg_0]
xor     eax, eax
mov     [ebx], eax
test    esi, esi
jns     short loc_412240
cmp     esi, 8007007ah
jz      short loc_41220c
mov     eax, esi
jmp     short loc_412240
push    ecx
push    eax
push    edx
push    eax
push    eax
call    sub_409829
mov     ecx, [eax]
push    dword ptr [eax+4]
or      ecx, 2
push    ecx
call    sub_41d79e
add     esp, 1ch
test    eax, eax
js      short loc_41223b
lea     ecx, [eax+1]
cmp     ecx, edi
jbe     short loc_41223b
mov     [ebx], ecx
mov     eax, 8007007ah
jmp     short loc_412240
mov     eax, 80004005h
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
call    sub_409829
mov     ecx, [eax+4]
or      dword ptr [eax], 4
mov     [eax+4], ecx
call    sub_40a497
mov     ecx, [eax+4]
or      dword ptr [eax], 2
mov     [eax+4], ecx
xor     eax, eax
retn
call    sub_409829
mov     ecx, [eax+4]
or      dword ptr [eax], 18h
mov     [eax+4], ecx
call    sub_40a497
mov     ecx, [eax+4]
or      dword ptr [eax], 4
mov     [eax+4], ecx
xor     eax, eax
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
call    sub_413120
test    eax, eax
jz      short loc_412a85
mov     esi, [eax+35ch]
test    esi, esi
jz      short loc_412a85
push    [ebp+reserved]
push    [ebp+lineno]
push    [ebp+filename]
push    [ebp+functionname]
push    [ebp+expression]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
add     esp, 14h
pop     esi
pop     ebp
retn
push    [ebp+reserved]
mov     esi, ___security_cookie
mov     ecx, esi
push    [ebp+lineno]
xor     esi, dword_42caa0
and     ecx, 1fh
push    [ebp+filename]
ror     esi, cl
push    [ebp+functionname]
push    [ebp+expression]
test    esi, esi
jnz     short loc_412a75
call    __invoke_watson
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, 0ffffh
sub     esp, 14h
cmp     [ebp+src], ax
jz      locret_412bc8
push    [ebp+arg_4]
lea     ecx, [ebp+var_14]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     eax, [ebp+var_10]
mov     eax, [eax+0a8h]
test    eax, eax
jnz     short loc_412b59
mov     ecx, dword ptr [ebp+src]
lea     eax, [ecx-41h]
cmp     ax, 19h
ja      short loc_412b51
add     cx, 20h
movzx   eax, cx
movzx   eax, ax
jmp     short loc_412b78
mov     edx, 100h
push    1
cmp     [ebp+src], dx
jnb     short loc_412b93
push    dword ptr [ebp+src]
call    sub_413389
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_412b7d
movzx   eax, [ebp+src]
movzx   eax, ax
jmp     short loc_412b8e
mov     eax, [ebp+var_10]
movzx   ecx, [ebp+src]
mov     eax, [eax+94h]
movzx   eax, byte ptr [eax+ecx]
movzx   eax, ax
jmp     short loc_412baf
lea     ecx, [ebp+deststr]
push    ecx
push    1
lea     ecx, [ebp+src]
push    ecx
push    edx
push    eax
call    ___acrt_lcmapstringw
add     esp, 18h
test    eax, eax
jnz     short loc_412bb4
movzx   eax, [ebp+src]
movzx   eax, ax
jmp     short loc_412bb8
movzx   eax, [ebp+deststr]
cmp     [ebp+var_8], 0
jz      short locret_412bc8
mov     ecx, [ebp+var_14]
and     dword ptr [ecx+350h], 0fffffffdh
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    0
push    dword ptr [ebp+src]
call    sub_412b12
pop     ecx
pop     ecx
pop     ebp
retn
push    8
push    offset stru_42b7c8
call    __seh_prolog4
mov     eax, [ebp+arg_0]
push    dword ptr [eax]
call    ___acrt_lock
pop     ecx
and     [ebp+ms_exc.registration.trylevel], 0
mov     eax, [ebp+arg_4]
mov     eax, [eax]
mov     eax, [eax]
mov     eax, [eax+48h]
lock inc dword ptr [eax]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_412cd0
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
mov     eax, [ebp+arg_8]
push    dword ptr [eax]
call    ___acrt_unlock
pop     ecx
retn
mov     edi, edi
push    ebx
push    esi
push    edi
call    ds:getlasterror
mov     esi, eax
mov     eax, dword_42c458
cmp     eax, 0ffffffffh
jz      short loc_412ffc
push    eax
call    sub_413c28
mov     edi, eax
test    edi, edi
jz      short loc_412ff7
cmp     edi, 0ffffffffh
jnz     short loc_413069
xor     ebx, ebx
mov     edi, ebx
jmp     short loc_41306b
mov     eax, dword_42c458
push    0ffffffffh
push    eax
call    sub_413c67
test    eax, eax
jz      short loc_412ff1
push    364h
push    1
call    __calloc_base
mov     edi, eax
pop     ecx
pop     ecx
test    edi, edi
jnz     short loc_413033
xor     ebx, ebx
push    ebx
push    dword_42c458
call    sub_413c67
push    ebx
call    __free_base
pop     ecx
jmp     short loc_412ff3
push    edi
push    dword_42c458
call    sub_413c67
test    eax, eax
jnz     short loc_413054
xor     ebx, ebx
push    ebx
push    dword_42c458
call    sub_413c67
push    edi
jmp     short loc_41302b
push    offset dword_42caa8
push    edi
call    ?construct_ptd@@yaxqau__acrt_ptd@@qapau__crt_locale_data@@@z
push    0
call    __free_base
add     esp, 0ch
mov     ebx, edi
push    esi
call    ds:setlasterror
neg     edi
sbb     edi, edi
and     edi, ebx
jz      short loc_413080
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
call    _abort
mov     edi, edi
push    ebx
push    esi
push    edi
call    ds:getlasterror
mov     esi, eax
mov     eax, dword_42c458
cmp     eax, 0ffffffffh
jz      short loc_413153
push    eax
call    sub_413c28
mov     edi, eax
test    edi, edi
jz      short loc_41314e
cmp     edi, 0ffffffffh
jnz     short loc_4131c0
xor     ebx, ebx
mov     edi, ebx
jmp     short loc_4131c2
mov     eax, dword_42c458
push    0ffffffffh
push    eax
call    sub_413c67
test    eax, eax
jz      short loc_413148
push    364h
push    1
call    __calloc_base
mov     edi, eax
pop     ecx
pop     ecx
test    edi, edi
jnz     short loc_41318a
xor     ebx, ebx
push    ebx
push    dword_42c458
call    sub_413c67
push    ebx
call    __free_base
pop     ecx
jmp     short loc_41314a
push    edi
push    dword_42c458
call    sub_413c67
test    eax, eax
jnz     short loc_4131ab
xor     ebx, ebx
push    ebx
push    dword_42c458
call    sub_413c67
push    edi
jmp     short loc_413182
push    offset dword_42caa8
push    edi
call    ?construct_ptd@@yaxqau__acrt_ptd@@qapau__crt_locale_data@@@z
push    0
call    __free_base
add     esp, 0ch
mov     ebx, edi
push    esi
call    ds:setlasterror
neg     edi
sbb     edi, edi
and     edi, ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
mov     eax, [esi]
cmp     eax, dword_42caa8
jz      short loc_413254
mov     ecx, [ebp+arg_0]
mov     eax, dword_42c988
test    [ecx+350h], eax
jnz     short loc_413254
call    ___acrt_update_thread_locale_data
mov     [esi], eax
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
mov     eax, [esi]
cmp     eax, dword_42cce8
jz      short loc_413281
mov     ecx, [ebp+arg_0]
mov     eax, dword_42c988
test    [ecx+350h], eax
jnz     short loc_413281
call    sub_414368
mov     [esi], eax
pop     esi
pop     ebp
retn
xor     eax, eax
mov     ecx, offset dword_42caa4
inc     eax
xchg    eax, [ecx]
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     ax, [ebp+arg_0]
mov     ecx, 0ffffh
push    esi
mov     si, [ebp+arg_4]
movzx   edx, si
cmp     ax, cx
jz      short loc_4133ed
mov     ecx, 100h
cmp     ax, cx
jnb     short loc_4133c0
movzx   ecx, ax
mov     eax, off_42c0c0
movzx   eax, word ptr [eax+ecx*2]
and     eax, edx
jmp     short loc_4133ef
mov     [ebp+srcstr], ax
xor     eax, eax
mov     [ebp+chartype], ax
lea     eax, [ebp+chartype]
push    eax
push    1
lea     eax, [ebp+srcstr]
push    eax
push    1
call    ___acrt_getstringtypew
add     esp, 10h
test    eax, eax
jz      short loc_4133ed
movzx   eax, [ebp+chartype]
movzx   ecx, si
and     eax, ecx
jmp     short loc_4133ef
xor     eax, eax
pop     esi
leave
retn
push    offset alcmapstringex
push    offset dword_403600
push    offset alcmapstringex
push    14h
call    sub_413a8b
add     esp, 10h
retn
push    offset alocalenametolc
push    offset dword_403618
push    offset alocalenametolc
push    16h
call    sub_413a8b
add     esp, 10h
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset aapppolicygetpr
push    offset dword_403634
push    offset aapppolicygetpr
push    1ch
call    sub_413a8b
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_413b43
push    [ebp+arg_0]
mov     ecx, esi
push    0fffffffah
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_413b48
mov     eax, 0c0000225h
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
call    ?try_get_comparestringex@@yap6ghpb_wk0h0hpau_nlsversioninfo@@paxj@zxz
mov     esi, eax
test    esi, esi
jz      short loc_413b85
push    [ebp+arg_20]
mov     ecx, esi
push    [ebp+arg_1c]
push    [ebp+arg_18]
push    [ebp+cchcount2]
push    [ebp+lpstring2]
push    [ebp+cchcount1]
push    [ebp+lpstring1]
push    [ebp+dwcmpflags]
push    [ebp+arg_0]
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_413ba5
push    [ebp+cchcount2]
push    [ebp+lpstring2]
push    [ebp+cchcount1]
push    [ebp+lpstring1]
push    [ebp+dwcmpflags]
push    0
push    [ebp+arg_0]
call    sub_413d51
push    eax
call    ds:comparestringw
pop     esi
pop     ebp
retn    24h
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset aflsalloc
push    offset dword_403590
push    offset aflsalloc
push    3
call    sub_413a8b
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_413bde
push    [ebp+arg_0]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_413be4
call    ds:tlsalloc
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset aflsfree
push    offset dword_4035a4
push    offset aflsfree
push    4
call    sub_413a8b
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_413c20
push    [ebp+arg_0]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    4
pop     esi
pop     ebp
jmp     ds:tlsfree
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset aflsgetvalue
push    offset dword_4035b4
push    offset aflsgetvalue
push    5
call    sub_413a8b
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_413c5f
push    [ebp+arg_0]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    4
pop     esi
pop     ebp
jmp     ds:tlsgetvalue
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset aflssetvalue
push    offset dword_4035c8
push    offset aflssetvalue
push    6
call    sub_413a8b
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_413ca1
push    [ebp+arg_4]
mov     ecx, esi
push    [ebp+arg_0]
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    8
pop     esi
pop     ebp
jmp     ds:tlssetvalue
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset ainitializecrit
push    offset asc_4035dc
push    offset ainitializecrit
push    12h
call    sub_413a8b
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_413ce3
push    [ebp+arg_8]
mov     ecx, esi
push    [ebp+dwspincount]
push    [ebp+lpcriticalsection]
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_413cef
push    [ebp+dwspincount]
push    [ebp+lpcriticalsection]
call    ds:initializecriticalsectionandspincount
pop     esi
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
call    sub_413991
mov     esi, eax
test    esi, esi
jz      short loc_413d2c
push    [ebp+arg_20]
mov     ecx, esi
push    [ebp+arg_1c]
push    [ebp+arg_18]
push    [ebp+cchdest]
push    [ebp+lpdeststr]
push    [ebp+cchsrc]
push    [ebp+lpsrcstr]
push    [ebp+dwmapflags]
push    [ebp+arg_0]
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_413d4c
push    [ebp+cchdest]
push    [ebp+lpdeststr]
push    [ebp+cchsrc]
push    [ebp+lpsrcstr]
push    [ebp+dwmapflags]
push    0
push    [ebp+arg_0]
call    sub_413d51
push    eax
call    ds:lcmapstringw
pop     esi
pop     ebp
retn    24h
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
call    sub_4139ab
mov     esi, eax
test    esi, esi
jz      short loc_413d74
push    [ebp+arg_4]
mov     ecx, esi
push    [ebp+arg_0]
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_413d7d
push    [ebp+arg_0]
call    sub_41556c
pop     ecx
pop     esi
pop     ebp
retn    8
mov     ecx, offset destination
mov     eax, offset dword_42cc58
xor     edx, edx
cmp     ecx, eax
push    esi
mov     esi, ___security_cookie
sbb     ecx, ecx
and     ecx, 0ffffffdeh
add     ecx, 22h
inc     edx
mov     [eax], esi
lea     eax, [eax+4]
cmp     edx, ecx
jnz     short loc_413dad
mov     al, 1
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 718h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
cmp     dword ptr [esi+4], 0fde9h
jz      loc_41410e
lea     eax, [ebp+cpinfo]
push    eax
push    dword ptr [esi+4]
call    ds:getcpinfo
test    eax, eax
jz      loc_41410e
xor     ebx, ebx
mov     edi, 100h
mov     eax, ebx
mov     [ebp+eax+multibytestr], al
inc     eax
cmp     eax, edi
jb      short loc_414023
mov     al, [ebp+cpinfo.leadbyte]
lea     ecx, [ebp+cpinfo.leadbyte]
mov     [ebp+multibytestr], 20h
jmp     short loc_414063
movzx   edx, byte ptr [ecx+1]
movzx   eax, al
jmp     short loc_41405a
cmp     eax, edi
jnb     short loc_41405e
mov     [ebp+eax+multibytestr], 20h
inc     eax
cmp     eax, edx
jbe     short loc_41404d
add     ecx, 2
mov     al, [ecx]
test    al, al
jnz     short loc_414044
push    ebx
push    dword ptr [esi+4]
lea     eax, [ebp+chartype]
push    eax
push    edi
lea     eax, [ebp+multibytestr]
push    eax
push    1
push    ebx
call    ___acrt_getstringtypea
push    ebx
push    dword ptr [esi+4]
lea     eax, [ebp+deststr]
push    edi
push    eax
push    edi
lea     eax, [ebp+multibytestr]
push    eax
push    edi
push    dword ptr [esi+21ch]
push    ebx
call    ___acrt_lcmapstringa
add     esp, 40h
lea     eax, [ebp+var_304]
push    ebx
push    dword ptr [esi+4]
push    edi
push    eax
push    edi
lea     eax, [ebp+multibytestr]
push    eax
push    200h
push    dword ptr [esi+21ch]
push    ebx
call    ___acrt_lcmapstringa
add     esp, 24h
mov     eax, ebx
movzx   ecx, [ebp+eax*2+chartype]
test    cl, 1
jz      short loc_4140eb
or      byte ptr [esi+eax+19h], 10h
mov     cl, byte ptr [ebp+eax+deststr]
jmp     short loc_414100
test    cl, 2
jz      short loc_4140fe
or      byte ptr [esi+eax+19h], 20h
mov     cl, byte ptr [ebp+eax+var_304]
jmp     short loc_414100
mov     cl, bl
mov     [esi+eax+119h], cl
inc     eax
cmp     eax, edi
jb      short loc_4140d0
jmp     short loc_41414b
xor     ebx, ebx
mov     edi, 100h
mov     ecx, ebx
lea     edx, [ecx-61h]
lea     eax, [edx+20h]
cmp     eax, 19h
ja      short loc_41412c
or      byte ptr [esi+ecx+19h], 10h
lea     eax, [ecx+20h]
jmp     short loc_41413f
cmp     edx, 19h
ja      short loc_41413d
lea     eax, [esi+ecx]
or      byte ptr [eax+19h], 20h
lea     eax, [ecx-20h]
jmp     short loc_41413f
mov     al, bl
mov     [esi+ecx+119h], al
inc     ecx
cmp     ecx, edi
jb      short loc_414117
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
push    [ebp+arg_c]
push    [ebp+arg_8]
call    sub_414273
push    [ebp+arg_0]
call    ?getsystemcp@@yahh@z
mov     ecx, [ebp+arg_8]
add     esp, 0ch
mov     [ebp+var_c], eax
mov     ecx, [ecx+48h]
cmp     eax, [ecx+4]
jnz     short loc_41418a
xor     eax, eax
leave
retn
push    ebx
push    esi
push    edi
push    220h
call    __malloc_base
mov     edi, eax
or      ebx, 0ffffffffh
pop     ecx
test    edi, edi
jz      short loc_4141cf
mov     esi, [ebp+arg_8]
mov     ecx, 88h
mov     esi, [esi+48h]
rep movsd
mov     edi, eax
push    edi
push    [ebp+var_c]
and     dword ptr [edi], 0
call    sub_41437b
mov     esi, eax
pop     ecx
pop     ecx
cmp     esi, ebx
jnz     short loc_4141df
call    __errno
mov     dword ptr [eax], 16h
mov     esi, ebx
push    edi
call    __free_base
pop     ecx
pop     edi
mov     eax, esi
pop     esi
pop     ebx
leave
retn
cmp     [ebp+arg_4], 0
jnz     short loc_4141ea
call    sub_4132f2
mov     eax, [ebp+arg_8]
mov     eax, [eax+48h]
lock xadd [eax], ebx
dec     ebx
jnz     short loc_41420c
mov     eax, [ebp+arg_8]
cmp     dword ptr [eax+48h], offset dword_42c468
jz      short loc_41420c
push    dword ptr [eax+48h]
call    __free_base
pop     ecx
mov     dword ptr [edi], 1
mov     ecx, edi
mov     eax, [ebp+arg_8]
xor     edi, edi
mov     [eax+48h], ecx
mov     eax, [ebp+arg_8]
test    byte ptr [eax+350h], 2
jnz     short loc_4141d1
test    byte ptr dword_42c988, 1
jnz     short loc_4141d1
lea     eax, [ebp+arg_8]
mov     [ebp+var_14], eax
lea     ecx, [ebp+var_1]
push    5
lea     eax, [ebp+arg_c]
mov     [ebp+var_10], eax
pop     eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
lea     eax, [ebp+var_c]
push    eax
lea     eax, [ebp+var_14]
push    eax
lea     eax, [ebp+var_8]
push    eax
call    ??$?rv_lambda_c76fdea48760d5f9368b465f31df4405_@@aav_lambda_e378711a6f6581bf7f0efd7cdf97f5d9_@@v_lambda_e927a58b2a85c081d733e8c6192ae2d2_@@@?$__crt_seh_guarded_call@x@@qaex$$qav_lambda_c76fdea48760d5f9368b465f31df4405_@@aav_lambda_e378711a6f6581bf7f0efd7cdf97f5d9_@@$$qav_lambda_e927a58b2a85c081d733e8c6192ae2d2_@@@z
cmp     [ebp+arg_4], 0
jz      loc_4141d1
mov     eax, [ebp+arg_c]
mov     eax, [eax]
mov     off_42c0bc, eax
jmp     loc_4141d1
push    0ch
push    offset stru_42b888
call    __seh_prolog4
xor     esi, esi
mov     [ebp+var_1c], esi
mov     edi, [ebp+arg_0]
mov     eax, dword_42c988
test    [edi+350h], eax
jz      short loc_4142a2
cmp     [edi+4ch], esi
jz      short loc_4142a2
mov     esi, [edi+48h]
test    esi, esi
jz      short loc_41430d
jmp     short loc_4142fb
push    5
call    ___acrt_lock
pop     ecx
mov     [ebp+ms_exc.registration.trylevel], esi
mov     esi, [edi+48h]
mov     [ebp+var_1c], esi
mov     ebx, [ebp+arg_4]
cmp     esi, [ebx]
jz      short loc_4142e1
test    esi, esi
jz      short loc_4142d6
or      eax, 0ffffffffh
lock xadd [esi], eax
jnz     short loc_4142d6
cmp     esi, offset dword_42c468
jz      short loc_4142d6
push    esi
call    __free_base
pop     ecx
mov     esi, [ebx]
mov     [edi+48h], esi
mov     [ebp+var_1c], esi
lock inc dword ptr [esi]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_4142f2
jmp     short loc_41429c
mov     esi, [ebp+var_1c]
push    5
call    ___acrt_unlock
pop     ecx
retn
mov     eax, esi
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn
call    _abort
push    offset dword_42cce8
call    sub_412fc9
push    eax
call    sub_414273
pop     ecx
pop     ecx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
push    [ebp+arg_0]
call    ?getsystemcp@@yahh@z
mov     ebx, eax
pop     ecx
test    ebx, ebx
jz      loc_414556
xor     edi, edi
mov     ecx, edi
mov     eax, edi
mov     [ebp+var_1c], ecx
cmp     dword_42c898[eax], ebx
jz      loc_4144ae
inc     ecx
add     eax, 30h
mov     [ebp+var_1c], ecx
cmp     eax, 0f0h
jb      short loc_4143af
cmp     ebx, 0fde8h
jz      loc_4144a6
movzx   eax, bx
push    eax
call    ds:isvalidcodepage
test    eax, eax
jz      loc_4144a6
mov     eax, 0fde9h
cmp     ebx, eax
jnz     short loc_414416
mov     [esi+4], eax
mov     [esi+21ch], edi
mov     [esi+18h], edi
mov     [esi+1ch], di
mov     [esi+8], edi
xor     eax, eax
lea     edi, [esi+0ch]
stosd
stosd
stosd
push    esi
call    sub_413fda
jmp     loc_41455c
lea     eax, [ebp+cpinfo]
push    eax
push    ebx
call    ds:getcpinfo
test    eax, eax
jz      short loc_41449a
push    101h
lea     eax, [esi+18h]
push    edi
push    eax
call    _memset
add     esp, 0ch
mov     [esi+4], ebx
cmp     [ebp+cpinfo.maxcharsize], 2
mov     [esi+21ch], edi
jnz     short loc_414400
cmp     [ebp+cpinfo.leadbyte], 0
lea     eax, [ebp+cpinfo.leadbyte]
jz      short loc_414470
mov     cl, [eax+1]
test    cl, cl
jz      short loc_414470
movzx   edx, cl
movzx   ecx, byte ptr [eax]
jmp     short loc_414464
or      byte ptr [esi+ecx+19h], 4
inc     ecx
cmp     ecx, edx
jbe     short loc_41445e
add     eax, 2
cmp     byte ptr [eax], 0
jnz     short loc_41444f
lea     eax, [esi+1ah]
mov     ecx, 0feh
or      byte ptr [eax], 8
inc     eax
sub     ecx, 1
jnz     short loc_414478
push    dword ptr [esi+4]
call    ?cptolocalename@@yapb_wh@z
xor     edi, edi
mov     [esi+21ch], eax
add     esp, 4
inc     edi
jmp     loc_414400
cmp     dword_42ccec, edi
jnz     loc_414556
or      eax, 0ffffffffh
jmp     loc_41455f
push    101h
lea     eax, [esi+18h]
push    edi
push    eax
call    _memset
add     esp, 0ch
imul    eax, [ebp+var_1c], 30h
mov     [ebp+var_20], eax
lea     eax, dword_42c8a8[eax]
mov     [ebp+var_1c], eax
cmp     byte ptr [eax], 0
mov     ecx, eax
jz      short loc_41450c
mov     al, [ecx+1]
test    al, al
jz      short loc_414509
movzx   edx, byte ptr [ecx]
movzx   eax, al
jmp     short loc_4144fd
cmp     edx, 100h
jnb     short loc_414501
mov     al, byte_42c890[edi]
or      [esi+edx+19h], al
inc     edx
movzx   eax, byte ptr [ecx+1]
cmp     edx, eax
jbe     short loc_4144e6
add     ecx, 2
cmp     byte ptr [ecx], 0
jnz     short loc_4144d7
mov     eax, [ebp+var_1c]
inc     edi
add     eax, 8
mov     [ebp+var_1c], eax
cmp     edi, 4
jb      short loc_4144d0
push    ebx
mov     [esi+4], ebx
mov     dword ptr [esi+8], 1
call    ?cptolocalename@@yapb_wh@z
add     esp, 4
mov     [esi+21ch], eax
mov     eax, [ebp+var_20]
lea     ecx, [esi+0ch]
push    6
lea     edx, dword_42c89c[eax]
pop     edi
mov     ax, [edx]
lea     edx, [edx+2]
mov     [ecx], ax
lea     ecx, [ecx+2]
sub     edi, 1
jnz     short loc_414540
jmp     loc_41440b
push    esi
call    sub_413f75
xor     eax, eax
pop     ecx
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
call    sub_413120
mov     esi, eax
test    esi, esi
jz      loc_414740
mov     edx, [esi]
xor     ebx, ebx
mov     ecx, edx
lea     eax, [edx+90h]
cmp     edx, eax
jz      short loc_414625
mov     edi, [ebp+arg_0]
cmp     [ecx], edi
jz      short loc_414627
add     ecx, 0ch
cmp     ecx, eax
jnz     short loc_41461a
mov     ecx, ebx
test    ecx, ecx
jz      loc_414740
mov     edi, [ecx+8]
test    edi, edi
jz      loc_414740
cmp     edi, 5
jnz     short loc_41464a
xor     eax, eax
mov     [ecx+8], ebx
inc     eax
jmp     loc_414742
cmp     edi, 1
jnz     short loc_414657
or      eax, 0ffffffffh
jmp     loc_414742
mov     eax, [esi+4]
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
mov     [esi+4], eax
cmp     dword ptr [ecx+4], 8
jnz     loc_414724
lea     eax, [edx+24h]
lea     edx, [eax+6ch]
jmp     short loc_41467b
mov     [eax+8], ebx
add     eax, 0ch
cmp     eax, edx
jnz     short loc_414675
mov     ebx, [esi+8]
mov     eax, 0c0000091h
cmp     [ecx], eax
ja      short loc_4146d2
jz      short loc_4146cb
cmp     dword ptr [ecx], 0c000008dh
jz      short loc_4146c4
cmp     dword ptr [ecx], 0c000008eh
jz      short loc_4146bd
cmp     dword ptr [ecx], 0c000008fh
jz      short loc_4146b6
cmp     dword ptr [ecx], 0c0000090h
mov     eax, ebx
jnz     short loc_414711
mov     eax, 81h
jmp     short loc_41470e
mov     eax, 86h
jmp     short loc_41470e
mov     eax, 83h
jmp     short loc_41470e
mov     eax, 82h
jmp     short loc_41470e
mov     eax, 84h
jmp     short loc_41470e
cmp     dword ptr [ecx], 0c0000092h
jz      short loc_414709
cmp     dword ptr [ecx], 0c0000093h
jz      short loc_414702
cmp     dword ptr [ecx], 0c00002b4h
jz      short loc_4146fb
cmp     dword ptr [ecx], 0c00002b5h
mov     eax, ebx
jnz     short loc_414711
mov     eax, 8dh
jmp     short loc_41470e
mov     eax, 8eh
jmp     short loc_41470e
mov     eax, 85h
jmp     short loc_41470e
mov     eax, 8ah
mov     [esi+8], eax
push    eax
push    8
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
pop     ecx
mov     [esi+8], ebx
jmp     short loc_414734
push    dword ptr [ecx+4]
mov     [ecx+8], ebx
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     eax, [ebp+var_4]
pop     ecx
mov     [esi+4], eax
jmp     loc_41464f
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
xor     edi, edi
lea     eax, [esi+ecx*4]
and     ecx, 3fffffffh
cmp     eax, esi
sbb     ebx, ebx
not     ebx
and     ebx, ecx
jz      short loc_4148e1
push    dword ptr [esi]
call    __free_base
inc     edi
lea     esi, [esi+4]
pop     ecx
cmp     edi, ebx
jnz     short loc_4148d1
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
call    sub_412fc9
mov     ecx, [eax+4ch]
mov     [ebp+var_4], ecx
lea     ecx, [ebp+var_4]
push    ecx
push    eax
call    sub_41322a
mov     eax, [ebp+var_4]
pop     ecx
pop     ecx
mov     eax, [eax]
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
mov     esi, [ebp+arg_c]
test    esi, esi
jnz     short loc_414ad2
test    ecx, ecx
jnz     short loc_414ad6
cmp     [ebp+arg_4], esi
jz      short loc_414ae6
call    __errno
push    16h
pop     esi
mov     [eax], esi
call    __invalid_parameter_noinfo
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn
test    ecx, ecx
jz      short loc_414abd
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_414abd
test    esi, esi
jnz     short loc_414aea
xor     eax, eax
mov     [ecx], ax
xor     eax, eax
jmp     short loc_414ace
test    ebx, ebx
jnz     short loc_414af5
xor     eax, eax
mov     [ecx], ax
jmp     short loc_414abd
sub     ebx, ecx
mov     edx, ecx
push    edi
mov     edi, eax
cmp     esi, 0ffffffffh
jnz     short loc_414b17
movzx   eax, word ptr [ebx+edx]
mov     [edx], ax
lea     edx, [edx+2]
test    ax, ax
jz      short loc_414b3e
sub     edi, 1
jnz     short loc_414b01
jmp     short loc_414b3e
mov     ecx, esi
movzx   eax, word ptr [ebx+edx]
mov     [edx], ax
lea     edx, [edx+2]
test    ax, ax
jz      short loc_414b32
sub     edi, 1
jz      short loc_414b32
sub     ecx, 1
jnz     short loc_414b19
test    ecx, ecx
mov     ecx, [ebp+arg_0]
jnz     short loc_414b3e
xor     eax, eax
mov     [edx], ax
test    edi, edi
pop     edi
jnz     short loc_414ae6
cmp     esi, 0ffffffffh
jnz     short loc_414b5a
mov     eax, [ebp+arg_4]
xor     edx, edx
push    50h
mov     [ecx+eax*2-2], dx
pop     eax
jmp     loc_414ace
xor     eax, eax
mov     [ecx], ax
call    __errno
push    22h
jmp     loc_414ac4
mov     edi, edi
push    ebp
mov     ebp, esp
pop     ebp
jmp     sub_414aa0
push    8
push    offset stru_42b8c8
call    __seh_prolog4
mov     esi, ecx
cmp     byte_42cd00, 0
jnz     loc_414eb4
xor     eax, eax
inc     eax
mov     ecx, offset dword_42ccf8
xchg    eax, [ecx]
xor     ebx, ebx
mov     [ebp+ms_exc.registration.trylevel], ebx
mov     eax, [esi]
mov     eax, [eax]
test    eax, eax
jnz     short loc_414e61
mov     edi, ___security_cookie
mov     ecx, edi
and     ecx, 1fh
mov     eax, dword_42ccfc
cmp     eax, edi
jz      short loc_414e5a
xor     edi, eax
push    ebx
push    ebx
push    ebx
ror     edi, cl
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
push    offset stru_42cd20
jmp     short loc_414e6b
cmp     eax, 1
jnz     short loc_414e71
push    offset table
call    __execute_onexit_table
pop     ecx
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     eax, [esi]
cmp     [eax], ebx
jnz     short loc_414e8f
push    offset dword_402904
push    offset dword_4028f4
call    sub_4168dc
pop     ecx
pop     ecx
push    offset dword_40290c
push    offset dword_402908
call    sub_4168dc
pop     ecx
pop     ecx
mov     eax, [esi+4]
cmp     [eax], ebx
jnz     short loc_414eb4
mov     byte_42cd00, 1
mov     eax, [esi+8]
mov     byte ptr [eax], 1
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn
mov     eax, [ebp+ms_exc.exc_ptr]
mov     eax, [eax]
push    dword ptr [eax]
call    ?atexit_exception_filter@@yahk@z
add     esp, 4
retn
mov     esp, [ebp+ms_exc.old_esp]
call    sub_416ca7
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+phmodule], 0
lea     eax, [ebp+phmodule]
push    eax
push    offset amscoreedll
push    0
call    ds:getmodulehandleexw
test    eax, eax
jz      short loc_41501b
push    esi
push    offset acorexitprocess
push    [ebp+phmodule]
call    ds:getprocaddress
mov     esi, eax
test    esi, esi
jz      short loc_41501a
push    [ebp+arg_0]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
cmp     [ebp+phmodule], 0
jz      short locret_41502a
push    [ebp+phmodule]
call    ds:freelibrary
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_42ccfc, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, dword_42ccfc
cmp     eax, ___security_cookie
jnz     sub_416ca7
push    [ebp+arg_0]
call    unknown_libname_7
pop     ecx
mov     dword_42ccfc, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
dec     eax
sub     eax, 1
jz      short loc_41514a
sub     eax, 4
jz      short loc_415143
sub     eax, 9
jz      short loc_41513c
sub     eax, 6
jz      short loc_415135
sub     eax, 1
jz      short loc_415143
xor     eax, eax
pop     ebp
retn
mov     eax, offset dword_42cd08
pop     ebp
retn
mov     eax, offset dword_42cd10
pop     ebp
retn
mov     eax, offset dword_42cd0c
pop     ebp
retn
mov     eax, offset dword_42cd04
pop     ebp
retn
call    sub_412fc9
add     eax, 8
retn
push    24h
push    offset stru_42b908
call    __seh_prolog4
and     [ebp+var_20], 0
and     [ebp+var_30], 0
mov     cl, 1
mov     [ebp+var_19], cl
mov     esi, [ebp+arg_0]
push    8
pop     ebx
cmp     esi, ebx
jg      short loc_415202
jz      short loc_415223
lea     eax, [esi-1]
sub     eax, 1
jz      short loc_415216
dec     eax
sub     eax, 1
jz      short loc_415223
dec     eax
sub     eax, 1
jnz     short loc_415247
jmp     short loc_415216
cmp     esi, 0bh
jz      short loc_415223
cmp     esi, 0fh
jz      short loc_415216
cmp     esi, 14h
jle     short loc_415247
cmp     esi, 16h
jg      short loc_415247
push    esi
call    sub_41510f
add     esp, 4
mov     edi, eax
jmp     short loc_415261
call    sub_413120
mov     edi, eax
mov     [ebp+var_20], edi
test    edi, edi
jnz     short loc_415239
or      eax, 0ffffffffh
jmp     loc_415394
push    dword ptr [edi]
push    esi
call    ?siglookup@@yapau__crt_signal_action_t@@hqau1@@z
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_415259
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
jmp     short loc_415231
lea     edi, [eax+8]
xor     cl, cl
mov     [ebp+var_19], cl
mov     [ebp+var_24], edi
and     [ebp+var_2c], 0
test    cl, cl
jz      short loc_415277
push    3
call    ___acrt_lock
pop     ecx
mov     cl, [ebp+var_19]
and     [ebp+var_28], 0
mov     [ebp+var_1a], 0
and     [ebp+ms_exc.registration.trylevel], 0
mov     edi, [edi]
test    cl, cl
jz      short loc_41529d
mov     ecx, ___security_cookie
and     ecx, 1fh
xor     edi, ___security_cookie
ror     edi, cl
mov     cl, [ebp+var_19]
mov     [ebp+var_28], edi
cmp     edi, 1
setz    al
mov     [ebp+var_1a], al
test    al, al
jnz     short loc_41531c
test    edi, edi
jz      loc_4153a4
cmp     esi, ebx
jz      short loc_4152c3
cmp     esi, 0bh
jz      short loc_4152c3
cmp     esi, 4
jnz     short loc_4152e9
mov     eax, [ebp+var_20]
mov     ecx, [eax+4]
mov     [ebp+var_2c], ecx
and     dword ptr [eax+4], 0
cmp     esi, ebx
jnz     short loc_415312
call    sub_4151be
mov     eax, [eax]
mov     [ebp+var_30], eax
call    sub_4151be
mov     dword ptr [eax], 8ch
mov     eax, [ebp+var_20]
cmp     esi, ebx
jnz     short loc_415312
imul    ecx, ds:dword_403724, 0ch
add     ecx, [eax]
imul    eax, ds:dword_403728, 0ch
add     eax, ecx
mov     [ebp+var_34], ecx
cmp     ecx, eax
jz      short loc_41531c
and     dword ptr [ecx+8], 0
add     ecx, 0ch
jmp     short loc_415302
mov     eax, ___security_cookie
mov     ecx, [ebp+var_24]
mov     [ecx], eax
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_415351
cmp     [ebp+var_1a], 0
jnz     short loc_415392
cmp     esi, ebx
jnz     short loc_415360
call    sub_412fc9
push    dword ptr [eax+8]
push    ebx
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
pop     ecx
jmp     short loc_41536b
push    8
pop     ebx
mov     esi, [ebp+arg_0]
mov     edi, [ebp+var_28]
cmp     [ebp+var_19], 0
jz      short loc_41535f
push    3
call    ___acrt_unlock
pop     ecx
retn
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
pop     ecx
cmp     esi, ebx
jz      short loc_41537a
cmp     esi, 0bh
jz      short loc_41537a
cmp     esi, 4
jnz     short loc_415392
mov     eax, [ebp+var_20]
mov     ecx, [ebp+var_2c]
mov     [eax+4], ecx
cmp     esi, ebx
jnz     short loc_415392
call    sub_412fc9
mov     ecx, [ebp+var_30]
mov     [eax+8], ecx
xor     eax, eax
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn
test    cl, cl
jz      short loc_4153b0
push    3
call    ___acrt_unlock
pop     ecx
push    3
call    __exit
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_42cd14, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
call    __query_new_handler
mov     esi, eax
test    esi, esi
jz      short loc_4153ef
push    [ebp+arg_0]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     ecx
test    eax, eax
jz      short loc_4153ef
xor     eax, eax
inc     eax
jmp     short loc_4153f1
xor     eax, eax
pop     esi
pop     ebp
retn
mov     eax, dword_42cd18
retn
and     hheap, 0
mov     al, 1
retn
mov     edi, edi
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 4
jnz     short loc_41582f
test    [ebp+arg_0], 1
jz      short loc_41583c
test    [ebp+arg_0], 2
jz      short loc_415833
cmp     [ebp+arg_4], 80000000h
jbe     short loc_41583c
mov     al, 1
pop     ebp
retn
cmp     [ebp+arg_4], 7fffffffh
ja      short loc_41582f
xor     al, al
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 4
jnz     short loc_415868
test    [ebp+arg_0], 1
jz      short loc_41587d
test    [ebp+arg_0], 2
jz      short loc_41586c
cmp     [ebp+arg_8], 80000000h
jb      short loc_41587d
ja      short loc_415868
cmp     [ebp+arg_4], 0
jbe     short loc_41587d
mov     al, 1
pop     ebp
retn
cmp     [ebp+arg_8], 7fffffffh
ja      short loc_415868
jb      short loc_41587d
cmp     [ebp+arg_4], 0ffffffffh
ja      short loc_415868
xor     al, al
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 28h
lea     ecx, [ebp+arg_4]
push    ebx
push    esi
call    unknown_libname_8
test    al, al
jz      short loc_4158b8
mov     esi, [ebp+arg_c]
test    esi, esi
jz      short loc_4158cc
cmp     esi, 2
jl      short loc_4158a8
cmp     esi, 24h
jle     short loc_4158cc
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     ebx, ebx
mov     edx, [ebp+arg_8]
test    edx, edx
jz      short loc_4158c6
mov     ecx, [ebp+arg_4]
mov     [edx], ecx
pop     esi
mov     eax, ebx
pop     ebx
leave
retn
push    edi
push    [ebp+arg_0]
lea     ecx, [ebp+var_28]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     eax, [ebp+arg_4]
xor     edi, edi
mov     [ebp+var_c], edi
mov     [ebp+var_18], eax
jmp     short loc_4158e8
mov     eax, [ebp+arg_4]
mov     bl, [eax]
inc     eax
mov     [ebp+arg_4], eax
lea     eax, [ebp+locale]
push    eax
movzx   eax, bl
push    8
push    eax
mov     byte ptr [ebp+var_4], bl
call    __ischartype_l
add     esp, 0ch
test    eax, eax
jnz     short loc_4158e5
movzx   eax, [ebp+arg_10]
mov     [ebp+var_8], eax
cmp     bl, 2dh
jnz     short loc_41591b
or      eax, 2
mov     [ebp+var_8], eax
jmp     short loc_415920
cmp     bl, 2bh
jnz     short loc_41592e
mov     edi, [ebp+arg_4]
mov     bl, [edi]
inc     edi
mov     byte ptr [ebp+var_4], bl
mov     [ebp+arg_4], edi
jmp     short loc_415931
mov     edi, [ebp+arg_4]
test    esi, esi
jz      short loc_41593a
cmp     esi, 10h
jnz     short loc_4159b2
mov     al, bl
sub     al, 30h
cmp     al, 9
ja      short loc_41594a
movsx   eax, bl
add     eax, 0ffffffd0h
jmp     short loc_41596d
mov     al, bl
sub     al, 61h
cmp     al, 19h
ja      short loc_41595a
movsx   eax, bl
add     eax, 0ffffffa9h
jmp     short loc_41596d
mov     al, bl
sub     al, 41h
cmp     al, 19h
ja      short loc_41596a
movsx   eax, bl
add     eax, 0ffffffc9h
jmp     short loc_41596d
or      eax, 0ffffffffh
test    eax, eax
jz      short loc_41597a
test    esi, esi
jnz     short loc_4159b2
push    0ah
pop     esi
jmp     short loc_4159b2
mov     al, [edi]
inc     edi
mov     byte ptr [ebp+var_10], al
mov     [ebp+arg_4], edi
cmp     al, 78h
jz      short loc_4159a2
cmp     al, 58h
jz      short loc_4159a2
test    esi, esi
jnz     short loc_415992
push    8
pop     esi
push    [ebp+var_10]
lea     ecx, [ebp+arg_4]
call    ?unget@?$c_string_character_source@d@__crt_strtox@@qaexd@z
mov     edi, [ebp+arg_4]
jmp     short loc_4159b2
test    esi, esi
jnz     short loc_4159a9
push    10h
pop     esi
mov     bl, [edi]
inc     edi
mov     byte ptr [ebp+var_4], bl
mov     [ebp+arg_4], edi
xor     edx, edx
or      eax, 0ffffffffh
div     esi
mov     [ebp+var_14], edx
mov     edx, [ebp+var_8]
mov     [ebp+var_10], eax
lea     ecx, [ebx-30h]
cmp     cl, 9
ja      short loc_4159d2
movsx   ecx, bl
add     ecx, 0ffffffd0h
jmp     short loc_4159f5
mov     al, bl
sub     al, 61h
cmp     al, 19h
ja      short loc_4159e2
movsx   ecx, bl
add     ecx, 0ffffffa9h
jmp     short loc_4159f5
mov     al, bl
sub     al, 41h
cmp     al, 19h
ja      short loc_4159f2
movsx   ecx, bl
add     ecx, 0ffffffc9h
jmp     short loc_4159f5
or      ecx, 0ffffffffh
cmp     ecx, 0ffffffffh
jz      short loc_415a29
cmp     ecx, esi
jnb     short loc_415a29
mov     eax, [ebp+var_c]
cmp     eax, [ebp+var_10]
jb      short loc_415a11
jnz     short loc_415a0d
cmp     ecx, [ebp+var_14]
jbe     short loc_415a11
push    0ch
jmp     short loc_415a1b
imul    eax, esi
push    8
add     eax, ecx
mov     [ebp+var_c], eax
mov     bl, [edi]
inc     edi
pop     eax
mov     byte ptr [ebp+var_4], bl
or      edx, eax
mov     [ebp+arg_4], edi
jmp     short loc_4159c2
push    [ebp+var_4]
lea     ecx, [ebp+arg_4]
mov     [ebp+var_8], edx
call    ?unget@?$c_string_character_source@d@__crt_strtox@@qaexd@z
mov     ebx, [ebp+var_8]
test    bl, 8
jnz     short loc_415a49
mov     eax, [ebp+var_18]
xor     ebx, ebx
mov     [ebp+arg_4], eax
jmp     short loc_415a8a
mov     edi, [ebp+var_c]
push    edi
push    ebx
call    sub_41580f
pop     ecx
pop     ecx
test    al, al
jz      short loc_415a81
call    __errno
mov     dword ptr [eax], 22h
test    bl, 1
jnz     short loc_415a6e
or      edi, 0ffffffffh
jmp     short loc_415a88
test    bl, 2
jz      short loc_415a7a
mov     ebx, 80000000h
jmp     short loc_415a8a
mov     ebx, 7fffffffh
jmp     short loc_415a8a
test    bl, 2
jz      short loc_415a88
neg     edi
mov     ebx, edi
cmp     [ebp+var_1c], 0
pop     edi
jz      loc_4158ba
mov     eax, [ebp+var_28]
and     dword ptr [eax+350h], 0fffffffdh
jmp     loc_4158ba
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 1ch
lea     ecx, [ebp+arg_4]
push    ebx
call    unknown_libname_8
test    al, al
jz      short loc_415ada
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_415aed
cmp     eax, 2
jl      short loc_415aca
cmp     eax, 24h
jle     short loc_415aed
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     ebx, ebx
mov     edx, [ebp+arg_8]
test    edx, edx
jz      short loc_415ae8
mov     ecx, [ebp+arg_4]
mov     [edx], ecx
mov     eax, ebx
pop     ebx
leave
retn
push    esi
push    [ebp+arg_0]
lea     ecx, [ebp+var_1c]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     eax, [ebp+arg_4]
xor     esi, esi
mov     [ebp+var_8], esi
mov     [ebp+var_c], eax
jmp     short loc_415b09
mov     eax, [ebp+arg_4]
movzx   esi, word ptr [eax]
add     eax, 2
push    8
push    esi
mov     [ebp+arg_4], eax
call    sub_413389
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_415b06
movzx   ebx, [ebp+arg_10]
push    edi
cmp     si, 2dh
jnz     short loc_415b30
or      ebx, 2
jmp     short loc_415b36
cmp     si, 2bh
jnz     short loc_415b44
mov     edi, [ebp+arg_4]
movzx   esi, word ptr [edi]
add     edi, 2
mov     [ebp+arg_4], edi
jmp     short loc_415b47
mov     edi, [ebp+arg_4]
mov     eax, [ebp+arg_c]
movzx   edx, si
mov     [ebp+var_4], 19h
push    30h
pop     ecx
test    eax, eax
jz      short loc_415b64
cmp     eax, 10h
jnz     loc_415d9b
cmp     si, cx
jb      loc_415d0e
push    3ah
pop     eax
cmp     si, ax
jnb     short loc_415b7f
movzx   eax, si
sub     eax, ecx
jmp     loc_415d09
mov     ecx, 0ff10h
cmp     si, cx
jnb     loc_415cf8
mov     ecx, 660h
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      short loc_415b75
mov     ecx, 6f0h
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      short loc_415b75
mov     ecx, 966h
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      short loc_415b75
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      short loc_415b75
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
mov     ecx, 0c66h
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
mov     ecx, 0e50h
cmp     si, cx
jb      loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
lea     ecx, [eax+76h]
cmp     si, cx
jb      short loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
add     ecx, 50h
cmp     si, cx
jb      short loc_415d0e
add     eax, 50h
cmp     si, ax
jb      loc_415b75
mov     ecx, 1040h
cmp     si, cx
jb      short loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
mov     ecx, 17e0h
cmp     si, cx
jb      short loc_415d0e
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_415b75
add     ecx, 30h
cmp     si, cx
jb      short loc_415d0e
add     eax, 30h
cmp     si, ax
jnb     short loc_415d0e
jmp     loc_415b75
mov     eax, 0ff1ah
cmp     si, ax
jb      loc_415b75
or      eax, 0ffffffffh
cmp     eax, 0ffffffffh
jnz     short loc_415d47
push    41h
pop     eax
cmp     ax, si
ja      short loc_415d26
push    5ah
pop     eax
cmp     si, ax
ja      short loc_415d26
lea     eax, [edx-61h]
movzx   ecx, ax
jmp     short loc_415d32
lea     eax, [esi-61h]
movzx   ecx, ax
cmp     ax, word ptr [ebp+var_4]
ja      short loc_415d44
push    19h
mov     eax, edx
pop     edx
cmp     cx, dx
ja      short loc_415d3f
add     eax, 0ffffffe0h
add     eax, 0ffffffc9h
jmp     short loc_415d47
or      eax, 0ffffffffh
test    eax, eax
jz      short loc_415d5a
cmp     [ebp+arg_c], 0
jnz     short loc_415d9b
mov     [ebp+arg_c], 0ah
jmp     short loc_415d9b
movzx   eax, word ptr [edi]
lea     ecx, [edi+2]
mov     [ebp+arg_4], ecx
cmp     eax, 78h
jz      short loc_415d85
cmp     eax, 58h
jz      short loc_415d85
cmp     [ebp+arg_c], 0
jnz     short loc_415d7a
mov     [ebp+arg_c], 8
push    eax
lea     ecx, [ebp+arg_4]
call    ?unget@?$c_string_character_source@_w@__crt_strtox@@qaex_w@z
jmp     short loc_415d9b
cmp     [ebp+arg_c], 0
jnz     short loc_415d92
mov     [ebp+arg_c], 10h
movzx   esi, word ptr [ecx]
add     ecx, 2
mov     [ebp+arg_4], ecx
or      eax, 0ffffffffh
xor     edx, edx
div     [ebp+arg_c]
mov     edi, eax
push    30h
pop     eax
movzx   ecx, si
cmp     si, ax
jb      loc_416009
push    3ah
pop     eax
cmp     si, ax
jnb     short loc_415dc7
movzx   eax, si
sub     eax, 30h
jmp     loc_416004
mov     eax, 0ff10h
cmp     si, ax
jnb     loc_415fed
mov     eax, 660h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415df8
movzx   eax, si
sub     eax, 660h
jmp     loc_416004
mov     eax, 6f0h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415e1b
movzx   eax, si
sub     eax, 6f0h
jmp     loc_416004
mov     eax, 966h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415e3e
movzx   eax, si
sub     eax, 966h
jmp     loc_416004
mov     eax, 9e6h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415e61
movzx   eax, si
sub     eax, 9e6h
jmp     loc_416004
mov     eax, 0a66h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415e84
movzx   eax, si
sub     eax, 0a66h
jmp     loc_416004
mov     eax, 0ae6h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415ea7
movzx   eax, si
sub     eax, 0ae6h
jmp     loc_416004
mov     eax, 0b66h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415eca
movzx   eax, si
sub     eax, 0b66h
jmp     loc_416004
mov     eax, 0c66h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415eed
movzx   eax, si
sub     eax, 0c66h
jmp     loc_416004
mov     eax, 0ce6h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415f10
movzx   eax, si
sub     eax, 0ce6h
jmp     loc_416004
mov     eax, 0d66h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415f33
movzx   eax, si
sub     eax, 0d66h
jmp     loc_416004
mov     eax, 0e50h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415f56
movzx   eax, si
sub     eax, 0e50h
jmp     loc_416004
mov     eax, 0ed0h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415f79
movzx   eax, si
sub     eax, 0ed0h
jmp     loc_416004
mov     eax, 0f20h
cmp     si, ax
jb      loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415f99
movzx   eax, si
sub     eax, 0f20h
jmp     short loc_416004
mov     eax, 1040h
cmp     si, ax
jb      short loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415fb5
movzx   eax, si
sub     eax, 1040h
jmp     short loc_416004
mov     eax, 17e0h
cmp     si, ax
jb      short loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_415fd1
movzx   eax, si
sub     eax, 17e0h
jmp     short loc_416004
mov     eax, 1810h
cmp     si, ax
jb      short loc_416009
add     eax, 0ah
cmp     si, ax
jnb     short loc_416009
movzx   eax, si
sub     eax, 1810h
jmp     short loc_416004
mov     eax, 0ff1ah
cmp     si, ax
jnb     short loc_416001
movzx   eax, si
sub     eax, 0ff10h
jmp     short loc_416004
or      eax, 0ffffffffh
cmp     eax, 0ffffffffh
jnz     short loc_416036
push    41h
pop     eax
cmp     ax, si
ja      short loc_416019
push    5ah
pop     eax
cmp     si, ax
jbe     short loc_416022
lea     eax, [esi-61h]
cmp     ax, word ptr [ebp+var_4]
ja      short loc_416033
lea     eax, [esi-61h]
cmp     ax, word ptr [ebp+var_4]
ja      short loc_41602e
add     ecx, 0ffffffe0h
lea     eax, [ecx-37h]
jmp     short loc_416036
or      eax, 0ffffffffh
cmp     eax, 0ffffffffh
jz      short loc_416070
cmp     eax, [ebp+arg_c]
jnb     short loc_416070
mov     ecx, [ebp+var_8]
cmp     ecx, edi
jb      short loc_416051
jnz     short loc_41604d
cmp     eax, edx
jbe     short loc_416051
push    0ch
jmp     short loc_41605c
imul    ecx, [ebp+arg_c]
push    8
add     ecx, eax
mov     [ebp+var_8], ecx
mov     ecx, [ebp+arg_4]
pop     eax
movzx   esi, word ptr [ecx]
add     ecx, 2
mov     [ebp+arg_4], ecx
or      ebx, eax
jmp     loc_415da5
push    esi
lea     ecx, [ebp+arg_4]
call    ?unget@?$c_string_character_source@_w@__crt_strtox@@qaex_w@z
pop     edi
test    bl, 8
jnz     short loc_416089
mov     eax, [ebp+var_c]
xor     ebx, ebx
mov     [ebp+arg_4], eax
jmp     short loc_4160ca
mov     esi, [ebp+var_8]
push    esi
push    ebx
call    sub_41580f
pop     ecx
pop     ecx
test    al, al
jz      short loc_4160c1
call    __errno
mov     dword ptr [eax], 22h
test    bl, 1
jnz     short loc_4160ae
or      esi, 0ffffffffh
jmp     short loc_4160c8
test    bl, 2
jz      short loc_4160ba
mov     ebx, 80000000h
jmp     short loc_4160ca
mov     ebx, 7fffffffh
jmp     short loc_4160ca
test    bl, 2
jz      short loc_4160c8
neg     esi
mov     ebx, esi
cmp     [ebp+var_10], 0
pop     esi
jz      loc_415adc
mov     eax, [ebp+var_1c]
and     dword ptr [eax+350h], 0fffffffdh
jmp     loc_415adc
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0c8h
lea     ecx, [ebp+arg_4]
push    ebx
push    esi
push    edi
call    unknown_libname_8
test    al, al
jz      short loc_41611f
mov     edi, [ebp+arg_c]
test    edi, edi
jz      short loc_41613a
cmp     edi, 2
jl      short loc_41610f
cmp     edi, 24h
jle     short loc_41613a
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     eax, eax
mov     edi, eax
mov     ebx, eax
mov     esi, [ebp+arg_8]
test    esi, esi
jz      short loc_416131
mov     ecx, [ebp+arg_4]
mov     [esi], ecx
mov     eax, edi
mov     edx, ebx
pop     edi
pop     esi
pop     ebx
leave
retn
push    [ebp+arg_0]
lea     ecx, [ebp+var_c8]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
xor     eax, eax
mov     [ebp+var_8], eax
mov     [ebp+var_14], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_b8], eax
jmp     short loc_41615e
mov     eax, [ebp+arg_4]
movzx   esi, word ptr [eax]
add     eax, 2
push    8
push    esi
mov     [ebp+arg_4], eax
call    sub_413389
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_41615b
movzx   eax, [ebp+arg_10]
mov     [ebp+var_4], eax
cmp     si, 2dh
jnz     short loc_41618a
or      eax, 2
mov     [ebp+var_4], eax
jmp     short loc_416190
cmp     si, 2bh
jnz     short loc_41619e
mov     ebx, [ebp+arg_4]
movzx   esi, word ptr [ebx]
add     ebx, 2
mov     [ebp+arg_4], ebx
jmp     short loc_4161a1
mov     ebx, [ebp+arg_4]
movzx   edx, si
mov     eax, 0ff10h
mov     [ebp+var_10], 3ah
mov     [ebp+var_a4], 660h
mov     [ebp+var_18], 66ah
mov     [ebp+var_1c], 6f0h
mov     [ebp+var_20], 6fah
mov     [ebp+var_24], 966h
mov     [ebp+var_28], 970h
mov     [ebp+var_2c], 9e6h
mov     [ebp+var_30], 9f0h
mov     [ebp+var_34], 0a66h
mov     [ebp+var_38], 0a70h
mov     [ebp+var_3c], 0ae6h
mov     [ebp+var_40], 0af0h
mov     [ebp+var_44], 0b66h
mov     [ebp+var_48], 0b70h
mov     [ebp+var_4c], 0c66h
mov     [ebp+var_50], 0c70h
mov     [ebp+var_54], 0ce6h
mov     [ebp+var_58], 0cf0h
mov     [ebp+var_5c], 0d66h
mov     [ebp+var_60], 0d70h
mov     [ebp+var_64], 0e50h
mov     [ebp+var_68], 0e5ah
mov     [ebp+var_6c], 0ed0h
mov     [ebp+var_70], 0edah
mov     [ebp+var_74], 0f20h
mov     [ebp+var_78], 0f2ah
mov     [ebp+var_7c], 1040h
mov     [ebp+var_80], 104ah
mov     [ebp+var_84], 17e0h
mov     [ebp+var_88], 17eah
mov     [ebp+var_8c], 1810h
mov     [ebp+var_90], 181ah
mov     [ebp+var_94], 0ff1ah
mov     [ebp+var_98], 41h
mov     [ebp+var_9c], 5ah
mov     [ebp+var_c], 19h
push    30h
pop     ecx
test    edi, edi
jz      short loc_4162d4
cmp     edi, 10h
jnz     loc_4164dd
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_10]
jnb     short loc_4162ed
movzx   eax, si
sub     eax, ecx
jmp     loc_416454
cmp     si, ax
jnb     loc_41643e
mov     ecx, [ebp+var_a4]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_18]
jb      short loc_4162e3
mov     ecx, [ebp+var_1c]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_20]
jb      short loc_4162e3
mov     ecx, [ebp+var_24]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_28]
jb      short loc_4162e3
mov     ecx, [ebp+var_2c]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_30]
jb      short loc_4162e3
mov     ecx, [ebp+var_34]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_38]
jb      short loc_4162e3
mov     ecx, [ebp+var_3c]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_40]
jb      loc_4162e3
mov     ecx, [ebp+var_44]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_48]
jb      loc_4162e3
mov     ecx, [ebp+var_4c]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_50]
jb      loc_4162e3
mov     ecx, [ebp+var_54]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_58]
jb      loc_4162e3
mov     ecx, [ebp+var_5c]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_60]
jb      loc_4162e3
mov     ecx, [ebp+var_64]
cmp     si, cx
jb      loc_416459
cmp     si, word ptr [ebp+var_68]
jb      loc_4162e3
mov     ecx, [ebp+var_6c]
cmp     si, cx
jb      short loc_416459
cmp     si, word ptr [ebp+var_70]
jb      loc_4162e3
mov     ecx, [ebp+var_74]
cmp     si, cx
jb      short loc_416459
cmp     si, word ptr [ebp+var_78]
jb      loc_4162e3
mov     ecx, [ebp+var_7c]
cmp     si, cx
jb      short loc_416459
cmp     si, word ptr [ebp+var_80]
jb      loc_4162e3
mov     ecx, [ebp+var_84]
cmp     si, cx
jb      short loc_416459
cmp     si, word ptr [ebp+var_88]
jb      loc_4162e3
mov     ecx, [ebp+var_8c]
cmp     si, cx
jb      short loc_416459
cmp     si, word ptr [ebp+var_90]
jnb     short loc_416459
jmp     loc_4162e3
cmp     si, word ptr [ebp+var_94]
jnb     short loc_416451
movzx   eax, si
sub     eax, 0ff10h
jmp     short loc_416454
or      eax, 0ffffffffh
cmp     eax, 0ffffffffh
jnz     short loc_416492
cmp     word ptr [ebp+var_98], si
ja      short loc_416473
cmp     si, word ptr [ebp+var_9c]
ja      short loc_416473
lea     eax, [edx-61h]
movzx   ecx, ax
jmp     short loc_41647f
lea     eax, [esi-61h]
movzx   ecx, ax
cmp     ax, word ptr [ebp+var_c]
ja      short loc_41648f
mov     eax, edx
cmp     cx, word ptr [ebp+var_c]
ja      short loc_41648a
add     eax, 0ffffffe0h
add     eax, 0ffffffc9h
jmp     short loc_416492
or      eax, 0ffffffffh
test    eax, eax
jz      short loc_4164a2
test    edi, edi
jnz     short loc_4164dd
push    0ah
pop     edi
mov     [ebp+arg_c], edi
jmp     short loc_4164dd
movzx   eax, word ptr [ebx]
lea     ecx, [ebx+2]
mov     [ebp+arg_4], ecx
cmp     eax, 78h
jz      short loc_4164ca
cmp     eax, 58h
jz      short loc_4164ca
test    edi, edi
jnz     short loc_4164bf
push    8
pop     edi
mov     [ebp+arg_c], edi
push    eax
lea     ecx, [ebp+arg_4]
call    ?unget@?$c_string_character_source@_w@__crt_strtox@@qaex_w@z
jmp     short loc_4164dd
test    edi, edi
jnz     short loc_4164d4
push    10h
pop     edi
mov     [ebp+arg_c], edi
movzx   esi, word ptr [ecx]
add     ecx, 2
mov     [ebp+arg_4], ecx
mov     eax, edi
cdq
push    ebx
mov     ecx, edx
mov     [ebp+var_b4], eax
push    ecx
push    eax
push    0ffffffffh
push    0ffffffffh
mov     [ebp+var_b0], ecx
call    __aulldvrm
mov     [ebp+var_a8], ebx
pop     ebx
mov     ebx, edx
mov     [ebp+var_ac], ecx
mov     [ebp+var_a0], eax
mov     [ebp+var_10], ebx
push    30h
pop     eax
movzx   ecx, si
cmp     si, ax
jb      loc_41669e
push    3ah
pop     edx
cmp     si, dx
jnb     short loc_416533
movzx   edi, si
sub     edi, eax
jmp     loc_416699
mov     eax, 0ff10h
cmp     si, ax
jnb     loc_416689
mov     eax, [ebp+var_a4]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_18]
jb      short loc_416529
mov     eax, [ebp+var_1c]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_20]
jb      short loc_416529
mov     eax, [ebp+var_24]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_28]
jb      short loc_416529
mov     eax, [ebp+var_2c]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_30]
jb      short loc_416529
mov     eax, [ebp+var_34]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_38]
jb      short loc_416529
mov     eax, [ebp+var_3c]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_40]
jb      loc_416529
mov     eax, [ebp+var_44]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_48]
jb      loc_416529
mov     eax, [ebp+var_4c]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_50]
jb      loc_416529
mov     eax, [ebp+var_54]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_58]
jb      loc_416529
mov     eax, [ebp+var_5c]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_60]
jb      loc_416529
mov     eax, [ebp+var_64]
cmp     si, ax
jb      loc_41669e
cmp     si, word ptr [ebp+var_68]
jb      loc_416529
mov     eax, [ebp+var_6c]
cmp     si, ax
jb      short loc_41669e
cmp     si, word ptr [ebp+var_70]
jb      loc_416529
mov     eax, [ebp+var_74]
cmp     si, ax
jb      short loc_41669e
cmp     si, word ptr [ebp+var_78]
jb      loc_416529
mov     eax, [ebp+var_7c]
cmp     si, ax
jb      short loc_41669e
cmp     si, word ptr [ebp+var_80]
jb      loc_416529
mov     eax, [ebp+var_84]
cmp     si, ax
jb      short loc_41669e
cmp     si, word ptr [ebp+var_88]
jb      loc_416529
mov     eax, [ebp+var_8c]
cmp     si, ax
jb      short loc_41669e
cmp     si, word ptr [ebp+var_90]
jnb     short loc_41669e
jmp     loc_416529
cmp     si, word ptr [ebp+var_94]
jb      loc_416529
or      edi, 0ffffffffh
cmp     edi, 0ffffffffh
jnz     short loc_4166cf
cmp     word ptr [ebp+var_98], si
ja      short loc_4166b0
cmp     si, word ptr [ebp+var_9c]
jbe     short loc_4166b9
lea     eax, [esi-61h]
cmp     ax, word ptr [ebp+var_c]
ja      short loc_4166cc
lea     eax, [esi-61h]
mov     edi, ecx
cmp     ax, word ptr [ebp+var_c]
ja      short loc_4166c7
add     edi, 0ffffffe0h
add     edi, 0ffffffc9h
jmp     short loc_4166cf
or      edi, 0ffffffffh
cmp     edi, 0ffffffffh
jz      loc_41675a
cmp     edi, [ebp+arg_c]
jnb     short loc_41675a
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_14]
or      edx, 8
cmp     eax, ebx
mov     [ebp+var_4], edx
mov     ebx, [ebp+var_8]
jb      short loc_416723
mov     ecx, [ebp+var_a0]
ja      short loc_4166fc
cmp     ebx, ecx
jb      short loc_416723
cmp     ebx, ecx
jnz     short loc_41671b
cmp     eax, [ebp+var_10]
jnz     short loc_41671b
xor     ecx, ecx
mov     esi, ecx
cmp     ecx, [ebp+var_a8]
jb      short loc_416725
ja      short loc_41671b
cmp     edi, [ebp+var_ac]
jbe     short loc_416725
or      edx, 4
mov     [ebp+var_4], edx
jmp     short loc_416746
xor     esi, esi
push    eax
push    ebx
push    [ebp+var_b0]
push    [ebp+var_b4]
call    __allmul
mov     ebx, eax
mov     eax, edx
add     ebx, edi
mov     [ebp+var_8], ebx
adc     eax, esi
mov     [ebp+var_14], eax
mov     edi, [ebp+arg_4]
mov     ebx, [ebp+var_10]
movzx   esi, word ptr [edi]
add     edi, 2
mov     [ebp+arg_4], edi
jmp     loc_416512
push    esi
lea     ecx, [ebp+arg_4]
call    ?unget@?$c_string_character_source@_w@__crt_strtox@@qaex_w@z
mov     eax, [ebp+var_4]
test    al, 8
jnz     short loc_416779
mov     eax, [ebp+var_b8]
mov     [ebp+arg_4], eax
xor     eax, eax
mov     ebx, eax
jmp     short loc_4167bd
mov     ebx, [ebp+var_14]
mov     edi, [ebp+var_8]
push    ebx
push    edi
push    eax
call    sub_415840
add     esp, 0ch
test    al, al
jz      short loc_4167c1
call    __errno
mov     dword ptr [eax], 22h
mov     eax, [ebp+var_4]
test    al, 1
jnz     short loc_4167a8
or      edi, 0ffffffffh
or      ebx, 0ffffffffh
jmp     short loc_4167ce
test    al, 2
jz      short loc_4167b5
xor     eax, eax
mov     ebx, 80000000h
jmp     short loc_4167bd
or      eax, 0ffffffffh
mov     ebx, 7fffffffh
mov     edi, eax
jmp     short loc_4167ce
test    byte ptr [ebp+var_4], 2
jz      short loc_4167ce
neg     edi
adc     ebx, 0
neg     ebx
cmp     [ebp+var_bc], 0
jz      loc_416125
mov     eax, [ebp+var_c8]
and     dword ptr [eax+350h], 0fffffffdh
jmp     loc_416125
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
lea     eax, [ecx+1]
cmp     eax, 100h
ja      short loc_41687d
mov     eax, [ebp+arg_0]
movzx   eax, word ptr [eax+ecx*2]
and     eax, [ebp+arg_8]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_4]
mov     eax, [ebp+arg_8]
push    [ebp+arg_0]
test    eax, eax
jz      short loc_416899
mov     eax, [eax]
push    dword ptr [eax]
jmp     short loc_41689f
call    sub_4149ca
push    eax
call    sub_41685f
add     esp, 0ch
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_4]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
sub     eax, esi
add     eax, 3
push    edi
xor     edi, edi
shr     eax, 2
cmp     [ebp+arg_4], esi
sbb     ebx, ebx
not     ebx
and     ebx, eax
jz      short loc_41691c
mov     eax, [esi]
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_416914
mov     ecx, eax
call    ds:___guard_check_icall_fptr
call    [ebp+var_4]
add     esi, 4
inc     edi
cmp     edi, ebx
jnz     short loc_416900
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
jmp     short loc_416944
mov     edi, [esi]
test    edi, edi
jz      short loc_416941
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
test    eax, eax
jnz     short loc_41694b
add     esi, 4
cmp     esi, [ebp+arg_4]
jnz     short loc_41692d
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, ecx
mov     [ebp+var_8], eax
push    ebx
push    esi
mov     eax, [eax]
push    edi
mov     esi, [eax]
test    esi, esi
jz      loc_416b26
mov     eax, ___security_cookie
mov     ecx, eax
mov     ebx, [esi]
and     ecx, 1fh
mov     edi, [esi+4]
xor     ebx, eax
mov     esi, [esi+8]
xor     edi, eax
xor     esi, eax
ror     edi, cl
ror     esi, cl
ror     ebx, cl
cmp     edi, esi
jnz     loc_416ae4
sub     esi, ebx
mov     eax, 200h
sar     esi, 2
cmp     esi, eax
ja      short loc_416a57
mov     eax, esi
lea     edi, [eax+esi]
test    edi, edi
jnz     short loc_416a61
push    20h
pop     edi
cmp     edi, esi
jb      short loc_416a82
push    4
push    edi
push    ebx
call    __recalloc_base
push    0
mov     [ebp+var_4], eax
call    __free_base
mov     ecx, [ebp+var_4]
add     esp, 10h
test    ecx, ecx
jnz     short loc_416aa6
push    4
lea     edi, [esi+4]
push    edi
push    ebx
call    __recalloc_base
push    0
mov     [ebp+var_4], eax
call    __free_base
mov     ecx, [ebp+var_4]
add     esp, 10h
test    ecx, ecx
jz      loc_416b26
lea     eax, [ecx+esi*4]
mov     ebx, ecx
mov     [ebp+var_4], eax
lea     esi, [ecx+edi*4]
mov     eax, ___security_cookie
mov     edi, [ebp+var_4]
mov     ecx, edi
mov     [ebp+var_c], eax
mov     eax, esi
sub     eax, edi
add     eax, 3
shr     eax, 2
cmp     esi, edi
sbb     edx, edx
not     edx
and     edx, eax
jz      short loc_416ae4
mov     edi, [ebp+var_c]
xor     eax, eax
inc     eax
mov     [ecx], edi
lea     ecx, [ecx+4]
cmp     eax, edx
jnz     short loc_416ad7
mov     edi, [ebp+var_4]
mov     eax, [ebp+var_8]
mov     eax, [eax+4]
push    dword ptr [eax]
call    unknown_libname_7
push    ebx
mov     [edi], eax
call    unknown_libname_7
mov     ebx, [ebp+var_8]
mov     ecx, [ebx]
mov     ecx, [ecx]
mov     [ecx], eax
lea     eax, [edi+4]
push    eax
call    unknown_libname_7
mov     ecx, [ebx]
push    esi
mov     ecx, [ecx]
mov     [ecx+4], eax
call    unknown_libname_7
mov     ecx, [ebx]
add     esp, 10h
mov     ecx, [ecx]
mov     [ecx+8], eax
xor     eax, eax
jmp     short loc_416b29
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
mov     ebx, ecx
push    edi
mov     [ebp+var_14], ebx
mov     eax, [ebx]
mov     edi, [eax]
test    edi, edi
jnz     short loc_416b4d
or      eax, 0ffffffffh
jmp     loc_416c04
mov     edx, ___security_cookie
mov     ecx, edx
push    esi
mov     esi, [edi]
and     ecx, 1fh
mov     edi, [edi+4]
xor     esi, edx
xor     edi, edx
ror     esi, cl
ror     edi, cl
test    esi, esi
jz      loc_416c01
cmp     esi, 0ffffffffh
jz      loc_416c01
mov     [ebp+var_4], edx
mov     [ebp+var_c], edi
mov     [ebp+var_8], esi
sub     edi, 4
cmp     edi, esi
jb      short loc_416bdb
mov     eax, [edi]
cmp     eax, [ebp+var_4]
jz      short loc_416b80
xor     eax, edx
mov     edx, [ebp+var_4]
ror     eax, cl
mov     ecx, eax
mov     [edi], edx
mov     [ebp+var_10], eax
call    ds:___guard_check_icall_fptr
call    [ebp+var_10]
mov     eax, [ebx]
mov     edx, ___security_cookie
mov     ecx, edx
and     ecx, 1fh
mov     eax, [eax]
mov     ebx, [eax]
mov     eax, [eax+4]
xor     ebx, edx
ror     ebx, cl
xor     eax, edx
ror     eax, cl
cmp     ebx, [ebp+var_8]
mov     [ebp+var_10], ebx
mov     ebx, [ebp+var_14]
jnz     short loc_416bd1
cmp     eax, [ebp+var_c]
jz      short loc_416b80
mov     esi, [ebp+var_10]
mov     edi, eax
mov     [ebp+var_c], eax
jmp     short loc_416b7d
cmp     esi, 0ffffffffh
jz      short loc_416bed
push    esi
call    __free_base
mov     edx, ___security_cookie
pop     ecx
mov     eax, [ebx]
mov     eax, [eax]
mov     [eax], edx
mov     eax, [ebx]
mov     eax, [eax]
mov     [eax+4], edx
mov     eax, [ebx]
mov     eax, [eax]
mov     [eax+8], edx
xor     eax, eax
pop     esi
pop     edi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+function]
push    offset stru_42cd20
call    __register_onexit_function
pop     ecx
pop     ecx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
mov     esi, [ebp+arg_c]
test    esi, esi
jnz     short loc_416dde
test    ecx, ecx
jnz     short loc_416de2
cmp     [ebp+arg_4], esi
jz      short loc_416df0
call    __errno
push    16h
pop     esi
mov     [eax], esi
call    __invalid_parameter_noinfo
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn
test    ecx, ecx
jz      short loc_416dc9
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_416dc9
test    esi, esi
jnz     short loc_416df4
mov     byte ptr [ecx], 0
xor     eax, eax
jmp     short loc_416dda
test    ebx, ebx
jnz     short loc_416dfc
mov     [ecx], bl
jmp     short loc_416dc9
sub     ebx, ecx
mov     edx, ecx
push    edi
mov     edi, eax
cmp     esi, 0ffffffffh
jnz     short loc_416e19
mov     al, [ebx+edx]
mov     [edx], al
inc     edx
test    al, al
jz      short loc_416e39
sub     edi, 1
jnz     short loc_416e08
jmp     short loc_416e39
mov     ecx, esi
mov     al, [ebx+edx]
mov     [edx], al
inc     edx
test    al, al
jz      short loc_416e2f
sub     edi, 1
jz      short loc_416e2f
sub     ecx, 1
jnz     short loc_416e1b
test    ecx, ecx
mov     ecx, [ebp+arg_0]
jnz     short loc_416e39
mov     byte ptr [edx], 0
test    edi, edi
pop     edi
jnz     short loc_416df0
cmp     esi, 0ffffffffh
jnz     short loc_416e50
mov     eax, [ebp+arg_4]
push    50h
mov     byte ptr [ecx+eax-1], 0
pop     eax
jmp     short loc_416dda
mov     byte ptr [ecx], 0
call    __errno
push    22h
jmp     loc_416dd0
mov     edi, edi
push    ebp
mov     ebp, esp
pop     ebp
jmp     sub_416dac
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    [ebp+arg_4]
lea     ecx, [ebp+var_10]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     eax, [ebp+var_c]
push    8000h
push    [ebp+arg_0]
push    dword ptr [eax]
call    sub_41685f
add     esp, 0ch
cmp     [ebp+var_4], 0
jz      short locret_416fe2
mov     ecx, [ebp+var_10]
and     dword ptr [ecx+350h], 0fffffffdh
leave
retn
mov     edi, edi
push    esi
push    1
call    sub_41a8d6
call    __get_startup_file_mode
push    eax
call    __set_fmode
call    sub_41af55
mov     esi, eax
call    sub_41760e
push    1
mov     [esi], eax
call    sub_417ac9
add     esp, 0ch
pop     esi
test    al, al
jz      short loc_417141
fnclex
call    sub_417d9d
push    offset sub_417dd0
call    sub_417c81
call    sub_417d32
push    eax
call    __configure_wide_argv
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_417141
call    sub_417d3c
call    nullsub_3
call    nullsub_3
call    __initialize_default_precision
call    sub_41760e
push    eax
call    sub_413327
pop     ecx
call    sub_417d50
test    al, al
jz      short loc_417132
call    j_??$common_initialize_environment_nolock@_w@@yahxz
call    sub_41760e
call    sub_417609
test    eax, eax
jnz     short loc_417141
retn
push    7
call    sub_4174ec
call    sub_417611
call    sub_41760e
push    eax
call    __set_new_mode
pop     ecx
retn
jmp     sub_417dfe
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+block]
call    sub_417dfe
pop     ecx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7type_info@@6b@
jz      short loc_41734b
push    esi
call    sub_417dfe
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
and     dword_42cd38, 0
sub     esp, 24h
push    ebx
xor     ebx, ebx
inc     ebx
or      dword_42c994, ebx
push    0ah
call    ds:isprocessorfeaturepresent
test    eax, eax
jz      loc_4174e7
and     [ebp+var_10], 0
xor     eax, eax
or      dword_42c994, 2
xor     ecx, ecx
push    esi
push    edi
mov     dword_42cd38, ebx
lea     edi, [ebp+var_24]
push    ebx
cpuid
mov     esi, ebx
pop     ebx
mov     [edi], eax
mov     [edi+4], esi
mov     [edi+8], ecx
xor     ecx, ecx
mov     [edi+0ch], edx
mov     eax, [ebp+var_24]
mov     edi, [ebp+var_20]
mov     [ebp+var_c], eax
xor     edi, 756e6547h
mov     eax, [ebp+var_18]
xor     eax, 49656e69h
mov     [ebp+var_8], eax
mov     eax, [ebp+var_1c]
xor     eax, 6c65746eh
mov     [ebp+var_4], eax
xor     eax, eax
inc     eax
push    ebx
cpuid
mov     esi, ebx
pop     ebx
lea     ebx, [ebp+var_24]
mov     [ebx], eax
mov     eax, [ebp+var_4]
or      eax, [ebp+var_8]
or      eax, edi
mov     [ebx+4], esi
mov     [ebx+8], ecx
mov     [ebx+0ch], edx
jnz     short loc_417431
mov     eax, [ebp+var_24]
and     eax, 0fff3ff0h
cmp     eax, 106c0h
jz      short loc_417420
cmp     eax, 20660h
jz      short loc_417420
cmp     eax, 20670h
jz      short loc_417420
cmp     eax, 30650h
jz      short loc_417420
cmp     eax, 30660h
jz      short loc_417420
cmp     eax, 30670h
jnz     short loc_417431
mov     edi, dword_42cd3c
or      edi, 1
mov     dword_42cd3c, edi
jmp     short loc_417437
mov     edi, dword_42cd3c
cmp     [ebp+var_c], 7
mov     eax, [ebp+var_1c]
mov     [ebp+var_4], eax
jl      short loc_417475
push    7
pop     eax
xor     ecx, ecx
push    ebx
cpuid
mov     esi, ebx
pop     ebx
lea     ebx, [ebp+var_24]
mov     [ebx], eax
mov     eax, [ebp+var_4]
mov     [ebx+4], esi
mov     [ebx+8], ecx
mov     [ebx+0ch], edx
mov     ebx, [ebp+var_20]
test    ebx, 200h
jz      short loc_417478
or      edi, 2
mov     dword_42cd3c, edi
jmp     short loc_417478
mov     ebx, [ebp+var_10]
pop     edi
pop     esi
test    eax, 100000h
jz      short loc_4174e7
or      dword_42c994, 4
mov     dword_42cd38, 2
test    eax, 8000000h
jz      short loc_4174e7
test    eax, 10000000h
jz      short loc_4174e7
xor     ecx, ecx
xgetbv
mov     [ebp+var_14], eax
mov     [ebp+var_10], edx
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_10]
and     eax, 6
cmp     eax, 6
jnz     short loc_4174e7
mov     eax, dword_42c994
or      eax, 8
mov     dword_42cd38, 3
mov     dword_42c994, eax
test    bl, 20h
jz      short loc_4174e7
or      eax, 20h
mov     dword_42cd38, 5
mov     dword_42c994, eax
xor     eax, eax
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 324h
push    ebx
push    17h
call    ds:isprocessorfeaturepresent
test    eax, eax
jz      short loc_417509
mov     ecx, [ebp+arg_0]
int     29h
push    3
call    sub_417663
mov     [esp+32ch+size], 2cch
lea     eax, [ebp+dst]
push    0
push    eax
call    _memset
add     esp, 0ch
mov     [ebp+var_274], eax
mov     [ebp+var_278], ecx
mov     [ebp+var_27c], edx
mov     [ebp+var_280], ebx
mov     [ebp+var_284], esi
mov     [ebp+var_288], edi
mov     [ebp+var_25c], ss
mov     [ebp+var_268], cs
mov     [ebp+var_28c], ds
mov     [ebp+var_290], es
mov     [ebp+var_294], fs
mov     [ebp+var_298], gs
pushf
pop     [ebp+var_264]
mov     eax, [ebp+4]
mov     [ebp+var_26c], eax
lea     eax, [ebp+4]
mov     [ebp+var_260], eax
mov     [ebp+dst], 10001h
mov     eax, [eax-4]
push    50h
mov     [ebp+var_270], eax
lea     eax, [ebp+var_58]
push    0
push    eax
call    _memset
mov     eax, [ebp+4]
add     esp, 0ch
mov     [ebp+var_58], 40000015h
mov     [ebp+var_54], 1
mov     [ebp+var_4c], eax
call    ds:isdebuggerpresent
push    0
lea     ebx, [eax-1]
neg     ebx
lea     eax, [ebp+var_58]
mov     [ebp+exceptioninfo.exceptionrecord], eax
lea     eax, [ebp+dst]
sbb     bl, bl
mov     [ebp+exceptioninfo.contextrecord], eax
inc     bl
call    ds:setunhandledexceptionfilter
lea     eax, [ebp+exceptioninfo]
push    eax
call    ds:unhandledexceptionfilter
test    eax, eax
jnz     short loc_417606
test    bl, bl
jnz     short loc_417606
push    3
call    sub_417663
pop     ecx
pop     ebx
leave
retn
jmp     $+5
xor     eax, eax
retn
push    offset toplevelexceptionfilter
call    ds:setunhandledexceptionfilter
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+exceptioninfo]
mov     eax, [eax]
cmp     dword ptr [eax], 0e06d7363h
jnz     short loc_417657
cmp     dword ptr [eax+10h], 3
jnz     short loc_417657
mov     eax, [eax+14h]
cmp     eax, 19930520h
jz      short loc_41765d
cmp     eax, 19930521h
jz      short loc_41765d
cmp     eax, 19930522h
jz      short loc_41765d
cmp     eax, 1994000h
jz      short loc_41765d
xor     eax, eax
pop     ebp
retn    4
call    sub_416ca7
and     dword_42cd40, 0
retn
mov     ecx, [ebp-10h]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
push    ecx
bnd retn
mov     edi, edi
push    ebp
mov     ebp, esp
call    ds:isdebuggerpresent
push    1
mov     dword_42d064, eax
call    sub_417663
pop     ecx
push    0
call    ds:setunhandledexceptionfilter
push    [ebp+exceptioninfo]
call    ds:unhandledexceptionfilter
cmp     dword_42d064, 0
jnz     short loc_417715
push    1
call    sub_417663
pop     ecx
push    0c0000409h
call    ds:getcurrentprocess
push    eax
call    ds:terminateprocess
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 324h
push    17h
call    ds:isprocessorfeaturepresent
test    eax, eax
jz      short loc_417745
push    2
pop     ecx
int     29h
mov     dword_42ce48, eax
mov     dword_42ce44, ecx
mov     dword_42ce40, edx
mov     dword_42ce3c, ebx
mov     dword_42ce38, esi
mov     dword_42ce34, edi
mov     word_42ce60, ss
mov     word_42ce54, cs
mov     word_42ce30, ds
mov     word_42ce2c, es
mov     word_42ce28, fs
mov     word_42ce24, gs
pushf
pop     dword_42ce58
mov     eax, [ebp+var_s0]
mov     dword_42ce4c, eax
mov     eax, [ebp+4]
mov     dword_42ce50, eax
lea     eax, [ebp+arg_0]
mov     dword_42ce5c, eax
mov     eax, [ebp+var_324]
mov     dword_42cd98, 10001h
mov     eax, dword_42ce50
mov     dword_42cd54, eax
mov     dword_42cd48, 0c0000409h
mov     dword_42cd4c, 1
mov     dword_42cd58, 1
push    4
pop     eax
imul    eax, 0
mov     dword_42cd5c[eax], 2
push    4
pop     eax
imul    eax, 0
mov     ecx, ___security_cookie
mov     [ebp+eax+var_8], ecx
push    4
pop     eax
shl     eax, 0
mov     ecx, dword_42c998
mov     [ebp+eax+var_8], ecx
push    offset exceptioninfo
call    sub_4176db
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    8
call    sub_417833
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 31ch
push    17h
call    ds:isprocessorfeaturepresent
test    eax, eax
jz      short loc_41784f
mov     ecx, [ebp+arg_0]
int     29h
mov     dword_42ce48, eax
mov     dword_42ce44, ecx
mov     dword_42ce40, edx
mov     dword_42ce3c, ebx
mov     dword_42ce38, esi
mov     dword_42ce34, edi
mov     word_42ce60, ss
mov     word_42ce54, cs
mov     word_42ce30, ds
mov     word_42ce2c, es
mov     word_42ce28, fs
mov     word_42ce24, gs
pushf
pop     dword_42ce58
mov     eax, [ebp+var_s0]
mov     dword_42ce4c, eax
mov     eax, [ebp+4]
mov     dword_42ce50, eax
lea     eax, [ebp+arg_0]
mov     dword_42ce5c, eax
mov     eax, [ebp+var_31c]
mov     eax, dword_42ce50
mov     dword_42cd54, eax
mov     dword_42cd48, 0c0000409h
mov     dword_42cd4c, 1
mov     dword_42cd58, 1
push    4
pop     eax
imul    eax, 0
mov     ecx, [ebp+arg_0]
mov     dword_42cd5c[eax], ecx
push    offset exceptioninfo
call    sub_4176db
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     ecx, [eax+3ch]
add     ecx, eax
movzx   eax, word ptr [ecx+14h]
lea     edx, [ecx+18h]
add     edx, eax
movzx   eax, word ptr [ecx+6]
imul    esi, eax, 28h
add     esi, edx
cmp     edx, esi
jz      short loc_417a51
mov     ecx, [ebp+arg_4]
cmp     ecx, [edx+0ch]
jb      short loc_417a4a
mov     eax, [edx+8]
add     eax, [edx+0ch]
cmp     ecx, eax
jb      short loc_417a56
add     edx, 28h
cmp     edx, esi
jnz     short loc_417a3b
xor     eax, eax
pop     esi
pop     ebp
retn
mov     eax, edx
jmp     short loc_417a53
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 0
jnz     short loc_417aa0
mov     byte_42d089, 1
call    sub_417352
call    ___vcrt_initialize
test    al, al
jnz     short loc_417ab2
xor     al, al
pop     ebp
retn
call    sub_41b07e
test    al, al
jnz     short loc_417ac5
push    0
call    sub_418cc6
pop     ecx
jmp     short loc_417aae
mov     al, 1
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     byte_42d088, 0
jz      short loc_417adb
mov     al, 1
pop     ebp
retn
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jz      short loc_417ae8
cmp     esi, 1
jnz     short loc_417b5f
call    ___scrt_is_ucrt_dll_in_use
test    eax, eax
jz      short loc_417b17
test    esi, esi
jnz     short loc_417b17
push    offset stru_42d070
call    sub_416c4b
pop     ecx
test    eax, eax
jnz     short loc_417b13
push    offset dword_42d07c
call    sub_416c4b
pop     ecx
test    eax, eax
jz      short loc_417b53
xor     al, al
jmp     short loc_417b5c
mov     eax, ___security_cookie
or      esi, 0ffffffffh
push    20h
and     eax, 1fh
pop     ecx
sub     ecx, eax
ror     esi, cl
xor     esi, ___security_cookie
mov     stru_42d070._first, esi
mov     stru_42d070._last, esi
mov     stru_42d070._end, esi
mov     dword_42d07c, esi
mov     dword_42d080, esi
mov     dword_42d084, esi
mov     byte_42d088, 1
mov     al, 1
pop     esi
pop     ebp
retn
push    5
call    sub_4174ec
int     3
mov     edi, edi
push    ebp
mov     ebp, esp
call    ___scrt_is_ucrt_dll_in_use
test    eax, eax
jz      short loc_417c18
cmp     [ebp+arg_0], 0
jnz     short loc_417c18
xor     eax, eax
mov     ecx, offset dword_42d06c
xchg    eax, [ecx]
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     byte_42d089, 0
jz      short loc_417c2e
cmp     [ebp+arg_4], 0
jnz     short loc_417c40
push    dword ptr [ebp+terminating]
call    ___acrt_uninitialize
push    dword ptr [ebp+terminating]
call    sub_418cc6
pop     ecx
pop     ecx
mov     al, 1
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, ___security_cookie
mov     ecx, eax
xor     eax, stru_42d070._first
and     ecx, 1fh
push    [ebp+function]
ror     eax, cl
cmp     eax, 0ffffffffh
jnz     short loc_417c6a
call    sub_416c08
jmp     short loc_417c75
push    offset stru_42d070
call    __register_onexit_function
pop     ecx
neg     eax
pop     ecx
sbb     eax, eax
not     eax
and     eax, [ebp+function]
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+function]
call    sub_417c44
neg     eax
pop     ecx
sbb     eax, eax
neg     eax
dec     eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
and     [ebp+systemtimeasfiletime.dwlowdatetime], 0
lea     eax, [ebp+systemtimeasfiletime]
and     [ebp+systemtimeasfiletime.dwhighdatetime], 0
push    eax
call    ds:getsystemtimeasfiletime
mov     eax, [ebp+systemtimeasfiletime.dwhighdatetime]
xor     eax, [ebp+systemtimeasfiletime.dwlowdatetime]
mov     [ebp+var_4], eax
call    ds:getcurrentthreadid
xor     [ebp+var_4], eax
call    ds:getcurrentprocessid
xor     [ebp+var_4], eax
lea     eax, [ebp+performancecount]
push    eax
call    ds:queryperformancecounter
mov     eax, dword ptr [ebp+performancecount+4]
lea     ecx, [ebp+var_4]
xor     eax, dword ptr [ebp+performancecount]
xor     eax, [ebp+var_4]
xor     eax, ecx
leave
retn
xor     eax, eax
inc     eax
retn
push    offset listhead
call    ds:initializeslisthead
retn
mov     al, 1
retn
mov     eax, offset dword_42d860
retn
mov     eax, offset dword_42d85c
retn
mov     edi, edi
push    ebx
push    esi
mov     esi, offset dword_408318
mov     ebx, offset dword_408318
cmp     esi, ebx
jnb     short loc_417dc8
push    edi
mov     edi, [esi]
test    edi, edi
jz      short loc_417dc0
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
add     esi, 4
cmp     esi, ebx
jb      short loc_417db0
pop     edi
pop     esi
pop     ebx
retn
mov     edi, edi
push    ebx
push    esi
mov     esi, offset dword_408320
mov     ebx, offset dword_408320
cmp     esi, ebx
jnb     short loc_417dfb
push    edi
mov     edi, [esi]
test    edi, edi
jz      short loc_417df3
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
add     esi, 4
cmp     esi, ebx
jb      short loc_417de3
pop     edi
pop     esi
pop     ebx
retn
jmp     sub_41b11f
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, ___security_cookie
lea     ecx, [ebp+var_18]
and     [ebp+var_18], 0
xor     eax, ecx
mov     ecx, [ebp+arg_0]
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_c], eax
mov     eax, [ebp+arg_c]
inc     eax
mov     [ebp+var_14], offset sub_418085
mov     [ebp+var_8], ecx
mov     [ebp+var_4], eax
mov     eax, large fs:0
mov     [ebp+var_18], eax
lea     eax, [ebp+var_18]
mov     large fs:0, eax
push    [ebp+arg_10]
push    ecx
push    [ebp+arg_8]
call    __callsettingframe@12
mov     ecx, eax
mov     eax, [ebp+var_18]
mov     large fs:0, eax
mov     eax, ecx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 38h
push    ebx
cmp     [ebp+arg_0], 123h
jnz     short loc_417ecd
mov     eax, offset loc_417f5a
mov     ecx, [ebp+arg_4]
mov     [ecx], eax
xor     eax, eax
inc     eax
jmp     loc_417f83
and     [ebp+var_38], 0
mov     [ebp+var_34], offset sub_418121
mov     eax, ___security_cookie
lea     ecx, [ebp+var_38]
xor     eax, ecx
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_2c], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_28], eax
mov     eax, [ebp+arg_14]
mov     [ebp+var_24], eax
mov     eax, [ebp+arg_18]
mov     [ebp+var_20], eax
and     [ebp+var_1c], 0
and     [ebp+var_18], 0
and     [ebp+var_14], 0
mov     [ebp+var_1c], esp
mov     [ebp+var_18], ebp
mov     eax, large fs:0
mov     [ebp+var_38], eax
lea     eax, [ebp+var_38]
mov     large fs:0, eax
mov     [ebp+var_8], 1
mov     eax, [ebp+arg_0]
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_c], eax
call    ___vcrt_getptd
mov     eax, [eax+8]
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_4]
call    ds:___guard_check_icall_fptr
lea     eax, [ebp+var_10]
push    eax
mov     eax, [ebp+arg_0]
push    dword ptr [eax]
call    [ebp+var_4]
pop     ecx
pop     ecx
and     [ebp+var_8], 0
cmp     [ebp+var_14], 0
jz      short loc_417f77
mov     ebx, large fs:0
mov     eax, [ebx]
mov     ebx, [ebp+var_38]
mov     [ebx], eax
mov     large fs:0, ebx
jmp     short loc_417f80
mov     eax, [ebp+var_38]
mov     large fs:0, eax
mov     eax, [ebp+var_8]
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [ebp+arg_0]
mov     ecx, [edi+0ch]
mov     edx, ecx
mov     ebx, [edi+10h]
mov     [ebp+var_4], ecx
test    esi, esi
js      short loc_417fda
imul    eax, ecx, 14h
add     eax, 8
add     eax, ebx
cmp     ecx, 0ffffffffh
jz      short loc_417ff8
mov     edi, [ebp+arg_8]
sub     eax, 14h
dec     ecx
cmp     [eax-4], edi
mov     edi, [ebp+arg_0]
jge     short loc_417fca
mov     edi, [ebp+arg_8]
cmp     edi, [eax]
mov     edi, [ebp+arg_0]
jle     short loc_417fcf
cmp     ecx, 0ffffffffh
jnz     short loc_417fd6
mov     edx, [ebp+var_4]
dec     esi
mov     [ebp+var_4], ecx
test    esi, esi
jns     short loc_417fac
mov     eax, [ebp+arg_c]
inc     ecx
mov     [eax], ecx
mov     eax, [ebp+arg_10]
mov     [eax], edx
cmp     edx, [edi+0ch]
ja      short loc_417ff8
cmp     ecx, edx
ja      short loc_417ff8
imul    eax, ecx, 14h
pop     edi
pop     esi
add     eax, ebx
pop     ebx
leave
retn
call    sub_416ca7
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     eax, [ebp+arg_4]
add     eax, 0ch
mov     [ebp+var_4], eax
mov     ebx, large fs:0
mov     eax, [ebx]
mov     large fs:0, eax
mov     eax, [ebp+arg_0]
mov     ebx, [ebp+arg_4]
mov     ebp, [ebp+var_4]
mov     esp, [ebx-4]
jmp     eax
pop     ebx
leave
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
push    edi
mov     esi, large fs:0
mov     [ebp+var_8], esi
mov     [ebp+targetip], offset loc_41805c
push    0
push    [ebp+exceptionrecord]
push    [ebp+targetip]
push    [ebp+targetframe]
call    ds:rtlunwind
mov     eax, [ebp+exceptionrecord]
mov     eax, [eax+4]
and     eax, 0fffffffdh
mov     ecx, [ebp+exceptionrecord]
mov     [ecx+4], eax
mov     edi, large fs:0
mov     ebx, [ebp+var_8]
mov     [ebx], edi
mov     large fs:0, ebx
pop     edi
pop     esi
pop     ebx
leave
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
cld
mov     esi, [ebp+targetframe]
mov     ecx, [esi+8]
xor     ecx, esi
call    @__security_check_cookie@4
push    0
push    esi
push    dword ptr [esi+14h]
push    dword ptr [esi+0ch]
push    0
push    [ebp+arg_8]
push    dword ptr [esi+10h]
push    [ebp+exceptionrecord]
call    sub_4199f4
add     esp, 20h
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
mov     [esi], ecx
call    ___vcrt_getptd
mov     ecx, [eax+24h]
mov     [esi+4], ecx
call    ___vcrt_getptd
mov     [eax+24h], esi
mov     eax, esi
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
call    ___vcrt_getptd
mov     esi, [ebp+arg_0]
cmp     esi, [eax+24h]
jnz     short loc_418101
call    ___vcrt_getptd
lea     ecx, [eax+24h]
mov     eax, [esi+4]
mov     [ecx], eax
pop     esi
pop     ebp
retn
call    ___vcrt_getptd
mov     ecx, [eax+24h]
add     ecx, 4
jmp     short loc_418115
cmp     esi, eax
jz      short loc_4180f9
lea     ecx, [eax+4]
mov     eax, [ecx]
test    eax, eax
jnz     short loc_41810e
call    sub_416ca7
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
cld
mov     eax, [ebp+targetframe]
mov     ecx, [eax+8]
xor     ecx, [ebp+targetframe]
call    @__security_check_cookie@4
mov     eax, [ebp+exceptionrecord]
mov     eax, [eax+4]
and     eax, 66h
jz      short loc_418153
mov     eax, [ebp+targetframe]
mov     dword ptr [eax+24h], 1
xor     eax, eax
inc     eax
jmp     short loc_4181bd
jmp     short loc_4181bd
push    1
mov     eax, [ebp+targetframe]
push    dword ptr [eax+18h]
mov     eax, [ebp+targetframe]
push    dword ptr [eax+14h]
mov     eax, [ebp+targetframe]
push    dword ptr [eax+0ch]
push    0
push    [ebp+arg_8]
mov     eax, [ebp+targetframe]
push    dword ptr [eax+10h]
push    [ebp+exceptionrecord]
call    sub_4199f4
add     esp, 20h
mov     eax, [ebp+targetframe]
cmp     dword ptr [eax+24h], 0
jnz     short loc_418191
push    [ebp+exceptionrecord]
push    [ebp+targetframe]
call    sub_418030
push    0
push    0
push    0
push    0
push    0
lea     eax, [ebp+var_4]
push    eax
push    123h
call    sub_417ea9
add     esp, 1ch
mov     eax, [ebp+var_4]
mov     ebx, [ebp+targetframe]
mov     esp, [ebx+1ch]
mov     ebp, [ebx+20h]
jmp     eax
xor     eax, eax
inc     eax
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
call    [ebp+arg_4]
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
call    ___vcrt_getptd
mov     eax, [eax+24h]
test    eax, eax
jz      short loc_41842e
mov     ecx, [ebp+arg_0]
cmp     [eax], ecx
jz      short loc_418433
mov     eax, [eax+4]
test    eax, eax
jnz     short loc_418423
xor     eax, eax
inc     eax
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    esi
mov     eax, [ecx]
mov     esi, [ecx+4]
add     eax, edx
test    esi, esi
js      short loc_41845b
mov     ecx, [ecx+8]
mov     edx, [esi+edx]
mov     ecx, [edx+ecx]
add     ecx, esi
add     eax, ecx
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
cmp     dword ptr [eax], 0e0434352h
jz      short loc_41848e
cmp     dword ptr [eax], 0e0434f4dh
jz      short loc_41848e
cmp     dword ptr [eax], 0e06d7363h
jnz     short loc_4184a1
call    ___vcrt_getptd
and     dword ptr [eax+18h], 0
jmp     sub_416ca7
call    ___vcrt_getptd
cmp     dword ptr [eax+18h], 0
jle     short loc_4184a1
call    ___vcrt_getptd
dec     dword ptr [eax+18h]
xor     eax, eax
pop     ebp
retn
jmp     sub_416ca7
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
mov     eax, [esi]
cmp     eax, 0fffffffeh
jz      short loc_4184e1
mov     ecx, [esi+4]
add     ecx, edi
xor     ecx, [eax+edi]
call    @__security_check_cookie@4
mov     eax, [esi+8]
mov     ecx, [esi+0ch]
add     ecx, edi
xor     ecx, [eax+edi]
pop     edi
pop     esi
pop     ebp
jmp     @__security_check_cookie@4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
mov     ebx, [ebp+targetframe]
push    esi
push    edi
mov     [ebp+var_1], 0
mov     eax, [ebx+8]
lea     esi, [ebx+10h]
xor     eax, ___security_cookie
push    esi
push    eax
mov     [ebp+var_c], 1
mov     [ebp+var_10], esi
mov     [ebp+var_8], eax
call    sub_4184c0
push    [ebp+arg_8]
call    sub_419b83
mov     eax, [ebp+exceptionrecord]
add     esp, 0ch
mov     edi, [ebx+0ch]
test    byte ptr [eax+4], 66h
jnz     short loc_4185a6
mov     [ebp+var_1c], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_18], eax
lea     eax, [ebp+var_1c]
mov     [ebx-4], eax
cmp     edi, 0fffffffeh
jz      short loc_4185c9
lea     ecx, [ecx+0]
mov     ecx, [ebp+var_8]
lea     eax, [edi+2]
lea     eax, [edi+eax*2]
mov     ebx, [ecx+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [eax+4]
mov     [ebp+var_14], eax
test    ecx, ecx
jz      short loc_41858d
mov     edx, esi
call    @_eh4_callfilterfunc@8
mov     cl, 1
mov     [ebp+var_1], cl
test    eax, eax
js      short loc_41859d
jg      short loc_4185d3
jmp     short loc_418590
mov     cl, [ebp+var_1]
mov     edi, ebx
cmp     ebx, 0fffffffeh
jnz     short loc_418560
test    cl, cl
jz      short loc_4185c9
jmp     short loc_4185bd
mov     [ebp+var_c], 0
jmp     short loc_4185bd
cmp     edi, 0fffffffeh
jz      short loc_4185c9
push    offset ___security_cookie
push    esi
mov     edx, 0fffffffeh
mov     ecx, ebx
call    @_eh4_localunwind@16
push    esi
push    [ebp+var_8]
call    sub_4184c0
add     esp, 8
mov     eax, [ebp+var_c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+exceptionrecord]
cmp     dword ptr [eax], 0e06d7363h
jnz     short loc_418616
cmp     ds:off_402018, 0
jz      short loc_418616
push    offset off_402018
call    sub_42a7a0
add     esp, 4
test    eax, eax
jz      short loc_418613
mov     esi, ds:off_402018
mov     ecx, esi
push    1
push    [ebp+exceptionrecord]
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, [ebp+var_10]
add     esp, 8
mov     eax, [ebp+exceptionrecord]
mov     ecx, [ebp+targetframe]
mov     edx, eax
call    @_eh4_globalunwind2@8
mov     eax, [ebp+targetframe]
cmp     [eax+0ch], edi
jz      short loc_41863a
push    offset ___security_cookie
push    esi
mov     edx, edi
mov     ecx, eax
call    @_eh4_localunwind@16
mov     eax, [ebp+targetframe]
push    esi
push    [ebp+var_8]
mov     [eax+0ch], ebx
call    sub_4184c0
mov     ecx, [ebp+var_14]
add     esp, 8
mov     edx, esi
mov     ecx, [ecx+8]
call    @_eh4_transfertohandler@8
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 0
jnz     short loc_418ce3
call    ___vcrt_uninitialize_ptd
call    ___vcrt_uninitialize_locks_0
push    0
call    ___acrt_uninitialize_winapi_thunks_0
pop     ecx
mov     al, 1
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
cmp     eax, ecx
jnz     short loc_418cfa
xor     eax, eax
pop     ebp
retn
add     ecx, 5
add     eax, 5
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_418d1e
test    dl, dl
jz      short loc_418cf6
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_418d1e
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_418d00
jmp     short loc_418cf6
sbb     eax, eax
or      eax, 1
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+block]
test    eax, eax
jz      short loc_418d4a
cmp     eax, offset dword_42d09c
jz      short loc_418d4a
push    eax
call    __free_base
pop     ecx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7bad_exception@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadexception
mov     dword ptr [ecx], offset ??_7bad_exception@std@@6b@
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
add     eax, 4
push    eax
lea     eax, [ecx+4]
push    eax
call    sub_418ce7
neg     eax
pop     ecx
sbb     al, al
pop     ecx
inc     al
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     eax, [esi+4]
mov     dword ptr [esi], offset ??_7exception@std@@6b@
push    eax
call    sub_41a282
test    [ebp+arg_0], 1
pop     ecx
jz      short loc_418f15
push    esi
call    sub_417dfe
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     [ebp+arg_18], 0
push    ebx
mov     ebx, [ebp+arg_14]
push    esi
push    edi
mov     edi, [ebp+arg_4]
jz      short loc_419140
push    [ebp+arg_18]
push    ebx
push    edi
push    [ebp+exceptionrecord]
call    ??$buildcatchobjectinternal@$$cbu_s_handlertype@@@@yaxpauehexceptionrecord@@paxpbu_s_handlertype@@pbu_s_catchabletype@@@z
add     esp, 10h
mov     eax, [ebp+targetframe]
test    eax, eax
jnz     short loc_419149
mov     eax, edi
push    [ebp+exceptionrecord]
push    eax
call    sub_418030
mov     esi, [ebp+arg_1c]
push    dword ptr [esi]
push    [ebp+arg_10]
push    [ebp+arg_c]
push    edi
call    ___frameunwindtostate
mov     eax, [esi+4]
push    100h
push    [ebp+arg_20]
inc     eax
mov     [edi+8], eax
push    dword ptr [ebx+0ch]
push    [ebp+arg_10]
push    [ebp+arg_8]
push    edi
push    [ebp+exceptionrecord]
call    ?callcatchblock@@yapaxpauehexceptionrecord@@pauehregistrationnode@@pau_context@@pbu_s_funcinfo@@paxhk@z
add     esp, 2ch
test    eax, eax
jz      short loc_419192
push    edi
push    eax
call    sub_417ffe
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
cmp     dword ptr [eax], 0e06d7363h
jnz     short loc_4191df
cmp     dword ptr [eax+10h], 3
jnz     short loc_4191df
cmp     dword ptr [eax+14h], 19930520h
jz      short loc_4191ca
cmp     dword ptr [eax+14h], 19930521h
jz      short loc_4191ca
cmp     dword ptr [eax+14h], 19930522h
jnz     short loc_4191df
cmp     dword ptr [eax+1ch], 0
jnz     short loc_4191df
call    ___vcrt_getptd
xor     ecx, ecx
inc     ecx
mov     [eax+20h], ecx
mov     eax, ecx
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 44h
mov     eax, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_10]
xor     ebx, ebx
mov     byte ptr [ebp+var_28], bl
mov     [ebp+var_1], bl
cmp     dword ptr [edi+4], 80h
jg      short loc_41920b
movsx   eax, byte ptr [eax+8]
jmp     short loc_41920e
mov     eax, [eax+8]
mov     [ebp+var_8], eax
cmp     eax, 0ffffffffh
jl      loc_419517
cmp     eax, [edi+4]
jge     loc_419517
mov     esi, [ebp+exceptionrecord]
cmp     dword ptr [esi], 0e06d7363h
jnz     loc_4194c3
cmp     dword ptr [esi+10h], 3
jnz     loc_41932b
cmp     dword ptr [esi+14h], 19930520h
jz      short loc_41925b
cmp     dword ptr [esi+14h], 19930521h
jz      short loc_41925b
cmp     dword ptr [esi+14h], 19930522h
jnz     loc_41932b
cmp     [esi+1ch], ebx
jnz     loc_41932b
call    ___vcrt_getptd
cmp     [eax+10h], ebx
jz      loc_4194f2
call    ___vcrt_getptd
mov     esi, [eax+10h]
call    ___vcrt_getptd
mov     byte ptr [ebp+var_28], 1
mov     eax, [eax+14h]
mov     [ebp+var_c], eax
test    esi, esi
jz      loc_419517
cmp     dword ptr [esi], 0e06d7363h
jnz     short loc_4192c3
cmp     dword ptr [esi+10h], 3
jnz     short loc_4192c3
cmp     dword ptr [esi+14h], 19930520h
jz      short loc_4192ba
cmp     dword ptr [esi+14h], 19930521h
jz      short loc_4192ba
cmp     dword ptr [esi+14h], 19930522h
jnz     short loc_4192c3
cmp     [esi+1ch], ebx
jz      loc_419517
call    ___vcrt_getptd
cmp     [eax+1ch], ebx
jz      short loc_419333
call    ___vcrt_getptd
mov     eax, [eax+1ch]
mov     [ebp+var_20], eax
call    ___vcrt_getptd
push    [ebp+var_20]
push    esi
mov     [eax+1ch], ebx
call    sub_41967f
pop     ecx
pop     ecx
test    al, al
jnz     short loc_419333
mov     edi, [ebp+var_20]
cmp     [edi], ebx
jle     loc_419517
mov     eax, ebx
mov     [ebp+var_20], ebx
mov     ecx, [edi+4]
push    offset ??_r0?avbad_exception@std@@@8
mov     ecx, [eax+ecx+4]
call    sub_418ec5
test    al, al
jnz     loc_4194f7
mov     eax, [ebp+var_20]
inc     ebx
add     eax, 10h
mov     [ebp+var_20], eax
cmp     ebx, [edi]
jl      short loc_4192ff
jmp     loc_419517
mov     ecx, [ebp+arg_8]
mov     [ebp+var_c], ecx
jmp     short loc_419339
mov     ecx, [ebp+var_c]
mov     eax, [ebp+var_8]
cmp     dword ptr [esi], 0e06d7363h
jnz     loc_4194c6
cmp     dword ptr [esi+10h], 3
jnz     loc_4194c6
cmp     dword ptr [esi+14h], 19930520h
jz      short loc_41936e
cmp     dword ptr [esi+14h], 19930521h
jz      short loc_41936e
cmp     dword ptr [esi+14h], 19930522h
jnz     loc_4194c6
cmp     [edi+0ch], ebx
jbe     loc_419476
lea     ecx, [ebp+var_2c]
push    ecx
lea     ecx, [ebp+var_14]
push    ecx
push    eax
push    [ebp+arg_18]
push    edi
call    sub_417f86
mov     edx, [ebp+var_14]
add     esp, 14h
cmp     edx, [ebp+var_2c]
jnb     loc_419476
lea     ecx, [eax+10h]
mov     eax, [ebp+var_8]
mov     [ebp+var_20], ecx
lea     ebx, [ecx-10h]
mov     [ebp+var_38], ebx
mov     ebx, [ebp+arg_4]
cmp     [ecx-10h], eax
jg      loc_419461
cmp     eax, [ecx-0ch]
jg      loc_419461
mov     edi, [ecx]
mov     [ebp+var_10], edi
mov     edi, [ecx-4]
test    edi, edi
mov     [ebp+var_18], edi
mov     edi, [ebp+arg_10]
jle     loc_419461
mov     eax, [esi+1ch]
mov     eax, [eax+0ch]
mov     ecx, [eax]
lea     edx, [eax+4]
mov     eax, [ebp+var_18]
mov     [ebp+var_30], ecx
mov     [ebp+var_34], edx
mov     [ebp+var_1c], edx
mov     [ebp+var_24], ecx
test    ecx, ecx
jle     short loc_41941b
push    dword ptr [esi+1ch]
push    dword ptr [edx]
push    [ebp+var_10]
call    sub_419af3
add     esp, 0ch
test    eax, eax
jnz     short loc_41942f
mov     eax, [ebp+var_24]
mov     edx, [ebp+var_1c]
dec     eax
add     edx, 4
mov     [ebp+var_24], eax
mov     [ebp+var_1c], edx
test    eax, eax
jg      short loc_4193f0
mov     eax, [ebp+var_18]
add     [ebp+var_10], 10h
dec     eax
mov     [ebp+var_18], eax
test    eax, eax
jle     short loc_419458
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_34]
jmp     short loc_4193e6
push    [ebp+var_28]
mov     eax, [ebp+var_1c]
push    [ebp+targetframe]
mov     [ebp+var_1], 1
push    [ebp+arg_18]
push    [ebp+var_38]
push    dword ptr [eax]
push    [ebp+var_10]
push    edi
push    [ebp+arg_c]
push    [ebp+var_c]
push    ebx
push    esi
call    sub_41911c
add     esp, 2ch
mov     edx, [ebp+var_14]
mov     ecx, [ebp+var_20]
mov     eax, [ebp+var_8]
inc     edx
add     ecx, 14h
mov     [ebp+var_14], edx
mov     [ebp+var_20], ecx
cmp     edx, [ebp+var_2c]
jb      loc_4193a1
xor     ebx, ebx
cmp     [ebp+arg_14], 0
jz      short loc_419486
push    1
push    esi
call    ___destructexceptionobject
pop     ecx
pop     ecx
cmp     [ebp+var_1], 0
jnz     short loc_4194e8
mov     eax, [edi]
and     eax, 1fffffffh
cmp     eax, 19930521h
jb      short loc_4194e8
cmp     dword ptr [edi+1ch], 0
jnz     short loc_4194ac
test    byte ptr [edi+20h], 4
jz      short loc_4194e8
cmp     [ebp+arg_18], 0
jnz     short loc_4194e8
test    byte ptr [edi+20h], 4
jnz     short loc_419517
push    dword ptr [edi+1ch]
push    esi
call    sub_41967f
pop     ecx
pop     ecx
test    al, al
jz      short loc_41951c
jmp     short loc_4194e8
mov     ecx, [ebp+arg_8]
cmp     [edi+0ch], ebx
jbe     short loc_4194e8
cmp     [ebp+arg_14], bl
jnz     short loc_419517
push    [ebp+targetframe]
push    [ebp+arg_18]
push    eax
push    edi
push    [ebp+arg_c]
push    ecx
push    [ebp+arg_4]
push    esi
call    sub_419564
add     esp, 20h
call    ___vcrt_getptd
cmp     [eax+1ch], ebx
jnz     short loc_419517
pop     edi
pop     esi
pop     ebx
leave
retn
push    1
push    esi
call    ___destructexceptionobject
pop     ecx
pop     ecx
lea     ecx, [ebp+var_44]
call    sub_418ead
push    offset __ti2?avbad_exception@std@@
lea     eax, [ebp+var_44]
push    eax
call    sub_41a2a3
call    sub_416ca7
call    ___vcrt_getptd
call    ___vcrt_getptd
call    ___vcrt_getptd
mov     [eax+10h], esi
call    ___vcrt_getptd
mov     ecx, [ebp+var_c]
mov     [eax+14h], ecx
mov     eax, [ebp+targetframe]
test    eax, eax
jnz     short loc_419543
mov     eax, [ebp+arg_4]
push    esi
push    eax
call    sub_418030
push    0ffffffffh
push    edi
push    [ebp+arg_c]
push    [ebp+arg_4]
call    ___frameunwindtostate
add     esp, 10h
push    dword ptr [edi+1ch]
call    ?callunexpected@@yaxpbu_s_estypelist@@@z
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    edi
mov     edi, [ebp+exceptionrecord]
cmp     dword ptr [edi], 80000003h
jz      loc_419676
push    ebx
push    esi
call    ___vcrt_getptd
mov     ebx, [ebp+arg_10]
cmp     dword ptr [eax+8], 0
jz      short loc_4195d0
push    0
call    ds:encodepointer
mov     esi, eax
call    ___vcrt_getptd
cmp     [eax+8], esi
jz      short loc_4195d0
cmp     dword ptr [edi], 0e0434f4dh
jz      short loc_4195d0
cmp     dword ptr [edi], 0e0434352h
jz      short loc_4195d0
push    [ebp+targetframe]
push    [ebp+arg_18]
push    ebx
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    edi
call    sub_417ea9
add     esp, 1ch
test    eax, eax
jnz     loc_419674
cmp     dword ptr [ebx+0ch], 0
jz      loc_419679
lea     eax, [ebp+var_4]
push    eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_14]
push    [ebp+arg_18]
push    ebx
call    sub_417f86
mov     ecx, [ebp+var_8]
add     esp, 14h
mov     edx, [ebp+var_4]
cmp     ecx, edx
jnb     short loc_419674
lea     esi, [eax+0ch]
mov     eax, [ebp+arg_14]
cmp     eax, [esi-0ch]
jl      short loc_419669
cmp     eax, [esi-8]
jg      short loc_419669
mov     eax, [esi]
mov     edi, [esi+4]
shl     eax, 4
mov     edi, [eax+edi-0ch]
test    edi, edi
jz      short loc_41962e
mov     edx, [esi+4]
mov     ebx, [eax+edx-0ch]
mov     edx, [ebp+var_4]
cmp     byte ptr [ebx+8], 0
mov     ebx, [ebp+arg_10]
jnz     short loc_419666
mov     edi, [esi+4]
add     edi, 0fffffff0h
add     eax, edi
mov     edi, [ebp+exceptionrecord]
test    byte ptr [eax], 40h
jnz     short loc_419666
push    1
push    [ebp+targetframe]
lea     ecx, [esi-0ch]
push    [ebp+arg_18]
push    ecx
push    0
push    eax
push    ebx
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    edi
call    sub_41911c
mov     edx, [ebp+var_4]
add     esp, 2ch
mov     ecx, [ebp+var_8]
mov     eax, [ebp+arg_14]
inc     ecx
add     esi, 14h
mov     [ebp+var_8], ecx
cmp     ecx, edx
jb      short loc_419601
pop     esi
pop     ebx
pop     edi
leave
retn
call    sub_416ca7
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
test    esi, esi
jz      loc_419715
mov     edi, [esi]
xor     ebx, ebx
test    edi, edi
jle     short loc_41970e
mov     eax, [ebp+arg_0]
mov     edx, ebx
mov     [ebp+var_4], ebx
mov     eax, [eax+1ch]
mov     eax, [eax+0ch]
mov     ecx, [eax]
add     eax, 4
mov     [ebp+var_10], ecx
mov     [ebp+var_18], eax
mov     ecx, eax
mov     eax, [ebp+var_10]
mov     [ebp+var_c], ecx
mov     [ebp+var_8], eax
test    eax, eax
jle     short loc_419700
mov     eax, [esi+4]
add     eax, edx
mov     [ebp+var_14], eax
mov     edx, [ebp+arg_0]
push    dword ptr [edx+1ch]
push    dword ptr [ecx]
push    eax
call    sub_419af3
add     esp, 0ch
test    eax, eax
jnz     short loc_4196fb
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_c]
dec     eax
add     ecx, 4
mov     [ebp+var_8], eax
test    eax, eax
mov     [ebp+var_c], ecx
mov     eax, [ebp+var_14]
jg      short loc_4196cd
jmp     short loc_4196fd
mov     bl, 1
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_18]
add     edx, 10h
mov     [ebp+var_4], edx
sub     edi, 1
jnz     short loc_4196b6
pop     edi
pop     esi
mov     al, bl
pop     ebx
leave
retn
call    sub_416ca7
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
call    [ebp+arg_4]
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_c]
mov     ecx, [ebp+arg_0]
push    [ebp+arg_8]
call    [ebp+arg_4]
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
push    [ebp+arg_8]
call    sub_419b83
pop     ecx
call    ___vcrt_getptd
mov     ecx, [ebp+arg_10]
xor     esi, esi
mov     edx, [ebp+exceptionrecord]
mov     ebx, 1fffffffh
mov     edi, 19930522h
cmp     [eax+20h], esi
jnz     short loc_419a43
cmp     dword ptr [edx], 0e06d7363h
jz      short loc_419a43
cmp     dword ptr [edx], 80000026h
jz      short loc_419a43
mov     eax, [ecx]
and     eax, ebx
cmp     eax, edi
jb      short loc_419a43
test    byte ptr [ecx+20h], 1
jnz     loc_419aeb
test    byte ptr [edx+4], 66h
jz      short loc_419a6e
cmp     [ecx+4], esi
jz      loc_419aeb
cmp     [ebp+arg_14], esi
jnz     loc_419aeb
push    0ffffffffh
push    ecx
push    [ebp+arg_c]
push    [ebp+arg_4]
call    ___frameunwindtostate
add     esp, 10h
jmp     short loc_419aeb
cmp     [ecx+0ch], esi
jnz     short loc_419a8d
mov     eax, [ecx]
and     eax, ebx
cmp     eax, 19930521h
jb      short loc_419a83
cmp     [ecx+1ch], esi
jnz     short loc_419a8d
cmp     eax, edi
jb      short loc_419aeb
test    byte ptr [ecx+20h], 4
jz      short loc_419aeb
cmp     dword ptr [edx], 0e06d7363h
jnz     short loc_419acf
cmp     dword ptr [edx+10h], 3
jb      short loc_419acf
cmp     [edx+14h], edi
jbe     short loc_419acf
mov     eax, [edx+1ch]
mov     esi, [eax+8]
test    esi, esi
jz      short loc_419acf
movzx   eax, [ebp+arg_1c]
push    eax
push    [ebp+targetframe]
push    [ebp+arg_14]
push    ecx
push    [ebp+arg_c]
mov     ecx, esi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    edx
call    ds:___guard_check_icall_fptr
call    esi
add     esp, 20h
jmp     short loc_419aee
push    [ebp+targetframe]
push    [ebp+arg_14]
push    dword ptr [ebp+arg_1c]
push    ecx
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    edx
call    sub_4191e3
add     esp, 20h
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     eax, [edx+4]
test    eax, eax
jz      short loc_419b7b
lea     ecx, [eax+8]
cmp     byte ptr [ecx], 0
jz      short loc_419b7b
test    byte ptr [edx], 80h
mov     edi, [ebp+arg_4]
jz      short loc_419b1a
test    byte ptr [edi], 10h
jnz     short loc_419b7b
mov     ebx, [edi+4]
xor     esi, esi
cmp     eax, ebx
jz      short loc_419b53
lea     eax, [ebx+8]
mov     bl, [ecx]
cmp     bl, [eax]
jnz     short loc_419b46
test    bl, bl
jz      short loc_419b42
mov     bl, [ecx+1]
cmp     bl, [eax+1]
jnz     short loc_419b46
add     ecx, 2
add     eax, 2
test    bl, bl
jnz     short loc_419b26
mov     eax, esi
jmp     short loc_419b4b
sbb     eax, eax
or      eax, 1
test    eax, eax
jz      short loc_419b53
xor     eax, eax
jmp     short loc_419b7e
test    byte ptr [edi], 2
jz      short loc_419b5d
test    byte ptr [edx], 8
jz      short loc_419b77
mov     eax, [ebp+arg_8]
test    byte ptr [eax], 1
jz      short loc_419b6a
test    byte ptr [edx], 1
jz      short loc_419b77
test    byte ptr [eax], 2
jz      short loc_419b74
test    byte ptr [edx], 2
jz      short loc_419b77
xor     esi, esi
inc     esi
mov     eax, esi
jmp     short loc_419b7e
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, ds:___guard_check_icall_fptr
cmp     eax, offset nullsub_3
jz      short loc_419bb3
mov     ecx, large fs:18h
mov     eax, [ebp+arg_0]
mov     eax, [eax+0c4h]
cmp     eax, [ecx+8]
jb      short loc_419bae
cmp     eax, [ecx+4]
jbe     short loc_419bb3
push    0dh
pop     ecx
int     29h
pop     ebp
retn
mov     edi, edi
mov     edi, edi
push    ebp
push    dword ptr [esp+8]
call    sub_419bb5
add     esp, 4
mov     ecx, [esp+8]
mov     ebp, [ecx]
push    dword ptr [ecx+1ch]
push    dword ptr [ecx+18h]
push    dword ptr [ecx+28h]
call    __local_unwind4
add     esp, 0ch
pop     ebp
retn    4
mov     edi, edi
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset dword_4051a8
push    offset dword_4051a0
push    offset aflsalloc
push    0
call    sub_419e8c
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_419f43
push    [ebp+arg_0]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn
pop     esi
pop     ebp
jmp     ds:tlsalloc
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset dword_4051b0
push    offset dword_4051a8
push    offset aflsfree
push    1
call    sub_419e8c
add     esp, 10h
mov     esi, eax
push    [ebp+dwtlsindex]
test    esi, esi
jz      short loc_419f7f
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_419f85
call    ds:tlsfree
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset dword_4051b8
push    offset dword_4051b0
push    offset aflsgetvalue
push    2
call    sub_419e8c
add     esp, 10h
mov     esi, eax
push    [ebp+dwtlsindex]
test    esi, esi
jz      short loc_419fbc
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_419fc2
call    ds:tlsgetvalue
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset dword_4051c0
push    offset dword_4051b8
push    offset aflssetvalue
push    3
call    sub_419e8c
add     esp, 10h
mov     esi, eax
push    [ebp+lptlsvalue]
push    [ebp+dwtlsindex]
test    esi, esi
jz      short loc_419ffe
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_41a004
call    ds:tlssetvalue
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    offset byte_4051c8
push    offset dword_4051c0
push    offset ainitializecrit
push    4
call    sub_419e8c
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_41a041
push    [ebp+arg_8]
mov     ecx, esi
push    [ebp+dwspincount]
push    [ebp+lpcriticalsection]
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_41a04d
push    [ebp+dwspincount]
push    [ebp+lpcriticalsection]
call    ds:initializecriticalsectionandspincount
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_0]
cmp     byte ptr [edi+4], 0
jz      short loc_41a274
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_41a274
lea     edx, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_41a235
sub     ecx, edx
push    ebx
push    esi
lea     ebx, [ecx+1]
push    ebx
call    _malloc
mov     esi, eax
pop     ecx
test    esi, esi
jz      short loc_41a269
push    dword ptr [edi]
push    ebx
push    esi
call    _strcpy_s
mov     eax, [ebp+arg_4]
mov     ecx, esi
add     esp, 0ch
xor     esi, esi
mov     [eax], ecx
mov     byte ptr [eax+4], 1
push    esi
call    sub_41b11f
pop     ecx
pop     esi
pop     ebx
jmp     short loc_41a27f
mov     ecx, [ebp+arg_4]
mov     eax, [edi]
mov     [ecx], eax
mov     byte ptr [ecx+4], 0
pop     edi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+4], 0
jz      short loc_41a299
push    dword ptr [esi]
call    sub_41b11f
pop     ecx
and     dword ptr [esi], 0
mov     byte ptr [esi+4], 0
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
push    8
pop     ecx
mov     esi, offset byte_4051c8
lea     edi, [ebp+dwexceptioncode]
rep movsd
mov     edi, [ebp+arg_4]
test    edi, edi
jz      short loc_41a2e2
test    byte ptr [edi], 10h
jz      short loc_41a2e2
mov     ecx, [ebx]
sub     ecx, 4
push    ecx
mov     eax, [ecx]
mov     esi, [eax+20h]
mov     ecx, esi
mov     edi, [eax+18h]
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_8], ebx
mov     [ebp+var_4], edi
test    edi, edi
jz      short loc_41a2f8
test    byte ptr [edi], 8
jz      short loc_41a2f8
mov     [ebp+arguments], 1994000h
lea     eax, [ebp+arguments]
push    eax
push    [ebp+nnumberofarguments]
push    [ebp+dwexceptionflags]
push    [ebp+dwexceptioncode]
call    ds:raiseexception
pop     edi
pop     esi
pop     ebx
leave
retn    8
mov     eax, dword_42d140
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_42d140, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
cmp     esi, 3fffffffh
jnb     short loc_41abf2
or      eax, 0ffffffffh
mov     ecx, [ebp+arg_4]
xor     edx, edx
div     [ebp+arg_8]
cmp     ecx, eax
jnb     short loc_41abf2
imul    ecx, [ebp+arg_8]
shl     esi, 2
mov     eax, esi
not     eax
cmp     eax, ecx
jbe     short loc_41abf2
lea     eax, [esi+ecx]
push    1
push    eax
call    __calloc_base
push    0
mov     esi, eax
call    __free_base
add     esp, 0ch
mov     eax, esi
jmp     short loc_41abf4
xor     eax, eax
pop     esi
pop     ebp
retn
mov     eax, dword_42d358
test    eax, eax
jnz     short locret_41ac2d
cmp     dword_42d354, eax
jz      short loc_41ac2b
call    ??$common_initialize_environment_nolock@_w@@yahxz
test    eax, eax
jz      short loc_41ac25
call    sub_41adb8
test    eax, eax
jnz     short loc_41ac2b
mov     eax, dword_42d358
retn
xor     eax, eax
retn
mov     edi, edi
push    ebx
push    esi
push    edi
mov     edi, dword_42d354
test    edi, edi
jz      short loc_41ae2e
mov     eax, [edi]
test    eax, eax
jz      short loc_41ae23
xor     ebx, ebx
push    ebx
push    ebx
push    0ffffffffh
push    eax
push    ebx
push    ebx
call    ___acrt_multibytetowidechar
mov     ebx, eax
add     esp, 18h
test    ebx, ebx
jz      short loc_41ae2e
push    2
push    ebx
call    __calloc_base
mov     esi, eax
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_41ae27
push    ebx
push    esi
push    0ffffffffh
push    dword ptr [edi]
xor     ebx, ebx
push    ebx
push    ebx
call    ___acrt_multibytetowidechar
add     esp, 18h
test    eax, eax
jz      short loc_41ae27
push    ebx
push    esi
call    sub_423dfd
push    ebx
call    __free_base
add     edi, 4
add     esp, 0ch
mov     eax, [edi]
test    eax, eax
jnz     short loc_41adcf
xor     eax, eax
jmp     short loc_41ae31
push    esi
call    __free_base
pop     ecx
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    edi
lea     edi, [esi+4]
jmp     short loc_41ae54
mov     ecx, [ebp+arg_0]
push    esi
call    ds:___guard_check_icall_fptr
call    [ebp+arg_0]
pop     ecx
add     esi, 4
cmp     esi, edi
jnz     short loc_41ae43
pop     edi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
cmp     eax, dword_42d360
jz      short loc_41ae79
push    eax
call    sub_41ad89
pop     ecx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
cmp     eax, dword_42d35c
jz      short loc_41ae99
push    eax
call    sub_41ad89
pop     ecx
pop     ebp
retn
jmp     sub_41ac02
mov     eax, offset dword_42d368
retn
mov     eax, offset dword_42d370
retn
mov     eax, offset dword_42d37c
retn
mov     dword_42caa8, offset off_42c000
mov     al, 1
retn
mov     edi, edi
push    esi
mov     esi, ___security_cookie
push    esi
call    sub_412a3e
push    esi
call    sub_4153b8
push    esi
call    sub_4151a0
push    esi
call    sub_42433d
push    esi
call    sub_41502c
add     esp, 14h
mov     al, 1
pop     esi
retn
push    0
call    sub_418cc6
pop     ecx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    offset dword_42cce8
lea     ecx, [ebp+var_1]
call    ??r_lambda_30a498feb8538b5c3153c22026e33470_@@qbexaapau__crt_multibyte_data@@@z
mov     al, 1
leave
retn
push    offset tbyte_4020c0
push    offset off_402040
call    sub_42428c
pop     ecx
pop     ecx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    [ebp+block]
mov     [ebp+var_4], 0
mov     eax, [ebp+var_4]
call    __free_base
pop     ecx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 484h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
cmp     [ebp+arg_10], 0
mov     eax, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_c]
mov     [ebp+var_460], eax
jnz     short loc_41b1d4
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_41b2e9
test    ebx, ebx
jz      short loc_41b1dc
test    eax, eax
jz      short loc_41b1bc
push    esi
push    edi
push    [ebp+arg_14]
lea     ecx, [ebp+var_484]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     ecx, [ebp+arg_0]
lea     edi, [ebp+var_470]
xor     eax, eax
xor     edx, edx
stosd
stosd
stosd
stosd
mov     eax, ecx
mov     edi, [ebp+var_460]
and     eax, 2
mov     [ebp+var_474], eax
or      eax, edx
mov     [ebp+var_470], edi
mov     [ebp+var_46c], ebx
mov     [ebp+var_468], edx
jnz     short loc_41b22e
mov     [ebp+var_464], dl
test    edi, edi
jnz     short loc_41b235
mov     [ebp+var_464], 1
push    [ebp+arg_18]
lea     eax, [ebp+var_470]
mov     [ebp+var_460], eax
lea     eax, [ebp+var_480]
push    eax
push    [ebp+arg_10]
lea     eax, [ebp+var_460]
push    [ebp+arg_4]
push    ecx
push    eax
lea     ecx, [ebp+var_45c]
call    unknown_libname_12
and     [ebp+var_c], 0
lea     ecx, [ebp+var_45c]
call    sub_41be63
mov     esi, eax
test    edi, edi
jz      short loc_41b2c4
mov     eax, [ebp+arg_0]
xor     ecx, ecx
and     eax, 1
or      eax, ecx
jz      short loc_41b2a1
test    ebx, ebx
jnz     short loc_41b28d
test    esi, esi
jnz     short loc_41b2fa
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_41b2c1
test    esi, esi
js      short loc_41b2c4
cmp     esi, ebx
jbe     short loc_41b2c4
jmp     short loc_41b2fa
mov     eax, [ebp+var_474]
or      eax, ecx
jz      short loc_41b2f6
test    ebx, ebx
jz      short loc_41b2c4
test    esi, esi
jns     short loc_41b2b7
mov     [edi], cl
jmp     short loc_41b2c4
mov     eax, [ebp+var_468]
cmp     eax, ebx
jz      short loc_41b30c
mov     [edi+eax], cl
lea     ecx, [ebp+var_41c]
call    ??1formatting_buffer@__crt_stdio_output@@qae@xz
cmp     [ebp+var_478], 0
jz      short loc_41b2e5
mov     ecx, [ebp+var_484]
and     dword ptr [ecx+350h], 0fffffffdh
pop     edi
mov     eax, esi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
test    ebx, ebx
jnz     short loc_41b2ff
or      esi, 0ffffffffh
jmp     short loc_41b2c4
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_41b2c1
push    0fffffffeh
pop     esi
mov     [edi+ebx-1], cl
jmp     short loc_41b2c4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 484h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
cmp     [ebp+arg_10], 0
mov     eax, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_c]
mov     [ebp+var_460], eax
jnz     short loc_41b352
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_41b467
test    ebx, ebx
jz      short loc_41b35a
test    eax, eax
jz      short loc_41b33a
push    esi
push    edi
push    [ebp+arg_14]
lea     ecx, [ebp+var_484]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     ecx, [ebp+arg_0]
lea     edi, [ebp+var_470]
xor     eax, eax
xor     edx, edx
stosd
stosd
stosd
stosd
mov     eax, ecx
mov     edi, [ebp+var_460]
and     eax, 2
mov     [ebp+var_474], eax
or      eax, edx
mov     [ebp+var_470], edi
mov     [ebp+var_46c], ebx
mov     [ebp+var_468], edx
jnz     short loc_41b3ac
mov     [ebp+var_464], dl
test    edi, edi
jnz     short loc_41b3b3
mov     [ebp+var_464], 1
push    [ebp+arg_18]
lea     eax, [ebp+var_470]
mov     [ebp+var_460], eax
lea     eax, [ebp+var_480]
push    eax
push    [ebp+arg_10]
lea     eax, [ebp+var_460]
push    [ebp+arg_4]
push    ecx
push    eax
lea     ecx, [ebp+var_45c]
call    unknown_libname_12
and     [ebp+var_c], 0
lea     ecx, [ebp+var_45c]
call    sub_41bf87
mov     esi, eax
test    edi, edi
jz      short loc_41b442
mov     eax, [ebp+arg_0]
xor     ecx, ecx
and     eax, 1
or      eax, ecx
jz      short loc_41b41f
test    ebx, ebx
jnz     short loc_41b40b
test    esi, esi
jnz     short loc_41b478
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_41b43f
test    esi, esi
js      short loc_41b442
cmp     esi, ebx
jbe     short loc_41b442
jmp     short loc_41b478
mov     eax, [ebp+var_474]
or      eax, ecx
jz      short loc_41b474
test    ebx, ebx
jz      short loc_41b442
test    esi, esi
jns     short loc_41b435
mov     [edi], cl
jmp     short loc_41b442
mov     eax, [ebp+var_468]
cmp     eax, ebx
jz      short loc_41b48a
mov     [edi+eax], cl
lea     ecx, [ebp+var_41c]
call    ??1formatting_buffer@__crt_stdio_output@@qae@xz
cmp     [ebp+var_478], 0
jz      short loc_41b463
mov     ecx, [ebp+var_484]
and     dword ptr [ecx+350h], 0fffffffdh
pop     edi
mov     eax, esi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
test    ebx, ebx
jnz     short loc_41b47d
or      esi, 0ffffffffh
jmp     short loc_41b442
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_41b43f
push    0fffffffeh
pop     esi
mov     [edi+ebx-1], cl
jmp     short loc_41b442
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 484h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
cmp     [ebp+arg_10], 0
mov     eax, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_c]
mov     [ebp+var_460], eax
jnz     short loc_41b4d0
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_41b5eb
test    ebx, ebx
jz      short loc_41b4d8
test    eax, eax
jz      short loc_41b4b8
push    esi
push    edi
push    [ebp+arg_14]
lea     ecx, [ebp+var_484]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     ecx, [ebp+arg_0]
lea     edi, [ebp+var_470]
xor     eax, eax
xor     edx, edx
stosd
stosd
stosd
stosd
mov     eax, ecx
mov     edi, [ebp+var_460]
and     eax, 2
mov     [ebp+var_474], eax
or      eax, edx
mov     [ebp+var_470], edi
mov     [ebp+var_46c], ebx
mov     [ebp+var_468], edx
jnz     short loc_41b52a
mov     [ebp+var_464], dl
test    edi, edi
jnz     short loc_41b531
mov     [ebp+var_464], 1
push    [ebp+arg_18]
lea     eax, [ebp+var_470]
mov     [ebp+var_460], eax
lea     eax, [ebp+var_480]
push    eax
push    [ebp+arg_10]
lea     eax, [ebp+var_460]
push    [ebp+arg_4]
push    ecx
push    eax
lea     ecx, [ebp+var_45c]
call    unknown_libname_13
and     [ebp+var_c], 0
lea     ecx, [ebp+var_45c]
call    sub_41c09b
mov     esi, eax
test    edi, edi
jz      short loc_41b5c6
mov     eax, [ebp+arg_0]
and     eax, 1
or      eax, 0
jz      short loc_41b59c
test    ebx, ebx
jnz     short loc_41b588
test    esi, esi
jnz     short loc_41b5fc
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_41b5c0
test    esi, esi
js      short loc_41b5c6
cmp     esi, ebx
jbe     short loc_41b5c6
jmp     short loc_41b5fc
mov     eax, [ebp+var_474]
or      eax, 0
jz      short loc_41b5f8
test    ebx, ebx
jz      short loc_41b5c6
test    esi, esi
jns     short loc_41b5b6
xor     eax, eax
mov     [edi], ax
jmp     short loc_41b5c6
mov     eax, [ebp+var_468]
cmp     eax, ebx
jz      short loc_41b60e
xor     ecx, ecx
mov     [edi+eax*2], cx
lea     ecx, [ebp+var_41c]
call    ??1formatting_buffer@__crt_stdio_output@@qae@xz
cmp     [ebp+var_478], 0
jz      short loc_41b5e7
mov     ecx, [ebp+var_484]
and     dword ptr [ecx+350h], 0fffffffdh
pop     edi
mov     eax, esi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
test    ebx, ebx
jnz     short loc_41b601
or      esi, 0ffffffffh
jmp     short loc_41b5c6
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_41b5c0
push    0fffffffeh
pop     esi
xor     eax, eax
mov     [edi+ebx*2-2], ax
jmp     short loc_41b5c6
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, ecx
push    edi
lea     ecx, [esi+40h]
mov     edi, [ecx+404h]
test    edi, edi
jnz     short loc_41b8e4
mov     edi, ecx
call    ??$count@_w@formatting_buffer@__crt_stdio_output@@qbeixz
mov     ebx, [ebp+arg_0]
lea     edi, [edi+eax*2]
add     edi, 0fffffffeh
mov     [esi+34h], edi
mov     ecx, edi
mov     edx, [esi+28h]
test    edx, edx
jg      short loc_41b902
test    ebx, ebx
jz      short loc_41b940
lea     ecx, [edx-1]
mov     eax, ebx
xor     edx, edx
mov     [esi+28h], ecx
div     [ebp+arg_4]
mov     ebx, eax
lea     eax, [edx+30h]
movzx   ecx, ax
cmp     ecx, 39h
jbe     short loc_41b92d
mov     al, [ebp+arg_8]
xor     al, 1
shl     al, 5
add     al, 7
add     al, cl
cbw
movzx   ecx, ax
mov     eax, [esi+34h]
movsx   cx, cl
mov     [eax], cx
add     dword ptr [esi+34h], 0fffffffeh
mov     ecx, [esi+34h]
jmp     short loc_41b8f7
sub     edi, ecx
sar     edi, 1
mov     [esi+38h], edi
add     dword ptr [esi+34h], 2
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
xor     eax, eax
mov     [ebp+var_4], ecx
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+14h], eax
mov     [ecx+18h], eax
mov     [ecx+1ch], eax
mov     [ecx+20h], eax
mov     [ecx+24h], eax
mov     [ecx+28h], eax
mov     [ecx+30h], ax
mov     [ecx+38h], eax
mov     [ecx+3ch], al
mov     [ecx+440h], eax
mov     [ecx+444h], eax
mov     eax, ecx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
xor     edx, edx
mov     [ebp+var_4], ecx
mov     [ecx], edx
xor     eax, eax
mov     [ecx+4], edx
mov     [ecx+8], edx
mov     [ecx+0ch], edx
mov     [ecx+32h], ax
mov     eax, ecx
mov     [ecx+10h], edx
mov     [ecx+14h], edx
mov     [ecx+18h], edx
mov     [ecx+1ch], edx
mov     [ecx+20h], edx
mov     [ecx+24h], edx
mov     [ecx+28h], edx
mov     [ecx+30h], dl
mov     [ecx+38h], edx
mov     [ecx+3ch], dl
mov     [ecx+440h], edx
mov     [ecx+444h], edx
leave
retn
mov     edi, edi
push    ebx
push    esi
mov     esi, ecx
lea     ecx, [esi+448h]
call    unknown_libname_8
test    al, al
jz      short def_41becc
xor     ebx, ebx
cmp     [esi+10h], ebx
jnz     loc_41bf4b
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
pop     esi
pop     ebx
retn
mov     [esi+38h], ebx
mov     [esi+1ch], ebx
jmp     loc_41bf29
inc     dword ptr [esi+10h]
cmp     [esi+18h], ebx
jl      loc_41bf3c
push    dword ptr [esi+1ch]
movzx   eax, byte ptr [esi+31h]
mov     ecx, esi
push    eax
call    unknown_libname_15
mov     [esi+1ch], eax
cmp     eax, 8
jz      short loc_41be83
cmp     eax, 7
ja      short def_41becc
jmp     ds:jpt_41becc[eax*4]
mov     ecx, esi
call    sub_41c231
jmp     short loc_41bf21
or      dword ptr [esi+28h], 0ffffffffh
mov     [esi+24h], ebx
mov     [esi+30h], bl
mov     [esi+20h], ebx
mov     [esi+2ch], ebx
mov     [esi+3ch], bl
jmp     short loc_41bf29
mov     ecx, esi
call    unknown_libname_19
jmp     short loc_41bf21
mov     ecx, esi
call    sub_41caba
jmp     short loc_41bf21
mov     [esi+28h], ebx
jmp     short loc_41bf29
mov     ecx, esi
call    sub_41c318
jmp     short loc_41bf21
mov     ecx, esi
call    sub_41c365
jmp     short loc_41bf21
mov     ecx, esi
call    sub_41c62b
test    al, al
jz      def_41becc
mov     eax, [esi+10h]
mov     al, [eax]
mov     [esi+31h], al
test    al, al
jnz     loc_41bea4
inc     dword ptr [esi+10h]
mov     ecx, esi
call    unknown_libname_26
test    al, al
jz      def_41becc
inc     dword ptr [esi+450h]
cmp     dword ptr [esi+450h], 2
jnz     loc_41be99
mov     eax, [esi+18h]
jmp     loc_41be96
mov     edi, edi
push    ebx
push    esi
mov     esi, ecx
lea     ecx, [esi+448h]
call    unknown_libname_8
test    al, al
jz      short def_41bff0
xor     ebx, ebx
cmp     [esi+10h], ebx
jnz     loc_41c060
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
pop     esi
pop     ebx
retn
mov     [esi+38h], ebx
mov     [esi+1ch], ebx
jmp     loc_41c04d
inc     dword ptr [esi+10h]
cmp     [esi+18h], ebx
jl      loc_41c060
push    dword ptr [esi+1ch]
movzx   eax, byte ptr [esi+31h]
mov     ecx, esi
push    eax
call    unknown_libname_16
mov     [esi+1ch], eax
cmp     eax, 8
jz      short loc_41bfa7
cmp     eax, 7
ja      short def_41bff0
jmp     ds:jpt_41bff0[eax*4]
mov     ecx, esi
call    sub_41c231
jmp     short loc_41c045
or      dword ptr [esi+28h], 0ffffffffh
mov     [esi+24h], ebx
mov     [esi+30h], bl
mov     [esi+20h], ebx
mov     [esi+2ch], ebx
mov     [esi+3ch], bl
jmp     short loc_41c04d
mov     ecx, esi
call    unknown_libname_19
jmp     short loc_41c045
mov     ecx, esi
call    sub_41caba
jmp     short loc_41c045
mov     [esi+28h], ebx
jmp     short loc_41c04d
mov     ecx, esi
call    sub_41c318
jmp     short loc_41c045
mov     ecx, esi
call    sub_41c365
jmp     short loc_41c045
mov     ecx, esi
call    sub_41c62b
test    al, al
jz      def_41bff0
mov     eax, [esi+10h]
mov     al, [eax]
mov     [esi+31h], al
test    al, al
jnz     loc_41bfc8
inc     dword ptr [esi+10h]
inc     dword ptr [esi+450h]
cmp     dword ptr [esi+450h], 2
jnz     loc_41bfbd
mov     eax, [esi+18h]
jmp     loc_41bfba
mov     edi, edi
push    ebx
push    esi
mov     esi, ecx
lea     ecx, [esi+448h]
call    unknown_libname_8
test    al, al
jz      short def_41c105
xor     ebx, ebx
cmp     [esi+10h], ebx
jnz     loc_41c179
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
pop     esi
pop     ebx
retn
mov     [esi+38h], ebx
mov     [esi+1ch], ebx
jmp     loc_41c162
add     dword ptr [esi+10h], 2
cmp     [esi+18h], ebx
jl      loc_41c179
push    dword ptr [esi+1ch]
movzx   eax, word ptr [esi+32h]
mov     ecx, esi
push    eax
call    unknown_libname_17
mov     [esi+1ch], eax
cmp     eax, 8
jz      short loc_41c0bb
cmp     eax, 7
ja      short def_41c105
jmp     ds:jpt_41c105[eax*4]
mov     ecx, esi
call    sub_41c250
jmp     short loc_41c15a
or      dword ptr [esi+28h], 0ffffffffh
mov     [esi+24h], ebx
mov     [esi+30h], bl
mov     [esi+20h], ebx
mov     [esi+2ch], ebx
mov     [esi+3ch], bl
jmp     short loc_41c162
mov     ecx, esi
call    unknown_libname_20
jmp     short loc_41c15a
mov     ecx, esi
call    sub_41cae5
jmp     short loc_41c15a
mov     [esi+28h], ebx
jmp     short loc_41c162
mov     ecx, esi
call    sub_41c33e
jmp     short loc_41c15a
mov     ecx, esi
call    sub_41c4b3
jmp     short loc_41c15a
mov     ecx, esi
call    sub_41c85d
test    al, al
jz      def_41c105
mov     eax, [esi+10h]
movzx   eax, word ptr [eax]
mov     [esi+32h], ax
test    ax, ax
jnz     loc_41c0dc
add     dword ptr [esi+10h], 2
inc     dword ptr [esi+450h]
cmp     dword ptr [esi+450h], 2
jnz     loc_41c0d1
mov     eax, [esi+18h]
jmp     loc_41c0ce
call    sub_41c26f
test    al, al
jnz     short loc_41c24d
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
retn
mov     al, 1
retn
call    unknown_libname_21
test    al, al
jnz     short loc_41c26c
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
retn
mov     al, 1
retn
mov     edi, edi
push    esi
push    0
mov     esi, ecx
call    sub_41c2b4
test    al, al
jnz     short loc_41c281
pop     esi
retn
lea     eax, [esi+18h]
push    eax
movzx   eax, byte ptr [esi+31h]
lea     ecx, [esi+448h]
push    eax
call    ?write_character@?$string_output_adapter@d@__crt_stdio_output@@qbe_ndqah@z
mov     al, 1
pop     esi
retn
mov     edi, edi
push    ebx
push    esi
mov     esi, ecx
push    8000h
mov     bl, [esi+31h]
movsx   eax, bl
push    eax
mov     eax, [esi+8]
mov     byte ptr [esi+3ch], 0
mov     eax, [eax]
push    dword ptr [eax]
call    sub_41685f
add     esp, 0ch
test    eax, eax
jz      short loc_41c311
lea     eax, [esi+18h]
push    eax
push    ebx
lea     ecx, [esi+448h]
call    ?write_character@?$string_output_adapter@d@__crt_stdio_output@@qbe_ndqah@z
mov     eax, [esi+10h]
mov     cl, [eax]
inc     eax
mov     [esi+31h], cl
mov     [esi+10h], eax
test    cl, cl
jnz     short loc_41c311
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
jmp     short loc_41c313
mov     al, 1
pop     esi
pop     ebx
retn    4
cmp     byte ptr [ecx+31h], 2ah
lea     edx, [ecx+28h]
jz      short loc_41c328
push    edx
call    unknown_libname_18
retn
add     dword ptr [ecx+14h], 4
mov     eax, [ecx+14h]
mov     eax, [eax-4]
mov     [edx], eax
test    eax, eax
jns     short loc_41c33b
or      dword ptr [edx], 0ffffffffh
mov     al, 1
retn
cmp     word ptr [ecx+32h], 2ah
lea     edx, [ecx+28h]
jz      short loc_41c34f
push    edx
call    sub_41bded
retn
add     dword ptr [ecx+14h], 4
mov     eax, [ecx+14h]
mov     eax, [eax-4]
mov     [edx], eax
test    eax, eax
jns     short loc_41c362
or      dword ptr [edx], 0ffffffffh
mov     al, 1
retn
mov     al, [ecx+31h]
cmp     al, 46h
jnz     short loc_41c386
mov     eax, [ecx]
and     eax, 8
or      eax, 0
jnz     loc_41c4b0
mov     dword ptr [ecx+1ch], 7
jmp     sub_41c62b
cmp     al, 4eh
jnz     short loc_41c3b0
mov     eax, [ecx]
push    8
pop     edx
and     eax, edx
or      eax, 0
jnz     loc_41c4b0
mov     [ecx+1ch], edx
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
retn
cmp     dword ptr [ecx+2ch], 0
jnz     short loc_41c39d
cmp     al, 6ah
jg      loc_41c46f
jz      loc_41c466
cmp     al, 49h
jz      short loc_41c40b
cmp     al, 4ch
jz      short loc_41c3ff
cmp     al, 54h
jz      short loc_41c3f3
cmp     al, 68h
jnz     loc_41c4b0
mov     eax, [ecx+10h]
cmp     byte ptr [eax], 68h
jnz     short loc_41c3ec
inc     eax
mov     [ecx+10h], eax
xor     eax, eax
inc     eax
jmp     loc_41c4ad
push    2
jmp     loc_41c4ac
mov     dword ptr [ecx+2ch], 0dh
jmp     loc_41c4b0
mov     dword ptr [ecx+2ch], 8
jmp     loc_41c4b0
mov     edx, [ecx+10h]
mov     al, [edx]
cmp     al, 33h
jnz     short loc_41c42c
cmp     byte ptr [edx+1], 32h
jnz     short loc_41c42c
lea     eax, [edx+2]
mov     dword ptr [ecx+2ch], 0ah
mov     [ecx+10h], eax
jmp     loc_41c4b0
cmp     al, 36h
jnz     short loc_41c445
cmp     byte ptr [edx+1], 34h
jnz     short loc_41c445
lea     eax, [edx+2]
mov     dword ptr [ecx+2ch], 0bh
mov     [ecx+10h], eax
jmp     short loc_41c4b0
cmp     al, 64h
jz      short loc_41c45d
cmp     al, 69h
jz      short loc_41c45d
cmp     al, 6fh
jz      short loc_41c45d
cmp     al, 75h
jz      short loc_41c45d
cmp     al, 78h
jz      short loc_41c45d
cmp     al, 58h
jnz     short loc_41c4b0
mov     dword ptr [ecx+2ch], 9
jmp     short loc_41c4b0
mov     dword ptr [ecx+2ch], 5
jmp     short loc_41c4b0
cmp     al, 6ch
jz      short loc_41c49a
cmp     al, 74h
jz      short loc_41c491
cmp     al, 77h
jz      short loc_41c488
cmp     al, 7ah
jnz     short loc_41c4b0
mov     dword ptr [ecx+2ch], 6
jmp     short loc_41c4b0
mov     dword ptr [ecx+2ch], 0ch
jmp     short loc_41c4b0
mov     dword ptr [ecx+2ch], 7
jmp     short loc_41c4b0
mov     eax, [ecx+10h]
cmp     byte ptr [eax], 6ch
jnz     short loc_41c4aa
inc     eax
mov     [ecx+10h], eax
push    4
jmp     short loc_41c4ac
push    3
pop     eax
mov     [ecx+2ch], eax
mov     al, 1
retn
movzx   edx, word ptr [ecx+32h]
mov     eax, edx
push    esi
cmp     edx, 46h
jnz     short loc_41c4da
mov     eax, [ecx]
and     eax, 8
or      eax, 0
jnz     loc_41c627
mov     dword ptr [ecx+1ch], 7
pop     esi
jmp     sub_41c85d
cmp     edx, 4eh
jnz     short loc_41c506
mov     eax, [ecx]
push    8
pop     edx
and     eax, edx
or      eax, 0
jnz     loc_41c627
mov     [ecx+1ch], edx
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
pop     esi
retn
cmp     dword ptr [ecx+2ch], 0
jnz     short loc_41c4f2
push    6ah
pop     esi
cmp     ax, si
ja      loc_41c5dd
jz      loc_41c5d4
cmp     eax, 49h
jz      short loc_41c56e
cmp     eax, 4ch
jz      short loc_41c562
cmp     eax, 54h
jz      short loc_41c556
push    68h
pop     edx
cmp     ax, dx
jnz     loc_41c627
mov     eax, [ecx+10h]
cmp     [eax], dx
jnz     short loc_41c54f
add     eax, 2
mov     [ecx+10h], eax
xor     eax, eax
inc     eax
jmp     loc_41c624
push    2
jmp     loc_41c623
mov     dword ptr [ecx+2ch], 0dh
jmp     loc_41c627
mov     dword ptr [ecx+2ch], 8
jmp     loc_41c627
mov     edx, [ecx+10h]
movzx   eax, word ptr [edx]
cmp     eax, 33h
jnz     short loc_41c592
cmp     word ptr [edx+2], 32h
jnz     short loc_41c592
lea     eax, [edx+4]
mov     dword ptr [ecx+2ch], 0ah
mov     [ecx+10h], eax
jmp     loc_41c627
cmp     eax, 36h
jnz     short loc_41c5ad
cmp     word ptr [edx+2], 34h
jnz     short loc_41c5ad
lea     eax, [edx+4]
mov     dword ptr [ecx+2ch], 0bh
mov     [ecx+10h], eax
jmp     short loc_41c627
cmp     eax, 64h
jz      short loc_41c5cb
cmp     eax, 69h
jz      short loc_41c5cb
cmp     eax, 6fh
jz      short loc_41c5cb
cmp     eax, 75h
jz      short loc_41c5cb
cmp     eax, 78h
jz      short loc_41c5cb
cmp     eax, 58h
jnz     short loc_41c627
mov     dword ptr [ecx+2ch], 9
jmp     short loc_41c627
mov     dword ptr [ecx+2ch], 5
jmp     short loc_41c627
push    6ch
pop     esi
cmp     ax, si
jz      short loc_41c60f
cmp     eax, 74h
jz      short loc_41c606
cmp     eax, 77h
jz      short loc_41c5fd
cmp     edx, 7ah
jnz     short loc_41c627
mov     dword ptr [ecx+2ch], 6
jmp     short loc_41c627
mov     dword ptr [ecx+2ch], 0ch
jmp     short loc_41c627
mov     dword ptr [ecx+2ch], 7
jmp     short loc_41c627
mov     eax, [ecx+10h]
cmp     [eax], si
jnz     short loc_41c621
add     eax, 2
mov     [ecx+10h], eax
push    4
jmp     short loc_41c623
push    3
pop     eax
mov     [ecx+2ch], eax
mov     al, 1
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
push    58h
pop     ecx
movsx   eax, byte ptr [esi+31h]
cmp     eax, 64h
jg      short loc_41c6b0
jz      loc_41c6dd
cmp     eax, ecx
jg      short loc_41c68d
jz      short loc_41c687
cmp     eax, 41h
jz      loc_41c6ed
cmp     eax, 43h
jz      short loc_41c69d
cmp     eax, 44h
jle     short loc_41c680
cmp     eax, 47h
jle     loc_41c6ed
cmp     eax, 53h
jnz     short loc_41c680
mov     ecx, esi
call    unknown_libname_25
test    al, al
jnz     loc_41c720
xor     al, al
jmp     loc_41c859
push    1
push    10h
jmp     short loc_41c6e4
sub     eax, 5ah
jz      short loc_41c6a7
sub     eax, 7
jz      short loc_41c6ed
dec     eax
sub     eax, 1
jnz     short loc_41c680
push    ebx
mov     ecx, esi
call    unknown_libname_23
jmp     short loc_41c678
mov     ecx, esi
call    sub_41cb65
jmp     short loc_41c678
cmp     eax, 70h
jg      short loc_41c702
jz      short loc_41c6f6
cmp     eax, 67h
jle     short loc_41c6ed
cmp     eax, 69h
jz      short loc_41c6dd
cmp     eax, 6eh
jz      short loc_41c6d4
cmp     eax, 6fh
jnz     short loc_41c680
mov     ecx, esi
call    sub_41d30d
jmp     short loc_41c678
mov     ecx, esi
call    unknown_libname_24
jmp     short loc_41c678
or      dword ptr [esi+20h], 10h
push    ebx
push    0ah
mov     ecx, esi
call    sub_41cff3
jmp     short loc_41c678
mov     ecx, esi
call    unknown_libname_22
jmp     short loc_41c678
mov     ecx, esi
call    sub_41d34b
jmp     loc_41c678
sub     eax, 73h
jz      loc_41c671
dec     eax
sub     eax, 1
jz      short loc_41c6e1
sub     eax, 3
jnz     loc_41c680
push    ebx
jmp     loc_41c689
cmp     [esi+30h], bl
jnz     loc_41c857
mov     ecx, ebx
mov     [ebp+src], bx
mov     [ebp+var_2], bl
xor     edx, edx
mov     ebx, [esi+20h]
inc     edx
mov     eax, ebx
mov     [ebp+var_8], ecx
shr     eax, 4
test    dl, al
jz      short loc_41c773
mov     eax, ebx
shr     eax, 6
test    dl, al
jz      short loc_41c753
mov     byte ptr [ebp+src], 2dh
jmp     short loc_41c75b
test    dl, bl
jz      short loc_41c762
mov     byte ptr [ebp+src], 2bh
mov     ecx, edx
mov     [ebp+var_8], ecx
jmp     short loc_41c773
mov     eax, ebx
shr     eax, 1
test    dl, al
jz      short loc_41c773
mov     byte ptr [ebp+src], 20h
mov     ecx, edx
mov     [ebp+var_8], edx
mov     dl, [esi+31h]
cmp     dl, 78h
jz      short loc_41c780
cmp     dl, 58h
jnz     short loc_41c78d
mov     eax, ebx
shr     eax, 5
test    al, 1
jz      short loc_41c78d
mov     bl, 1
jmp     short loc_41c78f
xor     bl, bl
cmp     dl, 61h
jz      short loc_41c79d
cmp     dl, 41h
jz      short loc_41c79d
xor     al, al
jmp     short loc_41c79f
mov     al, 1
test    bl, bl
jnz     short loc_41c7a7
test    al, al
jz      short loc_41c7c7
mov     byte ptr [ebp+ecx+src], 30h
cmp     dl, 58h
jz      short loc_41c7ba
cmp     dl, 41h
jz      short loc_41c7ba
mov     al, 78h
jmp     short loc_41c7bd
push    58h
pop     eax
mov     byte ptr [ebp+ecx+src+1], al
add     ecx, 2
mov     [ebp+var_8], ecx
push    edi
mov     edi, [esi+24h]
lea     ebx, [esi+18h]
sub     edi, [esi+38h]
lea     eax, [esi+448h]
sub     edi, ecx
test    byte ptr [esi+20h], 0ch
jnz     short loc_41c7ef
push    ebx
push    edi
push    20h
push    eax
call    ??$write_multiple_characters@v?$string_output_adapter@d@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@d@0@dhqah@z
mov     ecx, [ebp+var_8]
add     esp, 10h
lea     eax, [esi+0ch]
push    eax
push    ebx
push    ecx
lea     eax, [ebp+src]
push    eax
lea     ecx, [esi+448h]
call    ?write_string@?$string_output_adapter@d@__crt_stdio_output@@qbexqbdhqahaav__crt_deferred_errno_cache@@@z
mov     ecx, [esi+20h]
mov     eax, ecx
shr     eax, 3
test    al, 1
jz      short loc_41c82b
shr     ecx, 2
test    cl, 1
jnz     short loc_41c82b
push    ebx
push    edi
lea     eax, [esi+448h]
push    30h
push    eax
call    ??$write_multiple_characters@v?$string_output_adapter@d@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@d@0@dhqah@z
add     esp, 10h
push    0
mov     ecx, esi
call    sub_41d54f
cmp     dword ptr [ebx], 0
jl      short loc_41c856
mov     eax, [esi+20h]
shr     eax, 2
test    al, 1
jz      short loc_41c856
push    ebx
push    edi
lea     eax, [esi+448h]
push    20h
push    eax
call    ??$write_multiple_characters@v?$string_output_adapter@d@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@d@0@dhqah@z
add     esp, 10h
pop     edi
mov     al, 1
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
push    41h
pop     edx
push    58h
movzx   eax, word ptr [esi+32h]
pop     ecx
cmp     eax, 64h
ja      short loc_41c8ef
jz      loc_41c91c
cmp     eax, ecx
ja      short loc_41c8cc
jz      short loc_41c8c6
cmp     eax, edx
jz      loc_41c92c
cmp     eax, 43h
jz      short loc_41c8dc
cmp     eax, 44h
jbe     short loc_41c8bf
cmp     eax, 47h
jbe     loc_41c92c
cmp     eax, 53h
jnz     short loc_41c8bf
mov     ecx, esi
call    sub_41d3ec
test    al, al
jnz     loc_41c95f
xor     al, al
jmp     loc_41caac
push    1
push    10h
jmp     short loc_41c923
sub     eax, 5ah
jz      short loc_41c8e6
sub     eax, 7
jz      short loc_41c92c
dec     eax
sub     eax, 1
jnz     short loc_41c8bf
push    ebx
mov     ecx, esi
call    sub_41cf5d
jmp     short loc_41c8b7
mov     ecx, esi
call    sub_41cbbf
jmp     short loc_41c8b7
cmp     eax, 70h
ja      short loc_41c941
jz      short loc_41c935
cmp     eax, 67h
jbe     short loc_41c92c
cmp     eax, 69h
jz      short loc_41c91c
cmp     eax, 6eh
jz      short loc_41c913
cmp     eax, 6fh
jnz     short loc_41c8bf
mov     ecx, esi
call    sub_41d32c
jmp     short loc_41c8b7
mov     ecx, esi
call    unknown_libname_24
jmp     short loc_41c8b7
or      dword ptr [esi+20h], 10h
push    ebx
push    0ah
mov     ecx, esi
call    sub_41d144
jmp     short loc_41c8b7
mov     ecx, esi
call    sub_41cd68
jmp     short loc_41c8b7
mov     ecx, esi
call    sub_41d363
jmp     loc_41c8b7
sub     eax, 73h
jz      loc_41c8b0
dec     eax
sub     eax, 1
jz      short loc_41c920
sub     eax, 3
jnz     loc_41c8bf
push    ebx
jmp     loc_41c8c8
cmp     [esi+30h], bl
jnz     loc_41caaa
mov     ecx, ebx
mov     [ebp+src], ebx
mov     [ebp+var_8], bx
xor     edx, edx
mov     ebx, [esi+20h]
inc     edx
push    edi
mov     eax, ebx
mov     [ebp+var_10], ecx
shr     eax, 4
push    20h
pop     edi
test    dl, al
jz      short loc_41c9b7
mov     eax, ebx
shr     eax, 6
test    dl, al
jz      short loc_41c994
push    2dh
jmp     short loc_41c99a
test    dl, bl
jz      short loc_41c9a6
push    2bh
pop     eax
mov     ecx, edx
mov     word ptr [ebp+src], ax
mov     [ebp+var_10], ecx
jmp     short loc_41c9b7
mov     eax, ebx
shr     eax, 1
test    dl, al
jz      short loc_41c9b7
mov     word ptr [ebp+src], di
mov     ecx, edx
mov     [ebp+var_10], edx
movzx   edx, word ptr [esi+32h]
push    78h
pop     edi
cmp     dx, di
jz      short loc_41c9cb
push    58h
pop     eax
cmp     dx, ax
jnz     short loc_41c9d8
mov     eax, ebx
shr     eax, 5
test    al, 1
jz      short loc_41c9d8
mov     bl, 1
jmp     short loc_41c9da
xor     bl, bl
cmp     edx, 61h
jz      short loc_41c9eb
push    41h
pop     eax
cmp     dx, ax
jz      short loc_41c9eb
xor     al, al
jmp     short loc_41c9ed
mov     al, 1
mov     [ebp+var_14], 30h
test    bl, bl
jnz     short loc_41c9fc
test    al, al
jz      short loc_41ca21
mov     eax, [ebp+var_14]
push    58h
mov     word ptr [ebp+ecx*2+src], ax
pop     eax
cmp     dx, ax
jz      short loc_41ca14
push    41h
pop     ebx
cmp     dx, bx
jnz     short loc_41ca16
mov     edi, eax
mov     word ptr [ebp+ecx*2+src+2], di
add     ecx, 2
mov     [ebp+var_10], ecx
mov     ebx, [esi+24h]
lea     eax, [esi+18h]
sub     ebx, [esi+38h]
lea     edi, [esi+448h]
sub     ebx, ecx
test    byte ptr [esi+20h], 0ch
jnz     short loc_41ca48
push    eax
push    ebx
push    20h
push    edi
call    ??$write_multiple_characters@v?$string_output_adapter@_w@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@_w@0@dhqah@z
mov     ecx, [ebp+var_10]
add     esp, 10h
lea     eax, [esi+0ch]
push    eax
lea     eax, [esi+18h]
push    eax
push    ecx
lea     eax, [ebp+src]
mov     ecx, edi
push    eax
call    ?write_string@?$string_output_adapter@_w@__crt_stdio_output@@qbexqb_whqahaav__crt_deferred_errno_cache@@@z
mov     ecx, [esi+20h]
mov     eax, ecx
shr     eax, 3
test    al, 1
jz      short loc_41ca81
shr     ecx, 2
test    cl, 1
jnz     short loc_41ca81
lea     eax, [esi+18h]
push    eax
push    ebx
push    [ebp+var_14]
push    edi
call    ??$write_multiple_characters@v?$string_output_adapter@_w@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@_w@0@dhqah@z
add     esp, 10h
push    0
mov     ecx, esi
call    sub_41d5f1
lea     ecx, [esi+18h]
cmp     dword ptr [ecx], 0
jl      short loc_41caa9
mov     eax, [esi+20h]
shr     eax, 2
test    al, 1
jz      short loc_41caa9
push    ecx
push    ebx
push    20h
push    edi
call    ??$write_multiple_characters@v?$string_output_adapter@_w@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@_w@0@dhqah@z
add     esp, 10h
pop     edi
mov     al, 1
mov     ecx, [ebp+var_4]
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
cmp     byte ptr [ecx+31h], 2ah
lea     edx, [ecx+24h]
jz      short loc_41caca
push    edx
call    unknown_libname_18
retn
add     dword ptr [ecx+14h], 4
mov     eax, [ecx+14h]
mov     eax, [eax-4]
mov     [edx], eax
test    eax, eax
jns     short loc_41cae2
or      dword ptr [ecx+20h], 4
neg     eax
mov     [edx], eax
mov     al, 1
retn
cmp     word ptr [ecx+32h], 2ah
lea     edx, [ecx+24h]
jz      short loc_41caf6
push    edx
call    sub_41bded
retn
add     dword ptr [ecx+14h], 4
mov     eax, [ecx+14h]
mov     eax, [eax-4]
mov     [edx], eax
test    eax, eax
jns     short loc_41cb0e
or      dword ptr [ecx+20h], 4
neg     eax
mov     [edx], eax
mov     al, 1
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     eax, 0bh
ja      short def_41cb25
movzx   eax, ds:byte_41cb59[eax]
jmp     ds:jpt_41cb25[eax*4]
xor     eax, eax
inc     eax
pop     ebp
retn
push    2
pop     eax
pop     ebp
retn
push    4
jmp     short loc_41cb33
push    8
jmp     short loc_41cb33
xor     eax, eax
pop     ebp
retn
mov     edi, edi
push    ebx
push    esi
mov     esi, ecx
push    edi
add     dword ptr [esi+14h], 4
mov     eax, [esi+14h]
mov     edi, [eax-4]
test    edi, edi
jz      short loc_41cba8
mov     ebx, [edi+4]
test    ebx, ebx
jz      short loc_41cba8
push    dword ptr [esi+2ch]
movzx   eax, byte ptr [esi+31h]
push    eax
push    dword ptr [esi+4]
push    dword ptr [esi]
call    ??$is_wide_character_specifier@d@__crt_stdio_output@@ya_n_kdw4length_modifier@0@@z
add     esp, 10h
mov     [esi+34h], ebx
movzx   ecx, word ptr [edi]
test    al, al
jz      short loc_41cbb2
mov     byte ptr [esi+3ch], 1
shr     ecx, 1
jmp     short loc_41cbb6
push    6
mov     dword ptr [esi+34h], offset anull_1
pop     ecx
mov     byte ptr [esi+3ch], 0
pop     edi
mov     [esi+38h], ecx
mov     al, 1
pop     esi
pop     ebx
retn
mov     edi, edi
push    ebx
push    esi
mov     esi, ecx
push    edi
add     dword ptr [esi+14h], 4
mov     eax, [esi+14h]
mov     edi, [eax-4]
test    edi, edi
jz      short loc_41cc02
mov     ebx, [edi+4]
test    ebx, ebx
jz      short loc_41cc02
push    dword ptr [esi+2ch]
movzx   eax, word ptr [esi+32h]
push    eax
push    dword ptr [esi+4]
push    dword ptr [esi]
call    ??$is_wide_character_specifier@_w@__crt_stdio_output@@ya_n_k_ww4length_modifier@0@@z
add     esp, 10h
mov     [esi+34h], ebx
movzx   ecx, word ptr [edi]
test    al, al
jz      short loc_41cc0c
mov     byte ptr [esi+3ch], 1
shr     ecx, 1
jmp     short loc_41cc10
push    6
mov     dword ptr [esi+34h], offset anull_1
pop     ecx
mov     byte ptr [esi+3ch], 0
pop     edi
mov     [esi+38h], ecx
mov     al, 1
pop     esi
pop     ebx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
push    edi
add     dword ptr [esi+14h], 4
lea     edi, [esi+40h]
mov     eax, [esi+14h]
push    dword ptr [esi+2ch]
mov     byte ptr [esi+3ch], 1
movzx   ebx, word ptr [eax-4]
movzx   eax, word ptr [esi+32h]
push    eax
push    dword ptr [esi+4]
push    dword ptr [esi]
call    ??$is_wide_character_specifier@_w@__crt_stdio_output@@ya_n_k_ww4length_modifier@0@@z
add     esp, 10h
test    al, al
jnz     short loc_41cfc5
mov     ecx, [edi+404h]
mov     [ebp+srcch], bl
mov     [ebp+var_3], al
test    ecx, ecx
jnz     short loc_41cfa5
mov     ecx, edi
mov     eax, [esi+8]
push    eax
mov     eax, [eax]
push    dword ptr [eax+4]
lea     eax, [ebp+srcch]
push    eax
push    ecx
call    __mbtowc_l
add     esp, 10h
test    eax, eax
jns     short loc_41cfd4
mov     byte ptr [esi+30h], 1
jmp     short loc_41cfd4
mov     eax, [edi+404h]
test    eax, eax
jnz     short loc_41cfd1
mov     eax, edi
mov     [eax], bx
mov     eax, [edi+404h]
test    eax, eax
jz      short loc_41cfe0
mov     edi, eax
mov     [esi+34h], edi
mov     al, 1
pop     edi
mov     dword ptr [esi+38h], 1
pop     esi
pop     ebx
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
push    edi
push    dword ptr [esi+2ch]
call    sub_41cb11
pop     ecx
mov     ecx, eax
mov     [ebp+var_4], eax
sub     ecx, 1
jz      short loc_41d089
sub     ecx, 1
jz      short loc_41d06c
dec     ecx
sub     ecx, 1
jz      short loc_41d04f
sub     ecx, 4
jz      short loc_41d038
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
jmp     loc_41d13d
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 8
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
mov     edi, [eax-8]
mov     ebx, [eax-4]
jmp     short loc_41d0a9
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 4
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
jz      short loc_41d065
mov     eax, [eax-4]
jmp     short loc_41d0a4
mov     edi, [eax-4]
xor     ebx, ebx
jmp     short loc_41d0a9
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 4
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
jz      short loc_41d083
movsx   eax, word ptr [eax-4]
jmp     short loc_41d0a4
movzx   eax, word ptr [eax-4]
jmp     short loc_41d0a4
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 4
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
jz      short loc_41d0a0
movsx   eax, byte ptr [eax-4]
jmp     short loc_41d0a4
movzx   eax, byte ptr [eax-4]
cdq
mov     edi, eax
mov     ebx, edx
mov     ecx, [esi+20h]
mov     eax, ecx
shr     eax, 4
test    al, 1
jz      short loc_41d0cc
test    ebx, ebx
jg      short loc_41d0cc
jl      short loc_41d0bf
test    edi, edi
jnb     short loc_41d0cc
neg     edi
adc     ebx, 0
neg     ebx
or      ecx, 40h
mov     [esi+20h], ecx
cmp     dword ptr [esi+28h], 0
jge     short loc_41d0db
mov     dword ptr [esi+28h], 1
jmp     short loc_41d0ec
push    dword ptr [esi+28h]
and     ecx, 0fffffff7h
mov     [esi+20h], ecx
lea     ecx, [esi+40h]
call    ??$ensure_buffer_is_big_enough@d@formatting_buffer@__crt_stdio_output@@qae_ni@z
mov     eax, edi
or      eax, ebx
jnz     short loc_41d0f6
and     dword ptr [esi+20h], 0ffffffdfh
cmp     [ebp+var_4], 8
mov     ecx, esi
push    [ebp+arg_4]
mov     byte ptr [esi+3ch], 0
push    [ebp+arg_0]
jnz     short loc_41d111
push    ebx
push    edi
call    unknown_libname_11
jmp     short loc_41d117
push    edi
call    unknown_libname_10
mov     eax, [esi+20h]
shr     eax, 7
test    al, 1
jz      short loc_41d13b
cmp     dword ptr [esi+38h], 0
jz      short loc_41d12f
mov     eax, [esi+34h]
cmp     byte ptr [eax], 30h
jz      short loc_41d13b
dec     dword ptr [esi+34h]
mov     ecx, [esi+34h]
mov     byte ptr [ecx], 30h
inc     dword ptr [esi+38h]
mov     al, 1
pop     edi
pop     esi
pop     ebx
leave
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
push    edi
push    dword ptr [esi+2ch]
call    sub_41cb11
pop     ecx
mov     ecx, eax
mov     [ebp+var_4], eax
sub     ecx, 1
jz      short loc_41d1da
sub     ecx, 1
jz      short loc_41d1bd
dec     ecx
sub     ecx, 1
jz      short loc_41d1a0
sub     ecx, 4
jz      short loc_41d189
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
jmp     loc_41d292
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 8
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
mov     edi, [eax-8]
mov     ebx, [eax-4]
jmp     short loc_41d1fa
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 4
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
jz      short loc_41d1b6
mov     eax, [eax-4]
jmp     short loc_41d1f5
mov     edi, [eax-4]
xor     ebx, ebx
jmp     short loc_41d1fa
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 4
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
jz      short loc_41d1d4
movsx   eax, word ptr [eax-4]
jmp     short loc_41d1f5
movzx   eax, word ptr [eax-4]
jmp     short loc_41d1f5
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 4
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
jz      short loc_41d1f1
movsx   eax, byte ptr [eax-4]
jmp     short loc_41d1f5
movzx   eax, byte ptr [eax-4]
cdq
mov     edi, eax
mov     ebx, edx
mov     ecx, [esi+20h]
mov     eax, ecx
shr     eax, 4
test    al, 1
jz      short loc_41d21d
test    ebx, ebx
jg      short loc_41d21d
jl      short loc_41d210
test    edi, edi
jnb     short loc_41d21d
neg     edi
adc     ebx, 0
neg     ebx
or      ecx, 40h
mov     [esi+20h], ecx
cmp     dword ptr [esi+28h], 0
jge     short loc_41d22c
mov     dword ptr [esi+28h], 1
jmp     short loc_41d23d
push    dword ptr [esi+28h]
and     ecx, 0fffffff7h
mov     [esi+20h], ecx
lea     ecx, [esi+40h]
call    sub_41b73d
mov     eax, edi
or      eax, ebx
jnz     short loc_41d247
and     dword ptr [esi+20h], 0ffffffdfh
cmp     [ebp+var_4], 8
mov     ecx, esi
push    [ebp+arg_4]
mov     byte ptr [esi+3ch], 1
push    [ebp+arg_0]
jnz     short loc_41d262
push    ebx
push    edi
call    sub_41b9df
jmp     short loc_41d268
push    edi
call    sub_41b8cb
mov     eax, [esi+20h]
shr     eax, 7
test    al, 1
jz      short loc_41d290
cmp     dword ptr [esi+38h], 0
push    30h
pop     edx
jz      short loc_41d283
mov     eax, [esi+34h]
cmp     [eax], dx
jz      short loc_41d290
add     dword ptr [esi+34h], 0fffffffeh
mov     ecx, [esi+34h]
mov     [ecx], dx
inc     dword ptr [esi+38h]
mov     al, 1
pop     edi
pop     esi
pop     ebx
leave
retn    8
mov     edx, [ecx+20h]
mov     eax, edx
shr     eax, 5
test    al, 1
jz      short loc_41d322
or      edx, 80h
mov     [ecx+20h], edx
push    0
push    8
call    sub_41cff3
retn
mov     edx, [ecx+20h]
mov     eax, edx
shr     eax, 5
test    al, 1
jz      short loc_41d341
or      edx, 80h
mov     [ecx+20h], edx
push    0
push    8
call    sub_41d144
retn
push    1
push    10h
mov     dword ptr [ecx+28h], 8
mov     dword ptr [ecx+2ch], 0ah
call    sub_41cff3
retn
push    1
push    10h
mov     dword ptr [ecx+28h], 8
mov     dword ptr [ecx+2ch], 0ah
call    sub_41d144
retn
mov     edi, edi
push    ebx
push    esi
mov     esi, ecx
push    edi
add     dword ptr [esi+14h], 4
mov     eax, [esi+14h]
mov     ebx, [esi+28h]
mov     edi, [eax-4]
mov     [esi+34h], edi
cmp     ebx, 0ffffffffh
jnz     short loc_41d40d
mov     ebx, 7fffffffh
push    dword ptr [esi+2ch]
movzx   eax, word ptr [esi+32h]
push    eax
push    dword ptr [esi+4]
push    dword ptr [esi]
call    ??$is_wide_character_specifier@_w@__crt_stdio_output@@ya_n_k_ww4length_modifier@0@@z
add     esp, 10h
test    al, al
jz      short loc_41d441
test    edi, edi
jnz     short loc_41d432
mov     edi, offset anull_2
mov     [esi+34h], edi
push    ebx
push    edi
mov     byte ptr [esi+3ch], 1
call    _wcsnlen
pop     ecx
pop     ecx
jmp     short loc_41d456
test    edi, edi
jnz     short loc_41d44c
mov     dword ptr [esi+34h], offset anull_1
push    0
push    ebx
mov     ecx, esi
call    sub_41d45f
pop     edi
mov     [esi+38h], eax
mov     al, 1
pop     esi
pop     ebx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     ebx, ecx
push    edi
xor     edi, edi
mov     esi, [ebx+34h]
cmp     [ebp+arg_0], edi
jle     short loc_41d49d
mov     al, [esi]
test    al, al
jz      short loc_41d49d
movzx   eax, al
push    8000h
push    eax
mov     eax, [ebx+8]
mov     eax, [eax]
push    dword ptr [eax]
call    sub_41685f
add     esp, 0ch
test    eax, eax
jz      short loc_41d496
inc     esi
inc     esi
inc     edi
cmp     edi, [ebp+arg_0]
jl      short loc_41d473
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, ecx
push    edi
cmp     byte ptr [esi+3ch], 0
jz      short loc_41d5c5
cmp     dword ptr [esi+38h], 0
jle     short loc_41d5c5
mov     edi, [esi+34h]
xor     ebx, ebx
movzx   eax, word ptr [edi]
lea     edi, [edi+2]
and     [ebp+var_10], 0
push    eax
push    6
lea     eax, [ebp+src]
push    eax
lea     eax, [ebp+var_10]
push    eax
call    sub_424f2f
add     esp, 10h
test    eax, eax
jnz     short loc_41d5bf
cmp     [ebp+var_10], eax
jz      short loc_41d5bf
lea     eax, [esi+0ch]
push    eax
lea     eax, [esi+18h]
push    eax
push    [ebp+var_10]
lea     eax, [ebp+src]
push    eax
lea     ecx, [esi+448h]
call    ?write_string@?$string_output_adapter@d@__crt_stdio_output@@qbexqbdhqahaav__crt_deferred_errno_cache@@@z
inc     ebx
cmp     ebx, [esi+38h]
jnz     short loc_41d577
jmp     short loc_41d5de
or      dword ptr [esi+18h], 0ffffffffh
jmp     short loc_41d5de
lea     eax, [esi+0ch]
push    eax
lea     eax, [esi+18h]
push    eax
push    dword ptr [esi+38h]
lea     ecx, [esi+448h]
push    dword ptr [esi+34h]
call    ?write_string@?$string_output_adapter@d@__crt_stdio_output@@qbexqbdhqahaav__crt_deferred_errno_cache@@@z
mov     ecx, [ebp+var_4]
mov     al, 1
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, ecx
push    edi
cmp     byte ptr [esi+3ch], 0
jnz     short loc_41d65c
xor     edi, edi
cmp     [esi+38h], edi
jle     short loc_41d65c
mov     ecx, [esi+34h]
lea     ebx, [esi+18h]
mov     [ebp+var_8], ecx
xor     eax, eax
mov     [ebp+dstch], ax
mov     eax, [esi+8]
push    eax
mov     eax, [eax]
push    dword ptr [eax+4]
lea     eax, [ebp+dstch]
push    ecx
push    eax
call    __mbtowc_l
add     esp, 10h
mov     [ebp+var_c], eax
test    eax, eax
jle     short loc_41d657
push    ebx
push    dword ptr [ebp+dstch]
lea     ecx, [esi+448h]
call    ?write_character@?$string_output_adapter@_w@__crt_stdio_output@@qbe_n_wqah@z
mov     ecx, [ebp+var_8]
add     ecx, [ebp+var_c]
inc     edi
mov     [ebp+var_8], ecx
cmp     edi, [esi+38h]
jnz     short loc_41d614
jmp     short loc_41d675
or      dword ptr [ebx], 0ffffffffh
jmp     short loc_41d675
lea     eax, [esi+0ch]
push    eax
lea     eax, [esi+18h]
push    eax
push    dword ptr [esi+38h]
lea     ecx, [esi+448h]
push    dword ptr [esi+34h]
call    ?write_string@?$string_output_adapter@_w@__crt_stdio_output@@qbexqb_whqahaav__crt_deferred_errno_cache@@@z
pop     edi
pop     esi
mov     al, 1
pop     ebx
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_18]
push    [ebp+arg_14]
push    [ebp+arg_10]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_41b490
add     esp, 1ch
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, [ebp+arg_4]
mov     [ebp+var_8], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_0]
mov     [ebp+var_4], 1
call    sub_4200db
pop     ecx
pop     ecx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, [ebp+arg_4]
mov     [ebp+var_8], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_0]
mov     [ebp+var_4], 0
call    ?convert_hexadecimal_string_to_floating_type_common@__crt_strtox@@ya?aw4sld_status@@abufloating_point_string@1@abvfloating_point_value@1@@z
pop     ecx
pop     ecx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, [ebp+arg_4]
mov     [ebp+var_8], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_0]
mov     [ebp+var_4], 1
call    ?convert_hexadecimal_string_to_floating_type_common@__crt_strtox@@ya?aw4sld_status@@abufloating_point_string@1@abvfloating_point_value@1@@z
pop     ecx
pop     ecx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_10]
mov     ecx, [ebp+arg_0]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
call    unknown_libname_28
mov     eax, [ebp+arg_0]
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0cch
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
mov     ecx, edi
call    unknown_libname_31
test    al, al
jz      loc_41e9f9
mov     eax, [edi+10h]
mov     ecx, edi
mov     [ebp+var_28], eax
mov     eax, [edi+14h]
mov     [ebp+var_24], eax
call    sub_422398
mov     word ptr [ebp+var_8], ax
lea     eax, [ebp+var_8]
mov     [ebp+var_c8], eax
lea     eax, [ebp+var_28]
mov     [ebp+var_cc], edi
mov     [ebp+var_c4], eax
jmp     short loc_41dc1f
mov     ecx, edi
call    sub_422398
mov     word ptr [ebp+var_8], ax
push    8
push    [ebp+var_8]
call    sub_413389
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_41dc14
mov     esi, [ebp+arg_8]
mov     dx, word ptr [ebp+var_8]
add     esi, 308h
push    2dh
pop     ecx
cmp     dx, cx
mov     [ebp+var_1c], esi
push    2bh
setz    al
mov     [esi], al
pop     eax
jz      short loc_41dc54
cmp     dx, ax
jnz     short loc_41dc62
mov     ecx, edi
call    sub_422398
mov     dx, ax
mov     word ptr [ebp+var_8], dx
cmp     dx, 49h
jz      loc_41e9e7
cmp     dx, 69h
jz      loc_41e9e7
cmp     dx, 4eh
jz      loc_41e9d2
cmp     dx, 6eh
jz      loc_41e9d2
xor     eax, eax
push    30h
pop     ecx
mov     [ebp+var_14], eax
mov     bh, al
mov     [ebp+var_1], bh
cmp     dx, cx
jnz     short loc_41dcef
mov     esi, [edi+10h]
mov     ebx, [ebp+arg_4]
mov     ecx, ebx
mov     edi, [edi+14h]
call    sub_422398
movzx   eax, ax
cmp     eax, 78h
jz      short loc_41dccd
cmp     eax, 58h
jz      short loc_41dccd
mov     edi, ebx
push    eax
mov     ecx, edi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
mov     dx, word ptr [ebp+var_8]
xor     eax, eax
mov     bh, al
jmp     short loc_41dcec
mov     ecx, ebx
mov     [ebp+var_1], 1
call    sub_422398
mov     dx, ax
mov     [ebp+var_24], edi
mov     edi, ebx
mov     word ptr [ebp+var_8], dx
mov     bh, [ebp+var_1]
xor     eax, eax
mov     [ebp+var_28], esi
mov     esi, [ebp+var_1c]
mov     ecx, [ebp+arg_8]
mov     bl, al
push    30h
mov     [ebp+var_20], eax
add     ecx, 8
pop     eax
mov     [ebp+var_18], ecx
cmp     dx, ax
jnz     short loc_41dd22
push    eax
mov     bl, 1
pop     esi
mov     ecx, edi
call    sub_422398
mov     dx, ax
mov     word ptr [ebp+var_8], dx
cmp     dx, si
jz      short loc_41dd09
mov     esi, [ebp+var_1c]
push    30h
pop     eax
xor     ecx, ecx
mov     [ebp+var_bc], 3ah
test    bh, bh
mov     [ebp+var_2c], 0ff10h
mov     [ebp+var_30], 660h
setz    cl
mov     [ebp+var_34], 66ah
dec     ecx
mov     [ebp+var_38], 6f0h
and     ecx, 6
mov     [ebp+var_3c], 6fah
add     ecx, 9
mov     [ebp+var_40], 966h
mov     [ebp+var_c0], ecx
mov     [ebp+var_44], 970h
mov     [ebp+var_48], 9e6h
mov     [ebp+var_4c], 9f0h
mov     [ebp+var_50], 0a66h
mov     [ebp+var_54], 0a70h
mov     [ebp+var_58], 0ae6h
mov     [ebp+var_5c], 0af0h
mov     [ebp+var_60], 0b66h
mov     [ebp+var_64], 0b70h
mov     [ebp+var_68], 0c66h
mov     [ebp+var_6c], 0c70h
mov     [ebp+var_70], 0ce6h
mov     [ebp+var_74], 0cf0h
mov     [ebp+var_78], 0d66h
mov     [ebp+var_7c], 0d70h
mov     [ebp+var_80], 0e50h
mov     [ebp+var_84], 0e5ah
mov     [ebp+var_88], 0ed0h
mov     [ebp+var_8c], 0edah
mov     [ebp+var_90], 0f20h
mov     [ebp+var_94], 0f2ah
mov     [ebp+var_98], 1040h
mov     [ebp+var_9c], 104ah
mov     [ebp+var_a0], 17e0h
mov     [ebp+var_a4], 17eah
mov     [ebp+var_a8], 1810h
mov     [ebp+var_ac], 181ah
mov     [ebp+var_b0], 0ff1ah
mov     [ebp+var_b4], 41h
mov     [ebp+var_b8], 5ah
mov     [ebp+var_c], 61h
mov     [ebp+var_10], 19h
cmp     dx, ax
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_bc]
jnb     short loc_41de91
movzx   eax, dx
sub     eax, 30h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_2c]
jnb     loc_41e074
cmp     dx, word ptr [ebp+var_30]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_34]
jnb     short loc_41deb8
movzx   eax, dx
sub     eax, 660h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_38]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_3c]
jnb     short loc_41ded5
movzx   eax, dx
sub     eax, 6f0h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_40]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_44]
jnb     short loc_41def2
movzx   eax, dx
sub     eax, 966h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_48]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_4c]
jnb     short loc_41df0f
movzx   eax, dx
sub     eax, 9e6h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_50]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_54]
jnb     short loc_41df2c
movzx   eax, dx
sub     eax, 0a66h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_58]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_5c]
jnb     short loc_41df49
movzx   eax, dx
sub     eax, 0ae6h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_60]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_64]
jnb     short loc_41df66
movzx   eax, dx
sub     eax, 0b66h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_68]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_6c]
jnb     short loc_41df83
movzx   eax, dx
sub     eax, 0c66h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_70]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_74]
jnb     short loc_41dfa0
movzx   eax, dx
sub     eax, 0ce6h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_78]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_7c]
jnb     short loc_41dfbd
movzx   eax, dx
sub     eax, 0d66h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_80]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_84]
jnb     short loc_41dfdd
movzx   eax, dx
sub     eax, 0e50h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_88]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_8c]
jnb     short loc_41e000
movzx   eax, dx
sub     eax, 0ed0h
jmp     loc_41e08a
cmp     dx, word ptr [ebp+var_90]
jb      loc_41e08f
cmp     dx, word ptr [ebp+var_94]
jnb     short loc_41e020
movzx   eax, dx
sub     eax, 0f20h
jmp     short loc_41e08a
cmp     dx, word ptr [ebp+var_98]
jb      short loc_41e08f
cmp     dx, word ptr [ebp+var_9c]
jnb     short loc_41e03c
movzx   eax, dx
sub     eax, 1040h
jmp     short loc_41e08a
cmp     dx, word ptr [ebp+var_a0]
jb      short loc_41e08f
cmp     dx, word ptr [ebp+var_a4]
jnb     short loc_41e058
movzx   eax, dx
sub     eax, 17e0h
jmp     short loc_41e08a
cmp     dx, word ptr [ebp+var_a8]
jb      short loc_41e08f
cmp     dx, word ptr [ebp+var_ac]
jnb     short loc_41e08f
movzx   eax, dx
sub     eax, 1810h
jmp     short loc_41e08a
cmp     dx, word ptr [ebp+var_b0]
jnb     short loc_41e087
movzx   eax, dx
sub     eax, 0ff10h
jmp     short loc_41e08a
or      eax, 0ffffffffh
cmp     eax, 0ffffffffh
jnz     short loc_41e0c9
cmp     word ptr [ebp+var_b4], dx
ja      short loc_41e0a1
cmp     dx, word ptr [ebp+var_b8]
jbe     short loc_41e0ae
mov     ax, dx
sub     ax, word ptr [ebp+var_c]
cmp     ax, word ptr [ebp+var_10]
ja      short loc_41e0c6
mov     ax, dx
sub     ax, word ptr [ebp+var_c]
cmp     ax, word ptr [ebp+var_10]
movzx   eax, dx
ja      short loc_41e0c1
sub     eax, 20h
add     eax, 0ffffffc9h
jmp     short loc_41e0c9
or      eax, 0ffffffffh
cmp     eax, ecx
ja      short loc_41e0fb
mov     ecx, [ebp+var_18]
mov     bl, 1
cmp     ecx, esi
jz      short loc_41e0dc
mov     [ecx], al
inc     ecx
mov     [ebp+var_18], ecx
inc     [ebp+var_20]
mov     ecx, edi
call    sub_422398
mov     ecx, [ebp+var_c0]
mov     dx, ax
push    30h
mov     word ptr [ebp+var_8], dx
pop     eax
jmp     loc_41de74
mov     eax, [ebp+arg_0]
mov     eax, [eax]
mov     eax, [eax+88h]
mov     eax, [eax]
movsx   ecx, byte ptr [eax]
movzx   eax, dx
cmp     eax, ecx
jnz     loc_41e3e6
mov     ecx, edi
call    sub_422398
mov     edx, [ebp+var_18]
mov     cx, ax
mov     eax, [ebp+arg_8]
mov     esi, [ebp+var_1c]
add     eax, 8
push    30h
cmp     edx, eax
mov     word ptr [ebp+var_8], cx
pop     eax
jnz     short loc_41e161
cmp     cx, ax
jnz     short loc_41e161
mov     esi, [ebp+var_20]
mov     bl, 1
mov     ecx, edi
dec     esi
call    sub_422398
mov     cx, ax
push    30h
pop     eax
mov     word ptr [ebp+var_8], cx
cmp     cx, ax
jz      short loc_41e141
mov     edx, [ebp+var_18]
mov     [ebp+var_20], esi
mov     esi, [ebp+var_1c]
mov     edi, [ebp+var_c0]
cmp     cx, ax
jb      loc_41e382
cmp     cx, word ptr [ebp+var_bc]
jnb     short loc_41e184
movzx   eax, cx
sub     eax, 30h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_2c]
jnb     loc_41e367
cmp     cx, word ptr [ebp+var_30]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_34]
jnb     short loc_41e1ab
movzx   eax, cx
sub     eax, 660h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_38]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_3c]
jnb     short loc_41e1c8
movzx   eax, cx
sub     eax, 6f0h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_40]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_44]
jnb     short loc_41e1e5
movzx   eax, cx
sub     eax, 966h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_48]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_4c]
jnb     short loc_41e202
movzx   eax, cx
sub     eax, 9e6h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_50]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_54]
jnb     short loc_41e21f
movzx   eax, cx
sub     eax, 0a66h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_58]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_5c]
jnb     short loc_41e23c
movzx   eax, cx
sub     eax, 0ae6h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_60]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_64]
jnb     short loc_41e259
movzx   eax, cx
sub     eax, 0b66h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_68]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_6c]
jnb     short loc_41e276
movzx   eax, cx
sub     eax, 0c66h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_70]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_74]
jnb     short loc_41e293
movzx   eax, cx
sub     eax, 0ce6h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_78]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_7c]
jnb     short loc_41e2b0
movzx   eax, cx
sub     eax, 0d66h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_80]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_84]
jnb     short loc_41e2d0
movzx   eax, cx
sub     eax, 0e50h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_88]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_8c]
jnb     short loc_41e2f3
movzx   eax, cx
sub     eax, 0ed0h
jmp     loc_41e37d
cmp     cx, word ptr [ebp+var_90]
jb      loc_41e382
cmp     cx, word ptr [ebp+var_94]
jnb     short loc_41e313
movzx   eax, cx
sub     eax, 0f20h
jmp     short loc_41e37d
cmp     cx, word ptr [ebp+var_98]
jb      short loc_41e382
cmp     cx, word ptr [ebp+var_9c]
jnb     short loc_41e32f
movzx   eax, cx
sub     eax, 1040h
jmp     short loc_41e37d
cmp     cx, word ptr [ebp+var_a0]
jb      short loc_41e382
cmp     cx, word ptr [ebp+var_a4]
jnb     short loc_41e34b
movzx   eax, cx
sub     eax, 17e0h
jmp     short loc_41e37d
cmp     cx, word ptr [ebp+var_a8]
jb      short loc_41e382
cmp     cx, word ptr [ebp+var_ac]
jnb     short loc_41e382
movzx   eax, cx
sub     eax, 1810h
jmp     short loc_41e37d
cmp     cx, word ptr [ebp+var_b0]
jnb     short loc_41e37a
movzx   eax, cx
sub     eax, 0ff10h
jmp     short loc_41e37d
or      eax, 0ffffffffh
cmp     eax, 0ffffffffh
jnz     short loc_41e3bc
cmp     word ptr [ebp+var_b4], cx
ja      short loc_41e394
cmp     cx, word ptr [ebp+var_b8]
jbe     short loc_41e3a1
mov     ax, cx
sub     ax, word ptr [ebp+var_c]
cmp     ax, word ptr [ebp+var_10]
ja      short loc_41e3b9
mov     ax, cx
sub     ax, word ptr [ebp+var_c]
cmp     ax, word ptr [ebp+var_10]
movzx   eax, cx
ja      short loc_41e3b4
sub     eax, 20h
add     eax, 0ffffffc9h
jmp     short loc_41e3bc
or      eax, 0ffffffffh
cmp     eax, edi
ja      short loc_41e3e6
mov     bl, 1
cmp     edx, esi
jz      short loc_41e3cc
mov     [edx], al
inc     edx
mov     [ebp+var_18], edx
mov     ecx, [ebp+arg_4]
call    sub_422398
mov     edx, [ebp+var_18]
mov     cx, ax
push    30h
mov     word ptr [ebp+var_8], cx
pop     eax
jmp     loc_41e167
test    bl, bl
jnz     short loc_41e40c
lea     ecx, [ebp+var_cc]
call    ??r_lambda_458503e42748cab9721418e5c4cb1bff_@@qbe_nxz
test    al, al
jz      loc_41e9f9
test    bh, bh
jz      loc_41e9f9
push    2
jmp     loc_41e9fb
push    [ebp+var_8]
mov     esi, [ebp+arg_4]
mov     ecx, esi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
mov     eax, [esi+10h]
mov     ecx, esi
mov     [ebp+var_28], eax
mov     eax, [esi+14h]
mov     [ebp+var_24], eax
call    sub_422398
mov     word ptr [ebp+var_8], ax
xor     ebx, ebx
movzx   eax, ax
mov     cl, bl
cmp     eax, 45h
jz      short loc_41e450
cmp     eax, 50h
jz      short loc_41e44b
cmp     eax, 65h
jz      short loc_41e450
cmp     eax, 70h
jnz     short loc_41e456
mov     cl, [ebp+var_1]
jmp     short loc_41e456
mov     cl, [ebp+var_1]
xor     cl, 1
mov     edi, 1450h
test    cl, cl
jz      loc_41e963
mov     ecx, esi
call    sub_422398
mov     cx, ax
push    2dh
pop     eax
cmp     cx, ax
mov     word ptr [ebp+var_8], cx
push    2bh
pop     edx
setz    bh
cmp     cx, dx
jz      short loc_41e487
cmp     cx, ax
jnz     short loc_41e495
mov     ecx, esi
call    sub_422398
mov     cx, ax
mov     word ptr [ebp+var_8], cx
push    30h
xor     edx, edx
pop     eax
mov     bl, dl
cmp     cx, ax
jnz     short loc_41e4be
mov     bl, 1
mov     ecx, esi
call    sub_422398
mov     cx, ax
push    30h
pop     eax
mov     word ptr [ebp+var_8], cx
cmp     cx, ax
jz      short loc_41e4a3
xor     edx, edx
cmp     cx, ax
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_bc]
jnb     short loc_41e4d8
movzx   eax, cx
sub     eax, 30h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_2c]
jnb     loc_41e6bb
cmp     cx, word ptr [ebp+var_30]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_34]
jnb     short loc_41e4ff
movzx   eax, cx
sub     eax, 660h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_38]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_3c]
jnb     short loc_41e51c
movzx   eax, cx
sub     eax, 6f0h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_40]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_44]
jnb     short loc_41e539
movzx   eax, cx
sub     eax, 966h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_48]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_4c]
jnb     short loc_41e556
movzx   eax, cx
sub     eax, 9e6h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_50]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_54]
jnb     short loc_41e573
movzx   eax, cx
sub     eax, 0a66h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_58]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_5c]
jnb     short loc_41e590
movzx   eax, cx
sub     eax, 0ae6h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_60]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_64]
jnb     short loc_41e5ad
movzx   eax, cx
sub     eax, 0b66h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_68]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_6c]
jnb     short loc_41e5ca
movzx   eax, cx
sub     eax, 0c66h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_70]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_74]
jnb     short loc_41e5e7
movzx   eax, cx
sub     eax, 0ce6h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_78]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_7c]
jnb     short loc_41e604
movzx   eax, cx
sub     eax, 0d66h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_80]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_84]
jnb     short loc_41e624
movzx   eax, cx
sub     eax, 0e50h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_88]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_8c]
jnb     short loc_41e647
movzx   eax, cx
sub     eax, 0ed0h
jmp     loc_41e6d1
cmp     cx, word ptr [ebp+var_90]
jb      loc_41e6d6
cmp     cx, word ptr [ebp+var_94]
jnb     short loc_41e667
movzx   eax, cx
sub     eax, 0f20h
jmp     short loc_41e6d1
cmp     cx, word ptr [ebp+var_98]
jb      short loc_41e6d6
cmp     cx, word ptr [ebp+var_9c]
jnb     short loc_41e683
movzx   eax, cx
sub     eax, 1040h
jmp     short loc_41e6d1
cmp     cx, word ptr [ebp+var_a0]
jb      short loc_41e6d6
cmp     cx, word ptr [ebp+var_a4]
jnb     short loc_41e69f
movzx   eax, cx
sub     eax, 17e0h
jmp     short loc_41e6d1
cmp     cx, word ptr [ebp+var_a8]
jb      short loc_41e6d6
cmp     cx, word ptr [ebp+var_ac]
jnb     short loc_41e6d6
movzx   eax, cx
sub     eax, 1810h
jmp     short loc_41e6d1
cmp     cx, word ptr [ebp+var_b0]
jnb     short loc_41e6ce
movzx   eax, cx
sub     eax, 0ff10h
jmp     short loc_41e6d1
or      eax, 0ffffffffh
cmp     eax, 0ffffffffh
jnz     short loc_41e710
cmp     word ptr [ebp+var_b4], cx
ja      short loc_41e6e8
cmp     cx, word ptr [ebp+var_b8]
jbe     short loc_41e6f5
mov     ax, cx
sub     ax, word ptr [ebp+var_c]
cmp     ax, word ptr [ebp+var_10]
ja      short loc_41e70d
mov     ax, cx
sub     ax, word ptr [ebp+var_c]
cmp     ax, word ptr [ebp+var_10]
movzx   eax, cx
ja      short loc_41e708
sub     eax, 20h
add     eax, 0ffffffc9h
jmp     short loc_41e710
or      eax, 0ffffffffh
cmp     eax, 0ah
jnb     short loc_41e743
imul    edx, 0ah
mov     bl, 1
add     edx, eax
mov     [ebp+var_14], edx
cmp     edx, edi
jg      short loc_41e73c
mov     ecx, esi
call    sub_422398
mov     edx, [ebp+var_14]
mov     cx, ax
push    30h
mov     word ptr [ebp+var_8], cx
pop     eax
jmp     loc_41e4bb
mov     [ebp+var_14], 1451h
push    30h
pop     edx
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_bc]
jnb     short loc_41e762
movzx   eax, cx
sub     eax, edx
jmp     loc_41e8dc
mov     edx, [ebp+var_2c]
cmp     cx, dx
jnb     loc_41e8cc
mov     edx, [ebp+var_30]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_34]
jb      short loc_41e758
mov     edx, [ebp+var_38]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_3c]
jb      short loc_41e758
mov     edx, [ebp+var_40]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_44]
jb      short loc_41e758
mov     edx, [ebp+var_48]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_4c]
jb      short loc_41e758
mov     edx, [ebp+var_50]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_54]
jb      short loc_41e758
mov     edx, [ebp+var_58]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_5c]
jb      loc_41e758
mov     edx, [ebp+var_60]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_64]
jb      loc_41e758
mov     edx, [ebp+var_68]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_6c]
jb      loc_41e758
mov     edx, [ebp+var_70]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_74]
jb      loc_41e758
mov     edx, [ebp+var_78]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_7c]
jb      loc_41e758
mov     edx, [ebp+var_80]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_84]
jb      loc_41e758
mov     edx, [ebp+var_88]
cmp     cx, dx
jb      loc_41e8e1
cmp     cx, word ptr [ebp+var_8c]
jb      loc_41e758
mov     edx, [ebp+var_90]
cmp     cx, dx
jb      short loc_41e8e1
cmp     cx, word ptr [ebp+var_94]
jb      loc_41e758
mov     edx, [ebp+var_98]
cmp     cx, dx
jb      short loc_41e8e1
cmp     cx, word ptr [ebp+var_9c]
jb      loc_41e758
mov     edx, [ebp+var_a0]
cmp     cx, dx
jb      short loc_41e8e1
cmp     cx, word ptr [ebp+var_a4]
jb      loc_41e758
mov     edx, [ebp+var_a8]
cmp     cx, dx
jb      short loc_41e8e1
cmp     cx, word ptr [ebp+var_ac]
jnb     short loc_41e8e1
jmp     loc_41e758
cmp     cx, word ptr [ebp+var_b0]
jb      loc_41e758
or      eax, 0ffffffffh
cmp     eax, 0ffffffffh
jnz     short loc_41e905
cmp     word ptr [ebp+var_b4], cx
ja      short loc_41e8f3
cmp     cx, word ptr [ebp+var_b8]
jbe     short loc_41e91d
mov     edx, [ebp+var_c]
mov     ax, cx
sub     ax, dx
cmp     ax, word ptr [ebp+var_10]
jbe     short loc_41e920
or      eax, 0ffffffffh
cmp     eax, 0ah
jnb     short loc_41e937
mov     ecx, esi
call    sub_422398
mov     cx, ax
mov     word ptr [ebp+var_8], cx
jmp     loc_41e743
mov     edx, [ebp+var_c]
mov     ax, cx
sub     ax, dx
cmp     ax, word ptr [ebp+var_10]
movzx   eax, cx
ja      short loc_41e932
sub     eax, 20h
add     eax, 0ffffffc9h
jmp     short loc_41e905
test    bh, bh
jz      short loc_41e93e
neg     [ebp+var_14]
test    bl, bl
jnz     short loc_41e960
lea     ecx, [ebp+var_cc]
call    ??r_lambda_458503e42748cab9721418e5c4cb1bff_@@qbe_nxz
test    al, al
jz      loc_41e9f9
mov     ecx, esi
call    sub_422398
mov     word ptr [ebp+var_8], ax
mov     ebx, [ebp+var_14]
push    [ebp+var_8]
mov     ecx, esi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
mov     esi, [ebp+arg_8]
mov     ecx, [ebp+var_18]
lea     edx, [esi+8]
cmp     ecx, edx
jz      loc_41e405
cmp     byte ptr [ecx-1], 0
jnz     short loc_41e989
dec     ecx
cmp     ecx, edx
jnz     short loc_41e97e
cmp     ecx, edx
jz      loc_41e405
cmp     ebx, edi
jg      short loc_41e9ce
mov     edi, 0ffffebb0h
cmp     ebx, edi
jl      short loc_41e9ca
xor     eax, eax
cmp     [ebp+var_1], al
setz    al
dec     eax
and     eax, 3
inc     eax
imul    eax, [ebp+var_20]
add     ebx, eax
cmp     ebx, 1450h
jg      short loc_41e9ce
cmp     ebx, edi
jl      short loc_41e9ca
movzx   eax, [ebp+var_1]
sub     ecx, edx
mov     [esi], ebx
mov     [esi+4], ecx
jmp     short loc_41e9fc
push    8
jmp     short loc_41e9fb
push    9
jmp     short loc_41e9fb
push    [ebp+var_24]
lea     eax, [ebp+var_8]
push    [ebp+var_28]
push    edi
push    eax
call    sub_41eace
add     esp, 10h
jmp     short loc_41e9fc
push    [ebp+var_24]
lea     eax, [ebp+var_8]
push    [ebp+var_28]
push    edi
push    eax
call    sub_41ea01
jmp     short loc_41e9e2
push    7
pop     eax
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+arg_8]
push    esi
xor     esi, esi
mov     [ebp+var_8], eax
push    edi
mov     edi, [ebp+arg_4]
mov     eax, esi
mov     [ebp+var_10], edi
mov     [ebp+var_c], ebx
mov     [ebp+var_4], esi
movzx   ecx, word ptr [ebx]
cmp     cx, ds:word_405e58[eax]
jz      short loc_41ea3a
cmp     cx, ds:word_405e60[eax]
jnz     short loc_41eaaa
mov     ecx, edi
call    sub_422398
mov     cx, ax
mov     eax, [ebp+var_4]
add     eax, 2
mov     [ebx], cx
mov     [ebp+var_4], eax
cmp     eax, 6
jnz     short loc_41ea25
push    ecx
mov     ecx, edi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
mov     eax, [edi+10h]
mov     ecx, edi
mov     [ebp+arg_8], eax
mov     eax, [edi+14h]
mov     [ebp+arg_c], eax
call    sub_422398
mov     [ebx], ax
movzx   eax, word ptr [ebx]
cmp     ax, ds:word_405e68[esi]
jz      short loc_41ea88
cmp     ax, ds:word_405e74[esi]
jnz     short loc_41eab6
mov     ecx, edi
call    sub_422398
add     esi, 2
mov     [ebx], ax
cmp     esi, 0ah
jnz     short loc_41ea73
push    eax
mov     ecx, edi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
push    3
pop     eax
pop     edi
pop     esi
pop     ebx
leave
retn
lea     ecx, [ebp+var_10]
call    ??r_lambda_458503e42748cab9721418e5c4cb1bff_@@qbe_nxz
push    7
jmp     short loc_41eaa4
lea     ecx, [ebp+var_10]
call    ??r_lambda_458503e42748cab9721418e5c4cb1bff_@@qbe_nxz
xor     ecx, ecx
test    al, al
setz    cl
lea     eax, ds:3[ecx*4]
jmp     short loc_41eaa5
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_4]
lea     eax, [ebp+arg_8]
push    edi
mov     edi, [ebp+arg_0]
xor     ebx, ebx
mov     [ebp+var_c], esi
mov     [ebp+var_8], edi
mov     [ebp+var_4], eax
movzx   eax, word ptr [edi]
cmp     ax, ds:word_405e80[ebx]
jz      short loc_41eb02
cmp     ax, ds:word_405e88[ebx]
jnz     short loc_41eb52
mov     ecx, esi
call    sub_422398
add     ebx, 2
mov     [edi], ax
cmp     ebx, 6
jnz     short loc_41eaed
push    eax
mov     ecx, esi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
mov     eax, [esi+10h]
mov     ecx, esi
mov     [ebp+arg_8], eax
mov     eax, [esi+14h]
mov     [ebp+arg_c], eax
call    sub_422398
mov     [edi], ax
cmp     ax, 28h
jz      short loc_41eb61
lea     ecx, [ebp+var_c]
call    ??r_lambda_458503e42748cab9721418e5c4cb1bff_@@qbe_nxz
movzx   eax, al
neg     eax
sbb     eax, eax
and     eax, 0fffffffdh
add     eax, 7
jmp     loc_41ebfa
lea     ecx, [ebp+var_c]
call    ??r_lambda_458503e42748cab9721418e5c4cb1bff_@@qbe_nxz
push    7
jmp     loc_41ebf9
mov     ecx, esi
call    sub_422398
push    esi
push    edi
mov     [edi], ax
call    sub_41ec3f
pop     ecx
pop     ecx
test    al, al
jz      short loc_41eb87
movzx   eax, word ptr [edi]
mov     ecx, esi
push    eax
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
push    5
jmp     short loc_41ebf9
push    esi
push    edi
call    sub_41ebff
pop     ecx
pop     ecx
movzx   ecx, word ptr [edi]
test    al, al
jz      short loc_41eba3
push    ecx
mov     ecx, esi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
push    6
jmp     short loc_41ebf9
push    29h
pop     ebx
mov     eax, ecx
cmp     cx, bx
jz      short loc_41ebee
movzx   eax, cx
test    cx, cx
jz      short loc_41ebee
movzx   edx, cx
lea     eax, [edx-30h]
cmp     eax, 9
jbe     short loc_41ebda
lea     eax, [edx-61h]
cmp     eax, 19h
jbe     short loc_41ebda
lea     eax, [edx-41h]
cmp     eax, 19h
jbe     short loc_41ebda
cmp     cx, 5fh
jnz     loc_41eb38
mov     ecx, esi
call    sub_422398
mov     [edi], ax
movzx   ecx, ax
cmp     ax, bx
jnz     short loc_41ebad
jmp     short loc_41ebf7
cmp     ax, bx
jnz     loc_41eb38
push    4
pop     eax
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ebx
movzx   eax, word ptr [edi]
cmp     ax, ds:word_405ea8[esi]
jz      short loc_41ec23
cmp     ax, word ptr ds:(adind+4)[esi]
jnz     short loc_41ec38
mov     ecx, [ebp+arg_4]
call    sub_422398
add     esi, 2
mov     [edi], ax
cmp     esi, 8
jnz     short loc_41ec0e
mov     bl, 1
pop     edi
pop     esi
mov     al, bl
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ebx
movzx   eax, word ptr [edi]
cmp     ax, ds:word_405e90[esi]
jz      short loc_41ec63
cmp     ax, ds:word_405e9c[esi]
jnz     short loc_41ec78
mov     ecx, [ebp+arg_4]
call    sub_422398
add     esi, 2
mov     [edi], ax
cmp     esi, 0ah
jnz     short loc_41ec4e
mov     bl, 1
pop     edi
pop     esi
mov     al, bl
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 4ch
lea     ecx, [ebp+arg_4]
push    ebx
push    esi
call    unknown_libname_31
test    al, al
jz      short loc_41ef46
mov     ebx, [ebp+arg_24]
test    ebx, ebx
jz      short loc_41ef51
cmp     ebx, 2
jl      short loc_41ef36
cmp     ebx, 24h
jle     short loc_41ef51
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     eax, eax
mov     edx, eax
mov     ebx, eax
jmp     loc_41f501
push    [ebp+arg_0]
lea     ecx, [ebp+var_4c]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
xor     eax, eax
mov     [ebp+var_8], eax
mov     [ebp+var_14], eax
mov     eax, [ebp+arg_14]
mov     [ebp+var_3c], eax
mov     eax, [ebp+arg_18]
mov     [ebp+var_38], eax
lea     ecx, [ebp+arg_4]
call    sub_422398
movzx   esi, ax
push    8
push    esi
call    sub_413389
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_41ef70
movzx   eax, [ebp+arg_28]
mov     [ebp+var_4], eax
cmp     si, 2dh
jnz     short loc_41ef9e
or      eax, 2
mov     [ebp+var_4], eax
jmp     short loc_41efa4
cmp     si, 2bh
jnz     short loc_41efaf
lea     ecx, [ebp+arg_4]
call    sub_422398
movzx   esi, ax
push    edi
or      edi, 0ffffffffh
movzx   edx, si
mov     [ebp+var_10], 3ah
mov     eax, 0ff10h
mov     [ebp+var_18], edi
mov     [ebp+var_1c], 41h
mov     [ebp+var_20], 5ah
mov     [ebp+var_c], 19h
push    30h
pop     ecx
test    ebx, ebx
jz      short loc_41efea
cmp     ebx, 10h
jnz     loc_41f20e
cmp     si, cx
jb      loc_41f18d
cmp     si, word ptr [ebp+var_10]
jnb     short loc_41f003
movzx   eax, si
sub     eax, ecx
jmp     loc_41f189
cmp     si, ax
jnb     loc_41f173
mov     ecx, 660h
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      short loc_41eff9
mov     ecx, 6f0h
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      short loc_41eff9
mov     ecx, 966h
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      short loc_41eff9
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      short loc_41eff9
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      short loc_41eff9
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_41eff9
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_41eff9
mov     ecx, 0c66h
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_41eff9
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_41eff9
lea     ecx, [eax+76h]
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_41eff9
mov     ecx, 0e50h
cmp     si, cx
jb      loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_41eff9
lea     ecx, [eax+76h]
cmp     si, cx
jb      short loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_41eff9
add     ecx, 50h
cmp     si, cx
jb      short loc_41f18d
add     eax, 50h
cmp     si, ax
jb      loc_41eff9
mov     ecx, 1040h
cmp     si, cx
jb      short loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_41eff9
mov     ecx, 17e0h
cmp     si, cx
jb      short loc_41f18d
lea     eax, [ecx+0ah]
cmp     si, ax
jb      loc_41eff9
add     ecx, 30h
cmp     si, cx
jb      short loc_41f18d
add     eax, 30h
cmp     si, ax
jnb     short loc_41f18d
jmp     loc_41eff9
mov     eax, 0ff1ah
cmp     si, ax
jnb     short loc_41f187
movzx   eax, si
sub     eax, 0ff10h
jmp     short loc_41f189
mov     eax, edi
cmp     eax, edi
jnz     short loc_41f1bf
cmp     word ptr [ebp+var_1c], si
ja      short loc_41f1a1
cmp     si, word ptr [ebp+var_20]
ja      short loc_41f1a1
lea     eax, [edx-61h]
movzx   ecx, ax
jmp     short loc_41f1ad
lea     eax, [esi-61h]
movzx   ecx, ax
cmp     ax, word ptr [ebp+var_c]
ja      short loc_41f1bd
mov     eax, edx
cmp     cx, word ptr [ebp+var_c]
ja      short loc_41f1b8
add     eax, 0ffffffe0h
add     eax, 0ffffffc9h
jmp     short loc_41f1bf
mov     eax, edi
test    eax, eax
jz      short loc_41f1cf
test    ebx, ebx
jnz     short loc_41f20e
push    0ah
pop     ebx
mov     [ebp+arg_24], ebx
jmp     short loc_41f20e
lea     ecx, [ebp+arg_4]
call    sub_422398
movzx   eax, ax
cmp     eax, 78h
jz      short loc_41f1f9
cmp     eax, 58h
jz      short loc_41f1f9
test    ebx, ebx
jnz     short loc_41f1ee
push    8
pop     ebx
mov     [ebp+arg_24], ebx
push    eax
lea     ecx, [ebp+arg_4]
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
jmp     short loc_41f20e
test    ebx, ebx
jnz     short loc_41f203
push    10h
pop     ebx
mov     [ebp+arg_24], ebx
lea     ecx, [ebp+arg_4]
call    sub_422398
movzx   esi, ax
mov     eax, ebx
cdq
push    ebx
mov     ecx, edx
mov     [ebp+var_34], eax
push    ecx
push    eax
push    edi
push    edi
mov     [ebp+var_30], ecx
call    __aulldvrm
mov     [ebp+var_28], ebx
pop     ebx
mov     [ebp+var_2c], ecx
mov     [ebp+var_10], eax
mov     [ebp+var_24], edx
push    30h
pop     edx
movzx   ecx, si
cmp     si, dx
jb      loc_41f3cd
push    3ah
pop     ebx
cmp     si, bx
jb      loc_41f3bf
mov     edx, 0ff10h
cmp     si, dx
jnb     loc_41f3b5
mov     edx, 660h
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      loc_41f3bf
mov     edx, 6f0h
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      loc_41f3bf
mov     edx, 966h
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      loc_41f3bf
lea     edx, [ebx+76h]
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      loc_41f3bf
lea     edx, [ebx+76h]
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      loc_41f3bf
lea     edx, [ebx+76h]
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      loc_41f3bf
lea     edx, [ebx+76h]
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      loc_41f3bf
mov     edx, 0c66h
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      loc_41f3bf
lea     edx, [ebx+76h]
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      loc_41f3bf
lea     edx, [ebx+76h]
cmp     si, dx
jb      loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      short loc_41f3bf
mov     edx, 0e50h
cmp     si, dx
jb      short loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      short loc_41f3bf
lea     edx, [ebx+76h]
cmp     si, dx
jb      short loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      short loc_41f3bf
add     edx, 50h
cmp     si, dx
jb      short loc_41f3cd
add     ebx, 50h
cmp     si, bx
jb      short loc_41f3bf
mov     edx, 1040h
cmp     si, dx
jb      short loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      short loc_41f3bf
mov     edx, 17e0h
cmp     si, dx
jb      short loc_41f3cd
lea     ebx, [edx+0ah]
cmp     si, bx
jb      short loc_41f3bf
add     edx, 30h
cmp     si, dx
jb      short loc_41f3cd
add     ebx, 30h
cmp     si, bx
jnb     short loc_41f3cd
jmp     short loc_41f3bf
mov     ebx, 0ff1ah
cmp     si, bx
jnb     short loc_41f3c4
movzx   edi, si
sub     edi, edx
or      edx, 0ffffffffh
cmp     edi, edx
jnz     short loc_41f3fd
or      edi, edx
cmp     word ptr [ebp+var_1c], si
ja      short loc_41f3d9
cmp     si, word ptr [ebp+var_20]
jbe     short loc_41f3e2
lea     eax, [esi-61h]
cmp     ax, word ptr [ebp+var_c]
ja      short loc_41f3f3
lea     eax, [esi-61h]
mov     edi, ecx
cmp     ax, word ptr [ebp+var_c]
ja      short loc_41f3f0
add     edi, 0ffffffe0h
add     edi, 0ffffffc9h
mov     eax, [ebp+var_10]
or      edx, 0ffffffffh
cmp     edi, edx
jz      short loc_41f46f
cmp     edi, [ebp+arg_24]
jnb     short loc_41f46f
mov     ecx, [ebp+var_4]
mov     ebx, [ebp+var_14]
or      ecx, 8
mov     esi, [ebp+var_24]
mov     edx, [ebp+var_8]
mov     [ebp+var_4], ecx
cmp     ebx, esi
jb      short loc_41f43e
ja      short loc_41f41e
cmp     edx, eax
jb      short loc_41f43e
cmp     edx, eax
jnz     short loc_41f436
cmp     ebx, esi
jnz     short loc_41f436
xor     eax, eax
mov     esi, eax
cmp     eax, [ebp+var_28]
jb      short loc_41f440
ja      short loc_41f436
cmp     edi, [ebp+var_2c]
jbe     short loc_41f440
or      ecx, 4
mov     [ebp+var_4], ecx
jmp     short loc_41f459
xor     esi, esi
push    ebx
push    edx
push    [ebp+var_30]
push    [ebp+var_34]
call    __allmul
add     eax, edi
mov     ebx, edx
mov     [ebp+var_8], eax
adc     ebx, esi
mov     [ebp+var_14], ebx
lea     ecx, [ebp+arg_4]
call    sub_422398
movzx   esi, ax
or      edi, 0ffffffffh
mov     eax, [ebp+var_10]
jmp     loc_41f230
push    esi
lea     ecx, [ebp+arg_4]
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@_w@__crt_stdio_input@@@__crt_strtox@@qaex_w@z
mov     eax, [ebp+var_4]
pop     edi
test    al, 8
jnz     short loc_41f497
push    [ebp+var_38]
lea     ecx, [ebp+arg_4]
push    [ebp+var_3c]
call    unknown_libname_29
xor     eax, eax
mov     [ebp+var_18], eax
mov     ebx, eax
jmp     short loc_41f4db
mov     ebx, [ebp+var_14]
mov     esi, [ebp+var_8]
push    ebx
push    esi
push    eax
call    sub_415840
add     esp, 0ch
test    al, al
jz      short loc_41f4e0
call    __errno
mov     dword ptr [eax], 22h
mov     eax, [ebp+var_4]
test    al, 1
jnz     short loc_41f4c7
or      eax, 0ffffffffh
mov     esi, eax
mov     ebx, eax
jmp     short loc_41f4ed
test    al, 2
jz      short loc_41f4d6
and     [ebp+var_18], 0
mov     ebx, 80000000h
jmp     short loc_41f4db
mov     ebx, 7fffffffh
mov     edx, [ebp+var_18]
jmp     short loc_41f4ef
test    byte ptr [ebp+var_4], 2
jz      short loc_41f4ed
neg     esi
adc     ebx, 0
neg     ebx
mov     edx, esi
cmp     [ebp+var_40], 0
jz      short loc_41f4ff
mov     eax, [ebp+var_4c]
and     dword ptr [eax+350h], 0fffffffdh
xor     eax, eax
mov     esi, [ebp+arg_1c]
test    esi, esi
jz      short loc_41f512
mov     ecx, [ebp+arg_14]
or      ecx, [ebp+arg_18]
jnz     short loc_41f512
mov     [esi], al
mov     eax, edx
mov     edx, ebx
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
push    edi
cmp     [esi+30h], bl
jnz     short loc_41f636
add     dword ptr [esi+54h], 4
mov     ecx, [esi+54h]
mov     ebx, [ecx-4]
test    ebx, ebx
jnz     short loc_41f621
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
pop     edi
pop     esi
pop     ebx
leave
retn    8
mov     eax, [esi]
and     eax, 1
or      eax, 0
jz      short loc_41f636
lea     eax, [ecx+4]
mov     [esi+54h], eax
mov     edi, [eax-4]
jmp     short loc_41f639
or      edi, 0ffffffffh
test    edi, edi
jnz     short loc_41f65e
mov     eax, [esi]
and     eax, 4
or      eax, edi
jz      short loc_41f651
lea     ecx, [esi+8]
call    ?get@?$string_input_adapter@_w@__crt_stdio_input@@qaegxz
mov     byte ptr [ebx], 0
call    __errno
mov     dword ptr [eax], 0ch
jmp     short loc_41f618
cmp     [ebp+arg_0], 0
mov     eax, [esi+38h]
mov     [ebp+var_10], eax
mov     eax, [esi+3ch]
mov     [ebp+var_14], eax
mov     [ebp+var_1c], ebx
mov     [ebp+var_c], edi
jz      short loc_41f681
cmp     edi, 0ffffffffh
jz      short loc_41f681
lea     eax, [edi-1]
mov     [ebp+var_c], eax
xor     edx, edx
xor     ecx, ecx
mov     eax, [ebp+var_10]
or      eax, [ebp+var_14]
mov     [ebp+var_4], ecx
mov     [ebp+var_8], edx
jz      short loc_41f69d
cmp     edx, [ebp+var_10]
jnz     short loc_41f69d
cmp     ecx, [ebp+var_14]
jz      short loc_41f70b
lea     ecx, [esi+8]
call    ?get@?$string_input_adapter@_w@__crt_stdio_input@@qaegxz
movzx   eax, ax
mov     ecx, esi
push    eax
push    [ebp+arg_0]
mov     dword ptr [ebp+widecharstr], eax
call    sub_42241f
test    al, al
jz      short loc_41f6fa
cmp     byte ptr [esi+30h], 0
jnz     short loc_41f6de
cmp     [ebp+var_c], 0
jz      short loc_41f6ec
push    dword ptr [ebp+widecharstr]
lea     eax, [ebp+var_c]
mov     ecx, esi
push    eax
lea     eax, [ebp+var_1c]
push    eax
push    edi
push    ebx
call    unknown_libname_33
test    al, al
jz      short loc_41f705
mov     edx, [ebp+var_8]
mov     ecx, [ebp+var_4]
add     edx, 1
adc     ecx, 0
jmp     short loc_41f685
cmp     edi, 0ffffffffh
jz      loc_41f651
jmp     loc_41f64e
push    dword ptr [ebp+widecharstr]
lea     ecx, [esi+8]
call    ?unget@?$string_input_adapter@_w@__crt_stdio_input@@qaexg@z
mov     edx, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     eax, edx
or      eax, ecx
jz      loc_41f618
cmp     [ebp+arg_0], 0
jnz     short loc_41f733
cmp     edx, [ebp+var_10]
jnz     short loc_41f725
cmp     ecx, [ebp+var_14]
jz      short loc_41f733
mov     eax, [esi]
and     eax, 4
or      eax, 0
jz      loc_41f618
cmp     byte ptr [esi+30h], 0
jnz     short loc_41f745
cmp     [ebp+arg_0], 0
jz      short loc_41f745
mov     ecx, [ebp+var_1c]
mov     byte ptr [ecx], 0
mov     al, 1
jmp     loc_41f61a
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
push    edi
cmp     [esi+30h], bl
jnz     short loc_41f79c
add     dword ptr [esi+54h], 4
mov     ecx, [esi+54h]
mov     ebx, [ecx-4]
test    ebx, ebx
jnz     short loc_41f787
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
pop     edi
pop     esi
pop     ebx
leave
retn    8
mov     eax, [esi]
and     eax, 1
or      eax, 0
jz      short loc_41f79c
lea     eax, [ecx+4]
mov     [esi+54h], eax
mov     edi, [eax-4]
jmp     short loc_41f79f
or      edi, 0ffffffffh
test    edi, edi
jnz     short loc_41f7c6
mov     eax, [esi]
and     eax, 4
or      eax, edi
jz      short loc_41f7b9
lea     ecx, [esi+8]
call    ?get@?$string_input_adapter@_w@__crt_stdio_input@@qaegxz
xor     eax, eax
mov     [ebx], ax
call    __errno
mov     dword ptr [eax], 0ch
jmp     short loc_41f77e
cmp     [ebp+arg_0], 0
mov     eax, [esi+38h]
mov     [ebp+var_10], eax
mov     eax, [esi+3ch]
mov     [ebp+var_14], eax
mov     [ebp+var_18], ebx
mov     [ebp+var_4], edi
jz      short loc_41f7e9
cmp     edi, 0ffffffffh
jz      short loc_41f7e9
lea     eax, [edi-1]
mov     [ebp+var_4], eax
xor     edx, edx
xor     ecx, ecx
mov     eax, [ebp+var_10]
or      eax, [ebp+var_14]
mov     [ebp+var_8], ecx
mov     [ebp+var_c], edx
jz      short loc_41f805
cmp     edx, [ebp+var_10]
jnz     short loc_41f805
cmp     ecx, [ebp+var_14]
jz      short loc_41f870
lea     ecx, [esi+8]
call    ?get@?$string_input_adapter@_w@__crt_stdio_input@@qaegxz
movzx   eax, ax
mov     ecx, esi
push    eax
push    [ebp+arg_0]
mov     [ebp+var_1c], eax
call    sub_42241f
test    al, al
jz      short loc_41f85e
cmp     byte ptr [esi+30h], 0
jnz     short loc_41f842
mov     eax, [ebp+var_4]
test    eax, eax
jz      short loc_41f850
mov     ecx, [ebp+var_18]
mov     edx, [ebp+var_1c]
mov     [ecx], dx
add     ecx, 2
dec     eax
mov     [ebp+var_18], ecx
mov     [ebp+var_4], eax
mov     edx, [ebp+var_c]
mov     ecx, [ebp+var_8]
add     edx, 1
adc     ecx, 0
jmp     short loc_41f7ed
cmp     edi, 0ffffffffh
jz      loc_41f7b9
jmp     loc_41f7b4
mov     edx, [ebp+var_1c]
lea     ecx, [esi+8]
push    edx
call    ?unget@?$string_input_adapter@_w@__crt_stdio_input@@qaexg@z
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_c]
mov     eax, edx
or      eax, ecx
jz      loc_41f77e
cmp     [ebp+arg_0], 0
jnz     short loc_41f898
cmp     edx, [ebp+var_10]
jnz     short loc_41f88a
cmp     ecx, [ebp+var_14]
jz      short loc_41f898
mov     eax, [esi]
and     eax, 4
or      eax, 0
jz      loc_41f77e
cmp     byte ptr [esi+30h], 0
jnz     short loc_41f8ac
cmp     [ebp+arg_0], 0
jz      short loc_41f8ac
mov     eax, [ebp+var_18]
xor     ecx, ecx
mov     [eax], cx
mov     al, 1
jmp     loc_41f780
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
xor     edx, edx
mov     [ecx], eax
mov     eax, [ebp+arg_4]
mov     [ecx+4], eax
mov     eax, [ebp+arg_8]
mov     [ecx+8], eax
xor     eax, eax
mov     [ecx+14h], eax
mov     eax, ecx
mov     [ecx+0ch], edx
mov     [ecx+34h], edx
mov     [ecx+10h], edx
mov     [ecx+18h], dl
mov     [ecx+20h], edx
mov     [ecx+24h], edx
mov     [ecx+28h], edx
mov     [ecx+2ch], dl
mov     [ecx+30h], edx
pop     ebp
retn    0ch
mov     edi, edi
push    esi
mov     esi, ecx
xor     ecx, ecx
cmp     [esi+0ch], ecx
jnz     short loc_41fa67
xor     eax, eax
mov     [esi+10h], ecx
mov     [esi+14h], eax
mov     eax, [esi+8]
mov     [esi+18h], cl
mov     [esi+20h], ecx
mov     [esi+24h], ecx
mov     [esi+28h], ecx
mov     [esi+2ch], cl
mov     [esi+30h], ecx
movzx   eax, word ptr [eax]
test    ax, ax
jnz     short loc_41fa6b
mov     dword ptr [esi+10h], 1
xor     al, al
pop     esi
retn
push    8
push    eax
call    sub_413389
pop     ecx
pop     ecx
mov     ecx, [esi+8]
test    eax, eax
jz      short loc_41faa4
mov     dword ptr [esi+10h], 2
movzx   eax, word ptr [ecx]
jmp     short loc_41fa92
add     dword ptr [esi+8], 2
mov     eax, [esi+8]
movzx   eax, word ptr [eax]
push    8
push    eax
call    sub_413389
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_41fa88
mov     al, 1
pop     esi
retn
push    25h
pop     edx
cmp     [ecx], dx
jnz     short loc_41fb0c
lea     eax, [ecx+2]
cmp     [eax], dx
jz      short loc_41fb0c
mov     ecx, esi
mov     dword ptr [esi+10h], 4
mov     [esi+8], eax
call    ?scan_optional_assignment_suppressor@?$format_string_parser@_w@__crt_stdio_input@@aaexxz
mov     ecx, esi
call    ?scan_optional_field_width@?$format_string_parser@_w@__crt_stdio_input@@aae_nxz
test    al, al
jz      short loc_41fa67
mov     ecx, esi
call    sub_422b50
mov     ecx, esi
call    ?scan_optional_wide_modifier@?$format_string_parser@_w@__crt_stdio_input@@aaexxz
mov     ecx, esi
call    sub_4227b7
test    al, al
jz      loc_41fa67
imul    ecx, [esi+30h], 0ch
mov     eax, [esi+28h]
cmp     ds:byte_405de0[ecx+eax], 0
jnz     short loc_41faa0
push    16h
mov     ecx, esi
call    ?reset_token_state_for_error@?$format_string_parser@_w@__crt_stdio_input@@aaexh@z
jmp     loc_41fa67
mov     dword ptr [esi+10h], 3
mov     ax, [ecx]
mov     [esi+14h], ax
xor     eax, eax
cmp     [ecx], dx
setz    al
lea     eax, ds:2[eax*2]
add     eax, ecx
mov     [esi+8], eax
jmp     loc_41faa0
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
cmp     byte ptr [ecx+4], 0
jz      short loc_41fba7
call    ?as_double@floating_point_value@__crt_strtox@@qbeaanxz
mov     ecx, eax
movzx   eax, [ebp+arg_0]
cdq
shl     eax, 1fh
or      eax, 7ff00000h
and     dword ptr [ecx], 0
mov     [ecx+4], eax
pop     ebp
retn
call    ?as_float@floating_point_value@__crt_strtox@@qbeaamxz
movzx   ecx, [ebp+arg_0]
shl     ecx, 1fh
or      ecx, 7f800000h
mov     [eax], ecx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 24h
push    ebx
push    esi
mov     esi, [ebp+arg_4]
xor     ebx, ebx
push    edi
mov     edi, [ebp+arg_0]
cmp     esi, ebx
ja      short loc_41fbe8
cmp     edi, 0ffffffffh
ja      short loc_41fbe8
bsr     eax, edi
mov     [ebp+var_24], ebx
jz      short loc_41fbe4
inc     eax
jmp     short loc_41fbf8
mov     eax, ebx
jmp     short loc_41fbf8
bsr     eax, esi
mov     [ebp+var_24], ebx
jz      short loc_41fbf3
inc     eax
jmp     short loc_41fbf5
mov     eax, ebx
add     eax, 20h
mov     ecx, [ebp+arg_14]
xor     edx, edx
mov     cl, [ecx+4]
test    cl, cl
mov     [ebp+var_1], cl
mov     ecx, [ebp+arg_8]
setz    dl
dec     edx
and     edx, 1dh
add     edx, 18h
sub     edx, eax
xor     eax, eax
sub     ecx, edx
mov     [ebp+var_c], edx
cmp     [ebp+var_1], al
mov     [ebp+var_8], ecx
setz    al
dec     eax
and     eax, 380h
add     eax, 7fh
mov     [ebp+var_18], eax
cmp     ecx, eax
jg      loc_41fea8
xor     eax, eax
cmp     [ebp+var_1], al
setz    al
dec     eax
and     eax, 0fffffc80h
add     eax, 0ffffff82h
cmp     ecx, eax
jge     loc_41fd8f
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+var_18]
dec     eax
add     eax, ecx
neg     ecx
mov     [ebp+var_18], eax
mov     [ebp+var_8], ecx
test    eax, eax
jns     loc_41fd87
neg     eax
mov     [ebp+var_14], eax
cmp     eax, 40h
jnb     loc_41fd73
lea     ecx, [eax-1]
xor     edx, edx
xor     eax, eax
inc     eax
call    __allshl
mov     [ebp+var_1c], eax
mov     ecx, edx
add     eax, 0ffffffffh
mov     [ebp+var_20], ecx
mov     [ebp+var_24], eax
adc     ecx, 0ffffffffh
xor     eax, eax
mov     [ebp+var_10], ecx
inc     eax
mov     ecx, [ebp+var_14]
xor     edx, edx
call    __allshl
and     eax, edi
mov     [ebp+var_3], 1
and     edx, esi
or      eax, edx
mov     edx, edi
mov     eax, esi
jnz     short loc_41fcb9
mov     [ebp+var_3], bl
and     eax, [ebp+var_20]
mov     ecx, edx
and     ecx, [ebp+var_1c]
or      ecx, eax
jz      short loc_41fccc
mov     cl, 1
mov     [ebp+var_1], cl
jmp     short loc_41fcd1
mov     cl, bl
mov     [ebp+var_1], bl
cmp     [ebp+arg_10], bl
jz      short loc_41fcea
mov     eax, [ebp+var_24]
and     [ebp+var_10], esi
and     eax, edx
or      eax, [ebp+var_10]
jnz     short loc_41fcea
mov     al, bl
mov     [ebp+var_2], bl
jmp     short loc_41fcef
mov     al, 1
mov     [ebp+var_2], al
test    cl, cl
jnz     short loc_41fcf7
test    al, al
jz      short loc_41fd2c
call    _fegetround
test    eax, eax
jz      short loc_41fd1b
cmp     eax, 100h
jz      short loc_41fd16
cmp     eax, 200h
jnz     short loc_41fd2c
mov     bl, [ebp+arg_c]
xor     bl, 1
jmp     short loc_41fd2c
mov     bl, [ebp+arg_c]
jmp     short loc_41fd2c
cmp     [ebp+var_1], bl
jz      short loc_41fd2c
cmp     [ebp+var_2], bl
jnz     short loc_41fd2a
cmp     [ebp+var_3], bl
jz      short loc_41fd2c
mov     bl, 1
mov     ecx, [ebp+var_14]
mov     eax, edi
mov     edx, esi
call    __aullshr
mov     edi, eax
mov     esi, edx
movzx   eax, bl
cdq
add     edi, eax
mov     eax, edi
adc     esi, edx
or      eax, esi
jz      short loc_41fd73
mov     ecx, [ebp+arg_14]
call    ?denormal_mantissa_mask@floating_point_value@__crt_strtox@@qbe_kxz
cmp     esi, edx
jb      loc_41fecf
ja      short loc_41fd64
cmp     edi, eax
jbe     loc_41fecf
mov     ebx, [ebp+arg_8]
sub     ebx, [ebp+var_18]
sub     ebx, [ebp+var_c]
dec     ebx
jmp     loc_41fed2
push    [ebp+arg_14]
push    dword ptr [ebp+arg_c]
call    sub_4200a6
pop     ecx
pop     ecx
push    2
jmp     loc_41feb7
mov     ecx, [ebp+var_18]
jmp     loc_41fec2
test    edx, edx
jns     loc_41febd
neg     edx
mov     [ebp+var_c], edx
cmp     edx, 40h
jb      short loc_41fdaa
mov     edi, ebx
mov     esi, ebx
jmp     loc_41fe74
xor     eax, eax
lea     ecx, [edx-1]
inc     eax
xor     edx, edx
call    __allshl
mov     ecx, [ebp+var_c]
mov     [ebp+var_24], eax
add     eax, 0ffffffffh
mov     [ebp+var_20], edx
adc     edx, 0ffffffffh
mov     [ebp+var_1c], eax
xor     eax, eax
mov     [ebp+var_10], edx
inc     eax
xor     edx, edx
call    __allshl
and     eax, edi
mov     [ebp+var_1], 1
and     edx, esi
or      eax, edx
mov     edx, edi
mov     eax, esi
jnz     short loc_41fde9
mov     [ebp+var_1], bl
and     eax, [ebp+var_20]
mov     ecx, edx
and     ecx, [ebp+var_24]
or      ecx, eax
jz      short loc_41fdfc
mov     cl, 1
mov     [ebp+var_3], cl
jmp     short loc_41fe01
mov     cl, bl
mov     [ebp+var_3], bl
cmp     [ebp+arg_10], bl
jz      short loc_41fe1a
mov     eax, [ebp+var_1c]
and     [ebp+var_10], esi
and     eax, edx
or      eax, [ebp+var_10]
jnz     short loc_41fe1a
mov     al, bl
mov     [ebp+var_2], bl
jmp     short loc_41fe1f
mov     al, 1
mov     [ebp+var_2], al
test    cl, cl
jnz     short loc_41fe27
test    al, al
jz      short loc_41fe5c
call    _fegetround
test    eax, eax
jz      short loc_41fe4b
cmp     eax, 100h
jz      short loc_41fe46
cmp     eax, 200h
jnz     short loc_41fe5c
mov     bl, [ebp+arg_c]
xor     bl, 1
jmp     short loc_41fe5c
mov     bl, [ebp+arg_c]
jmp     short loc_41fe5c
cmp     [ebp+var_3], bl
jz      short loc_41fe5c
cmp     [ebp+var_2], bl
jnz     short loc_41fe5a
cmp     [ebp+var_1], bl
jz      short loc_41fe5c
mov     bl, 1
mov     ecx, [ebp+var_c]
mov     eax, edi
mov     edx, esi
call    __aullshr
mov     edi, eax
mov     esi, edx
movzx   eax, bl
cdq
add     edi, eax
adc     esi, edx
mov     ecx, [ebp+arg_14]
call    ?normal_mantissa_mask@floating_point_value@__crt_strtox@@qbe_kxz
cmp     esi, edx
jb      short loc_41fecf
ja      short loc_41fe86
cmp     edi, eax
jbe     short loc_41fecf
mov     ecx, [ebp+arg_14]
xor     eax, eax
mov     ebx, [ebp+var_8]
shrd    edi, esi, 1
shr     esi, 1
inc     ebx
cmp     [ecx+4], al
setz    al
dec     eax
and     eax, 380h
add     eax, 7fh
cmp     ebx, eax
jle     short loc_41fed2
push    [ebp+arg_14]
push    dword ptr [ebp+arg_c]
call    sub_41fb7d
pop     ecx
pop     ecx
push    3
pop     eax
pop     edi
pop     esi
pop     ebx
leave
retn
jle     short loc_41fecf
mov     ecx, [ebp+var_c]
mov     edx, esi
mov     eax, edi
call    __allshl
mov     esi, edx
mov     edi, eax
mov     ebx, [ebp+var_8]
mov     ecx, [ebp+arg_14]
call    ?denormal_mantissa_mask@floating_point_value@__crt_strtox@@qbe_kxz
and     edi, eax
and     esi, edx
mov     eax, [ebp+arg_14]
mov     ecx, eax
cmp     byte ptr [eax+4], 0
jz      short loc_41fefc
call    ?as_double@floating_point_value@__crt_strtox@@qbeaanxz
push    eax
push    esi
push    edi
push    ebx
push    dword ptr [ebp+arg_c]
call    ??$assemble_floating_point_value_t@n@__crt_strtox@@ya?aw4sld_status@@_nh_kaan@z
jmp     short loc_41ff0d
call    ?as_float@floating_point_value@__crt_strtox@@qbeaamxz
push    eax
push    esi
push    edi
push    ebx
push    dword ptr [ebp+arg_c]
call    ??$assemble_floating_point_value_t@m@__crt_strtox@@ya?aw4sld_status@@_nh_kaam@z
add     esp, 14h
jmp     short loc_41feb8
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0b2ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_4]
xor     eax, eax
mov     edx, [ebp+arg_0]
push    ebx
push    esi
cmp     [ecx+4], al
mov     ebx, [edx]
setz    al
mov     [ebp+var_948], edx
dec     eax
mov     [ebp+var_950], ecx
and     eax, 1dh
add     eax, 19h
mov     [ebp+var_94c], eax
push    edi
test    ebx, ebx
jns     short loc_420122
xor     ebx, ebx
mov     eax, [edx+4]
mov     ecx, ebx
cmp     ebx, eax
jb      short loc_42012d
mov     ecx, eax
sub     ebx, ecx
lea     edi, [edx+8]
add     eax, 8
mov     [ebp+var_938], ebx
add     ecx, 8
mov     [ebp+var_93c], edi
add     ecx, edx
add     eax, edx
mov     [ebp+var_954], ecx
xor     ebx, ebx
mov     [ebp+var_958], eax
xor     esi, esi
sub     eax, ecx
mov     [ebp+var_918], ebx
xor     ecx, ecx
mov     [ebp+var_91c], eax
mov     [ebp+var_1d4], ebx
mov     [ebp+var_920], esi
cmp     edi, [ebp+var_954]
jz      loc_4207e3
cmp     ecx, 9
jnz     loc_42028d
test    ebx, ebx
jz      loc_420217
xor     ecx, ecx
mov     edi, 3b9aca00h
xor     esi, esi
mov     eax, [ebp+esi*4+destination]
mul     edi
add     eax, ecx
mov     [ebp+esi*4+destination], eax
adc     edx, 0
inc     esi
mov     ecx, edx
cmp     esi, ebx
jnz     short loc_42019a
mov     edi, [ebp+var_93c]
test    ecx, ecx
jz      short loc_42020b
mov     eax, [ebp+var_1d4]
cmp     eax, 73h
jnb     short loc_4201e1
mov     [ebp+eax*4+destination], ecx
mov     ebx, [ebp+var_1d4]
inc     ebx
mov     [ebp+var_1d4], ebx
jmp     short loc_420211
xor     eax, eax
push    eax
mov     [ebp+var_914], eax
mov     [ebp+var_1d4], eax
lea     eax, [ebp+dst]
push    eax
lea     eax, [ebp+destination]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
mov     ebx, [ebp+var_1d4]
mov     esi, [ebp+var_920]
test    esi, esi
jz      short loc_420289
xor     edx, edx
test    ebx, ebx
jz      short loc_420239
xor     eax, eax
add     [ebp+edx*4+destination], esi
mov     ebx, [ebp+var_1d4]
adc     eax, eax
inc     edx
mov     esi, eax
cmp     edx, ebx
jnz     short loc_420221
test    esi, esi
jz      short loc_420289
cmp     ebx, 73h
jnb     short loc_420258
mov     [ebp+ebx*4+destination], esi
mov     ebx, [ebp+var_1d4]
inc     ebx
mov     [ebp+var_1d4], ebx
jmp     short loc_420289
and     [ebp+var_914], 0
lea     eax, [ebp+dst]
and     [ebp+var_1d4], 0
push    0
push    eax
lea     eax, [ebp+destination]
push    1cch
push    eax
call    _memcpy_s
mov     ebx, [ebp+var_1d4]
add     esp, 10h
xor     esi, esi
xor     ecx, ecx
movzx   eax, byte ptr [edi]
imul    esi, 0ah
add     esi, eax
inc     ecx
inc     edi
mov     [ebp+var_920], esi
mov     [ebp+var_93c], edi
cmp     edi, [ebp+var_954]
jnz     loc_420180
mov     [ebp+var_918], ebx
test    ecx, ecx
jz      loc_4207e7
mov     eax, ecx
xor     edx, edx
push    0ah
pop     ecx
div     ecx
mov     [ebp+var_930], eax
mov     ecx, edx
mov     [ebp+var_934], ecx
test    eax, eax
jz      loc_420678
cmp     eax, 26h
jbe     short loc_4202e4
push    26h
pop     eax
movzx   ecx, ds:byte_405bc6[eax*4]
movzx   esi, ds:byte_405bc7[eax*4]
mov     edi, ecx
mov     [ebp+var_928], eax
shl     edi, 2
push    edi
lea     eax, [esi+ecx]
mov     [ebp+var_914], eax
lea     eax, [ebp+dst]
push    0
push    eax
call    _memset
mov     eax, esi
shl     eax, 2
push    eax
mov     eax, [ebp+var_928]
movzx   eax, ds:word_405bc4[eax*4]
lea     eax, dword_4052c0[eax*4]
push    eax
lea     eax, [ebp+dst]
add     eax, edi
push    eax
call    _memmove
mov     eax, [ebp+var_914]
xor     ecx, ecx
inc     ecx
add     esp, 18h
cmp     eax, ecx
ja      loc_42042a
mov     esi, [ebp+dst]
test    esi, esi
jnz     short loc_4203a2
xor     eax, eax
push    eax
mov     [ebp+var_574], eax
mov     [ebp+var_1d4], eax
lea     eax, [ebp+source]
push    eax
push    1cch
lea     eax, [ebp+destination]
push    eax
call    _memcpy_s
add     esp, 10h
mov     ecx, [ebp+var_1d4]
mov     al, 1
mov     [ebp+var_918], ecx
mov     ebx, [ebp+var_918]
jmp     loc_420656
cmp     esi, ecx
jnz     short loc_4203aa
mov     al, cl
jmp     short loc_420397
test    ebx, ebx
jz      short loc_4203a6
xor     ecx, ecx
xor     edi, edi
mov     eax, esi
mul     [ebp+edi*4+destination]
add     eax, ecx
mov     [ebp+edi*4+destination], eax
adc     edx, 0
inc     edi
mov     ecx, edx
cmp     edi, ebx
jnz     short loc_4203b2
test    ecx, ecx
jz      short loc_420389
mov     eax, [ebp+var_1d4]
cmp     eax, 73h
jnb     short loc_4203f3
mov     [ebp+eax*4+destination], ecx
mov     ecx, [ebp+var_1d4]
inc     ecx
mov     [ebp+var_1d4], ecx
jmp     short loc_42038f
xor     ebx, ebx
lea     eax, [ebp+dst]
push    ebx
push    eax
lea     eax, [ebp+destination]
mov     [ebp+var_914], ebx
push    1cch
push    eax
mov     [ebp+var_1d4], ebx
call    _memcpy_s
mov     ecx, [ebp+var_1d4]
add     esp, 10h
mov     al, bl
jmp     loc_420391
cmp     ebx, ecx
ja      loc_4204de
mov     ebx, [ebp+destination]
mov     esi, 1cch
mov     [ebp+var_1d4], eax
shl     eax, 2
push    eax
lea     eax, [ebp+dst]
push    eax
lea     eax, [ebp+destination]
push    esi
push    eax
call    _memcpy_s
add     esp, 10h
xor     eax, eax
test    ebx, ebx
jnz     short loc_42047e
push    eax
mov     [ebp+var_914], eax
mov     [ebp+var_1d4], eax
lea     eax, [ebp+dst]
push    eax
push    esi
jmp     loc_42037a
mov     ecx, [ebp+var_1d4]
inc     eax
mov     [ebp+var_918], ecx
cmp     ebx, eax
jz      loc_420397
test    ecx, ecx
jz      loc_420397
xor     esi, esi
xor     edi, edi
mov     eax, ebx
mul     [ebp+edi*4+destination]
add     eax, esi
mov     [ebp+edi*4+destination], eax
adc     edx, 0
inc     edi
mov     esi, edx
cmp     edi, ecx
jnz     short loc_42049f
test    esi, esi
jz      loc_420389
mov     eax, [ebp+var_1d4]
cmp     eax, 73h
jnb     loc_4203f3
mov     [ebp+eax*4+destination], esi
jmp     loc_4203e4
cmp     eax, ebx
lea     esi, [ebp+dst]
setb    cl
jb      short loc_4204f1
lea     esi, [ebp+destination]
mov     [ebp+var_918], esi
lea     edx, [ebp+destination]
test    cl, cl
jnz     short loc_420507
lea     edx, [ebp+dst]
mov     [ebp+var_93c], edx
test    cl, cl
jz      short loc_42051b
mov     edx, eax
mov     [ebp+var_92c], edx
jmp     short loc_420523
mov     edx, ebx
mov     [ebp+var_92c], ebx
test    cl, cl
jnz     short loc_420529
mov     ebx, eax
xor     eax, eax
xor     edi, edi
mov     [ebp+var_574], eax
test    edx, edx
jz      loc_420623
cmp     dword ptr [esi+edi*4], 0
jnz     short loc_42055f
cmp     edi, eax
jnz     loc_42061a
and     [ebp+edi*4+source], 0
lea     eax, [edi+1]
mov     [ebp+var_574], eax
jmp     loc_42061a
xor     edx, edx
xor     ecx, ecx
mov     dword ptr [ebp+var_924], edx
mov     esi, edi
test    ebx, ebx
jz      loc_420605
cmp     esi, 73h
jz      short loc_4205cd
cmp     esi, eax
jnz     short loc_42058f
and     [ebp+esi*4+source], 0
lea     eax, [edi+1]
add     eax, ecx
mov     [ebp+var_574], eax
mov     eax, [ebp+var_93c]
mov     edx, [ebp+var_918]
mov     eax, [eax+ecx*4]
mul     dword ptr [edx+edi*4]
add     eax, [ebp+esi*4+source]
adc     edx, 0
add     eax, dword ptr [ebp+var_924]
mov     [ebp+esi*4+source], eax
mov     eax, [ebp+var_574]
adc     edx, 0
inc     ecx
mov     dword ptr [ebp+var_924], edx
inc     esi
cmp     ecx, ebx
jnz     short loc_420573
test    edx, edx
jz      short loc_420605
cmp     esi, 73h
jz      loc_4206c7
cmp     esi, eax
jnz     short loc_4205ef
and     [ebp+esi*4+source], 0
lea     eax, [esi+1]
mov     [ebp+var_574], eax
xor     eax, eax
add     [ebp+esi*4+source], edx
adc     eax, eax
inc     esi
mov     edx, eax
mov     eax, [ebp+var_574]
jmp     short loc_4205cd
cmp     esi, 73h
jz      loc_4206c7
mov     edx, [ebp+var_92c]
mov     esi, [ebp+var_918]
inc     edi
cmp     edi, edx
jnz     loc_42053b
mov     [ebp+var_1d4], eax
shl     eax, 2
push    eax
lea     eax, [ebp+source]
push    eax
lea     eax, [ebp+destination]
push    1cch
push    eax
call    _memcpy_s
mov     al, 1
mov     ebx, [ebp+var_1d4]
add     esp, 10h
mov     [ebp+var_918], ebx
test    al, al
jz      short loc_42068b
mov     eax, [ebp+var_930]
sub     eax, [ebp+var_928]
mov     [ebp+var_930], eax
jnz     loc_4202dc
mov     ecx, [ebp+var_934]
test    ecx, ecx
jz      loc_42074d
mov     edi, ds:sourcesize[ecx*4]
test    edi, edi
jnz     short loc_4206f5
and     [ebp+var_b2c], 0
lea     eax, [ebp+var_b28]
and     [ebp+var_1d4], 0
push    0
push    eax
lea     eax, [ebp+destination]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
mov     ecx, [ebp+var_1d4]
mov     [ebp+var_918], ecx
jmp     loc_420753
xor     ebx, ebx
lea     eax, [ebp+var_b28]
push    ebx
push    eax
lea     eax, [ebp+destination]
mov     [ebp+var_b2c], ebx
push    1cch
push    eax
mov     [ebp+var_1d4], ebx
call    _memcpy_s
mov     al, bl
jmp     loc_420647
cmp     edi, 1
jz      short loc_42074d
test    ebx, ebx
jz      short loc_42074d
xor     ecx, ecx
xor     esi, esi
mov     eax, edi
mul     [ebp+esi*4+destination]
add     eax, ecx
mov     [ebp+esi*4+destination], eax
adc     edx, 0
inc     esi
mov     ecx, edx
cmp     esi, ebx
jnz     short loc_420702
test    ecx, ecx
jz      short loc_4206b6
mov     eax, [ebp+var_1d4]
cmp     eax, 73h
jnb     loc_42068b
mov     [ebp+eax*4+destination], ecx
mov     ecx, [ebp+var_1d4]
inc     ecx
mov     [ebp+var_918], ecx
mov     [ebp+var_1d4], ecx
jmp     short loc_420753
mov     ecx, [ebp+var_918]
mov     esi, [ebp+var_920]
test    esi, esi
jz      loc_4207e7
xor     edx, edx
test    ecx, ecx
jz      short loc_420785
xor     eax, eax
add     [ebp+edx*4+destination], esi
mov     ecx, [ebp+var_1d4]
adc     eax, eax
mov     [ebp+var_918], ecx
inc     edx
mov     esi, eax
cmp     edx, ecx
jnz     short loc_420767
test    esi, esi
jz      short loc_4207e7
cmp     ecx, 73h
jnb     short loc_4207aa
mov     [ebp+ecx*4+destination], esi
mov     ebx, [ebp+var_1d4]
inc     ebx
mov     [ebp+var_918], ebx
mov     [ebp+var_1d4], ebx
jmp     short loc_4207ed
and     [ebp+var_b2c], 0
lea     eax, [ebp+var_b28]
and     [ebp+var_1d4], 0
push    0
push    eax
lea     eax, [ebp+destination]
push    1cch
push    eax
call    _memcpy_s
mov     ebx, [ebp+var_1d4]
add     esp, 10h
mov     [ebp+var_918], ebx
jmp     short loc_4207ed
mov     ebx, ecx
jmp     short loc_4207ed
mov     ebx, [ebp+var_918]
mov     eax, [ebp+var_938]
test    eax, eax
jz      loc_420bfe
push    0ah
xor     edx, edx
pop     ecx
div     ecx
mov     dword ptr [ebp+var_924], eax
mov     ecx, edx
mov     [ebp+var_934], ecx
test    eax, eax
jz      loc_420bb5
cmp     eax, 26h
jbe     short loc_420820
push    26h
pop     eax
movzx   ecx, ds:byte_405bc6[eax*4]
movzx   esi, ds:byte_405bc7[eax*4]
mov     edi, ecx
mov     [ebp+var_920], eax
shl     edi, 2
push    edi
lea     eax, [ecx+esi]
mov     [ebp+var_914], eax
lea     eax, [ebp+dst]
push    0
push    eax
call    _memset
mov     eax, esi
shl     eax, 2
push    eax
mov     eax, [ebp+var_920]
movzx   eax, ds:word_405bc4[eax*4]
lea     eax, dword_4052c0[eax*4]
push    eax
lea     eax, [ebp+dst]
add     eax, edi
push    eax
call    _memmove
mov     eax, [ebp+var_914]
xor     ecx, ecx
inc     ecx
add     esp, 18h
cmp     eax, ecx
ja      loc_420966
mov     edi, [ebp+dst]
test    edi, edi
jnz     short loc_4208de
xor     eax, eax
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_1d4], eax
lea     eax, [ebp+var_b28]
push    eax
push    1cch
lea     eax, [ebp+destination]
push    eax
call    _memcpy_s
add     esp, 10h
mov     ecx, [ebp+var_1d4]
mov     al, 1
mov     [ebp+var_918], ecx
mov     ebx, [ebp+var_918]
jmp     loc_420b8f
cmp     edi, ecx
jnz     short loc_4208e6
mov     al, cl
jmp     short loc_4208d3
test    ebx, ebx
jz      short loc_4208e2
xor     ecx, ecx
xor     esi, esi
mov     eax, edi
mul     [ebp+esi*4+destination]
add     eax, ecx
mov     [ebp+esi*4+destination], eax
adc     edx, 0
inc     esi
mov     ecx, edx
cmp     esi, ebx
jnz     short loc_4208ee
test    ecx, ecx
jz      short loc_4208c5
mov     eax, [ebp+var_1d4]
cmp     eax, 73h
jnb     short loc_42092f
mov     [ebp+eax*4+destination], ecx
mov     ecx, [ebp+var_1d4]
inc     ecx
mov     [ebp+var_1d4], ecx
jmp     short loc_4208cb
xor     ebx, ebx
lea     eax, [ebp+var_b28]
push    ebx
push    eax
lea     eax, [ebp+destination]
mov     [ebp+var_b2c], ebx
push    1cch
push    eax
mov     [ebp+var_1d4], ebx
call    _memcpy_s
mov     ecx, [ebp+var_1d4]
add     esp, 10h
mov     al, bl
jmp     loc_4208cd
cmp     ebx, ecx
ja      loc_420a1a
mov     ebx, [ebp+destination]
mov     esi, 1cch
mov     [ebp+var_1d4], eax
shl     eax, 2
push    eax
lea     eax, [ebp+dst]
push    eax
lea     eax, [ebp+destination]
push    esi
push    eax
call    _memcpy_s
add     esp, 10h
xor     eax, eax
test    ebx, ebx
jnz     short loc_4209ba
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_1d4], eax
lea     eax, [ebp+var_b28]
push    eax
push    esi
jmp     loc_4208b6
mov     ecx, [ebp+var_1d4]
inc     eax
mov     [ebp+var_918], ecx
cmp     ebx, eax
jz      loc_4208d3
test    ecx, ecx
jz      loc_4208d3
xor     esi, esi
xor     edi, edi
mov     eax, ebx
mul     [ebp+edi*4+destination]
add     eax, esi
mov     [ebp+edi*4+destination], eax
adc     edx, 0
inc     edi
mov     esi, edx
cmp     edi, ecx
jnz     short loc_4209db
test    esi, esi
jz      loc_4208c5
mov     eax, [ebp+var_1d4]
cmp     eax, 73h
jnb     loc_42092f
mov     [ebp+eax*4+destination], esi
jmp     loc_420920
cmp     eax, ebx
lea     edi, [ebp+dst]
setb    cl
jb      short loc_420a2d
lea     edi, [ebp+destination]
mov     [ebp+var_928], edi
lea     edx, [ebp+destination]
test    cl, cl
jnz     short loc_420a43
lea     edx, [ebp+dst]
mov     [ebp+var_930], edx
test    cl, cl
jz      short loc_420a57
mov     edx, eax
mov     [ebp+var_93c], edx
jmp     short loc_420a5f
mov     edx, ebx
mov     [ebp+var_93c], ebx
test    cl, cl
jnz     short loc_420a65
mov     ebx, eax
xor     eax, eax
xor     esi, esi
mov     [ebp+var_574], eax
test    edx, edx
jz      loc_420b5c
cmp     dword ptr [edi+esi*4], 0
jnz     short loc_420a9b
cmp     esi, eax
jnz     loc_420b53
and     [ebp+esi*4+source], 0
lea     eax, [esi+1]
mov     [ebp+var_574], eax
jmp     loc_420b53
xor     edx, edx
xor     edi, edi
mov     [ebp+var_92c], edx
mov     ecx, esi
test    ebx, ebx
jz      loc_420b3e
cmp     ecx, 73h
jz      short loc_420b06
cmp     ecx, eax
jnz     short loc_420acb
and     [ebp+ecx*4+source], 0
lea     eax, [esi+1]
add     eax, edx
mov     [ebp+var_574], eax
mov     eax, [ebp+var_930]
mov     eax, [eax+edx*4]
mov     edx, [ebp+var_928]
mul     dword ptr [edx+esi*4]
add     eax, edi
adc     edx, 0
add     [ebp+ecx*4+source], eax
mov     eax, [ebp+var_574]
adc     edx, 0
mov     edi, edx
mov     edx, [ebp+var_92c]
inc     edx
inc     ecx
mov     [ebp+var_92c], edx
cmp     edx, ebx
jnz     short loc_420aaf
test    edi, edi
jz      short loc_420b3e
cmp     ecx, 73h
jz      loc_420c0d
cmp     ecx, eax
jnz     short loc_420b28
and     [ebp+ecx*4+source], 0
lea     eax, [ecx+1]
mov     [ebp+var_574], eax
mov     eax, edi
xor     edi, edi
add     [ebp+ecx*4+source], eax
mov     eax, [ebp+var_574]
adc     edi, edi
inc     ecx
jmp     short loc_420b06
cmp     ecx, 73h
jz      loc_420c0d
mov     edx, [ebp+var_93c]
mov     edi, [ebp+var_928]
inc     esi
cmp     esi, edx
jnz     loc_420a77
mov     [ebp+var_1d4], eax
shl     eax, 2
push    eax
lea     eax, [ebp+source]
push    eax
lea     eax, [ebp+destination]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
mov     al, 1
mov     ebx, [ebp+var_1d4]
mov     [ebp+var_918], ebx
test    al, al
jz      loc_420c3e
mov     eax, dword ptr [ebp+var_924]
sub     eax, [ebp+var_920]
mov     dword ptr [ebp+var_924], eax
jnz     loc_420818
mov     ecx, [ebp+var_934]
test    ecx, ecx
jz      short loc_420bfe
mov     edi, ds:sourcesize[ecx*4]
test    edi, edi
jnz     loc_420c50
xor     eax, eax
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_1d4], eax
lea     eax, [ebp+var_b28]
push    eax
lea     eax, [ebp+destination]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
mov     ebx, [ebp+var_1d4]
mov     [ebp+var_918], ebx
test    ebx, ebx
jnz     loc_420cf2
xor     ecx, ecx
jmp     loc_420d12
xor     eax, eax
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_1d4], eax
lea     eax, [ebp+var_b28]
push    eax
lea     eax, [ebp+destination]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
xor     al, al
jmp     loc_420b83
and     [ebp+var_b2c], 0
and     [ebp+var_1d4], 0
push    0
jmp     short loc_420cb4
cmp     edi, 1
jz      short loc_420bfe
test    ebx, ebx
jz      short loc_420c06
xor     ecx, ecx
xor     esi, esi
mov     eax, edi
mul     [ebp+esi*4+destination]
add     eax, ecx
mov     [ebp+esi*4+destination], eax
adc     edx, 0
inc     esi
mov     ecx, edx
cmp     esi, ebx
jnz     short loc_420c5d
test    ecx, ecx
jz      loc_420bf2
mov     eax, [ebp+var_1d4]
cmp     eax, 73h
jnb     short loc_420ca5
mov     [ebp+eax*4+destination], ecx
mov     ebx, [ebp+var_1d4]
inc     ebx
mov     [ebp+var_1d4], ebx
jmp     loc_420bf8
xor     eax, eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_1d4], eax
push    eax
lea     eax, [ebp+var_b28]
push    eax
lea     eax, [ebp+destination]
push    1cch
push    eax
call    _memcpy_s
mov     eax, [ebp+var_948]
add     esp, 10h
push    [ebp+var_950]
movzx   eax, byte ptr [eax+308h]
push    eax
call    sub_41fb7d
pop     ecx
pop     ecx
push    3
pop     eax
jmp     loc_421e0b
mov     eax, [ebp+ebx*4+var_1d4]
and     [ebp+var_944], 0
bsr     eax, eax
jz      short loc_420d08
inc     eax
jmp     short loc_420d0a
xor     eax, eax
lea     ecx, [ebx-1]
shl     ecx, 5
add     ecx, eax
mov     [ebp+var_93c], ecx
cmp     ecx, [ebp+var_94c]
jnb     loc_421dd4
mov     eax, [ebp+var_91c]
test    eax, eax
jz      loc_421dd4
mov     edx, [ebp+var_954]
xor     ebx, ebx
xor     edi, edi
mov     [ebp+var_3a4], ebx
xor     ecx, ecx
mov     dword ptr [ebp+var_924], edi
mov     esi, edx
mov     [ebp+var_920], edx
cmp     edx, [ebp+var_958]
jz      loc_421367
cmp     ecx, 9
jnz     loc_420e6b
test    ebx, ebx
jz      loc_420df5
xor     ecx, ecx
mov     edi, 3b9aca00h
xor     esi, esi
mov     eax, [ebp+esi*4+var_3a0]
mul     edi
add     eax, ecx
mov     [ebp+esi*4+var_3a0], eax
adc     edx, 0
inc     esi
mov     ecx, edx
cmp     esi, ebx
jnz     short loc_420d78
mov     edi, dword ptr [ebp+var_924]
test    ecx, ecx
jz      short loc_420de9
mov     eax, [ebp+var_3a4]
cmp     eax, 73h
jnb     short loc_420dbf
mov     [ebp+eax*4+var_3a0], ecx
mov     ebx, [ebp+var_3a4]
inc     ebx
mov     [ebp+var_3a4], ebx
jmp     short loc_420def
xor     eax, eax
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_3a4], eax
lea     eax, [ebp+var_b28]
push    eax
lea     eax, [ebp+var_3a0]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
mov     ebx, [ebp+var_3a4]
mov     esi, [ebp+var_920]
test    edi, edi
jz      short loc_420e67
xor     ecx, ecx
test    ebx, ebx
jz      short loc_420e17
mov     eax, edi
xor     edi, edi
add     [ebp+ecx*4+var_3a0], eax
mov     ebx, [ebp+var_3a4]
adc     edi, edi
inc     ecx
cmp     ecx, ebx
jnz     short loc_420dff
test    edi, edi
jz      short loc_420e67
cmp     ebx, 73h
jnb     short loc_420e36
mov     [ebp+ebx*4+var_3a0], edi
mov     ebx, [ebp+var_3a4]
inc     ebx
mov     [ebp+var_3a4], ebx
jmp     short loc_420e67
and     [ebp+var_b2c], 0
lea     eax, [ebp+var_b28]
and     [ebp+var_3a4], 0
push    0
push    eax
lea     eax, [ebp+var_3a0]
push    1cch
push    eax
call    _memcpy_s
mov     ebx, [ebp+var_3a4]
add     esp, 10h
xor     edi, edi
xor     ecx, ecx
movzx   eax, byte ptr [esi]
imul    edi, 0ah
add     edi, eax
inc     ecx
inc     esi
mov     dword ptr [ebp+var_924], edi
mov     [ebp+var_920], esi
cmp     esi, [ebp+var_958]
jnz     loc_420d5e
test    ecx, ecx
jz      loc_421361
mov     eax, ecx
xor     edx, edx
push    0ah
pop     ecx
div     ecx
mov     [ebp+var_934], eax
mov     ecx, edx
mov     [ebp+var_940], ecx
test    eax, eax
jz      loc_421205
cmp     eax, 26h
jbe     short loc_420ebc
push    26h
pop     eax
movzx   ecx, ds:byte_405bc6[eax*4]
movzx   esi, ds:byte_405bc7[eax*4]
mov     edi, ecx
mov     [ebp+var_920], eax
shl     edi, 2
push    edi
lea     eax, [ecx+esi]
mov     [ebp+var_914], eax
lea     eax, [ebp+dst]
push    0
push    eax
call    _memset
mov     eax, esi
shl     eax, 2
push    eax
mov     eax, [ebp+var_920]
movzx   eax, ds:word_405bc4[eax*4]
lea     eax, dword_4052c0[eax*4]
push    eax
lea     eax, [ebp+dst]
add     eax, edi
push    eax
call    _memmove
mov     eax, [ebp+var_914]
xor     ecx, ecx
inc     ecx
add     esp, 18h
cmp     eax, ecx
ja      loc_420fe0
mov     edi, [ebp+dst]
test    edi, edi
jnz     short loc_420f51
xor     eax, eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_3a4], eax
push    eax
lea     eax, [ebp+var_b28]
jmp     loc_4211c2
cmp     edi, ecx
jnz     short loc_420f5c
mov     al, cl
jmp     loc_4211df
test    ebx, ebx
jz      short loc_420f55
xor     ecx, ecx
xor     esi, esi
mov     eax, edi
mul     [ebp+esi*4+var_3a0]
add     eax, ecx
mov     [ebp+esi*4+var_3a0], eax
adc     edx, 0
inc     esi
mov     ecx, edx
cmp     esi, ebx
jnz     short loc_420f64
test    ecx, ecx
jz      short loc_420fd3
mov     eax, [ebp+var_3a4]
cmp     eax, 73h
jnb     short loc_420fa5
mov     [ebp+eax*4+var_3a0], ecx
mov     ebx, [ebp+var_3a4]
inc     ebx
mov     [ebp+var_3a4], ebx
jmp     short loc_420fd9
xor     ebx, ebx
lea     eax, [ebp+var_b28]
push    ebx
push    eax
lea     eax, [ebp+var_3a0]
mov     [ebp+var_b2c], ebx
push    1cch
push    eax
mov     [ebp+var_3a4], ebx
call    _memcpy_s
mov     al, bl
jmp     loc_4211d6
mov     ebx, [ebp+var_3a4]
mov     al, 1
jmp     loc_4211df
cmp     ebx, ecx
ja      loc_421070
mov     edi, [ebp+var_3a0]
mov     ebx, 1cch
mov     [ebp+var_3a4], eax
shl     eax, 2
push    eax
lea     eax, [ebp+dst]
push    eax
lea     eax, [ebp+var_3a0]
push    ebx
push    eax
call    _memcpy_s
add     esp, 10h
xor     eax, eax
test    edi, edi
jnz     short loc_421034
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_3a4], eax
lea     eax, [ebp+var_b28]
push    eax
push    ebx
jmp     loc_4211c8
mov     ebx, [ebp+var_3a4]
inc     eax
cmp     edi, eax
jz      loc_4211df
test    ebx, ebx
jz      loc_4211df
xor     ecx, ecx
xor     esi, esi
mov     eax, edi
mul     [ebp+esi*4+var_3a0]
add     eax, ecx
mov     [ebp+esi*4+var_3a0], eax
adc     edx, 0
inc     esi
mov     ecx, edx
cmp     esi, ebx
jnz     short loc_42104f
jmp     loc_420f80
cmp     eax, ebx
lea     edi, [ebp+dst]
setb    cl
jb      short loc_421083
lea     edi, [ebp+var_3a0]
mov     [ebp+var_928], edi
lea     edx, [ebp+var_3a0]
test    cl, cl
jnz     short loc_421099
lea     edx, [ebp+dst]
mov     [ebp+var_930], edx
test    cl, cl
jz      short loc_4210ad
mov     edx, eax
mov     [ebp+var_938], edx
jmp     short loc_4210b5
mov     edx, ebx
mov     [ebp+var_938], ebx
test    cl, cl
jnz     short loc_4210bb
mov     ebx, eax
xor     eax, eax
xor     esi, esi
mov     [ebp+var_574], eax
test    edx, edx
jz      loc_4211b2
cmp     dword ptr [edi+esi*4], 0
jnz     short loc_4210f1
cmp     esi, eax
jnz     loc_4211a9
and     [ebp+esi*4+source], 0
lea     eax, [esi+1]
mov     [ebp+var_574], eax
jmp     loc_4211a9
xor     edx, edx
xor     edi, edi
mov     [ebp+var_92c], edx
mov     ecx, esi
test    ebx, ebx
jz      loc_421194
cmp     ecx, 73h
jz      short loc_42115c
cmp     ecx, eax
jnz     short loc_421121
and     [ebp+ecx*4+source], 0
lea     eax, [esi+1]
add     eax, edx
mov     [ebp+var_574], eax
mov     eax, [ebp+var_930]
mov     eax, [eax+edx*4]
mov     edx, [ebp+var_928]
mul     dword ptr [edx+esi*4]
add     eax, edi
adc     edx, 0
add     [ebp+ecx*4+source], eax
mov     eax, [ebp+var_574]
adc     edx, 0
mov     edi, edx
mov     edx, [ebp+var_92c]
inc     edx
inc     ecx
mov     [ebp+var_92c], edx
cmp     edx, ebx
jnz     short loc_421105
test    edi, edi
jz      short loc_421194
cmp     ecx, 73h
jz      loc_421276
cmp     ecx, eax
jnz     short loc_42117e
and     [ebp+ecx*4+source], 0
lea     eax, [ecx+1]
mov     [ebp+var_574], eax
mov     eax, edi
xor     edi, edi
add     [ebp+ecx*4+source], eax
mov     eax, [ebp+var_574]
adc     edi, edi
inc     ecx
jmp     short loc_42115c
cmp     ecx, 73h
jz      loc_421276
mov     edx, [ebp+var_938]
mov     edi, [ebp+var_928]
inc     esi
cmp     esi, edx
jnz     loc_4210cd
mov     [ebp+var_3a4], eax
shl     eax, 2
push    eax
lea     eax, [ebp+source]
push    eax
push    1cch
lea     eax, [ebp+var_3a0]
push    eax
call    _memcpy_s
mov     al, 1
add     esp, 10h
mov     ebx, [ebp+var_3a4]
test    al, al
jz      loc_4212a7
mov     eax, [ebp+var_934]
sub     eax, [ebp+var_920]
mov     [ebp+var_934], eax
jnz     loc_420eb4
mov     ecx, [ebp+var_940]
test    ecx, ecx
jz      loc_4212e9
mov     edi, ds:sourcesize[ecx*4]
test    edi, edi
jz      loc_4212b9
cmp     edi, 1
jz      loc_4212e9
test    ebx, ebx
jz      loc_4212e9
xor     ecx, ecx
xor     esi, esi
mov     eax, edi
mul     [ebp+esi*4+var_3a0]
add     eax, ecx
mov     [ebp+esi*4+var_3a0], eax
adc     edx, 0
inc     esi
mov     ecx, edx
cmp     esi, ebx
jnz     short loc_421231
test    ecx, ecx
jz      loc_4212e3
mov     eax, [ebp+var_3a4]
cmp     eax, 73h
jnb     short loc_4212b9
mov     [ebp+eax*4+var_3a0], ecx
mov     ebx, [ebp+var_3a4]
inc     ebx
mov     [ebp+var_3a4], ebx
jmp     short loc_4212e9
xor     eax, eax
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_3a4], eax
lea     eax, [ebp+var_b28]
push    eax
lea     eax, [ebp+var_3a0]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
xor     al, al
jmp     loc_4211d9
and     [ebp+var_b2c], 0
and     [ebp+var_3a4], 0
push    0
jmp     short loc_4212c8
xor     eax, eax
push    eax
mov     [ebp+var_3a4], eax
mov     [ebp+var_b2c], eax
lea     eax, [ebp+var_b28]
push    eax
lea     eax, [ebp+var_3a0]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
mov     ebx, [ebp+var_3a4]
mov     edx, dword ptr [ebp+var_924]
test    edx, edx
jz      short loc_421361
xor     ecx, ecx
test    ebx, ebx
jz      short loc_421311
mov     eax, edx
xor     edx, edx
add     [ebp+ecx*4+var_3a0], eax
mov     ebx, [ebp+var_3a4]
adc     edx, edx
inc     ecx
cmp     ecx, ebx
jnz     short loc_4212f9
test    edx, edx
jz      short loc_421361
cmp     ebx, 73h
jnb     short loc_421330
mov     [ebp+ebx*4+var_3a0], edx
mov     ebx, [ebp+var_3a4]
inc     ebx
mov     [ebp+var_3a4], ebx
jmp     short loc_421361
and     [ebp+var_b2c], 0
lea     eax, [ebp+var_b28]
and     [ebp+var_3a4], 0
push    0
push    eax
lea     eax, [ebp+var_3a0]
push    1cch
push    eax
call    _memcpy_s
mov     ebx, [ebp+var_3a4]
add     esp, 10h
mov     eax, [ebp+var_91c]
mov     ecx, [ebp+var_948]
cmp     dword ptr [ecx], 0
jge     short loc_421374
sub     eax, [ecx]
push    0ah
xor     edx, edx
and     [ebp+var_73c], 0
pop     esi
div     esi
xor     ecx, ecx
inc     ecx
mov     [ebp+var_940], edx
mov     [ebp+var_740], ecx
mov     [ebp+var_91c], ecx
mov     [ebp+var_744], ecx
mov     [ebp+var_928], eax
test    eax, eax
jz      loc_421748
cmp     eax, 26h
jbe     short loc_4213bb
push    26h
pop     ebx
mov     [ebp+var_92c], ebx
jmp     short loc_4213c3
mov     ebx, eax
mov     [ebp+var_92c], eax
movzx   ecx, ds:byte_405bc6[ebx*4]
movzx   esi, ds:byte_405bc7[ebx*4]
mov     edi, ecx
shl     edi, 2
push    edi
push    0
lea     eax, [ecx+esi]
mov     [ebp+var_914], eax
lea     eax, [ebp+dst]
push    eax
call    _memset
mov     eax, esi
shl     eax, 2
push    eax
movzx   eax, ds:word_405bc4[ebx*4]
lea     eax, dword_4052c0[eax*4]
push    eax
lea     eax, [ebp+dst]
add     eax, edi
push    eax
call    _memmove
mov     eax, [ebp+var_914]
xor     edx, edx
inc     edx
add     esp, 18h
cmp     eax, edx
ja      loc_4214c2
mov     ebx, [ebp+dst]
test    ebx, ebx
jnz     short loc_421475
xor     eax, eax
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_744], eax
lea     eax, [ebp+var_b28]
push    eax
push    1cch
lea     eax, [ebp+var_740]
push    eax
call    _memcpy_s
add     esp, 10h
mov     ecx, [ebp+var_744]
mov     al, 1
mov     [ebp+var_91c], ecx
mov     ecx, [ebp+var_91c]
jmp     loc_42171c
cmp     ebx, edx
jnz     short loc_42147d
mov     al, dl
jmp     short loc_42146a
mov     ecx, [ebp+var_91c]
test    ecx, ecx
jz      short loc_421479
xor     esi, esi
xor     edi, edi
mov     eax, ebx
mul     [ebp+edi*4+var_740]
add     eax, esi
mov     [ebp+edi*4+var_740], eax
adc     edx, 0
inc     edi
mov     esi, edx
cmp     edi, ecx
jnz     short loc_42148b
jmp     loc_421559
mov     [ebp+eax*4+var_740], esi
mov     ecx, [ebp+var_744]
inc     ecx
mov     [ebp+var_744], ecx
jmp     short loc_421462
mov     ecx, [ebp+var_91c]
cmp     ecx, edx
ja      loc_4215a7
mov     ebx, [ebp+var_740]
mov     esi, 1cch
mov     [ebp+var_744], eax
shl     eax, 2
push    eax
lea     eax, [ebp+dst]
push    eax
lea     eax, [ebp+var_740]
push    esi
push    eax
call    _memcpy_s
add     esp, 10h
xor     eax, eax
test    ebx, ebx
jnz     short loc_42151c
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_744], eax
lea     eax, [ebp+var_b28]
push    eax
push    esi
jmp     loc_42144d
mov     ecx, [ebp+var_744]
inc     eax
mov     [ebp+var_91c], ecx
cmp     ebx, eax
jz      loc_42146a
test    ecx, ecx
jz      loc_42146a
xor     esi, esi
xor     edi, edi
mov     eax, ebx
mul     [ebp+edi*4+var_740]
add     eax, esi
mov     [ebp+edi*4+var_740], eax
adc     edx, 0
inc     edi
mov     esi, edx
cmp     edi, ecx
jnz     short loc_42153d
test    esi, esi
jz      loc_42145c
mov     eax, [ebp+var_744]
cmp     eax, 73h
jb      loc_4214ac
xor     ebx, ebx
lea     eax, [ebp+var_b28]
push    ebx
push    eax
lea     eax, [ebp+var_740]
mov     [ebp+var_b2c], ebx
push    1cch
push    eax
mov     [ebp+var_744], ebx
call    _memcpy_s
mov     ecx, [ebp+var_744]
add     esp, 10h
mov     al, bl
jmp     loc_421464
cmp     eax, ecx
lea     esi, [ebp+dst]
setb    dl
jb      short loc_4215ba
lea     esi, [ebp+var_740]
mov     dword ptr [ebp+var_924], esi
lea     ebx, [ebp+var_740]
test    dl, dl
jnz     short loc_4215d0
lea     ebx, [ebp+dst]
mov     [ebp+var_934], ebx
test    dl, dl
jz      short loc_4215e4
mov     ebx, eax
mov     [ebp+var_930], ebx
jmp     short loc_4215ec
mov     ebx, ecx
mov     [ebp+var_930], ecx
test    dl, dl
jnz     short loc_4215f2
mov     ecx, eax
xor     eax, eax
xor     edi, edi
mov     [ebp+var_574], eax
test    ebx, ebx
jz      loc_4216e9
cmp     dword ptr [esi+edi*4], 0
jnz     short loc_421628
cmp     edi, eax
jnz     loc_4216e0
and     [ebp+edi*4+source], 0
lea     eax, [edi+1]
mov     [ebp+var_574], eax
jmp     loc_4216e0
xor     edx, edx
xor     ebx, ebx
mov     [ebp+var_938], edx
mov     esi, edi
test    ecx, ecx
jz      loc_4216cb
cmp     esi, 73h
jz      short loc_421693
cmp     esi, eax
jnz     short loc_421658
and     [ebp+esi*4+source], 0
lea     eax, [edi+1]
add     eax, edx
mov     [ebp+var_574], eax
mov     eax, [ebp+var_934]
mov     eax, [eax+edx*4]
mov     edx, dword ptr [ebp+var_924]
mul     dword ptr [edx+edi*4]
add     eax, ebx
adc     edx, 0
add     [ebp+esi*4+source], eax
mov     eax, [ebp+var_574]
adc     edx, 0
mov     ebx, edx
mov     edx, [ebp+var_938]
inc     edx
inc     esi
mov     [ebp+var_938], edx
cmp     edx, ecx
jnz     short loc_42163c
test    ebx, ebx
jz      short loc_4216cb
cmp     esi, 73h
jz      loc_4217a4
cmp     esi, eax
jnz     short loc_4216b5
and     [ebp+esi*4+source], 0
lea     eax, [esi+1]
mov     [ebp+var_574], eax
mov     eax, ebx
xor     ebx, ebx
add     [ebp+esi*4+source], eax
mov     eax, [ebp+var_574]
adc     ebx, ebx
inc     esi
jmp     short loc_421693
cmp     esi, 73h
jz      loc_4217a4
mov     ebx, [ebp+var_930]
mov     esi, dword ptr [ebp+var_924]
inc     edi
cmp     edi, ebx
jnz     loc_421604
mov     [ebp+var_744], eax
shl     eax, 2
push    eax
lea     eax, [ebp+source]
push    eax
lea     eax, [ebp+var_740]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
mov     al, 1
mov     ecx, [ebp+var_744]
mov     [ebp+var_91c], ecx
test    al, al
jz      loc_4217d6
mov     eax, [ebp+var_928]
sub     eax, [ebp+var_92c]
mov     [ebp+var_928], eax
jnz     loc_4213ab
mov     ebx, [ebp+var_3a4]
mov     edx, [ebp+var_940]
test    edx, edx
jz      loc_421898
mov     eax, ds:sourcesize[edx*4]
mov     [ebp+var_940], eax
test    eax, eax
jnz     loc_4217e8
push    eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_744], eax
lea     eax, [ebp+var_b28]
push    eax
lea     eax, [ebp+var_740]
push    1cch
push    eax
call    _memcpy_s
mov     ebx, [ebp+var_3a4]
add     esp, 10h
mov     ecx, [ebp+var_744]
mov     [ebp+var_91c], ecx
jmp     loc_42189e
and     [ebp+var_b2c], 0
lea     eax, [ebp+var_b28]
and     [ebp+var_744], 0
push    0
push    eax
lea     eax, [ebp+var_740]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
xor     al, al
jmp     loc_421710
and     [ebp+var_b2c], 0
and     [ebp+var_744], 0
push    0
jmp     short loc_42185b
cmp     eax, 1
jz      loc_421898
test    ecx, ecx
jz      loc_421898
xor     edi, edi
xor     esi, esi
mul     [ebp+esi*4+var_740]
add     eax, edi
mov     [ebp+esi*4+var_740], eax
mov     eax, [ebp+var_940]
adc     edx, 0
inc     esi
mov     edi, edx
cmp     esi, ecx
jnz     short loc_4217fd
test    edi, edi
jz      loc_421793
mov     eax, [ebp+var_744]
cmp     eax, 73h
jnb     short loc_42184c
mov     [ebp+eax*4+var_740], edi
mov     ecx, [ebp+var_744]
inc     ecx
mov     [ebp+var_91c], ecx
mov     [ebp+var_744], ecx
jmp     short loc_42189e
xor     eax, eax
mov     [ebp+var_b2c], eax
mov     [ebp+var_744], eax
push    eax
lea     eax, [ebp+var_b28]
push    eax
lea     eax, [ebp+var_740]
push    1cch
push    eax
call    _memcpy_s
mov     eax, [ebp+var_948]
add     esp, 10h
push    [ebp+var_950]
movzx   eax, byte ptr [eax+308h]
push    eax
call    sub_4200a6
pop     ecx
pop     ecx
push    2
jmp     loc_420cec
mov     ecx, [ebp+var_91c]
test    ebx, ebx
jnz     short loc_4218a6
xor     esi, esi
jmp     short loc_4218c6
mov     eax, [ebp+ebx*4+var_3a4]
and     [ebp+var_944], 0
bsr     eax, eax
jz      short loc_4218bc
inc     eax
jmp     short loc_4218be
xor     eax, eax
lea     esi, [ebx-1]
shl     esi, 5
add     esi, eax
test    ecx, ecx
jnz     short loc_4218ce
xor     edx, edx
jmp     short loc_4218ee
mov     eax, [ebp+ecx*4+var_744]
and     [ebp+var_944], 0
bsr     eax, eax
jz      short loc_4218e4
inc     eax
jmp     short loc_4218e6
xor     eax, eax
lea     edx, [ecx-1]
shl     edx, 5
add     edx, eax
mov     eax, edx
sub     eax, esi
cmp     esi, edx
sbb     edx, edx
and     edx, eax
mov     [ebp+var_920], edx
jbe     loc_421aa9
mov     edi, edx
mov     esi, edx
push    20h
and     edi, 1fh
shr     esi, 5
pop     ecx
xor     eax, eax
mov     [ebp+var_92c], esi
sub     ecx, edi
mov     dword ptr [ebp+var_924], edi
inc     eax
mov     [ebp+var_928], ecx
xor     edx, edx
call    __allshl
mov     ecx, [ebp+ebx*4+var_3a4]
dec     eax
and     [ebp+var_944], 0
mov     [ebp+var_95c], eax
not     eax
mov     [ebp+var_940], eax
bsr     eax, ecx
jz      short loc_421954
inc     eax
jmp     short loc_421956
xor     eax, eax
push    20h
pop     ecx
lea     edx, [esi+ebx]
sub     ecx, eax
mov     [ebp+var_944], ecx
mov     [ebp+var_930], edx
cmp     edx, 73h
jnz     short loc_421977
cmp     edi, ecx
jbe     short loc_421977
mov     al, 1
jmp     short loc_421979
xor     al, al
cmp     edx, 73h
ja      loc_421a6c
test    al, al
jnz     loc_421a6c
cmp     edx, 72h
jb      short loc_421998
push    72h
pop     edx
mov     [ebp+var_930], edx
mov     edi, edx
mov     [ebp+var_934], edi
cmp     edx, 0ffffffffh
jz      loc_421a39
mov     esi, edx
lea     ecx, [ebp+var_3a0]
mov     edx, [ebp+var_92c]
sub     esi, edx
lea     ecx, [ecx+esi*4]
mov     [ebp+var_938], ecx
cmp     edi, edx
jb      short loc_421a2d
cmp     esi, ebx
jnb     short loc_4219ce
mov     edi, [ecx]
jmp     short loc_4219d0
xor     edi, edi
lea     eax, [esi-1]
cmp     eax, ebx
jnb     short loc_4219dc
mov     eax, [ecx-4]
jmp     short loc_4219de
xor     eax, eax
and     eax, [ebp+var_940]
and     edi, [ebp+var_95c]
mov     ecx, [ebp+var_928]
shr     eax, cl
mov     ecx, dword ptr [ebp+var_924]
shl     edi, cl
mov     ecx, [ebp+var_938]
or      eax, edi
mov     edi, [ebp+var_934]
sub     ecx, 4
mov     [ebp+var_938], ecx
mov     [ebp+edi*4+var_3a0], eax
dec     edi
dec     esi
mov     [ebp+var_934], edi
cmp     edi, 0ffffffffh
jz      short loc_421a2d
mov     ebx, [ebp+var_3a4]
jmp     short loc_4219c2
mov     edx, [ebp+var_930]
mov     esi, [ebp+var_92c]
test    esi, esi
jz      short loc_421a49
mov     ecx, esi
lea     edi, [ebp+var_3a0]
xor     eax, eax
rep stosd
mov     eax, dword ptr [ebp+var_924]
mov     ecx, [ebp+var_91c]
cmp     eax, [ebp+var_944]
jbe     short loc_421a68
lea     ebx, [edx+1]
mov     [ebp+var_3a4], ebx
jmp     short loc_421aa3
mov     ebx, edx
jmp     short loc_421a60
and     [ebp+var_b2c], 0
lea     eax, [ebp+var_b28]
and     [ebp+var_3a4], 0
push    0
push    eax
lea     eax, [ebp+var_3a0]
push    1cch
push    eax
call    _memcpy_s
mov     ebx, [ebp+var_3a4]
add     esp, 10h
mov     ecx, [ebp+var_744]
mov     edx, [ebp+var_920]
mov     eax, [ebp+var_94c]
mov     edi, [ebp+var_93c]
sub     eax, edi
mov     [ebp+var_94c], eax
mov     esi, eax
test    edi, edi
jz      short loc_421af8
cmp     edx, eax
jbe     short loc_421af4
mov     eax, [ebp+var_958]
cmp     eax, [ebp+var_954]
push    [ebp+var_950]
setnz   al
movzx   eax, al
push    eax
mov     eax, [ebp+var_948]
movzx   eax, byte ptr [eax+308h]
push    eax
push    edi
jmp     loc_421dfc
mov     esi, eax
sub     esi, edx
cmp     ebx, ecx
ja      short loc_421b38
jb      short loc_421b31
lea     ecx, [ebx-1]
cmp     ecx, 0ffffffffh
jz      short loc_421b38
mov     eax, [ebp+ecx*4+var_3a0]
cmp     eax, [ebp+ecx*4+var_740]
jnz     short loc_421b1c
dec     ecx
cmp     ecx, 0ffffffffh
jnz     short loc_421b06
cmp     ecx, 0ffffffffh
jz      short loc_421b38
mov     eax, [ebp+ecx*4+var_3a0]
cmp     eax, [ebp+ecx*4+var_740]
ja      short loc_421b38
inc     edx
mov     [ebp+var_920], edx
push    20h
mov     edi, esi
xor     eax, eax
and     esi, 1fh
shr     edi, 5
pop     ecx
sub     ecx, esi
mov     [ebp+var_92c], edi
inc     eax
mov     [ebp+var_930], esi
xor     edx, edx
mov     [ebp+var_95c], ecx
call    __allshl
mov     ecx, [ebp+ebx*4+var_3a4]
dec     eax
and     [ebp+var_934], 0
mov     [ebp+var_940], eax
not     eax
mov     [ebp+var_944], eax
bsr     eax, ecx
jz      short loc_421b86
inc     eax
jmp     short loc_421b88
xor     eax, eax
push    20h
pop     ecx
lea     edx, [edi+ebx]
sub     ecx, eax
mov     [ebp+var_928], ecx
mov     [ebp+var_938], edx
cmp     edx, 73h
jnz     short loc_421ba9
cmp     esi, ecx
jbe     short loc_421ba9
mov     al, 1
jmp     short loc_421bab
xor     al, al
cmp     edx, 73h
ja      loc_421ca2
test    al, al
jnz     loc_421ca2
cmp     edx, 72h
jb      short loc_421bca
push    72h
pop     edx
mov     [ebp+var_938], edx
mov     ecx, edx
mov     [ebp+var_934], ecx
cmp     edx, 0ffffffffh
jz      loc_421c77
mov     esi, edx
lea     eax, [ebp+var_3a0]
mov     edx, [ebp+var_92c]
sub     esi, edx
lea     eax, [eax+esi*4]
mov     dword ptr [ebp+var_924], eax
cmp     ecx, edx
jb      short loc_421c65
cmp     esi, ebx
jnb     short loc_421c00
mov     edi, [eax]
jmp     short loc_421c02
xor     edi, edi
lea     eax, [esi-1]
cmp     eax, ebx
jnb     short loc_421c14
mov     eax, dword ptr [ebp+var_924]
mov     eax, [eax-4]
jmp     short loc_421c16
xor     eax, eax
and     eax, [ebp+var_944]
and     edi, [ebp+var_940]
mov     ecx, [ebp+var_95c]
shr     eax, cl
mov     ecx, [ebp+var_930]
shl     edi, cl
mov     ecx, [ebp+var_934]
or      eax, edi
mov     [ebp+ecx*4+var_3a0], eax
dec     ecx
mov     eax, dword ptr [ebp+var_924]
dec     esi
sub     eax, 4
mov     [ebp+var_934], ecx
mov     dword ptr [ebp+var_924], eax
cmp     ecx, 0ffffffffh
jz      short loc_421c65
mov     ebx, [ebp+var_3a4]
jmp     short loc_421bf4
mov     edx, [ebp+var_938]
mov     esi, [ebp+var_930]
mov     edi, [ebp+var_92c]
test    edi, edi
jz      short loc_421c87
mov     ecx, edi
xor     eax, eax
lea     edi, [ebp+var_3a0]
rep stosd
cmp     esi, [ebp+var_928]
jbe     short loc_421c9a
lea     eax, [edx+1]
mov     [ebp+var_3a4], eax
jmp     short loc_421ccd
mov     [ebp+var_3a4], edx
jmp     short loc_421ccd
and     [ebp+var_b2c], 0
lea     eax, [ebp+var_b28]
and     [ebp+var_3a4], 0
push    0
push    eax
lea     eax, [ebp+var_3a0]
push    1cch
push    eax
call    _memcpy_s
add     esp, 10h
lea     eax, [ebp+var_744]
push    eax
lea     eax, [ebp+var_3a4]
push    eax
call    sub_421f10
cmp     [ebp+var_3a4], 0
mov     edi, eax
mov     ebx, edx
setz    al
mov     [ebp+var_924], al
pop     ecx
pop     ecx
test    ebx, ebx
jnz     short loc_421d0b
cmp     edi, 0ffffffffh
ja      short loc_421d0b
bsr     esi, edi
jz      short loc_421d07
inc     esi
jmp     short loc_421d18
xor     esi, esi
jmp     short loc_421d18
bsr     esi, ebx
jz      short loc_421d13
inc     esi
jmp     short loc_421d15
xor     esi, esi
add     esi, 20h
mov     ecx, [ebp+var_94c]
cmp     esi, ecx
jbe     short loc_421d5f
sub     esi, ecx
test    al, al
jz      short loc_421d49
xor     eax, eax
xor     edx, edx
inc     eax
mov     ecx, esi
call    __allshl
add     eax, 0ffffffffh
mov     [ebp+var_924], 1
adc     edx, 0ffffffffh
and     eax, edi
and     edx, ebx
or      eax, edx
jz      short loc_421d50
mov     [ebp+var_924], 0
mov     eax, edi
mov     edx, ebx
mov     ecx, esi
call    __aullshr
mov     edi, eax
mov     ebx, edx
mov     ecx, [ebp+var_94c]
xor     eax, eax
cmp     eax, [ebp+var_918]
sbb     esi, esi
inc     eax
and     esi, [ebp+destination]
cmp     eax, [ebp+var_918]
sbb     edx, edx
xor     eax, eax
and     edx, [ebp+var_1cc]
add     eax, esi
adc     edx, 0
call    __allshl
mov     esi, [ebp+var_93c]
mov     ecx, eax
add     ecx, edi
adc     edx, ebx
test    esi, esi
jz      short loc_421da5
add     esi, 0fffffffeh
jmp     short loc_421dad
mov     esi, [ebp+var_920]
not     esi
push    [ebp+var_950]
mov     eax, [ebp+var_948]
push    dword ptr [ebp+var_924]
movzx   eax, byte ptr [eax+308h]
push    eax
push    esi
push    edx
push    ecx
call    sub_41fbbd
add     esp, 18h
jmp     short loc_421e0b
mov     eax, [ebp+var_958]
cmp     eax, [ebp+var_954]
push    [ebp+var_950]
setnz   al
movzx   eax, al
push    eax
mov     eax, [ebp+var_948]
movzx   eax, byte ptr [eax+308h]
push    eax
push    ecx
lea     eax, [ebp+var_1d4]
push    eax
call    ?assemble_floating_point_value_from_big_integer@__crt_strtox@@ya?aw4sld_status@@abubig_integer@1@i_n1abvfloating_point_value@1@@z
add     esp, 14h
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 21ch
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     esi, [ebx]
test    esi, esi
jz      loc_42238d
mov     edx, [ebp+arg_4]
mov     eax, [edx]
mov     [ebp+var_34], eax
test    eax, eax
jz      loc_42238d
lea     edi, [eax-1]
lea     ecx, [esi-1]
mov     [ebp+var_8], ecx
test    edi, edi
jnz     loc_422076
mov     edx, [edx+4]
mov     [ebp+var_8], edx
cmp     edx, 1
jnz     short loc_421f86
mov     esi, [ebx+4]
lea     eax, [ebp+source]
push    edi
push    eax
lea     ecx, [ebx+4]
mov     [ebp+var_21c], edi
push    1cch
push    ecx
mov     [ebx], edi
call    _memcpy_s
add     esp, 10h
mov     eax, esi
xor     edx, edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    ecx, ecx
jnz     short loc_421fca
mov     esi, [ebx+4]
lea     eax, [ebp+source]
push    ecx
push    eax
lea     edi, [ebx+4]
mov     [ebp+var_21c], ecx
push    1cch
push    edi
mov     [ebx], ecx
call    _memcpy_s
xor     edx, edx
mov     eax, esi
div     [ebp+var_8]
add     esp, 10h
xor     ecx, ecx
cmp     ecx, edx
mov     [edi], edx
sbb     ecx, ecx
pop     edi
neg     ecx
xor     edx, edx
pop     esi
mov     [ebx], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     edi, edi
mov     [ebp+var_c], 0
mov     [ebp+var_24], 0
mov     [ebp+var_18], edi
cmp     ecx, 0ffffffffh
jz      short loc_42202c
inc     ecx
lea     ecx, [ebx+ecx*4]
mov     [ebp+var_1c], ecx
lea     esp, [esp+0]
push    ebx
push    0
push    edx
xor     eax, eax
or      eax, [ecx]
push    edi
push    eax
call    __aulldvrm
mov     [ebp+var_18], ebx
pop     ebx
mov     [ebp+var_40], edx
mov     edi, ecx
mov     ecx, [ebp+var_c]
xor     edx, edx
add     edx, eax
mov     [ebp+var_c], edx
mov     edx, [ebp+var_8]
adc     ecx, 0
mov     [ebp+var_24], ecx
mov     ecx, [ebp+var_1c]
sub     ecx, 4
mov     [ebp+var_1c], ecx
sub     esi, 1
jnz     short loc_421ff0
mov     ebx, [ebp+arg_0]
push    0
lea     eax, [ebp+source]
mov     [ebp+var_21c], 0
push    eax
lea     esi, [ebx+4]
mov     dword ptr [ebx], 0
push    1cch
push    esi
call    _memcpy_s
mov     eax, [ebp+var_18]
add     esp, 10h
mov     edx, [ebp+var_24]
xor     ecx, ecx
cmp     ecx, eax
mov     [esi], edi
mov     [ebx+8], eax
mov     eax, [ebp+var_c]
sbb     ecx, ecx
neg     ecx
pop     edi
inc     ecx
pop     esi
mov     [ebx], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     edi, ecx
ja      loc_42238d
mov     edx, ecx
mov     eax, ecx
sub     edx, edi
cmp     ecx, edx
jl      short loc_4220aa
mov     esi, [ebp+arg_4]
inc     ecx
lea     esi, [esi+edi*4]
lea     ecx, [ebx+ecx*4]
add     esi, 4
mov     edi, [esi]
cmp     edi, [ecx]
jnz     short loc_4220a8
dec     eax
sub     esi, 4
sub     ecx, 4
cmp     eax, edx
jge     short loc_422095
jmp     short loc_4220aa
jnb     short loc_4220ab
inc     edx
test    edx, edx
jz      loc_42238d
mov     eax, [ebp+arg_4]
mov     ebx, [ebp+var_34]
mov     esi, [eax+ebx*4]
mov     ecx, [eax+ebx*4-4]
bsr     eax, esi
mov     [ebp+var_30], esi
mov     [ebp+var_20], ecx
jz      short loc_4220d4
mov     edi, 1fh
sub     edi, eax
jmp     short loc_4220d9
mov     edi, 20h
mov     eax, 20h
mov     [ebp+var_c], edi
sub     eax, edi
mov     [ebp+var_2c], eax
test    edi, edi
jz      short loc_422111
mov     eax, ecx
mov     ecx, [ebp+var_2c]
shr     eax, cl
mov     ecx, edi
shl     [ebp+var_20], cl
shl     esi, cl
or      esi, eax
mov     [ebp+var_30], esi
cmp     ebx, 2
jbe     short loc_422111
mov     esi, [ebp+arg_4]
mov     ecx, [ebp+var_2c]
mov     eax, [esi+ebx*4-8]
shr     eax, cl
or      [ebp+var_20], eax
xor     esi, esi
mov     [ebp+var_1c], 0
add     edx, 0ffffffffh
mov     [ebp+var_18], edx
js      loc_42234d
lea     eax, [edx+ebx]
mov     ebx, [ebp+arg_0]
mov     [ebp+var_38], eax
lea     ecx, [ebx+4]
lea     ecx, [ecx+edx*4]
mov     [ebp+var_3c], ecx
lea     ecx, [ebx-4]
lea     ecx, [ecx+eax*4]
mov     [ebp+var_4c], ecx
cmp     eax, [ebp+var_8]
ja      short loc_42214b
mov     eax, [ecx+8]
jmp     short loc_42214d
xor     eax, eax
mov     edx, [ecx+4]
mov     ecx, [ecx]
mov     [ebp+var_48], eax
mov     [ebp+var_24], 0
mov     [ebp+var_4], eax
mov     [ebp+var_14], ecx
test    edi, edi
jz      short loc_4221af
mov     edi, ecx
mov     eax, edx
mov     ecx, [ebp+var_2c]
xor     esi, esi
mov     edx, [ebp+var_4]
shr     edi, cl
mov     ecx, [ebp+var_c]
call    __allshl
mov     ecx, [ebp+var_c]
or      esi, edx
or      edi, eax
mov     eax, esi
mov     esi, [ebp+var_14]
mov     edx, edi
shl     esi, cl
cmp     [ebp+var_38], 3
mov     [ebp+var_4], eax
mov     [ebp+var_14], esi
jb      short loc_4221af
mov     eax, [ebp+var_34]
add     eax, [ebp+var_18]
mov     ecx, [ebp+var_2c]
mov     eax, [ebx+eax*4-8]
shr     eax, cl
or      esi, eax
mov     eax, [ebp+var_4]
mov     [ebp+var_14], esi
push    ebx
push    0
push    [ebp+var_30]
push    eax
push    edx
call    __aulldvrm
mov     [ebp+var_24], ebx
pop     ebx
mov     ebx, eax
xor     esi, esi
mov     eax, edx
mov     [ebp+var_4], ebx
mov     [ebp+var_10], eax
mov     edi, ecx
mov     [ebp+var_44], ebx
mov     [ebp+var_40], eax
mov     [ebp+var_24], esi
test    eax, eax
jnz     short loc_4221e0
cmp     ebx, 0ffffffffh
jbe     short loc_42220a
push    0
push    [ebp+var_30]
add     ebx, 1
adc     eax, 0ffffffffh
push    eax
push    ebx
call    __allmul
add     edi, eax
adc     esi, edx
or      ebx, 0ffffffffh
xor     eax, eax
mov     [ebp+var_24], esi
mov     [ebp+var_4], ebx
mov     [ebp+var_44], ebx
mov     [ebp+var_10], eax
mov     [ebp+var_40], eax
test    esi, esi
ja      short loc_42225e
jb      short loc_422215
cmp     edi, 0ffffffffh
ja      short loc_42225e
push    eax
push    ebx
xor     ecx, ecx
mov     esi, edi
or      ecx, [ebp+var_14]
push    0
push    [ebp+var_20]
mov     [ebp+var_4], ecx
call    __allmul
cmp     edx, esi
jb      short loc_422258
ja      short loc_422236
cmp     eax, [ebp+var_4]
jbe     short loc_422258
mov     eax, [ebp+var_10]
add     ebx, 0ffffffffh
mov     [ebp+var_44], ebx
adc     eax, 0ffffffffh
add     edi, [ebp+var_30]
mov     [ebp+var_10], eax
adc     [ebp+var_24], 0
mov     [ebp+var_40], eax
jnz     short loc_42225b
cmp     edi, 0ffffffffh
jbe     short loc_422215
jmp     short loc_42225b
mov     eax, [ebp+var_10]
mov     [ebp+var_4], ebx
test    eax, eax
jnz     short loc_42226a
test    ebx, ebx
jz      loc_422317
mov     ecx, [ebp+var_34]
xor     edi, edi
xor     esi, esi
test    ecx, ecx
jz      short loc_4222ca
mov     eax, [ebp+arg_4]
mov     ebx, [ebp+var_3c]
add     eax, 4
mov     [ebp+var_24], eax
mov     [ebp+var_14], ecx
mov     eax, [eax]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_40]
mul     [ebp+var_8]
mov     ecx, eax
mov     eax, [ebp+var_44]
mul     [ebp+var_8]
add     edx, ecx
add     edi, eax
mov     eax, [ebx]
mov     ecx, edi
adc     esi, edx
mov     edi, esi
xor     esi, esi
cmp     eax, ecx
jnb     short loc_4222ae
add     edi, 1
adc     esi, esi
sub     eax, ecx
mov     [ebx], eax
add     ebx, 4
mov     eax, [ebp+var_24]
add     eax, 4
sub     [ebp+var_14], 1
mov     [ebp+var_24], eax
jnz     short loc_422284
mov     ebx, [ebp+var_4]
mov     ecx, [ebp+var_34]
xor     eax, eax
cmp     eax, esi
ja      short loc_422310
jb      short loc_4222d7
cmp     [ebp+var_48], edi
jnb     short loc_422310
test    ecx, ecx
jz      short loc_422309
mov     esi, [ebp+arg_4]
xor     ebx, ebx
mov     edx, [ebp+var_3c]
add     esi, 4
mov     edi, ecx
mov     ecx, [edx]
lea     esi, [esi+4]
xor     eax, eax
lea     edx, [edx+4]
add     ecx, [esi-4]
adc     eax, eax
add     ecx, ebx
mov     [edx-4], ecx
adc     eax, 0
mov     ebx, eax
sub     edi, 1
jnz     short loc_4222e8
mov     ebx, [ebp+var_4]
add     ebx, 0ffffffffh
adc     [ebp+var_10], 0ffffffffh
mov     eax, [ebp+var_38]
dec     eax
mov     [ebp+var_8], eax
mov     esi, [ebp+var_1c]
xor     eax, eax
mov     edx, [ebp+var_18]
add     eax, ebx
mov     ecx, [ebp+var_4c]
mov     ebx, [ebp+arg_0]
adc     esi, 0
sub     [ebp+var_3c], 4
dec     edx
mov     edi, [ebp+var_c]
sub     ecx, 4
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_38]
dec     eax
mov     [ebp+var_18], edx
mov     [ebp+var_38], eax
mov     [ebp+var_4c], ecx
test    edx, edx
jns     loc_422141
mov     ecx, [ebp+var_8]
mov     ebx, [ebp+arg_0]
inc     ecx
mov     eax, ecx
cmp     eax, [ebx]
jnb     short loc_42236e
lea     edx, [ebx+4]
lea     edx, [edx+eax*4]
mov     dword ptr [edx], 0
lea     edx, [edx+4]
inc     eax
cmp     eax, [ebx]
jb      short loc_422360
mov     [ebx], ecx
test    ecx, ecx
jz      short loc_422381
cmp     dword ptr [ebx+ecx*4], 0
jnz     short loc_422381
add     ecx, 0ffffffffh
mov     [ebx], ecx
jnz     short loc_422374
mov     eax, [ebp+var_1c]
mov     edx, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
xor     edx, edx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ecx+10h]
mov     eax, [ecx+8]
add     edx, 1
push    esi
mov     esi, [ecx+14h]
adc     esi, 0
mov     [ecx+10h], edx
or      eax, [ecx+0ch]
mov     [ecx+14h], esi
jz      short loc_4223bf
cmp     esi, [ecx+0ch]
ja      short loc_4223d3
jb      short loc_4223bf
cmp     edx, [ecx+8]
ja      short loc_4223d3
mov     ecx, [ecx]
call    ?get@?$string_input_adapter@_w@__crt_stdio_input@@qaegxz
movzx   eax, ax
mov     ecx, 0ffffh
cmp     ax, cx
jnz     short loc_4223d5
xor     eax, eax
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
mov     eax, 0ffffh
cmp     dx, ax
jz      short loc_422450
mov     eax, [ebp+arg_0]
sub     eax, 0
jz      short loc_422465
sub     eax, 1
jz      short loc_422456
sub     eax, 7
jnz     short loc_422450
push    edx
add     ecx, 4ch
call    ?test@?$scanset_buffer@_w@__crt_stdio_input@@qbe_n_w@z
test    al, al
jnz     short loc_422465
xor     al, al
pop     ebp
retn    8
lea     eax, [edx-9]
cmp     ax, 4
jbe     short loc_422450
cmp     dx, 20h
jz      short loc_422450
mov     al, 1
jmp     short loc_422452
mov     edi, edi
push    ebx
push    esi
mov     esi, ecx
push    edi
lea     ebx, [esi+8]
mov     ecx, ebx
call    unknown_libname_32
test    al, al
jz      short loc_4224e4
lea     edi, [esi+18h]
mov     ecx, edi
call    unknown_libname_30
test    al, al
jnz     short loc_4224f6
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, esi
call    ?process_state@?$input_processor@_wv?$string_input_adapter@_w@__crt_stdio_input@@@__crt_stdio_input@@aae_nxz
test    al, al
jz      short loc_422501
mov     ecx, edi
call    sub_41fa2f
test    al, al
jnz     short loc_4224eb
mov     edi, [esi+58h]
test    edi, edi
jnz     short loc_42252d
cmp     dword ptr [esi+28h], 1
jz      short loc_42252d
mov     ecx, ebx
call    ?get@?$string_input_adapter@_w@__crt_stdio_input@@qaegxz
movzx   eax, ax
mov     ecx, 0ffffh
cmp     ax, cx
jnz     short loc_422525
or      edi, 0ffffffffh
push    eax
mov     ecx, ebx
call    ?unget@?$string_input_adapter@_w@__crt_stdio_input@@qaexg@z
mov     eax, [esi]
and     eax, 1
or      eax, 0
jz      short loc_42254a
mov     esi, [esi+24h]
test    esi, esi
jz      short loc_42254a
call    __errno
mov     [eax], esi
call    __invalid_parameter_noinfo
mov     eax, edi
jmp     short loc_4224e7
mov     edi, edi
push    esi
mov     esi, ecx
mov     ecx, [esi+8]
movzx   eax, word ptr [ecx]
cmp     eax, 64h
ja      loc_42287d
jz      loc_42286b
cmp     eax, 53h
ja      short loc_42280e
jz      loc_4228ed
cmp     eax, 41h
jz      loc_4228ae
cmp     eax, 43h
jz      short loc_42282f
cmp     eax, 44h
jbe     loc_4228d7
cmp     eax, 47h
jbe     loc_4228ae
cmp     eax, 49h
jnz     loc_4228d7
mov     dword ptr [esi+30h], 2
jmp     short loc_422872
sub     eax, 58h
jz      loc_4228be
sub     eax, 3
jz      short loc_422851
sub     eax, 6
jz      loc_4228ae
dec     eax
sub     eax, 1
jnz     loc_4228d7
mov     eax, [esi+20h]
or      eax, [esi+24h]
jnz     short loc_422841
and     [esi+24h], eax
mov     dword ptr [esi+20h], 1
mov     ecx, esi
call    ?set_wide_for_c_s_or_scanset@?$format_string_parser@_w@__crt_stdio_input@@aaexxz
and     dword ptr [esi+30h], 0
jmp     loc_4228fb
mov     ecx, esi
call    ?set_wide_for_c_s_or_scanset@?$format_string_parser@_w@__crt_stdio_input@@aaexxz
add     dword ptr [esi+8], 2
mov     ecx, esi
mov     dword ptr [esi+30h], 8
pop     esi
jmp     sub_422cb4
mov     dword ptr [esi+30h], 3
lea     eax, [ecx+2]
mov     [esi+8], eax
jmp     loc_4228ff
cmp     eax, 70h
ja      short loc_4228c7
jz      short loc_4228b7
cmp     eax, 67h
jbe     short loc_4228ae
cmp     eax, 69h
jz      loc_422805
cmp     eax, 6eh
jz      short loc_4228a5
cmp     eax, 6fh
jnz     short loc_4228d7
mov     dword ptr [esi+30h], 4
jmp     short loc_422872
mov     dword ptr [esi+30h], 9
jmp     short loc_422872
mov     dword ptr [esi+30h], 7
jmp     short loc_422872
mov     dword ptr [esi+28h], 9
mov     dword ptr [esi+30h], 6
jmp     short loc_422872
sub     eax, 73h
jz      short loc_4228ed
dec     eax
sub     eax, 1
jz      short loc_4228e4
sub     eax, 3
jz      short loc_4228be
push    16h
mov     ecx, esi
call    ?reset_token_state_for_error@?$format_string_parser@_w@__crt_stdio_input@@aaexh@z
xor     al, al
pop     esi
retn
mov     dword ptr [esi+30h], 5
jmp     short loc_422872
mov     ecx, esi
call    ?set_wide_for_c_s_or_scanset@?$format_string_parser@_w@__crt_stdio_input@@aaexxz
mov     dword ptr [esi+30h], 1
add     dword ptr [esi+8], 2
mov     al, 1
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
push    esi
mov     esi, ecx
mov     [ebp+var_1c], esi
lea     ebx, [esi+34h]
mov     ecx, ebx
mov     [ebp+var_18], ebx
call    sub_421ec0
test    eax, eax
jnz     short loc_422ce4
push    0ch
mov     ecx, esi
call    ?reset_token_state_for_error@?$format_string_parser@_w@__crt_stdio_input@@aaexh@z
xor     al, al
jmp     loc_422e17
push    edi
mov     ecx, ebx
call    ?reset@?$scanset_buffer@_w@__crt_stdio_input@@qaexxz
mov     edi, [esi+8]
mov     [ebp+var_14], 5eh
mov     [ebp+var_8], edi
movzx   eax, word ptr [edi]
mov     ecx, eax
mov     edx, eax
mov     [ebp+var_20], ecx
mov     ecx, edi
cmp     ax, word ptr [ebp+var_14]
jnz     short loc_422d19
add     edi, 2
mov     ecx, edi
mov     [esi+8], edi
mov     [ebp+var_8], edi
movzx   edx, word ptr [ecx]
movzx   eax, dx
mov     [ebp+var_4], 5dh
mov     edx, eax
cmp     ax, word ptr [ebp+var_4]
jnz     short loc_422d46
push    [ebp+var_4]
lea     eax, [edi+2]
mov     ecx, ebx
mov     [esi+8], eax
call    ?set@?$scanset_buffer@_w@__crt_stdio_input@@qaex_w@z
mov     edi, [esi+8]
mov     ecx, edi
mov     [ebp+var_8], edi
movzx   edx, word ptr [ecx]
movzx   eax, dx
xor     edx, edx
mov     [ebp+var_10], edx
cmp     ax, word ptr [ebp+var_4]
jz      loc_422def
mov     edx, edi
movzx   eax, ax
mov     [ebp+var_c], eax
test    ax, ax
jz      loc_422ded
cmp     eax, 2dh
jnz     short loc_422dc5
lea     eax, [edx-2]
cmp     eax, [ebp+var_10]
jz      short loc_422dc2
cmp     edx, edi
jz      short loc_422dc2
lea     eax, [edx+2]
movzx   ecx, word ptr [eax]
cmp     cx, word ptr [ebp+var_4]
jz      short loc_422dc2
movzx   ecx, word ptr [edx-2]
movzx   ebx, word ptr [eax]
mov     [ebp+var_10], eax
cmp     cx, bx
jbe     short loc_422d9b
mov     eax, ecx
mov     ecx, ebx
mov     ebx, eax
inc     ebx
movzx   eax, cx
mov     [ebp+var_c], eax
cmp     cx, bx
jz      short loc_422dcd
mov     esi, [ebp+var_18]
mov     edi, eax
push    edi
mov     ecx, esi
call    ?set@?$scanset_buffer@_w@__crt_stdio_input@@qaex_w@z
inc     edi
cmp     di, bx
jnz     short loc_422dac
mov     esi, [ebp+var_1c]
mov     edi, [ebp+var_8]
jmp     short loc_422dcd
mov     eax, [ebp+var_c]
push    eax
mov     ecx, ebx
call    ?set@?$scanset_buffer@_w@__crt_stdio_input@@qaex_w@z
mov     ecx, [esi+8]
add     ecx, 2
mov     edx, ecx
mov     [esi+8], ecx
movzx   eax, word ptr [edx]
mov     ebx, eax
mov     [ebp+var_c], ebx
lea     ebx, [esi+34h]
cmp     ax, word ptr [ebp+var_4]
jnz     loc_422d5a
xor     edx, edx
pop     edi
cmp     [ecx], dx
jnz     short loc_422dfc
push    16h
jmp     loc_422cd6
mov     eax, [ebp+var_14]
cmp     word ptr [ebp+var_20], ax
jnz     short loc_422e0f
mov     ecx, ebx
call    ?invert@?$scanset_buffer@_w@__crt_stdio_input@@qaexxz
mov     ecx, [esi+8]
lea     eax, [ecx+2]
mov     [esi+8], eax
mov     al, 1
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     eax, 0ah
ja      short def_422ef7
movzx   eax, ds:byte_422f2b[eax]
jmp     ds:jpt_422ef7[eax*4]
xor     eax, eax
inc     eax
pop     ebp
retn
push    2
pop     eax
pop     ebp
retn
push    4
jmp     short loc_422f05
push    8
jmp     short loc_422f05
xor     eax, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    1
push    [ebp+arg_8]
push    ecx
push    ecx
mov     eax, esp
push    [ebp+arg_4]
push    [ebp+arg_0]
push    eax
call    unknown_libname_34
add     esp, 0ch
push    0
call    sub_415881
add     esp, 14h
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    1
push    [ebp+arg_8]
push    ecx
push    ecx
mov     eax, esp
push    [ebp+arg_4]
push    [ebp+arg_0]
push    eax
call    unknown_libname_34
add     esp, 0ch
push    0
call    sub_415aa4
add     esp, 14h
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    0
push    [ebp+arg_8]
push    ecx
push    ecx
mov     eax, esp
push    [ebp+arg_4]
push    [ebp+arg_0]
push    eax
call    unknown_libname_34
add     esp, 0ch
push    0
call    sub_4160e4
add     esp, 14h
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 1ch
lea     ecx, [ebp+var_1c]
push    ebx
push    [ebp+arg_8]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     ebx, [ebp+c]
cmp     ebx, 100h
jnb     short loc_423223
lea     eax, [ebp+locale]
push    eax
push    ebx
call    ?internal_isupper_l@@ya_nhqau__crt_locale_pointers@@@z
pop     ecx
pop     ecx
test    al, al
jz      short loc_42320a
cmp     [ebp+var_10], 0
mov     eax, [ebp+locale.locinfo]
mov     eax, [eax+94h]
movzx   ecx, byte ptr [eax+ebx]
jz      short loc_423203
mov     eax, [ebp+var_1c]
and     dword ptr [eax+350h], 0fffffffdh
mov     eax, ecx
jmp     loc_4232f5
cmp     [ebp+var_10], 0
jz      loc_4232b7
mov     eax, [ebp+var_1c]
and     dword ptr [eax+350h], 0fffffffdh
jmp     loc_4232b7
xor     eax, eax
mov     [ebp+var_2], al
mov     eax, [ebp+locale.locinfo]
cmp     dword ptr [eax+4], 1
jle     short loc_42325f
mov     eax, ebx
lea     ecx, [ebp+locale]
sar     eax, 8
mov     [ebp+var_c], eax
push    ecx
movzx   eax, al
push    eax
call    sub_416faa
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_42325f
mov     eax, [ebp+var_c]
mov     [ebp+string], al
xor     eax, eax
push    2
mov     [ebp+var_3], bl
mov     [ebp+var_2], al
pop     ecx
jmp     short loc_423275
call    __errno
xor     ecx, ecx
mov     dword ptr [eax], 2ah
xor     eax, eax
mov     [ebp+string], bl
inc     ecx
mov     [ebp+var_3], al
mov     [ebp+deststr], ax
lea     edx, [ebp+deststr]
mov     [ebp+var_6], al
mov     eax, [ebp+locale.locinfo]
push    1
push    dword ptr [eax+8]
push    3
push    edx
push    ecx
lea     ecx, [ebp+string]
push    ecx
push    [ebp+dwmapflags]
push    dword ptr [eax+0a8h]
lea     eax, [ebp+locale]
push    eax
call    ___acrt_lcmapstringa
add     esp, 24h
test    eax, eax
jnz     short loc_4232bb
cmp     [ebp+var_10], al
jz      short loc_4232b7
mov     ecx, [ebp+var_1c]
and     dword ptr [ecx+350h], 0fffffffdh
mov     eax, ebx
jmp     short loc_4232f5
cmp     eax, 1
jnz     short loc_4232d6
cmp     [ebp+var_10], 0
movzx   eax, byte ptr [ebp+deststr]
jz      short loc_4232f5
mov     ecx, [ebp+var_1c]
and     dword ptr [ecx+350h], 0fffffffdh
jmp     short loc_4232f5
movzx   edx, byte ptr [ebp+deststr]
movzx   eax, byte ptr [ebp+deststr+1]
shl     edx, 8
or      edx, eax
cmp     [ebp+var_10], 0
jz      short loc_4232f3
mov     ecx, [ebp+var_1c]
and     dword ptr [ecx+350h], 0fffffffdh
mov     eax, edx
pop     ebx
leave
retn
mov     edi, edi
push    esi
mov     esi, ecx
push    edi
mov     edi, [esi+8]
cmp     [esi+4], edi
jz      short loc_423973
xor     eax, eax
jmp     short loc_4239e5
cmp     dword ptr [esi], 0
jnz     short loc_42399e
push    4
push    4
call    __calloc_base
push    0
mov     [esi], eax
call    __free_base
mov     eax, [esi]
add     esp, 0ch
test    eax, eax
jz      short loc_4239ab
mov     [esi+4], eax
add     eax, 10h
mov     [esi+8], eax
jmp     short loc_42396f
sub     edi, [esi]
sar     edi, 2
cmp     edi, 7fffffffh
jbe     short loc_4239b0
push    0ch
pop     eax
jmp     short loc_4239e5
push    ebx
push    4
lea     ebx, [edi+edi]
push    ebx
push    dword ptr [esi]
call    __recalloc_base
add     esp, 0ch
test    eax, eax
jnz     short loc_4239ca
push    0ch
pop     esi
jmp     short loc_4239da
mov     [esi], eax
lea     ecx, [eax+edi*4]
lea     eax, [eax+ebx*4]
mov     [esi+4], ecx
mov     [esi+8], eax
xor     esi, esi
push    0
call    __free_base
pop     ecx
mov     eax, esi
pop     ebx
pop     edi
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
mov     ebx, [ebp+str]
test    ebx, ebx
jnz     short loc_423a9d
call    __errno
mov     dword ptr [eax], 16h
or      eax, 0ffffffffh
jmp     loc_423cbf
push    esi
push    edi
push    3dh
push    ebx
mov     edi, ebx
call    _wcschr
mov     [ebp+var_c], eax
pop     ecx
pop     ecx
test    eax, eax
jz      loc_423ca6
cmp     eax, ebx
jz      loc_423ca6
movzx   ecx, word ptr [eax+2]
mov     eax, ecx
mov     [ebp+var_10], eax
mov     [ebp+sizeinwords], eax
call    sub_423d8b
mov     esi, dword_42d358
xor     ebx, ebx
test    esi, esi
jnz     loc_423b64
mov     eax, dword_42d354
cmp     [ebp+arg_4], ebx
jz      short loc_423b01
test    eax, eax
jz      short loc_423b01
call    sub_41ae9b
test    eax, eax
jz      loc_423ca6
call    sub_423d8b
jmp     short loc_423b56
cmp     word ptr [ebp+sizeinwords], bx
jnz     short loc_423b0e
xor     ebx, ebx
jmp     loc_423cb4
test    eax, eax
jnz     short loc_423b3f
push    4
push    1
call    __calloc_base
push    ebx
mov     dword_42d354, eax
call    __free_base
add     esp, 0ch
cmp     dword_42d354, ebx
jz      loc_423cb1
mov     esi, dword_42d358
test    esi, esi
jnz     short loc_423b64
push    4
push    1
call    __calloc_base
push    ebx
mov     dword_42d358, eax
call    __free_base
add     esp, 0ch
mov     esi, dword_42d358
test    esi, esi
jz      loc_423cb1
mov     ecx, [ebp+var_c]
mov     eax, edi
sub     ecx, eax
sar     ecx, 1
push    ecx
push    eax
mov     [ebp+var_c], ecx
call    ??$find_in_environment_nolock@_w@@yahqb_wi@z
mov     [ebp+count], eax
pop     ecx
pop     ecx
test    eax, eax
js      short loc_423bcc
cmp     [esi], ebx
jz      short loc_423bcc
push    dword ptr [esi+eax*4]
call    __free_base
pop     ecx
mov     ecx, [ebp+count]
cmp     word ptr [ebp+sizeinwords], bx
jz      short loc_423bab
mov     eax, [ebp+str]
mov     edi, ebx
mov     [esi+ecx*4], eax
jmp     loc_423c23
mov     eax, [esi+ecx*4+4]
mov     [esi+ecx*4], eax
inc     ecx
cmp     [esi+ecx*4], ebx
jnz     short loc_423ba3
push    4
push    ecx
push    esi
call    __recalloc_base
push    ebx
mov     esi, eax
call    __free_base
add     esp, 10h
mov     eax, edi
test    esi, esi
jz      short loc_423c23
jmp     short loc_423c1d
cmp     word ptr [ebp+sizeinwords], bx
jz      loc_423cb4
neg     eax
mov     [ebp+count], eax
lea     ecx, [eax+2]
cmp     ecx, eax
jb      loc_423cb1
cmp     ecx, 3fffffffh
jnb     loc_423cb1
push    4
push    ecx
push    esi
call    __recalloc_base
push    ebx
mov     esi, eax
call    __free_base
add     esp, 10h
test    esi, esi
jz      loc_423cb1
mov     ecx, [ebp+count]
mov     edi, ebx
mov     eax, [ebp+str]
mov     [esi+ecx*4], eax
mov     [esi+ecx*4+4], ebx
mov     dword_42d358, esi
cmp     [ebp+arg_4], ebx
jz      loc_423cb4
mov     ecx, eax
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
cmp     ax, bx
jnz     short loc_423c31
sub     ecx, edx
sar     ecx, 1
push    2
lea     eax, [ecx+2]
push    eax
mov     [ebp+sizeinwords], eax
call    __calloc_base
mov     esi, eax
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_423c9d
mov     eax, [ebp+str]
push    eax
push    [ebp+sizeinwords]
push    esi
call    _wcscpy_s
add     esp, 0ch
test    eax, eax
jnz     short loc_423cc2
mov     eax, [ebp+var_c]
inc     eax
lea     ecx, [esi+eax*2]
xor     eax, eax
mov     [ecx-2], ax
mov     eax, [ebp+var_10]
movzx   eax, ax
neg     eax
sbb     eax, eax
and     eax, ecx
push    eax
push    esi
call    ds:setenvironmentvariablew
test    eax, eax
jnz     short loc_423c9d
call    __errno
or      ebx, 0ffffffffh
mov     dword ptr [eax], 2ah
push    esi
call    __free_base
pop     ecx
jmp     short loc_423cb4
call    __errno
mov     dword ptr [eax], 16h
or      ebx, 0ffffffffh
push    edi
call    __free_base
pop     ecx
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
leave
retn
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
call    __invoke_watson
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    edi
mov     edi, [ebp+arg_0]
test    edi, edi
jnz     short loc_423ce1
xor     eax, eax
pop     edi
leave
retn
xor     edx, edx
mov     eax, edi
mov     ecx, edx
mov     [ebp+var_4], edx
cmp     [edi], edx
jz      short loc_423cf6
lea     eax, [eax+4]
inc     ecx
cmp     [eax], edx
jnz     short loc_423cee
push    esi
lea     eax, [ecx+1]
push    4
push    eax
call    __calloc_base
mov     esi, eax
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_423d79
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_423d68
push    ebx
mov     ebx, esi
sub     ebx, edi
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
cmp     ax, word ptr [ebp+var_4]
jnz     short loc_423d18
sub     ecx, edx
sar     ecx, 1
push    2
lea     eax, [ecx+1]
push    eax
mov     [ebp+sizeinwords], eax
call    __calloc_base
mov     [ebx+edi], eax
xor     eax, eax
push    eax
call    __free_base
add     esp, 0ch
cmp     dword ptr [ebx+edi], 0
jz      short loc_423d79
push    dword ptr [edi]
push    [ebp+sizeinwords]
push    dword ptr [ebx+edi]
call    _wcscpy_s
add     esp, 0ch
test    eax, eax
jnz     short loc_423d7e
add     edi, 4
mov     ecx, [edi]
test    ecx, ecx
jnz     short loc_423d15
pop     ebx
xor     eax, eax
push    eax
call    __free_base
pop     ecx
mov     eax, esi
pop     esi
jmp     loc_423cde
call    _abort
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    eax
call    __invoke_watson
mov     eax, dword_42d358
cmp     eax, dword_42d35c
jnz     short locret_423da4
push    eax
call    sub_423ccd
pop     ecx
mov     dword_42d358, eax
retn
mov     edi, edi
push    ebp
mov     ebp, esp
pop     ebp
jmp     sub_423a7a
push    10h
push    offset stru_42bb68
call    __seh_prolog4
cmp     [ebp+arg_0], 2000h
jb      short loc_423eeb
call    __errno
push    9
pop     esi
mov     [eax], esi
call    __invalid_parameter_noinfo
mov     eax, esi
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn
xor     esi, esi
mov     [ebp+var_1c], esi
push    7
call    ___acrt_lock
pop     ecx
mov     [ebp+ms_exc.registration.trylevel], esi
mov     edi, esi
mov     eax, dword_42d588
mov     [ebp+var_20], edi
cmp     [ebp+arg_0], eax
jl      short loc_423f29
cmp     dword_42d388[edi*4], esi
jnz     short loc_423f44
call    ___acrt_lowio_create_handle_array
mov     dword_42d388[edi*4], eax
test    eax, eax
jnz     short loc_423f37
push    0ch
pop     esi
mov     [ebp+var_1c], esi
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_423f4a
jmp     short loc_423ed9
mov     eax, dword_42d588
add     eax, 40h
mov     dword_42d588, eax
inc     edi
jmp     short loc_423f02
mov     esi, [ebp+var_1c]
push    7
call    ___acrt_unlock
pop     ecx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     edi, [ebp+arg_4]
jz      short loc_4242ed
mov     esi, edi
mov     ebx, [esi]
test    ebx, ebx
jz      short loc_4242b2
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
test    al, al
jz      short loc_4242ba
add     esi, 8
cmp     esi, [ebp+arg_4]
jnz     short loc_42429e
cmp     esi, [ebp+arg_4]
jz      short loc_4242ed
cmp     esi, edi
jz      short loc_4242e9
add     esi, 0fffffffch
cmp     dword ptr [esi-4], 0
jz      short loc_4242df
mov     ebx, [esi]
test    ebx, ebx
jz      short loc_4242df
push    0
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
pop     ecx
sub     esi, 8
lea     eax, [esi+4]
cmp     eax, edi
jnz     short loc_4242c6
xor     al, al
jmp     short loc_4242ef
mov     al, 1
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
cmp     [ebp+arg_0], esi
jz      short loc_424320
push    edi
mov     edi, [esi-4]
test    edi, edi
jz      short loc_424317
push    0
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
pop     ecx
sub     esi, 8
cmp     esi, [ebp+arg_0]
jnz     short loc_424303
pop     edi
mov     al, 1
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_42d58c, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ___security_cookie
mov     ecx, esi
xor     esi, dword_42d58c
and     ecx, 1fh
ror     esi, cl
test    esi, esi
jnz     short loc_424371
xor     eax, eax
jmp     short loc_42437f
push    [ebp+arg_0]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     ecx
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
and     al, 3
cmp     al, 2
jnz     short loc_42454c
test    byte ptr [ebp+arg_0], 0c0h
jnz     short loc_424555
test    [ebp+arg_0], 800h
jz      short loc_424559
mov     al, 1
pop     ebp
retn
xor     al, al
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, dword ptr [ebp+arg_0]
test    esi, esi
jnz     short loc_4245d6
push    esi
call    ?common_flush_all@@yah_n@z
pop     ecx
jmp     short loc_424604
push    esi
call    ___acrt_stdio_flush_nolock
pop     ecx
test    eax, eax
jnz     short loc_424601
mov     eax, [esi+0ch]
shr     eax, 0bh
test    al, 1
jz      short loc_4245fd
push    esi
call    sub_42592d
push    eax
call    __commit
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_424601
xor     eax, eax
jmp     short loc_424604
or      eax, 0ffffffffh
pop     esi
pop     ebp
retn
push    1
call    ?common_flush_all@@yah_n@z
pop     ecx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
fnstsw  [ebp+var_4]
fnclex
xor     esi, esi
inc     esi
cmp     dword_42cd38, esi
jl      loc_42489a
mov     ax, [ebp+var_4]
xor     ecx, ecx
mov     edx, ecx
push    edi
mov     edi, 80000h
test    al, 3fh
jz      short loc_424853
movzx   edx, ax
and     edx, esi
shl     edx, 4
test    al, 4
jz      short loc_424839
or      edx, 8
test    al, 8
jz      short loc_424840
or      edx, 4
test    al, 10h
jz      short loc_424847
or      edx, 2
test    al, 20h
jz      short loc_42484d
or      edx, esi
test    al, 2
jz      short loc_424853
or      edx, edi
stmxcsr [ebp+var_8]
mov     eax, [ebp+var_8]
and     eax, 0ffffffc0h
mov     [ebp+var_c], eax
ldmxcsr [ebp+var_c]
mov     eax, [ebp+var_8]
test    al, 3fh
jz      short loc_424893
mov     ecx, eax
and     ecx, esi
shl     ecx, 4
test    al, 4
jz      short loc_424879
or      ecx, 8
test    al, 8
jz      short loc_424880
or      ecx, 4
test    al, 10h
jz      short loc_424887
or      ecx, 2
test    al, 20h
jz      short loc_42488d
or      ecx, esi
test    al, 2
jz      short loc_424893
or      ecx, edi
or      ecx, edx
mov     eax, ecx
pop     edi
jmp     short loc_4248d6
mov     cx, [ebp+var_4]
xor     eax, eax
test    cl, 3fh
jz      short loc_4248d6
movzx   eax, cx
and     eax, esi
shl     eax, 4
test    cl, 4
jz      short loc_4248b5
or      eax, 8
test    cl, 8
jz      short loc_4248bd
or      eax, 4
test    cl, 10h
jz      short loc_4248c5
or      eax, 2
test    cl, 20h
jz      short loc_4248cc
or      eax, esi
test    cl, 2
jz      short loc_4248d6
or      eax, 80000h
pop     esi
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
fstcw   [ebp+var_8]
mov     ax, [ebp+var_8]
movzx   ecx, ax
and     ecx, 1
shl     ecx, 4
test    al, 4
jz      short loc_4248f9
or      ecx, 8
test    al, 8
jz      short loc_424900
or      ecx, 4
test    al, 10h
jz      short loc_424907
or      ecx, 2
test    al, 20h
jz      short loc_42490e
or      ecx, 1
test    al, 2
jz      short loc_424918
or      ecx, 80000h
push    ebx
push    esi
movzx   esi, ax
mov     ebx, 0c00h
mov     edx, esi
push    edi
mov     edi, 200h
and     edx, ebx
jz      short loc_424954
cmp     edx, 400h
jz      short loc_42494e
cmp     edx, 800h
jz      short loc_42494a
cmp     edx, ebx
jnz     short loc_424954
or      ecx, 300h
jmp     short loc_424954
or      ecx, edi
jmp     short loc_424954
or      ecx, 100h
and     esi, 300h
jz      short loc_424968
cmp     esi, edi
jnz     short loc_42496e
or      ecx, 10000h
jmp     short loc_42496e
or      ecx, 20000h
movzx   eax, ax
mov     edx, 1000h
test    edx, eax
jz      short loc_424980
or      ecx, 40000h
mov     edi, [ebp+arg_4]
mov     esi, edi
mov     eax, [ebp+arg_0]
not     esi
and     esi, ecx
and     eax, edi
or      esi, eax
cmp     esi, ecx
jz      loc_424a40
push    esi
call    __hw_cw
pop     ecx
mov     [ebp+var_4], ax
fldcw   [ebp+var_4]
fstcw   [ebp+var_4]
mov     ax, [ebp+var_4]
movzx   esi, ax
and     esi, 1
shl     esi, 4
test    al, 4
jz      short loc_4249be
or      esi, 8
test    al, 8
jz      short loc_4249c5
or      esi, 4
test    al, 10h
jz      short loc_4249cc
or      esi, 2
test    al, 20h
jz      short loc_4249d3
or      esi, 1
test    al, 2
jz      short loc_4249dd
or      esi, 80000h
movzx   edx, ax
mov     ecx, edx
and     ecx, ebx
jz      short loc_424a10
cmp     ecx, 400h
jz      short loc_424a0a
cmp     ecx, 800h
jz      short loc_424a02
cmp     ecx, ebx
jnz     short loc_424a10
or      esi, 300h
jmp     short loc_424a10
or      esi, 200h
jmp     short loc_424a10
or      esi, 100h
and     edx, 300h
jz      short loc_424a28
cmp     edx, 200h
jnz     short loc_424a2e
or      esi, 10000h
jmp     short loc_424a2e
or      esi, 20000h
movzx   eax, ax
mov     edx, 1000h
test    edx, eax
jz      short loc_424a40
or      esi, 40000h
cmp     dword_42cd38, 1
jl      loc_424bd3
and     edi, 308031fh
stmxcsr [ebp+var_10]
mov     ecx, [ebp+var_10]
mov     eax, ecx
shr     eax, 3
and     eax, 10h
test    ecx, 200h
jz      short loc_424a6d
or      eax, 8
test    ecx, 400h
jz      short loc_424a78
or      eax, 4
test    ecx, 800h
jz      short loc_424a83
or      eax, 2
test    edx, ecx
jz      short loc_424a8a
or      eax, 1
test    ecx, 100h
jz      short loc_424a97
or      eax, 80000h
mov     edx, ecx
mov     ebx, 6000h
and     edx, ebx
jz      short loc_424ac9
cmp     edx, 2000h
jz      short loc_424ac4
cmp     edx, 4000h
jz      short loc_424abd
cmp     edx, ebx
jnz     short loc_424ac9
or      eax, 300h
jmp     short loc_424ac9
or      eax, 200h
jmp     short loc_424ac9
or      eax, 100h
push    40h
and     ecx, 8040h
pop     ebx
sub     ecx, ebx
jz      short loc_424af0
sub     ecx, 7fc0h
jz      short loc_424ae9
sub     ecx, ebx
jnz     short loc_424af5
or      eax, 1000000h
jmp     short loc_424af5
or      eax, 3000000h
jmp     short loc_424af5
or      eax, 2000000h
mov     ecx, edi
and     edi, [ebp+arg_0]
not     ecx
and     ecx, eax
or      ecx, edi
cmp     ecx, eax
jz      loc_424bbc
push    ecx
call    ___hw_cw_sse2
push    eax
mov     [ebp+var_c], eax
call    ___set_fpsr_sse2
pop     ecx
pop     ecx
stmxcsr [ebp+var_c]
mov     ecx, [ebp+var_c]
mov     eax, ecx
shr     eax, 3
and     eax, 10h
test    ecx, 200h
jz      short loc_424b33
or      eax, 8
test    ecx, 400h
jz      short loc_424b3e
or      eax, 4
test    ecx, 800h
jz      short loc_424b49
or      eax, 2
test    ecx, 1000h
jz      short loc_424b54
or      eax, 1
test    ecx, 100h
jz      short loc_424b61
or      eax, 80000h
mov     edx, ecx
mov     edi, 6000h
and     edx, edi
jz      short loc_424b93
cmp     edx, 2000h
jz      short loc_424b8e
cmp     edx, 4000h
jz      short loc_424b87
cmp     edx, edi
jnz     short loc_424b93
or      eax, 300h
jmp     short loc_424b93
or      eax, 200h
jmp     short loc_424b93
or      eax, 100h
and     ecx, 8040h
sub     ecx, ebx
jz      short loc_424bb7
sub     ecx, 7fc0h
jz      short loc_424bb0
sub     ecx, ebx
jnz     short loc_424bbc
or      eax, 1000000h
jmp     short loc_424bbc
or      eax, 3000000h
jmp     short loc_424bbc
or      eax, 2000000h
mov     ecx, eax
xor     eax, esi
or      ecx, esi
test    eax, 8031fh
jz      short loc_424bcf
or      ecx, 80000000h
mov     eax, ecx
jmp     short loc_424bd5
mov     eax, esi
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
push    edi
mov     edi, [ebp+dst]
test    edi, edi
jnz     short loc_424df9
cmp     [ebp+size], edi
jbe     short loc_424df9
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_424df2
and     [eax], edi
xor     eax, eax
jmp     loc_424eb3
push    ebx
mov     ebx, [ebp+arg_0]
test    ebx, ebx
jz      short loc_424e04
or      dword ptr [ebx], 0ffffffffh
cmp     [ebp+size], 7fffffffh
push    esi
jbe     short loc_424e22
call    __errno
push    16h
pop     esi
mov     [eax], esi
call    __invalid_parameter_noinfo
jmp     loc_424eaf
push    [ebp+arg_10]
lea     ecx, [ebp+var_18]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     eax, [ebp+var_14]
xor     esi, esi
mov     ecx, [eax+8]
cmp     ecx, 0fde9h
jnz     short loc_424e69
lea     eax, [ebp+var_8]
mov     [ebp+var_8], esi
push    eax
movzx   eax, [ebp+widecharstr]
push    eax
push    edi
mov     [ebp+var_4], esi
call    sub_426f0c
add     esp, 0ch
test    ebx, ebx
jz      short loc_424e5b
mov     [ebx], eax
cmp     eax, 4
jle     short loc_424e9f
call    __errno
mov     esi, [eax]
jmp     short loc_424e9f
cmp     [eax+0a8h], esi
jnz     short loc_424ecd
mov     ax, [ebp+widecharstr]
mov     ecx, 0ffh
cmp     ax, cx
jbe     short loc_424eb6
test    edi, edi
jz      short loc_424e95
cmp     [ebp+size], esi
jbe     short loc_424e95
push    [ebp+size]
push    esi
push    edi
call    _memset
add     esp, 0ch
call    __errno
push    2ah
pop     esi
mov     [eax], esi
cmp     [ebp+var_c], 0
jz      short loc_424eaf
mov     ecx, [ebp+var_18]
and     dword ptr [ecx+350h], 0fffffffdh
mov     eax, esi
pop     esi
pop     ebx
pop     edi
leave
retn
test    edi, edi
jz      short loc_424ec1
cmp     [ebp+size], esi
jbe     short loc_424f1b
mov     [edi], al
test    ebx, ebx
jz      short loc_424e9f
mov     dword ptr [ebx], 1
jmp     short loc_424e9f
lea     eax, [ebp+var_4]
mov     [ebp+var_4], esi
push    eax
push    esi
push    [ebp+size]
lea     eax, [ebp+widecharstr]
push    edi
push    1
push    eax
push    esi
push    ecx
call    ___acrt_widechartomultibyte
add     esp, 20h
test    eax, eax
jz      short loc_424efa
cmp     [ebp+var_4], esi
jnz     short loc_424e95
test    ebx, ebx
jz      short loc_424e9f
mov     [ebx], eax
jmp     short loc_424e9f
call    ds:getlasterror
cmp     eax, 7ah
jnz     short loc_424e95
test    edi, edi
jz      short loc_424f1b
cmp     [ebp+size], esi
jbe     short loc_424f1b
push    [ebp+size]
push    esi
push    edi
call    _memset
add     esp, 0ch
call    __errno
push    22h
pop     esi
mov     [eax], esi
call    __invalid_parameter_noinfo
jmp     loc_424e9f
mov     edi, edi
push    ebp
mov     ebp, esp
push    0
push    dword ptr [ebp+widecharstr]
push    [ebp+size]
push    [ebp+dst]
push    [ebp+arg_0]
call    sub_424dd4
add     esp, 14h
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    esi
push    edi
mov     edi, [ebp+arg_8]
test    edi, edi
jle     short loc_42537b
mov     eax, edi
jmp     short loc_42537d
xor     eax, eax
add     eax, 9
cmp     [ebp+arg_4], eax
ja      short loc_42539a
call    __errno
push    22h
pop     esi
mov     [eax], esi
call    __invalid_parameter_noinfo
mov     eax, esi
pop     edi
pop     esi
leave
retn
push    ebx
push    [ebp+arg_1c]
lea     ecx, [ebp+var_10]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     dl, [ebp+arg_18]
mov     ebx, [ebp+arg_0]
test    dl, dl
jz      short loc_4253d5
mov     ecx, [ebp+arg_14]
xor     eax, eax
test    edi, edi
setnle  al
push    eax
xor     eax, eax
cmp     dword ptr [ecx], 2dh
setz    al
add     eax, ebx
push    eax
push    [ebp+arg_4]
push    ebx
call    ?shift_bytes@@yaxqadi0h@z
mov     dl, [ebp+arg_18]
add     esp, 10h
mov     eax, [ebp+arg_14]
mov     esi, ebx
cmp     dword ptr [eax], 2dh
jnz     short loc_4253e5
mov     byte ptr [ebx], 2dh
lea     esi, [ebx+1]
test    edi, edi
jle     short loc_4253fe
mov     al, [esi+1]
mov     [esi], al
inc     esi
mov     eax, [ebp+var_c]
mov     eax, [eax+88h]
mov     eax, [eax]
mov     al, [eax]
mov     [esi], al
movzx   eax, dl
xor     eax, 1
add     eax, edi
add     esi, eax
or      eax, 0ffffffffh
cmp     [ebp+arg_4], eax
jz      short loc_425417
mov     eax, ebx
sub     eax, esi
add     eax, [ebp+arg_4]
push    offset src
push    eax
push    esi
call    _strcpy_s
add     esp, 0ch
pop     ebx
test    eax, eax
jnz     short loc_4254a1
lea     ecx, [esi+2]
cmp     [ebp+arg_c], al
jz      short loc_425436
mov     byte ptr [esi], 45h
mov     edx, [ebp+arg_14]
mov     eax, [edx+8]
cmp     byte ptr [eax], 30h
jz      short loc_425470
mov     edx, [edx+4]
sub     edx, 1
jns     short loc_42544f
neg     edx
mov     byte ptr [esi+1], 2dh
push    64h
pop     edi
cmp     edx, edi
jl      short loc_42545e
mov     eax, edx
cdq
idiv    edi
add     [esi+2], al
push    0ah
pop     edi
cmp     edx, edi
jl      short loc_42546d
mov     eax, edx
cdq
idiv    edi
add     [esi+3], al
add     [esi+4], dl
cmp     [ebp+arg_10], 2
jnz     short loc_42548a
cmp     byte ptr [ecx], 30h
jnz     short loc_42548a
push    3
lea     eax, [ecx+1]
push    eax
push    ecx
call    _memmove_0
add     esp, 0ch
cmp     [ebp+var_4], 0
jz      short loc_42549a
mov     eax, [ebp+var_10]
and     dword ptr [eax+350h], 0fffffffdh
xor     eax, eax
jmp     loc_425396
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    eax
call    __invoke_watson
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    esi
mov     esi, [ebp+arg_0]
cmp     esi, 0fffffffeh
jnz     short loc_425ac3
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
jmp     short loc_425b24
test    esi, esi
js      short loc_425b0c
cmp     esi, dword_42d588
jnb     short loc_425b0c
mov     eax, esi
mov     edx, esi
and     eax, 3fh
sar     edx, 6
imul    ecx, eax, 30h
mov     eax, dword_42d388[edx*4]
test    byte ptr [eax+ecx+28h], 1
jz      short loc_425b0c
lea     eax, [ebp+arg_0]
mov     [ebp+var_8], esi
mov     [ebp+var_c], eax
lea     ecx, [ebp+var_1]
lea     eax, [ebp+var_8]
mov     [ebp+var_10], esi
push    eax
lea     eax, [ebp+var_c]
push    eax
lea     eax, [ebp+var_10]
push    eax
call    ??$?rv_lambda_123407a5e2ac06da108355a851863b7a_@@aav_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_@@v_lambda_ae55bdf541ad94d75914d381c370e64d_@@@?$__crt_seh_guarded_call@h@@qaeh$$qav_lambda_123407a5e2ac06da108355a851863b7a_@@aav_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_@@$$qav_lambda_ae55bdf541ad94d75914d381c370e64d_@@@z
jmp     short loc_425b27
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
pop     esi
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 118h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_c]
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+var_104], esi
mov     [ebp+var_108], ebx
push    edi
mov     edi, [ebp+arg_8]
mov     [ebp+var_100], edi
test    esi, esi
jnz     short loc_425c6f
test    ecx, ecx
jz      short loc_425c6f
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    edi, edi
jz      short loc_425c4e
test    ebx, ebx
jz      short loc_425c4e
mov     [ebp+var_118], 0
cmp     ecx, 2
jb      short loc_425c5e
dec     ecx
imul    ecx, edi
add     ecx, esi
mov     [ebp+var_f8], ecx
mov     eax, ecx
xor     edx, edx
sub     eax, esi
div     edi
inc     eax
cmp     eax, 8
ja      loc_425d5a
cmp     ecx, esi
jbe     loc_4260d3
lea     edx, [edi+esi]
mov     [ebp+var_110], edx
mov     eax, esi
mov     esi, edx
mov     [ebp+var_fc], eax
cmp     esi, ecx
ja      short loc_425cf2
push    eax
push    esi
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
add     esp, 8
test    eax, eax
jle     short loc_425ce0
mov     eax, esi
mov     [ebp+var_fc], eax
jmp     short loc_425ce6
mov     eax, [ebp+var_fc]
mov     ecx, [ebp+var_f8]
add     esi, edi
cmp     esi, ecx
jbe     short loc_425cc3
mov     [ebp+var_10c], edi
mov     edx, ecx
cmp     eax, ecx
jz      short loc_425d39
sub     eax, ecx
mov     ebx, edi
mov     [ebp+var_fc], eax
jmp     short loc_425d10
mov     cl, [eax+edx]
lea     edx, [edx+1]
mov     esi, [ebp+var_fc]
mov     al, [edx-1]
mov     [esi+edx-1], al
mov     eax, esi
mov     [edx-1], cl
sub     ebx, 1
jnz     short loc_425d10
mov     ebx, [ebp+var_108]
mov     ecx, [ebp+var_f8]
mov     esi, [ebp+var_104]
sub     ecx, edi
mov     edx, [ebp+var_110]
mov     [ebp+var_f8], ecx
cmp     ecx, esi
ja      loc_425cb5
jmp     loc_4260d3
shr     eax, 1
mov     ecx, ebx
imul    eax, edi
mov     [ebp+var_fc], eax
lea     edi, [eax+esi]
push    edi
push    esi
mov     [ebp+var_114], edi
call    ds:___guard_check_icall_fptr
call    ebx
mov     esi, [ebp+var_100]
add     esp, 8
test    eax, eax
mov     eax, [ebp+var_104]
jle     short loc_425dda
mov     [ebp+var_10c], esi
mov     [ebp+var_110], edi
cmp     eax, edi
jz      short loc_425dda
mov     ebx, [ebp+var_10c]
mov     esi, edi
mov     edi, [ebp+var_fc]
jmp     short loc_425db0
mov     al, [esi]
mov     edx, esi
sub     edx, edi
mov     cl, [edx]
mov     [edx], al
mov     [esi], cl
inc     esi
sub     ebx, 1
jnz     short loc_425db0
mov     edi, [ebp+var_114]
mov     ebx, [ebp+var_108]
mov     esi, [ebp+var_100]
mov     eax, [ebp+var_104]
push    [ebp+var_f8]
mov     ecx, ebx
push    eax
call    ds:___guard_check_icall_fptr
call    ebx
mov     edx, [ebp+var_f8]
add     esp, 8
test    eax, eax
jle     short loc_425e41
mov     eax, [ebp+var_104]
mov     [ebp+var_114], esi
mov     esi, edx
cmp     eax, edx
jz      short loc_425e41
mov     ebx, [ebp+var_114]
sub     eax, edx
mov     [ebp+var_110], eax
mov     edx, eax
lea     ebx, [ebx+0]
mov     al, [esi]
lea     esi, [esi+1]
mov     cl, [edx+esi-1]
mov     [edx+esi-1], al
mov     [esi-1], cl
sub     ebx, 1
jnz     short loc_425e20
mov     ebx, [ebp+var_108]
mov     edx, [ebp+var_f8]
push    edx
push    edi
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
mov     edx, [ebp+var_f8]
add     esp, 8
test    eax, eax
mov     eax, [ebp+var_100]
jle     short loc_425e95
mov     ebx, eax
mov     esi, edx
cmp     edi, edx
jz      short loc_425e95
mov     eax, edi
sub     eax, edx
mov     [ebp+var_114], eax
mov     edx, eax
mov     al, [esi]
lea     esi, [esi+1]
mov     cl, [edx+esi-1]
mov     [edx+esi-1], al
mov     [esi-1], cl
sub     ebx, 1
jnz     short loc_425e74
mov     eax, [ebp+var_100]
mov     edx, [ebp+var_f8]
mov     esi, [ebp+var_104]
mov     ebx, edx
mov     [ebp+var_fc], edx
cmp     edi, esi
jbe     short loc_425ee5
jmp     short loc_425eb0
add     esi, eax
mov     [ebp+var_10c], esi
cmp     esi, edi
jnb     short loc_425edf
mov     ecx, [ebp+var_108]
push    edi
push    esi
call    ds:___guard_check_icall_fptr
call    [ebp+var_108]
add     esp, 8
test    eax, eax
mov     eax, [ebp+var_100]
jle     short loc_425eb0
jmp     short loc_425f21
mov     edx, [ebp+var_f8]
mov     ebx, [ebp+var_108]
jmp     short loc_425ef0
add     esi, eax
cmp     esi, edx
ja      short loc_425f15
push    edi
push    esi
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
mov     edx, [ebp+var_f8]
add     esp, 8
test    eax, eax
mov     eax, [ebp+var_100]
jle     short loc_425ef0
mov     ebx, [ebp+var_fc]
mov     [ebp+var_10c], esi
mov     esi, [ebp+var_108]
jmp     short loc_425f30
mov     eax, [ebp+var_100]
mov     ecx, ebx
sub     ebx, eax
mov     [ebp+var_fc], ecx
cmp     ebx, edi
jbe     short loc_425f63
push    edi
push    ebx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
add     esp, 8
test    eax, eax
jg      short loc_425f30
mov     eax, [ebp+var_100]
mov     ecx, [ebp+var_fc]
mov     esi, [ebp+var_10c]
mov     [ebp+var_fc], ebx
cmp     ebx, esi
jb      short loc_425fbd
mov     [ebp+var_110], eax
mov     edx, ebx
jz      short loc_425fa8
sub     esi, ebx
mov     ebx, eax
mov     al, [edx]
lea     edx, [edx+1]
mov     cl, [esi+edx-1]
mov     [esi+edx-1], al
mov     [edx-1], cl
sub     ebx, 1
jnz     short loc_425f81
mov     esi, [ebp+var_10c]
mov     ebx, [ebp+var_fc]
mov     eax, [ebp+var_100]
mov     edx, [ebp+var_f8]
cmp     edi, ebx
jnz     loc_425ea3
mov     edi, esi
jmp     loc_425ea3
cmp     edi, ecx
jnb     short loc_425ffd
mov     ebx, [ebp+var_108]
jmp     short loc_425fd0
sub     ecx, eax
mov     [ebp+var_fc], ecx
cmp     ecx, edi
jbe     short loc_425ffd
push    edi
push    ecx
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
mov     ecx, [ebp+var_fc]
add     esp, 8
test    eax, eax
mov     eax, [ebp+var_100]
jz      short loc_425fd0
jmp     short loc_426041
mov     ebx, [ebp+var_108]
mov     esi, [ebp+var_104]
lea     esp, [esp+0]
sub     ecx, eax
mov     [ebp+var_fc], ecx
cmp     ecx, esi
jbe     short loc_42603b
push    edi
push    ecx
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
mov     ecx, [ebp+var_fc]
add     esp, 8
test    eax, eax
mov     eax, [ebp+var_100]
jz      short loc_426010
mov     esi, [ebp+var_10c]
mov     edx, [ebp+var_f8]
mov     ecx, edx
mov     edi, [ebp+var_fc]
sub     ecx, esi
mov     eax, edi
sub     eax, [ebp+var_104]
cmp     eax, ecx
jl      short loc_42609a
mov     eax, [ebp+var_104]
cmp     eax, edi
jnb     short loc_42607f
mov     ecx, [ebp+var_118]
mov     [ebp+ecx*4+var_7c], eax
mov     [ebp+ecx*4+var_f4], edi
inc     ecx
mov     [ebp+var_118], ecx
mov     ecx, [ebp+var_f8]
mov     edi, [ebp+var_100]
cmp     esi, ecx
jnb     short loc_4260d3
mov     [ebp+var_104], esi
jmp     loc_425c92
cmp     esi, edx
jnb     short loc_4260b6
mov     eax, [ebp+var_118]
mov     [ebp+eax*4+var_7c], esi
mov     [ebp+eax*4+var_f4], edx
inc     eax
mov     [ebp+var_118], eax
mov     esi, [ebp+var_104]
cmp     esi, edi
jnb     short loc_4260cd
mov     ecx, edi
mov     edi, [ebp+var_100]
jmp     loc_425c8c
mov     edi, [ebp+var_100]
mov     eax, [ebp+var_118]
sub     eax, 1
mov     [ebp+var_118], eax
js      loc_425c5e
mov     esi, [ebp+eax*4+var_7c]
mov     ecx, [ebp+eax*4+var_f4]
mov     [ebp+var_104], esi
jmp     loc_425c8c
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     ecx, [ebp+arg_8]
mov     [ebp+nnumberofbytestowrite], ecx
push    ebx
push    esi
mov     esi, [ebp+filehandle]
push    edi
mov     edi, [ebp+arg_4]
mov     [ebp+lpbuffer], edi
test    ecx, ecx
jz      loc_426ca1
test    edi, edi
jnz     short loc_426b14
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_426ca3
mov     eax, esi
mov     edx, esi
sar     edx, 6
and     eax, 3fh
imul    eax, 30h
mov     [ebp+var_10], edx
mov     edx, dword_42d388[edx*4]
mov     [ebp+var_8], eax
mov     bl, [edx+eax+29h]
cmp     bl, 2
jz      short loc_426b3c
cmp     bl, 1
jnz     short loc_426b47
mov     eax, ecx
not     eax
test    al, 1
jz      short loc_426af4
mov     eax, [ebp+var_8]
test    byte ptr [edx+eax+28h], 20h
jz      short loc_426b5d
push    2
push    0
push    0
push    esi
call    sub_428a90
add     esp, 10h
push    esi
call    sub_426675
pop     ecx
test    al, al
jz      short loc_426ba1
test    bl, bl
jz      short loc_426b8e
dec     bl
cmp     bl, 1
ja      loc_426c6b
push    [ebp+nnumberofbytestowrite]
lea     eax, [ebp+var_28]
push    edi
push    eax
call    ?write_double_translated_unicode_nolock@@ya?auwrite_result@?a0x17268360@@qbdi@z
add     esp, 0ch
mov     esi, eax
jmp     loc_426c2a
push    [ebp+nnumberofbytestowrite]
lea     eax, [ebp+var_28]
push    edi
push    esi
push    eax
call    sub_426440
add     esp, 10h
jmp     short loc_426b87
mov     eax, [ebp+var_10]
mov     ecx, dword_42d388[eax*4]
mov     eax, [ebp+var_8]
cmp     byte ptr [ecx+eax+28h], 0
jge     short loc_426bfb
movsx   eax, bl
sub     eax, 0
jz      short loc_426beb
sub     eax, 1
jz      short loc_426bdb
sub     eax, 1
jnz     loc_426c6b
push    [ebp+nnumberofbytestowrite]
lea     eax, [ebp+var_28]
push    edi
push    esi
push    eax
call    sub_4267c1
jmp     short loc_426b9c
push    [ebp+nnumberofbytestowrite]
lea     eax, [ebp+var_28]
push    edi
push    esi
push    eax
call    ?write_text_utf8_nolock@@ya?auwrite_result@?a0x17268360@@hqbdi@z
jmp     short loc_426b9c
push    [ebp+nnumberofbytestowrite]
lea     eax, [ebp+var_28]
push    edi
push    esi
push    eax
call    ?write_text_ansi_nolock@@ya?auwrite_result@?a0x17268360@@hqbdi@z
jmp     short loc_426b9c
mov     ecx, [ecx+eax+18h]
lea     edi, [ebp+var_28]
xor     eax, eax
stosd
push    0
stosd
stosd
lea     eax, [ebp+numberofbyteswritten]
push    eax
push    [ebp+nnumberofbytestowrite]
push    [ebp+lpbuffer]
push    ecx
call    ds:writefile
test    eax, eax
jnz     short loc_426c27
call    ds:getlasterror
mov     [ebp+var_28], eax
lea     esi, [ebp+var_28]
lea     edi, [ebp+var_1c]
movsd
movsd
movsd
mov     eax, [ebp+var_18]
test    eax, eax
jnz     short loc_426c9c
mov     eax, [ebp+var_1c]
test    eax, eax
jz      short loc_426c68
push    5
pop     esi
cmp     eax, esi
jnz     short loc_426c5c
call    __errno
mov     dword ptr [eax], 9
call    ___doserrno
mov     [eax], esi
jmp     loc_426b0c
push    eax
call    ___acrt_errno_map_os_error
pop     ecx
jmp     loc_426b0c
mov     edi, [ebp+lpbuffer]
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_8]
mov     eax, dword_42d388[eax*4]
test    byte ptr [eax+ecx+28h], 40h
jz      short loc_426c84
cmp     byte ptr [edi], 1ah
jz      short loc_426ca1
call    __errno
mov     dword ptr [eax], 1ch
call    ___doserrno
and     dword ptr [eax], 0
jmp     loc_426b0c
sub     eax, [ebp+var_14]
jmp     short loc_426ca3
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
fnstsw  [ebp+var_4]
fnclex
movsx   eax, [ebp+var_4]
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
fstcw   [ebp+var_4]
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
not     ecx
and     cx, [ebp+var_4]
and     eax, [ebp+arg_4]
or      cx, ax
mov     [ebp+var_8], cx
fldcw   [ebp+var_8]
movsx   eax, [ebp+var_4]
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    [ebp+arg_c]
lea     eax, [ebp+var_4]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    eax
call    sub_428add
mov     edx, eax
add     esp, 10h
cmp     edx, 4
ja      short loc_426f08
mov     ecx, [ebp+var_4]
cmp     ecx, 0ffffh
jbe     short loc_426efe
mov     ecx, 0fffdh
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_426f08
mov     [eax], cx
mov     eax, edx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
test    edx, edx
jnz     short loc_426f27
xor     ecx, ecx
mov     eax, [ebp+arg_8]
mov     [eax], ecx
mov     [eax+4], ecx
xor     eax, eax
inc     eax
pop     ebp
retn
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jnz     short loc_426f32
mov     [edx], cl
jmp     short loc_426f1a
test    ecx, 0ffffff80h
jnz     short loc_426f3e
mov     [edx], cl
jmp     short loc_426f22
push    ebx
push    esi
test    ecx, 0fffff800h
jnz     short loc_426f4f
xor     esi, esi
mov     bl, 0c0h
inc     esi
jmp     short loc_426f82
test    ecx, 0ffff0000h
jnz     short loc_426f6d
cmp     ecx, 0d800h
jb      short loc_426f67
cmp     ecx, 0dfffh
jbe     short loc_426faa
push    2
mov     bl, 0e0h
jmp     short loc_426f81
test    ecx, 0ffe00000h
jnz     short loc_426faa
cmp     ecx, 10ffffh
ja      short loc_426faa
push    3
mov     bl, 0f0h
pop     esi
push    edi
mov     edi, esi
mov     al, cl
shr     ecx, 6
and     al, 3fh
or      al, 80h
mov     [edi+edx], al
sub     edi, 1
jnz     short loc_426f85
mov     eax, [ebp+arg_8]
or      cl, bl
mov     [edx], cl
xor     ecx, ecx
pop     edi
mov     [eax], ecx
mov     [eax+4], ecx
lea     eax, [esi+1]
jmp     short loc_426fb3
push    [ebp+arg_8]
call    ?return_illegal_sequence@__crt_mbstring@@yaipau_mbstatet@@@z
pop     ecx
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
mov     edx, 1000h
push    esi
push    edi
movzx   eax, bx
mov     edi, eax
mov     [ebp+var_4], edx
and     edi, edx
mov     ecx, eax
shl     edi, 2
mov     edx, 200h
push    0
pop     esi
and     ecx, 300h
jz      short loc_4284ce
cmp     ecx, edx
jz      short loc_4284d5
mov     [ebp+var_4], esi
jmp     short loc_4284d5
mov     [ebp+var_4], 2000h
mov     ecx, 0c00h
and     eax, ecx
jz      short loc_428500
cmp     eax, 400h
jz      short loc_4284fb
cmp     eax, 800h
jz      short loc_4284f7
cmp     eax, ecx
jnz     short loc_428500
mov     esi, 300h
jmp     short loc_428500
mov     esi, edx
jmp     short loc_428500
mov     esi, 100h
xor     ecx, ecx
mov     edx, ebx
inc     ecx
shr     edx, 1
mov     eax, ebx
and     edx, ecx
shr     eax, 2
and     eax, ecx
shl     edx, 5
shl     eax, 3
or      edx, eax
mov     eax, ebx
shr     eax, 3
and     eax, ecx
shl     eax, 2
or      edx, eax
mov     eax, ebx
shr     eax, 4
and     eax, ecx
movzx   ecx, bl
add     eax, eax
shr     ebx, 5
or      eax, edx
and     ecx, 1
shl     ecx, 4
and     ebx, 1
or      eax, ecx
or      eax, ebx
or      eax, edi
pop     edi
or      eax, esi
or      eax, [ebp+var_4]
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, ecx
push    ebx
push    esi
mov     esi, ecx
shr     eax, 2
and     esi, 0c03fffffh
or      esi, eax
mov     eax, 0c00h
push    edi
and     ecx, eax
shr     esi, 16h
xor     edi, edi
cmp     ecx, 400h
jz      short loc_428598
cmp     ecx, 800h
jz      short loc_428593
cmp     ecx, eax
jz      short loc_42858c
mov     ebx, edi
jmp     short loc_42859d
mov     ebx, 8000h
jmp     short loc_42859d
push    40h
pop     ebx
jmp     short loc_42859d
mov     ebx, 8040h
mov     eax, esi
mov     ecx, 300h
and     eax, ecx
jz      short loc_4285cd
cmp     eax, 100h
jz      short loc_4285c8
cmp     eax, 200h
jz      short loc_4285c1
cmp     eax, ecx
jnz     short loc_4285cd
mov     edi, 6000h
jmp     short loc_4285cd
mov     edi, 4000h
jmp     short loc_4285cd
mov     edi, 2000h
xor     ecx, ecx
mov     edx, esi
inc     ecx
shr     edx, 1
and     edx, ecx
mov     eax, esi
shr     eax, 2
and     eax, ecx
shl     edx, 0bh
shl     eax, 0ah
or      edx, eax
mov     eax, esi
shr     eax, 3
and     eax, ecx
shl     eax, 9
or      edx, eax
mov     eax, esi
shr     eax, 5
and     eax, ecx
mov     ecx, esi
shl     eax, 8
and     esi, 1
shr     ecx, 4
or      eax, edx
and     ecx, 1
shl     esi, 0ch
shl     ecx, 7
or      eax, ecx
or      eax, esi
or      eax, ebx
or      eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     edx, ecx
push    ebx
shr     edx, 2
mov     eax, ecx
push    esi
push    edi
and     edx, 0fc000h
and     eax, 0c00000h
or      edx, eax
mov     edi, ecx
shr     edx, 0eh
and     edi, 4000h
push    0
pop     esi
and     ecx, 3000h
jz      short loc_428663
cmp     ecx, 1000h
jz      short loc_42865c
mov     eax, esi
jmp     short loc_428668
mov     eax, 200h
jmp     short loc_428668
mov     eax, 300h
movzx   ebx, ax
mov     ecx, 300h
mov     eax, edx
and     eax, ecx
jz      short loc_42869b
cmp     eax, 100h
jz      short loc_428696
cmp     eax, 200h
jz      short loc_42868f
cmp     eax, ecx
jnz     short loc_42869b
mov     esi, 0c00h
jmp     short loc_42869b
mov     esi, 800h
jmp     short loc_42869b
mov     esi, 400h
mov     ecx, edx
mov     eax, edx
shr     eax, 2
and     eax, 1
shr     ecx, 1
shl     eax, 3
and     ecx, 1
shl     ecx, 4
or      ecx, eax
mov     eax, edx
shr     eax, 5
and     eax, 1
add     eax, eax
or      ecx, eax
mov     eax, edx
shr     eax, 3
and     eax, 1
shl     eax, 2
or      ecx, eax
mov     eax, edx
shr     eax, 4
and     eax, 1
or      eax, ecx
neg     edi
sbb     edi, edi
and     edx, 1
and     edi, 1000h
shl     edx, 5
or      ax, di
or      ax, dx
or      ax, bx
pop     edi
or      ax, si
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
call    sub_428f8c
test    eax, eax
jz      short loc_428ad6
lea     eax, [ebp+numberofcharswritten]
push    eax
lea     eax, [ebp+buffer]
push    1
push    eax
call    unknown_libname_37
add     esp, 0ch
test    eax, eax
jz      short loc_428ad6
mov     ax, [ebp+buffer]
leave
retn
mov     eax, 0ffffh
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_0]
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_c]
mov     [ebp+var_24], ebx
push    edi
mov     edi, ebx
test    esi, esi
jnz     short loc_428b09
mov     esi, offset dword_42d5ac
xor     edx, edx
inc     edx
test    ebx, ebx
jnz     short loc_428b19
mov     ebx, offset byte_406afd
mov     eax, edx
jmp     short loc_428b1c
mov     eax, [ebp+arg_8]
neg     edi
mov     [ebp+var_1c], eax
sbb     edi, edi
and     edi, ecx
test    eax, eax
jnz     short loc_428b31
push    0fffffffeh
pop     eax
jmp     loc_428c75
xor     eax, eax
cmp     [esi+6], ax
jnz     short loc_428b9d
mov     cl, [ebx]
inc     ebx
mov     [ebp+var_12], cl
test    cl, cl
js      short loc_428b58
test    edi, edi
jz      short loc_428b4c
movzx   eax, cl
mov     [edi], eax
xor     eax, eax
test    cl, cl
setnz   al
jmp     loc_428c75
mov     al, cl
and     al, 0e0h
cmp     al, 0c0h
jnz     short loc_428b64
mov     al, 2
jmp     short loc_428b7e
mov     al, cl
and     al, 0f0h
cmp     al, 0e0h
jnz     short loc_428b70
mov     al, 3
jmp     short loc_428b7e
mov     al, cl
and     al, 0f8h
cmp     al, 0f0h
jnz     loc_428c6e
mov     al, 4
mov     [ebp+var_11], al
mov     [ebp+var_13], al
push    7
movzx   eax, al
pop     ecx
sub     ecx, eax
movzx   eax, [ebp+var_12]
mov     ch, [ebp+var_13]
shl     edx, cl
mov     cl, [ebp+var_11]
dec     edx
and     edx, eax
jmp     short loc_428bc2
mov     cl, [esi+4]
mov     edx, [esi]
mov     al, cl
mov     ch, [esi+6]
sub     al, 2
cmp     al, 2
ja      loc_428c6e
cmp     ch, 1
jb      loc_428c6e
cmp     ch, cl
jnb     loc_428c6e
movzx   eax, ch
mov     [ebp+var_20], eax
mov     eax, [ebp+var_1c]
cmp     [ebp+var_20], eax
jnb     short loc_428bd6
mov     eax, [ebp+var_20]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_18], ebx
sub     [ebp+var_18], eax
jmp     short loc_428bfa
mov     ah, [ebx]
inc     ebx
inc     [ebp+var_18]
mov     al, ah
and     al, 0c0h
cmp     al, 80h
jnz     short loc_428c6e
movzx   eax, ah
and     eax, 3fh
shl     edx, 6
or      edx, eax
mov     eax, [ebp+var_1c]
cmp     [ebp+var_18], eax
jb      short loc_428be1
mov     ebx, [ebp+var_20]
cmp     eax, ebx
jnb     short loc_428c21
sub     ch, byte ptr [ebp+var_1c]
movzx   eax, cl
mov     [esi+4], ax
movzx   eax, ch
mov     [esi], edx
mov     [esi+6], ax
jmp     loc_428b29
cmp     edx, 0d800h
jb      short loc_428c31
cmp     edx, 0dfffh
jbe     short loc_428c6e
cmp     edx, 10ffffh
ja      short loc_428c6e
movzx   eax, cl
mov     [ebp+var_10], 80h
mov     [ebp+var_c], 800h
mov     [ebp+var_8], 10000h
cmp     edx, [ebp+eax*4+var_18]
jb      short loc_428c6e
test    edi, edi
jz      short loc_428c5d
mov     [edi], edx
and     dword ptr [esi], 0
and     dword ptr [esi+4], 0
neg     edx
sbb     edx, edx
and     edx, ebx
mov     eax, edx
jmp     short loc_428c75
push    esi
call    ?return_illegal_sequence@__crt_mbstring@@yaipau_mbstatet@@@z
pop     ecx
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
lea     edx, [esp+4]
call    __fload_withfb
mov     ecx, hconsoleoutput
cmp     ecx, 0fffffffeh
jnz     short loc_428fa2
call    ?__dcrt_lowio_initialize_console_output@@yaxxz
mov     ecx, hconsoleoutput
xor     eax, eax
cmp     ecx, 0ffffffffh
setnz   al
retn
movlpd  xmm0, qword ptr [esp+4]
jmp     short ffytox
mov     byte ptr [ebp-90h], 0feh
or      ch, ch
jnz     short negytox
fxch    st(1)
fyl2x
jmp     short ff2x
call    _isinttos
or      eax, eax
jz      short negytoxerror
xor     ch, ch
cmp     eax, 2
jz      short evenexp
not     ch
fxch    st(1)
fabs
jmp     short ffxtoy
jmp     __rtonepop
jmp     __rtindfpop
fstp    st
fstp    st
fld     ds:tbyte_4020c0
mov     byte ptr [ebp-90h], 2
retn
fldln2
fxch    st(1)
ftst
fstsw   word ptr [ebp-0a0h]
wait
test    byte ptr [ebp-9fh], 41h
jnz     short negytoxerror
fyl2x
retn
mov     byte ptr [ebp-90h], 2
fstp    st
fld     ds:tbyte_4020ca
retn
or      cl, cl
jnz     short tranindfnpop
retn
fldlg2
jmp     short ffyl2xm
fldln2
fxch    st(1)
or      cl, cl
jnz     short negytoxerror
fyl2x
retn
jmp     __rtonepop
call    _isinttos
fstp    st
fstp    st
or      cl, cl
jnz     short _rtfor0toneg
fldz
cmp     eax, 1
jnz     short zerotoxdone
or      ch, ch
jz      short zerotoxdone
fchs
mov     byte ptr [ebp-90h], 2
fld     ds:tbyte_4020c0
cmp     eax, 1
jnz     short zerotoxdone
or      ch, ch
jz      short zerotoxdone
fchs
jmp     short zerotoxdone
fstp    st
fstp    st
jmp     __rtindfnpop
fstp    st
fstp    st
fld     ds:tbyte_4020c0
mov     byte ptr [ebp-90h], 3
retn
push    esi
sub     esp, 74h
mov     esi, esp
push    esi
sub     esp, 8
fstp    qword ptr [esp]
sub     esp, 8
fstp    qword ptr [esp]
fsave   byte ptr [esi+8]
call    sub_429c24
add     esp, 14h
frstor  byte ptr [esi+8]
fld     qword ptr [esi]
add     esp, 74h
pop     esi
test    eax, eax
jz      short noerror
jmp     __rttosnpopde
cmp     byte ptr [edx+0eh], 5
jnz     short cwdefault
mov     bx, [ebp-0a4h]
or      bh, 2
and     bh, 0feh
mov     bl, 3fh
jmp     short setcw
mov     bx, 133fh
mov     [ebp-0a2h], bx
fldcw   word ptr [ebp-0a2h]
mov     ebx, offset word_4060de
fxam
mov     [ebp-94h], edx
fstsw   word ptr [ebp-0a0h]
mov     byte ptr [ebp-90h], 0
fxch    st(1)
mov     cl, [ebp-9fh]
fxam
fstsw   word ptr [ebp-0a0h]
fxch    st(1)
mov     ch, [ebp-9fh]
shl     ch, 1
sar     ch, 1
rol     ch, 1
mov     al, ch
and     al, 0fh
xlat
mov     ah, al
shl     cl, 1
sar     cl, 1
rol     cl, 1
mov     al, cl
and     al, 0fh
xlat
shl     ah, 1
shl     ah, 1
or      al, ah
movsx   eax, al
and     ecx, 404h
mov     ebx, edx
add     ebx, eax
add     ebx, 10h
push    eax
push    edx
push    ecx
mov     ecx, [ebx]
call    ds:___guard_check_icall_fptr
pop     ecx
pop     edx
pop     eax
jmp     dword ptr [ebx]
call    __rttosnpopde
call    __rttosnpopde
jmp     short __rtnospop
fstp    st
fstp    st
fstp    st
fldz
test    ch, ch
jz      short dont_change_zerosign
fchs
fstp    st
nop
jmp     short __nosnan2
fxch    st(1)
lea     esp, [esp+0]
lea     esp, [esp+0]
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _tossnan2
mov     byte ptr [ebp-90h], 0
jmp     short _tosnan2ret
mov     byte ptr [ebp-90h], 0
faddp   st(1), st
retn
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _snan2
fxch    st(1)
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _snan2
mov     byte ptr [ebp-90h], 0
jmp     short _nan2ret
mov     byte ptr [ebp-90h], 1
faddp   st(1), st
retn
fstp    st
fstp    st
fld     ds:tbyte_4060b0
cmp     byte ptr [ebp-90h], 0
jg      short retj
fstp    st
fstp    st
fld     tbyte ptr ds:dword_4060bc+8
or      ch, ch
jz      short dont_change_sign
fchs
or      cl, cl
jz      short retinf
fld     ds:dbl_4060d6
fmulp   st(1), st
or      cl, cl
jz      short chsifnegret
fchs
mov     edx, [esp+4]
and     edx, 300h
or      edx, 7fh
mov     [esp+6], dx
fldcw   word ptr [esp+6]
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 20h
cmp     dword_42d5b8, 0
push    esi
push    edi
jz      short loc_429936
push    ptr
call    ds:decodepointer
mov     edi, eax
jmp     short loc_42993b
mov     edi, offset sub_424350
mov     eax, [ebp+arg_c]
cmp     eax, 1ah
jg      loc_429a25
jz      loc_429a19
cmp     eax, 0eh
jg      short loc_4299b7
jz      short loc_4299a4
push    2
pop     ecx
sub     eax, ecx
jz      short loc_429995
sub     eax, 1
jz      short loc_429989
sub     eax, 5
jz      short loc_42997a
sub     eax, 1
jnz     loc_429b03
mov     [ebp+var_1c], offset alog10_0
jmp     loc_429a7b
mov     [ebp+var_20], ecx
mov     [ebp+var_1c], offset alog10_0
jmp     loc_429ac8
mov     [ebp+var_1c], offset dword_406134
jmp     loc_429a7b
mov     [ebp+var_20], ecx
mov     [ebp+var_1c], offset dword_406134
jmp     loc_429ac8
mov     [ebp+var_20], 3
mov     [ebp+var_1c], offset aexp
jmp     loc_429ac8
sub     eax, 0fh
jz      short loc_429a10
sub     eax, 9
jz      short loc_429a04
sub     eax, 1
jnz     loc_429b03
mov     [ebp+var_1c], offset apow
mov     eax, [ebp+arg_0]
mov     ecx, edi
mov     esi, [ebp+arg_8]
mov     [ebp+var_20], 4
fld     qword ptr [eax]
mov     eax, [ebp+arg_4]
fstp    [ebp+var_18]
fld     qword ptr [eax]
lea     eax, [ebp+var_20]
fstp    [ebp+var_10]
fld     qword ptr [esi]
push    eax
fstp    [ebp+var_8]
call    ds:___guard_check_icall_fptr
call    edi
pop     ecx
jmp     loc_429afe
mov     [ebp+var_20], 3
jmp     loc_429ac1
mov     [ebp+var_1c], offset aexp
jmp     short loc_4299d1
fld1
mov     eax, [ebp+arg_8]
fstp    qword ptr [eax]
jmp     loc_429b03
sub     eax, 1bh
jz      loc_429aba
sub     eax, 1
jz      short loc_429a74
sub     eax, 15h
jz      short loc_429a6b
sub     eax, 9
jz      short loc_429a62
sub     eax, 3
jz      short loc_429a59
sub     eax, 3abh
jz      short loc_429a52
sub     eax, 1
jnz     loc_429b03
mov     eax, [ebp+arg_0]
fld     qword ptr [eax]
jmp     short loc_429a1b
mov     [ebp+var_1c], offset aasin
jmp     short loc_429a7b
mov     [ebp+var_1c], offset aacos
jmp     short loc_429a7b
mov     [ebp+var_1c], offset asqrt
jmp     short loc_429a7b
mov     [ebp+var_1c], offset apow
mov     eax, [ebp+arg_0]
mov     ecx, edi
mov     esi, [ebp+arg_8]
mov     [ebp+var_20], 1
fld     qword ptr [eax]
mov     eax, [ebp+arg_4]
fstp    [ebp+var_18]
fld     qword ptr [eax]
lea     eax, [ebp+var_20]
fstp    [ebp+var_10]
fld     qword ptr [esi]
push    eax
fstp    [ebp+var_8]
call    ds:___guard_check_icall_fptr
call    edi
pop     ecx
test    eax, eax
jnz     short loc_429afe
call    __errno
mov     dword ptr [eax], 21h
jmp     short loc_429afe
mov     [ebp+var_20], 2
mov     [ebp+var_1c], offset apow
mov     eax, [ebp+arg_0]
mov     ecx, edi
mov     esi, [ebp+arg_8]
fld     qword ptr [eax]
mov     eax, [ebp+arg_4]
fstp    [ebp+var_18]
fld     qword ptr [eax]
lea     eax, [ebp+var_20]
fstp    [ebp+var_10]
fld     qword ptr [esi]
push    eax
fstp    [ebp+var_8]
call    ds:___guard_check_icall_fptr
call    edi
pop     ecx
test    eax, eax
jnz     short loc_429afe
call    __errno
mov     dword ptr [eax], 22h
fld     [ebp+var_8]
fstp    qword ptr [esi]
pop     edi
pop     esi
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, 0ffffh
push    esi
push    1b3fh
call    sub_426e39
fld     [ebp+arg_0]
mov     ebx, eax
pop     ecx
pop     ecx
movzx   ecx, word ptr [ebp+arg_0+6]
mov     eax, 7ff0h
and     ecx, eax
push    ecx
push    ecx
fstp    [esp+18h+var_18]
cmp     cx, ax
jnz     short loc_429b79
call    __sptype
dec     eax
pop     ecx
pop     ecx
cmp     eax, 2
ja      short loc_429b55
push    esi
push    ebx
call    sub_426e39
fld     [ebp+arg_0]
jmp     short loc_429bb6
fld     [ebp+arg_0]
fld     ds:dbl_406160
push    ebx
sub     esp, 10h
fadd    st, st(1)
fstp    qword ptr [esp+8]
fstp    [esp+24h+var_24]
push    0ch
push    8
call    __except1
add     esp, 1ch
jmp     short loc_429bb8
call    sub_429e59
fst     [ebp+var_8]
fld     [ebp+arg_0]
add     esp, 8
fucom   st(1)
fnstsw  ax
test    ah, 44h
jnp     short loc_429ba8
test    bl, 20h
jnz     short loc_429ba8
push    ebx
sub     esp, 10h
fxch    st(1)
fstp    qword ptr [esp+8]
fstp    [esp+24h+var_24]
push    0ch
push    10h
jmp     short loc_429b6f
push    esi
fstp    st(1)
push    ebx
fstp    st
call    sub_426e39
fld     [ebp+var_8]
pop     ecx
pop     ecx
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
fld     [ebp+arg_0]
mov     ecx, 7ff00000h
fabs
mov     eax, 0fff00000h
cmp     dword ptr [ebp+arg_8+4], ecx
jnz     short loc_429c78
cmp     dword ptr [ebp+arg_8], 0
jnz     short loc_429cb8
fld1
fcom    st(1)
fnstsw  ax
test    ah, 5
jp      short loc_429c5d
fstp    st(1)
fstp    st
fld     ds:dbl_406a38
jmp     loc_429d46
fcom    st(1)
fnstsw  ax
fstp    st(1)
test    ah, 41h
mov     eax, [ebp+arg_10]
jnz     loc_429d49
fstp    st
fldz
jmp     loc_429d49
cmp     dword ptr [ebp+arg_8+4], eax
jnz     short loc_429cb8
cmp     dword ptr [ebp+arg_8], 0
jnz     short loc_429cb8
fld1
fcom    st(1)
fnstsw  ax
test    ah, 5
jp      short loc_429c99
fstp    st(1)
fstp    st
fldz
jmp     loc_429d46
fcom    st(1)
fnstsw  ax
fstp    st(1)
test    ah, 41h
mov     eax, [ebp+arg_10]
jnz     loc_429d49
fstp    st
fld     ds:dbl_406a38
jmp     loc_429d49
fstp    st
cmp     dword ptr [ebp+arg_0+4], ecx
jnz     short loc_429ced
cmp     dword ptr [ebp+arg_0], 0
jnz     loc_429d4b
fldz
fld     [ebp+arg_8]
fcom    st(1)
fnstsw  ax
test    ah, 41h
jz      loc_429c4e
fcomp   st(1)
fnstsw  ax
test    ah, 5
mov     eax, [ebp+arg_10]
jnp     short loc_429d49
fstp    st
fld1
jmp     short loc_429d49
cmp     dword ptr [ebp+arg_0+4], eax
jnz     short loc_429d4b
cmp     dword ptr [ebp+arg_0], 0
jnz     short loc_429d4b
fld     [ebp+arg_8]
push    ecx
push    ecx
fstp    [esp+8+var_8]
call    __d_inttype
fldz
fld     [ebp+arg_8]
pop     ecx
pop     ecx
fcom    st(1)
mov     ecx, eax
fnstsw  ax
test    ah, 41h
jnz     short loc_429d2a
fstp    st(1)
fstp    st
fld     ds:dbl_406a38
cmp     ecx, 1
jnz     short loc_429d46
fchs
jmp     short loc_429d46
fcomp   st(1)
fnstsw  ax
test    ah, 5
jp      short loc_429d42
cmp     ecx, 1
jnz     short loc_429d46
fstp    st
fld     ds:dbl_406a48
jmp     short loc_429d46
fstp    st
fld1
mov     eax, [ebp+arg_10]
fstp    qword ptr [eax]
xor     eax, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
fld     [ebp+arg_0]
frndint
fstp    [ebp+var_8]
fld     [ebp+var_8]
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     ecx, [ebp+arg_8]
movzx   eax, [ebp+arg_6]
fld     qword ptr [ebp+8]
and     eax, 800fh
fstp    [ebp+var_8]
lea     ecx, [ecx+3feh]
shl     ecx, 4
or      ecx, eax
mov     word ptr [ebp+var_8+6], cx
fld     [ebp+var_8]
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
xor     edx, edx
push    ebx
push    esi
push    edi
mov     ecx, [eax+3ch]
add     ecx, eax
movzx   eax, word ptr [ecx+14h]
movzx   ebx, word ptr [ecx+6]
add     eax, 18h
add     eax, ecx
test    ebx, ebx
jz      short loc_42a78e
mov     edi, [ebp+arg_4]
mov     esi, [eax+0ch]
cmp     edi, esi
jb      short loc_42a786
mov     ecx, [eax+8]
add     ecx, esi
cmp     edi, ecx
jb      short loc_42a790
inc     edx
add     eax, 28h
cmp     edx, ebx
jb      short loc_42a776
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    0fffffffeh
push    offset stru_42bc88
push    offset seh_42a7a0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     [ebp+ms_exc.registration.scopetable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     [ebp+ms_exc.registration.trylevel], 0
push    400000h
call    sub_42a860
add     esp, 4
test    eax, eax
jz      short loc_42a841
mov     eax, [ebp+arg_0]
sub     eax, 400000h
push    eax
push    400000h
call    sub_42a750
add     esp, 8
test    eax, eax
jz      short loc_42a841
mov     eax, [eax+24h]
shr     eax, 1fh
not     eax
and     eax, 1
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+ms_exc.exc_ptr]
mov     eax, [eax]
xor     ecx, ecx
cmp     dword ptr [eax], 0c0000005h
setz    cl
mov     eax, ecx
retn
mov     esp, [ebp+ms_exc.old_esp]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
xor     eax, eax
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, 5a4dh
cmp     [ecx], ax
jnz     short loc_42a891
mov     eax, [ecx+3ch]
add     eax, ecx
cmp     dword ptr [eax], 4550h
jnz     short loc_42a891
mov     ecx, 10bh
cmp     [eax+18h], cx
jnz     short loc_42a891
mov     eax, 1
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
pop     ebp
jmp     sub_42abf7
mov     edi, edi
push    ebp
mov     ebp, esp
jmp     short loc_42a97c
push    [ebp+size]
call    sub_4153c7
pop     ecx
test    eax, eax
jz      short loc_42a98b
push    [ebp+size]
call    _malloc
pop     ecx
test    eax, eax
jz      short loc_42a96f
pop     ebp
retn
cmp     [ebp+size], 0ffffffffh
jz      sub_42ae84
jmp     sub_42ae65
mov     edi, edi
push    ebp
mov     ebp, esp
pop     ebp
jmp     sub_42a968
mov     edi, edi
push    ebx
push    esi
push    edi
push    0fa0h
push    offset stru_42d5bc
call    ds:initializecriticalsectionandspincount
push    offset aapimswincoresy
call    ds:getmodulehandlew
mov     esi, eax
test    esi, esi
jnz     short loc_42aa0e
push    offset akernel32dll_0
call    ds:getmodulehandlew
mov     esi, eax
test    esi, esi
jz      short loc_42aa8c
push    offset ainitializecond
push    esi
call    ds:getprocaddress
push    offset asleepcondition
push    esi
mov     ebx, eax
call    ds:getprocaddress
push    offset awakeallconditi
push    esi
mov     edi, eax
call    ds:getprocaddress
mov     esi, eax
test    ebx, ebx
jz      short loc_42aa76
test    edi, edi
jz      short loc_42aa76
test    esi, esi
jz      short loc_42aa76
and     hhandle, 0
mov     ecx, ebx
push    offset dword_42d5d4
call    ds:___guard_check_icall_fptr
call    ebx
push    edi
call    unknown_libname_7
push    esi
mov     dword_42d5dc, eax
call    unknown_libname_7
pop     ecx
pop     ecx
mov     dword_42d5e0, eax
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
push    eax
push    eax
push    1
push    eax
call    ds:createeventw
mov     hhandle, eax
test    eax, eax
jnz     short loc_42aa72
push    7
call    sub_4174ec
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
call    __init_thread_lock
mov     esi, [ebp+arg_0]
jmp     short loc_42ab15
push    64h
call    sub_42ab9f
pop     ecx
cmp     dword ptr [esi], 0
jz      short loc_42ab3b
cmp     dword ptr [esi], 0ffffffffh
jz      short loc_42ab0d
mov     eax, large fs:2ch
mov     ecx, tlsindex
mov     ecx, [eax+ecx*4]
mov     eax, dword_42ca90
mov     [ecx+4], eax
jmp     short loc_42ab3e
or      dword ptr [esi], 0ffffffffh
pop     esi
pop     ebp
jmp     __init_thread_unlock
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     hhandle, 0
jnz     short loc_42abdb
push    esi
mov     esi, ___security_cookie
mov     ecx, esi
push    [ebp+dwmilliseconds]
xor     esi, dword_42d5dc
and     ecx, 1fh
push    offset stru_42d5bc
ror     esi, cl
push    offset dword_42d5d4
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn
call    __init_thread_unlock
push    0
push    [ebp+dwmilliseconds]
push    hhandle
call    ds:waitforsingleobjectex
pop     ebp
jmp     __init_thread_lock
mov     edi, edi
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_42abf7
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
push    [ebp+size]
and     [ebp+var_4], 0
call    sub_42a968
pop     ecx
jmp     short loc_42ac39
mov     eax, offset loc_42ac37
retn
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7bad_array_new_length@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadarraynewlen
mov     dword ptr [ecx], offset ??_7bad_array_new_length@std@@6b@
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+var_c]
call    sub_4120c4
push    offset __ti2?avbad_alloc@std@@
lea     eax, [ebp+var_c]
push    eax
call    sub_41a2a3
int     3
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+var_c]
call    sub_42ae4d
push    offset __ti3?avbad_array_new_length@std@@
lea     eax, [ebp+var_c]
push    eax
call    sub_41a2a3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b458
jmp     ___cxxframehandler3
lea     ecx, [ebp+block]
jmp     unknown_libname_1
lea     ecx, [ebp+hobject]
jmp     loc_4095e0
lea     ecx, [ebp+applicationname]
jmp     loc_4095ee
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2c4h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b47c
jmp     ___cxxframehandler3
lea     ecx, [ebp+processhandle]
jmp     loc_409601
lea     ecx, [ebp+returnlength]
jmp     unknown_libname_1
lea     ecx, [ebp+var_60]
jmp     unknown_libname_1
lea     ecx, [ebp+var_4c]
jmp     unknown_libname_1
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-68h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b4ec
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_1c]
jmp     unknown_libname_1
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b530
jmp     ___cxxframehandler3
push    3ch
push    [ebp+var_180]
call    sub_417320
pop     ecx
pop     ecx
retn
mov     ecx, [ebp+src]
add     ecx, 4
jmp     sub_409748
lea     ecx, [ebp+block]
jmp     unknown_libname_1
mov     ecx, [ebp+src]
add     ecx, 0ch
jmp     unknown_libname_1
lea     ecx, [ebp+var_170]
jmp     unknown_libname_1
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1bch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b55c
jmp     ___cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b458
jmp     ___cxxframehandler3
mov     edx, [esp+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-28h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b458
jmp     ___cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b5a8
jmp     ___cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b600
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_10]
jmp     unknown_libname_1
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b698
jmp     ___cxxframehandler3
mov     ecx, [ebp+var_34]
jmp     loc_40e3cd
lea     ecx, [ebp+var_2c]
jmp     loc_40e3cd
lea     ecx, [ebp+var_30]
jmp     loc_4113c7
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-38h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b6c4
jmp     ___cxxframehandler3
mov     ecx, [ebp+var_44]
add     ecx, 20h
jmp     ??1?$_container_proxy_ptr12@v?$allocator@u_container_proxy@std@@@std@@@std@@qae@xz
lea     ecx, [ebp+var_34]
jmp     unknown_libname_5
lea     ecx, [ebp+block]
jmp     unknown_libname_5
lea     ecx, [ebp+var_48]
jmp     loc_409601
lea     ecx, [ebp+tokenhandle]
jmp     ??1?$_container_proxy_ptr12@v?$allocator@u_container_proxy@std@@@std@@@std@@qae@xz
lea     ecx, [ebp+var_38]
jmp     loc_4116e0
lea     ecx, [ebp+pacl]
jmp     ??1?$_container_proxy_ptr12@v?$allocator@u_container_proxy@std@@@std@@@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-54h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b700
jmp     ___cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42b75c
jmp     ___cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_42bcd8
jmp     ___cxxframehandler3
mov     ecx, dword_42d61c
test    ecx, ecx
jz      short locret_42b408
or      eax, 0ffffffffh
lock xadd [ecx+8], eax
jz      ?_delete_this@?$_ref_count_obj@v__exceptionptr@@@std@@eaexxz
retn
mov     eax, dword_42d848
test    eax, eax
jz      short locret_42b423
push    8
push    eax
call    sub_417320
pop     ecx
pop     ecx
retn
cmp     hobject, 0
jz      short locret_42b445
push    hobject
call    ds:closehandle
retn
offset loc_408c79>
offset loc_40f63a>
offset loc_40f662>
offset loc_40f66f>
offset loc_40f67c>
offset loc_40f689>
offset loc_411850>
offset __catch$?callunexpected@@yaxpbu_s_estypelist@@@z$0>