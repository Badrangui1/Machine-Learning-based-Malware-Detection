push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001000
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, [ebp+arg_0]
mov     [ebp+var_4], 0
lea     ecx, [esi+4]
mov     dword ptr [esi], offset ??_7dtsqlitedataparameter@@6b@
call    ds:??0dtstr@@qae@xz
mov     eax, ds:??_7?$dtarray@e@@6b@
mov     [esi+18h], eax
xor     eax, eax
mov     [esi+1ch], eax
mov     [esi+20h], eax
mov     [esi+24h], eax
mov     ecx, [ebp+arg_4]
push    ecx
lea     ecx, [esi+4]
mov     byte ptr [ebp+var_4], 2
call    ds:??4dtstr@@qaeaav0@pa_w@z
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_c]
mov     [esi+14h], eax
mov     eax, [ebp+arg_10]
mov     [esi+10h], edx
mov     ecx, [eax+8]
mov     edx, [eax+4]
push    0
push    ecx
push    edx
lea     ecx, [esi+18h]
call    ds:?copyfrom@?$dtarray@e@@qaexpaeii@z
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
lea     eax, [ecx+4]
retn
mov     eax, [ecx+10h]
retn
lea     eax, [ecx+18h]
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100010d0
mov     eax, large fs:0
push    eax
push    ecx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
lea     ecx, [esi+18h]
mov     [ebp+var_4], 1
call    ds:??1?$dtarray@e@@qae@xz
lea     ecx, [esi+4]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
test    byte ptr [ebp+arg_0], 1
mov     [ebp+var_4], 0ffffffffh
mov     eax, ds:??_7idtdataparameter@@6b@
mov     [esi], eax
jz      short loc_10001134
push    esi
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_10001150
mov     eax, large fs:0
push    eax
sub     esp, 18h
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+2ch+var_c]
mov     large fs:0, eax
xor     edi, edi
cmp     [esi], edi
jnz     loc_10001227
mov     eax, ds:??_7?$dtarray@e@@6b@
mov     [esp+2ch+var_20], eax
mov     [esp+2ch+var_1c], edi
mov     [esp+2ch+var_18], edi
mov     [esp+2ch+var_14], edi
lea     ecx, [esp+2ch+var_20]
push    ecx
push    1
lea     ecx, [esi+4]
mov     [esp+34h+var_4], edi
call    ds:?encode@dtstr@@qaehw4dtencoding@@aav?$dtarray@e@@@z
mov     edx, [esp+2ch+var_1c]
push    edi
push    6
push    esi
push    edx
call    sub_10071480
add     esp, 10h
cmp     eax, edi
jz      short loc_100011e7
mov     [esp+2ch+var_4], 0ffffffffh
lea     ecx, [esp+2ch+var_20]
call    ds:??1?$dtarray@e@@qae@xz
xor     eax, eax
mov     ecx, [esp+2ch+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi]
push    edi
push    1
push    3eah
push    eax
call    sub_1006f3b0
add     esp, 10h
cmp     eax, edi
jnz     short loc_100011c2
mov     ecx, [esi]
push    edi
push    1
push    3ebh
push    ecx
call    sub_1006f3b0
add     esp, 10h
mov     [esp+2ch+var_4], 0ffffffffh
lea     ecx, [esp+2ch+var_20]
cmp     eax, edi
jnz     short loc_100011ce
call    ds:??1?$dtarray@e@@qae@xz
mov     eax, 1
mov     ecx, [esp+2ch+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
lea     eax, [ecx+48h]
retn
mov     eax, [ecx+18h]
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    eax
push    edx
call    sub_10003160
pop     ebp
retn    0ch
mov     ecx, [ecx+34h]
test    ecx, ecx
jz      short loc_10001298
mov     eax, [ecx]
mov     edx, [eax+4]
call    edx
test    eax, eax
jz      short loc_10001298
mov     eax, 1
retn
xor     eax, eax
retn
xor     eax, eax
cmp     [ecx+4], eax
setnz   al
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100012b0
mov     eax, large fs:0
push    eax
sub     esp, 14h
push    ebx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    1
push    offset acommit
push    offset adtsqlitedatatr
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
xor     ebx, ebx
mov     [ebp+var_4], ebx
mov     ecx, [esi+4]
cmp     ecx, ebx
jnz     short loc_1000131d
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_d]
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_20], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [ebp+var_1c], ebx
mov     [ebp+var_18], ebx
mov     [ebp+var_14], ebx
mov     byte ptr [ebp+var_4], 1
mov     eax, [ecx]
mov     eax, [eax+1ch]
lea     edx, [ebp+var_20]
push    edx
push    offset acommittransact
call    eax
test    eax, eax
mov     byte ptr [ebp+var_4], bl
lea     ecx, [ebp+var_20]
setz    [ebp+var_e]
mov     [ebp+var_20], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
call    sub_100064f0
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_d]
cmp     [ebp+var_e], bl
jnz     short loc_10001304
mov     [esi+4], ebx
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100012b0
mov     eax, large fs:0
push    eax
sub     esp, 14h
push    ebx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    1
push    offset arollback
push    offset adtsqlitedatatr
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
xor     ebx, ebx
mov     [ebp+var_4], ebx
mov     ecx, [esi+4]
cmp     ecx, ebx
jnz     short loc_100013fd
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_d]
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_20], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [ebp+var_1c], ebx
mov     [ebp+var_18], ebx
mov     [ebp+var_14], ebx
mov     byte ptr [ebp+var_4], 1
mov     eax, [ecx]
mov     eax, [eax+1ch]
lea     edx, [ebp+var_20]
push    edx
push    offset arollbacktransa
call    eax
test    eax, eax
mov     byte ptr [ebp+var_4], bl
lea     ecx, [ebp+var_20]
setz    [ebp+var_e]
mov     [ebp+var_20], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
call    sub_100064f0
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_d]
cmp     [ebp+var_e], bl
jnz     short loc_100013e4
mov     [esi+4], ebx
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001470
mov     eax, large fs:0
push    eax
push    ecx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7dtsqlitedatatransaction@@6b@
mov     [ebp+var_4], 0
call    sub_10001390
test    byte ptr [ebp+arg_0], 1
mov     [ebp+var_4], 0ffffffffh
mov     eax, ds:??_7idtdatatransaction@@6b@
mov     [esi], eax
jz      short loc_100014c9
push    esi
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100014e0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, [ebp+arg_0]
mov     ecx, ebx
call    ds:??0idtdataconnection@@qae@xz
xor     eax, eax
mov     [ebp+var_4], eax
lea     esi, [ebx+14h]
mov     dword ptr [ebx], offset ??_7dtsqlitedataconnection@@6b@
mov     dword ptr [ebx+4], offset ??_7dtsqlitedataconnection@@6b@_0
mov     dword ptr [esi], offset ??_7?$dtsptr@udtdataconnectiondesc@@@@6b@
mov     [esi+8], eax
mov     [esi+4], eax
mov     dword ptr [ebx+20h], offset ??_7?$dtsptr@vdtsqlitedb@dtsqlitedataconnection@@@@6b@
mov     [ebx+28h], eax
mov     [ebx+24h], eax
mov     dword ptr [ebx+30h], offset ??_7?$dtsptr@vidtdatatransaction@@@@6b@
mov     [ebx+38h], eax
mov     [ebx+34h], eax
lea     ecx, [ebx+3ch]
mov     byte ptr [ebp+var_4], 3
call    ds:??0dtstr@@qae@xz
lea     ecx, [ebx+48h]
mov     byte ptr [ebp+var_4], 4
call    ds:??0dtasync@@qae@xz
push    1
push    offset adtsqlitedataco
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
mov     byte ptr [ebp+var_4], 5
call    ds:??0dtloghelper@@qae@pb_w0h@z
xor     ecx, ecx
mov     byte ptr [ebp+var_4], 6
mov     [ebx+2ch], ecx
mov     eax, [ebx+38h]
cmp     eax, ecx
jz      short loc_100015b1
dec     dword ptr [eax]
cmp     [eax], ecx
jnz     short loc_100015b1
mov     eax, [ebx+30h]
mov     edx, [eax+4]
lea     ecx, [ebx+30h]
call    edx
mov     eax, [ebx+38h]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
xor     ecx, ecx
mov     [ebx+34h], ecx
mov     [ebx+38h], ecx
push    offset dword_10074408
lea     ecx, [ebx+3ch]
call    ds:??4dtstr@@qaeaav0@pa_w@z
push    1ch
call    ds:??2@yapaxi@z
mov     edi, eax
add     esp, 4
mov     [ebp+var_14], edi
mov     byte ptr [ebp+var_4], 7
test    edi, edi
jz      short loc_100015f5
lea     ecx, [edi+4]
call    ds:??0dtstr@@qae@xz
lea     ecx, [edi+10h]
mov     byte ptr [ebp+var_4], 8
call    ds:??0dtstr@@qae@xz
jmp     short loc_100015f7
xor     edi, edi
mov     byte ptr [ebp+var_4], 6
call    sub_10006470
mov     edi, [ebp+arg_4]
mov     esi, [ebx+18h]
mov     eax, [edi]
lea     ecx, [edi+4]
push    ecx
lea     ecx, [esi+4]
mov     [esi], eax
call    ds:??4dtstr@@qaeaav0@aav0@@z
add     edi, 10h
push    edi
lea     ecx, [esi+10h]
call    ds:??4dtstr@@qaeaav0@aav0@@z
mov     eax, [ebx+28h]
xor     edi, edi
cmp     eax, edi
jz      short loc_1000164b
dec     dword ptr [eax]
cmp     [eax], edi
jnz     short loc_1000164b
mov     edx, [ebx+20h]
mov     eax, [edx+4]
lea     ecx, [ebx+20h]
call    eax
mov     eax, [ebx+28h]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
lea     ecx, [ebp+var_d]
mov     [ebx+24h], edi
mov     [ebx+28h], edi
mov     byte ptr [ebp+var_4], 5
call    ds:??1dtloghelper@@qae@xz
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    esi
call    sub_100016b0
test    [ebp+arg_0], 1
jz      short loc_1000169c
push    esi
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100016b0
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, [ebp+arg_0]
mov     dword ptr [esi], offset ??_7dtsqlitedataconnection@@6b@
mov     dword ptr [esi+4], offset ??_7dtsqlitedataconnection@@6b@_0
push    1
push    offset adtsqlitedataco_0
mov     ebx, 5
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], ebx
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     ecx, esi
mov     byte ptr [ebp+var_4], 6
call    sub_10001940
lea     ecx, [ebp+var_d]
mov     byte ptr [ebp+var_4], bl
call    ds:??1dtloghelper@@qae@xz
lea     ecx, [esi+48h]
mov     byte ptr [ebp+var_4], 4
call    ds:??1dtasync@@qae@xz
lea     ecx, [esi+3ch]
mov     byte ptr [ebp+var_4], 3
call    ds:??1dtstr@@qae@xz
mov     byte ptr [ebp+var_4], 2
mov     eax, [esi+38h]
xor     ebx, ebx
mov     dword ptr [esi+30h], offset ??_7?$dtsptr@vidtdatatransaction@@@@6b@
cmp     eax, ebx
jz      short loc_10001766
dec     dword ptr [eax]
cmp     [eax], ebx
jnz     short loc_10001766
mov     eax, [esi+30h]
mov     edx, [eax+4]
lea     ecx, [esi+30h]
call    edx
mov     eax, [esi+38h]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     [esi+34h], ebx
mov     [esi+38h], ebx
mov     byte ptr [ebp+var_4], 1
mov     eax, [esi+28h]
mov     dword ptr [esi+20h], offset ??_7?$dtsptr@vdtsqlitedb@dtsqlitedataconnection@@@@6b@
cmp     eax, ebx
jz      short loc_1000179c
dec     dword ptr [eax]
cmp     [eax], ebx
jnz     short loc_1000179c
mov     eax, [esi+20h]
mov     edx, [eax+4]
lea     ecx, [esi+20h]
call    edx
mov     eax, [esi+28h]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     [esi+24h], ebx
mov     [esi+28h], ebx
mov     byte ptr [ebp+var_4], bl
mov     eax, [esi+1ch]
mov     dword ptr [esi+14h], offset ??_7?$dtsptr@udtdataconnectiondesc@@@@6b@
cmp     eax, ebx
jz      short loc_100017d1
dec     dword ptr [eax]
cmp     [eax], ebx
jnz     short loc_100017d1
mov     eax, [esi+14h]
mov     edx, [eax+4]
lea     ecx, [esi+14h]
call    edx
mov     eax, [esi+1ch]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     ecx, esi
mov     [esi+18h], ebx
mov     [esi+1ch], ebx
mov     [ebp+var_4], 0ffffffffh
call    ds:??1idtdataconnection@@uae@xz
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001800
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     edi, ds:??0dtloghelper@@qae@pb_w0h@z
xor     esi, esi
push    esi
push    offset aopen
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    edi
mov     [ebp+var_4], esi
cmp     [ebx+24h], esi
jnz     loc_1000190a
push    esi
push    offset afinalizestmt
push    offset adtsqlitedataco
lea     ecx, [ebp+var_e]
call    edi
mov     byte ptr [ebp+var_4], 1
mov     eax, [ebx+2ch]
cmp     eax, esi
jz      short loc_1000187c
push    eax
call    sub_10029010
add     esp, 4
mov     edi, ebx
call    sub_10001c50
mov     [ebx+2ch], esi
lea     ecx, [ebp+var_e]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtloghelper@@qae@xz
push    10h
call    ds:??2@yapaxi@z
mov     edi, eax
add     esp, 4
mov     [ebp+var_18], edi
mov     byte ptr [ebp+var_4], 2
cmp     edi, esi
jz      short loc_100018cc
mov     eax, [ebx+18h]
lea     ecx, [edi+4]
mov     [ebp+var_14], eax
call    ds:??0dtstr@@qae@xz
mov     ecx, [ebp+var_14]
add     ecx, 10h
push    ecx
lea     ecx, [edi+4]
mov     byte ptr [ebp+var_4], 3
call    ds:??4dtstr@@qaeaav0@aav0@@z
mov     dword ptr [edi], 0
jmp     short loc_100018ce
xor     edi, edi
lea     esi, [ebx+20h]
mov     byte ptr [ebp+var_4], 0
call    sub_10006470
mov     esi, [ebx+24h]
call    sub_10001150
test    eax, eax
jnz     short loc_1000190a
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001940
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     esi, ds:??0dtloghelper@@qae@pb_w0h@z
xor     ebx, ebx
push    ebx
push    offset aclose
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    esi
push    ebx
push    offset afinalizestmt
push    offset adtsqlitedataco
lea     ecx, [ebp+var_e]
mov     [ebp+var_4], ebx
call    esi
mov     byte ptr [ebp+var_4], 1
mov     eax, [edi+2ch]
cmp     eax, ebx
jz      short loc_100019af
push    eax
call    sub_10029010
add     esp, 4
call    sub_10001c50
mov     [edi+2ch], ebx
mov     byte ptr [ebp+var_4], bl
mov     esi, ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_e]
call    esi
mov     ecx, [edi+34h]
cmp     ecx, ebx
jz      short loc_10001a1a
mov     eax, [ecx]
mov     edx, [eax+0ch]
call    edx
test    eax, eax
jz      short loc_100019ef
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    esi
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+38h]
cmp     eax, ebx
jz      short loc_10001a14
dec     dword ptr [eax]
cmp     [eax], ebx
jnz     short loc_10001a14
mov     eax, [edi+30h]
mov     edx, [eax+4]
lea     ecx, [edi+30h]
call    edx
mov     eax, [edi+38h]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     [edi+34h], ebx
mov     [edi+38h], ebx
mov     eax, [edi+20h]
mov     edx, [eax]
lea     esi, [edi+20h]
mov     ecx, esi
call    edx
test    eax, eax
jnz     short loc_10001a63
mov     edi, [edi+24h]
mov     eax, [edi]
cmp     eax, ebx
jz      short loc_10001a3a
call    sub_1006f820
mov     [edi], ebx
mov     eax, [esi+8]
cmp     eax, ebx
jz      short loc_10001a5d
dec     dword ptr [eax]
cmp     [eax], ebx
jnz     short loc_10001a5d
mov     eax, [esi]
mov     edx, [eax+4]
mov     ecx, esi
call    edx
mov     eax, [esi+8]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     [esi+4], ebx
mov     [esi+8], ebx
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10005290
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    1
push    offset ageterrorcode
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], 0
mov     eax, [eax+24h]
test    eax, eax
jz      short loc_10001b12
cmp     dword ptr [eax], 0
jz      short loc_10001b12
mov     eax, [eax]
push    eax
call    sub_10070bc0
add     esp, 4
lea     ecx, [ebp+var_d]
mov     esi, eax
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
or      eax, 0ffffffffh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001b40
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
push    1
push    offset ageterrorstr
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], 0
mov     eax, [edi+20h]
test    eax, eax
jz      loc_10001c1d
cmp     dword ptr [eax], 0
jz      loc_10001c1d
mov     eax, [eax]
push    eax
add     edi, 4
call    sub_10070900
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10001bb8
lea     esp, [esp+0]
cmp     byte ptr [eax], 0
jz      short loc_10001bb8
inc     eax
jmp     short loc_10001bb0
sub     eax, esi
mov     ecx, edi
mov     ebx, eax
call    ds:?null@dtstr@@qaexxz
test    ebx, ebx
jz      short loc_10001bf7
push    ebx
push    0
push    esi
push    edi
push    1
call    ds:?decode@dtstr@@sahw4dtencoding@@aav1@paehh@z
add     esp, 14h
test    eax, eax
jnz     short loc_10001bf7
push    ebx
push    eax
push    esi
push    edi
push    eax
call    ds:?decode@dtstr@@sahw4dtencoding@@aav1@paehh@z
add     esp, 14h
test    eax, eax
jnz     short loc_10001bf7
push    esi
mov     ecx, edi
call    ds:??4dtstr@@qaeaav0@pa_w@z
mov     edi, [edi]
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001c50
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    ebx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    1
push    offset awritelog
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
xor     ebx, ebx
push    edi
mov     [ebp+var_4], ebx
call    sub_10001a90
mov     esi, eax
or      eax, 0ffffffffh
cmp     esi, eax
jnz     short loc_10001cbf
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], eax
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     esi, ebx
jz      loc_10001d6c
cmp     esi, 65h
jz      loc_10001d6c
cmp     esi, 64h
jz      loc_10001d6c
mov     eax, [edi+4]
mov     edx, [eax]
lea     ecx, [edi+4]
push    ebx
call    edx
push    eax
lea     ecx, [ebp+var_1c]
call    ds:??0dtstr@@qae@pa_wi@z
mov     byte ptr [ebp+var_4], 1
cmp     [ebp+var_18], ebx
jz      short loc_10001d3d
mov     eax, [ebp+var_1c]
push    ebx
push    offset anotanerror
push    eax
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jnz     short loc_10001d23
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], bl
call    ds:??1dtstr@@qae@xz
mov     [ebp+var_4], 0ffffffffh
jmp     short loc_10001d6f
mov     ecx, [ebp+var_1c]
mov     edx, ds:?dtlog@@3vdtlog@@a
push    ecx
push    esi
push    offset asqliteerrorcod
push    edx
call    ds:?printformat@dtlog@@qaahpa_wzz
add     esp, 10h
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], bl
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_4], eax
lea     ecx, [ebp+var_d]
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001d90
mov     eax, large fs:0
push    eax
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
xor     edi, edi
push    edi
push    offset abegintransacti
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], edi
mov     ecx, [ebx+34h]
cmp     ecx, edi
jz      short loc_10001de5
mov     eax, [ecx]
mov     edx, [eax+4]
call    edx
test    eax, eax
jnz     short loc_10001e48
mov     [ebp+var_20], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [ebp+var_1c], edi
mov     [ebp+var_18], edi
mov     [ebp+var_14], edi
mov     byte ptr [ebp+var_4], 1
mov     eax, [ebx]
mov     edx, [eax+1ch]
lea     ecx, [ebp+var_20]
push    ecx
push    offset abegintransacti
mov     ecx, ebx
call    edx
test    eax, eax
jz      short loc_10001e2d
push    8
call    ds:??2@yapaxi@z
add     esp, 4
cmp     eax, edi
jz      short loc_10001e29
mov     dword ptr [eax], offset ??_7dtsqlitedatatransaction@@6b@
mov     [eax+4], ebx
jmp     short loc_10001e2b
xor     eax, eax
mov     edi, eax
lea     esi, [ebx+30h]
call    sub_10006470
mov     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+var_20]
mov     [ebp+var_20], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
call    sub_100064f0
mov     ebx, [ebx+34h]
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_10001e70
mov     eax, large fs:0
push    eax
sub     esp, 28h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+44h+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     esi, ds:??0dtloghelper@@qae@pb_w0h@z
xor     ebx, ebx
push    ebx
push    offset apreparestmt
push    offset adtsqlitedataco
lea     ecx, [esp+50h+var_32]
call    esi
mov     ecx, [ebp+arg_0]
lea     eax, [edi+3ch]
push    ebx
mov     [esp+48h+var_4], ebx
mov     edx, [eax]
push    ecx
push    edx
mov     [esp+50h+var_30], eax
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jnz     short loc_10001f1d
mov     eax, [edi+2ch]
cmp     eax, ebx
jz      short loc_10001f1d
push    eax
call    sub_100290b0
add     esp, 4
call    sub_10001c50
test    eax, eax
jnz     loc_1000200a
lea     ecx, [esp+44h+var_32]
mov     [esp+44h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, dword ptr [esp+44h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebx
push    offset afinalizestmt
push    offset adtsqlitedataco
lea     ecx, [esp+50h+var_31]
call    esi
lea     esi, [edi+2ch]
mov     byte ptr [esp+44h+var_4], 1
mov     eax, [esi]
cmp     eax, ebx
jz      short loc_10001f4c
push    eax
call    sub_10029010
add     esp, 4
call    sub_10001c50
mov     [esi], ebx
lea     ecx, [esp+44h+var_31]
mov     byte ptr [esp+44h+var_4], bl
call    ds:??1dtloghelper@@qae@xz
mov     eax, ds:??_7?$dtarray@e@@6b@
mov     [esp+44h+var_20], eax
mov     [esp+44h+var_1c], ebx
mov     [esp+44h+var_18], ebx
mov     [esp+44h+var_14], ebx
mov     ecx, [ebp+arg_0]
push    ebx
push    ecx
lea     ecx, [esp+4ch+var_2c]
mov     byte ptr [esp+4ch+var_4], 2
call    ds:??0dtstr@@qae@pa_wi@z
lea     edx, [esp+44h+var_20]
push    edx
push    1
lea     ecx, [esp+4ch+var_2c]
mov     byte ptr [esp+4ch+var_4], 3
call    ds:?encode@dtstr@@qaehw4dtencoding@@aav?$dtarray@e@@@z
mov     ecx, [esp+44h+var_18]
mov     eax, [edi+24h]
mov     edx, [esp+44h+var_1c]
mov     eax, [eax]
push    ebx
push    ebx
push    1
push    ecx
push    edx
call    sub_10054100
add     esp, 14h
call    sub_10001c50
test    eax, eax
jnz     short loc_10001fdf
lea     ecx, [esp+44h+var_2c]
mov     byte ptr [esp+44h+var_4], 2
call    ds:??1dtstr@@qae@xz
lea     ecx, [esp+44h+var_20]
mov     byte ptr [esp+44h+var_4], bl
call    ds:??1?$dtarray@e@@qae@xz
jmp     loc_10001ef4
mov     eax, [ebp+arg_0]
mov     ecx, [esp+44h+var_30]
push    eax
call    ds:??4dtstr@@qaeaav0@pa_w@z
lea     ecx, [esp+44h+var_2c]
mov     byte ptr [esp+44h+var_4], 2
call    ds:??1dtstr@@qae@xz
lea     ecx, [esp+44h+var_20]
mov     byte ptr [esp+44h+var_4], bl
call    ds:??1?$dtarray@e@@qae@xz
lea     ecx, [esp+44h+var_32]
mov     [esp+44h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, dword ptr [esp+44h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, eax
cmp     esi, 0ffffffffh
jnz     short loc_1000205c
mov     esi, edi
test    edi, edi
jz      short loc_1000205a
cmp     byte ptr [esi], 0
jz      short loc_1000205a
inc     esi
jmp     short loc_10002052
sub     esi, edi
mov     ebx, [ebp+arg_0]
mov     ecx, ebx
call    ds:?null@dtstr@@qaexxz
test    esi, esi
jz      short loc_1000209b
push    esi
push    0
push    edi
push    ebx
mov     ebx, ds:?decode@dtstr@@sahw4dtencoding@@aav1@paehh@z
push    1
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_1000209b
push    esi
mov     esi, [ebp+arg_0]
push    eax
push    edi
push    esi
push    eax
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_1000209b
push    edi
mov     ecx, esi
call    ds:??4dtstr@@qaeaav0@pa_w@z
pop     esi
mov     eax, 1
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100045b0
mov     eax, large fs:0
push    eax
push    ecx
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
push    0
push    offset afinalizestmt
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], 0
mov     eax, [edi+2ch]
test    eax, eax
jz      short loc_1000210e
push    eax
call    sub_10029010
add     esp, 4
call    sub_10001c50
mov     dword ptr [edi+2ch], 0
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004980
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    1
push    offset agetparamname
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     eax, [ebp+arg_0]
push    0
push    eax
lea     ecx, [ebp+var_1c]
mov     [ebp+var_4], 0
call    ds:??0dtstr@@qae@pa_wi@z
push    1
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], 1
call    ds:?identifier@dtstr@@qaehh@z
mov     ecx, [ebp+var_1c]
push    ecx
push    offset asc_10074590
push    offset ass
push    esi
call    ds:?print@dtstr@@qaahpa_wzz
mov     esi, [esi]
add     esp, 10h
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100021e0
mov     eax, large fs:0
push    eax
sub     esp, 50h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
xor     ebx, ebx
push    ebx
push    offset agetinsertcmd
push    offset adtsqlitedataco
lea     ecx, [ebp+var_11]
mov     [ebp+var_18], ebx
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], ebx
mov     eax, [ebp+arg_4]
cmp     [eax+124h], ebx
jz      loc_100024cd
mov     ecx, [ebp+arg_8]
push    offset dword_10074408
call    ds:??4dtstr@@qaeaav0@pa_w@z
mov     edi, ds:??0dtstr@@qae@xz
lea     ecx, [ebp+var_4c]
mov     [esi+8], ebx
call    edi
lea     ecx, [ebp+var_34]
mov     byte ptr [ebp+var_4], 1
call    edi
push    ebx
mov     byte ptr [ebp+var_4], 2
mov     edi, ds:??0dtstr@@qae@pa_wi@z
push    offset dword_10074408
lea     ecx, [ebp+var_28]
call    edi
push    ebx
push    offset dword_10074408
lea     ecx, [ebp+var_40]
mov     byte ptr [ebp+var_4], 3
call    edi
mov     byte ptr [ebp+var_4], 4
mov     ecx, [ebp+arg_4]
mov     eax, [ecx+124h]
test    eax, eax
jz      loc_100023a1
mov     ecx, [ebp+arg_4]
push    ebx
call    ds:?getfielddata@dttable@@qaepaudtfield@@i@z
mov     edi, eax
cmp     dword ptr [edi+64h], 0
jnz     loc_10002391
mov     edx, [ebp+var_28]
push    0
push    offset dword_10074408
push    edx
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_100022dd
push    offset asc_100745bc
lea     ecx, [ebp+var_28]
call    ds:??ydtstr@@qaeaav0@pa_w@z
push    offset asc_100745bc
lea     ecx, [ebp+var_40]
call    ds:??ydtstr@@qaeaav0@pa_w@z
mov     eax, [edi]
push    eax
lea     ecx, [ebp+var_28]
call    ds:??ydtstr@@qaeaav0@pa_w@z
mov     ecx, [edi]
push    ecx
lea     ecx, [ebp+var_34]
call    sub_10002130
mov     edx, [ebp+var_34]
push    edx
lea     ecx, [ebp+var_40]
call    ds:??ydtstr@@qaeaav0@pa_w@z
push    28h
call    ds:??2@yapaxi@z
add     esp, 4
mov     [ebp+var_1c], eax
xor     ecx, ecx
cmp     eax, ecx
jz      short loc_10002348
mov     edx, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_5c], edx
mov     [ebp+var_58], ecx
mov     [ebp+var_54], ecx
mov     [ebp+var_50], ecx
lea     ecx, [ebp+var_5c]
push    ecx
mov     byte ptr [ebp+var_4], 6
mov     edx, [edi+18h]
mov     ecx, [ebp+var_34]
or      [ebp+var_18], 1
push    ebx
push    edx
push    ecx
push    eax
call    sub_10001000
mov     edi, eax
xor     ecx, ecx
jmp     short loc_1000234a
xor     edi, edi
mov     [ebp+var_4], 7
cmp     [esi+4], ecx
jz      short loc_1000235e
mov     edx, [esi+8]
cmp     edx, [esi+0ch]
jnz     short loc_1000236b
mov     ecx, [esi+8]
inc     ecx
call    sub_10006550
test    eax, eax
jz      short loc_10002377
mov     eax, [esi+8]
mov     ecx, [esi+4]
mov     [ecx+eax*4], edi
inc     dword ptr [esi+8]
mov     [ebp+var_4], 4
test    byte ptr [ebp+var_18], 1
jz      short loc_10002391
and     [ebp+var_18], 0fffffffeh
lea     ecx, [ebp+var_5c]
call    ds:??1?$dtarray@e@@qae@xz
mov     edx, [ebp+arg_4]
inc     ebx
cmp     ebx, [edx+124h]
jb      loc_10002293
mov     eax, [ebp+arg_4]
mov     edi, [eax+160h]
test    edi, edi
jz      loc_1000248b
mov     ecx, [ebp+var_28]
push    0
push    offset dword_10074408
push    ecx
call    ds:?dtstrcomp@@yahpb_w0h@z
mov     ebx, ds:??ydtstr@@qaeaav0@pa_w@z
add     esp, 0ch
test    eax, eax
jz      short loc_100023e4
push    offset asc_100745bc
lea     ecx, [ebp+var_28]
call    ebx
push    offset asc_100745bc
lea     ecx, [ebp+var_40]
call    ebx
mov     edx, [edi]
push    edx
lea     ecx, [ebp+var_28]
call    ebx
mov     eax, [edi]
push    eax
lea     ecx, [ebp+var_34]
call    sub_10002130
mov     ecx, [ebp+var_34]
push    ecx
lea     ecx, [ebp+var_40]
call    ebx
push    28h
call    ds:??2@yapaxi@z
add     esp, 4
mov     [ebp+arg_4], eax
xor     ebx, ebx
cmp     eax, ebx
jz      short loc_10002446
mov     edx, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_5c], edx
mov     [ebp+var_58], ebx
mov     [ebp+var_54], ebx
mov     [ebp+var_50], ebx
lea     ecx, [ebp+var_5c]
push    ecx
mov     byte ptr [ebp+var_4], 9
mov     edx, [edi+18h]
mov     ecx, [ebp+var_34]
or      [ebp+var_18], 2
push    0ffffffffh
push    edx
push    ecx
push    eax
call    sub_10001000
mov     edi, eax
jmp     short loc_10002448
xor     edi, edi
mov     [ebp+var_4], 0ah
cmp     [esi+4], ebx
jz      short loc_1000245c
mov     edx, [esi+8]
cmp     edx, [esi+0ch]
jnz     short loc_10002469
mov     ecx, [esi+8]
inc     ecx
call    sub_10006550
test    eax, eax
jz      short loc_10002475
mov     eax, [esi+8]
mov     ecx, [esi+4]
mov     [ecx+eax*4], edi
inc     dword ptr [esi+8]
mov     [ebp+var_4], 4
test    byte ptr [ebp+var_18], 2
jz      short loc_1000248b
lea     ecx, [ebp+var_5c]
call    ds:??1?$dtarray@e@@qae@xz
mov     edx, [ebp+var_28]
push    0
push    offset dword_10074408
push    edx
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jnz     short loc_100024f3
mov     byte ptr [ebp+var_4], 3
mov     esi, ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_40]
call    esi
lea     ecx, [ebp+var_28]
mov     byte ptr [ebp+var_4], 2
call    esi
lea     ecx, [ebp+var_34]
mov     byte ptr [ebp+var_4], 1
call    esi
lea     ecx, [ebp+var_4c]
mov     byte ptr [ebp+var_4], 0
call    esi
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, [ebp+var_40]
mov     ecx, [ebp+var_28]
mov     edx, [ebp+arg_0]
push    eax
mov     eax, [ebp+arg_8]
push    ecx
push    edx
push    offset ainsertintossva
push    eax
call    ds:?print@dtstr@@qaahpa_wzz
mov     byte ptr [ebp+var_4], 3
mov     esi, ds:??1dtstr@@qae@xz
add     esp, 14h
lea     ecx, [ebp+var_40]
call    esi
lea     ecx, [ebp+var_28]
mov     byte ptr [ebp+var_4], 2
call    esi
lea     ecx, [ebp+var_34]
mov     byte ptr [ebp+var_4], 1
call    esi
lea     ecx, [ebp+var_4c]
mov     byte ptr [ebp+var_4], 0
call    esi
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10002570
mov     eax, large fs:0
push    eax
sub     esp, 58h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
xor     ebx, ebx
push    ebx
push    offset agetupdatecmd
push    offset adtsqlitedataco
lea     ecx, [ebp+var_11]
mov     [ebp+var_18], ebx
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], ebx
mov     eax, [ebp+arg_4]
cmp     [eax+124h], ebx
jz      loc_100029c2
mov     ecx, [ebp+arg_8]
push    offset dword_10074408
call    ds:??4dtstr@@qaeaav0@pa_w@z
lea     ecx, [ebp+var_2c]
mov     [esi+8], ebx
call    ds:??0dtstr@@qae@xz
push    ebx
mov     byte ptr [ebp+var_4], 1
mov     edi, ds:??0dtstr@@qae@pa_wi@z
push    offset dword_10074408
lea     ecx, [ebp+var_38]
call    edi
push    ebx
push    offset dword_10074408
lea     ecx, [ebp+var_44]
mov     byte ptr [ebp+var_4], 2
call    edi
mov     byte ptr [ebp+var_4], 3
mov     edi, [ebp+arg_4]
call    sub_10002fc0
mov     ecx, edi
mov     [ebp+var_1c], ebx
cmp     [ecx+124h], ebx
jbe     loc_100027ea
mov     edx, [ebp+var_1c]
mov     ecx, [ebp+arg_4]
push    edx
call    ds:?getfielddata@dttable@@qaepaudtfield@@i@z
mov     edi, eax
mov     eax, [edi]
push    eax
lea     ecx, [ebp+var_2c]
call    sub_10002130
push    ebx
push    offset dword_10074408
cmp     [edi+68h], ebx
jnz     loc_10002710
mov     ecx, [ebp+var_38]
push    ecx
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_10002668
push    offset asc_100745bc
lea     ecx, [ebp+var_38]
call    ds:??ydtstr@@qaeaav0@pa_w@z
mov     edx, [ebp+var_2c]
mov     eax, [edi]
push    edx
push    eax
lea     ecx, [ebp+var_38]
push    offset ass_0
push    ecx
call    ds:?append@dtstr@@qaahpa_wzz
push    28h
call    ds:??2@yapaxi@z
add     esp, 14h
mov     [ebp+var_20], eax
cmp     eax, ebx
jz      short loc_100026c4
mov     edx, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_54], edx
mov     [ebp+var_50], ebx
mov     [ebp+var_4c], ebx
mov     [ebp+var_48], ebx
mov     edx, [ebp+var_1c]
lea     ecx, [ebp+var_54]
push    ecx
mov     byte ptr [ebp+var_4], 5
mov     ecx, [edi+18h]
or      [ebp+var_18], 1
push    edx
mov     edx, [ebp+var_2c]
push    ecx
push    edx
push    eax
call    sub_10001000
mov     edi, eax
jmp     short loc_100026c6
xor     edi, edi
mov     [ebp+var_4], 6
cmp     [esi+4], ebx
jz      short loc_100026da
mov     eax, [esi+8]
cmp     eax, [esi+0ch]
jnz     short loc_100026e7
mov     ecx, [esi+8]
inc     ecx
call    sub_10006550
test    eax, eax
jz      short loc_100026f3
mov     ecx, [esi+8]
mov     edx, [esi+4]
mov     [edx+ecx*4], edi
inc     dword ptr [esi+8]
mov     [ebp+var_4], 3
test    byte ptr [ebp+var_18], 1
jz      loc_100027d4
and     [ebp+var_18], 0fffffffeh
lea     ecx, [ebp+var_54]
jmp     loc_100027ce
mov     eax, [ebp+var_44]
push    eax
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_1000272f
push    offset aand
lea     ecx, [ebp+var_44]
call    ds:??ydtstr@@qaeaav0@pa_w@z
mov     ecx, [ebp+var_2c]
mov     edx, [edi]
push    ecx
push    edx
lea     eax, [ebp+var_44]
push    offset ass_0
push    eax
call    ds:?append@dtstr@@qaahpa_wzz
push    28h
call    ds:??2@yapaxi@z
add     esp, 14h
mov     [ebp+var_20], eax
cmp     eax, ebx
jz      short loc_1000278b
mov     ecx, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_64], ecx
mov     [ebp+var_60], ebx
mov     [ebp+var_5c], ebx
mov     [ebp+var_58], ebx
mov     ecx, [ebp+var_1c]
lea     edx, [ebp+var_64]
push    edx
mov     byte ptr [ebp+var_4], 8
mov     edx, [edi+18h]
or      [ebp+var_18], 2
push    ecx
mov     ecx, [ebp+var_2c]
push    edx
push    ecx
push    eax
call    sub_10001000
mov     edi, eax
jmp     short loc_1000278d
xor     edi, edi
mov     [ebp+var_4], 9
cmp     [esi+4], ebx
jz      short loc_100027a1
mov     edx, [esi+8]
cmp     edx, [esi+0ch]
jnz     short loc_100027ae
mov     ecx, [esi+8]
inc     ecx
call    sub_10006550
test    eax, eax
jz      short loc_100027ba
mov     eax, [esi+8]
mov     ecx, [esi+4]
mov     [ecx+eax*4], edi
inc     dword ptr [esi+8]
mov     [ebp+var_4], 3
test    byte ptr [ebp+var_18], 2
jz      short loc_100027d4
and     [ebp+var_18], 0fffffffdh
lea     ecx, [ebp+var_64]
call    ds:??1?$dtarray@e@@qae@xz
mov     eax, [ebp+var_1c]
mov     edx, [ebp+arg_4]
inc     eax
mov     [ebp+var_1c], eax
cmp     eax, [edx+124h]
jb      loc_10002620
mov     eax, [ebp+arg_4]
mov     edi, [eax+160h]
cmp     edi, ebx
jz      loc_1000298b
mov     ecx, [edi]
push    ecx
lea     ecx, [ebp+var_2c]
call    sub_10002130
push    ebx
push    offset dword_10074408
cmp     [edi+68h], ebx
jnz     loc_100028cd
mov     edx, [ebp+var_38]
push    edx
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_10002834
push    offset asc_100745bc
lea     ecx, [ebp+var_38]
call    ds:??ydtstr@@qaeaav0@pa_w@z
mov     eax, [ebp+var_2c]
mov     ecx, [edi]
push    eax
push    ecx
lea     edx, [ebp+var_38]
push    offset ass_0
push    edx
call    ds:?append@dtstr@@qaahpa_wzz
push    28h
call    ds:??2@yapaxi@z
add     esp, 14h
mov     [ebp+arg_4], eax
cmp     eax, ebx
jz      short loc_1000288e
mov     ecx, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_64], ecx
mov     [ebp+var_60], ebx
mov     [ebp+var_5c], ebx
mov     [ebp+var_58], ebx
lea     edx, [ebp+var_64]
push    edx
mov     byte ptr [ebp+var_4], 0bh
mov     ecx, [edi+18h]
mov     edx, [ebp+var_2c]
or      [ebp+var_18], 4
push    0ffffffffh
push    ecx
push    edx
push    eax
call    sub_10001000
mov     edi, eax
jmp     short loc_10002890
xor     edi, edi
mov     [ebp+var_4], 0ch
cmp     [esi+4], ebx
jz      short loc_100028a4
mov     eax, [esi+8]
cmp     eax, [esi+0ch]
jnz     short loc_100028b1
mov     ecx, [esi+8]
inc     ecx
call    sub_10006550
test    eax, eax
jz      short loc_100028bd
mov     ecx, [esi+8]
mov     edx, [esi+4]
mov     [edx+ecx*4], edi
inc     dword ptr [esi+8]
mov     [ebp+var_4], 3
test    byte ptr [ebp+var_18], 4
jmp     loc_10002980
mov     eax, [ebp+var_44]
push    eax
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_100028ec
push    offset aand
lea     ecx, [ebp+var_44]
call    ds:??ydtstr@@qaeaav0@pa_w@z
mov     ecx, [ebp+var_2c]
mov     edx, [edi]
push    ecx
push    edx
lea     eax, [ebp+var_44]
push    offset ass_0
push    eax
call    ds:?append@dtstr@@qaahpa_wzz
push    28h
call    ds:??2@yapaxi@z
add     esp, 14h
mov     [ebp+arg_4], eax
cmp     eax, ebx
jz      short loc_10002946
mov     ecx, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_64], ecx
mov     [ebp+var_60], ebx
mov     [ebp+var_5c], ebx
mov     [ebp+var_58], ebx
lea     edx, [ebp+var_64]
push    edx
mov     byte ptr [ebp+var_4], 0eh
mov     ecx, [edi+18h]
mov     edx, [ebp+var_2c]
or      [ebp+var_18], 8
push    0ffffffffh
push    ecx
push    edx
push    eax
call    sub_10001000
mov     edi, eax
jmp     short loc_10002948
xor     edi, edi
mov     [ebp+var_4], 0fh
cmp     [esi+4], ebx
jz      short loc_1000295c
mov     eax, [esi+8]
cmp     eax, [esi+0ch]
jnz     short loc_10002969
mov     ecx, [esi+8]
inc     ecx
call    sub_10006550
test    eax, eax
jz      short loc_10002975
mov     ecx, [esi+8]
mov     edx, [esi+4]
mov     [edx+ecx*4], edi
inc     dword ptr [esi+8]
mov     [ebp+var_4], 3
test    byte ptr [ebp+var_18], 8
jz      short loc_1000298b
lea     ecx, [ebp+var_64]
call    ds:??1?$dtarray@e@@qae@xz
mov     eax, [ebp+var_38]
push    ebx
push    offset adtstrcompwhere
push    eax
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jnz     short loc_100029e8
mov     byte ptr [ebp+var_4], 2
mov     esi, ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_44]
call    esi
lea     ecx, [ebp+var_38]
mov     byte ptr [ebp+var_4], 1
call    esi
lea     ecx, [ebp+var_2c]
mov     byte ptr [ebp+var_4], bl
call    esi
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     ecx, [ebp+var_44]
mov     edx, [ebp+var_38]
mov     eax, [ebp+arg_0]
push    ecx
mov     ecx, [ebp+arg_8]
push    edx
push    eax
push    offset aupdatessetswhe
push    ecx
call    ds:?print@dtstr@@qaahpa_wzz
mov     byte ptr [ebp+var_4], 2
mov     esi, ds:??1dtstr@@qae@xz
add     esp, 14h
lea     ecx, [ebp+var_44]
call    esi
lea     ecx, [ebp+var_38]
mov     byte ptr [ebp+var_4], 1
call    esi
lea     ecx, [ebp+var_2c]
mov     byte ptr [ebp+var_4], bl
call    esi
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10002a50
mov     eax, large fs:0
push    eax
sub     esp, 40h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
xor     ebx, ebx
push    ebx
push    offset agetdeletecmd
push    offset adtsqlitedataco
lea     ecx, [ebp+var_11]
mov     [ebp+var_18], ebx
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], ebx
mov     edi, [ebp+arg_4]
cmp     [edi+124h], ebx
jz      loc_10002d12
mov     ecx, [ebp+arg_8]
push    offset dword_10074408
call    ds:??4dtstr@@qaeaav0@pa_w@z
lea     ecx, [ebp+var_38]
mov     [esi+8], ebx
call    ds:??0dtstr@@qae@xz
push    ebx
push    offset dword_10074408
lea     ecx, [ebp+var_2c]
mov     byte ptr [ebp+var_4], 1
call    ds:??0dtstr@@qae@pa_wi@z
mov     byte ptr [ebp+var_4], 2
call    sub_10002fc0
xor     ecx, ecx
cmp     eax, 0ffffffffh
setnz   cl
mov     edx, edi
mov     eax, [edx+124h]
mov     [ebp+var_1c], ecx
test    eax, eax
jz      loc_10002bf4
mov     ecx, [ebp+arg_4]
push    ebx
call    ds:?getfielddata@dttable@@qaepaudtfield@@i@z
mov     edi, eax
mov     eax, [edi+68h]
xor     eax, [ebp+var_1c]
jnz     loc_10002be4
mov     ecx, [ebp+var_2c]
push    eax
push    offset dword_10074408
push    ecx
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_10002b33
push    offset aand
lea     ecx, [ebp+var_2c]
call    ds:??ydtstr@@qaeaav0@pa_w@z
mov     edx, [edi]
push    edx
lea     ecx, [ebp+var_38]
call    sub_10002130
mov     eax, [ebp+var_38]
mov     ecx, [edi]
push    eax
push    ecx
lea     edx, [ebp+var_2c]
push    offset ass_0
push    edx
call    ds:?append@dtstr@@qaahpa_wzz
push    28h
call    ds:??2@yapaxi@z
add     esp, 14h
mov     [ebp+var_20], eax
xor     ecx, ecx
cmp     eax, ecx
jz      short loc_10002b9b
mov     edx, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_48], edx
mov     [ebp+var_44], ecx
mov     [ebp+var_40], ecx
mov     [ebp+var_3c], ecx
lea     ecx, [ebp+var_48]
push    ecx
mov     byte ptr [ebp+var_4], 4
mov     edx, [edi+18h]
mov     ecx, [ebp+var_38]
or      [ebp+var_18], 1
push    ebx
push    edx
push    ecx
push    eax
call    sub_10001000
mov     edi, eax
xor     ecx, ecx
jmp     short loc_10002b9d
xor     edi, edi
mov     [ebp+var_4], 5
cmp     [esi+4], ecx
jz      short loc_10002bb1
mov     edx, [esi+8]
cmp     edx, [esi+0ch]
jnz     short loc_10002bbe
mov     ecx, [esi+8]
inc     ecx
call    sub_10006550
test    eax, eax
jz      short loc_10002bca
mov     eax, [esi+8]
mov     ecx, [esi+4]
mov     [ecx+eax*4], edi
inc     dword ptr [esi+8]
mov     [ebp+var_4], 2
test    byte ptr [ebp+var_18], 1
jz      short loc_10002be4
and     [ebp+var_18], 0fffffffeh
lea     ecx, [ebp+var_48]
call    ds:??1?$dtarray@e@@qae@xz
mov     edx, [ebp+arg_4]
inc     ebx
cmp     ebx, [edx+124h]
jb      loc_10002af6
mov     eax, [ebp+arg_4]
mov     edi, [eax+160h]
test    edi, edi
jz      loc_10002ce2
mov     ecx, [edi+68h]
xor     ecx, [ebp+var_1c]
jnz     loc_10002ce2
mov     edx, [ebp+var_2c]
push    ecx
push    offset dword_10074408
push    edx
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_10002c36
push    offset aand
lea     ecx, [ebp+var_2c]
call    ds:??ydtstr@@qaeaav0@pa_w@z
mov     eax, [edi]
push    eax
lea     ecx, [ebp+var_38]
call    sub_10002130
mov     ecx, [ebp+var_38]
mov     edx, [edi]
push    ecx
push    edx
lea     eax, [ebp+var_2c]
push    offset ass_0
push    eax
call    ds:?append@dtstr@@qaahpa_wzz
push    28h
call    ds:??2@yapaxi@z
add     esp, 14h
mov     [ebp+arg_4], eax
xor     ebx, ebx
cmp     eax, ebx
jz      short loc_10002c9d
mov     ecx, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_48], ecx
mov     [ebp+var_44], ebx
mov     [ebp+var_40], ebx
mov     [ebp+var_3c], ebx
lea     edx, [ebp+var_48]
push    edx
mov     byte ptr [ebp+var_4], 7
mov     ecx, [edi+18h]
mov     edx, [ebp+var_38]
or      [ebp+var_18], 2
push    0ffffffffh
push    ecx
push    edx
push    eax
call    sub_10001000
mov     edi, eax
jmp     short loc_10002c9f
xor     edi, edi
mov     [ebp+var_4], 8
cmp     [esi+4], ebx
jz      short loc_10002cb3
mov     eax, [esi+8]
cmp     eax, [esi+0ch]
jnz     short loc_10002cc0
mov     ecx, [esi+8]
inc     ecx
call    sub_10006550
test    eax, eax
jz      short loc_10002ccc
mov     ecx, [esi+8]
mov     edx, [esi+4]
mov     [edx+ecx*4], edi
inc     dword ptr [esi+8]
mov     [ebp+var_4], 2
test    byte ptr [ebp+var_18], 2
jz      short loc_10002ce2
lea     ecx, [ebp+var_48]
call    ds:??1?$dtarray@e@@qae@xz
mov     eax, [ebp+var_2c]
push    0
push    offset dword_10074408
push    eax
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jnz     short loc_10002d38
mov     byte ptr [ebp+var_4], 1
mov     esi, ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_2c]
call    esi
lea     ecx, [ebp+var_38]
mov     byte ptr [ebp+var_4], 0
call    esi
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     ecx, [ebp+var_2c]
mov     edx, [ebp+arg_0]
mov     eax, [ebp+arg_8]
push    ecx
push    edx
push    offset adeletefromswhe
push    eax
call    ds:?print@dtstr@@qaahpa_wzz
mov     byte ptr [ebp+var_4], 1
mov     esi, ds:??1dtstr@@qae@xz
add     esp, 10h
lea     ecx, [ebp+var_2c]
call    esi
lea     ecx, [ebp+var_38]
mov     byte ptr [ebp+var_4], 0
call    esi
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003210
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
xor     edi, edi
push    edi
push    offset agetcreatecmd
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], edi
cmp     [ebx+124h], edi
jnz     short loc_10002e11
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+arg_4]
push    offset dword_10074408
call    ds:??4dtstr@@qaeaav0@pa_w@z
push    edi
push    offset dword_10074408
lea     ecx, [ebp+var_1c]
call    ds:??0dtstr@@qae@pa_wi@z
mov     byte ptr [ebp+var_4], 1
cmp     [ebx+124h], edi
jbe     loc_10002edd
mov     edi, edi
push    edi
mov     ecx, ebx
call    ds:?getfielddata@dttable@@qaepaudtfield@@i@z
push    0
mov     esi, eax
mov     eax, [ebp+var_1c]
push    offset dword_10074408
push    eax
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_10002e71
push    offset asc_100745bc
lea     ecx, [ebp+var_1c]
call    ds:??ydtstr@@qaeaav0@pa_w@z
mov     ecx, [esi+64h]
mov     edx, [esi+18h]
push    ecx
push    edx
call    sub_100045b0
push    eax
mov     eax, [esi]
push    eax
lea     ecx, [ebp+var_1c]
push    offset ass_1
push    ecx
call    ds:?append@dtstr@@qaahpa_wzz
add     esp, 10h
cmp     dword ptr [esi+68h], 0
jz      short loc_10002ea8
push    offset aprimarykey
lea     ecx, [ebp+var_1c]
call    ds:??ydtstr@@qaeaav0@pa_w@z
cmp     dword ptr [esi+64h], 0
jz      short loc_10002ebc
push    offset aautoincrement
lea     ecx, [ebp+var_1c]
call    ds:??ydtstr@@qaeaav0@pa_w@z
cmp     dword ptr [esi+60h], 0
jz      short loc_10002ed0
push    offset anotnull
lea     ecx, [ebp+var_1c]
call    ds:??ydtstr@@qaeaav0@pa_w@z
inc     edi
cmp     edi, [ebx+124h]
jb      loc_10002e40
mov     ebx, [ebx+160h]
test    ebx, ebx
jz      short loc_10002f62
mov     edx, [ebp+var_1c]
push    0
push    offset dword_10074408
push    edx
call    ds:?dtstrcomp@@yahpb_w0h@z
mov     esi, ds:??ydtstr@@qaeaav0@pa_w@z
add     esp, 0ch
test    eax, eax
jz      short loc_10002f0f
push    offset asc_100745bc
lea     ecx, [ebp+var_1c]
call    esi
mov     eax, [ebx+64h]
mov     ecx, [ebx+18h]
push    eax
push    ecx
call    sub_100045b0
mov     edx, [ebx]
push    eax
push    edx
lea     eax, [ebp+var_1c]
push    offset ass_1
push    eax
call    ds:?append@dtstr@@qaahpa_wzz
add     esp, 10h
cmp     dword ptr [ebx+68h], 0
jz      short loc_10002f42
push    offset aprimarykey
lea     ecx, [ebp+var_1c]
call    esi
cmp     dword ptr [ebx+64h], 0
jz      short loc_10002f52
push    offset aautoincrement
lea     ecx, [ebp+var_1c]
call    esi
cmp     dword ptr [ebx+60h], 0
jz      short loc_10002f62
push    offset anotnull
lea     ecx, [ebp+var_1c]
call    esi
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+arg_0]
mov     eax, [edx]
push    ecx
mov     ecx, [ebp+arg_4]
push    eax
push    offset acreatetabless
push    ecx
call    ds:?print@dtstr@@qaahpa_wzz
add     esp, 10h
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10005290
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    1
push    offset agetprimarykeyp
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
xor     esi, esi
mov     [ebp+var_4], esi
cmp     [edi+124h], esi
jbe     short loc_10003024
mov     ebx, ds:?getfielddata@dttable@@qaepaudtfield@@i@z
lea     ecx, [ecx+0]
push    esi
mov     ecx, edi
call    ebx
cmp     dword ptr [eax+68h], 0
jnz     short loc_10003048
inc     esi
cmp     esi, [edi+124h]
jb      short loc_10003010
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
or      eax, 0ffffffffh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003070
mov     eax, large fs:0
push    eax
sub     esp, 58h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    1
push    offset aloadtable
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
xor     ebx, ebx
lea     ecx, [ebp+var_64]
mov     [ebp+var_4], ebx
call    ds:??0dtdatasource@@qae@xz
mov     byte ptr [ebp+var_4], 1
mov     edi, [esi+18h]
mov     eax, [edi]
lea     ecx, [edi+4]
push    ecx
lea     ecx, [ebp+var_60]
mov     [ebp+var_64], eax
call    ds:??4dtstr@@qaeaav0@aav0@@z
add     edi, 10h
push    edi
lea     ecx, [ebp+var_54]
call    ds:??4dtstr@@qaeaav0@aav0@@z
mov     edx, [ebp+arg_0]
push    edx
lea     ecx, [ebp+var_48]
call    ds:??4dtstr@@qaeaav0@pa_w@z
mov     edi, offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [ebp+var_20], edi
mov     [ebp+var_1c], ebx
mov     [ebp+var_18], ebx
mov     [ebp+var_14], ebx
mov     edx, [ebp+arg_4]
lea     ecx, [ebp+var_20]
push    ecx
mov     byte ptr [ebp+var_4], 2
mov     eax, [esi]
push    edx
mov     edx, [eax+14h]
lea     ecx, [ebp+var_64]
push    ecx
mov     ecx, esi
call    edx
mov     byte ptr [ebp+var_4], 1
lea     ecx, [ebp+var_20]
mov     esi, eax
mov     [ebp+var_20], edi
call    sub_100064f0
lea     ecx, [ebp+var_64]
mov     byte ptr [ebp+var_4], bl
call    ds:??1dtdatasource@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100012b0
mov     eax, large fs:0
push    eax
sub     esp, 14h
push    ebx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    1
push    offset aloadtable
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
xor     ebx, ebx
mov     [ebp+var_4], ebx
mov     [ebp+var_20], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [ebp+var_1c], ebx
mov     [ebp+var_18], ebx
mov     [ebp+var_14], ebx
mov     edx, [ebp+arg_4]
lea     ecx, [ebp+var_20]
push    ecx
mov     ecx, [ebp+arg_0]
mov     byte ptr [ebp+var_4], 1
mov     eax, [esi]
push    edx
mov     edx, [eax+14h]
push    ecx
mov     ecx, esi
call    edx
mov     byte ptr [ebp+var_4], bl
lea     ecx, [ebp+var_20]
mov     esi, eax
mov     [ebp+var_20], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
call    sub_100064f0
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003210
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    0
push    offset aloadschema
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], 0
mov     eax, [esi]
mov     edx, [eax+8]
mov     ecx, esi
call    edx
test    eax, eax
jz      short loc_100032a2
lea     ecx, [ebp+var_1c]
call    ds:??0dtstr@@qae@xz
mov     ebx, [ebp+arg_0]
push    ebx
lea     eax, [ebp+var_1c]
push    offset aselectfroms
push    eax
mov     byte ptr [ebp+var_4], 1
call    ds:?print@dtstr@@qaahpa_wzz
mov     ecx, [ebp+var_1c]
add     esp, 0ch
push    ecx
mov     ecx, esi
call    sub_10001e70
test    eax, eax
jnz     short loc_100032c8
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     edi, [ebp+arg_4]
push    0
push    edi
push    esi
call    sub_10003b20
test    eax, eax
jz      short loc_10003295
mov     ecx, esi
call    sub_100020b0
push    ebx
lea     ecx, [edi+20h]
call    ds:??4dtstr@@qaeaav0@pa_w@z
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003320
mov     eax, large fs:0
push    eax
sub     esp, 0a4h
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
push    0
push    offset asetparameterva
push    offset adtsqlitedataco
lea     ecx, [ebp+var_11]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], 0
mov     eax, [edi+2ch]
test    eax, eax
jz      short loc_10003378
push    eax
call    sub_10029160
add     esp, 4
call    sub_10001c50
test    eax, eax
jz      loc_10003579
lea     ecx, [ebp+var_ac]
call    ds:??0dtgeom@@qae@xz
mov     eax, [ebp+arg_4]
mov     byte ptr [ebp+var_4], 1
mov     eax, [eax+8]
xor     ecx, ecx
mov     [ebp+var_18], ecx
test    eax, eax
jz      loc_1000352b
mov     edi, ds:??1dtstr@@qae@xz
jmp     short loc_100033b3
mov     ecx, [ebp+var_18]
cmp     ecx, eax
jnb     loc_1000359e
mov     edx, [ebp+arg_4]
mov     eax, [edx+4]
mov     esi, [eax+ecx*4]
mov     edx, [esi]
lea     eax, [eax+ecx*4]
mov     eax, [edx+8]
mov     ecx, esi
call    eax
cmp     eax, 0ffffffffh
jz      short loc_10003442
mov     eax, [esi+14h]
cmp     eax, 3ch
jz      short loc_100033ff
cmp     eax, 3dh
jz      short loc_100033ff
mov     edx, [esi]
mov     eax, [edx+8]
lea     ecx, [esi+18h]
push    ecx
mov     ecx, esi
call    eax
mov     ecx, [ebp+arg_0]
push    eax
push    ebx
call    ds:?getbin@dttable@@qaehiiaav?$dtarray@e@@@z
jmp     loc_10003516
mov     edx, [esi]
mov     eax, [edx+8]
push    0
push    1
mov     ecx, esi
call    eax
mov     ecx, [ebp+arg_0]
push    eax
push    ebx
call    ds:?getstr@dttable@@qaepa_wiih@z
push    eax
lea     ecx, [ebp+var_34]
call    ds:??0dtstr@@qae@pa_wi@z
add     esi, 18h
push    esi
push    1
lea     ecx, [ebp+var_34]
mov     byte ptr [ebp+var_4], 2
call    ds:?encode@dtstr@@qaehw4dtencoding@@aav?$dtarray@e@@@z
lea     ecx, [ebp+var_34]
mov     byte ptr [ebp+var_4], 1
call    edi
jmp     loc_10003516
lea     ecx, [ebp+var_ac]
push    ecx
mov     ecx, [ebp+arg_0]
push    ebx
mov     dword ptr [esi+20h], 0
call    ds:?getgeom@dttable@@qaehiaavdtgeom@@@z
test    eax, eax
jz      loc_10003509
cmp     [ebp+var_9c], 0
jz      loc_10003509
mov     edx, [ebp+arg_8]
mov     eax, [edx+34h]
sub     eax, 0
jz      short loc_100034ef
dec     eax
jz      short loc_100034d1
dec     eax
jnz     loc_10003516
lea     ecx, [ebp+var_28]
call    ds:??0dtstr@@qae@xz
push    1
lea     eax, [ebp+var_ac]
push    eax
lea     ecx, [ebp+var_28]
push    ecx
mov     byte ptr [ebp+var_4], 3
call    ds:?convertfromdtgeom@dtgeomwktconverter@@sahaavdtstr@@aavdtgeom@@w4dtwkbtpointtype@?$dtwkbtbaseconverter@_w@@@z
add     esp, 0ch
lea     ecx, [ebp+var_28]
test    eax, eax
jz      loc_10003563
add     esi, 18h
push    esi
push    1
call    ds:?encode@dtstr@@qaehw4dtencoding@@aav?$dtarray@e@@@z
mov     byte ptr [ebp+var_4], 1
lea     ecx, [ebp+var_28]
test    eax, eax
jz      loc_10003567
call    edi
jmp     short loc_10003516
push    1
push    1
lea     edx, [ebp+var_ac]
push    edx
add     esi, 18h
push    esi
call    ds:?convertfromdtgeom@dtgeomwkbconverter@@sahaav?$dtarray@e@@aavdtgeom@@w4dtbyteorder@@w4dtwkbtpointtype@?$dtwkbtbaseconverter@e@@@z
add     esp, 10h
test    eax, eax
jz      short loc_10003569
jmp     short loc_10003516
add     esi, 18h
lea     eax, [ebp+var_ac]
push    esi
push    eax
call    ds:?geomtobytes@dtdbhelper@@sahpavdtgeom@@aav?$dtarray@e@@@z
add     esp, 8
test    eax, eax
jz      short loc_10003569
jmp     short loc_10003516
push    0
push    0
lea     ecx, [esi+18h]
call    ds:?add@?$dtarray@e@@qaehpaei@z
mov     ecx, [ebp+var_18]
mov     edx, [ebp+arg_4]
mov     eax, [edx+8]
inc     ecx
mov     [ebp+var_18], ecx
cmp     ecx, eax
jb      loc_100033b0
lea     ecx, [ebp+var_ac]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtgeom@@qae@xz
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
mov     byte ptr [ebp+var_4], 1
call    edi
lea     ecx, [ebp+var_ac]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtgeom@@qae@xz
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    offset __ti2pa_w
lea     eax, [ebp+pexceptionobject]
push    eax
mov     [ebp+pexceptionobject], offset aindexoutsideof
call    _cxxthrowexception
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_100035c0
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+24h+var_c]
mov     large fs:0, eax
mov     edi, ecx
xor     esi, esi
push    esi
push    offset abindparameter
push    offset adtsqlitedataco
lea     ecx, [esp+30h+var_15]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [esp+24h+var_4], esi
cmp     [ebx+8], esi
jz      short loc_1000366b
mov     eax, [edi+2ch]
push    eax
call    sub_10029160
add     esp, 4
call    sub_10001c50
test    eax, eax
jnz     short loc_10003648
lea     ecx, [esp+24h+var_15]
mov     [esp+24h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [esp+24h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebx+8]
cmp     esi, eax
jnb     short loc_1000366b
mov     ecx, [ebx+4]
mov     edx, [ecx+esi*4]
lea     eax, [ecx+esi*4]
mov     ecx, edi
call    sub_100036a0
test    eax, eax
jz      short loc_10003622
mov     eax, [ebx+8]
inc     esi
cmp     esi, eax
jb      short loc_1000364f
lea     ecx, [esp+24h+var_15]
mov     [esp+24h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [esp+24h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100036a0
mov     eax, large fs:0
push    eax
sub     esp, 6ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     ebx, ebx
push    ebx
push    offset abindparameter
mov     edi, ecx
push    offset adtsqlitedataco
lea     ecx, [ebp+var_51]
mov     esi, edx
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], ebx
cmp     esi, ebx
jz      short loc_1000375c
mov     eax, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_6c], eax
mov     [ebp+var_68], ebx
mov     [ebp+var_64], ebx
mov     [ebp+var_60], ebx
lea     ecx, [ebp+var_6c]
push    ecx
push    ebx
lea     ecx, [esi+4]
mov     byte ptr [ebp+var_4], 1
call    ds:?encode@dtstr@@qaehw4dtencoding@@aav?$dtarray@e@@@z
mov     ecx, [ebp+var_68]
mov     eax, ecx
cmp     ecx, ebx
jnz     short loc_1000371c
xor     eax, eax
jmp     short loc_1000372e
cmp     byte ptr [ecx], 0
jz      short loc_10003727
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10003721
sub     eax, ecx
and     eax, 3fffffffh
mov     edx, eax
mov     eax, [edi+2ch]
push    ecx
call    sub_1002b240
add     esp, 4
mov     ebx, eax
call    sub_10001c50
test    eax, eax
jz      def_1000378a
test    ebx, ebx
jg      short loc_10003776
mov     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+var_6c]
call    ds:??1?$dtarray@e@@qae@xz
lea     ecx, [ebp+var_51]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
jmp     loc_10003a80
mov     eax, [esi+14h]
dec     eax
cmp     eax, 59h
ja      def_1000378a
movzx   edx, ds:byte_10003ac4[eax]
jmp     ds:jpt_1000378a[edx*4]
push    0
add     esi, 18h
push    esi
call    ds:?toboolean@dtbitconverter@@sahaav?$dtarray@e@@i@z
add     esp, 8
cmp     al, 0ffh
jnz     short loc_100037b6
mov     eax, [edi+2ch]
push    ebx
push    eax
call    sub_1002af40
add     esp, 8
jmp     loc_10003a4c
mov     edx, [edi+2ch]
movzx   ecx, al
push    ecx
push    ebx
push    edx
call    sub_1002ae90
add     esp, 0ch
jmp     loc_10003a4c
push    0
add     esi, 18h
push    esi
call    ds:?toint16@dtbitconverter@@safaav?$dtarray@e@@i@z
movzx   eax, ax
mov     ecx, 0ffff8000h
add     esp, 8
cmp     ax, cx
jnz     short loc_100037fa
mov     edx, [edi+2ch]
push    ebx
push    edx
call    sub_1002af40
add     esp, 8
jmp     loc_10003a4c
mov     ecx, [edi+2ch]
cwde
push    eax
push    ebx
push    ecx
call    sub_1002ae90
add     esp, 0ch
jmp     loc_10003a4c
push    0
add     esi, 18h
push    esi
call    ds:?toint32@dtbitconverter@@sahaav?$dtarray@e@@i@z
add     esp, 8
cmp     eax, 80000000h
jnz     short loc_10003836
mov     edx, [edi+2ch]
push    ebx
push    edx
call    sub_1002af40
add     esp, 8
jmp     loc_10003a4c
push    eax
mov     eax, [edi+2ch]
push    ebx
push    eax
call    sub_1002ae90
add     esp, 0ch
jmp     loc_10003a4c
push    0
add     esi, 18h
push    esi
call    ds:?tofloat@dtbitconverter@@samaav?$dtarray@e@@i@z
fstp    [ebp+src]
fld     [ebp+src]
add     esp, 8
fld     st
fld     ds:dbl_1007cff8
fucompp
fnstsw  ax
test    ah, 44h
jp      short loc_10003883
mov     ecx, [edi+2ch]
fstp    st
push    ebx
push    ecx
call    sub_1002af40
add     esp, 8
jmp     loc_10003a4c
mov     edx, [edi+2ch]
sub     esp, 8
fstp    [esp+90h+var_90]
push    ebx
push    edx
call    sub_1002ae30
add     esp, 10h
jmp     loc_10003a4c
push    0
add     esi, 18h
push    esi
call    ds:?todouble@dtbitconverter@@sanaav?$dtarray@e@@i@z
fld     st
fld     ds:dbl_1007cff8
add     esp, 8
fucompp
fnstsw  ax
test    ah, 44h
jp      short loc_100038cf
mov     eax, [edi+2ch]
fstp    st
push    ebx
push    eax
call    sub_1002af40
add     esp, 8
jmp     loc_10003a4c
mov     ecx, [edi+2ch]
sub     esp, 8
fstp    [esp+90h+var_90]
push    ebx
push    ecx
call    sub_1002ae30
add     esp, 10h
jmp     loc_10003a4c
lea     eax, [esi+18h]
push    0
push    eax
call    ds:?touint32@dtbitconverter@@saiaav?$dtarray@e@@i@z
add     esp, 8
mov     [ebp+size], eax
fild    [ebp+size]
test    eax, eax
jns     short loc_10003906
fadd    ds:dbl_1007cf80
fmul    ds:dbl_1007cff0
push    0
push    2
lea     edx, [ebp+var_50]
push    edx
sub     esp, 8
fstp    [esp+9ch+var_9c]
call    ds:?dtprintdate@@yapa_wnpa_wiw4dtdateformat@@@z
add     esp, 14h
push    0
lea     eax, [ebp+var_50]
push    eax
lea     ecx, [ebp+var_78]
call    ds:??0dtstr@@qae@pa_wi@z
mov     byte ptr [ebp+var_4], 2
lea     eax, [esi+18h]
push    eax
push    1
lea     ecx, [ebp+var_78]
call    ds:?encode@dtstr@@qaehw4dtencoding@@aav?$dtarray@e@@@z
mov     eax, [esi+20h]
mov     esi, [esi+1ch]
push    1
push    0ffffffffh
push    eax
mov     eax, ebx
mov     ebx, [edi+2ch]
push    esi
call    sub_1002ad10
add     esp, 10h
lea     ecx, [ebp+var_78]
mov     byte ptr [ebp+var_4], 1
call    ds:??1dtstr@@qae@xz
jmp     loc_10003a4c
lea     eax, [esi+18h]
push    0
push    eax
call    ds:?todouble@dtbitconverter@@sanaav?$dtarray@e@@i@z
add     esp, 8
push    0
push    4
lea     ecx, [ebp+var_50]
push    ecx
sub     esp, 8
fstp    [esp+9ch+var_9c]
call    ds:?dtprintdate@@yapa_wnpa_wiw4dtdateformat@@@z
add     esp, 14h
push    0
lea     edx, [ebp+var_50]
push    edx
lea     ecx, [ebp+var_78]
call    ds:??0dtstr@@qae@pa_wi@z
mov     byte ptr [ebp+var_4], 3
jmp     short loc_10003936
mov     eax, [esi+20h]
mov     esi, [esi+1ch]
push    1
push    0ffffffffh
push    eax
mov     eax, ebx
mov     ebx, [edi+2ch]
push    esi
call    sub_1002ad10
add     esp, 10h
jmp     loc_10003a4c
mov     eax, [esi+20h]
mov     ecx, [esi+1ch]
mov     esi, [edi+2ch]
mov     [ebp+size], eax
mov     eax, ebx
mov     [ebp+src], ecx
call    sub_1002abc0
test    eax, eax
jnz     short loc_10003a4c
mov     eax, [ebp+src]
test    eax, eax
jz      short loc_10003a39
mov     ecx, [esi+44h]
lea     edx, [ebx+ebx*4]
push    0
lea     edx, [ecx+edx*8-28h]
mov     ecx, [ebp+size]
push    eax
or      eax, 0ffffffffh
call    sub_10024e60
push    0
mov     [ebp+size], eax
push    eax
mov     eax, [esi]
call    sub_1000ba40
mov     ebx, [esi]
add     esp, 10h
test    ebx, ebx
jz      short loc_10003a39
cmp     byte ptr [ebx+32h], 0
jnz     short loc_10003a27
cmp     [ebp+size], 0c0ah
jnz     short loc_10003a39
push    0
push    7
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
mov     byte ptr [ebx+32h], 0
mov     edx, [esi]
mov     eax, [edx+0ch]
test    eax, eax
jz      short loc_10003a4c
push    eax
call    dword_10080284
add     esp, 4
call    sub_10001c50
mov     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+var_6c]
test    eax, eax
jz      short loc_10003a68
jmp     loc_10003756
lea     ecx, [ebp+var_6c]
mov     byte ptr [ebp+var_4], 0
call    ds:??1?$dtarray@e@@qae@xz
lea     ecx, [ebp+var_51]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003b20
mov     eax, large fs:0
push    eax
sub     esp, 48h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     ebx, ebx
push    ebx
push    offset apreparetable
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     esi, [ebp+arg_4]
push    1
mov     ecx, esi
mov     [ebp+var_4], ebx
call    ds:?eraserecords@dttable@@qaexh@z
mov     ecx, esi
call    ds:?erasefields@dttable@@qaexxz
mov     edi, [ebp+arg_0]
mov     [esi+50h], ebx
mov     eax, [edi+2ch]
cmp     eax, ebx
jz      short loc_10003b8c
movzx   eax, word ptr [eax+2ch]
mov     [ebp+var_24], eax
jmp     short loc_10003b8f
mov     [ebp+var_24], ebx
call    sub_10001c50
test    eax, eax
jz      loc_10003f5d
mov     esi, ds:??0dtstr@@qae@xz
lea     ecx, [ebp+var_44]
call    esi
lea     ecx, [ebp+var_50]
mov     byte ptr [ebp+var_4], 1
call    esi
xor     ecx, ecx
mov     byte ptr [ebp+var_4], 2
mov     [ebp+var_14], ecx
cmp     [ebp+var_24], ebx
jle     loc_10003f04
mov     [ebp+var_20], ebx
jmp     short loc_10003bcd
mov     ecx, [ebp+var_14]
mov     edi, [ebp+arg_0]
mov     ebx, [edi+2ch]
movzx   eax, word ptr [ebx+2ch]
mov     esi, [ebx]
xor     edi, edi
cmp     ecx, eax
jge     short loc_10003c1d
test    ecx, ecx
js      short loc_10003c1d
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10003bf1
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [ebx+10h]
add     edi, [ebp+var_20]
mov     bl, 1
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_10003c0c
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10003c1d
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
test    edi, edi
jz      short loc_10003c2b
cmp     byte ptr [eax], 0
jz      short loc_10003c2b
inc     eax
jmp     short loc_10003c23
sub     eax, edi
lea     ecx, [ebp+var_44]
mov     esi, eax
call    ds:?null@dtstr@@qaexxz
test    esi, esi
jz      short loc_10003c70
mov     ebx, ds:?decode@dtstr@@sahw4dtencoding@@aav1@paehh@z
push    esi
push    0
push    edi
lea     ecx, [ebp+var_44]
push    ecx
push    1
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_10003c70
push    esi
push    eax
push    edi
lea     edx, [ebp+var_44]
push    edx
push    eax
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_10003c70
push    edi
lea     ecx, [ebp+var_44]
call    ds:??4dtstr@@qaeaav0@pa_w@z
mov     edi, [ebp+arg_0]
call    sub_10001c50
test    eax, eax
jz      loc_10003f45
mov     ebx, [edi+2ch]
movzx   eax, word ptr [ebx+2ch]
mov     ecx, [ebp+var_14]
mov     esi, [ebx]
xor     edi, edi
cmp     ecx, eax
jge     short loc_10003cdb
test    ecx, ecx
js      short loc_10003cdb
lea     edi, [ecx+eax*2]
add     edi, eax
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10003cac
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 1
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_10003cca
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10003cdb
push    esi
call    dword_10080284
add     esp, 4
mov     esi, [ebp+arg_4]
add     esi, 20h
mov     eax, edi
test    edi, edi
jz      short loc_10003cef
cmp     byte ptr [eax], 0
jz      short loc_10003cef
inc     eax
jmp     short loc_10003ce7
sub     eax, edi
mov     ecx, esi
mov     ebx, eax
call    ds:?null@dtstr@@qaexxz
test    ebx, ebx
jz      short loc_10003d2e
push    ebx
push    0
push    edi
push    esi
push    1
call    ds:?decode@dtstr@@sahw4dtencoding@@aav1@paehh@z
add     esp, 14h
test    eax, eax
jnz     short loc_10003d2e
push    ebx
push    eax
push    edi
push    esi
push    eax
call    ds:?decode@dtstr@@sahw4dtencoding@@aav1@paehh@z
add     esp, 14h
test    eax, eax
jnz     short loc_10003d2e
push    edi
mov     ecx, esi
call    ds:??4dtstr@@qaeaav0@pa_w@z
mov     edi, [ebp+arg_0]
call    sub_10001c50
test    eax, eax
jz      loc_10003f45
cmp     dword ptr [esi], 0
jz      loc_10003ebb
mov     eax, [edi+24h]
mov     ebx, [eax]
mov     esi, [ebp+var_14]
lea     edx, [ebp+var_30]
push    edx
lea     eax, [ebp+var_34]
push    eax
lea     ecx, [ebp+var_28]
push    ecx
mov     ecx, [edi+2ch]
lea     edx, [ebp+var_1c]
push    edx
lea     eax, [ebp+var_2c]
push    eax
push    esi
push    ecx
call    sub_1002aae0
mov     edx, [edi+2ch]
add     esp, 8
push    eax
push    esi
push    edx
call    sub_1002aa00
add     esp, 8
push    eax
mov     eax, [edi+2ch]
push    esi
push    eax
call    sub_1002a920
add     esp, 8
push    eax
push    ebx
call    sub_10071ca0
add     esp, 24h
call    sub_10001c50
lea     ecx, [ebp+var_50]
test    eax, eax
jz      loc_10003f48
mov     edi, [ebp+var_2c]
push    ecx
or      eax, 0ffffffffh
call    sub_10002040
mov     esi, [ebp+var_50]
xor     eax, eax
lea     ebx, [ebp+var_18]
lea     ecx, [ebp+var_1c]
mov     [ebp+var_1c], eax
mov     [ebp+var_18], eax
call    sub_10003f90
mov     edx, [ebp+arg_8]
push    0
mov     edi, eax
mov     eax, [ebp+var_44]
push    edx
push    eax
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jnz     short loc_10003e43
push    6ch
call    ds:??2@yapaxi@z
mov     esi, eax
add     esp, 4
mov     [ebp+var_38], esi
mov     byte ptr [ebp+var_4], 3
test    esi, esi
jz      short loc_10003e17
mov     ebx, ds:??0dtstr@@qae@xz
mov     ecx, esi
call    ebx
lea     ecx, [esi+0ch]
mov     byte ptr [ebp+var_4], 4
call    ebx
lea     ecx, [esi+28h]
mov     byte ptr [ebp+var_4], 5
call    ebx
jmp     short loc_10003e19
xor     esi, esi
mov     ecx, [ebp+arg_4]
mov     byte ptr [ebp+var_4], 2
mov     edx, [ebp+var_44]
mov     [ecx+160h], esi
push    edx
mov     ecx, esi
call    ds:??4dtstr@@qaeaav0@pa_w@z
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+var_18]
mov     [esi+18h], edi
mov     [esi+34h], eax
mov     [esi+38h], ecx
jmp     short loc_10003e5d
mov     edx, [ebp+var_18]
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+var_44]
push    0
push    edx
push    eax
push    edi
push    ecx
mov     ecx, [ebp+arg_4]
call    ds:?addfield@dttable@@qaepaudtfield@@pa_ww4dtfieldtype@@iiw4dtfielddef@@@z
mov     esi, eax
mov     edx, [ebp+var_28]
mov     edi, [ebp+var_30]
mov     ebx, [ebp+var_34]
mov     ecx, [ebp+arg_8]
mov     [esi+60h], edx
mov     [esi+64h], edi
mov     [esi+68h], ebx
mov     eax, [ebp+var_44]
push    0
push    eax
push    ecx
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jnz     short loc_10003e8d
mov     dword ptr [esi+40h], 1
test    edi, edi
jz      short loc_10003e98
mov     dword ptr [esi+3ch], 2
test    ebx, ebx
jz      short loc_10003eac
xor     edx, edx
test    edi, edi
setz    dl
lea     edx, [edx+edx+1]
mov     [esi+40h], edx
jmp     short loc_10003ef0
cmp     [ebp+var_28], 0
jz      short loc_10003ef0
mov     dword ptr [esi+40h], 2
jmp     short loc_10003ef0
mov     eax, [ebp+var_14]
mov     ecx, [edi+2ch]
push    eax
push    ecx
call    sub_1002a6e0
add     esp, 8
mov     esi, eax
call    sub_10001c50
test    eax, eax
jz      short loc_10003f45
push    0
push    0
push    0
push    esi
call    sub_10004490
mov     edx, [ebp+var_44]
mov     ecx, [ebp+arg_4]
push    eax
push    edx
call    ds:?addfield@dttable@@qaepaudtfield@@pa_ww4dtfieldtype@@iiw4dtfielddef@@@z
mov     eax, [ebp+var_14]
add     [ebp+var_20], 28h
inc     eax
mov     [ebp+var_14], eax
cmp     eax, [ebp+var_24]
jl      loc_10003bc7
mov     byte ptr [ebp+var_4], 1
mov     esi, ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_50]
call    esi
lea     ecx, [ebp+var_44]
mov     byte ptr [ebp+var_4], 0
call    esi
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
lea     ecx, [ebp+var_50]
mov     byte ptr [ebp+var_4], 1
mov     esi, ds:??1dtstr@@qae@xz
call    esi
lea     ecx, [ebp+var_44]
mov     byte ptr [ebp+var_4], 0
call    esi
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003f90
mov     eax, large fs:0
push    eax
sub     esp, 18h
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
push    1
push    offset agettype
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
push    0
push    0
push    offset asc_100748b0
push    esi
mov     [ebp+var_4], 0
call    ds:?dtstrfind@@yapa_wpb_w0h@z
add     esp, 0ch
push    eax
lea     ecx, [ebp+var_24]
call    ds:??0dtstr@@qae@pa_wi@z
mov     byte ptr [ebp+var_4], 1
mov     eax, [ebp+var_20]
mov     dword ptr [ebx], 0
mov     dword ptr [edi], 0
test    eax, eax
jz      loc_10004099
dec     eax
push    eax
lea     ecx, [ebp+var_24]
call    ds:?left@dtstr@@qaehi@z
mov     eax, [ebp+var_20]
dec     eax
push    eax
lea     ecx, [ebp+var_24]
call    ds:?right@dtstr@@qaehi@z
lea     ecx, [ebp+var_24]
call    ds:?tonum@dtstr@@qaenxz
fnstcw  [ebp+var_10]
movzx   eax, [ebp+var_10]
or      eax, 0c00h
mov     dword ptr [ebp+var_18+4], eax
push    0
push    offset asc_100748b4
fldcw   word ptr [ebp+var_18+4]
fistp   [ebp+var_18]
mov     ecx, dword ptr [ebp+var_18]
mov     [edi], ecx
lea     ecx, [ebp+var_24]
fldcw   [ebp+var_10]
call    ds:?find@dtstr@@qaehpa_wi@z
xor     edx, edx
test    eax, eax
setns   dl
mov     eax, edx
test    eax, eax
jz      short loc_10004099
inc     eax
push    eax
lea     ecx, [ebp+var_24]
call    ds:?mid@dtstr@@qaehi@z
lea     ecx, [ebp+var_24]
call    ds:?tonum@dtstr@@qaenxz
fnstcw  [ebp+var_10]
movzx   eax, [ebp+var_10]
or      eax, 0c00h
mov     dword ptr [ebp+var_18+4], eax
fldcw   word ptr [ebp+var_18+4]
fistp   [ebp+var_18]
mov     eax, dword ptr [ebp+var_18]
mov     [ebx], eax
fldcw   [ebp+var_10]
mov     edi, ds:?dtstrbegin@@yahpa_w0@z
push    offset atext
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_100040e0
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 3ch
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset ablob
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_10004121
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 5ah
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset afloat
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_10004162
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1fh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset aint
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_100041a3
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 0ch
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset anull
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_10004461
push    offset aftbool
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_100041f7
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset aftbyte
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_10004238
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 0ah
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset aftshort
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_10004279
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 0bh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset aftint
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_10004171
push    offset aftfloat
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_100042cd
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1eh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset aftdouble
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_10004130
push    offset aftdate
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_10004321
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 28h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset afttime
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_10004362
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 29h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset aftstr
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_100040ae
push    offset aftdoc
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_100043b6
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 3dh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset aftbin
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_100040ef
push    offset aftnone
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_10004461
push    offset anvarchar
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_100040ae
push    offset avarchar
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_100040ae
push    offset achar
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_100040ae
push    offset adatetime
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_100040ae
push    offset areal
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_10004130
push    offset anumeric
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_10004130
push    offset abool
push    esi
call    edi
add     esp, 8
test    eax, eax
jnz     loc_100041c5
lea     ecx, [ebp+var_24]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004490
mov     eax, large fs:0
push    eax
push    ecx
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    1
push    offset agettype
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     eax, [ebp+arg_0]
dec     eax
cmp     eax, 3
ja      def_100044d5
jmp     ds:jpt_100044d5[eax*4]
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 0ch
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    4
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1fh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    4
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 3ch
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    4
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 5ah
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    4
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100045b0
mov     eax, large fs:0
push    eax
push    ecx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    1
push    offset agettypestr
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     eax, [ebp+arg_0]
dec     eax
cmp     eax, 59h
ja      def_100045fd
movzx   eax, ds:byte_10004818[eax]
jmp     ds:jpt_100045fd[eax*4]
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftbool
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftbyte
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftshort
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
cmp     [ebp+arg_4], 0
mov     esi, offset ainteger
jnz     short loc_10004689
mov     esi, offset aftint
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftfloat
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftdouble
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftdate
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset afttime
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftstr
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftdoc
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftbin
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, offset aftnone
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004880
mov     eax, large fs:0
push    eax
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ebp+arg_0]
push    1
push    offset agetquery
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
mov     [ebp+var_14], 0
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     esi, [ebp+arg_4]
add     esi, 1ch
mov     ecx, esi
mov     [ebp+var_4], 1
call    ds:?trimspacesfrombegin@dtstr@@qaeixz
mov     ebx, ds:??0dtstr@@qae@abv0@i@z
push    0
push    esi
lea     ecx, [ebp+var_20]
call    ebx
lea     ecx, [ebp+var_20]
mov     byte ptr [ebp+var_4], 2
call    ds:?lower@dtstr@@qaehxz
push    offset aselect
lea     ecx, [ebp+var_20]
call    ds:?begin@dtstr@@qaehpa_w@z
test    eax, eax
jz      short loc_10004912
push    0
push    esi
mov     ecx, edi
call    ebx
jmp     short loc_10004943
mov     ecx, [esi]
mov     edx, [esi+4]
sub     esp, 0ch
mov     eax, esp
mov     [eax], ecx
mov     ecx, [esi+8]
mov     [eax+4], edx
lea     edx, [ebp+var_20]
push    offset aselectfroms
push    edx
mov     [eax+8], ecx
call    ds:?print@dtstr@@qaahpa_wzz
add     esp, 14h
push    0
lea     eax, [ebp+var_20]
push    eax
mov     ecx, edi
call    ebx
lea     ecx, [ebp+var_20]
mov     [ebp+var_14], 1
mov     byte ptr [ebp+var_4], 1
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtloghelper@@qae@xz
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004980
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    1
push    offset agettablename
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     esi, [ebp+arg_0]
add     esi, 1ch
mov     ecx, esi
mov     [ebp+var_4], 0
call    ds:?trimspacesfrombegin@dtstr@@qaeixz
push    0
push    esi
lea     ecx, [ebp+var_1c]
call    ds:??0dtstr@@qae@abv0@i@z
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], 1
call    ds:?lower@dtstr@@qaehxz
push    offset aselect
lea     ecx, [ebp+var_1c]
call    ds:?begin@dtstr@@qaehpa_w@z
test    eax, eax
jz      short loc_10004a02
mov     esi, offset dword_10074408
jmp     short loc_10004a04
mov     esi, [esi]
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004a40
mov     eax, large fs:0
push    eax
sub     esp, 48h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    1
push    offset aexecutequery
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
lea     ecx, [ebp+var_54]
mov     [ebp+var_4], 0
call    ds:??0dtdatasource@@qae@xz
mov     byte ptr [ebp+var_4], 1
mov     edi, [esi+18h]
mov     eax, [edi]
mov     ebx, ds:??4dtstr@@qaeaav0@aav0@@z
lea     ecx, [edi+4]
push    ecx
lea     ecx, [ebp+var_50]
mov     [ebp+var_54], eax
call    ebx
add     edi, 10h
push    edi
lea     ecx, [ebp+var_44]
call    ebx
mov     edx, [ebp+arg_0]
push    edx
lea     ecx, [ebp+var_38]
call    ds:??4dtstr@@qaeaav0@pa_w@z
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
mov     eax, [esi]
push    ecx
push    edx
mov     edx, [eax+14h]
lea     ecx, [ebp+var_54]
push    ecx
mov     ecx, esi
call    edx
lea     ecx, [ebp+var_54]
mov     esi, eax
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtdatasource@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
push    0ffffffffh
push    offset seh_10004b10
mov     eax, large fs:0
push    eax
sub     esp, 128h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+144h+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [esp+144h+var_114], esi
xor     ebx, ebx
push    ebx
push    offset aexecutequery
push    offset adtsqlitedataco
lea     ecx, [esp+150h+var_115]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [esp+144h+var_4], ebx
mov     eax, [esi]
mov     edx, [eax+8]
mov     ecx, esi
call    edx
test    eax, eax
jz      short loc_10004bcc
mov     eax, [ebp+arg_0]
push    eax
lea     ecx, [esp+148h+var_c4]
push    ecx
call    sub_10004880
push    ebx
push    eax
lea     ecx, [esp+14ch+var_f4]
mov     byte ptr [esp+14ch+var_4], 1
call    ds:??0dtstr@@qae@abv0@i@z
mov     byte ptr [esp+144h+var_4], 3
mov     edi, ds:??1dtstr@@qae@xz
lea     ecx, [esp+144h+var_c4]
call    edi
mov     edx, [esp+144h+var_f4]
push    edx
mov     ecx, esi
call    sub_10001e70
test    eax, eax
jnz     short loc_10004bfb
mov     byte ptr [esp+144h+var_4], bl
lea     ecx, [esp+144h+var_f4]
call    edi
lea     ecx, [esp+144h+var_115]
mov     [esp+144h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, dword ptr [esp+144h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     ebx, [ebp+arg_8]
mov     ecx, esi
call    sub_100035c0
test    eax, eax
jnz     short loc_10004c12
mov     byte ptr [esp+144h+var_4], al
jmp     short loc_10004bc6
mov     eax, [esi+2ch]
push    eax
call    sub_10029be0
mov     ebx, eax
add     esp, 4
mov     edi, esi
mov     [esp+144h+var_10c], ebx
call    sub_10001c50
test    eax, eax
jnz     short loc_10004c43
lea     ecx, [esp+144h+var_f4]
mov     byte ptr [esp+144h+var_4], 0
call    ds:??1dtstr@@qae@xz
jmp     short loc_10004bcc
mov     edi, [esp+144h+var_10c]
cmp     ebx, 64h
mov     ebx, [ebp+arg_4]
mov     [esp+144h+var_e8], 0ffffffffh
jz      short loc_10004c5c
cmp     edi, 65h
jnz     short loc_10004c6e
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+38h]
push    eax
push    ebx
push    esi
call    sub_10003b20
test    eax, eax
jz      short loc_10004c2f
mov     edx, [ebp+arg_0]
cmp     dword ptr [edx+38h], 0
jz      loc_10004d69
cmp     edi, 64h
jnz     loc_10004d69
mov     eax, [esi+2ch]
test    eax, eax
jz      short loc_10004c95
movzx   eax, word ptr [eax+2ch]
mov     [esp+144h+var_108], eax
jmp     short loc_10004c9d
mov     [esp+144h+var_108], 0
mov     edi, esi
call    sub_10001c50
test    eax, eax
jz      short loc_10004c2f
lea     ecx, [esp+144h+var_d0]
call    ds:??0dtstr@@qae@xz
cmp     [esp+144h+var_108], 0
mov     byte ptr [esp+144h+var_4], 4
mov     [esp+144h+var_110], 0
jle     loc_10004d53
mov     edx, [esp+144h+var_110]
mov     eax, [esi+2ch]
lea     ecx, [esp+144h+var_d0]
push    ecx
push    edx
push    eax
call    sub_1002a760
mov     edi, eax
add     esp, 8
or      eax, 0ffffffffh
call    sub_10002040
mov     edi, esi
call    sub_10001c50
test    eax, eax
jz      short loc_10004d24
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+38h]
mov     eax, dword ptr [esp+144h+var_d0]
push    0
push    edx
push    eax
call    ds:?dtstrcomp@@yahpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_10004d4b
mov     eax, [esp+144h+var_110]
inc     eax
mov     [esp+144h+var_110], eax
cmp     eax, [esp+144h+var_108]
jl      short loc_10004ccd
jmp     short loc_10004d53
lea     ecx, [esp+144h+var_d0]
mov     byte ptr [esp+144h+var_4], 3
mov     esi, ds:??1dtstr@@qae@xz
call    esi
lea     ecx, [esp+144h+var_f4]
mov     byte ptr [esp+144h+var_4], 0
call    esi
jmp     loc_10004bcc
mov     ecx, [esp+144h+var_110]
mov     [esp+144h+var_e8], ecx
lea     ecx, [esp+144h+var_d0]
mov     byte ptr [esp+144h+var_4], 3
call    ds:??1dtstr@@qae@xz
mov     edi, [esp+144h+var_10c]
mov     eax, [esi+2ch]
test    eax, eax
jz      short loc_10004d7a
movzx   edx, word ptr [eax+2ch]
mov     [esp+144h+var_110], edx
jmp     short loc_10004d82
mov     [esp+144h+var_110], 0
lea     ecx, [esp+144h+buffer]
call    ds:??0dtstr@@qae@xz
lea     ecx, [esp+144h+var_b8]
mov     byte ptr [esp+144h+var_4], 5
call    ds:??0dtgeom@@qae@xz
mov     byte ptr [esp+144h+var_4], 6
cmp     edi, 64h
jnz     loc_10005174
push    0
mov     ecx, ebx
call    ds:?addrecord@dttable@@qaehh@z
mov     edi, esi
call    sub_10001c50
test    eax, eax
jz      loc_10005114
xor     esi, esi
cmp     [esp+144h+var_110], esi
jle     loc_10005151
cmp     esi, [esp+144h+var_e8]
jnz     short loc_10004de8
mov     eax, [ebx+160h]
mov     eax, [eax+18h]
jmp     short loc_10004df1
push    esi
mov     ecx, ebx
call    ds:?getfieldtype@dttable@@qae?aw4dtfieldtype@@i@z
dec     eax
cmp     eax, 59h
ja      def_10004e02
movzx   ecx, ds:byte_10005234[eax]
jmp     ds:jpt_10004e02[ecx*4]
mov     edi, [esp+144h+var_114]
mov     edx, [edi+2ch]
push    esi
push    edx
call    sub_1002a440
add     esp, 8
mov     [esp+144h+var_108], eax
call    sub_10001c50
test    eax, eax
jz      loc_10005114
fild    [esp+144h+var_108]
mov     eax, [ebx+18h]
push    0
sub     esp, 8
fstp    [esp+150h+var_150]
push    esi
push    eax
mov     ecx, ebx
call    ds:?setnum@dttable@@qaehiinh@z
jmp     loc_10005146
mov     edi, [esp+144h+var_114]
mov     eax, [edi+2ch]
push    esi
push    eax
call    sub_1002a380
fstp    qword ptr [esp+14ch+var_108]
add     esp, 8
call    sub_10001c50
test    eax, eax
jz      loc_10005114
fld     qword ptr [esp+144h+var_108]
mov     eax, [ebx+18h]
push    0
sub     esp, 8
fstp    [esp+150h+var_150]
push    esi
push    eax
mov     ecx, ebx
call    ds:?setnum@dttable@@qaehiinh@z
jmp     loc_10005146
mov     edi, [esp+144h+var_114]
mov     ecx, [edi+2ch]
push    esi
push    ecx
call    sub_1002a240
add     esp, 8
lea     edx, [esp+144h+buffer]
push    edx
push    ecx
mov     ecx, [edi+2ch]
push    esi
push    ecx
mov     [esp+154h+var_108], eax
call    sub_1002a550
mov     edi, eax
mov     eax, [esp+154h+var_108]
add     esp, 0ch
call    sub_10002040
mov     edi, [esp+144h+var_114]
call    sub_10001c50
test    eax, eax
jz      loc_10005114
mov     edi, ds:swscanf
lea     edx, [esp+144h+var_dc]
push    edx
mov     edx, [esp+148h+buffer]
lea     eax, [esp+148h+var_d4]
push    eax
lea     ecx, [esp+14ch+var_d8]
push    ecx
push    offset format
push    edx
call    edi
mov     eax, [esp+158h+buffer]
add     esp, 14h
push    0
push    offset asc_10074ac0
push    eax
call    ds:?dtstrfind@@yapa_wpb_w0h@z
add     esp, 0ch
test    eax, eax
jz      short loc_10004f25
mov     eax, [esp+144h+buffer]
lea     ecx, [esp+144h+var_e0]
push    ecx
lea     edx, [esp+148h+var_e4]
push    edx
push    offset auu
push    eax
call    edi
add     esp, 10h
jmp     short loc_10004f2f
xor     eax, eax
mov     dword ptr [esp+144h+var_e0], eax
mov     [esp+144h+var_e4], eax
fldz
mov     ecx, dword ptr [esp+144h+var_e0]
mov     edx, [esp+144h+var_e4]
mov     eax, [esp+144h+var_dc]
sub     esp, 8
fstp    [esp+14ch+var_150+4]
push    ecx
mov     ecx, dword ptr [esp+150h+var_d4]
push    edx
mov     edx, dword ptr [esp+154h+var_d8]
push    eax
push    ecx
push    edx
call    ds:?dtgetdate@@yaniiiiin@z
add     esp, 1ch
jmp     loc_10004e2f
mov     edi, [esp+144h+var_114]
mov     eax, [edi+2ch]
push    esi
push    eax
call    sub_1002a240
mov     edx, [edi+2ch]
add     esp, 8
lea     ecx, [esp+144h+buffer]
push    ecx
push    ecx
push    esi
push    edx
mov     [esp+154h+var_108], eax
call    sub_1002a550
mov     edi, eax
mov     eax, [esp+154h+var_108]
add     esp, 0ch
call    sub_10002040
cmp     esi, [esp+144h+var_e8]
jz      short loc_10004fa3
mov     ecx, [esp+144h+buffer]
push    0
push    ecx
jmp     loc_10005139
mov     eax, [esp+144h+var_fc]
test    eax, eax
jz      short loc_10004fd2
mov     edx, [esp+144h+buffer]
push    eax
push    edx
lea     eax, [esp+14ch+var_b8]
push    eax
call    ds:?converttodtgeom@dtgeomwktconverter@@sahaavdtgeom@@pa_wi@z
add     esp, 0ch
test    eax, eax
jz      short loc_10004fd2
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx+34h], 2
jmp     short loc_10004fdf
lea     ecx, [esp+144h+var_b8]
call    ds:?erase@dtgeom@@qaexxz
mov     eax, [ebx+18h]
push    1
lea     edx, [esp+148h+var_b8]
push    edx
push    eax
mov     ecx, ebx
call    ds:?setgeom@dttable@@qaehiaavdtgeom@@h@z
jmp     loc_10005146
mov     edi, [esp+144h+var_114]
mov     eax, [edi+2ch]
push    esi
push    eax
call    sub_1002a190
add     esp, 8
mov     [esp+144h+var_108], eax
call    sub_10001c50
test    eax, eax
jz      loc_10005114
mov     ecx, [edi+2ch]
push    esi
push    ecx
call    sub_1002a240
add     esp, 8
mov     [esp+144h+var_10c], eax
call    sub_10001c50
test    eax, eax
jz      loc_10005114
cmp     esi, [esp+144h+var_e8]
jz      short loc_1000505c
mov     edx, [esp+144h+var_10c]
mov     ecx, [esp+144h+var_108]
mov     eax, [ebx+18h]
push    edx
push    ecx
push    esi
push    eax
mov     ecx, ebx
call    ds:?setbin@dttable@@qaehiipaei@z
jmp     loc_10005146
mov     edi, [esp+144h+var_10c]
test    edi, edi
jz      loc_100050ed
mov     edx, [esp+144h+var_108]
push    edi
push    edx
lea     eax, [esp+14ch+var_b8]
push    eax
call    ds:?converttodtgeom@dtgeomwkbconverter@@sahaavdtgeom@@paei@z
add     esp, 0ch
test    eax, eax
jz      short loc_1000508f
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx+34h], 1
jmp     short loc_100050fa
lea     edx, [esp+144h+var_b8]
push    edx
push    edi
mov     edi, [esp+14ch+var_108]
push    edi
call    ds:?bytestogeom@dtdbhelper@@sahpaeiaavdtgeom@@@z
add     esp, 0ch
test    eax, eax
jz      short loc_100050b6
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+34h], 0
jmp     short loc_100050fa
fld     qword ptr [ebx+48h]
sub     esp, 18h
fld     qword ptr [ebx+40h]
lea     ecx, [esp+15ch+var_b8]
fxch    st(1)
fstp    [esp+15ch+var_150+4]
fstp    qword ptr [esp+8]
fld     qword ptr [ebx+38h]
fstp    [esp+15ch+var_15c]
push    edi
call    ds:?decode@dtgeom@@qaehpaennn@z
test    eax, eax
jz      short loc_100050ed
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx+34h], 0
jmp     short loc_100050fa
lea     ecx, [esp+144h+var_b8]
call    ds:?erase@dtgeom@@qaexxz
mov     eax, [ebx+18h]
push    1
lea     edx, [esp+148h+var_b8]
push    edx
push    eax
mov     ecx, ebx
call    ds:?setgeom@dttable@@qaehiaavdtgeom@@h@z
test    eax, eax
jnz     short loc_10005146
lea     ecx, [esp+144h+var_b8]
mov     byte ptr [esp+144h+var_4], 5
call    ds:??1dtgeom@@qae@xz
lea     ecx, [esp+144h+buffer]
jmp     loc_10004d28
push    0
push    offset dword_10074408
mov     eax, [ebx+18h]
push    esi
push    eax
mov     ecx, ebx
call    ds:?setstr@dttable@@qaehiipa_wh@z
inc     esi
cmp     esi, [esp+144h+var_110]
jl      loc_10004dd7
mov     eax, [esp+144h+var_114]
mov     ecx, [eax+2ch]
push    ecx
call    sub_10029be0
mov     esi, [esp+148h+var_114]
add     esp, 4
mov     [esp+144h+var_10c], eax
cmp     eax, 64h
jz      loc_10004db2
mov     edi, eax
cmp     edi, 65h
jz      short loc_10005188
test    edi, edi
jz      short loc_10005188
mov     edi, esi
call    sub_10001c50
test    eax, eax
jz      short loc_10005114
mov     ecx, esi
call    sub_100020b0
xor     esi, esi
push    esi
mov     ecx, ebx
mov     [ebx+2ch], esi
call    ds:?setrecordstate@dttable@@qaexi@z
mov     edx, [ebp+arg_0]
push    edx
mov     [ebx+50h], esi
call    sub_10004980
push    eax
lea     ecx, [ebx+20h]
call    ds:??4dtstr@@qaeaav0@pa_w@z
lea     ecx, [esp+144h+var_b8]
mov     byte ptr [esp+144h+var_4], 5
call    ds:??1dtgeom@@qae@xz
mov     byte ptr [esp+144h+var_4], 3
mov     esi, ds:??1dtstr@@qae@xz
lea     ecx, [esp+144h+buffer]
call    esi
lea     ecx, [esp+144h+var_f4]
mov     byte ptr [esp+144h+var_4], 0
call    esi
lea     ecx, [esp+144h+var_115]
mov     [esp+144h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, dword ptr [esp+144h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10005290
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
push    0
push    offset aexecutenonquer
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], 0
mov     eax, [edi]
mov     edx, [eax+8]
mov     ecx, edi
call    edx
test    eax, eax
jnz     short loc_10005305
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ebp+arg_0]
push    eax
mov     ecx, edi
call    sub_10001e70
test    eax, eax
jz      short loc_100052e0
mov     ebx, [ebp+arg_4]
mov     ecx, edi
call    sub_100035c0
test    eax, eax
jz      short loc_100052e0
mov     ecx, [edi+2ch]
push    ecx
call    sub_10029be0
add     esp, 4
call    sub_10001c50
test    eax, eax
jz      short loc_100052e0
mov     ecx, edi
call    sub_100020b0
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
push    0ffffffffh
push    offset seh_10005370
mov     eax, large fs:0
push    eax
sub     esp, 68h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+84h+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    0
push    offset aexecutescalar
push    offset adtsqlitedataco
lea     ecx, [esp+90h+var_51]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     ecx, [ebp+arg_4]
mov     [esp+84h+var_4], 0
mov     eax, [ecx]
mov     edx, [eax]
call    edx
mov     eax, [esi]
mov     edx, [eax+8]
mov     ecx, esi
call    edx
test    eax, eax
jz      loc_10005558
mov     eax, [ebp+arg_0]
push    eax
mov     ecx, esi
call    sub_10001e70
test    eax, eax
jz      loc_10005558
mov     ebx, [ebp+arg_8]
mov     ecx, esi
call    sub_100035c0
test    eax, eax
jz      loc_10005558
mov     ecx, [esi+2ch]
push    ecx
call    sub_10029be0
add     esp, 4
mov     edi, esi
mov     ebx, eax
call    sub_10001c50
test    eax, eax
jz      loc_10005558
cmp     ebx, 65h
jnz     short loc_1000542e
mov     ecx, [ebp+arg_4]
mov     edx, [ecx]
mov     eax, [edx]
call    eax
jmp     loc_100055fe
mov     eax, [esi+2ch]
test    eax, eax
jz      short loc_1000543b
movzx   ebx, word ptr [eax+2ch]
jmp     short loc_1000543d
xor     ebx, ebx
mov     edi, esi
call    sub_10001c50
test    eax, eax
jz      loc_10005558
test    ebx, ebx
jz      loc_10005558
mov     ecx, [esi+2ch]
push    0
push    ecx
call    sub_1002a6e0
add     esp, 8
mov     ebx, eax
call    sub_10001c50
test    eax, eax
jz      loc_10005558
mov     edx, [ebp+arg_4]
lea     eax, [ebx-1]
mov     dword ptr [edx+8], 0
cmp     eax, 3
ja      def_10005487
jmp     ds:jpt_10005487[eax*4]
mov     eax, [esi+2ch]
push    0
push    eax
call    sub_1002a440
add     esp, 8
mov     edi, esi
mov     ebx, eax
call    sub_10001c50
test    eax, eax
jz      loc_10005558
mov     ecx, [ebp+arg_4]
push    0
push    ecx
push    ebx
call    ds:?tobytes@dtbitconverter@@sahhaav?$dtarray@e@@i@z
add     esp, 0ch
jmp     def_10005487
mov     edx, [esi+2ch]
push    0
push    edx
call    sub_1002a380
fstp    [esp+8ch+var_50]
add     esp, 8
mov     edi, esi
call    sub_10001c50
test    eax, eax
jz      short loc_10005558
mov     eax, [ebp+arg_4]
fld     [esp+84h+var_50]
push    0
push    eax
sub     esp, 8
fstp    [esp+94h+var_94]
call    ds:?tobytes@dtbitconverter@@sahnaav?$dtarray@e@@i@z
add     esp, 10h
jmp     def_10005487
lea     ecx, [esp+84h+var_50]
call    ds:??0dtstr@@qae@xz
mov     byte ptr [esp+84h+var_4], 1
mov     ecx, [esi+2ch]
push    0
push    ecx
call    sub_1002a240
add     esp, 8
lea     edx, [esp+84h+var_50]
push    edx
push    ecx
mov     ebx, eax
mov     eax, [esi+2ch]
push    0
push    eax
call    sub_1002a550
mov     edi, eax
add     esp, 0ch
mov     eax, ebx
call    sub_10002040
mov     edi, esi
call    sub_10001c50
test    eax, eax
jnz     short loc_10005584
lea     ecx, [esp+84h+var_50]
mov     byte ptr [esp+84h+var_4], al
call    ds:??1dtstr@@qae@xz
lea     ecx, [esp+84h+var_51]
mov     [esp+84h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, dword ptr [esp+84h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     ecx, dword ptr [esp+84h+var_50+4]
mov     eax, dword ptr [esp+84h+var_50]
lea     edx, [ecx+ecx]
mov     ecx, [ebp+arg_4]
push    edx
push    eax
call    ds:?add@?$dtarray@e@@qaehpaei@z
lea     ecx, [esp+84h+var_50]
mov     byte ptr [esp+84h+var_4], 0
call    ds:??1dtstr@@qae@xz
jmp     short def_10005487
mov     ecx, [esi+2ch]
push    0
push    ecx
call    sub_1002a190
add     esp, 8
mov     edi, esi
mov     dword ptr [esp+84h+var_50], eax
call    sub_10001c50
test    eax, eax
jz      short loc_10005558
mov     edx, [esi+2ch]
push    0
push    edx
call    sub_1002a240
add     esp, 8
mov     ebx, eax
call    sub_10001c50
test    eax, eax
jz      loc_10005558
mov     eax, dword ptr [esp+84h+var_50]
mov     ecx, [ebp+arg_4]
push    ebx
push    eax
call    ds:?add@?$dtarray@e@@qaehpaei@z
mov     ecx, esi
call    sub_100020b0
lea     ecx, [esp+84h+var_51]
mov     [esp+84h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, dword ptr [esp+84h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10005640
mov     eax, large fs:0
push    eax
sub     esp, 34h
push    ebx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    1
push    offset aexisttableindb
push    offset adtsqlitedataco
lea     ecx, [ebp+var_11]
call    ds:??0dtloghelper@@qae@pb_w0h@z
xor     ebx, ebx
mov     [ebp+var_4], ebx
mov     eax, ds:??_7?$dtarray@e@@6b@
mov     [ebp+var_30], eax
mov     [ebp+var_2c], ebx
mov     [ebp+var_28], ebx
mov     [ebp+var_24], ebx
lea     ecx, [ebp+var_20]
mov     byte ptr [ebp+var_4], 1
call    ds:??0dtstr@@qae@xz
mov     ecx, [ebp+arg_0]
mov     byte ptr [ebp+var_4], 2
mov     edx, [ecx]
push    edx
lea     eax, [ebp+var_20]
push    offset aselectcountfro
push    eax
call    ds:?print@dtstr@@qaahpa_wzz
add     esp, 0ch
mov     [ebp+var_40], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [ebp+var_3c], ebx
mov     [ebp+var_38], ebx
mov     [ebp+var_34], ebx
lea     eax, [ebp+var_40]
push    eax
mov     byte ptr [ebp+var_4], 3
mov     edx, [esi]
mov     eax, [ebp+var_20]
mov     edx, [edx+24h]
lea     ecx, [ebp+var_30]
push    ecx
push    eax
mov     ecx, esi
call    edx
test    eax, eax
mov     byte ptr [ebp+var_4], 2
lea     ecx, [ebp+var_40]
setz    byte ptr [ebp+arg_0+3]
mov     [ebp+var_40], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
call    sub_100064f0
cmp     byte ptr [ebp+arg_0+3], bl
jz      short loc_10005742
lea     ecx, [ebp+var_20]
mov     byte ptr [ebp+var_4], 1
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_30]
mov     byte ptr [ebp+var_4], bl
call    ds:??1?$dtarray@e@@qae@xz
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
lea     eax, [ebp+var_30]
push    ebx
push    eax
call    ds:?touint32@dtbitconverter@@saiaav?$dtarray@e@@i@z
add     esp, 8
lea     ecx, [ebp+var_20]
mov     esi, eax
mov     byte ptr [ebp+var_4], 1
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_30]
mov     byte ptr [ebp+var_4], bl
call    ds:??1?$dtarray@e@@qae@xz
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_10005790
mov     eax, large fs:0
push    eax
sub     esp, 28h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+44h+var_c]
mov     large fs:0, eax
mov     esi, ecx
xor     ebx, ebx
push    ebx
push    offset acreatetable
push    offset adtsqlitedataco
lea     ecx, [esp+50h+var_2d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     edi, [ebp+arg_0]
push    edi
mov     ecx, esi
mov     [esp+48h+var_4], ebx
call    sub_10005640
test    eax, eax
jz      short loc_10005811
lea     ecx, [esp+44h+var_2d]
mov     [esp+44h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, dword ptr [esp+44h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [esp+44h+var_2c]
call    ds:??0dtstr@@qae@xz
mov     ecx, [ebp+arg_4]
lea     eax, [esp+44h+var_2c]
push    eax
push    edi
mov     byte ptr [esp+4ch+var_4], 1
call    sub_10002da0
mov     edi, offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [esp+44h+var_20], edi
mov     [esp+44h+var_1c], ebx
mov     [esp+44h+var_18], ebx
mov     [esp+44h+var_14], ebx
mov     byte ptr [esp+44h+var_4], 2
mov     ecx, [esp+44h+var_2c]
mov     edx, [esi]
mov     edx, [edx+1ch]
lea     eax, [esp+44h+var_20]
push    eax
push    ecx
mov     ecx, esi
call    edx
mov     byte ptr [esp+44h+var_4], 1
lea     ecx, [esp+44h+var_20]
mov     esi, eax
mov     [esp+44h+var_20], edi
call    sub_100064f0
lea     ecx, [esp+44h+var_2c]
mov     byte ptr [esp+44h+var_4], bl
call    ds:??1dtstr@@qae@xz
lea     ecx, [esp+44h+var_2d]
mov     [esp+44h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, dword ptr [esp+44h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_10005790
mov     eax, large fs:0
push    eax
sub     esp, 28h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+44h+var_c]
mov     large fs:0, eax
mov     esi, ecx
xor     ebx, ebx
push    ebx
push    offset adroptable
push    offset adtsqlitedataco
lea     ecx, [esp+50h+var_2d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     edi, [ebp+arg_0]
push    edi
mov     ecx, esi
mov     [esp+48h+var_4], ebx
call    sub_10005640
test    eax, eax
jnz     short loc_1000593c
push    esi
call    sub_10001a90
neg     eax
lea     ecx, [esp+44h+var_2d]
sbb     esi, esi
mov     [esp+44h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
lea     eax, [esi+1]
mov     ecx, dword ptr [esp+44h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
lea     ecx, [esp+44h+var_2c]
call    ds:??0dtstr@@qae@xz
mov     byte ptr [esp+44h+var_4], 1
mov     eax, [edi]
push    eax
lea     ecx, [esp+48h+var_2c]
push    offset adroptables
push    ecx
call    ds:?print@dtstr@@qaahpa_wzz
mov     edi, offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
add     esp, 0ch
mov     [esp+44h+var_20], edi
mov     [esp+44h+var_1c], ebx
mov     [esp+44h+var_18], ebx
mov     [esp+44h+var_14], ebx
mov     byte ptr [esp+44h+var_4], 2
mov     ecx, [esp+44h+var_2c]
mov     edx, [esi]
mov     edx, [edx+1ch]
lea     eax, [esp+44h+var_20]
push    eax
push    ecx
mov     ecx, esi
call    edx
mov     byte ptr [esp+44h+var_4], 1
lea     ecx, [esp+44h+var_20]
mov     esi, eax
mov     [esp+44h+var_20], edi
call    sub_100064f0
lea     ecx, [esp+44h+var_2c]
mov     byte ptr [esp+44h+var_4], bl
call    ds:??1dtstr@@qae@xz
lea     ecx, [esp+44h+var_2d]
mov     [esp+44h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, dword ptr [esp+44h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004a40
mov     eax, large fs:0
push    eax
sub     esp, 48h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    1
push    offset asavetable
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
lea     ecx, [ebp+var_54]
mov     [ebp+var_4], 0
call    ds:??0dtdatasource@@qae@xz
mov     byte ptr [ebp+var_4], 1
mov     edi, [esi+18h]
mov     eax, [edi]
mov     ebx, ds:??4dtstr@@qaeaav0@aav0@@z
lea     ecx, [edi+4]
push    ecx
lea     ecx, [ebp+var_50]
mov     [ebp+var_54], eax
call    ebx
add     edi, 10h
push    edi
lea     ecx, [ebp+var_44]
call    ebx
mov     edx, [ebp+arg_0]
push    edx
lea     ecx, [ebp+var_38]
call    ds:??4dtstr@@qaeaav0@pa_w@z
mov     ecx, [ebp+arg_4]
mov     eax, [esi]
mov     eax, [eax+3ch]
push    ecx
lea     edx, [ebp+var_54]
push    edx
mov     ecx, esi
call    eax
lea     ecx, [ebp+var_54]
mov     esi, eax
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtdatasource@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_10005ab0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+24h+var_c]
mov     large fs:0, eax
mov     esi, ecx
push    0
push    offset asavetable
push    offset adtsqlitedataco
lea     ecx, [esp+30h+var_11]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [esp+24h+var_4], 0
cmp     dword ptr [esi+34h], 0
jz      short loc_10005b3b
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
push    esi
call    sub_10005be0
lea     ecx, [esp+24h+var_11]
mov     esi, eax
mov     [esp+24h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, dword ptr [esp+24h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     edx, [esi]
mov     eax, [edx+44h]
mov     ecx, esi
call    eax
cmp     dword ptr [esi+34h], 0
jz      short loc_10005baf
mov     ebx, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    ebx
push    ecx
push    esi
call    sub_10005be0
mov     ecx, [esi+34h]
mov     edx, [ecx]
mov     edi, eax
test    edi, edi
jz      short loc_10005b81
mov     eax, [edx+8]
call    eax
mov     edi, eax
test    edi, edi
jz      short loc_10005b86
push    0
mov     ecx, ebx
mov     dword ptr [ebx+2ch], 0
call    ds:?setrecordstate@dttable@@qaexi@z
jmp     short loc_10005b86
mov     eax, [edx+0ch]
call    eax
lea     ecx, [esp+24h+var_11]
mov     [esp+24h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, edi
mov     ecx, dword ptr [esp+24h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [esp+24h+var_11]
mov     [esp+24h+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, dword ptr [esp+24h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10005be0
mov     eax, large fs:0
push    eax
sub     esp, 80h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     esi, esi
push    esi
push    offset asavetableinter
push    offset adtsqlitedataco
lea     ecx, [ebp+var_11]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     [ebp+var_4], esi
mov     edi, ds:??0dtstr@@qae@xz
lea     ecx, [ebp+var_44]
call    edi
lea     ecx, [ebp+var_5c]
mov     byte ptr [ebp+var_4], 1
call    edi
lea     ecx, [ebp+var_50]
mov     byte ptr [ebp+var_4], 2
call    edi
lea     ecx, [ebp+var_38]
mov     byte ptr [ebp+var_4], 3
call    edi
mov     edi, offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [ebp+var_8c], edi
mov     [ebp+var_88], esi
mov     [ebp+var_84], esi
mov     [ebp+var_80], esi
mov     [ebp+var_7c], edi
mov     [ebp+var_78], esi
mov     [ebp+var_74], esi
mov     [ebp+var_70], esi
mov     [ebp+var_6c], edi
mov     [ebp+var_68], esi
mov     [ebp+var_64], esi
mov     [ebp+var_60], esi
mov     byte ptr [ebp+var_4], 7
mov     esi, [ebp+arg_0]
mov     eax, [esi]
mov     edx, [eax+8]
mov     ecx, esi
call    edx
test    eax, eax
jnz     loc_10005d17
mov     byte ptr [ebp+var_4], 6
lea     ecx, [ebp+var_6c]
mov     [ebp+var_6c], edi
call    sub_100064f0
mov     byte ptr [ebp+var_4], 5
lea     ecx, [ebp+var_7c]
mov     [ebp+var_7c], edi
call    sub_100064f0
mov     byte ptr [ebp+var_4], 4
mov     [ebp+var_8c], edi
lea     ecx, [ebp+var_8c]
call    sub_100064f0
mov     byte ptr [ebp+var_4], 3
mov     esi, ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_38]
call    esi
lea     ecx, [ebp+var_50]
mov     byte ptr [ebp+var_4], 2
call    esi
lea     ecx, [ebp+var_5c]
mov     byte ptr [ebp+var_4], 1
call    esi
lea     ecx, [ebp+var_44]
mov     byte ptr [ebp+var_4], 0
call    esi
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, [ebp+arg_4]
add     eax, 1ch
push    eax
lea     ecx, [ebp+var_38]
call    ds:??4dtstr@@qaeaav0@aav0@@z
mov     ebx, [ebp+arg_8]
mov     edi, ebx
call    sub_10002fc0
mov     [ebp+var_24], eax
mov     eax, [ebx+134h]
xor     ecx, ecx
mov     [ebp+var_20], ecx
test    eax, eax
jz      loc_10005eb6
mov     esi, ecx
or      esi, 80000000h
push    esi
mov     ecx, ebx
call    ds:?getstate@dttable@@qae?aw4dtrecordstate@@i@z
and     eax, 3
dec     eax
jz      short loc_10005dc5
dec     eax
jz      short loc_10005d96
dec     eax
jnz     loc_10005ea0
push    eax
lea     ecx, [ebp+var_50]
push    ecx
call    ds:??8@yahaavdtstr@@pa_w@z
add     esp, 8
test    eax, eax
jz      short loc_10005d8b
mov     eax, [ebp+var_38]
lea     edx, [ebp+var_50]
push    edx
push    ebx
push    eax
lea     ecx, [ebp+var_6c]
call    sub_10002a50
lea     ecx, [ebp+var_50]
mov     [ebp+var_18], ecx
lea     edi, [ebp+var_6c]
jmp     short loc_10005df8
lea     edx, [ebp+var_5c]
push    0
push    edx
call    ds:??8@yahaavdtstr@@pa_w@z
add     esp, 8
test    eax, eax
jz      short loc_10005dba
mov     ecx, [ebp+var_38]
lea     eax, [ebp+var_5c]
push    eax
push    ebx
push    ecx
lea     ecx, [ebp+var_7c]
call    sub_10002570
lea     edx, [ebp+var_5c]
mov     [ebp+var_18], edx
lea     edi, [ebp+var_7c]
jmp     short loc_10005df8
lea     eax, [ebp+var_44]
push    0
push    eax
call    ds:??8@yahaavdtstr@@pa_w@z
add     esp, 8
test    eax, eax
jz      short loc_10005dec
mov     edx, [ebp+var_38]
lea     ecx, [ebp+var_44]
push    ecx
push    ebx
push    edx
lea     ecx, [ebp+var_8c]
call    sub_100021e0
lea     eax, [ebp+var_44]
mov     [ebp+var_18], eax
lea     edi, [ebp+var_8c]
mov     ecx, [ebp+var_18]
mov     edx, [ecx]
mov     ecx, [ebp+arg_0]
push    edx
call    sub_10001e70
test    eax, eax
jz      loc_10005fe9
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    eax
push    edi
push    ebx
mov     ebx, esi
call    sub_10003320
test    eax, eax
jz      loc_10005fe9
mov     ebx, edi
mov     edi, [ebp+arg_0]
mov     ecx, edi
call    sub_100035c0
test    eax, eax
jz      loc_10005fe9
mov     ecx, [edi+2ch]
push    ecx
call    sub_10029be0
add     esp, 4
call    sub_10001c50
test    eax, eax
jz      loc_10005fe9
lea     edx, [ebp+var_44]
cmp     [ebp+var_18], edx
jnz     short loc_10005e9d
mov     ebx, [ebp+var_24]
cmp     ebx, 0ffffffffh
jz      short loc_10005e9d
mov     eax, [edi+24h]
mov     eax, [eax]
mov     ecx, [eax+1ch]
mov     edx, [eax+20h]
mov     dword ptr [ebp+var_2c], ecx
mov     dword ptr [ebp+var_2c+4], edx
fild    [ebp+var_2c]
fstp    qword ptr [ebp-1ch]
call    sub_10001c50
test    eax, eax
jz      loc_10005fe9
fld     qword ptr [ebp-1ch]
mov     ecx, [ebp+arg_8]
push    0
sub     esp, 8
fstp    [esp+0a8h+var_a8]
push    ebx
push    esi
call    ds:?setnum@dttable@@qaehiinh@z
mov     ebx, [ebp+arg_8]
mov     ecx, [ebp+var_20]
inc     ecx
mov     [ebp+var_20], ecx
cmp     ecx, [ebx+134h]
jb      loc_10005d47
mov     esi, [ebp+arg_0]
push    0
push    offset afinalizestmt
push    offset adtsqlitedataco
lea     ecx, [ebp+arg_0+3]
call    ds:??0dtloghelper@@qae@pb_w0h@z
mov     byte ptr [ebp+var_4], 8
mov     eax, [esi+2ch]
test    eax, eax
jz      short loc_10005eed
push    eax
call    sub_10029010
add     esp, 4
mov     edi, esi
call    sub_10001c50
mov     dword ptr [esi+2ch], 0
lea     ecx, [ebp+arg_0+3]
mov     byte ptr [ebp+var_4], 7
call    ds:??1dtloghelper@@qae@xz
mov     byte ptr [ebp+var_4], 6
mov     edi, [ebp+var_68]
test    edi, edi
jz      short loc_10005f2c
mov     ebx, [ebp+var_64]
xor     esi, esi
test    ebx, ebx
jz      short loc_10005f22
mov     ecx, [edi+esi*4]
test    ecx, ecx
jz      short loc_10005f1d
mov     eax, [ecx]
mov     edx, [eax]
push    1
call    edx
inc     esi
cmp     esi, ebx
jb      short loc_10005f0e
push    edi
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     byte ptr [ebp+var_4], 5
mov     edi, [ebp+var_78]
test    edi, edi
jz      short loc_10005f5e
mov     ebx, [ebp+var_74]
xor     esi, esi
test    ebx, ebx
jz      short loc_10005f54
mov     ecx, [edi+esi*4]
test    ecx, ecx
jz      short loc_10005f4f
mov     eax, [ecx]
mov     edx, [eax]
push    1
call    edx
inc     esi
cmp     esi, ebx
jb      short loc_10005f40
push    edi
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     byte ptr [ebp+var_4], 4
mov     edi, [ebp+var_88]
test    edi, edi
jz      short loc_10005f96
mov     ebx, [ebp+var_84]
xor     esi, esi
test    ebx, ebx
jz      short loc_10005f8c
mov     ecx, [edi+esi*4]
test    ecx, ecx
jz      short loc_10005f87
mov     eax, [ecx]
mov     edx, [eax]
push    1
call    edx
inc     esi
cmp     esi, ebx
jb      short loc_10005f78
push    edi
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     byte ptr [ebp+var_4], 3
mov     esi, ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_38]
call    esi
lea     ecx, [ebp+var_50]
mov     byte ptr [ebp+var_4], 2
call    esi
lea     ecx, [ebp+var_5c]
mov     byte ptr [ebp+var_4], 1
call    esi
lea     ecx, [ebp+var_44]
mov     byte ptr [ebp+var_4], 0
call    esi
lea     ecx, [ebp+var_11]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     byte ptr [ebp+var_4], 6
mov     esi, offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
lea     ecx, [ebp+var_6c]
mov     [ebp+var_6c], esi
call    sub_100064f0
mov     byte ptr [ebp+var_4], 5
lea     ecx, [ebp+var_7c]
mov     [ebp+var_7c], esi
call    sub_100064f0
mov     byte ptr [ebp+var_4], 4
mov     [ebp+var_8c], esi
jmp     loc_10005cbc
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10006020
mov     eax, large fs:0
push    eax
sub     esp, 20h
push    ebx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
xor     ebx, ebx
push    ebx
push    offset agettablenames
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
push    ebx
push    offset aselectnamefrom
lea     ecx, [ebp+var_1c]
mov     [ebp+var_4], ebx
call    ds:??0dtstr@@qae@pa_wi@z
mov     [ebp+var_2c], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [ebp+var_28], ebx
mov     [ebp+var_24], ebx
mov     [ebp+var_20], ebx
mov     edx, [ebp+arg_0]
lea     ecx, [ebp+var_2c]
push    ecx
mov     byte ptr [ebp+var_4], 2
mov     ecx, [ebp+var_1c]
mov     eax, [esi]
push    edx
mov     edx, [eax+18h]
push    ecx
mov     ecx, esi
call    edx
mov     byte ptr [ebp+var_4], 1
lea     ecx, [ebp+var_2c]
mov     esi, eax
mov     [ebp+var_2c], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
call    sub_100064f0
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], bl
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10006020
mov     eax, large fs:0
push    eax
sub     esp, 20h
push    ebx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
xor     ebx, ebx
push    ebx
push    offset agetviewnames
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
push    ebx
push    offset aselectnamefrom_0
lea     ecx, [ebp+var_1c]
mov     [ebp+var_4], ebx
call    ds:??0dtstr@@qae@pa_wi@z
mov     [ebp+var_2c], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
mov     [ebp+var_28], ebx
mov     [ebp+var_24], ebx
mov     [ebp+var_20], ebx
mov     edx, [ebp+arg_0]
lea     ecx, [ebp+var_2c]
push    ecx
mov     byte ptr [ebp+var_4], 2
mov     ecx, [ebp+var_1c]
mov     eax, [esi]
push    edx
mov     edx, [eax+18h]
push    ecx
mov     ecx, esi
call    edx
mov     byte ptr [ebp+var_4], 1
lea     ecx, [ebp+var_2c]
mov     esi, eax
mov     [ebp+var_2c], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
call    sub_100064f0
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], bl
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100061a0
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    1
push    offset acreateparamete
push    offset adtsqlitedataco
lea     ecx, [ebp+var_d]
call    ds:??0dtloghelper@@qae@pb_w0h@z
lea     ecx, [ebp+var_1c]
mov     [ebp+var_4], 0
call    ds:??0dtstr@@qae@xz
mov     byte ptr [ebp+var_4], 1
mov     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+var_1c]
call    sub_10002130
push    28h
call    ds:??2@yapaxi@z
add     esp, 4
mov     [ebp+arg_0], eax
mov     byte ptr [ebp+var_4], 2
test    eax, eax
jz      short loc_10006229
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    ecx
mov     ecx, [ebp+var_1c]
push    0ffffffffh
push    edx
push    ecx
push    eax
call    sub_10001000
mov     esi, eax
jmp     short loc_1000622b
xor     esi, esi
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], 0
call    ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    1
push    offset adtcreatedataco_0
push    offset adtsqlitedataco
lea     ecx, [ebp+var_1]
call    ds:??0dtloghelper@@qae@pb_w0h@z
push    0a0h
call    ds:??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_100062a8
mov     ecx, [ebp+arg_0]
push    ecx
push    eax
call    sub_100014e0
lea     ecx, [ebp+var_1]
mov     esi, eax
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp+var_1]
xor     esi, esi
call    ds:??1dtloghelper@@qae@xz
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+8]
push    edi
xor     edi, edi
mov     dword ptr [esi], offset ??_7?$dtsptr@udtdataconnectiondesc@@@@6b@
cmp     eax, edi
jz      short loc_100062ea
dec     dword ptr [eax]
jnz     short loc_100062ea
mov     eax, [esi]
mov     edx, [eax+4]
mov     ecx, esi
call    edx
mov     eax, [esi+8]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     [esi+4], edi
mov     [esi+8], edi
pop     edi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10006300
mov     eax, large fs:0
push    eax
push    ecx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, [ecx+4]
mov     [ebp+var_10], esi
test    esi, esi
jz      short loc_10006357
mov     [ebp+var_4], 0
mov     edi, ds:??1dtstr@@qae@xz
lea     ecx, [esi+10h]
call    edi
lea     ecx, [esi+4]
mov     [ebp+var_4], 0ffffffffh
call    edi
push    esi
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+8]
push    edi
xor     edi, edi
mov     dword ptr [esi], offset ??_7?$dtsptr@vdtsqlitedb@dtsqlitedataconnection@@@@6b@
cmp     eax, edi
jz      short loc_1000639a
dec     dword ptr [eax]
jnz     short loc_1000639a
mov     eax, [esi]
mov     edx, [eax+4]
mov     ecx, esi
call    edx
mov     eax, [esi+8]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     [esi+4], edi
mov     [esi+8], edi
pop     edi
retn
xor     eax, eax
cmp     [ecx+4], eax
setz    al
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100063c0
mov     eax, large fs:0
push    eax
push    ecx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, [ecx+4]
mov     [ebp+var_10], esi
test    esi, esi
jz      short loc_10006420
mov     [ebp+var_4], 0
mov     eax, [esi]
test    eax, eax
jz      short loc_10006406
call    sub_1006f820
mov     dword ptr [esi], 0
lea     ecx, [esi+4]
mov     [ebp+var_4], 0ffffffffh
call    ds:??1dtstr@@qae@xz
push    esi
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+8]
push    edi
xor     edi, edi
mov     dword ptr [esi], offset ??_7?$dtsptr@vidtdatatransaction@@@@6b@
cmp     eax, edi
jz      short loc_1000645a
dec     dword ptr [eax]
jnz     short loc_1000645a
mov     eax, [esi]
mov     edx, [eax+4]
mov     ecx, esi
call    edx
mov     eax, [esi+8]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     [esi+4], edi
mov     [esi+8], edi
pop     edi
retn
mov     eax, [esi+8]
test    eax, eax
jz      short loc_10006491
dec     dword ptr [eax]
jnz     short loc_10006491
mov     eax, [esi]
mov     edx, [eax+4]
mov     ecx, esi
call    edx
mov     eax, [esi+8]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     dword ptr [esi+8], 0
mov     [esi+4], edi
test    edi, edi
jz      short loc_100064c6
push    4
call    ds:??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_100064bc
mov     dword ptr [eax], 0
mov     [esi+8], eax
inc     dword ptr [eax]
mov     eax, esi
retn
xor     eax, eax
mov     [esi+8], eax
inc     dword ptr [eax]
mov     eax, esi
retn
mov     dword ptr [esi+8], 0
mov     eax, esi
retn
mov     ecx, [ecx+4]
test    ecx, ecx
jz      short locret_100064df
mov     eax, [ecx]
mov     edx, [eax]
push    1
call    edx
retn
mov     dword ptr [ecx], offset ??_7?$dtarray@pavidtdataparameter@@@@6b@
jmp     sub_100064f0
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ecx+4]
mov     [ebp+var_4], ecx
test    ebx, ebx
jz      short loc_10006533
push    esi
push    edi
mov     edi, [ecx+8]
xor     esi, esi
test    edi, edi
jz      short loc_10006524
lea     ebx, [ebx+0]
mov     ecx, [ebx+esi*4]
test    ecx, ecx
jz      short loc_1000651f
mov     eax, [ecx]
mov     edx, [eax]
push    1
call    edx
inc     esi
cmp     esi, edi
jb      short loc_10006510
push    ebx
call    ds:__imp_??3@yaxpax@z
mov     ecx, [ebp+var_4]
add     esp, 4
pop     edi
pop     esi
xor     eax, eax
mov     [ecx+4], eax
mov     [ecx+0ch], eax
mov     [ecx+8], eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+4]
push    ebx
push    edi
test    eax, eax
jz      short loc_10006569
cmp     ecx, [esi+0ch]
jbe     short loc_100065d2
test    eax, eax
jz      short loc_10006569
mov     edi, [esi+0ch]
test    edi, edi
jnz     short loc_1000656e
mov     edi, 2
cmp     edi, ecx
jnb     short loc_10006578
add     edi, edi
cmp     edi, ecx
jb      short loc_10006572
xor     ecx, ecx
mov     eax, edi
mov     edx, 4
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx
call    ds:??2@yapaxi@z
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1000659d
pop     edi
pop     ebx
retn
cmp     dword ptr [esi+4], 0
jz      short loc_100065cc
xor     eax, eax
cmp     [esi+8], eax
jbe     short loc_100065bf
lea     ebx, [ebx+0]
mov     ecx, [esi+4]
mov     edx, [ecx+eax*4]
mov     [ebx+eax*4], edx
inc     eax
cmp     eax, [esi+8]
jb      short loc_100065b0
mov     eax, [esi+4]
push    eax
call    ds:__imp_??3@yaxpax@z
add     esp, 4
mov     [esi+4], ebx
mov     [esi+0ch], edi
pop     edi
mov     eax, 1
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, 7
mov     edx, edi
mov     esi, offset asqlite
mov     cl, [edx]
dec     eax
test    cl, cl
jz      short loc_1000661a
movzx   ebx, byte ptr [esi]
movzx   ecx, cl
mov     cl, ds:byte_10076030[ecx]
cmp     cl, ds:byte_10076030[ebx]
jnz     short loc_1000661a
inc     edx
inc     esi
test    eax, eax
jg      short loc_100065f8
dec     eax
test    eax, eax
js      short loc_10006636
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [esi]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     eax, edx
jnz     short loc_1000663c
add     edi, 7
mov     [ebp+arg_0], edi
mov     eax, edi
test    edi, edi
jnz     short loc_10006651
xor     edx, edx
mov     esi, offset off_100762d8
mov     [ebp+var_4], edx
mov     [ebp+var_8], esi
jmp     short loc_10006675
cmp     byte ptr [edi], 0
jz      short loc_1000665c
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10006656
sub     eax, edi
and     eax, 3fffffffh
mov     esi, offset off_100762d8
mov     edx, eax
mov     [ebp+var_4], eax
mov     [ebp+var_8], esi
jmp     short loc_10006675
mov     edi, [ebp+arg_0]
mov     ecx, edi
mov     edi, [esi]
mov     eax, edx
mov     esi, edi
test    edx, edx
jle     short loc_100066a2
mov     dl, [ecx]
dec     eax
test    dl, dl
jz      short loc_100066a3
movzx   ebx, byte ptr [esi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[ebx]
jnz     short loc_100066a3
inc     ecx
inc     esi
test    eax, eax
jg      short loc_10006681
dec     eax
test    eax, eax
js      short loc_100066bf
movzx   eax, byte ptr [esi]
movzx   edx, ds:byte_10076030[eax]
movzx   eax, byte ptr [ecx]
movzx   ecx, ds:byte_10076030[eax]
sub     ecx, edx
jnz     short loc_100066d9
mov     edx, [ebp+var_4]
mov     al, [edi+edx]
test    al, al
jz      short loc_100066cd
cmp     al, 3dh
jnz     short loc_100066dc
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_4]
mov     esi, [ebp+var_8]
add     esi, 4
mov     [ebp+var_8], esi
cmp     esi, offset off_100762e8
jl      short loc_10006672
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     eax, 3
ja      short loc_10006714
mov     eax, ds:off_100762d8[eax*4]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
add     dword_10081668[ecx*4], eax
mov     eax, dword_10081668[ecx*4]
cmp     eax, dword_10081690[ecx*4]
lea     ecx, dword_10081690[ecx*4]
jle     short locret_10006740
mov     [ecx], eax
retn
mov     dword_10081668[ecx*4], eax
cmp     eax, dword_10081690[ecx*4]
lea     ecx, dword_10081690[ecx*4]
jle     short locret_10006769
mov     [ecx], eax
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
push    esi
cmp     eax, 9
ja      short loc_100067a8
cmp     [ebp+arg_c], 0
mov     edx, [ebp+arg_4]
mov     ecx, dword_10081668[eax*4]
mov     esi, [ebp+arg_8]
mov     [edx], ecx
mov     edx, dword_10081690[eax*4]
mov     [esi], edx
jz      short loc_100067a2
mov     dword_10081690[eax*4], ecx
xor     eax, eax
pop     esi
pop     ecx
pop     ebp
retn
push    offset ac0d89d4a975292
push    34c6h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     eax, 15h
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx+0ch]
push    esi
xor     esi, esi
mov     [ebp+var_8], esi
cmp     eax, esi
jz      short loc_100067f1
push    eax
call    dword_1008027c
add     esp, 4
mov     edx, [ebp+arg_4]
push    edi
cmp     edx, 9
ja      def_100067fe
jmp     ds:jpt_100067fe[edx*4]
mov     eax, [ebx+0e4h]
mov     ecx, [ebp+arg_8]
mov     [ecx], eax
mov     edx, [ebx+0e8h]
mov     eax, [ebp+arg_c]
mov     [eax], edx
cmp     [ebp+arg_10], esi
jz      loc_10006aca
mov     ecx, [ebx+0e4h]
mov     [ebx+0e8h], ecx
jmp     loc_10006aca
mov     eax, [ebp+arg_8]
mov     [eax], esi
mov     ecx, [ebx+edx*4+0dch]
mov     eax, [ebp+arg_c]
mov     [eax], ecx
cmp     [ebp+arg_10], esi
jz      loc_10006aca
mov     [ebx+edx*4+0dch], esi
jmp     loc_10006aca
push    ebx
mov     [ebp+arg_4], esi
call    sub_10019440
add     esp, 4
mov     [ebp+var_4], esi
cmp     [ebx+14h], esi
jle     short loc_100068dc
mov     [ebp+arg_0], esi
mov     ecx, [ebx+10h]
mov     edx, [ebp+arg_0]
mov     eax, [edx+ecx+4]
cmp     eax, esi
jz      short loc_100068cc
mov     eax, [eax+4]
mov     esi, [eax]
movzx   ecx, word ptr [esi+74h]
mov     edx, [esi+80h]
lea     eax, [ecx+edx+3ch]
mov     [ebp+var_c], eax
mov     eax, [esi+0b4h]
mov     eax, [eax+28h]
xor     edi, edi
test    eax, eax
jz      short loc_100068b1
push    eax
call    dword_100802a8
add     esp, 4
mov     edi, eax
push    esi
call    dword_10080258
imul    edi, [ebp+var_c]
add     edi, [esi+80h]
add     esp, 4
add     edi, eax
add     [ebp+arg_4], edi
xor     esi, esi
mov     eax, [ebp+var_4]
add     [ebp+arg_0], 10h
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [ebx+14h]
jl      short loc_10006872
call    sub_10019550
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_c]
mov     [ecx], edx
mov     [eax], esi
jmp     loc_10006aca
push    ebx
mov     [ebp+arg_0], esi
call    sub_10019440
add     esp, 4
lea     ecx, [ebp+arg_0]
mov     [ebx+1e8h], ecx
mov     [ebp+var_c], esi
cmp     [ebx+14h], esi
jle     loc_10006a1b
mov     [ebp+var_4], esi
jmp     short loc_10006920
mov     edx, [ebx+10h]
mov     eax, [ebp+var_4]
mov     edi, [eax+edx+0ch]
mov     [ebp+var_14], edi
cmp     edi, esi
jz      loc_10006a07
push    14h
call    dword_1008025c
mov     ecx, [edi+3ch]
add     ecx, [edi+2ch]
add     ecx, [edi+1ch]
add     ecx, [edi+0ch]
imul    eax, ecx
add     [ebp+arg_0], eax
mov     eax, [edi+14h]
push    eax
call    dword_10080258
add     [ebp+arg_0], eax
mov     eax, [edi+34h]
push    eax
call    dword_10080258
add     [ebp+arg_0], eax
mov     eax, [edi+24h]
push    eax
call    dword_10080258
add     [ebp+arg_0], eax
mov     eax, [edi+44h]
push    eax
call    dword_10080258
add     [ebp+arg_0], eax
mov     eax, [edi+30h]
add     esp, 14h
mov     [ebp+arg_4], eax
cmp     eax, esi
jz      short loc_100069ed
jmp     short loc_10006995
mov     eax, [ebp+arg_4]
mov     esi, [eax+8]
mov     [ebp+var_10], esi
test    esi, esi
jz      short loc_100069e2
mov     edx, [esi+1ch]
push    edx
call    sub_1005dfb0
mov     eax, [esi]
mov     ecx, ebx
call    sub_10009810
mov     eax, [esi+4]
mov     ecx, ebx
call    sub_10009810
mov     eax, [esi+0ch]
push    eax
push    ebx
call    sub_10036430
mov     edi, [esi+10h]
add     esp, 0ch
mov     esi, ebx
call    sub_100433b0
mov     eax, [ebp+var_10]
mov     ecx, ebx
call    sub_10009810
mov     eax, [ebp+arg_4]
mov     edi, [ebp+var_14]
mov     eax, [eax]
mov     [ebp+arg_4], eax
test    eax, eax
jnz     short loc_10006992
xor     esi, esi
mov     edi, [edi+10h]
cmp     edi, esi
jz      short loc_10006a07
mov     ecx, [edi+8]
push    ecx
push    ebx
call    sub_1003fba0
mov     edi, [edi]
add     esp, 8
cmp     edi, esi
jnz     short loc_100069f4
mov     eax, [ebp+var_c]
add     [ebp+var_4], 10h
inc     eax
mov     [ebp+var_c], eax
cmp     eax, [ebx+14h]
jl      loc_10006920
mov     [ebx+1e8h], esi
call    sub_10019550
mov     edx, [ebp+arg_c]
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     [edx], esi
mov     [eax], ecx
jmp     loc_10006aca
mov     edi, [ebx+4]
lea     edx, [ebp+arg_0]
mov     [ebp+arg_0], esi
mov     [ebx+1e8h], edx
cmp     edi, esi
jz      short loc_10006a62
jmp     short loc_10006a50
push    edi
mov     eax, ebx
call    sub_10027f40
mov     edi, [edi+3ch]
add     esp, 4
cmp     edi, esi
jnz     short loc_10006a50
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_0]
mov     [ebx+1e8h], esi
mov     [eax], esi
mov     [ecx], edx
jmp     short loc_10006aca
xor     ecx, ecx
cmp     [ebx+14h], ecx
jle     short loc_10006ab1
xor     edi, edi
mov     eax, [ebx+10h]
mov     eax, [edi+eax+4]
test    eax, eax
jz      short loc_10006aa8
mov     eax, [eax+4]
mov     eax, [eax]
add     ecx, [eax+edx*4+84h]
cmp     [ebp+arg_10], 0
jz      short loc_10006aa8
mov     dword ptr [eax+edx*4+84h], 0
inc     esi
add     edi, 10h
cmp     esi, [ebx+14h]
jl      short loc_10006a80
mov     edx, [ebp+arg_c]
mov     eax, [ebp+arg_8]
mov     dword ptr [edx], 0
mov     [eax], ecx
xor     esi, esi
jmp     short loc_10006aca
mov     [ebp+var_8], 1
mov     ebx, [ebx+0ch]
pop     edi
cmp     ebx, esi
jz      short loc_10006adc
push    ebx
call    dword_10080284
add     esp, 4
mov     eax, [ebp+var_8]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
xor     eax, eax
push    edi
mov     edi, [ebp+arg_0]
mov     [ebp+var_4], eax
lea     ecx, [ebp+arg_0]
mov     edx, [ecx+8]
mov     esi, [ecx+4]
mov     ebx, [ecx+10h]
mov     [ebp+var_c], edx
mov     edx, [ecx+0ch]
add     ecx, 14h
mov     [ebp+var_10], edx
mov     edx, [ecx]
mov     [ebp+var_14], edx
xor     edx, edx
mov     [ebp+var_8], ebx
test    esi, esi
jz      short loc_10006b6b
mov     bl, [edi]
movzx   eax, bl
dec     esi
test    ds:byte_10076130[eax], 4
jz      short loc_10006b98
movsx   eax, bl
lea     edx, [edx+edx*4]
inc     edi
lea     edx, [eax+edx*2-30h]
test    esi, esi
jnz     short loc_10006b47
mov     eax, [ebp+var_4]
mov     ebx, [ebp+var_8]
cmp     edx, [ebp+var_c]
jl      short loc_10006b9b
cmp     edx, [ebp+var_10]
jg      short loc_10006b9b
test    ebx, ebx
jz      short loc_10006b80
movsx   esi, byte ptr [edi]
cmp     ebx, esi
jnz     short loc_10006b9b
mov     esi, [ebp+var_14]
inc     edi
inc     eax
mov     [esi], edx
mov     [ebp+arg_0], edi
mov     [ebp+var_4], eax
test    ebx, ebx
jnz     short loc_10006b24
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
mov     esi, eax
movzx   eax, byte ptr [esi]
test    ds:byte_10076130[eax], 1
push    edi
jz      short loc_10006bde
jmp     short loc_10006bd0
movzx   ecx, byte ptr [esi+1]
inc     esi
test    ds:byte_10076130[ecx], 1
jnz     short loc_10006bd0
mov     dword ptr [ebx+1ch], 0
movsx   eax, byte ptr [esi]
cmp     eax, 2dh
jnz     short loc_10006bf2
or      edi, 0ffffffffh
jmp     short loc_10006bfa
cmp     eax, 2bh
jnz     short loc_10006c47
lea     edi, [eax-2ah]
lea     edx, [ebp+var_8]
push    edx
push    0
push    3bh
push    0
push    2
lea     eax, [ebp+var_4]
push    eax
push    3ah
push    0eh
push    0
inc     esi
push    2
push    esi
call    sub_10006b10
add     esp, 2ch
cmp     eax, 2
jz      short loc_10006c2c
pop     edi
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
lea     eax, [edx+ecx*4]
add     esi, 5
imul    eax, edi
mov     [ebx+1ch], eax
jmp     short loc_10006c61
cmp     eax, 5ah
jz      short loc_10006c60
cmp     eax, 7ah
jz      short loc_10006c60
xor     ecx, ecx
test    eax, eax
setnz   cl
pop     edi
pop     esi
mov     eax, ecx
mov     esp, ebp
pop     ebp
retn
inc     esi
movzx   edx, byte ptr [esi]
test    ds:byte_10076130[edx], 1
jz      short loc_10006c7e
lea     ecx, [ecx+0]
movzx   eax, byte ptr [esi+1]
inc     esi
test    ds:byte_10076130[eax], 1
jnz     short loc_10006c70
xor     eax, eax
cmp     [esi], al
pop     edi
setnz   al
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
fldz
push    ebx
push    esi
mov     esi, eax
lea     eax, [ebp+var_10]
push    eax
xor     ebx, ebx
push    ebx
push    3bh
push    ebx
push    2
lea     ecx, [ebp+var_c]
push    ecx
push    3ah
push    18h
push    ebx
push    2
push    esi
call    sub_10006b10
add     esp, 2ch
cmp     eax, 2
jz      short loc_10006cce
fstp    st
mov     eax, 1
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
add     esi, 5
cmp     byte ptr [esi], 3ah
jnz     loc_10006d5a
lea     edx, [ebp+var_4]
push    edx
push    ebx
push    3bh
push    ebx
inc     esi
push    2
push    esi
call    sub_10006b10
add     esp, 18h
cmp     eax, 1
jnz     short loc_10006cc1
add     esi, 2
cmp     byte ptr [esi], 2eh
jnz     short loc_10006d5d
movzx   eax, byte ptr [esi+1]
mov     cl, 4
test    ds:byte_10076130[eax], cl
jz      short loc_10006d5d
mov     al, [esi+1]
fld1
inc     esi
movzx   edx, al
test    ds:byte_10076130[edx], cl
jz      short loc_10006d56
fld     ds:dbl_1007cf00
fld     ds:dbl_1007cf70
jmp     short loc_10006d2c
fxch    st(2)
fxch    st(3)
movsx   eax, al
fxch    st(3)
fmul    st, st(1)
mov     [ebp+var_8], eax
mov     al, [esi+1]
inc     esi
fild    [ebp+var_8]
movzx   edx, al
faddp   st(1), st
fsub    st, st(3)
fxch    st(2)
fmul    st, st(1)
test    ds:byte_10076130[edx], cl
jnz     short loc_10006d28
fstp    st(1)
fstp    st(2)
fxch    st(1)
fdivp   st(1), st
jmp     short loc_10006d5d
mov     [ebp+var_4], ebx
fiadd   [ebp+var_4]
mov     eax, [ebp+var_c]
mov     ecx, [ebp+var_10]
mov     [edi+14h], eax
mov     ebx, edi
mov     eax, esi
mov     word ptr [edi+29h], 1
mov     [edi+18h], ecx
fstp    qword ptr [edi+20h]
call    sub_10006bb0
test    eax, eax
jnz     loc_10006cc3
cmp     [edi+1ch], eax
pop     esi
setnz   dl
mov     [edi+2bh], dl
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
cmp     byte ptr [esi+2ah], 0
jnz     loc_10006ea8
cmp     byte ptr [esi+28h], 0
push    ebx
push    edi
jz      loc_10006eac
mov     ebx, [esi+0ch]
mov     eax, [esi+10h]
mov     edi, [esi+8]
mov     [ebp+var_4], eax
cmp     ebx, 2
jg      short loc_10006dcf
dec     edi
add     ebx, 0ch
mov     eax, 51eb851fh
imul    edi
sar     edx, 5
mov     ecx, edx
shr     ecx, 1fh
add     ecx, edx
lea     edx, [ebx+1]
imul    edx, 4ab51h
mov     eax, 68db8badh
imul    edx
sar     edx, 0ch
mov     ebx, edx
shr     ebx, 1fh
add     ebx, edx
lea     edx, [edi+126ch]
imul    edx, 8eadh
mov     eax, 51eb851fh
imul    edx
sar     edx, 5
mov     edi, edx
add     ebx, edx
mov     eax, ecx
cdq
and     edx, 3
shr     edi, 1fh
add     eax, edx
add     edi, ebx
sar     eax, 2
add     edi, eax
sub     edi, ecx
mov     ecx, [ebp+var_4]
lea     edx, [edi+ecx+2]
mov     [ebp+var_4], edx
fild    [ebp+var_4]
fsub    ds:dbl_1007cf60
fmul    ds:dbl_1007cf28
call    __ftol2
cmp     byte ptr [esi+29h], 0
mov     [esi], eax
mov     [esi+4], edx
mov     byte ptr [esi+2ah], 1
jz      short loc_10006ea6
mov     eax, [esi+14h]
fld     qword ptr [esi+20h]
mov     edx, [esi+18h]
fmul    ds:dbl_1007cf58
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
lea     eax, [edx+ecx*4]
imul    eax, 0ea60h
cdq
mov     edi, eax
mov     ebx, edx
call    __ftol2
sub     edi, eax
sbb     ebx, edx
add     [esi], edi
adc     [esi+4], ebx
xor     cl, cl
cmp     [esi+2bh], cl
jz      short loc_10006ea6
mov     eax, [esi+1ch]
imul    eax, 0ea60h
cdq
sub     [esi], eax
mov     [esi+28h], cl
mov     [esi+29h], cl
sbb     [esi+4], edx
mov     [esi+2bh], cl
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, 1
mov     edi, 7d0h
mov     [ebp+var_4], ebx
jmp     loc_10006dcb
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     esi, ecx
cmp     byte ptr [esi], 2dh
push    edi
mov     edi, eax
mov     ebx, 1
jnz     short loc_10006ede
add     esi, ebx
mov     [ebp+var_4], ebx
jmp     short loc_10006ee5
mov     [ebp+var_4], 0
lea     eax, [ebp+var_10]
push    eax
push    0
push    1fh
push    ebx
push    2
lea     ecx, [ebp+var_c]
push    ecx
push    2dh
push    0ch
push    ebx
push    2
lea     edx, [ebp+var_8]
push    edx
push    2dh
push    270fh
push    0
push    4
push    esi
call    sub_10006b10
add     esp, 40h
cmp     eax, 3
jnz     short loc_10006f80
add     esi, 0ah
jmp     short loc_10006f20
mov     al, [esi]
movzx   ecx, al
test    ds:byte_10076130[ecx], bl
jnz     short loc_10006f31
cmp     al, 54h
jnz     short loc_10006f35
add     esi, ebx
jmp     short loc_10006f20
mov     eax, esi
call    sub_10006c90
test    eax, eax
jz      short loc_10006f49
cmp     byte ptr [esi], 0
jnz     short loc_10006f80
mov     byte ptr [edi+29h], 0
cmp     [ebp+var_4], 0
mov     eax, [ebp+var_8]
mov     byte ptr [edi+2ah], 0
mov     [edi+28h], bl
jz      short loc_10006f5b
neg     eax
cmp     byte ptr [edi+2bh], 0
mov     edx, [ebp+var_c]
mov     [edi+8], eax
mov     eax, [ebp+var_10]
mov     [edi+0ch], edx
mov     [edi+10h], eax
jz      short loc_10006f77
mov     esi, edi
call    sub_10006da0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [eax+8]
mov     eax, [ecx]
sub     esp, 0ch
cmp     dword ptr [eax], 2
push    esi
jl      short loc_10006fb3
mov     ecx, [eax+48h]
test    ecx, ecx
jz      short loc_10006fb3
push    edi
push    eax
call    ecx
add     esp, 8
mov     esi, eax
jmp     short loc_10006fd5
lea     edx, [ebp+var_8]
push    edx
push    eax
mov     eax, [eax+40h]
call    eax
fld     [ebp+var_8]
fmul    ds:dbl_1007cf28
add     esp, 8
mov     esi, eax
call    __ftol2
mov     [edi], eax
mov     [edi+4], edx
test    esi, esi
jnz     short loc_10006fe4
mov     byte ptr [edi+2ah], 1
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    edi
mov     ecx, esi
mov     edi, eax
call    sub_10006ec0
test    eax, eax
jz      short loc_10007076
mov     eax, esi
call    sub_10006c90
test    eax, eax
jz      short loc_10007076
mov     edx, offset anow
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_1000702c
mov     eax, [ebp+arg_0]
call    sub_10006f90
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     eax, esi
test    esi, esi
jz      short loc_10007044
cmp     byte ptr [esi], 0
jz      short loc_1000703d
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10007037
sub     eax, esi
and     eax, 3fffffffh
lea     ecx, [ebp+var_c]
push    ecx
push    esi
mov     dl, 1
mov     ecx, eax
call    sub_1000bd50
add     esp, 8
test    eax, eax
jz      short loc_1000707d
fld     [ebp+var_c]
fmul    ds:dbl_1007cf28
fadd    ds:dbl_1007cf78
call    __ftol2
mov     [edi], eax
mov     [edi+4], edx
mov     byte ptr [edi+2ah], 1
xor     eax, eax
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
cmp     byte ptr [ebx+28h], 0
jnz     loc_1000719e
cmp     byte ptr [ebx+2ah], 0
jnz     short loc_100070bf
mov     eax, 1
mov     dword ptr [ebx+8], 7d0h
mov     [ebx+0ch], eax
mov     [ebx+10h], eax
mov     [ebx+28h], al
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebx]
mov     ecx, [ebx+4]
push    esi
push    edi
push    0
add     eax, 2932e00h
push    5265c00h
adc     ecx, 0
push    ecx
push    eax
call    __alldiv
mov     esi, eax
mov     [ebp+var_8], esi
fild    [ebp+var_8]
fsub    ds:dbl_1007cf50
fdiv    ds:dbl_1007cf48
call    __ftol2_sse
mov     ecx, eax
cdq
and     edx, 3
add     eax, edx
sar     eax, 2
sub     ecx, eax
lea     esi, [ecx+esi+5f5h]
mov     [ebp+var_8], esi
fild    [ebp+var_8]
fsub    ds:dbl_1007cf40
fdiv    ds:dbl_1007cf38
call    __ftol2_sse
mov     ecx, eax
imul    ecx, 8eadh
mov     [ebp+var_8], eax
mov     eax, 51eb851fh
imul    ecx
sar     edx, 5
mov     edi, edx
shr     edi, 1fh
add     edi, edx
mov     edx, esi
sub     edx, edi
mov     [ebp+var_4], edx
fild    [ebp+var_4]
fld     ds:dbl_1007cf30
fdiv    st(1), st
fxch    st(1)
call    __ftol2_sse
mov     [ebp+var_4], eax
fimul   [ebp+var_4]
call    __ftol2_sse
sub     esi, eax
mov     eax, [ebp+var_4]
sub     esi, edi
pop     edi
mov     [ebx+10h], esi
pop     esi
cmp     eax, 0eh
jge     short loc_10007174
dec     eax
jmp     short loc_10007177
add     eax, 0fffffff3h
mov     [ebx+0ch], eax
cmp     eax, 2
mov     eax, [ebp+var_8]
jle     short loc_10007192
add     eax, 0ffffed94h
mov     [ebx+8], eax
mov     byte ptr [ebx+28h], 1
mov     esp, ebp
pop     ebp
retn
add     eax, 0ffffed95h
mov     [ebx+8], eax
mov     byte ptr [ebx+28h], 1
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, eax
cmp     byte ptr [esi+29h], 0
jnz     loc_10007250
call    sub_10006da0
mov     eax, [esi]
mov     ecx, [esi+4]
push    0
add     eax, 2932e00h
push    5265c00h
adc     ecx, 0
push    ecx
push    eax
call    __allrem
mov     [ebp+var_4], eax
fild    [ebp+var_4]
fdiv    ds:dbl_1007cf68
fld     st
call    __ftol2_sse
mov     ecx, eax
mov     eax, 91a2b3c5h
imul    ecx
add     edx, ecx
sar     edx, 0bh
mov     eax, edx
shr     eax, 1fh
add     eax, edx
mov     [esi+14h], eax
imul    eax, 0fffff1f0h
mov     [ebp+var_4], ecx
add     ecx, eax
mov     eax, 88888889h
fisub   [ebp+var_4]
imul    ecx
fstp    qword ptr [esi+20h]
add     edx, ecx
sar     edx, 5
mov     eax, edx
shr     eax, 1fh
add     eax, edx
mov     edx, eax
shl     edx, 4
sub     edx, eax
add     edx, edx
add     edx, edx
sub     ecx, edx
mov     [ebp+var_4], ecx
mov     [esi+18h], eax
mov     byte ptr [esi+29h], 1
fild    [ebp+var_4]
fadd    qword ptr [esi+20h]
fstp    qword ptr [esi+20h]
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 68h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     [ebp+var_30], ecx
mov     [ebp+var_68], eax
xor     eax, eax
mov     esi, edx
mov     ecx, 0bh
lea     edi, [ebp+var_5c]
lea     ebx, [ebp+var_5c]
mov     [ebp+tm.tm_sec], eax
mov     [ebp+tm.tm_min], eax
mov     [ebp+tm.tm_hour], eax
mov     [ebp+tm.tm_mday], eax
mov     [ebp+tm.tm_mon], eax
mov     [ebp+tm.tm_year], eax
mov     [ebp+tm.tm_wday], eax
mov     [ebp+tm.tm_yday], eax
mov     [ebp+tm.tm_isdst], eax
rep movsd
call    sub_10007090
mov     eax, ebx
call    sub_100071b0
mov     edx, [ebp+var_54]
add     edx, 0fffff84dh
cmp     edx, 42h
ja      short loc_100072da
fld     [ebp+var_3c]
fadd    ds:dbl_1007cf78
call    __ftol2_sse
mov     dword ptr [ebp+time+4], eax
fild    dword ptr [ebp+time+4]
xor     edi, edi
jmp     short loc_100072f6
fldz
mov     eax, 1
xor     edi, edi
mov     [ebp+var_54], 7d0h
mov     [ebp+var_50], eax
mov     [ebp+var_4c], eax
mov     [ebp+var_48], edi
mov     [ebp+var_44], edi
lea     esi, [ebp+var_5c]
fstp    [ebp+var_3c]
mov     [ebp+var_40], edi
mov     [ebp+var_32], 0
call    sub_10006da0
mov     ebx, [ebp+var_5c]
push    edi
mov     edi, [ebp+var_58]
push    3e8h
push    edi
push    ebx
call    __alldiv
sub     eax, 18a36940h
sbb     edx, 31h
cmp     dword_10080318, 0
mov     dword ptr [ebp+time], eax
mov     dword ptr [ebp+time+4], edx
jnz     short loc_1000734b
lea     eax, [ebp+time]
push    eax
lea     ecx, [ebp+tm]
push    ecx
call    ds:_localtime64_s
add     esp, 8
test    eax, eax
jz      loc_100073cf
mov     edi, [ebp+var_68]
mov     dword ptr [edi+38h], 1
mov     eax, [edi+8]
add     edi, 8
test    eax, eax
jz      short loc_10007364
mov     eax, [eax+48h]
jmp     short loc_10007369
mov     eax, 3b9aca00h
xor     esi, esi
test    eax, eax
js      short loc_1000737e
nop
cmp     ds:byte_1007956c[esi], 0
jz      short loc_1000737e
inc     esi
cmp     esi, eax
jle     short loc_10007370
lea     ebx, [esi+1]
cmp     esi, eax
jg      short loc_100073b1
push    0
mov     eax, ebx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_100073b1
mov     edx, [edi+4]
push    ebx
push    offset byte_1007956c
push    edx
call    memcpy
add     esp, 0ch
mov     [edi+18h], esi
mov     dword ptr [edi+1ch], 1030202h
mov     ecx, [ebp+var_30]
xor     eax, eax
mov     dword ptr [ecx], 1
xor     edx, edx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+tm.tm_year]
fild    [ebp+tm.tm_sec]
mov     eax, [ebp+tm.tm_mon]
mov     ecx, [ebp+tm.tm_mday]
add     edx, 76ch
fstp    [ebp+var_3c]
inc     eax
mov     [ebp+var_54], edx
mov     edx, [ebp+tm.tm_hour]
mov     [ebp+var_50], eax
mov     eax, [ebp+tm.tm_min]
lea     esi, [ebp+var_5c]
mov     [ebp+var_4c], ecx
mov     [ebp+var_48], edx
mov     [ebp+var_44], eax
mov     dword ptr [ebp-34h], 101h
call    sub_10006da0
mov     eax, [ebp+var_5c]
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_58]
sub     eax, ebx
sbb     edx, edi
mov     dword ptr [ecx], 0
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 70h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
push    edi
lea     edi, [ebp+str1]
xor     esi, esi
mov     [ebp+var_2c], ecx
mov     ebx, edx
mov     [ebp+var_30], 1
sub     edi, eax
lea     esp, [esp+0]
mov     cl, [eax]
test    cl, cl
jz      short loc_10007479
movzx   edx, cl
mov     cl, ds:byte_10076030[edx]
mov     [edi+eax], cl
inc     esi
inc     eax
cmp     esi, 1dh
jl      short loc_10007460
mov     [ebp+esi+str1], 0
movsx   eax, [ebp+str1]
add     eax, 0ffffffd5h
cmp     eax, 4ch
ja      def_10007495
movzx   edx, ds:byte_10007d70[eax]
jmp     ds:jpt_10007495[edx*4]
mov     esi, offset alocaltime
lea     ecx, [ebp+str1]
mov     al, [ecx]
cmp     al, [esi]
jnz     short loc_100074c4
test    al, al
jz      short loc_100074c0
mov     al, [ecx+1]
cmp     al, [esi+1]
jnz     short loc_100074c4
add     ecx, 2
add     esi, 2
test    al, al
jnz     short loc_100074a4
xor     eax, eax
jmp     short loc_100074c9
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     def_10007495
mov     esi, ebx
call    sub_10006da0
mov     eax, [ebp+var_2c]
push    eax
lea     ecx, [ebp+var_30]
mov     edx, ebx
call    sub_10007260
add     esp, 4
add     [ebx], eax
mov     eax, [ebp+var_30]
mov     word ptr [ebx+28h], 0
adc     [ebx+4], edx
mov     byte ptr [ebx+2bh], 0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     esi, offset aunixepoch
lea     eax, [ebp+str1]
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_10007534
test    cl, cl
jz      short loc_10007530
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_10007534
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_10007514
xor     eax, eax
jmp     short loc_10007539
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     short loc_1000756c
cmp     [ebx+2ah], al
jz      short loc_1000756c
mov     ecx, [ebx]
mov     edx, [ebx+4]
push    eax
add     ecx, 0a8c0h
push    15180h
adc     edx, eax
push    edx
push    ecx
call    __alldiv
add     eax, 3e532200h
adc     edx, 0bfc8h
jmp     loc_10007704
mov     esi, offset autc
lea     eax, [ebp+str1]
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_10007594
test    cl, cl
jz      short loc_10007590
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_10007594
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_10007574
xor     eax, eax
jmp     short loc_10007599
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     def_10007495
mov     esi, ebx
call    sub_10006da0
mov     eax, [ebp+var_2c]
push    eax
lea     ecx, [ebp+var_30]
mov     edx, ebx
call    sub_10007260
add     esp, 4
cmp     [ebp+var_30], 0
mov     esi, eax
mov     edi, edx
jnz     def_10007495
sub     [ebx], esi
mov     ecx, [ebp+var_2c]
push    ecx
sbb     [ebx+4], edi
lea     ecx, [ebp+var_30]
mov     edx, ebx
mov     word ptr [ebx+28h], 0
mov     byte ptr [ebx+2bh], 0
call    sub_10007260
add     esp, 4
sub     esi, eax
mov     eax, [ebp+var_30]
sbb     edi, edx
add     [ebx], esi
adc     [ebx+4], edi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    8
lea     edx, [ebp+str1]
push    offset str2
push    edx
call    ds:strncmp
add     esp, 0ch
test    eax, eax
jnz     def_10007495
cmp     [ebp+var_20], 0
lea     eax, [ebp+var_20]
jz      short loc_10007636
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10007630
lea     ecx, [ebp+var_20]
lea     edx, [ebp+var_3c]
sub     eax, ecx
push    edx
and     eax, 3fffffffh
push    ecx
mov     dl, 1
mov     ecx, eax
call    sub_1000bd50
add     esp, 8
test    eax, eax
jz      def_10007495
fld     [ebp+var_3c]
fld     st
call    __ftol2_sse
mov     ecx, eax
mov     [ebp+var_2c], ecx
fild    [ebp+var_2c]
fld     st(1)
fucompp
fnstsw  ax
test    ah, 44h
jp      loc_10007d42
test    ecx, ecx
js      loc_10007d42
fcomp   ds:dbl_1007cfe0
fnstsw  ax
test    ah, 5
jp      def_10007495
call    sub_10007090
mov     eax, ebx
call    sub_100071b0
mov     esi, ebx
mov     word ptr [ebx+2ah], 0
call    sub_10006da0
mov     esi, [ebx]
mov     eax, [ebx+4]
push    0
mov     edx, esi
add     edx, 7b98a00h
push    5265c00h
adc     eax, 0
push    eax
push    edx
call    __alldiv
push    0
push    7
push    edx
push    eax
call    __allrem
mov     edi, eax
mov     eax, [ebp+var_2c]
mov     ecx, edx
cdq
cmp     ecx, edx
jl      short loc_100076ed
jg      short loc_100076e7
cmp     edi, eax
jbe     short loc_100076ed
add     edi, 0fffffff9h
adc     ecx, 0ffffffffh
push    0
sub     eax, edi
push    5265c00h
sbb     edx, ecx
push    edx
push    eax
call    __allmul
add     eax, esi
adc     edx, [ebx+4]
mov     [ebx], eax
mov     [ebx+4], edx
mov     word ptr [ebx+28h], 0
mov     byte ptr [ebx+2bh], 0
mov     [ebp+var_30], 0
mov     eax, [ebp+var_30]
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    9
lea     eax, [ebp+str1]
push    offset astartof
push    eax
call    ds:strncmp
add     esp, 0ch
test    eax, eax
jnz     def_10007495
call    sub_10007090
fldz
xor     edx, edx
fstp    qword ptr [ebx+20h]
mov     byte ptr [ebx+29h], 1
mov     [ebx+18h], edx
mov     [ebx+14h], edx
mov     [ebx+2ah], dx
mov     esi, offset amonth
lea     eax, [ebp+var_1f]
lea     esp, [esp+0]
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_10007790
cmp     cl, dl
jz      short loc_1000778c
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_10007790
add     eax, 2
add     esi, 2
cmp     cl, dl
jnz     short loc_10007770
xor     eax, eax
jmp     short loc_10007795
sbb     eax, eax
sbb     eax, 0ffffffffh
cmp     eax, edx
jnz     short loc_100077b6
mov     dword ptr [ebx+10h], 1
mov     [ebp+var_30], edx
mov     eax, edx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     esi, offset ayear
lea     eax, [ebp+var_1f]
mov     edi, edi
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_100077e0
cmp     cl, dl
jz      short loc_100077dc
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_100077e0
add     eax, 2
add     esi, 2
cmp     cl, dl
jnz     short loc_100077c0
xor     eax, eax
jmp     short loc_100077e5
sbb     eax, eax
sbb     eax, 0ffffffffh
cmp     eax, edx
jnz     short loc_100077fe
call    sub_10007090
mov     eax, 1
mov     [ebx+0ch], eax
mov     [ebx+10h], eax
jmp     loc_10007713
mov     ecx, offset aday
lea     eax, [ebp+var_1f]
mov     bl, [eax]
cmp     bl, [ecx]
jnz     short loc_10007826
cmp     bl, dl
jz      short loc_10007822
mov     bl, [eax+1]
cmp     bl, [ecx+1]
jnz     short loc_10007826
add     eax, 2
add     ecx, 2
cmp     bl, dl
jnz     short loc_10007806
xor     eax, eax
jmp     short loc_1000782b
sbb     eax, eax
sbb     eax, 0ffffffffh
cmp     eax, edx
jnz     def_10007495
mov     [ebp+var_30], edx
mov     eax, edx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     al, [ebp+var_27]
mov     esi, 1
test    al, al
jz      short loc_1000786e
cmp     al, 3ah
jz      short loc_1000786e
movzx   ecx, al
test    ds:byte_10076130[ecx], 1
jnz     short loc_1000786e
mov     al, [ebp+esi+var_27]
inc     esi
test    al, al
jnz     short loc_10007855
lea     edx, [ebp+var_3c]
push    edx
lea     eax, [ebp+str1]
push    eax
mov     dl, 1
mov     ecx, esi
call    sub_1000bd50
add     esp, 8
test    eax, eax
jnz     short loc_100078a1
mov     [ebp+var_30], 1
mov     eax, [ebp+var_30]
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+esi+str1], 3ah
lea     ecx, [ebp+esi+str1]
jnz     loc_10007962
movzx   ecx, [ebp+str1]
test    ds:byte_10076130[ecx], 4
lea     esi, [ebp+str1]
jnz     short loc_100078c3
lea     esi, [ebp+var_27]
push    2ch
lea     edx, [ebp+var_70]
push    0
push    edx
call    memset
add     esp, 0ch
lea     edi, [ebp+var_70]
mov     eax, esi
call    sub_10006c90
test    eax, eax
jnz     def_10007495
mov     esi, edi
call    sub_10006da0
mov     edi, [ebp+var_70]
mov     esi, [ebp+var_6c]
push    0ffffffffh
add     edi, 0fd6cd200h
push    0fad9a400h
adc     esi, 0ffffffffh
push    esi
push    edi
call    __alldiv
push    0
push    5265c00h
push    edx
push    eax
call    __allmul
add     edi, eax
adc     esi, edx
cmp     [ebp+str1], 2dh
mov     [ebp+var_6c], esi
jnz     short loc_1000792e
neg     edi
adc     esi, 0
neg     esi
mov     [ebp+var_6c], esi
mov     esi, ebx
call    sub_10006da0
add     [ebx], edi
mov     eax, [ebp+var_6c]
mov     [ebp+var_30], 0
adc     [ebx+4], eax
mov     eax, [ebp+var_30]
mov     word ptr [ebx+28h], 0
mov     byte ptr [ebx+2bh], 0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
movzx   edx, byte ptr [ecx]
test    ds:byte_10076130[edx], 1
mov     [ebp+var_2c], ecx
jz      short loc_10007982
movzx   eax, byte ptr [ecx+1]
inc     ecx
test    ds:byte_10076130[eax], 1
jnz     short loc_10007971
mov     [ebp+var_2c], ecx
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_10007996
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10007990
sub     eax, ecx
and     eax, 3fffffffh
mov     edi, eax
lea     edx, [edi-3]
cmp     edx, 7
ja      def_10007495
cmp     byte ptr [edi+ecx-1], 73h
jnz     short loc_100079b8
mov     byte ptr [edi+ecx-1], 0
dec     edi
mov     esi, ebx
call    sub_10006da0
fldz
fld     [ebp+var_3c]
mov     [ebp+var_30], 0
fcom    st(1)
fnstsw  ax
fstp    st(1)
test    ah, 5
jp      short loc_100079de
fld     ds:dbl_1007cfd8
jmp     short loc_100079e4
fld     ds:dbl_1007cf78
fst     [ebp+var_44]
cmp     edi, 3
jnz     short loc_10007a53
mov     eax, [ebp+var_2c]
mov     esi, offset aday
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_10007a14
test    cl, cl
jz      short loc_10007a10
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_10007a14
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_100079f4
xor     eax, eax
jmp     short loc_10007a19
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     loc_10007cf7
fxch    st(1)
fmul    ds:dbl_1007cf28
faddp   st(1), st
call    __ftol2
add     [ebx], eax
mov     eax, [ebp+var_30]
mov     word ptr [ebx+28h], 0
adc     [ebx+4], edx
mov     byte ptr [ebx+2bh], 0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     edi, 4
jnz     short loc_10007ac1
mov     edx, [ebp+var_2c]
mov     esi, offset ahour
mov     eax, edx
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_10007a82
test    cl, cl
jz      short loc_10007a7e
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_10007a82
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_10007a62
xor     eax, eax
jmp     short loc_10007a87
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     loc_10007c53
fxch    st(1)
fmul    ds:dbl_1007cfd0
faddp   st(1), st
call    __ftol2
add     [ebx], eax
mov     eax, [ebp+var_30]
mov     word ptr [ebx+28h], 0
adc     [ebx+4], edx
mov     byte ptr [ebx+2bh], 0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     edi, 6
jnz     loc_10007b95
mov     edx, [ebp+var_2c]
mov     esi, offset aminute
mov     eax, edx
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_10007af4
test    cl, cl
jz      short loc_10007af0
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_10007af4
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_10007ad4
xor     eax, eax
jmp     short loc_10007af9
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     short loc_10007b2f
fxch    st(1)
fmul    ds:dbl_1007cfc8
faddp   st(1), st
call    __ftol2
add     [ebx], eax
mov     eax, [ebp+var_30]
mov     word ptr [ebx+28h], 0
adc     [ebx+4], edx
mov     byte ptr [ebx+2bh], 0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     esi, offset asecond
mov     eax, edx
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_10007b56
test    cl, cl
jz      short loc_10007b52
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_10007b56
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_10007b36
xor     eax, eax
jmp     short loc_10007b5b
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     loc_10007cf7
fxch    st(1)
fmul    ds:dbl_1007cf68
faddp   st(1), st
call    __ftol2
add     [ebx], eax
mov     eax, [ebp+var_30]
mov     word ptr [ebx+28h], 0
adc     [ebx+4], edx
mov     byte ptr [ebx+2bh], 0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
fstp    st(1)
fstp    st
cmp     edi, 5
jnz     loc_10007cfb
mov     eax, [ebp+var_2c]
mov     esi, offset amonth
lea     ebx, [ebx+0]
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_10007bd0
test    cl, cl
jz      short loc_10007bcc
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_10007bd0
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_10007bb0
xor     eax, eax
jmp     short loc_10007bd5
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     loc_10007cfb
call    sub_10007090
mov     eax, ebx
call    sub_100071b0
fld     [ebp+var_3c]
call    __ftol2_sse
mov     edi, eax
add     [ebx+0ch], edi
mov     ecx, [ebx+0ch]
mov     eax, 2aaaaaabh
lea     edx, [ecx-1]
test    ecx, ecx
jg      short loc_10007c08
lea     edx, [ecx-0ch]
imul    edx
sar     edx, 1
mov     eax, edx
shr     eax, 1fh
add     eax, edx
add     [ebx+8], eax
lea     eax, [eax+eax*2]
add     eax, eax
add     eax, eax
sub     ecx, eax
mov     esi, ebx
mov     [ebx+0ch], ecx
mov     byte ptr [ebx+2ah], 0
call    sub_10006da0
mov     [ebp+var_2c], edi
fild    [ebp+var_2c]
fld     st
fld     [ebp+var_3c]
fld     st
fucomp  st(2)
fnstsw  ax
fstp    st(1)
test    ah, 44h
jnp     loc_10007d20
fsubrp  st(1), st
fmul    ds:dbl_1007cfc0
jmp     short loc_10007cc6
fstp    st
mov     esi, offset ayear
mov     eax, edx
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_10007c7c
test    cl, cl
jz      short loc_10007c78
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_10007c7c
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_10007c5c
xor     eax, eax
jmp     short loc_10007c81
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     short loc_10007cf9
call    __ftol2_sse
mov     esi, eax
mov     [ebp+var_2c], esi
call    sub_10007090
mov     eax, ebx
call    sub_100071b0
add     [ebx+8], esi
mov     esi, ebx
mov     byte ptr [ebx+2ah], 0
call    sub_10006da0
fild    [ebp+var_2c]
fld     st
fld     [ebp+var_3c]
fld     st
fucomp  st(2)
fnstsw  ax
fstp    st(1)
test    ah, 44h
jnp     short loc_10007d20
fsubrp  st(1), st
fmul    ds:dbl_1007cfb8
fmul    ds:dbl_1007cf28
fadd    [ebp+var_44]
call    __ftol2
add     [ebx], eax
mov     eax, [ebp+var_30]
mov     word ptr [ebx+28h], 0
adc     [ebx+4], edx
mov     byte ptr [ebx+2bh], 0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
fstp    st(1)
fstp    st
mov     [ebp+var_30], 1
mov     eax, [ebp+var_30]
mov     word ptr [ebx+28h], 0
mov     byte ptr [ebx+2bh], 0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_30]
fstp    st(1)
fstp    st
mov     word ptr [ebx+28h], 0
mov     byte ptr [ebx+2bh], 0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
fstp    st
mov     ecx, [ebp+var_8]
mov     eax, [ebp+var_30]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_c]
push    edi
push    2ch
push    0
push    esi
call    memset
add     esp, 0ch
cmp     [ebp+arg_4], 0
jnz     short loc_10007e36
mov     eax, [ebp+arg_0]
mov     ecx, [eax+8]
mov     eax, [ecx]
cmp     dword ptr [eax], 2
jl      short loc_10007e01
mov     ecx, [eax+48h]
test    ecx, ecx
jz      short loc_10007e01
push    esi
push    eax
call    ecx
add     esp, 8
mov     edi, eax
jmp     short loc_10007e25
lea     edx, [esp+18h+var_8]
push    edx
push    eax
mov     eax, [eax+40h]
call    eax
fld     [esp+20h+var_8]
fmul    ds:dbl_1007cf28
add     esp, 8
mov     edi, eax
call    __ftol2
mov     [esi], eax
mov     [esi+4], edx
test    edi, edi
jnz     short loc_10007e6a
mov     byte ptr [esi+2ah], 1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_8]
mov     edi, [ecx]
movzx   eax, byte ptr [edi+1eh]
cmp     eax, 2
jz      short loc_10007e76
cmp     eax, 1
jz      short loc_10007e76
mov     bl, 1
call    sub_100253e0
mov     ecx, eax
test    ecx, ecx
jz      short loc_10007e6a
mov     edx, [ebp+arg_0]
mov     eax, esi
push    edx
mov     esi, ecx
call    sub_10006ff0
add     esp, 4
test    eax, eax
jz      short loc_10007ecd
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   eax, word ptr [edi+1ch]
test    al, 8
jz      short loc_10007e83
fld     qword ptr [edi+8]
jmp     short loc_10007eb1
test    al, 4
jz      short loc_10007e8c
fild    qword ptr [edi+10h]
jmp     short loc_10007eb1
fldz
test    al, 12h
jz      short loc_10007eb1
mov     ecx, [edi+4]
fstp    [esp+18h+var_8]
mov     dl, [edi+1fh]
lea     eax, [esp+18h+var_8]
push    eax
push    ecx
mov     ecx, [edi+18h]
call    sub_1000bd50
fld     [esp+20h+var_8]
add     esp, 8
fmul    ds:dbl_1007cf28
fadd    ds:dbl_1007cf78
call    __ftol2
mov     [esi], eax
mov     [esi+4], edx
mov     byte ptr [esi+2ah], 1
jmp     short loc_10007ed0
mov     esi, [ebp+arg_c]
mov     ebx, 1
cmp     [ebp+arg_4], ebx
jle     loc_10007f77
mov     edi, edi
mov     edx, [ebp+arg_8]
mov     edi, [edx+ebx*4]
test    edi, edi
jz      short loc_10007e6a
movzx   ecx, word ptr [edi+1ch]
test    cl, 1
jnz     loc_10007e6a
mov     eax, ecx
shr     eax, 3
and     eax, 2
or      eax, ecx
mov     [edi+1ch], ax
test    eax, 4000h
jz      short loc_10007f13
mov     eax, edi
call    sub_10024590
test    byte ptr [edi+1ch], 2
jz      short loc_10007f33
cmp     byte ptr [edi+1fh], 1
jz      short loc_10007f2a
push    1
push    edi
call    sub_1000b360
add     esp, 8
mov     eax, edi
call    sub_100245f0
jmp     short loc_10007f42
mov     esi, 1
mov     eax, edi
call    sub_10024640
mov     esi, [ebp+arg_c]
cmp     byte ptr [edi+1fh], 1
jnz     loc_10007e6a
mov     edi, [edi+4]
test    edi, edi
jz      loc_10007e6a
mov     ecx, [ebp+arg_0]
push    edi
mov     edx, esi
call    sub_10007430
add     esp, 4
test    eax, eax
jnz     loc_10007e6a
inc     ebx
cmp     ebx, [ebp+arg_4]
jl      loc_10007ee0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 38h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+38h+var_4], eax
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    esi
push    edi
mov     edi, [ebp+arg_0]
lea     ecx, [esp+40h+var_30]
push    ecx
push    eax
push    edx
push    edi
call    sub_10007dc0
add     esp, 10h
test    eax, eax
jnz     short loc_10007fd7
lea     esi, [esp+40h+var_30]
call    sub_10006da0
fild    [esp+40h+var_30]
sub     esp, 8
lea     esi, [edi+8]
fdiv    ds:dbl_1007cf28
fstp    [esp+48h+var_48]
call    sub_10024bc0
add     esp, 8
mov     ecx, [esp+40h+var_4]
pop     edi
pop     esi
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 9ch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+9ch+var_4], eax
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
lea     ecx, [esp+0a8h+var_9c]
push    ecx
push    eax
push    edx
push    edi
call    sub_10007dc0
add     esp, 10h
test    eax, eax
jnz     loc_10008100
lea     ebx, [esp+0a8h+var_9c]
call    sub_10007090
mov     eax, ebx
call    sub_100071b0
fld     [esp+0a8h+var_7c]
call    __ftol2_sse
mov     ecx, [esp+0a8h+var_88]
mov     edx, [esp+0a8h+var_8c]
push    eax
mov     eax, [esp+0ach+var_84]
push    eax
mov     eax, [esp+0b0h+var_90]
push    ecx
mov     ecx, [esp+0b4h+var_94]
push    edx
push    eax
push    ecx
push    offset a04d02d02d02d02
lea     edx, [esp+0c4h+src]
push    edx
push    64h
call    sub_1000b050
mov     eax, [edi+8]
lea     ebx, [edi+8]
add     esp, 24h
test    eax, eax
jz      short loc_10008094
mov     ecx, [eax+48h]
jmp     short loc_10008099
mov     ecx, 3b9aca00h
xor     esi, esi
test    ecx, ecx
js      short loc_100080ac
nop
cmp     [esp+esi+0a8h+src], 0
jz      short loc_100080ac
inc     esi
cmp     esi, ecx
jle     short loc_100080a0
lea     eax, [esi+1]
cmp     esi, ecx
jg      short loc_100080f7
push    0
mov     edi, ebx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10008100
mov     ecx, [ebx+4]
lea     eax, [esi+1]
push    eax
lea     eax, [esp+0ach+src]
push    eax
push    ecx
call    memcpy
add     esp, 0ch
mov     [ebx+18h], esi
mov     dword ptr [ebx+1ch], 1030202h
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+9ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    edi
call    sub_100298c0
add     esp, 4
mov     ecx, [esp+0a8h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0a4h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+0a4h+var_4], eax
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
lea     ecx, [esp+0b0h+var_9c]
push    ecx
push    eax
push    edx
push    edi
mov     [esp+0c0h+var_a0], edi
call    sub_10007dc0
add     esp, 10h
test    eax, eax
jnz     loc_10008211
lea     eax, [esp+0b0h+var_9c]
call    sub_100071b0
fld     [esp+0b0h+var_7c]
call    __ftol2_sse
mov     ecx, [esp+0b0h+var_88]
push    eax
mov     eax, [esp+0b4h+var_84]
push    eax
push    ecx
push    offset a02d02d02d
lea     edx, [esp+0c0h+src]
push    edx
push    64h
call    sub_1000b050
mov     eax, [edi+8]
add     edi, 8
add     esp, 18h
test    eax, eax
jz      short loc_100081a2
mov     eax, [eax+48h]
jmp     short loc_100081a7
mov     eax, 3b9aca00h
xor     esi, esi
test    eax, eax
js      short loc_100081bc
lea     ecx, [ecx+0]
cmp     [esp+esi+0b0h+src], 0
jz      short loc_100081bc
inc     esi
cmp     esi, eax
jle     short loc_100081b0
lea     ebx, [esi+1]
cmp     esi, eax
jg      short loc_10008204
push    0
mov     eax, ebx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10008211
mov     ecx, [edi+4]
push    ebx
lea     eax, [esp+0b4h+src]
push    eax
push    ecx
call    memcpy
add     esp, 0ch
mov     [edi+18h], esi
mov     dword ptr [edi+1ch], 1030202h
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0a4h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+0b0h+var_a0]
push    eax
call    sub_100298c0
add     esp, 4
mov     ecx, [esp+0b0h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 94h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    edi
mov     edi, [ebp+arg_0]
lea     ecx, [ebp+var_94]
push    ecx
push    eax
push    edx
push    edi
call    sub_10007dc0
add     esp, 10h
test    eax, eax
jnz     loc_10008313
push    ebx
lea     ebx, [ebp+var_94]
call    sub_10007090
mov     eax, [ebp+var_84]
mov     ecx, [ebp+var_88]
mov     edx, [ebp+var_8c]
push    eax
push    ecx
push    edx
push    offset a04d02d02d
lea     eax, [ebp+src]
push    eax
push    64h
call    sub_1000b050
mov     eax, [edi+8]
lea     ebx, [edi+8]
add     esp, 18h
test    eax, eax
jz      short loc_100082aa
mov     ecx, [eax+48h]
jmp     short loc_100082af
mov     ecx, 3b9aca00h
push    esi
xor     esi, esi
test    ecx, ecx
js      short loc_100082c2
cmp     [ebp+esi+src], 0
jz      short loc_100082c2
inc     esi
cmp     esi, ecx
jle     short loc_100082b6
lea     eax, [esi+1]
cmp     esi, ecx
jg      short loc_10008308
push    0
mov     edi, ebx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10008311
mov     edx, [ebx+4]
lea     eax, [esi+1]
push    eax
lea     ecx, [ebp+src]
push    ecx
push    edx
call    memcpy
add     esp, 0ch
mov     [ebx+18h], esi
pop     esi
mov     dword ptr [ebx+1ch], 1030202h
pop     ebx
pop     edi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    edi
call    sub_100298c0
add     esp, 4
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     edi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 0f4h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+0f4h+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [esi]
mov     bl, 1
mov     [esp+100h+var_d0], eax
call    sub_100253e0
mov     ebx, eax
mov     [esp+100h+var_d4], ebx
test    ebx, ebx
jz      def_100083c3
mov     edx, [ebp+arg_4]
lea     ecx, [esp+100h+var_9c]
push    ecx
add     esi, 4
push    esi
mov     esi, [esp+108h+var_d0]
dec     edx
push    edx
push    esi
call    sub_10007dc0
add     esp, 10h
test    eax, eax
jnz     def_100083c3
lea     eax, [esi+8]
mov     esi, [eax]
mov     [esp+100h+var_cc], eax
xor     eax, eax
xor     edi, edi
lea     ecx, [eax+1]
cmp     [ebx], al
jz      short loc_100083f8
cmp     byte ptr [eax+ebx], 25h
jnz     short loc_100083e0
movsx   edx, byte ptr [eax+ebx+1]
add     edx, 0ffffffdbh
cmp     edx, 52h
ja      def_100083c3
movzx   edx, ds:byte_100087b0[edx]
jmp     ds:jpt_100083c3[edx*4]
add     ecx, 1
jmp     short loc_100083dc
add     ecx, 8
jmp     short loc_100083dc
add     ecx, 3
jmp     short loc_100083dc
add     ecx, 32h
adc     edi, 0
inc     eax
inc     eax
add     ecx, 1
adc     edi, 0
cmp     byte ptr [eax+ebx], 0
jnz     short loc_100083a5
test    edi, edi
ja      short loc_10008405
jb      short loc_100083f8
cmp     ecx, 64h
jnb     short loc_10008405
lea     edi, [esp+100h+src]
mov     [esp+100h+var_d8], edi
jmp     short loc_10008450
mov     eax, [esi+48h]
cdq
cmp     edi, edx
jb      short loc_1000841d
ja      short loc_10008413
cmp     ecx, eax
jbe     short loc_1000841d
mov     eax, [esp+100h+var_d0]
push    eax
jmp     loc_1000877a
call    sub_10009a40
mov     [esp+100h+var_d8], eax
test    eax, eax
jnz     short loc_1000844c
mov     ecx, [esp+100h+var_d0]
push    ecx
call    sub_10029950
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0f4h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     edi, [esp+100h+var_d8]
lea     esi, [esp+100h+var_9c]
call    sub_10006da0
mov     ebx, esi
call    sub_10007090
mov     eax, esi
call    sub_100071b0
mov     eax, [esp+100h+var_d4]
xor     ebx, ebx
cmp     [eax], bl
jz      loc_10008745
mov     ecx, eax
mov     [esp+100h+var_d4], ecx
jmp     short loc_10008480
mov     al, [ecx]
fld     ds:dbl_1007cfe8
cmp     al, 25h
jz      short loc_10008495
mov     [ebx+edi], al
inc     ebx
jmp     loc_10008731
mov     edx, 1
mov     al, [ecx+edx]
add     ecx, edx
mov     [esp+100h+var_d9], al
movsx   eax, al
add     eax, 0ffffffb8h
mov     [esp+100h+var_d4], ecx
cmp     eax, 2fh
ja      def_100084bd
movzx   eax, ds:byte_10008834[eax]
jmp     ds:jpt_100084bd[eax*4]
mov     ecx, [esp+100h+var_8c]
fstp    st
push    ecx
push    offset a02d
lea     edx, [ebx+edi]
push    edx
push    3
call    sub_1000b050
add     esp, 10h
add     ebx, 2
jmp     loc_10008733
fld     [esp+100h+var_7c]
fld     st
fxch    st(1)
fcomp   st(2)
fnstsw  ax
test    ah, 41h
jnz     short loc_100084fe
fstp    st
jmp     short loc_10008500
fstp    st(1)
sub     esp, 8
fstp    [esp+108h+var_108]
push    offset a063f
lea     esi, [ebx+edi]
push    esi
push    7
call    sub_1000b050
add     esp, 14h
mov     ecx, esi
call    sub_1000ba20
add     ebx, eax
jmp     loc_10008733
mov     eax, [esp+100h+var_88]
fstp    st
push    eax
push    offset a02d
lea     ecx, [ebx+edi]
push    ecx
push    3
call    sub_1000b050
add     esp, 10h
add     ebx, 2
jmp     loc_10008733
mov     ecx, 0bh
fstp    st
lea     esi, [esp+100h+var_9c]
lea     edi, [esp+100h+var_c8]
rep movsd
lea     esi, [esp+100h+var_c8]
mov     [esp+100h+var_9e], 0
mov     [esp+100h+var_bc], edx
mov     [esp+100h+var_b8], edx
call    sub_10006da0
mov     edi, dword ptr [esp+100h+var_9c]
mov     eax, dword ptr [esp+100h+var_9c+4]
mov     edx, edi
sub     edx, [esp+100h+var_c8]
push    0
sbb     eax, [esp+104h+var_c4]
add     edx, 2932e00h
push    5265c00h
adc     eax, 0
push    eax
push    edx
call    __alldiv
cmp     [esp+100h+var_d9], 57h
mov     esi, eax
jnz     short loc_10008604
mov     eax, dword ptr [esp+100h+var_9c+4]
push    0
add     edi, 2932e00h
push    5265c00h
adc     eax, 0
push    eax
push    edi
call    __alldiv
push    0
push    7
push    edx
push    eax
call    __allrem
sub     esi, eax
add     esi, 7
mov     eax, 92492493h
imul    esi
add     edx, esi
sar     edx, 2
mov     ecx, edx
shr     ecx, 1fh
add     ecx, edx
mov     edx, [esp+100h+var_d8]
push    ecx
push    offset a02d
lea     eax, [ebx+edx]
push    eax
push    3
call    sub_1000b050
mov     edi, [esp+110h+var_d8]
add     esp, 10h
add     ebx, 2
jmp     loc_10008733
mov     ecx, [esp+100h+var_d8]
inc     esi
push    esi
push    offset a03d
lea     edx, [ebx+ecx]
push    edx
push    4
call    sub_1000b050
mov     edi, [esp+110h+var_d8]
add     esp, 10h
add     ebx, 3
jmp     loc_10008733
fstp    st
sub     esp, 8
fild    [esp+108h+var_9c]
lea     esi, [ebx+edi]
fdiv    ds:dbl_1007cf28
fstp    [esp+108h+var_108]
push    offset a16g
push    esi
push    14h
jmp     loc_10008511
mov     eax, [esp+100h+var_90]
fstp    st
push    eax
push    offset a02d
lea     ecx, [ebx+edi]
push    ecx
push    3
call    sub_1000b050
add     esp, 10h
add     ebx, 2
jmp     loc_10008733
mov     edx, [esp+100h+var_84]
fstp    st
push    edx
push    offset a02d
lea     eax, [ebx+edi]
push    eax
push    3
call    sub_1000b050
add     esp, 10h
add     ebx, 2
jmp     loc_10008733
mov     ecx, dword ptr [esp+100h+var_9c+4]
fstp    st
mov     edx, dword ptr [esp+100h+var_9c]
push    0
push    3e8h
push    ecx
push    edx
lea     esi, [ebx+edi]
call    __alldiv
sub     eax, 18a36940h
sbb     edx, 31h
push    edx
push    eax
push    offset alld
push    esi
push    1eh
jmp     loc_10008511
fstp    st
fld     [esp+100h+var_7c]
call    __ftol2_sse
push    eax
jmp     short loc_10008674
mov     ecx, dword ptr [esp+100h+var_9c]
fstp    st
mov     edx, dword ptr [esp+100h+var_9c+4]
push    0
add     ecx, 7b98a00h
push    5265c00h
adc     edx, 0
push    edx
push    ecx
call    __alldiv
push    0
push    7
push    edx
push    eax
call    __allrem
add     al, 30h
mov     [ebx+edi], al
inc     ebx
jmp     short loc_10008733
mov     eax, [esp+100h+var_94]
fstp    st
push    eax
push    offset a04d
lea     esi, [ebx+edi]
push    esi
push    5
call    sub_1000b050
add     esp, 10h
mov     ecx, esi
call    sub_1000ba20
add     ebx, eax
jmp     short loc_10008733
mov     byte ptr [ebx+edi], 25h
add     ebx, edx
fstp    st
mov     ecx, [esp+100h+var_d4]
inc     ecx
cmp     byte ptr [ecx], 0
mov     [esp+100h+var_d4], ecx
jnz     loc_10008480
lea     ecx, [esp+100h+src]
mov     byte ptr [ebx+edi], 0
cmp     edi, ecx
jnz     short loc_10008759
or      eax, 0ffffffffh
jmp     short loc_1000875e
mov     eax, offset sub_10009760
mov     edx, [esp+100h+var_cc]
push    1
push    edi
or      ecx, 0ffffffffh
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short def_100083c3
mov     edx, [esp+100h+var_d0]
push    edx
call    sub_100298c0
add     esp, 4
mov     ecx, [esp+100h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    0
push    0
push    eax
call    sub_10008120
add     esp, 0ch
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    0
push    0
push    eax
call    sub_10008230
add     esp, 0ch
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    0
push    0
push    eax
call    sub_10008000
add     esp, 0ch
pop     ebp
retn
push    ebx
push    esi
push    edi
mov     esi, offset dword_10080320
mov     ecx, [esi+18h]
mov     eax, ecx
test    ecx, ecx
jnz     short loc_100088e5
xor     ebx, ebx
jmp     short loc_100088ff
cmp     byte ptr [ecx], 0
jz      short loc_100088f6
lea     ebx, [ebx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100088f0
sub     eax, ecx
and     eax, 3fffffffh
mov     ebx, eax
movzx   eax, byte ptr [ecx]
movzx   eax, ds:byte_10076030[eax]
add     eax, ebx
cdq
mov     edi, 17h
idiv    edi
push    ebx
push    ecx
mov     edi, edx
mov     eax, edi
mov     edx, offset dword_100814b8
call    sub_100446b0
add     esp, 8
test    eax, eax
jz      short loc_10008935
mov     ecx, [eax+8]
mov     [esi+8], ecx
mov     [eax+8], esi
jmp     short loc_1000894d
mov     edx, dword_100814b8[edi*4]
mov     dword ptr [esi+8], 0
mov     [esi+1ch], edx
mov     dword_100814b8[edi*4], esi
add     esi, 24h
cmp     esi, offset off_10080440
jl      short loc_100088d8
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esi]
xor     eax, eax
test    ecx, ecx
jz      short locret_10008977
mov     eax, [ecx+4]
push    esi
call    eax
add     esp, 4
mov     dword ptr [esi], 0
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     edx, [ebp+arg_c]
mov     ecx, [eax]
push    edx
mov     edx, [ebp+arg_8]
push    edx
mov     edx, [ebp+arg_4]
push    edx
mov     edx, [ebp+arg_0]
push    edx
push    eax
mov     eax, [ecx+8]
call    eax
add     esp, 14h
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_c]
mov     ecx, [eax]
push    edx
mov     edx, [ebp+arg_8]
push    edx
mov     edx, [ebp+arg_4]
push    edx
mov     edx, [ebp+arg_0]
push    edx
push    eax
mov     eax, [ecx+0ch]
call    eax
add     esp, 14h
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
mov     ecx, [eax]
push    edx
mov     edx, [ebp+arg_0]
push    edx
push    eax
mov     eax, [ecx+10h]
call    eax
add     esp, 0ch
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
cmp     dword ptr [eax], 2
push    edi
jl      short loc_10008a0f
mov     ecx, [eax+48h]
test    ecx, ecx
jz      short loc_10008a0f
push    esi
push    eax
call    ecx
add     esp, 8
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     edx, [eax+40h]
lea     ecx, [ebp+var_8]
push    ecx
push    eax
call    edx
fld     [ebp+var_8]
fmul    ds:dbl_1007cf28
add     esp, 8
mov     edi, eax
call    __ftol2
mov     [esi], eax
mov     eax, edi
mov     [esi+4], edx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebx+4]
push    edi
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10008a9e
push    edi
push    0
push    esi
call    memset
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_0]
mov     edx, [ebx+18h]
add     esp, 0ch
push    eax
mov     eax, [ebp+arg_8]
and     eax, 87f7fh
push    eax
push    esi
push    ecx
push    ebx
call    edx
mov     edi, eax
add     esp, 14h
test    edi, edi
jz      short loc_10008a93
push    esi
call    sub_10009770
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     [eax], esi
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
pop     edi
mov     eax, 7
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
call    sub_1006edd0
test    eax, eax
jnz     short loc_10008acd
push    0ah
call    sub_100094a0
add     esp, 4
test    eax, eax
jnz     short loc_10008ad6
mov     eax, 7
mov     esp, ebp
pop     ebp
retn
push    eax
call    sub_10009770
add     esp, 4
call    sub_1000fdc0
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
call    sub_1006edd0
test    eax, eax
jz      short loc_10008b00
xor     eax, eax
pop     ebp
retn
cmp     dword_10080234, 0
push    ebx
push    esi
jnz     short loc_10008b0f
xor     ebx, ebx
jmp     short loc_10008b2a
push    2
call    dword_10080274
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10008b2a
push    ebx
call    dword_1008027c
add     esp, 4
mov     eax, dword_100816b8
mov     esi, eax
test    eax, eax
jz      short loc_10008b81
push    edi
mov     edi, [ebp+arg_0]
lea     esp, [esp+0]
test    edi, edi
jz      short loc_10008b80
mov     ecx, [esi+10h]
mov     eax, edi
lea     esp, [esp+0]
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_10008b70
test    dl, dl
jz      short loc_10008b6c
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_10008b70
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_10008b50
xor     eax, eax
jmp     short loc_10008b75
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jz      short loc_10008b80
mov     esi, [esi+0ch]
test    esi, esi
jnz     short loc_10008b40
pop     edi
test    ebx, ebx
jz      short loc_10008b8f
push    ebx
call    dword_10080284
add     esp, 4
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn
test    edx, edx
jz      short locret_10008be0
mov     ecx, dword_100816b8
cmp     ecx, edx
jnz     short loc_10008bb7
mov     eax, [edx+0ch]
mov     dword_100816b8, eax
retn
test    ecx, ecx
jz      short locret_10008be0
cmp     dword ptr [ecx+0ch], 0
lea     eax, [ecx+0ch]
jz      short loc_10008bd5
mov     eax, [eax]
cmp     eax, edx
jz      short loc_10008bd5
mov     ecx, eax
cmp     dword ptr [ecx+0ch], 0
lea     eax, [ecx+0ch]
jnz     short loc_10008bc4
cmp     [ecx+0ch], edx
jnz     short locret_10008be0
mov     edx, [edx+0ch]
mov     [ecx+0ch], edx
retn
push    ebp
mov     ebp, esp
call    sub_1006edd0
test    eax, eax
jnz     short loc_10008c64
push    edi
cmp     dword_10080234, eax
jnz     short loc_10008c09
xor     edi, edi
jmp     short loc_10008c24
push    2
call    dword_10080274
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_10008c24
push    edi
call    dword_1008027c
add     esp, 4
push    esi
mov     esi, [ebp+arg_0]
mov     edx, esi
call    sub_10008ba0
cmp     [ebp+arg_4], 0
mov     eax, dword_100816b8
jnz     short loc_10008c49
test    eax, eax
jz      short loc_10008c49
mov     ecx, [eax+0ch]
mov     [esi+0ch], ecx
mov     [eax+0ch], esi
jmp     short loc_10008c52
mov     [esi+0ch], eax
mov     dword_100816b8, esi
pop     esi
test    edi, edi
jz      short loc_10008c61
push    edi
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     dword_10080234, 0
push    esi
jnz     short loc_10008c81
xor     esi, esi
jmp     short loc_10008c9c
push    2
call    dword_10080274
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10008c9c
push    esi
call    dword_1008027c
add     esp, 4
mov     edx, [ebp+arg_0]
test    edx, edx
jz      short loc_10008ce0
mov     ecx, dword_100816b8
cmp     ecx, edx
jnz     short loc_10008cb7
mov     eax, [edx+0ch]
mov     dword_100816b8, eax
jmp     short loc_10008ce0
test    ecx, ecx
jz      short loc_10008ce0
cmp     dword ptr [ecx+0ch], 0
lea     eax, [ecx+0ch]
jz      short loc_10008cd5
mov     eax, [eax]
cmp     eax, edx
jz      short loc_10008cd5
mov     ecx, eax
cmp     dword ptr [ecx+0ch], 0
lea     eax, [ecx+0ch]
jnz     short loc_10008cc4
cmp     [ecx+0ch], edx
jnz     short loc_10008ce0
mov     edx, [edx+0ch]
mov     [ecx+0ch], edx
test    esi, esi
jz      short loc_10008cee
push    esi
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
add     edi, 7
and     edi, 0fffffff8h
lea     eax, [edi+8]
push    eax
call    ds:malloc
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10008d30
mov     eax, edi
cdq
mov     [esi], eax
pop     edi
mov     [esi+4], edx
lea     eax, [esi+8]
pop     esi
pop     ebp
retn
push    edi
push    offset afailedtoalloca
push    7
call    sub_1000b150
add     esp, 0ch
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
add     eax, 0fffffff8h
push    eax
call    ds:free
add     esp, 4
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jnz     short loc_10008d7c
pop     ebp
retn
mov     eax, [eax-8]
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
add     eax, 8
push    eax
lea     edi, [ebx-8]
push    edi
call    ds:realloc
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_10008dc4
mov     eax, [ebp+arg_4]
cdq
mov     [esi], eax
pop     edi
mov     [esi+4], edx
lea     eax, [esi+8]
pop     esi
pop     ebx
pop     ebp
retn
test    ebx, ebx
jnz     short loc_10008dcc
xor     edi, edi
jmp     short loc_10008dce
mov     edi, [edi]
mov     ecx, [ebp+arg_4]
push    ecx
push    edi
push    offset afailedmemoryre
push    7
call    sub_1000b150
add     esp, 10h
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
add     eax, 7
and     eax, 0fffffff8h
pop     ebp
retn
cmp     dword_10080274, 0
jnz     short loc_10008e6b
cmp     dword_10080234, 0
mov     eax, offset off_1007632c
jnz     short loc_10008e1c
mov     eax, offset off_10076308
mov     ecx, [eax]
mov     edx, [eax+4]
mov     dword_1008026c, ecx
mov     ecx, [eax+0ch]
mov     dword_10080270, edx
mov     edx, [eax+10h]
mov     dword_10080278, ecx
mov     ecx, [eax+14h]
mov     dword_1008027c, edx
mov     edx, [eax+18h]
mov     dword_10080280, ecx
mov     ecx, [eax+1ch]
mov     dword_10080284, edx
mov     edx, [eax+20h]
mov     eax, [eax+8]
mov     dword_10080288, ecx
mov     dword_1008028c, edx
mov     dword_10080274, eax
jmp     dword_1008026c
push    ebp
mov     ebp, esp
call    sub_1006edd0
test    eax, eax
jz      short loc_10008e90
xor     eax, eax
pop     ebp
retn
pop     ebp
jmp     dword_10080274
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10008eb4
push    eax
call    dword_10080278
add     esp, 4
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10008ed4
push    eax
call    dword_1008027c
add     esp, 4
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10008ef6
push    eax
call    dword_10080280
add     esp, 4
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10008f14
push    eax
call    dword_10080284
add     esp, 4
pop     ebp
retn
mov     eax, 8
retn
xor     eax, eax
retn
push    0
push    1
push    offset destination
call    ds:interlockedcompareexchange
test    eax, eax
jnz     short loc_10008f7d
push    esi
push    edi
mov     edi, ds:initializecriticalsection
mov     esi, offset criticalsection
push    esi
call    edi
add     esi, 1ch
cmp     esi, offset destination
jl      short loc_10008f60
pop     edi
mov     dword_100816c4, 1
pop     esi
xor     eax, eax
retn
cmp     dword_100816c4, 0
jnz     short loc_10008f97
push    1
call    off_100806b4
cmp     dword_100816c4, 0
jz      short loc_10008f86
xor     eax, eax
retn
push    1
push    0
push    offset destination
call    ds:interlockedcompareexchange
cmp     eax, 1
jnz     short loc_10008fea
cmp     dword_100816c4, eax
jnz     short loc_10008fea
push    esi
push    edi
mov     edi, ds:deletecriticalsection
mov     esi, offset criticalsection
lea     esp, [esp+0]
push    esi
call    edi
add     esi, 1ch
cmp     esi, offset destination
jl      short loc_10008fd0
pop     edi
mov     dword_100816c4, 0
pop     esi
xor     eax, eax
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
js      short loc_10009036
cmp     eax, 1
jg      short loc_10009036
push    esi
push    1ch
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10009031
xor     eax, eax
mov     [esi], eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
mov     [esi+10h], eax
mov     [esi+14h], eax
mov     [esi+18h], eax
test    esi, esi
jz      short loc_10009031
push    esi
call    ds:initializecriticalsection
mov     eax, esi
pop     esi
pop     ebp
retn
add     eax, 0fffffffeh
lea     ecx, ds:0[eax*8]
sub     ecx, eax
lea     eax, criticalsection.debuginfo[ecx*4]
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+lpcriticalsection]
push    esi
call    ds:deletecriticalsection
push    esi
call    sub_10009770
add     esp, 4
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+lpcriticalsection]
push    eax
call    ds:entercriticalsection
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+lpcriticalsection]
push    eax
call    ds:leavecriticalsection
pop     ebp
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, dword_10081774
test    edi, edi
jz      short loc_100090ce
push    edi
call    dword_1008027c
mov     edi, dword_10081774
add     esp, 4
mov     ecx, [ebp+arg_8]
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
mov     dword_10081780, eax
mov     dword_10081784, 0
mov     dword_10081778, esi
mov     dword_1008177c, ecx
test    ecx, ecx
jl      short loc_10009119
jg      short loc_100090fd
test    esi, esi
jz      short loc_10009119
mov     eax, dword_10081668
cdq
cmp     ecx, edx
jg      short loc_10009119
jl      short loc_1000910d
cmp     esi, eax
ja      short loc_10009119
mov     dword_10081794, 1
jmp     short loc_10009123
mov     dword_10081794, 0
pop     esi
test    edi, edi
jz      short loc_10009132
push    edi
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
push    edi
call    sub_1006edd0
test    eax, eax
jz      short loc_1000915c
or      eax, 0ffffffffh
or      edx, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10009174
push    eax
call    dword_1008027c
mov     eax, dword_10081774
add     esp, 4
mov     esi, dword_10081778
mov     edi, dword_1008177c
test    eax, eax
jz      short loc_1000918e
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
test    eax, eax
jg      short loc_100091a8
jl      short loc_100091cf
test    ecx, ecx
jb      short loc_100091cf
test    eax, eax
jl      short loc_100091c1
jg      short loc_100091a8
test    ecx, ecx
jz      short loc_100091c1
push    eax
push    ecx
push    offset nullsub_1
call    sub_100090b0
add     esp, 0ch
mov     edx, edi
mov     eax, esi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    0
push    0
push    0
call    sub_100090b0
add     esp, 0ch
mov     edx, edi
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+arg_0]
test    eax, eax
jns     short loc_100091ef
xor     eax, eax
cdq
push    edx
push    eax
call    sub_10009140
add     esp, 8
mov     esp, ebp
pop     ebp
retn
push    edi
xor     edi, edi
cmp     dword_1008024c, edi
jnz     short loc_1000921a
push    offset off_100762e8
push    4
call    sub_1006efc0
add     esp, 8
xor     eax, eax
mov     dword_10081774, eax
mov     dword_10081778, eax
mov     dword_1008177c, eax
mov     dword_10081780, eax
mov     dword_10081784, eax
mov     dword_10081788, eax
mov     dword_1008178c, eax
mov     dword_10081790, eax
mov     dword_10081794, eax
cmp     dword_10080234, edi
jz      short loc_10009261
push    3
call    dword_10080274
add     esp, 4
mov     dword_10081774, eax
mov     eax, dword_100802d4
cmp     eax, edi
jz      short loc_100092b7
mov     edx, dword_100802d8
cmp     edx, 64h
jl      short loc_100092b7
mov     ecx, dword_100802dc
cmp     ecx, edi
jle     short loc_100092b7
mov     dword_10081790, ecx
and     edx, 0fffffff8h
dec     ecx
mov     dword_100802d8, edx
mov     dword_1008178c, eax
cmp     ecx, edi
jle     short loc_100092ab
push    esi
mov     esi, ecx
jmp     short loc_100092a0
dec     esi
lea     ecx, [eax+edx]
mov     [eax], ecx
mov     eax, ecx
jnz     short loc_100092a0
pop     esi
mov     [eax], edi
add     eax, 4
mov     dword_10081788, eax
jmp     short loc_100092cf
mov     dword_10081788, edi
mov     dword_100802d4, edi
mov     dword_100802d8, edi
mov     dword_100802dc, edi
cmp     dword_100802e0, edi
jz      short loc_100092ec
cmp     dword_100802e4, 200h
jl      short loc_100092ec
cmp     dword_100802e8, 1
jge     short loc_100092fe
mov     dword_100802e0, edi
mov     dword_100802e4, edi
mov     dword_100802e8, edi
mov     eax, dword_10080268
push    eax
call    dword_10080260
add     esp, 4
pop     edi
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, dword_10081668
cdq
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
cmp     [ebp+arg_0], 0
mov     eax, dword_10081690
jz      short loc_1000933d
mov     ecx, dword_10081668
mov     dword_10081690, ecx
cdq
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, dword_10081780
push    edi
test    esi, esi
jz      short loc_100093c4
mov     eax, dword_10081668
mov     edi, dword_10081784
cdq
mov     ebx, eax
mov     eax, dword_10081774
mov     [esp+18h+var_4], edx
mov     dword_10081780, 0
test    eax, eax
jz      short loc_10009395
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+arg_0]
mov     ecx, [esp+18h+var_4]
push    eax
push    ecx
push    ebx
push    edi
call    esi
mov     eax, dword_10081774
add     esp, 10h
test    eax, eax
jz      short loc_100093b8
push    eax
call    dword_1008027c
add     esp, 4
mov     dword_10081780, esi
mov     dword_10081784, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
push    esi
mov     esi, eax
push    edi
push    esi
call    dword_1008025c
add     esp, 4
mov     edi, eax
mov     dword_1008167c, esi
cmp     esi, dword_100816a4
jle     short loc_100093f5
mov     dword_100816a4, esi
cmp     dword_10081780, 0
jz      short loc_1000943e
mov     esi, dword_10081778
mov     ecx, dword_1008177c
cdq
sub     esi, eax
mov     eax, dword_10081668
sbb     ecx, edx
cdq
cmp     edx, ecx
jl      short loc_10009434
jg      short loc_1000941f
cmp     eax, esi
jb      short loc_10009434
push    edi
mov     dword_10081794, 1
call    sub_10009350
add     esp, 4
jmp     short loc_1000943e
mov     dword_10081794, 0
push    edi
call    dword_1008024c
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10009495
push    esi
call    dword_10080258
mov     ecx, dword_10081668
add     ecx, eax
add     esp, 4
mov     dword_10081668, ecx
cmp     ecx, dword_10081690
jle     short loc_10009474
mov     dword_10081690, ecx
mov     ecx, dword_1008168c
inc     ecx
mov     dword_1008168c, ecx
mov     [ebx], esi
cmp     ecx, dword_100816b4
jle     short loc_10009499
mov     dword_100816b4, ecx
pop     edi
pop     esi
pop     ecx
retn
mov     [ebx], esi
mov     eax, edi
pop     edi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
lea     eax, [esi-1]
cmp     eax, 7ffffefeh
ja      short loc_10009503
cmp     dword_10080230, 0
jz      short loc_100094f4
mov     eax, dword_10081774
test    eax, eax
jz      short loc_100094cf
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [ebp+arg_0]
mov     eax, esi
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_100094ec
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+arg_0]
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    esi
call    dword_1008024c
add     esp, 4
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
pop     esi
xor     eax, eax
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
call    sub_1006edd0
test    eax, eax
jz      short loc_10009525
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
push    eax
call    sub_100094a0
add     esp, 4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, dword_10081774
push    ebx
push    esi
push    edi
mov     esi, eax
test    ecx, ecx
jz      short loc_10009563
push    ecx
call    dword_1008027c
mov     ecx, dword_10081774
add     esp, 4
cmp     dword_10081790, 0
jz      short loc_100095cb
cmp     dword_100802d8, esi
jl      short loc_100095cb
mov     eax, dword_1008178c
mov     edi, eax
mov     eax, [eax]
dec     dword_10081790
mov     dword_1008178c, eax
mov     eax, dword_10081674
inc     eax
mov     dword_10081674, eax
cmp     eax, dword_1008169c
jle     short loc_100095a0
mov     dword_1008169c, eax
mov     dword_10081688, esi
cmp     esi, dword_100816b0
jle     short loc_100095b4
mov     dword_100816b0, esi
test    ecx, ecx
jz      short loc_100095c2
push    ecx
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword_10080230, 0
jz      short loc_10009631
mov     dword_10081688, esi
cmp     esi, dword_100816b0
jle     short loc_100095e8
mov     dword_100816b0, esi
lea     ebx, [ebp+var_4]
mov     eax, esi
call    sub_100093d0
mov     esi, [ebp+var_4]
test    esi, esi
jz      short loc_10009615
mov     ecx, dword_10081678
add     ecx, eax
mov     dword_10081678, ecx
cmp     ecx, dword_100816a0
jle     short loc_10009615
mov     dword_100816a0, ecx
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10009628
push    eax
call    dword_10080284
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    ecx, ecx
jz      short loc_1000963f
push    ecx
call    dword_10080284
add     esp, 4
push    esi
call    dword_1008024c
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jz      locret_1000975c
cmp     esi, dword_100802d4
jb      short loc_100096be
cmp     esi, dword_10081788
jnb     short loc_100096be
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1000967b
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, dword_1008178c
mov     [esi], eax
mov     eax, dword_10081674
inc     dword_10081790
dec     eax
mov     dword_1008178c, esi
mov     dword_10081674, eax
cmp     eax, dword_1008169c
jle     short loc_100096a6
mov     dword_1008169c, eax
mov     eax, dword_10081774
test    eax, eax
jz      locret_1000975c
push    eax
call    dword_10080284
add     esp, 4
retn
cmp     dword_10080230, 0
jz      loc_10009754
push    edi
push    esi
call    dword_10080258
mov     edi, eax
mov     eax, dword_10081774
add     esp, 4
test    eax, eax
jz      short loc_100096eb
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, dword_10081678
sub     eax, edi
mov     dword_10081678, eax
cmp     eax, dword_100816a0
jle     short loc_10009704
mov     dword_100816a0, eax
mov     eax, dword_10081668
sub     eax, edi
mov     dword_10081668, eax
pop     edi
cmp     eax, dword_10081690
jle     short loc_1000971e
mov     dword_10081690, eax
mov     eax, dword_1008168c
dec     eax
mov     dword_1008168c, eax
cmp     eax, dword_100816b4
jle     short loc_10009736
mov     dword_100816b4, eax
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
test    eax, eax
jz      short locret_1000975c
push    eax
call    dword_10080284
add     esp, 4
retn
push    esi
call    dword_10080250
pop     ecx
retn
push    ebp
mov     ebp, esp
pop     ebp
jmp     dword_10080258
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jz      loc_10009805
cmp     dword_10080230, 0
jz      short loc_100097fb
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1000979b
push    eax
call    dword_1008027c
add     esp, 4
push    esi
call    dword_10080258
mov     ecx, dword_10081668
neg     eax
add     ecx, eax
add     esp, 4
mov     dword_10081668, ecx
cmp     ecx, dword_10081690
jle     short loc_100097c3
mov     dword_10081690, ecx
mov     eax, dword_1008168c
dec     eax
mov     dword_1008168c, eax
cmp     eax, dword_100816b4
jle     short loc_100097db
mov     dword_100816b4, eax
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
test    eax, eax
jz      short loc_10009805
push    eax
call    dword_10080284
add     esp, 4
pop     esi
pop     ebp
retn
push    esi
call    dword_10080250
add     esp, 4
pop     esi
pop     ebp
retn
push    esi
mov     esi, ecx
test    esi, esi
jz      short loc_10009883
cmp     dword ptr [esi+1e8h], 0
jz      short loc_10009859
test    eax, eax
jz      short loc_10009845
cmp     eax, [esi+0fch]
jb      short loc_10009845
cmp     eax, [esi+100h]
jnb     short loc_10009845
movzx   eax, word ptr [esi+0e0h]
mov     esi, [esi+1e8h]
add     [esi], eax
pop     esi
retn
push    eax
call    dword_10080258
mov     esi, [esi+1e8h]
add     esp, 4
add     [esi], eax
pop     esi
retn
test    eax, eax
jz      short loc_10009883
cmp     eax, [esi+0fch]
jb      short loc_10009883
cmp     eax, [esi+100h]
jnb     short loc_10009883
mov     ecx, [esi+0f8h]
mov     [eax], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
pop     esi
retn
push    eax
call    sub_10009770
add     esp, 4
pop     esi
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_0]
push    ebx
push    esi
push    edi
test    eax, eax
jnz     short loc_100098b4
mov     eax, [ebp+arg_4]
push    eax
call    sub_100094a0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+arg_4]
test    esi, esi
jg      short loc_100098cd
push    eax
call    sub_10009770
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     esi, 7fffff00h
jge     short loc_100098c4
push    eax
call    dword_10080258
add     esp, 4
mov     edi, eax
push    esi
mov     [esp+14h+var_4], edi
call    dword_1008025c
mov     ebx, eax
add     esp, 4
cmp     edi, ebx
jnz     short loc_10009901
mov     esi, [ebp+arg_0]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword_10080230, 0
jz      loc_100099c7
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10009921
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, esi
mov     ecx, 5
call    sub_10006750
mov     esi, dword_1008177c
mov     ecx, ebx
sub     ecx, edi
mov     edi, dword_10081778
mov     eax, ecx
cdq
sub     edi, eax
mov     eax, dword_10081668
sbb     esi, edx
cdq
cmp     edx, esi
jl      short loc_1000995d
jg      short loc_10009954
cmp     eax, edi
jb      short loc_1000995d
push    ecx
call    sub_10009350
add     esp, 4
mov     edi, [ebp+arg_0]
push    ebx
push    edi
call    dword_10080254
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     short loc_10009996
cmp     dword_10081780, eax
jz      short loc_100099ab
mov     ecx, [ebp+arg_4]
push    ecx
call    sub_10009350
add     esp, 4
push    ebx
push    edi
call    dword_10080254
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_100099ab
push    esi
call    dword_10080258
sub     eax, [esp+14h+var_4]
add     esp, 4
xor     ecx, ecx
call    sub_10006720
mov     eax, dword_10081774
test    eax, eax
jz      short loc_100099d7
push    eax
call    dword_10080284
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_0]
push    ebx
push    edx
call    dword_10080254
add     esp, 8
mov     esi, eax
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
call    sub_1006edd0
test    eax, eax
jz      short loc_100099f0
xor     eax, eax
pop     ebp
retn
pop     ebp
jmp     sub_10009890
push    esi
push    edi
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10009a1e
push    edi
push    0
push    esi
call    memset
add     esp, 0ch
mov     eax, esi
pop     esi
retn
push    esi
mov     ecx, edi
mov     esi, eax
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10009a3e
push    edi
push    0
push    esi
call    memset
add     esp, 0ch
mov     eax, esi
pop     esi
retn
push    ebx
mov     ebx, 1
test    esi, esi
jz      short loc_10009a6e
cmp     byte ptr [esi+32h], 0
jz      short loc_10009a54
xor     eax, eax
pop     ebx
retn
cmp     byte ptr [esi+0e2h], 0
jz      short loc_10009a6e
movzx   eax, word ptr [esi+0e0h]
cmp     ecx, eax
jle     short loc_10009a84
add     [esi+0f0h], ebx
push    ecx
call    sub_100094a0
add     esp, 4
test    eax, eax
jnz     short loc_10009a82
test    esi, esi
jz      short loc_10009a82
mov     [esi+32h], bl
pop     ebx
retn
mov     eax, [esi+0f8h]
test    eax, eax
jnz     short loc_10009a96
add     [esi+0f4h], ebx
jmp     short loc_10009a6e
mov     ecx, [eax]
add     [esi+0e4h], ebx
add     [esi+0ech], ebx
mov     [esi+0f8h], ecx
mov     ecx, [esi+0e4h]
cmp     ecx, [esi+0e8h]
jle     short loc_10009a82
mov     [esi+0e8h], ecx
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     esi, eax
xor     edi, edi
cmp     byte ptr [esi+32h], 0
jnz     loc_10009b64
test    ebx, ebx
jnz     short loc_10009ae5
mov     ecx, [ebp+arg_0]
call    sub_10009a40
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
cmp     ebx, [esi+0fch]
jb      short loc_10009b37
cmp     ebx, [esi+100h]
jnb     short loc_10009b37
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [ebp+arg_0]
cmp     ecx, eax
jg      short loc_10009b0a
mov     eax, ebx
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10009b64
movzx   ecx, word ptr [esi+0e0h]
push    ecx
push    ebx
push    edi
call    memcpy
add     esp, 0ch
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
mov     eax, edi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
call    sub_1006edd0
test    eax, eax
jz      short loc_10009b4d
xor     edi, edi
mov     byte ptr [esi+32h], 1
mov     eax, edi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
mov     edx, [ebp+arg_0]
push    edx
push    ebx
call    sub_10009890
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     short loc_10009b64
mov     byte ptr [esi+32h], 1
mov     eax, edi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
test    ebx, ebx
jnz     short loc_10009b81
xor     eax, eax
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_10009b8e
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10009b88
mov     esi, [ebp+arg_0]
sub     eax, ebx
and     eax, 3fffffffh
lea     edi, [eax+1]
mov     ecx, edi
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10009bb3
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
pop     edi
mov     eax, esi
pop     esi
pop     ecx
pop     ebp
retn
push    esi
test    ebx, ebx
jnz     short loc_10009bc9
xor     eax, eax
pop     esi
retn
lea     ecx, [edi+1]
mov     esi, edx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10009be8
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 70h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     edx, [esi+48h]
lea     eax, [ebp+var_50]
mov     ecx, eax
push    edi
mov     [ebp+var_68], eax
mov     eax, [ebp+arg_0]
push    eax
mov     [ebp+var_64], ecx
lea     ecx, [ebp+var_6c]
push    1
push    ecx
lea     ecx, [ebp+arg_4]
mov     [ebp+var_60], 0
mov     [ebp+var_5c], 46h
mov     [ebp+var_58], edx
mov     [ebp+var_53], 1
mov     [ebp+var_54], 0
mov     [ebp+var_6c], esi
call    sub_10009dd0
add     esp, 0ch
lea     edi, [ebp+var_6c]
call    sub_1000ad70
cmp     [ebp+var_54], 0
mov     edi, eax
jz      short loc_10009c56
mov     byte ptr [esi+32h], 1
mov     eax, [ebx]
mov     ecx, esi
call    sub_10009810
mov     ecx, [ebp+var_4]
mov     [ebx], edi
xor     ecx, ebp
pop     edi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
sub     esp, 8
push    ebx
push    esi
push    edi
mov     esi, eax
cmp     ecx, 1dh
jl      short loc_10009ceb
mov     eax, 8d3dcb09h
mul     ecx
shr     edx, 4
mov     [ebp+var_8], edx
imul    edx, -1dh
add     ecx, edx
mov     [ebp+arg_0], ecx
mov     al, [esi+1ah]
or      al, [esi+18h]
mov     [ebp+size], 1dh
jnz     short loc_10009ce3
mov     eax, [esi+0ch]
mov     ecx, [esi+10h]
lea     edx, [eax+1dh]
cmp     edx, ecx
jl      short loc_10009cc8
cmp     byte ptr [esi+19h], 0
jnz     short loc_10009d06
sub     ecx, eax
dec     ecx
mov     byte ptr [esi+1ah], 1
mov     [ebp+size], ecx
test    ecx, ecx
jle     short loc_10009ce3
mov     edi, [ebp+size]
mov     ecx, [esi+8]
add     ecx, [esi+0ch]
push    edi
push    offset asc_10076414
push    ecx
call    memcpy
add     esp, 0ch
add     [esi+0ch], edi
dec     [ebp+var_8]
jnz     short loc_10009c98
mov     ecx, [ebp+arg_0]
test    ecx, ecx
jle     short loc_10009cff
push    ecx
push    offset asc_10076414
mov     eax, esi
call    sub_1000ac50
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esi+8]
mov     ebx, ecx
sub     ebx, [esi+4]
cdq
neg     ebx
sbb     ebx, ebx
and     ebx, ecx
mov     edi, eax
mov     eax, [esi+14h]
mov     ecx, edx
add     edi, 1eh
cdq
adc     ecx, 0
cmp     ecx, edx
jl      short loc_10009d68
jg      short loc_10009d2d
cmp     edi, eax
jbe     short loc_10009d68
mov     eax, [esi+8]
cmp     eax, [esi+4]
jz      short loc_10009d58
cmp     byte ptr [esi+19h], 1
jnz     short loc_10009d4f
mov     ecx, [esi]
call    sub_10009810
mov     dword ptr [esi+8], 0
mov     byte ptr [esi+1ah], 1
jmp     short loc_10009ce3
push    eax
call    sub_10009770
add     esp, 4
mov     dword ptr [esi+8], 0
mov     byte ptr [esi+1ah], 1
jmp     loc_10009ce3
cmp     byte ptr [esi+19h], 1
mov     [esi+10h], edi
jnz     short loc_10009d7e
mov     eax, [esi]
push    edi
call    sub_10009ac0
add     esp, 4
jmp     short loc_10009d91
call    sub_1006edd0
test    eax, eax
jnz     short loc_10009db8
push    edi
push    ebx
call    sub_10009890
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_10009db8
test    ebx, ebx
jnz     short loc_10009db0
mov     eax, [esi+0ch]
test    eax, eax
jle     short loc_10009db0
push    eax
mov     eax, [esi+8]
push    eax
push    edi
call    memcpy
add     esp, 0ch
mov     [esi+8], edi
jmp     loc_10009cc8
mov     byte ptr [esi+18h], 1
call    sub_1000ade0
jmp     loc_10009ce3
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0b4h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+0b4h+var_4], eax
mov     eax, [ebp+arg_0]
mov     [esp+0b4h+var_8c], eax
mov     eax, [ebp+arg_8]
push    ebx
mov     [esp+0b8h+src], eax
movsx   eax, byte ptr [eax]
push    esi
push    edi
xor     edi, edi
mov     [esp+0c0h+var_a8], ecx
test    eax, eax
jz      loc_1000abca
fld     ds:dbl_1007cfa8
fld     ds:dbl_1007cfa0
fld     ds:dbl_1007cf98
fld     ds:dbl_1007cf00
jmp     short loc_10009e4c
jmp     short loc_10009e30
fld     ds:dbl_1007cfa8
fld     ds:dbl_1007cf98
fld     ds:dbl_1007cf00
fld     ds:dbl_1007cfa0
fxch    st(2)
fxch    st(1)
mov     ebx, [esp+0c0h+src]
cmp     eax, 25h
jz      short loc_10009eb3
movsx   esi, byte ptr [ebx+1]
fstp    st(2)
mov     edi, ebx
fstp    st(2)
inc     ebx
fstp    st(1)
fstp    st
mov     eax, 1
cmp     esi, 25h
jz      short loc_10009e7f
mov     edi, edi
test    esi, esi
jz      short loc_10009e7f
movsx   esi, byte ptr [ebx+1]
inc     ebx
inc     eax
cmp     esi, 25h
jnz     short loc_10009e70
push    eax
mov     eax, [esp+0c4h+var_8c]
push    edi
call    sub_1000ac50
add     esp, 8
test    esi, esi
jz      loc_1000abca
fld     ds:dbl_1007cfa8
fld     ds:dbl_1007cf98
fld     ds:dbl_1007cfa0
fld     ds:dbl_1007cf00
fxch    st(1)
fxch    st(2)
fxch    st(1)
movsx   eax, byte ptr [ebx+1]
inc     ebx
test    eax, eax
jz      loc_1000ab58
mov     [esp+0c0h+var_99], 0
mov     [esp+0c0h+var_a1], 0
mov     [esp+0c0h+var_a9], 0
mov     [esp+0c0h+var_ab], 0
mov     [esp+0c0h+var_91], 0
mov     [esp+0c0h+var_aa], 0
lea     ecx, [eax-20h]
cmp     ecx, 10h
ja      short def_10009eed
movzx   edx, ds:byte_1000abfc[ecx]
jmp     ds:jpt_10009eed[edx*4]
mov     [esp+0c0h+var_aa], 1
jmp     short loc_10009f1c
mov     [esp+0c0h+var_91], 1
jmp     short loc_10009f1c
mov     [esp+0c0h+var_ab], 1
jmp     short loc_10009f1c
mov     [esp+0c0h+var_a9], 1
jmp     short loc_10009f1c
mov     [esp+0c0h+var_a1], 1
jmp     short loc_10009f1c
mov     [esp+0c0h+var_99], 1
movsx   eax, byte ptr [ebx+1]
inc     ebx
test    eax, eax
jnz     short loc_10009ede
xor     edx, edx
mov     [esp+0c0h+src], ebx
mov     [esp+0c0h+var_90], edx
cmp     eax, 2ah
jnz     short loc_10009f5f
mov     edx, [esp+0c0h+var_a8]
mov     eax, [edx]
add     edx, 4
mov     [esp+0c0h+var_a8], edx
mov     [esp+0c0h+var_90], eax
test    eax, eax
jns     short loc_10009f54
neg     eax
mov     [esp+0c0h+var_aa], 1
mov     [esp+0c0h+var_90], eax
movsx   eax, byte ptr [ebx+1]
inc     ebx
mov     [esp+0c0h+src], ebx
jmp     short loc_10009f85
cmp     eax, 30h
jl      short loc_10009f81
cmp     eax, 39h
jg      short loc_10009f79
lea     ecx, [edx+edx*4]
inc     ebx
lea     edx, [eax+ecx*2-30h]
movsx   eax, byte ptr [ebx]
cmp     eax, 30h
jge     short loc_10009f64
mov     [esp+0c0h+var_90], edx
mov     [esp+0c0h+src], ebx
mov     edx, [esp+0c0h+var_a8]
cmp     eax, 2eh
jnz     short loc_1000a006
movsx   eax, byte ptr [ebx+1]
inc     ebx
xor     esi, esi
mov     [esp+0c0h+var_b0], esi
mov     [esp+0c0h+src], ebx
cmp     eax, 2ah
jnz     short loc_10009fbc
mov     esi, [edx]
add     edx, 4
mov     [esp+0c0h+var_a8], edx
mov     [esp+0c0h+var_b0], esi
test    esi, esi
jns     short loc_10009fb5
neg     esi
mov     [esp+0c0h+var_b0], esi
movsx   eax, byte ptr [ebx+1]
inc     ebx
jmp     short loc_10009fda
cmp     eax, 30h
jl      short loc_10009fde
cmp     eax, 39h
jg      short loc_10009fd6
lea     ecx, [esi+esi*4]
inc     ebx
lea     esi, [eax+ecx*2-30h]
movsx   eax, byte ptr [ebx]
cmp     eax, 30h
jge     short loc_10009fc1
mov     [esp+0c0h+var_b0], esi
mov     [esp+0c0h+src], ebx
cmp     eax, 6ch
jnz     short loc_1000a00f
movsx   eax, byte ptr [ebx+1]
inc     ebx
mov     [esp+0c0h+var_b1], 1
mov     [esp+0c0h+src], ebx
cmp     eax, 6ch
jnz     short loc_1000a014
movsx   eax, byte ptr [ebx+1]
inc     ebx
mov     [esp+0c0h+var_b3], 1
mov     [esp+0c0h+src], ebx
jmp     short loc_1000a019
or      esi, 0ffffffffh
mov     [esp+0c0h+var_b0], esi
jmp     short loc_10009fde
mov     [esp+0c0h+var_b1], 0
mov     [esp+0c0h+var_b3], 0
mov     ebx, offset dword_10076388
mov     [esp+0c0h+var_84], ebx
mov     [esp+0c0h+var_b2], 0
mov     [esp+0c0h+var_88], 0
movsx   ecx, byte ptr [ebx]
cmp     eax, ecx
jz      short loc_1000a04b
inc     [esp+0c0h+var_88]
add     ebx, 6
cmp     ebx, offset word_10076412
jl      short loc_1000a02f
mov     ecx, [esp+0c0h+var_84]
jmp     short loc_1000a074
cmp     [ebp+arg_4], 0
mov     eax, [esp+0c0h+var_88]
lea     ecx, [eax+eax*2]
lea     ecx, dword_10076388[ecx*2]
mov     [esp+0c0h+var_84], ecx
jnz     short loc_1000a06d
test    byte ptr [ecx+2], 2
jnz     def_1000a08d
mov     al, [ecx+3]
mov     [esp+0c0h+var_b2], al
mov     bl, [esp+0c0h+var_b2]
movzx   eax, bl
dec     eax
mov     [esp+0c0h+var_88], 0
cmp     eax, 0fh
ja      def_1000a08d
jmp     ds:jpt_1000a08d[eax*4]
xor     al, al
mov     bl, 1
jmp     short loc_1000a0a2
mov     al, [esp+0c0h+var_b3]
mov     bl, [esp+0c0h+var_b1]
test    byte ptr [ecx+2], 1
fstp    st(2)
fstp    st(2)
fstp    st(1)
fstp    st
jz      short loc_1000a121
test    al, al
jz      short loc_1000a0c2
mov     eax, [edx]
add     edx, 8
mov     [esp+0c0h+var_a8], edx
mov     edx, [edx-4]
jmp     short loc_1000a0cc
mov     eax, [edx]
add     edx, 4
mov     [esp+0c0h+var_a8], edx
cdq
test    edx, edx
jg      short loc_1000a0ff
jl      short loc_1000a0d6
test    eax, eax
jnb     short loc_1000a0ff
test    eax, eax
jnz     short loc_1000a0ed
cmp     edx, 80000000h
jnz     short loc_1000a0ed
xor     ebx, ebx
mov     esi, edx
mov     [esp+0c0h+var_b3], 2dh
jmp     short loc_1000a146
neg     eax
adc     edx, 0
neg     edx
mov     ebx, eax
mov     esi, edx
mov     [esp+0c0h+var_b3], 2dh
jmp     short loc_1000a146
cmp     [esp+0c0h+var_91], 0
mov     ebx, eax
mov     esi, edx
jz      short loc_1000a111
mov     [esp+0c0h+var_b3], 2bh
jmp     short loc_1000a146
mov     al, [esp+0c0h+var_ab]
neg     al
sbb     al, al
and     al, 20h
mov     [esp+0c0h+var_b3], al
jmp     short loc_1000a146
test    al, al
mov     eax, [esp+0c0h+var_a8]
jz      short loc_1000a133
mov     ebx, [eax]
mov     esi, [eax+4]
add     eax, 8
jmp     short loc_1000a13d
add     eax, 4
xor     esi, esi
test    bl, bl
mov     ebx, [eax-4]
mov     [esp+0c0h+var_a8], eax
mov     [esp+0c0h+var_b3], 0
mov     ecx, ebx
or      ecx, esi
jnz     short loc_1000a150
mov     [esp+0c0h+var_a9], cl
cmp     [esp+0c0h+var_99], 0
jz      short loc_1000a176
mov     eax, [esp+0c0h+var_90]
xor     edx, edx
cmp     [esp+0c0h+var_b3], dl
setnz   dl
sub     eax, edx
mov     edx, [esp+0c0h+var_b0]
cmp     edx, eax
jge     short loc_1000a17a
mov     edx, eax
mov     [esp+0c0h+var_b0], edx
jmp     short loc_1000a17a
mov     edx, [esp+0c0h+var_b0]
cmp     edx, 3ch
jge     short loc_1000a191
lea     eax, [esp+0c0h+var_50]
mov     [esp+0c0h+var_98], 46h
mov     [esp+0c0h+var_78], eax
jmp     short loc_1000a1b1
lea     eax, [edx+0ah]
push    eax
mov     [esp+0c4h+var_98], eax
call    sub_100094a0
add     esp, 4
mov     [esp+0c0h+var_88], eax
mov     [esp+0c0h+var_78], eax
test    eax, eax
jz      loc_1000ab88
cmp     [esp+0c0h+var_b2], 10h
mov     ecx, [esp+0c0h+var_78]
mov     edx, [esp+0c0h+var_98]
lea     edi, [ecx+edx-1]
jnz     short loc_1000a21c
push    0
push    0ah
push    esi
push    ebx
call    __aulldiv
lea     ecx, [eax+eax*4]
mov     [esp+0c0h+var_54], edx
lea     edx, [ecx+ecx]
mov     ecx, ebx
sub     ecx, edx
mov     dword ptr [esp+0c0h+var_80], ecx
cmp     ecx, 4
jge     short loc_1000a1fe
mov     ecx, [esp+0c0h+var_54]
push    0
push    0ah
push    ecx
push    eax
call    __aullrem
cmp     eax, 1
jnz     short loc_1000a202
test    edx, edx
jnz     short loc_1000a202
xor     eax, eax
jmp     short loc_1000a206
mov     eax, dword ptr [esp+0c0h+var_80]
mov     dl, ds:byte_1007637d[eax*2]
mov     [edi-1], dl
mov     al, ds:byte_1007637c[eax*2]
sub     edi, 2
mov     [edi], al
mov     ecx, [esp+0c0h+var_84]
movzx   eax, byte ptr [ecx+4]
add     eax, offset a0123456789abcd
mov     dword ptr [esp+0c0h+var_80], eax
movzx   eax, byte ptr [ecx+1]
cdq
mov     [esp+0c0h+var_60], eax
mov     [esp+0c0h+var_5c], edx
mov     ecx, [esp+0c0h+var_5c]
mov     edx, [esp+0c0h+var_60]
push    ecx
push    edx
push    esi
push    ebx
dec     edi
call    __aulldvrm
mov     esi, dword ptr [esp+0c0h+var_80]
mov     cl, [ecx+esi]
mov     esi, edx
mov     [esp+0c0h+var_6c], ebx
mov     [edi], cl
mov     ebx, eax
test    esi, esi
ja      short loc_1000a23a
jb      short loc_1000a267
test    ebx, ebx
jnz     short loc_1000a23a
mov     eax, [esp+0c0h+var_b0]
mov     esi, [esp+0c0h+var_78]
mov     edx, [esp+0c0h+var_98]
sub     eax, esi
sub     eax, edx
lea     eax, [eax+edi+1]
test    eax, eax
jle     short loc_1000a289
nop
dec     edi
dec     eax
mov     byte ptr [edi], 30h
test    eax, eax
jg      short loc_1000a280
mov     al, [esp+0c0h+var_b3]
test    al, al
jz      short loc_1000a294
dec     edi
mov     [edi], al
cmp     [esp+0c0h+var_a9], 0
jz      short loc_1000a2be
mov     eax, [esp+0c0h+var_84]
mov     al, [eax+5]
test    al, al
jz      short loc_1000a2be
movzx   eax, al
add     eax, offset ax0
mov     cl, [eax]
test    cl, cl
jz      short loc_1000a2be
dec     edi
inc     eax
mov     [edi], cl
mov     cl, [eax]
test    cl, cl
jnz     short loc_1000a2b4
sub     esi, edi
lea     esi, [esi+edx-1]
jmp     loc_1000aad4
fld     qword ptr [edx]
add     edx, 8
fst     qword ptr [esp+50h]
mov     [esp+0c0h+var_a8], edx
test    esi, esi
jns     short loc_1000a2e3
mov     esi, 6
mov     [esp+0c0h+var_b0], esi
fldz
fcomp   st(1)
fnstsw  ax
test    ah, 41h
jnz     short loc_1000a2f8
fchs
mov     cl, 2dh
fst     qword ptr [esp+50h]
jmp     short loc_1000a30f
cmp     [esp+0c0h+var_91], 0
jz      short loc_1000a303
mov     cl, 2bh
jmp     short loc_1000a30f
mov     al, [esp+0c0h+var_ab]
neg     al
sbb     al, al
and     al, 20h
mov     cl, al
mov     [esp+0c0h+var_b3], cl
cmp     bl, 4
jnz     short loc_1000a321
test    esi, esi
jle     short loc_1000a321
dec     esi
mov     [esp+0c0h+var_b0], esi
fld     ds:dbl_1007cf78
cmp     esi, 8
jl      short loc_1000a34f
lea     eax, [esi-8]
shr     eax, 3
inc     eax
lea     edx, ds:0[eax*8]
sub     esi, edx
dec     eax
fmul    st, st(5)
fmul    st, st(5)
fmul    st, st(5)
fmul    st, st(5)
fmul    st, st(5)
fmul    st, st(5)
fmul    st, st(5)
fmul    st, st(5)
jnz     short loc_1000a33c
test    esi, esi
jle     short loc_1000a35a
dec     esi
fmul    st, st(5)
test    esi, esi
jg      short loc_1000a353
cmp     bl, 2
jnz     short loc_1000a36b
fld     st
faddp   st(2), st
fxch    st(1)
fst     qword ptr [esp+50h]
fxch    st(1)
fxch    st(1)
xor     ebx, ebx
fst     [esp+0c0h+var_80]
fld     [esp+0c0h+var_80]
fstp    qword ptr [esp+0c0h+var_78]
fld     [esp+0c0h+var_80]
fld     qword ptr [esp+0c0h+var_78]
fucompp
fnstsw  ax
test    ah, 44h
jnp     short loc_1000a3a5
fstp    st(4)
mov     edi, offset anan
fstp    st(3)
lea     esi, [ebx+3]
fstp    st(3)
fstp    st
fstp    st(1)
fstp    st
jmp     loc_1000aad4
fldz
fcomp   st(1)
fnstsw  ax
test    ah, 5
jp      loc_1000a525
fld1
fxch    st(1)
fcom    st(5)
fnstsw  ax
test    ah, 1
jz      short loc_1000a3c7
fstp    st(5)
jmp     short loc_1000a3e7
fxch    st(1)
cmp     ebx, 15eh
jg      short loc_1000a3c1
fxch    st(1)
add     ebx, 64h
fmul    st, st(5)
fld     st
fmul    st, st(6)
fcomp   st(2)
fnstsw  ax
test    ah, 41h
jnp     short loc_1000a3c5
fstp    st(5)
fxch    st(4)
fld     st
fmul    st, st(4)
fcom    st(5)
fnstsw  ax
test    ah, 41h
jp      short loc_1000a40e
cmp     ebx, 15eh
jg      short loc_1000a40e
fstp    st(1)
add     ebx, 40h
fld     st
fmul    st, st(4)
fcom    st(5)
fnstsw  ax
test    ah, 41h
jnp     short loc_1000a3f4
fstp    st
fstp    st(3)
fld     st(2)
fld     ds:dbl_1007cf90
fmul    st(1), st
fxch    st(5)
fcom    st(1)
fnstsw  ax
test    ah, 1
jz      short loc_1000a42f
fstp    st(1)
jmp     short loc_1000a44d
fxch    st(1)
fxch    st(4)
cmp     ebx, 15eh
jg      short loc_1000a427
fstp    st(4)
add     ebx, 8
fld     st
fmul    st, st(5)
fcom    st(4)
fnstsw  ax
test    ah, 41h
jnp     short loc_1000a42b
fstp    st
fxch    st(3)
fld     st(3)
fmul    st, st(3)
fcom    st(1)
fnstsw  ax
test    ah, 41h
jp      short loc_1000a472
cmp     ebx, 15eh
jg      short loc_1000a472
fstp    st(4)
inc     ebx
fld     st(3)
fmul    st, st(3)
fcom    st(1)
fnstsw  ax
test    ah, 41h
jnp     short loc_1000a45a
fstp    st
fdivrp  st(3), st
fxch    st(2)
fst     qword ptr [esp+50h]
fld     ds:dbl_1007cf88
fcom    st(1)
fnstsw  ax
test    ah, 41h
jz      short loc_1000a493
fstp    st
fstp    st(3)
jmp     short loc_1000a4af
fxch    st(1)
fxch    st(1)
sub     ebx, 8
fmul    st, st(4)
fcom    st(1)
fnstsw  ax
test    ah, 5
jnp     short loc_1000a491
fstp    st(1)
fstp    st(3)
fxch    st(2)
fst     qword ptr [esp+50h]
fxch    st(2)
fld1
fcom    st(3)
fnstsw  ax
test    ah, 41h
jz      short loc_1000a4dc
fstp    st
fxch    st(2)
cmp     ebx, 15eh
jle     short loc_1000a52b
fstp    st
fstp    st(2)
fstp    st
fstp    st
cmp     cl, 2dh
jnz     short loc_1000a4f4
mov     edi, offset ainf
jmp     short loc_1000a503
fxch    st(3)
fxch    st(3)
dec     ebx
fmul    st, st(1)
fcom    st(3)
fnstsw  ax
test    ah, 5
jnp     short loc_1000a4da
fstp    st(3)
fxch    st(2)
fst     qword ptr [esp+50h]
jmp     short loc_1000a4be
mov     edi, offset ainf_0
cmp     cl, 2bh
jz      short loc_1000a503
mov     edi, offset ainf_1
mov     esi, edi
test    edi, edi
jz      loc_1000aad4
cmp     byte ptr [edi], 0
jz      short loc_1000a518
inc     esi
cmp     byte ptr [esi], 0
jnz     short loc_1000a512
sub     esi, edi
and     esi, 3fffffffh
jmp     loc_1000aad4
fstp    st(4)
fstp    st(2)
jmp     short loc_1000a52d
fxch    st(2)
mov     cl, [esp+0c0h+var_b2]
lea     esi, [esp+0c0h+var_50]
cmp     cl, 2
jz      short loc_1000a558
fxch    st(1)
faddp   st(2), st
fxch    st(1)
fst     qword ptr [esp+50h]
fcom    st(1)
fnstsw  ax
test    ah, 1
jnz     short loc_1000a55e
fmulp   st(2), st
inc     ebx
fxch    st(1)
fst     qword ptr [esp+50h]
jmp     short loc_1000a562
fstp    st(3)
fstp    st
jmp     short loc_1000a562
fstp    st(2)
fxch    st(1)
cmp     cl, 4
jnz     loc_1000a61e
cmp     [esp+0c0h+var_a9], 0
setz    [esp+0c0h+var_b1]
cmp     ebx, 0fffffffch
jl      loc_1000a60e
cmp     ebx, [esp+0c0h+var_b0]
jg      loc_1000a60e
sub     [esp+0c0h+var_b0], ebx
mov     [esp+0c0h+var_b2], 2
mov     eax, ebx
mov     [esp+0c0h+var_98], ebx
mov     ecx, [esp+0c0h+var_b0]
add     eax, ecx
add     eax, [esp+0c0h+var_90]
cmp     eax, 37h
jle     short loc_1000a5ce
add     eax, 0fh
fstp    st
push    eax
fstp    st
call    sub_100094a0
add     esp, 4
mov     [esp+0c0h+var_88], eax
mov     esi, eax
test    eax, eax
jz      loc_1000aba5
fld     ds:dbl_1007cf00
fld     qword ptr [esp+50h]
mov     dl, [esp+0c0h+var_a1]
cmp     [esp+0c0h+var_b0], 0
movzx   eax, dl
setnle  cl
or      cl, dl
or      cl, [esp+0c0h+var_a9]
lea     edi, [eax+eax*4]
mov     al, [esp+0c0h+var_b3]
lea     edi, [edi+edi+10h]
mov     [esp+0c0h+var_78], esi
mov     dword ptr [esp+0c0h+var_80], edi
mov     [esp+0c0h+var_ab], cl
test    al, al
jz      short loc_1000a601
mov     [esi], al
inc     esi
cmp     [esp+0c0h+var_98], 0
jge     short loc_1000a63a
mov     byte ptr [esi], 30h
inc     esi
jmp     short loc_1000a66b
xor     eax, eax
mov     [esp+0c0h+var_b2], 3
mov     [esp+0c0h+var_98], eax
jmp     loc_1000a597
mov     al, [esp+0c0h+var_a1]
mov     [esp+0c0h+var_b1], al
cmp     cl, 3
jnz     loc_1000a591
xor     eax, eax
mov     [esp+0c0h+var_98], eax
jmp     loc_1000a597
test    edi, edi
jg      short loc_1000a642
mov     al, 30h
jmp     short loc_1000a656
fld     st
dec     edi
call    __ftol2_sse
mov     dword ptr [esp+0c0h+var_80], eax
fisub   dword ptr [esp+0c0h+var_80]
add     al, 30h
fmul    st, st(1)
mov     [esi], al
inc     esi
dec     [esp+0c0h+var_98]
jns     short loc_1000a63a
mov     cl, [esp+0c0h+var_ab]
fst     qword ptr [esp+50h]
mov     dword ptr [esp+0c0h+var_80], edi
test    cl, cl
jz      short loc_1000a673
mov     byte ptr [esi], 2eh
inc     esi
inc     [esp+0c0h+var_98]
jns     short loc_1000a6a5
mov     edi, [esp+0c0h+var_98]
fstp    st
neg     edi
fstp    st
push    edi
push    30h
push    esi
call    memset
fld     qword ptr [esp+5ch]
fld     ds:dbl_1007cf00
add     esi, edi
add     esp, 0ch
fxch    st(1)
sub     [esp+0c0h+var_b0], edi
mov     edi, dword ptr [esp+0c0h+var_80]
cmp     [esp+0c0h+var_b0], 0
jle     short loc_1000a6d6
dec     [esp+0c0h+var_b0]
test    edi, edi
jg      short loc_1000a6b8
mov     al, 30h
jmp     short loc_1000a6cc
fld     st
dec     edi
call    __ftol2_sse
mov     dword ptr [esp+0c0h+var_80], eax
fisub   dword ptr [esp+0c0h+var_80]
add     al, 30h
fmul    st, st(1)
mov     [esi], al
inc     esi
cmp     [esp+0c0h+var_b0], 0
jg      short loc_1000a6ac
cmp     [esp+0c0h+var_b1], 0
fstp    st
fstp    st
jz      short loc_1000a711
cmp     [esp+0c0h+var_ab], 0
jz      short loc_1000a711
cmp     byte ptr [esi-1], 30h
jnz     short loc_1000a6fa
mov     edi, edi
dec     esi
mov     byte ptr [esi], 0
cmp     byte ptr [esi-1], 30h
jz      short loc_1000a6f0
cmp     byte ptr [esi-1], 2eh
jnz     short loc_1000a711
cmp     [esp+0c0h+var_a1], 0
jz      short loc_1000a70d
mov     byte ptr [esi], 30h
inc     esi
jmp     short loc_1000a711
dec     esi
mov     byte ptr [esi], 0
cmp     [esp+0c0h+var_b2], 3
jnz     short loc_1000a78a
mov     eax, [esp+0c0h+var_84]
movzx   ecx, byte ptr [eax+4]
mov     dl, byte ptr ds:a0123456789abcd[ecx]
mov     [esi], dl
test    ebx, ebx
jns     short loc_1000a737
mov     byte ptr [esi+1], 2dh
add     esi, 2
neg     ebx
jmp     short loc_1000a73e
mov     byte ptr [esi+1], 2bh
add     esi, 2
cmp     ebx, 64h
jl      short loc_1000a75f
mov     eax, 51eb851fh
imul    ebx
sar     edx, 5
mov     eax, edx
shr     eax, 1fh
add     eax, edx
lea     ecx, [eax+30h]
imul    eax, -64h
mov     [esi], cl
inc     esi
add     ebx, eax
mov     eax, 66666667h
imul    ebx
sar     edx, 2
mov     eax, edx
shr     eax, 1fh
add     eax, edx
mov     cl, al
add     cl, cl
lea     edx, [eax+30h]
add     cl, cl
add     al, cl
add     al, al
sub     bl, al
add     bl, 30h
mov     [esi], dl
mov     [esi+1], bl
add     esi, 2
mov     edi, [esp+0c0h+var_78]
mov     byte ptr [esi], 0
sub     esi, edi
cmp     [esp+0c0h+var_99], 0
jz      loc_1000aad4
cmp     [esp+0c0h+var_aa], 0
jnz     loc_1000aaf2
cmp     esi, [esp+0c0h+var_90]
jge     loc_1000aadb
mov     ebx, [esp+0c0h+var_90]
mov     ecx, ebx
sub     ecx, esi
mov     eax, ebx
cmp     ebx, ecx
jl      short loc_1000a7d0
mov     esi, edi
sub     esi, ecx
mov     dl, [esi+eax]
mov     [eax+edi], dl
dec     eax
cmp     eax, ecx
jge     short loc_1000a7c5
xor     eax, eax
cmp     [esp+0c0h+var_b3], al
setnz   al
test    ecx, ecx
jz      short loc_1000a7eb
push    ecx
add     eax, edi
push    30h
push    eax
call    memset
add     esp, 0ch
mov     esi, ebx
jmp     loc_1000aadb
mov     eax, [esp+0c0h+var_a8]
fstp    st(2)
mov     ecx, [esp+0c0h+var_8c]
fstp    st(2)
mov     edx, [ecx+0ch]
fstp    st(1)
add     eax, 4
fstp    st
mov     [esp+0c0h+var_a8], eax
mov     eax, [eax-4]
mov     [eax], edx
jmp     loc_1000aace
fstp    st(2)
mov     [esp+0c0h+var_50], 25h
fstp    st(2)
lea     edi, [esp+0c0h+var_50]
fstp    st(1)
mov     esi, 1
fstp    st
jmp     loc_1000aad4
fstp    st(2)
add     edx, 4
fstp    st(2)
mov     [esp+0c0h+var_a8], edx
mov     edx, [edx-4]
fstp    st(1)
fstp    st
mov     [esp+0c0h+var_50], dl
test    esi, esi
js      short loc_1000a86d
cmp     esi, 1
jle     short loc_1000a860
dec     esi
push    esi
push    edx
lea     eax, [esp+0c8h+var_4f]
push    eax
call    memset
add     esp, 0ch
mov     esi, [esp+0c0h+var_b0]
lea     edi, [esp+0c0h+var_50]
jmp     loc_1000aad4
mov     esi, 1
lea     edi, [esp+0c0h+var_50]
jmp     loc_1000aad4
mov     edi, [edx]
fstp    st(2)
add     edx, 4
fstp    st(2)
fstp    st(1)
mov     [esp+0c0h+var_a8], edx
fstp    st
test    edi, edi
jnz     short loc_1000a897
mov     edi, offset dword_100796bc
jmp     short loc_1000a8a0
cmp     bl, 7
jnz     short loc_1000a8a0
mov     [esp+0c0h+var_88], edi
test    esi, esi
js      short loc_1000a8c6
xor     esi, esi
cmp     [esp+0c0h+var_b0], esi
jle     loc_1000aad4
cmp     byte ptr [esi+edi], 0
jz      loc_1000aad4
inc     esi
cmp     esi, [esp+0c0h+var_b0]
jl      short loc_1000a8b0
jmp     loc_1000aad4
mov     esi, edi
test    edi, edi
jz      loc_1000aad4
cmp     byte ptr [edi], 0
jz      short loc_1000a8db
inc     esi
cmp     byte ptr [esi], 0
jnz     short loc_1000a8d5
sub     esi, edi
and     esi, 3fffffffh
jmp     loc_1000aad4
cmp     bl, 0fh
fstp    st(2)
setnz   bl
fstp    st(2)
dec     bl
fstp    st(1)
add     edx, 4
fstp    st
and     bl, 0fbh
add     bl, 27h
mov     [esp+0c0h+var_a8], edx
mov     edx, [edx-4]
xor     ecx, ecx
test    edx, edx
setz    cl
mov     [esp+0c0h+var_b1], bl
mov     [esp+0c0h+var_98], edx
test    ecx, ecx
jz      short loc_1000a930
cmp     [esp+0c0h+var_b2], 0bh
mov     edx, offset anull_0
jz      short loc_1000a92c
mov     edx, offset anull_1
mov     [esp+0c0h+var_98], edx
xor     edi, edi
mov     [esp+0c0h+var_78], 0
mov     [esp+0c0h+var_84], edi
test    esi, esi
jz      short loc_1000a959
mov     al, [edi+edx]
test    al, al
jz      short loc_1000a955
cmp     al, bl
jnz     short loc_1000a951
inc     [esp+0c0h+var_78]
inc     edi
dec     esi
jnz     short loc_1000a942
mov     [esp+0c0h+var_84], edi
test    ecx, ecx
jnz     short loc_1000a969
cmp     [esp+0c0h+var_b2], 0bh
jnz     short loc_1000a969
lea     eax, [ecx+1]
jmp     short loc_1000a96b
xor     eax, eax
mov     edx, [esp+0c0h+var_78]
lea     ecx, [edi+eax*2]
lea     esi, [edx+ecx+1]
mov     [esp+0c0h+var_b0], eax
cmp     esi, 46h
jle     loc_1000aa0e
lea     eax, [esi-1]
cmp     eax, 7ffffefeh
ja      short loc_1000aa06
cmp     dword_10080230, 0
jz      short loc_1000a9f6
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1000a9a9
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [esp+0c0h+var_64]
mov     eax, esi
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1000a9c7
push    eax
call    dword_10080284
add     esp, 4
mov     bl, [esp+0c0h+var_b1]
mov     eax, [esp+0c0h+var_64]
mov     [esp+0c0h+var_88], eax
mov     edi, eax
test    eax, eax
jnz     short loc_1000aa12
mov     eax, [esp+0c0h+var_8c]
mov     byte ptr [eax+18h], 1
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0b4h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
call    dword_1008024c
add     esp, 4
mov     [esp+0c0h+var_64], eax
jmp     short loc_1000a9cf
xor     eax, eax
mov     [esp+0c0h+var_64], eax
jmp     short loc_1000a9cf
lea     edi, [esp+0c0h+var_50]
xor     esi, esi
cmp     [esp+0c0h+var_b0], esi
jz      short loc_1000aa21
mov     [edi], bl
mov     esi, 1
mov     eax, [esp+0c0h+var_84]
xor     ecx, ecx
mov     dword ptr [esp+0c0h+var_80], eax
test    eax, eax
jle     short loc_1000aa49
mov     edx, [esp+0c0h+var_98]
mov     al, [ecx+edx]
mov     [esi+edi], al
inc     esi
cmp     al, bl
jnz     short loc_1000aa42
mov     [esi+edi], al
inc     esi
inc     ecx
cmp     ecx, dword ptr [esp+0c0h+var_80]
jl      short loc_1000aa33
cmp     [esp+0c0h+var_b0], 0
jz      short loc_1000aa54
mov     [esi+edi], bl
inc     esi
mov     byte ptr [esi+edi], 0
jmp     short loc_1000aad4
fstp    st(2)
add     edx, 4
fstp    st(2)
mov     [esp+0c0h+var_a8], edx
mov     edx, [edx-4]
fstp    st(1)
fstp    st
test    edx, edx
jz      short loc_1000aace
mov     ecx, [edx+4]
mov     edx, [edx]
push    ecx
jmp     short loc_1000aac1
mov     eax, [edx]
fstp    st(2)
add     edx, 8
fstp    st(2)
mov     [esp+0c0h+var_a8], edx
fstp    st(1)
mov     edx, [edx-4]
fstp    st
mov     ecx, edx
shl     ecx, 4
sub     ecx, edx
lea     esi, [eax+ecx*4+4]
mov     eax, [esi]
test    eax, eax
jz      short loc_1000aabc
mov     ebx, [esp+0c0h+var_8c]
push    0ffffffffh
push    eax
mov     eax, ebx
call    sub_1000ac50
push    1
push    offset asc_100796d0
mov     eax, ebx
call    sub_1000ac50
add     esp, 10h
mov     edx, [esi+4]
push    0ffffffffh
mov     eax, [esp+0c4h+var_8c]
push    edx
call    sub_1000ac50
add     esp, 8
xor     esi, esi
mov     [esp+0c0h+var_90], esi
cmp     [esp+0c0h+var_aa], 0
jnz     short loc_1000aaf2
mov     eax, [esp+0c0h+var_90]
sub     eax, esi
test    eax, eax
jle     short loc_1000aaf2
push    eax
mov     eax, [esp+0c4h+var_8c]
call    sub_10009c70
add     esp, 4
test    esi, esi
jle     short loc_1000ab04
mov     eax, [esp+0c0h+var_8c]
push    esi
push    edi
call    sub_1000ac50
add     esp, 8
cmp     [esp+0c0h+var_aa], 0
jz      short loc_1000ab22
mov     eax, [esp+0c0h+var_90]
sub     eax, esi
test    eax, eax
jle     short loc_1000ab22
push    eax
mov     eax, [esp+0c4h+var_8c]
call    sub_10009c70
add     esp, 4
mov     eax, [esp+0c0h+var_88]
push    eax
call    sub_10009770
mov     eax, [esp+0c4h+src]
inc     eax
mov     [esp+0c4h+src], eax
movsx   eax, byte ptr [eax]
add     esp, 4
test    eax, eax
jnz     loc_10009e30
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0b4h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+0c0h+var_8c]
fstp    st(2)
fstp    st(2)
push    1
fstp    st(1)
push    offset asc_100796a0
fstp    st
call    sub_1000ac50
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0b4h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esp+0c0h+var_8c]
mov     byte ptr [ecx+18h], 1
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0b4h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     edx, [esp+0c0h+var_8c]
mov     byte ptr [edx+18h], 1
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0b4h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
fstp    st(2)
fstp    st(2)
fstp    st(1)
fstp    st
mov     ecx, [esp+0c0h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, eax
mov     al, [esi+18h]
or      al, [esi+1ah]
push    edi
jnz     short loc_1000acc4
mov     edi, [ebp+size]
mov     edx, [ebp+src]
test    edi, edi
jns     short loc_1000ac8a
mov     eax, edx
test    edx, edx
jz      short loc_1000acc4
cmp     byte ptr [edx], 0
jz      short loc_1000ac7c
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1000ac76
sub     eax, edx
and     eax, 3fffffffh
mov     edi, eax
mov     [ebp+size], eax
test    edi, edi
jz      short loc_1000acc4
test    edx, edx
jz      short loc_1000acc4
mov     ecx, [esi+0ch]
mov     eax, [esi+10h]
lea     ebx, [ecx+edi]
cmp     ebx, eax
jl      short loc_1000acb0
cmp     byte ptr [esi+19h], 0
jnz     short loc_1000acca
sub     eax, ecx
dec     eax
mov     byte ptr [esi+1ah], 1
test    eax, eax
jle     short loc_1000acc4
mov     edi, eax
push    edi
push    edx
mov     edx, [esi+8]
add     edx, [esi+0ch]
push    edx
call    memcpy
add     esp, 0ch
add     [esi+0ch], edi
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, [esi+8]
mov     ebx, eax
sub     ebx, [esi+4]
neg     ebx
sbb     ebx, ebx
and     ebx, eax
lea     eax, [edi+1]
cdq
mov     edi, eax
mov     eax, [esi+0ch]
mov     ecx, edx
cdq
add     edi, eax
mov     eax, [esi+14h]
adc     ecx, edx
cdq
cmp     ecx, edx
jl      short loc_1000ad05
jg      short loc_1000acf6
cmp     edi, eax
jbe     short loc_1000ad05
call    sub_1000ade0
mov     byte ptr [esi+1ah], 1
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
cmp     byte ptr [esi+19h], 1
mov     [esi+10h], edi
jnz     short loc_1000ad1b
mov     eax, [esi]
push    edi
call    sub_10009ac0
add     esp, 4
jmp     short loc_1000ad2e
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000ad5b
push    edi
push    ebx
call    sub_10009890
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_1000ad5b
test    ebx, ebx
jnz     short loc_1000ad4d
mov     eax, [esi+0ch]
test    eax, eax
jle     short loc_1000ad4d
mov     ecx, [esi+8]
push    eax
push    ecx
push    edi
call    memcpy
add     esp, 0ch
mov     edx, [ebp+src]
mov     [esi+8], edi
mov     edi, [ebp+size]
jmp     loc_1000acb0
mov     byte ptr [esi+18h], 1
call    sub_1000ade0
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, [edi+8]
push    esi
test    eax, eax
jz      short loc_1000add2
mov     ecx, [edi+0ch]
mov     byte ptr [eax+ecx], 0
mov     al, [edi+19h]
test    al, al
jz      short loc_1000adc5
mov     edx, [edi+8]
cmp     edx, [edi+4]
jnz     short loc_1000add0
cmp     al, 1
jnz     short loc_1000ad9f
mov     ecx, [edi+0ch]
mov     esi, [edi]
inc     ecx
call    sub_10009a40
jmp     short loc_1000adac
mov     eax, [edi+0ch]
inc     eax
push    eax
call    sub_10009510
add     esp, 4
mov     [edi+8], eax
test    eax, eax
jz      short loc_1000adca
mov     ecx, [edi+0ch]
mov     edx, [edi+4]
inc     ecx
push    ecx
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     eax, [edi+8]
pop     esi
retn
mov     byte ptr [edi+18h], 1
pop     esi
retn
mov     eax, edx
pop     esi
retn
mov     eax, [esi+8]
cmp     eax, [esi+4]
jz      short loc_1000ae06
cmp     byte ptr [esi+19h], 1
jnz     short loc_1000adfd
mov     ecx, [esi]
call    sub_10009810
mov     dword ptr [esi+8], 0
retn
push    eax
call    sub_10009770
add     esp, 4
mov     dword ptr [esi+8], 0
retn
push    ebp
mov     ebp, esp
sub     esp, 70h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    edi
push    eax
lea     edx, [ebp+var_50]
mov     [ebp+var_68], edx
mov     [ebp+var_64], edx
mov     edx, [esi+48h]
lea     eax, [ebp+var_6c]
push    1
push    eax
mov     [ebp+var_60], 0
mov     [ebp+var_5c], 46h
mov     [ebp+var_58], edx
mov     [ebp+var_53], 1
mov     [ebp+var_54], 0
mov     [ebp+var_6c], esi
call    sub_10009dd0
add     esp, 0ch
lea     edi, [ebp+var_6c]
call    sub_1000ad70
cmp     [ebp+var_54], 0
jz      short loc_1000ae6f
mov     byte ptr [esi+32h], 1
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     edi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 70h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
mov     esi, [ebp+arg_0]
mov     edx, [esi+48h]
lea     eax, [ebp+var_50]
mov     ecx, eax
push    edi
mov     [ebp+var_68], eax
mov     eax, [ebp+arg_4]
push    eax
mov     [ebp+var_64], ecx
lea     ecx, [ebp+var_6c]
push    1
push    ecx
lea     ecx, [ebp+arg_8]
mov     [ebp+var_60], 0
mov     [ebp+var_5c], 46h
mov     [ebp+var_58], edx
mov     [ebp+var_53], 1
mov     [ebp+var_54], 0
mov     [ebp+var_6c], esi
call    sub_10009dd0
add     esp, 0ch
lea     edi, [ebp+var_6c]
call    sub_1000ad70
cmp     [ebp+var_54], 0
jz      short loc_1000aee8
mov     byte ptr [esi+32h], 1
mov     ecx, [ebp+var_4]
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 74h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
lea     ecx, [ebp+var_50]
mov     edx, ecx
mov     [ebp+var_6c], ecx
mov     ecx, [ebp+arg_8]
push    edi
push    ecx
mov     [ebp+var_68], edx
mov     [ebp+var_54], eax
mov     eax, [esi+48h]
lea     edx, [ebp+var_70]
push    1
push    edx
lea     ecx, [ebp+arg_c]
mov     [ebp+var_64], 0
mov     [ebp+var_60], 46h
mov     [ebp+var_5c], eax
mov     [ebp+var_57], 1
mov     [ebp+var_58], 0
mov     [ebp+var_70], esi
call    sub_10009dd0
add     esp, 0ch
lea     edi, [ebp+var_70]
call    sub_1000ad70
cmp     [ebp+var_58], 0
mov     edi, eax
jz      short loc_1000af70
mov     byte ptr [esi+32h], 1
mov     eax, [ebp+var_54]
mov     ecx, esi
call    sub_10009810
mov     ecx, [ebp+var_4]
mov     eax, edi
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 70h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1006edd0
test    eax, eax
jz      short loc_1000afc3
xor     eax, eax
pop     edi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
lea     eax, [ebp+var_50]
mov     ecx, eax
mov     [ebp+var_68], eax
xor     eax, eax
push    esi
push    eax
lea     edx, [ebp+var_6c]
mov     [ebp+var_64], ecx
push    edx
mov     ecx, edi
mov     [ebp+var_6c], eax
mov     [ebp+var_60], eax
mov     [ebp+var_5c], 46h
mov     [ebp+var_58], 3b9aca00h
mov     [ebp+var_52], al
mov     [ebp+var_54], 200h
call    sub_10009dd0
add     esp, 0ch
lea     edi, [ebp+var_6c]
call    sub_1000ad70
mov     ecx, [ebp+var_4]
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
call    sub_1006edd0
test    eax, eax
jz      short loc_1000b032
xor     eax, eax
pop     ecx
pop     ebp
retn
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+arg_4]
push    eax
push    ecx
call    sub_1000af90
add     esp, 8
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
sub     esp, 20h
xor     eax, eax
push    edi
cmp     edx, eax
jg      short loc_1000b068
mov     eax, [ebp+arg_4]
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_4]
mov     [ebp+var_18], ecx
mov     [ebp+var_14], ecx
mov     ecx, [ebp+arg_8]
push    ecx
mov     [ebp+var_c], edx
push    eax
lea     edx, [ebp+var_1c]
push    edx
lea     ecx, [ebp+arg_c]
mov     [ebp+var_1c], eax
mov     [ebp+var_10], eax
mov     [ebp+var_8], eax
mov     [ebp+var_2], al
mov     [ebp+var_4], ax
call    sub_10009dd0
add     esp, 0ch
lea     edi, [ebp+var_1c]
call    sub_1000ad70
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 100h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
lea     eax, [ebp+var_e0]
push    edi
push    edx
mov     [ebp+var_f8], eax
mov     [ebp+var_f4], eax
xor     eax, eax
push    eax
lea     edx, [ebp+var_fc]
push    edx
mov     [ebp+var_fc], eax
mov     [ebp+var_f0], eax
mov     [ebp+var_ec], 0d2h
mov     [ebp+var_e8], eax
mov     [ebp+var_e2], al
mov     [ebp+var_e4], ax
call    sub_10009dd0
add     esp, 0ch
lea     edi, [ebp+var_fc]
call    sub_1000ad70
mov     ecx, dword_10080314
push    eax
mov     eax, [ebp+arg_0]
push    eax
push    ecx
call    dword_10080310
mov     ecx, [ebp+var_4]
add     esp, 0ch
xor     ecx, ebp
pop     edi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     dword_10080310, 0
jz      short loc_1000b16e
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
push    eax
lea     ecx, [ebp+arg_8]
call    sub_1000b0b0
add     esp, 4
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    eax
push    1
push    ecx
lea     ecx, [ebp+arg_8]
call    sub_10009dd0
add     esp, 0ch
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 104h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
xor     ebx, ebx
cmp     byte_100813b0, bl
jnz     short loc_1000b228
push    ebx
mov     word_100813b1, bx
call    sub_10008af0
mov     edx, [eax+38h]
lea     ecx, [ebp+var_104]
push    ecx
push    100h
push    eax
call    edx
add     esp, 10h
xor     eax, eax
mov     byte_100813b3[eax], al
inc     eax
cmp     eax, 100h
jl      short loc_1000b1d2
xor     eax, eax
movzx   edx, [ebp+eax+var_104]
add     dl, byte_100813b3[eax]
mov     cl, byte ptr word_100813b1+1
add     cl, dl
mov     byte ptr word_100813b1+1, cl
mov     bl, byte_100813b3[eax]
movzx   ecx, cl
mov     dl, byte_100813b3[ecx]
mov     byte_100813b3[ecx], bl
mov     byte_100813b3[eax], dl
inc     eax
cmp     eax, 100h
jl      short loc_1000b1e2
mov     byte_100813b0, 1
mov     al, byte ptr word_100813b1
mov     dl, byte ptr word_100813b1+1
inc     al
mov     byte ptr word_100813b1, al
movzx   ecx, al
mov     al, byte_100813b3[ecx]
add     dl, al
mov     byte ptr word_100813b1+1, dl
movzx   edx, dl
movzx   edx, byte_100813b3[edx]
mov     byte_100813b3[ecx], dl
movzx   ecx, byte ptr word_100813b1+1
mov     byte_100813b3[ecx], al
movzx   edx, byte ptr word_100813b1
mov     cl, byte_100813b3[edx]
add     cl, al
movzx   edx, cl
mov     ecx, [ebp+var_4]
mov     al, byte_100813b3[edx]
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     dword_10080234, 0
push    ebx
push    edi
mov     edi, [ebp+arg_4]
jnz     short loc_1000b2a5
xor     ebx, ebx
jmp     short loc_1000b2c0
push    5
call    dword_10080274
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1000b2c0
push    ebx
call    dword_1008027c
add     esp, 4
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jz      short loc_1000b2d3
call    sub_1000b190
mov     [edi], al
inc     edi
dec     esi
jnz     short loc_1000b2c8
pop     esi
test    ebx, ebx
jz      short loc_1000b2e2
push    ebx
call    dword_10080284
add     esp, 4
pop     edi
pop     ebx
pop     ebp
retn
movzx   eax, byte ptr [edx]
inc     edx
cmp     eax, 0c0h
jb      short loc_1000b359
mov     cl, [edx]
push    esi
movzx   esi, ds:byte_100763a8[eax]
mov     al, cl
and     al, 0c0h
cmp     al, 80h
jnz     short loc_1000b326
lea     ecx, [ecx+0]
movzx   ecx, cl
and     ecx, 3fh
shl     esi, 6
inc     edx
add     esi, ecx
mov     cl, [edx]
mov     al, cl
and     al, 0c0h
cmp     al, 80h
jz      short loc_1000b310
cmp     esi, 80h
jb      short loc_1000b34a
mov     ecx, esi
and     ecx, 0fffff800h
cmp     ecx, 0d800h
jz      short loc_1000b34a
mov     eax, esi
and     eax, 0fffffffeh
cmp     eax, 0fffeh
jnz     short loc_1000b353
mov     eax, 0fffdh
mov     [edi], edx
pop     esi
retn
mov     eax, esi
mov     [edi], edx
pop     esi
retn
mov     [edi], edx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+1fh], 1
push    edi
jz      short loc_1000b3c1
cmp     [ebp+arg_4], 1
jz      short loc_1000b3c7
mov     eax, esi
call    sub_10024530
test    eax, eax
jz      short loc_1000b392
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esi+18h]
mov     eax, [esi+4]
and     ecx, 0fffffffeh
add     ecx, eax
cmp     eax, ecx
jnb     short loc_1000b3b2
mov     bl, [eax+1]
mov     dl, [eax]
mov     [eax], bl
mov     [eax+1], dl
add     eax, 2
cmp     eax, ecx
jb      short loc_1000b3a1
mov     al, [ebp+arg_4]
mov     [esi+1fh], al
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_4], 1
jnz     short loc_1000b3d4
and     dword ptr [esi+18h], 0fffffffeh
mov     eax, [esi+18h]
lea     ecx, [eax+eax+1]
jmp     short loc_1000b3db
mov     ecx, [esi+18h]
lea     ecx, [ecx+ecx+2]
mov     edi, [esi+4]
mov     ebx, [esi+18h]
mov     esi, [esi]
add     ebx, edi
mov     [esp+18h+var_8], ebx
call    sub_10009a40
mov     [esp+18h+var_4], eax
test    eax, eax
jz      short loc_1000b386
mov     esi, [ebp+arg_0]
mov     cl, [esi+1fh]
cmp     cl, 1
jnz     loc_1000b5ec
cmp     [ebp+arg_4], 2
jnz     loc_1000b4fd
cmp     edi, ebx
jnb     loc_1000b5d9
jmp     short loc_1000b420
movzx   ecx, byte ptr [edi]
inc     edi
cmp     ecx, 0c0h
jb      short loc_1000b48e
movzx   ecx, ds:byte_100763a8[ecx]
cmp     edi, ebx
jz      short loc_1000b457
mov     dl, [edi]
mov     bl, dl
and     bl, 0c0h
cmp     bl, 80h
mov     ebx, [esp+18h+var_8]
jnz     short loc_1000b457
movzx   edx, dl
and     edx, 3fh
shl     ecx, 6
inc     edi
add     ecx, edx
cmp     edi, ebx
jnz     short loc_1000b437
cmp     ecx, 80h
jb      short loc_1000b47c
mov     edx, ecx
and     edx, 0fffff800h
cmp     edx, 0d800h
jz      short loc_1000b47c
mov     edx, ecx
and     edx, 0fffffffeh
cmp     edx, 0fffeh
jnz     short loc_1000b48e
mov     ecx, 0fffdh
mov     [eax], cl
shr     ecx, 8
mov     [eax+1], cl
add     eax, 2
jmp     short loc_1000b4e2
cmp     ecx, 0ffffh
ja      short loc_1000b4a3
mov     [eax], cl
shr     ecx, 8
mov     [eax+1], cl
add     eax, 2
jmp     short loc_1000b4e2
lea     edx, [ecx-10000h]
shr     edx, 0ah
mov     ebx, ecx
shr     ebx, 0ah
xor     bl, dl
and     bl, 3fh
xor     bl, dl
lea     edx, [ecx-10000h]
shr     edx, 12h
mov     [eax], bl
mov     ebx, [esp+18h+var_8]
and     dl, 3
sub     dl, 28h
mov     [eax+1], dl
mov     [eax+2], cl
shr     ecx, 8
and     cl, 3
sub     cl, 24h
mov     [eax+3], cl
add     eax, 4
cmp     edi, ebx
jb      loc_1000b420
mov     ecx, eax
sub     ecx, [esp+18h+var_4]
inc     eax
mov     [esi+18h], ecx
mov     byte ptr [eax-1], 0
jmp     loc_1000b7e7
cmp     edi, ebx
jnb     loc_1000b5d9
movzx   ecx, byte ptr [edi]
inc     edi
cmp     ecx, 0c0h
jb      short loc_1000b579
movzx   ecx, ds:byte_100763a8[ecx]
cmp     edi, ebx
jz      short loc_1000b540
lea     esp, [esp+0]
mov     dl, [edi]
mov     bl, dl
and     bl, 0c0h
cmp     bl, 80h
mov     ebx, [esp+18h+var_8]
jnz     short loc_1000b540
movzx   edx, dl
and     edx, 3fh
shl     ecx, 6
inc     edi
add     ecx, edx
cmp     edi, ebx
jnz     short loc_1000b520
cmp     ecx, 80h
jb      short loc_1000b565
mov     edx, ecx
and     edx, 0fffff800h
cmp     edx, 0d800h
jz      short loc_1000b565
mov     edx, ecx
and     edx, 0fffffffeh
cmp     edx, 0fffeh
jnz     short loc_1000b579
mov     ecx, 0fffdh
mov     edx, ecx
shr     edx, 8
mov     [eax], dl
mov     [eax+1], cl
add     eax, 2
jmp     short loc_1000b5d1
cmp     ecx, 0ffffh
ja      short loc_1000b590
mov     edx, ecx
shr     edx, 8
mov     [eax], dl
mov     [eax+1], cl
add     eax, 2
jmp     short loc_1000b5d1
lea     edx, [ecx-10000h]
shr     edx, 12h
and     dl, 3
sub     dl, 28h
mov     [eax], dl
lea     edx, [ecx-10000h]
shr     edx, 0ah
mov     ebx, ecx
shr     ebx, 0ah
xor     bl, dl
and     bl, 3fh
xor     bl, dl
mov     edx, ecx
shr     edx, 8
and     dl, 3
mov     [eax+1], bl
mov     ebx, [esp+18h+var_8]
sub     dl, 24h
mov     [eax+2], dl
mov     [eax+3], cl
add     eax, 4
cmp     edi, ebx
jb      loc_1000b505
mov     ecx, eax
sub     ecx, [esp+18h+var_4]
inc     eax
mov     [esi+18h], ecx
mov     byte ptr [eax-1], 0
jmp     loc_1000b7e7
cmp     cl, 2
jnz     loc_1000b6ec
cmp     edi, ebx
jnb     loc_1000b7de
lea     ecx, [ecx+0]
movzx   edx, byte ptr [edi+1]
movzx   ecx, byte ptr [edi]
shl     edx, 8
add     ecx, edx
lea     edx, [ecx-0d800h]
add     edi, 2
cmp     edx, 7ffh
ja      short loc_1000b64a
cmp     edi, ebx
jnb     short loc_1000b64a
movzx   esi, byte ptr [edi+1]
movzx   edx, byte ptr [edi]
shl     esi, 8
add     edx, esi
mov     esi, ecx
and     ecx, 3fh
and     esi, 3c0h
lea     ecx, [esi+ecx+40h]
shl     ecx, 0ah
and     edx, 3ffh
add     edi, 2
add     ecx, edx
cmp     ecx, 80h
jnb     short loc_1000b65a
mov     [eax], cl
inc     eax
jmp     loc_1000b6df
mov     edx, ecx
cmp     ecx, 800h
jnb     short loc_1000b67d
shr     edx, 6
and     dl, 1fh
and     cl, 3fh
sub     dl, 40h
sub     cl, 80h
mov     [eax], dl
mov     [eax+1], cl
add     eax, 2
jmp     short loc_1000b6df
cmp     ecx, 10000h
jnb     short loc_1000b6ac
shr     edx, 0ch
and     dl, 0fh
sub     dl, 20h
mov     [eax], dl
mov     edx, ecx
shr     edx, 6
and     dl, 3fh
and     cl, 3fh
sub     dl, 80h
sub     cl, 80h
mov     [eax+1], dl
mov     [eax+2], cl
add     eax, 3
jmp     short loc_1000b6df
shr     edx, 12h
and     dl, 7
sub     dl, 10h
mov     [eax], dl
mov     edx, ecx
shr     edx, 0ch
and     dl, 3fh
sub     dl, 80h
mov     [eax+1], dl
mov     edx, ecx
shr     edx, 6
and     dl, 3fh
and     cl, 3fh
sub     dl, 80h
sub     cl, 80h
mov     [eax+2], dl
mov     [eax+3], cl
add     eax, 4
cmp     edi, ebx
jb      loc_1000b600
jmp     loc_1000b7db
cmp     edi, ebx
jnb     loc_1000b7de
movzx   ecx, byte ptr [edi]
movzx   edx, byte ptr [edi+1]
shl     ecx, 8
add     ecx, edx
lea     edx, [ecx-0d800h]
add     edi, 2
cmp     edx, 7ffh
ja      short loc_1000b73e
cmp     edi, ebx
jnb     short loc_1000b73e
movzx   edx, byte ptr [edi]
movzx   esi, byte ptr [edi+1]
shl     edx, 8
add     edx, esi
mov     esi, ecx
and     ecx, 3fh
and     esi, 3c0h
lea     ecx, [esi+ecx+40h]
shl     ecx, 0ah
and     edx, 3ffh
add     edi, 2
add     ecx, edx
cmp     ecx, 80h
jnb     short loc_1000b74e
mov     [eax], cl
inc     eax
jmp     loc_1000b7d3
mov     edx, ecx
cmp     ecx, 800h
jnb     short loc_1000b771
shr     edx, 6
and     dl, 1fh
and     cl, 3fh
sub     dl, 40h
sub     cl, 80h
mov     [eax], dl
mov     [eax+1], cl
add     eax, 2
jmp     short loc_1000b7d3
cmp     ecx, 10000h
jnb     short loc_1000b7a0
shr     edx, 0ch
and     dl, 0fh
sub     dl, 20h
mov     [eax], dl
mov     edx, ecx
shr     edx, 6
and     dl, 3fh
and     cl, 3fh
sub     dl, 80h
sub     cl, 80h
mov     [eax+1], dl
mov     [eax+2], cl
add     eax, 3
jmp     short loc_1000b7d3
shr     edx, 12h
and     dl, 7
sub     dl, 10h
mov     [eax], dl
mov     edx, ecx
shr     edx, 0ch
and     dl, 3fh
sub     dl, 80h
mov     [eax+1], dl
mov     edx, ecx
shr     edx, 6
and     dl, 3fh
and     cl, 3fh
sub     dl, 80h
sub     cl, 80h
mov     [eax+2], dl
mov     [eax+3], cl
add     eax, 4
cmp     edi, ebx
jb      loc_1000b6f4
mov     esi, [ebp+arg_0]
mov     ecx, eax
sub     ecx, [esp+18h+var_4]
mov     [esi+18h], ecx
mov     edx, 2460h
mov     byte ptr [eax], 0
test    [esi+1ch], dx
jz      short loc_1000b7fc
mov     eax, esi
call    sub_10024760
mov     eax, [esi+24h]
mov     ecx, [esi]
call    sub_10009810
mov     al, [ebp+arg_4]
mov     cx, [esi+1ch]
mov     [esi+1fh], al
mov     edx, 0e7ffh
and     cx, dx
mov     eax, 600h
or      cx, ax
mov     eax, [esp+18h+var_4]
pop     edi
mov     [esi+4], eax
mov     [esi+24h], eax
mov     dword ptr [esi+20h], 0
mov     [esi+1ch], cx
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
push    ebx
xor     eax, eax
cmp     dword ptr [esi+18h], 1
push    edi
jle     short loc_1000b8b6
mov     ecx, [esi+4]
mov     dl, [ecx]
mov     cl, [ecx+1]
cmp     dl, 0feh
jnz     short loc_1000b861
cmp     cl, 0ffh
jnz     short loc_1000b8b6
mov     bl, 3
jmp     short loc_1000b86d
cmp     dl, 0ffh
jnz     short loc_1000b8b6
cmp     cl, 0feh
jnz     short loc_1000b8b6
mov     bl, 2
mov     eax, esi
call    sub_10024530
mov     edi, eax
test    edi, edi
jnz     short loc_1000b8b6
add     dword ptr [esi+18h], 0fffffffeh
mov     ecx, [esi+18h]
mov     eax, [esi+4]
push    ecx
lea     ecx, [eax+2]
push    ecx
push    eax
call    ds:memmove
mov     edx, [esi+18h]
mov     eax, [esi+4]
mov     byte ptr [edx+eax], 0
mov     ecx, [esi+18h]
mov     edx, [esi+4]
mov     eax, 200h
mov     byte ptr [ecx+edx+1], 0
add     esp, 0ch
or      [esi+1ch], ax
mov     [esi+1fh], bl
mov     eax, edi
pop     edi
pop     ebx
pop     ecx
retn
xor     eax, eax
push    esi
test    edx, edx
js      short loc_1000b8cc
lea     esi, [ecx+edx]
jmp     short loc_1000b8cf
or      esi, 0ffffffffh
cmp     [ecx], al
jz      short loc_1000b902
cmp     ecx, esi
jnb     short loc_1000b902
mov     dl, [ecx]
inc     ecx
cmp     dl, 0c0h
jb      short loc_1000b8fc
mov     dl, [ecx]
and     dl, 0c0h
cmp     dl, 80h
jnz     short loc_1000b8fc
lea     esp, [esp+0]
mov     dl, [ecx+1]
inc     ecx
and     dl, 0c0h
cmp     dl, 80h
jz      short loc_1000b8f0
inc     eax
cmp     byte ptr [ecx], 0
jnz     short loc_1000b8d3
pop     esi
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 28h
xor     eax, eax
mov     [esp+28h+var_28], eax
mov     [esp+28h+var_24], eax
mov     [esp+28h+var_20], eax
mov     [esp+28h+var_1c], eax
mov     [esp+28h+var_18], eax
mov     [esp+28h+var_14], eax
mov     [esp+28h+var_10], eax
mov     [esp+28h+var_c], eax
mov     [esp+28h+var_8], eax
mov     [esp+28h+var_4], eax
mov     eax, [ebp+src]
push    2
push    eax
xor     eax, eax
lea     edx, [esp+30h+var_28]
mov     [esp+30h+var_28], esi
call    sub_10024e60
add     esp, 8
test    byte ptr [esp+28h+var_c], 2
jz      short loc_1000b976
cmp     byte ptr [esp+28h+var_c+3], 1
jz      short loc_1000b976
lea     ecx, [esp+28h+var_28]
push    1
push    ecx
call    sub_1000b360
add     esp, 8
cmp     byte ptr [esi+32h], 0
jz      short loc_1000b9a0
test    [esp+28h+var_c], 2460h
jz      short loc_1000b98e
lea     eax, [esp+28h+var_28]
call    sub_10024760
mov     eax, [esp+28h+var_4]
mov     ecx, [esp+28h+var_28]
call    sub_10009810
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+28h+var_24]
mov     esp, ebp
pop     ebp
retn
mov     eax, esi
test    ecx, ecx
jle     short loc_1000b9e4
mov     edx, ecx
push    edi
lea     esp, [esp+0]
movzx   edi, byte ptr [eax+1]
movzx   ecx, byte ptr [eax]
shl     edi, 8
add     ecx, edi
add     ecx, 0ffff2800h
add     eax, 2
cmp     ecx, 7ffh
ja      short loc_1000b9e0
add     eax, 2
dec     edx
jnz     short loc_1000b9c0
pop     edi
sub     eax, esi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
fld     [ebp+arg_0]
fstp    [ebp+arg_0]
fld     [ebp+arg_0]
fstp    [ebp+var_8]
fld     [ebp+arg_0]
fld     [ebp+var_8]
fucompp
fnstsw  ax
test    ah, 44h
jnp     short loc_1000ba1a
mov     eax, 1
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
mov     eax, ecx
test    ecx, ecx
jnz     short loc_1000ba27
retn
cmp     byte ptr [ecx], 0
jz      short loc_1000ba36
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1000ba30
sub     eax, ecx
and     eax, 3fffffffh
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, eax
push    edi
mov     edi, [ebp+arg_4]
test    esi, esi
jz      loc_1000bb28
cmp     dword ptr [esi+0cch], 0
jnz     short loc_1000baa5
mov     ecx, 28h
call    sub_10009a40
test    eax, eax
jz      short loc_1000ba97
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     [eax+1ch], ecx
mov     [eax+20h], ecx
mov     [eax+24h], ecx
mov     ecx, 1
mov     [eax+1ch], cx
mov     byte ptr [eax+1eh], 5
mov     [eax], esi
mov     [esi+0cch], eax
test    eax, eax
jz      loc_1000bb28
mov     edx, [ebp+arg_0]
mov     [esi+28h], edx
test    edi, edi
jz      short loc_1000bade
push    edi
lea     ecx, [ebp+arg_8]
call    sub_1000ae10
mov     edx, [esi+0cch]
add     esp, 4
test    edx, edx
jz      short loc_1000bb28
push    1
push    eax
mov     eax, offset sub_10009760
or      ecx, 0ffffffffh
call    sub_10024e60
add     esp, 8
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     esi, [esi+0cch]
test    esi, esi
jz      short loc_1000bb28
test    byte ptr [esi+1ch], 40h
jz      short loc_1000bb02
mov     eax, [esi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+1ch], 20h
jz      short loc_1000bb10
mov     ebx, [esi+10h]
call    sub_100117b0
mov     ax, [esi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [esi+1ch], ax
mov     byte ptr [esi+1eh], 5
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 6ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, [esi]
mov     edx, [ebx+48h]
lea     eax, [ebp+var_50]
mov     ecx, eax
push    edi
mov     [ebp+var_68], eax
mov     eax, [ebp+arg_4]
push    eax
mov     [ebp+var_64], ecx
lea     ecx, [ebp+var_6c]
push    1
push    ecx
lea     ecx, [ebp+arg_8]
mov     [ebp+var_60], 0
mov     [ebp+var_5c], 46h
mov     [ebp+var_58], edx
mov     [ebp+var_53], 1
mov     [ebp+var_54], 0
mov     [ebp+var_6c], ebx
call    sub_10009dd0
add     esp, 0ch
lea     edi, [ebp+var_6c]
call    sub_1000ad70
cmp     [ebp+var_54], 0
mov     edi, eax
jz      short loc_1000bb9d
mov     byte ptr [ebx+32h], 1
cmp     byte ptr [ebx+35h], 0
mov     ecx, ebx
jz      short loc_1000bbbb
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+4]
inc     dword ptr [esi+44h]
call    sub_10009810
mov     ecx, [ebp+var_4]
mov     [esi+4], edi
pop     edi
mov     dword ptr [esi+0ch], 1
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    edi, edi
jnz     short loc_1000bbf8
or      eax, 0ffffffffh
retn
push    ebx
mov     bl, [edi]
movsx   eax, bl
add     eax, 0ffffffdeh
cmp     eax, 3eh
ja      short def_1000bc0d
movzx   eax, ds:byte_1000bc5c[eax]
jmp     ds:jpt_1000bc0d[eax*4]
mov     bl, 5dh
push    esi
xor     eax, eax
cmp     [edi+1], al
lea     esi, [edi+1]
jz      short loc_1000bc41
lea     ecx, [edi+2]
mov     dl, [esi]
cmp     dl, bl
jnz     short loc_1000bc36
cmp     [ecx], bl
jnz     short loc_1000bc41
mov     [eax+edi], bl
inc     eax
inc     ecx
inc     esi
jmp     short loc_1000bc3a
mov     [eax+edi], dl
inc     eax
inc     esi
inc     ecx
cmp     byte ptr [esi], 0
jnz     short loc_1000bc24
pop     esi
mov     byte ptr [eax+edi], 0
pop     ebx
retn
or      eax, 0ffffffffh
pop     ebx
retn
mov     al, [ecx]
test    al, al
jz      short loc_1000bcce
push    esi
jmp     short loc_1000bcb0
movzx   esi, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[esi]
jnz     short loc_1000bccd
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_1000bcb0
pop     esi
movzx   edx, byte ptr [edx]
movzx   eax, byte ptr [ecx]
movzx   edx, ds:byte_10076030[edx]
movzx   eax, ds:byte_10076030[eax]
sub     eax, edx
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
push    edi
test    eax, eax
jle     short loc_1000bd23
mov     dl, [ecx]
dec     eax
test    dl, dl
jz      short loc_1000bd24
movzx   edi, byte ptr [esi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[edi]
jnz     short loc_1000bd24
inc     ecx
inc     esi
test    eax, eax
jg      short loc_1000bd02
dec     eax
test    eax, eax
jns     short loc_1000bd2e
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn
movzx   eax, byte ptr [esi]
movzx   edx, ds:byte_10076030[eax]
movzx   eax, byte ptr [ecx]
movzx   eax, ds:byte_10076030[eax]
pop     edi
sub     eax, edx
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 34h
fldz
xor     eax, eax
cmp     dl, 1
setnz   al
push    ebx
push    esi
mov     esi, [ebp+arg_0]
add     ecx, esi
xor     ebx, ebx
push    edi
inc     eax
mov     [ebp+var_8], ecx
mov     ecx, [ebp+arg_4]
xor     edi, edi
fst     qword ptr [ecx]
mov     [ebp+var_24], eax
mov     [ebp+var_1c], 1
mov     dword ptr [ebp+var_30], ebx
mov     dword ptr [ebp+var_30+4], edi
mov     [ebp+var_14], ebx
mov     [ebp+var_10], 1
mov     [ebp+var_4], ebx
mov     [ebp+var_18], 1
mov     [ebp+var_c], ebx
cmp     dl, 3
jnz     short loc_1000bda2
inc     esi
mov     ecx, [ebp+var_8]
cmp     esi, ecx
jnb     short loc_1000bdca
movzx   edx, byte ptr [esi]
test    ds:byte_10076130[edx], 1
jz      short loc_1000bdc6
add     esi, eax
cmp     esi, ecx
jb      short loc_1000bda9
fstp    st
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     esi, ecx
jb      short loc_1000bdd5
fstp    st
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dl, [esi]
cmp     dl, 2dh
jnz     short loc_1000bde5
mov     [ebp+var_1c], 0ffffffffh
jmp     short loc_1000bdea
cmp     dl, 2bh
jnz     short loc_1000bdec
add     esi, eax
cmp     esi, ecx
jnb     short loc_1000be01
mov     edx, ebx
cmp     byte ptr [esi], 30h
jnz     short loc_1000be05
add     esi, eax
inc     edx
cmp     esi, ecx
jb      short loc_1000bdf2
mov     [ebp+var_c], edx
mov     ecx, ebx
jmp     short loc_1000be74
mov     [ebp+var_c], edx
mov     [ebp+arg_0], esi
cmp     esi, ecx
jnb     short loc_1000be01
mov     dl, [esi]
movzx   ecx, dl
test    ds:byte_10076130[ecx], 4
jz      short loc_1000be91
cmp     edi, 0ccccccch
jg      short loc_1000be91
jl      short loc_1000be2f
cmp     ebx, 0cccccccbh
jnb     short loc_1000be91
movsx   eax, dl
sub     eax, 30h
cdq
mov     ecx, eax
mov     eax, ebx
mov     esi, ebx
mov     ebx, edi
shld    edi, eax, 2
add     eax, eax
add     eax, eax
add     esi, eax
mov     eax, [ebp+var_24]
adc     ebx, edi
shld    ebx, esi, 1
add     esi, esi
add     ecx, esi
mov     esi, [ebp+arg_0]
adc     edx, ebx
inc     [ebp+var_c]
add     esi, eax
mov     ebx, ecx
mov     edi, edx
mov     [ebp+arg_0], esi
cmp     esi, [ebp+var_8]
jb      short loc_1000be0f
mov     dword ptr [ebp+var_30+4], edi
mov     dword ptr [ebp+var_30], ebx
mov     ecx, [ebp+var_4]
imul    ecx, [ebp+var_10]
add     ecx, [ebp+var_14]
mov     [ebp+var_4], ecx
jns     loc_1000c021
or      eax, 0ffffffffh
neg     ecx
mov     [ebp+var_4], ecx
jmp     loc_1000c026
mov     dword ptr [ebp+var_30+4], edi
mov     dword ptr [ebp+var_30], ebx
cmp     esi, [ebp+var_8]
jnb     short loc_1000be71
mov     ecx, [ebp+var_8]
movzx   edx, byte ptr [esi]
test    ds:byte_10076130[edx], 4
jz      short loc_1000beb9
inc     [ebp+var_c]
inc     [ebp+var_14]
add     esi, eax
cmp     esi, ecx
jb      short loc_1000be9f
jmp     short loc_1000be71
cmp     esi, ecx
jnb     short loc_1000be71
cmp     byte ptr [esi], 2eh
jnz     loc_1000bf69
add     esi, eax
mov     [ebp+arg_0], esi
cmp     esi, ecx
jnb     short loc_1000be71
mov     dl, [esi]
movzx   ecx, dl
test    ds:byte_10076130[ecx], 4
jz      short loc_1000bf38
cmp     edi, 0ccccccch
jg      short loc_1000bf38
jl      short loc_1000beef
cmp     ebx, 0cccccccbh
jnb     short loc_1000bf38
movsx   eax, dl
sub     eax, 30h
cdq
mov     ecx, eax
mov     eax, ebx
mov     esi, ebx
mov     ebx, edi
shld    edi, eax, 2
add     eax, eax
add     eax, eax
add     esi, eax
mov     eax, [ebp+var_24]
adc     ebx, edi
shld    ebx, esi, 1
add     esi, esi
add     ecx, esi
mov     esi, [ebp+arg_0]
adc     edx, ebx
mov     ebx, ecx
mov     ecx, 1
add     [ebp+var_c], ecx
sub     [ebp+var_14], ecx
add     esi, eax
mov     edi, edx
mov     [ebp+arg_0], esi
cmp     esi, [ebp+var_8]
jb      short loc_1000becf
jmp     loc_1000be6b
mov     dword ptr [ebp+var_30+4], edi
mov     dword ptr [ebp+var_30], ebx
cmp     esi, [ebp+var_8]
jnb     loc_1000be71
mov     ecx, [ebp+var_c]
movzx   edx, byte ptr [esi]
test    ds:byte_10076130[edx], 4
jz      short loc_1000bf66
add     esi, eax
inc     ecx
cmp     esi, [ebp+var_8]
jb      short loc_1000bf4a
mov     [ebp+var_c], ecx
jmp     loc_1000be71
mov     [ebp+var_c], ecx
mov     ecx, [ebp+var_4]
cmp     esi, [ebp+var_8]
jnb     loc_1000be74
mov     dl, [esi]
cmp     dl, 65h
jz      short loc_1000bf81
cmp     dl, 45h
jnz     short loc_1000bfe8
add     esi, eax
mov     [ebp+var_18], 0
cmp     esi, [ebp+var_8]
jnb     loc_1000be74
mov     dl, [esi]
cmp     dl, 2dh
jnz     short loc_1000bfa3
mov     [ebp+var_10], 0ffffffffh
jmp     short loc_1000bfa8
cmp     dl, 2bh
jnz     short loc_1000bfaa
add     esi, eax
cmp     esi, [ebp+var_8]
jnb     short loc_1000bfe8
mov     dl, [esi]
mov     byte ptr [ebp+arg_0+3], dl
movzx   edx, dl
test    ds:byte_10076130[edx], 4
jz      short loc_1000bfe8
cmp     ecx, 2710h
jge     short loc_1000bfd5
movsx   edx, byte ptr [ebp+arg_0+3]
lea     ecx, [ecx+ecx*4]
lea     ecx, [edx+ecx*2-30h]
jmp     short loc_1000bfda
mov     ecx, 2710h
add     esi, eax
mov     [ebp+var_18], 1
cmp     esi, [ebp+var_8]
jb      short loc_1000bfaf
cmp     [ebp+var_c], 0
jz      loc_1000be74
cmp     [ebp+var_18], 0
jz      loc_1000be74
cmp     esi, [ebp+var_8]
jnb     loc_1000be74
movzx   edx, byte ptr [esi]
test    ds:byte_10076130[edx], 1
jz      loc_1000be74
add     esi, eax
cmp     esi, [ebp+var_8]
jb      short loc_1000c005
jmp     loc_1000be74
mov     eax, 1
mov     edx, ebx
or      edx, edi
mov     [ebp+var_10], eax
jnz     short loc_1000c04e
cmp     [ebp+var_1c], edx
jge     loc_1000c269
cmp     [ebp+var_c], edx
jz      loc_1000c269
fstp    st
fld     ds:dbl_1007cf20
jmp     loc_1000c269
test    eax, eax
jle     loc_1000c134
cmp     edi, 0ccccccch
jg      short loc_1000c09e
jl      short loc_1000c068
cmp     ebx, 0cccccccch
jnb     short loc_1000c09e
test    ecx, ecx
jle     short loc_1000c098
mov     eax, ebx
mov     ebx, edi
shld    edi, eax, 2
mov     edx, eax
add     eax, eax
add     eax, eax
dec     ecx
add     eax, edx
adc     edi, ebx
shld    edi, eax, 1
lea     ebx, [eax+eax]
cmp     edi, 0ccccccch
jl      short loc_1000c068
jg      short loc_1000c098
cmp     ebx, 0cccccccch
jb      short loc_1000c068
mov     dword ptr [ebp+var_30], ebx
mov     dword ptr [ebp+var_30+4], edi
cmp     [ebp+var_1c], 0
jge     short loc_1000c0b1
neg     ebx
adc     edi, 0
neg     edi
mov     dword ptr [ebp+var_30], ebx
mov     dword ptr [ebp+var_30+4], edi
test    ecx, ecx
jz      loc_1000c264
fld1
cmp     ecx, 133h
jle     loc_1000c1d5
cmp     ecx, 156h
jge     loc_1000c1dd
mov     eax, 3531dec1h
fstp    st(1)
imul    ecx
sar     edx, 6
mov     eax, edx
shr     eax, 1fh
add     eax, edx
imul    eax, 134h
mov     edx, ecx
sub     edx, eax
jz      short loc_1000c11a
fld     ds:dbl_1007cf00
dec     ecx
fmul    st(1), st
mov     eax, 3531dec1h
imul    ecx
sar     edx, 6
mov     eax, edx
shr     eax, 1fh
add     eax, edx
imul    eax, 134h
mov     edx, ecx
sub     edx, eax
jnz     short loc_1000c0f8
fstp    st
cmp     [ebp+var_10], 0
fild    [ebp+var_30]
jge     loc_1000c1c8
fdivrp  st(1), st
fdiv    ds:dbl_1007cf18
jmp     loc_1000c269
push    0
push    0ah
push    edi
push    ebx
call    __alldiv
mov     ecx, eax
mov     [ebp+var_28], eax
mov     ebx, edx
mov     [ebp+var_24], edx
shld    edx, eax, 2
add     eax, eax
add     eax, eax
add     ecx, eax
adc     edx, ebx
mov     ebx, dword ptr [ebp+var_30]
shld    edx, ecx, 1
add     ecx, ecx
mov     eax, ebx
sub     eax, ecx
mov     ecx, edi
sbb     ecx, edx
or      eax, ecx
jnz     short loc_1000c1c0
mov     ecx, [ebp+var_4]
test    ecx, ecx
jle     loc_1000c09b
mov     eax, [ebp+var_28]
mov     edi, [ebp+var_24]
push    0
push    0ah
push    edi
dec     ecx
push    eax
mov     [ebp+var_4], ecx
mov     dword ptr [ebp+var_30], eax
call    __alldiv
mov     ecx, eax
mov     [ebp+var_28], eax
mov     ebx, edx
mov     [ebp+var_24], edx
shld    edx, eax, 2
add     eax, eax
add     eax, eax
add     ecx, eax
adc     edx, ebx
mov     ebx, dword ptr [ebp+var_30]
shld    edx, ecx, 1
add     ecx, ecx
mov     eax, ebx
sub     eax, ecx
mov     ecx, edi
sbb     ecx, edx
or      eax, ecx
jz      short loc_1000c16a
mov     ecx, [ebp+var_4]
jmp     loc_1000c09b
mov     ecx, [ebp+var_4]
jmp     loc_1000c09e
fmulp   st(1), st
fmul    ds:dbl_1007cf18
jmp     loc_1000c269
cmp     ecx, 156h
jl      short loc_1000c1f9
cmp     [ebp+var_10], 0
fstp    st
jge     short loc_1000c1ec
fild    [ebp+var_30]
fmulp   st(1), st
jmp     short loc_1000c269
fstp    st
fild    [ebp+var_30]
fmul    ds:dbl_1007cf10
jmp     short loc_1000c269
mov     eax, 2e8ba2e9h
fstp    st(1)
imul    ecx
sar     edx, 2
mov     eax, edx
shr     eax, 1fh
add     eax, edx
imul    eax, 16h
mov     edx, ecx
sub     edx, eax
jz      short loc_1000c23a
fld     ds:dbl_1007cf00
dec     ecx
fmul    st(1), st
mov     eax, 2e8ba2e9h
imul    ecx
sar     edx, 2
mov     eax, edx
shr     eax, 1fh
add     eax, edx
imul    eax, 16h
mov     edx, ecx
sub     edx, eax
jnz     short loc_1000c21b
fstp    st
test    ecx, ecx
jle     short loc_1000c257
fld     ds:dbl_1007cf08
dec     ecx
mov     eax, 0ba2e8ba3h
mul     ecx
shr     edx, 4
inc     edx
dec     edx
fmul    st(1), st
jnz     short loc_1000c250
fstp    st
cmp     [ebp+var_10], 0
fild    [ebp+var_30]
jge     short loc_1000c1e8
fdivrp  st(1), st
jmp     short loc_1000c269
fstp    st
fild    [ebp+var_30]
mov     eax, [ebp+arg_4]
fstp    qword ptr [eax]
cmp     esi, [ebp+var_8]
jb      loc_1000bdcc
cmp     [ebp+var_c], 0
jle     loc_1000bdcc
cmp     [ebp+var_18], 0
jz      loc_1000bdcc
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     edx, [ebp+arg_0]
push    ebx
mov     bl, al
xor     eax, eax
cmp     bl, 1
setnz   al
push    esi
push    edi
mov     edi, [ebp+arg_8]
add     edi, edx
xor     ecx, ecx
mov     [ebp+arg_8], edi
lea     esi, [eax+1]
xor     eax, eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
cmp     bl, 3
jnz     short loc_1000c2d4
inc     edx
mov     [ebp+arg_0], edx
mov     ebx, edi
cmp     edx, ebx
jnb     short loc_1000c31b
lea     ebx, [ebx+0]
movzx   edi, byte ptr [edx]
test    ds:byte_10076130[edi], 1
jz      short loc_1000c2f7
add     edx, esi
cmp     edx, ebx
jb      short loc_1000c2e0
mov     [ebp+arg_0], edx
jmp     short loc_1000c31b
mov     [ebp+arg_0], edx
cmp     edx, ebx
jnb     short loc_1000c31b
mov     bl, [edx]
cmp     bl, 2dh
jnz     short loc_1000c30e
mov     [ebp+var_c], 1
jmp     short loc_1000c313
cmp     bl, 2bh
jnz     short loc_1000c318
add     edx, esi
mov     [ebp+arg_0], edx
mov     ebx, [ebp+arg_8]
mov     [ebp+var_10], edx
cmp     edx, ebx
jnb     short loc_1000c330
cmp     byte ptr [edx], 30h
jnz     short loc_1000c32d
add     edx, esi
cmp     edx, ebx
jb      short loc_1000c322
mov     [ebp+arg_0], edx
mov     [ebp+var_4], eax
cmp     edx, ebx
jnb     short loc_1000c3aa
mov     edi, edx
lea     esp, [esp+0]
movsx   ebx, byte ptr [edi]
mov     [ebp+var_8], ebx
add     ebx, 0ffffffd0h
cmp     ebx, 9
ja      short loc_1000c386
mov     edx, eax
mov     ebx, ecx
shld    ecx, eax, 2
add     eax, eax
add     eax, eax
add     edx, eax
mov     eax, [ebp+var_8]
adc     ebx, ecx
shld    ebx, edx, 1
lea     ecx, [edx+edx]
cdq
add     eax, ecx
adc     ebx, edx
mov     edx, [ebp+arg_0]
add     eax, 0ffffffd0h
adc     ebx, 0ffffffffh
add     [ebp+var_4], esi
mov     ecx, ebx
mov     ebx, [ebp+arg_8]
add     edi, esi
cmp     edi, ebx
jb      short loc_1000c340
jmp     short loc_1000c389
mov     ebx, [ebp+arg_8]
mov     edi, [ebp+arg_4]
cmp     ecx, 7fffffffh
jb      short loc_1000c3ad
ja      short loc_1000c39b
cmp     eax, 0ffffffffh
jbe     short loc_1000c3ad
mov     dword ptr [edi], 0
mov     dword ptr [edi+4], 80000000h
jmp     short loc_1000c3bf
mov     edi, [ebp+arg_4]
cmp     [ebp+var_c], 0
jz      short loc_1000c3ba
neg     eax
adc     ecx, 0
neg     ecx
mov     [edi+4], ecx
mov     [edi], eax
cmp     [ebp+var_8], 0
mov     ecx, [ebp+var_4]
jz      short loc_1000c3cf
lea     eax, [ecx+edx]
cmp     eax, ebx
jb      short loc_1000c3e1
test    ecx, ecx
jnz     short loc_1000c3d8
cmp     [ebp+var_10], edx
jz      short loc_1000c3e1
mov     eax, esi
imul    eax, 13h
cmp     ecx, eax
jle     short loc_1000c3ed
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
jge     short loc_1000c3f8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
xor     ecx, ecx
mov     edi, edx
cmp     ecx, 12h
jge     short loc_1000c41b
movsx   ebx, ds:byte_100796d4[ecx]
movsx   eax, byte ptr [edi]
sub     eax, ebx
lea     eax, [eax+eax*4]
inc     ecx
add     edi, esi
add     eax, eax
jz      short loc_1000c3fe
jmp     short loc_1000c429
test    eax, eax
jnz     short loc_1000c42b
lea     ecx, [esi+esi*8]
movsx   eax, byte ptr [edx+ecx*2]
sub     eax, 38h
test    eax, eax
js      short loc_1000c3ef
test    eax, eax
jg      short loc_1000c3e1
mov     eax, [ebp+var_c]
neg     eax
sbb     eax, eax
pop     edi
and     eax, 0fffffffeh
pop     esi
add     eax, 2
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
mov     eax, [ebp+arg_0]
mov     dl, [eax]
push    ebx
push    esi
push    edi
xor     esi, esi
xor     ecx, ecx
xor     edi, edi
mov     [esp+18h+var_8], esi
cmp     dl, 2dh
jnz     short loc_1000c47a
mov     [esp+18h+var_8], 1
jmp     short loc_1000c47f
cmp     dl, 2bh
jnz     short loc_1000c483
inc     eax
mov     [ebp+arg_0], eax
cmp     byte ptr [eax], 30h
jnz     short loc_1000c496
inc     eax
cmp     byte ptr [eax], 30h
jz      short loc_1000c488
mov     [ebp+arg_0], eax
jmp     short loc_1000c496
mov     eax, [ebp+arg_0]
movsx   eax, byte ptr [esi+eax]
sub     eax, 30h
cmp     eax, 9
ja      short loc_1000c4c8
mov     edx, edi
mov     edi, ecx
mov     ebx, edx
shld    edx, ecx, 2
add     ecx, ecx
add     ecx, ecx
add     edi, ecx
adc     ebx, edx
shld    ebx, edi, 1
lea     ecx, [edi+edi]
cdq
add     ecx, eax
mov     edi, ebx
adc     edi, edx
inc     esi
cmp     esi, 0bh
jl      short loc_1000c493
cmp     esi, 0ah
jle     short loc_1000c4d6
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [esp+18h+var_8]
mov     eax, ebx
cdq
mov     esi, ecx
sub     esi, eax
mov     eax, edi
sbb     eax, edx
mov     [esp+18h+var_4], eax
js      short loc_1000c4f5
jg      short loc_1000c4cd
cmp     esi, 7fffffffh
ja      short loc_1000c4cd
test    ebx, ebx
jz      short loc_1000c504
neg     ecx
adc     edi, 0
neg     edi
mov     [esp+18h+var_4], edi
mov     edx, [ebp+arg_4]
pop     edi
pop     esi
mov     [edx], ecx
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
xor     eax, eax
mov     [ebp+var_4], eax
test    ecx, ecx
jz      short loc_1000c53d
lea     eax, [ebp+var_4]
push    eax
push    ecx
call    sub_1000c450
mov     eax, [ebp+var_4]
add     esp, 8
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     edx, [ebp+arg_4]
push    ebx
push    esi
mov     esi, edx
xor     eax, eax
and     esi, 0ff000000h
or      eax, esi
mov     eax, [ebp+arg_0]
jz      loc_1000c606
mov     [ecx+8], al
shrd    eax, edx, 8
mov     bl, al
or      bl, 80h
shr     edx, 8
shrd    eax, edx, 7
mov     [ecx+7], bl
mov     bl, al
or      bl, 80h
shr     edx, 7
shrd    eax, edx, 7
mov     [ecx+6], bl
mov     bl, al
shr     edx, 7
shrd    eax, edx, 7
or      bl, 80h
mov     [ecx+5], bl
mov     bl, al
shr     edx, 7
shrd    eax, edx, 7
or      bl, 80h
mov     [ecx+4], bl
mov     bl, al
shr     edx, 7
shrd    eax, edx, 7
or      bl, 80h
mov     [ecx+3], bl
mov     bl, al
shr     edx, 7
shrd    eax, edx, 7
or      bl, 80h
mov     [ecx+2], bl
mov     bl, al
shr     edx, 7
shrd    eax, edx, 7
or      bl, 80h
shr     edx, 7
or      al, 80h
pop     esi
mov     [ecx+1], bl
mov     [ecx], al
mov     eax, 9
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
xor     esi, esi
push    edi
lea     esp, [esp+0]
mov     bl, al
shrd    eax, edx, 7
or      bl, 80h
mov     [ebp+esi+var_10], bl
shr     edx, 7
mov     edi, eax
inc     esi
or      edi, edx
jnz     short loc_1000c610
and     [ebp+var_10], 7fh
lea     eax, [esi-1]
pop     edi
test    eax, eax
js      short loc_1000c63d
mov     dl, [ebp+eax+var_10]
mov     [ecx], dl
inc     ecx
dec     eax
jns     short loc_1000c633
mov     ecx, [ebp+var_4]
mov     eax, esi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    eax, 0ffffc000h
jnz     short loc_1000c66c
mov     edx, eax
shr     edx, 7
or      dl, 80h
and     al, 7fh
mov     [ecx+1], al
mov     [ecx], dl
mov     eax, 2
retn
push    0
push    eax
call    sub_1000c550
add     esp, 8
retn
movzx   edx, byte ptr [eax]
test    dl, dl
js      short loc_1000c693
mov     [edi], edx
mov     dword ptr [edi+4], 0
mov     al, 1
retn
movzx   ecx, byte ptr [eax+1]
test    cl, cl
js      short loc_1000c6af
and     edx, 7fh
shl     edx, 7
or      edx, ecx
mov     [edi], edx
mov     dword ptr [edi+4], 0
mov     al, 2
retn
push    esi
movzx   esi, byte ptr [eax+2]
shl     edx, 0eh
or      edx, esi
test    dl, dl
js      short loc_1000c6d8
and     ecx, 7fh
shl     ecx, 7
and     edx, 1fc07fh
or      ecx, edx
mov     [edi], ecx
mov     dword ptr [edi+4], 0
mov     al, 3
pop     esi
retn
movzx   esi, byte ptr [eax+3]
shl     ecx, 0eh
or      ecx, esi
and     edx, 1fc07fh
test    cl, cl
js      short loc_1000c703
and     ecx, 1fc07fh
shl     edx, 7
or      ecx, edx
mov     [edi], ecx
mov     dword ptr [edi+4], 0
mov     al, 4
pop     esi
retn
push    ebx
movzx   ebx, byte ptr [eax+4]
mov     esi, edx
shl     edx, 0eh
or      edx, ebx
and     ecx, 1fc07fh
test    dl, dl
js      short loc_1000c733
shl     ecx, 7
or      ecx, edx
xor     edx, edx
xor     eax, eax
shr     esi, 12h
or      ecx, edx
or      eax, esi
pop     ebx
mov     [edi+4], eax
mov     [edi], ecx
mov     al, 5
pop     esi
retn
movzx   ebx, byte ptr [eax+5]
shl     esi, 7
or      esi, ecx
shl     ecx, 0eh
or      ecx, ebx
test    cl, cl
js      short loc_1000c765
and     edx, 1fc07fh
shl     edx, 7
or      edx, ecx
xor     ecx, ecx
xor     eax, eax
shr     esi, 12h
or      edx, ecx
or      eax, esi
pop     ebx
mov     [edi+4], eax
mov     al, 6
mov     [edi], edx
pop     esi
retn
movzx   ebx, byte ptr [eax+6]
shl     edx, 0eh
or      edx, ebx
test    dl, dl
js      short loc_1000c794
shl     ecx, 7
xor     ecx, edx
and     ecx, 0fe03f80h
xor     ecx, edx
xor     eax, eax
shr     esi, 0bh
or      ecx, eax
xor     edx, edx
or      edx, esi
pop     ebx
mov     [edi], ecx
mov     [edi+4], edx
mov     al, 7
pop     esi
retn
movzx   ebx, byte ptr [eax+7]
shl     ecx, 0eh
and     edx, 1fc07fh
or      ecx, ebx
shl     edx, 7
test    cl, cl
js      short loc_1000c7c7
and     ecx, 0f01fc07fh
or      ecx, edx
xor     eax, eax
shr     esi, 4
or      ecx, eax
xor     edx, edx
or      edx, esi
pop     ebx
mov     [edi], ecx
mov     [edi+4], edx
mov     al, 8
pop     esi
retn
and     ecx, 1fc07fh
or      ecx, edx
movzx   edx, byte ptr [eax+8]
movzx   eax, byte ptr [eax+4]
shr     eax, 3
and     eax, 0fh
shl     esi, 4
or      eax, esi
shl     ecx, 8
or      ecx, edx
xor     esi, esi
or      eax, esi
xor     edx, edx
or      edx, ecx
pop     ebx
mov     [edi+4], eax
mov     al, 9
mov     [edi], edx
pop     esi
retn
push    ebp
mov     ebp, esp
movzx   edx, byte ptr [ecx+1]
movzx   eax, byte ptr [ecx]
sub     esp, 8
push    edi
test    dl, dl
js      short loc_1000c823
and     eax, 7fh
shl     eax, 7
or      eax, edx
mov     [esi], eax
mov     al, 2
pop     edi
mov     esp, ebp
pop     ebp
retn
movzx   edi, byte ptr [ecx+2]
shl     eax, 0eh
or      eax, edi
test    al, al
js      short loc_1000c846
and     edx, 7fh
and     eax, 1fc07fh
shl     edx, 7
or      edx, eax
mov     [esi], edx
mov     al, 3
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     eax, ecx
lea     edi, [ebp+var_8]
call    sub_1000c680
mov     ecx, [ebp+var_8]
xor     edx, edx
cmp     ecx, ecx
jnz     short loc_1000c85e
cmp     edx, [ebp+var_4]
jz      short loc_1000c869
mov     dword ptr [esi], 0ffffffffh
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     [esi], ecx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
xor     eax, eax
push    esi
lea     esp, [esp+0]
shrd    ecx, edx, 7
shr     edx, 7
mov     esi, ecx
inc     eax
or      esi, edx
jz      short loc_1000c893
cmp     eax, 9
jl      short loc_1000c880
pop     esi
pop     ebp
retn
movzx   eax, byte ptr [ecx]
movzx   edx, byte ptr [ecx+1]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [ebp+arg_4]
mov     eax, ebx
cdq
sub     eax, edx
mov     ecx, eax
sar     ecx, 1
push    esi
mov     esi, [ebp+arg_0]
inc     ecx
call    sub_10009a40
mov     ecx, eax
dec     ebx
mov     [ebp+var_4], ecx
mov     [ebp+arg_4], ebx
test    ecx, ecx
jz      short loc_1000c94a
xor     esi, esi
test    ebx, ebx
jle     short loc_1000c93d
movsx   ecx, byte ptr [edi+esi+1]
movsx   eax, byte ptr [edi+esi]
mov     edx, ecx
sar     edx, 6
and     dl, 1
mov     bl, dl
add     bl, bl
add     bl, bl
add     bl, bl
sub     bl, dl
mov     edx, eax
sub     cl, bl
sar     edx, 6
and     dl, 1
mov     bl, dl
add     bl, bl
add     bl, bl
add     bl, bl
sub     bl, dl
mov     edx, [ebp+var_4]
sub     al, bl
shl     al, 4
and     cl, 0fh
or      cl, al
mov     eax, esi
shr     eax, 1
add     esi, 2
mov     [eax+edx], cl
cmp     esi, [ebp+arg_4]
jl      short loc_1000c8f0
mov     ecx, edx
mov     eax, esi
cdq
sub     eax, edx
sar     eax, 1
mov     byte ptr [eax+ecx], 0
mov     eax, ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
test    eax, eax
jnz     short loc_1000c96d
push    offset anull_0
push    offset aapicallwithsda
push    15h
call    sub_1000b150
add     esp, 0ch
xor     eax, eax
pop     ecx
retn
mov     eax, [eax+3ch]
cmp     eax, 0a029a697h
jz      short loc_1000c9b5
cmp     eax, 4b771290h
jz      short loc_1000c99d
cmp     eax, 0f03b7906h
jz      short loc_1000c99d
push    offset ainvalid
push    offset aapicallwithsda
push    15h
call    sub_1000b150
add     esp, 0ch
xor     eax, eax
pop     ecx
retn
push    offset aunopened
push    offset aapicallwithsda
push    15h
call    sub_1000b150
add     esp, 0ch
xor     eax, eax
pop     ecx
retn
mov     eax, 1
pop     ecx
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_8]
push    ebx
mov     ebx, [eax+4]
push    esi
push    edi
mov     edi, [eax]
test    ecx, ecx
jl      short loc_1000ca08
jg      short loc_1000c9dd
cmp     [ebp+arg_4], 0
jb      short loc_1000ca08
test    ebx, ebx
jl      short loc_1000ca39
jg      short loc_1000c9e7
test    edi, edi
jz      short loc_1000ca39
or      esi, 0ffffffffh
sub     esi, edi
mov     edx, 7fffffffh
sbb     edx, ebx
cmp     edx, ecx
jg      short loc_1000ca39
jl      short loc_1000c9fe
cmp     esi, [ebp+arg_4]
jnb     short loc_1000ca39
mov     eax, 1
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
test    ebx, ebx
jg      short loc_1000ca39
jl      short loc_1000ca12
test    edi, edi
jnb     short loc_1000ca39
mov     esi, [ebp+arg_4]
mov     edx, 1
sub     edx, edi
mov     eax, 80000000h
sbb     eax, ebx
add     esi, 1
adc     ecx, 0
cmp     eax, ecx
jl      short loc_1000ca33
jg      short loc_1000c9fe
cmp     edx, esi
ja      short loc_1000c9fe
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_8]
add     edi, [ebp+arg_4]
mov     [eax], edi
adc     ebx, ecx
pop     edi
mov     [eax+4], ebx
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
test    ecx, ecx
jnz     short loc_1000ca8b
cmp     eax, 80000000h
jnz     short loc_1000ca8b
mov     eax, [edx+4]
mov     ecx, [edx]
test    eax, eax
jl      short loc_1000ca7a
jg      short loc_1000ca73
test    ecx, ecx
jb      short loc_1000ca7a
mov     eax, 1
pop     ebp
retn
add     ecx, 0
adc     eax, 80000000h
mov     [edx+4], eax
mov     [edx], ecx
xor     eax, eax
pop     ebp
retn
neg     ecx
adc     eax, 0
neg     eax
push    eax
push    ecx
push    edx
call    sub_1000c9c0
add     esp, 0ch
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     eax, [eax+4]
push    ebx
push    esi
push    edi
push    1
push    0
push    eax
push    ecx
call    __alldvrm
push    1
mov     edi, eax
mov     eax, [ebp+arg_8]
push    0
mov     [ebp+var_8], ecx
mov     ecx, [ebp+arg_4]
push    eax
push    ecx
mov     [ebp+var_c], edx
mov     [ebp+var_4], ebx
call    __alldvrm
mov     esi, eax
mov     eax, [ebp+var_c]
push    eax
mov     [ebp+var_14], ebx
mov     ebx, edx
mov     edx, [ebp+var_14]
push    edi
push    ebx
push    esi
mov     [ebp+arg_4], ecx
mov     [ebp+arg_8], edx
call    __allmul
or      eax, edx
jnz     loc_1000cb7f
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
push    ecx
push    edx
push    ebx
push    esi
call    __allmul
mov     ecx, [ebp+arg_8]
mov     ebx, eax
mov     eax, [ebp+var_c]
push    eax
push    edi
mov     edi, [ebp+arg_4]
push    ecx
push    edi
mov     esi, edx
call    __allmul
add     ebx, eax
adc     esi, edx
mov     eax, ebx
add     eax, 80000000h
adc     esi, 0
test    esi, esi
ja      short loc_1000cb7f
jb      short loc_1000cb3a
cmp     eax, 0ffffffffh
ja      short loc_1000cb7f
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_8]
mov     ecx, [ebp+arg_8]
push    edx
push    eax
push    ecx
push    edi
mov     [ebp+var_10], 0
mov     [ebp+var_c], ebx
call    __allmul
push    edx
push    eax
lea     edx, [ebp+var_10]
push    edx
call    sub_1000c9c0
add     esp, 0ch
test    eax, eax
jnz     short loc_1000cb7f
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_c]
mov     [eax], ecx
mov     [eax+4], edx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jns     short locret_1000cba3
cmp     eax, 80000000h
jnz     short loc_1000cba1
mov     eax, 7fffffffh
retn
neg     eax
retn
mov     eax, [ebx+0ch]
push    esi
mov     esi, [ebx+8]
push    edi
xor     edi, edi
push    eax
mov     [ebx+8], edi
call    sub_10009770
add     esp, 4
mov     [ebx+0ch], edi
mov     [ebx], edi
cmp     esi, edi
jz      loc_1000cc74
mov     eax, dword_10081774
jmp     short loc_1000cbe0
cmp     dword_10080230, 0
mov     edi, [esi]
jz      short loc_1000cc55
test    eax, eax
jz      short loc_1000cbf9
push    eax
call    dword_1008027c
add     esp, 4
push    esi
call    dword_10080258
mov     ecx, dword_10081668
neg     eax
add     ecx, eax
add     esp, 4
mov     dword_10081668, ecx
cmp     ecx, dword_10081690
jle     short loc_1000cc21
mov     dword_10081690, ecx
mov     eax, dword_1008168c
dec     eax
mov     dword_1008168c, eax
cmp     eax, dword_100816b4
jle     short loc_1000cc39
mov     dword_100816b4, eax
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
test    eax, eax
jz      short loc_1000cc64
push    eax
call    dword_10080284
jmp     short loc_1000cc5c
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
mov     esi, edi
test    edi, edi
jnz     loc_1000cbe0
mov     [ebx+4], edi
pop     edi
pop     esi
retn
mov     [ebx+4], edi
pop     edi
pop     esi
retn
xor     eax, eax
test    ecx, ecx
jle     short locret_1000ccad
push    esi
push    edi
jmp     short loc_1000cc90
movzx   esi, byte ptr [edx]
movzx   esi, ds:byte_10076030[esi]
lea     edi, ds:0[eax*8]
xor     esi, edi
dec     ecx
xor     eax, esi
inc     edx
test    ecx, ecx
jg      short loc_1000cc90
pop     edi
pop     esi
retn
test    edx, edx
jz      short loc_1000cce9
push    esi
mov     esi, [edx]
test    esi, esi
jz      short loc_1000ccc0
mov     ecx, [edx+4]
jmp     short loc_1000ccc2
xor     ecx, ecx
inc     esi
mov     [edx], esi
mov     [edx+4], eax
pop     esi
test    ecx, ecx
jz      short loc_1000cce9
mov     [eax], ecx
mov     edx, [ecx+4]
mov     [eax+4], edx
mov     edx, [ecx+4]
test    edx, edx
jz      short loc_1000cce2
mov     [edx], eax
mov     [ecx+4], eax
retn
mov     [edi+8], eax
mov     [ecx+4], eax
retn
mov     ecx, [edi+8]
mov     [eax], ecx
mov     ecx, [edi+8]
test    ecx, ecx
jz      short loc_1000ccf8
mov     [ecx+4], eax
mov     dword ptr [eax+4], 0
mov     [edi+8], eax
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_4]
lea     eax, ds:0[esi*8]
push    edi
mov     edi, [ebp+arg_0]
cmp     eax, 400h
jbe     short loc_1000cd32
mov     esi, 80h
cmp     esi, [edi]
jnz     short loc_1000cd3f
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_1000cd4a
call    eax
lea     ecx, ds:0[esi*8]
push    ecx
call    sub_100094a0
mov     esi, eax
mov     eax, dword_100816c0
add     esp, 4
mov     [ebp+var_4], esi
test    eax, eax
jz      short loc_1000cd6a
call    eax
test    esi, esi
jz      short loc_1000cd36
mov     edx, [edi+0ch]
push    edx
call    sub_10009770
add     esp, 4
push    esi
mov     [edi+0ch], esi
call    dword_10080258
mov     ebx, eax
shr     ebx, 3
add     esp, 4
lea     eax, ds:0[ebx*8]
push    eax
push    0
push    esi
mov     [ebp+arg_4], ebx
mov     [edi], ebx
call    memset
mov     ecx, [edi+8]
add     esp, 0ch
mov     dword ptr [edi+8], 0
test    ecx, ecx
jz      loc_1000ce4f
mov     edx, [ecx+10h]
mov     esi, [ecx+0ch]
xor     eax, eax
test    edx, edx
jle     short loc_1000cde3
movzx   edi, byte ptr [esi]
movzx   edi, ds:byte_10076030[edi]
lea     ebx, ds:0[eax*8]
xor     edi, ebx
dec     edx
xor     eax, edi
inc     esi
test    edx, edx
jg      short loc_1000cdc2
mov     ebx, [ebp+arg_4]
mov     edi, [ebp+arg_0]
mov     edx, [ecx]
mov     [ebp+var_8], edx
xor     edx, edx
div     ebx
mov     eax, [ebp+var_4]
lea     eax, [eax+edx*8]
test    eax, eax
jz      short loc_1000ce2b
mov     esi, [eax]
test    esi, esi
jz      short loc_1000ce01
mov     edx, [eax+4]
jmp     short loc_1000ce03
xor     edx, edx
inc     esi
mov     [eax], esi
mov     [eax+4], ecx
test    edx, edx
jz      short loc_1000ce2b
mov     [ecx], edx
mov     eax, [edx+4]
mov     [ecx+4], eax
mov     eax, [edx+4]
test    eax, eax
jz      short loc_1000ce23
mov     [eax], ecx
mov     [edx+4], ecx
jmp     short loc_1000ce44
mov     [edi+8], ecx
mov     [edx+4], ecx
jmp     short loc_1000ce44
mov     edx, [edi+8]
mov     [ecx], edx
mov     eax, [edi+8]
test    eax, eax
jz      short loc_1000ce3a
mov     [eax+4], ecx
mov     dword ptr [ecx+4], 0
mov     [edi+8], ecx
mov     ecx, [ebp+var_8]
test    ecx, ecx
jnz     loc_1000cdb6
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [eax+0ch]
sub     esp, 8
push    ebx
push    esi
push    edi
test    ecx, ecx
jz      short loc_1000ce79
mov     edi, [ecx+edx*8+4]
mov     eax, [ecx+edx*8]
jmp     short loc_1000ce7f
mov     edi, [eax+8]
mov     eax, [eax+4]
test    eax, eax
jz      short loc_1000cee7
dec     eax
mov     [ebp+var_4], eax
test    edi, edi
jz      short loc_1000cee7
mov     ecx, [ebp+arg_4]
cmp     [edi+10h], ecx
jnz     short loc_1000cee1
mov     edx, [edi+0ch]
mov     esi, [ebp+arg_0]
test    ecx, ecx
jle     short loc_1000cec1
lea     ecx, [ecx+0]
mov     bl, [edx]
dec     ecx
test    bl, bl
jz      short loc_1000cec2
movzx   eax, byte ptr [esi]
movzx   ebx, bl
mov     bl, ds:byte_10076030[ebx]
cmp     bl, ds:byte_10076030[eax]
jnz     short loc_1000cec2
inc     edx
inc     esi
test    ecx, ecx
jg      short loc_1000cea0
dec     ecx
test    ecx, ecx
js      short loc_1000cef0
movzx   ecx, byte ptr [esi]
movzx   eax, ds:byte_10076030[ecx]
movzx   ecx, byte ptr [edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_1000cef0
mov     eax, [ebp+var_4]
mov     edi, [edi]
test    eax, eax
jnz     short loc_1000ce83
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, ecx
mov     ecx, [eax+4]
push    esi
test    ecx, ecx
jz      short loc_1000cf11
mov     esi, [eax]
mov     [ecx], esi
jmp     short loc_1000cf16
mov     ecx, [eax]
mov     [ebx+8], ecx
mov     ecx, [eax]
test    ecx, ecx
jz      short loc_1000cf22
mov     esi, [eax+4]
mov     [ecx+4], esi
mov     ecx, [ebx+0ch]
test    ecx, ecx
jz      short loc_1000cf38
cmp     [ecx+edx*8+4], eax
jnz     short loc_1000cf35
mov     esi, [eax]
mov     [ecx+edx*8+4], esi
dec     dword ptr [ecx+edx*8]
push    eax
call    sub_10009770
add     esp, 4
dec     dword ptr [ebx+4]
jnz     short loc_1000cf4b
call    sub_1000cbb0
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_0]
cmp     dword ptr [edi+0ch], 0
jz      short loc_1000cf95
mov     ecx, [ebp+arg_4]
xor     eax, eax
mov     edx, esi
test    esi, esi
jle     short loc_1000cf8f
push    ebx
lea     esp, [esp+0]
movzx   edi, byte ptr [ecx]
movzx   edi, ds:byte_10076030[edi]
lea     ebx, ds:0[eax*8]
xor     edi, ebx
dec     edx
xor     eax, edi
inc     ecx
test    edx, edx
jg      short loc_1000cf70
mov     edi, [ebp+arg_0]
pop     ebx
xor     edx, edx
div     dword ptr [edi]
jmp     short loc_1000cf97
xor     edx, edx
mov     eax, [ebp+arg_4]
push    esi
push    eax
mov     eax, edi
call    sub_1000ce60
add     esp, 8
pop     edi
test    eax, eax
jz      short loc_1000cfb0
mov     eax, [eax+8]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
mov     edi, eax
mov     eax, [edi]
test    eax, eax
jz      short loc_1000d009
mov     ecx, [ebp+arg_0]
xor     eax, eax
mov     edx, ebx
test    ebx, ebx
jle     short loc_1000cffe
nop
movzx   esi, byte ptr [ecx]
movzx   esi, ds:byte_10076030[esi]
lea     ebx, ds:0[eax*8]
xor     esi, ebx
dec     edx
xor     eax, esi
inc     ecx
test    edx, edx
jg      short loc_1000cfe0
mov     ebx, [ebp+arg_4]
xor     edx, edx
div     dword ptr [edi]
mov     esi, edx
mov     [ebp+var_4], esi
jmp     short loc_1000d013
mov     [ebp+var_4], 0
mov     esi, [ebp+var_4]
mov     eax, [ebp+arg_0]
push    ebx
push    eax
mov     edx, esi
mov     eax, edi
call    sub_1000ce60
add     esp, 8
test    eax, eax
jz      short loc_1000d056
mov     ecx, [ebp+arg_8]
mov     ebx, [eax+8]
test    ecx, ecx
jnz     short loc_1000d044
mov     edx, esi
mov     ecx, edi
call    sub_1000cf00
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [eax+8], ecx
mov     ecx, [ebp+arg_0]
mov     [eax+0ch], ecx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_8], 0
jz      loc_1000d0ea
push    14h
call    sub_100094a0
mov     esi, eax
mov     eax, [ebp+arg_8]
add     esp, 4
test    esi, esi
jz      short loc_1000d0ec
mov     edx, [ebp+arg_0]
mov     [esi+0ch], edx
mov     [esi+10h], ebx
mov     [esi+8], eax
inc     dword ptr [edi+4]
mov     eax, [edi+4]
cmp     eax, 0ah
jb      short loc_1000d0b4
mov     ecx, [edi]
add     ecx, ecx
cmp     eax, ecx
jbe     short loc_1000d0b4
lea     edx, [eax+eax]
push    edx
push    edi
call    sub_1000cd10
add     esp, 8
test    eax, eax
jz      short loc_1000d0b4
mov     edx, [ebp+arg_0]
mov     ecx, ebx
call    sub_1000cc80
xor     edx, edx
div     dword ptr [edi]
mov     [ebp+var_4], edx
mov     eax, [edi+0ch]
test    eax, eax
jz      short loc_1000d0d1
mov     ecx, [ebp+var_4]
lea     edx, [eax+ecx*8]
mov     eax, esi
call    sub_1000ccb0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [edi+8]
mov     [esi], edx
mov     eax, [edi+8]
test    eax, eax
jz      short loc_1000d0e0
mov     [eax+4], esi
mov     dword ptr [esi+4], 0
mov     [edi+8], esi
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
test    eax, eax
jnz     short loc_1000d12d
xor     ecx, ecx
lea     esp, [esp+0]
mov     edx, dword_10080448[ecx]
test    edx, edx
jz      short loc_1000d120
mov     off_10080444[ecx], edx
add     ecx, 0ch
cmp     ecx, 36ch
jb      short loc_1000d110
pop     ebp
retn
push    esi
push    edi
xor     edi, edi
xor     esi, esi
push    ebx
mov     edx, off_10080440[esi]
mov     ecx, eax
lea     esp, [esp+0]
mov     bl, [ecx]
cmp     bl, [edx]
jnz     short loc_1000d160
test    bl, bl
jz      short loc_1000d15c
mov     bl, [ecx+1]
cmp     bl, [edx+1]
jnz     short loc_1000d160
add     ecx, 2
add     edx, 2
test    bl, bl
jnz     short loc_1000d140
xor     ecx, ecx
jmp     short loc_1000d165
sbb     ecx, ecx
sbb     ecx, 0ffffffffh
test    ecx, ecx
jz      short loc_1000d17f
add     esi, 0ch
inc     edi
cmp     esi, 36ch
jb      short loc_1000d134
pop     ebx
pop     edi
mov     eax, 0ch
pop     esi
pop     ebp
retn
lea     ecx, [edi+edi*2]
add     ecx, ecx
add     ecx, ecx
cmp     dword_10080448[ecx], 0
jnz     short loc_1000d19b
mov     eax, off_10080444[ecx]
mov     dword_10080448[ecx], eax
mov     edx, [ebp+arg_8]
xor     eax, eax
test    edx, edx
jnz     short loc_1000d1aa
mov     edx, dword_10080448[ecx]
pop     ebx
pop     edi
mov     off_10080444[ecx], edx
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
xor     edi, edi
xor     esi, esi
lea     ecx, [ecx+0]
mov     ecx, off_10080440[esi]
mov     eax, ebx
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_1000d1f8
test    dl, dl
jz      short loc_1000d1f4
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_1000d1f8
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_1000d1d8
xor     eax, eax
jmp     short loc_1000d1fd
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jz      short loc_1000d214
add     esi, 0ch
inc     edi
cmp     esi, 36ch
jb      short loc_1000d1d0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
lea     eax, [edi+edi*2]
mov     eax, off_10080444[eax*4]
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
or      esi, 0ffffffffh
test    ebx, ebx
jz      short loc_1000d286
push    edi
xor     esi, esi
mov     edi, offset off_10080440
mov     ecx, [edi]
mov     eax, ebx
jmp     short loc_1000d250
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_1000d270
test    dl, dl
jz      short loc_1000d26c
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_1000d270
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_1000d250
xor     eax, eax
jmp     short loc_1000d275
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jz      short loc_1000d285
add     edi, 0ch
inc     esi
cmp     edi, offset off_100807a0
jl      short loc_1000d247
pop     edi
inc     esi
cmp     esi, 49h
jge     short loc_1000d2a6
lea     eax, [esi+esi*2]
lea     eax, off_10080444[eax*4]
cmp     dword ptr [eax], 0
jnz     short loc_1000d2ac
add     eax, 0ch
inc     esi
cmp     eax, offset dword_100807b0
jl      short loc_1000d296
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
lea     eax, [esi+esi*2]
mov     eax, off_10080440[eax*4]
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 98h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, dword_10081798
test    eax, eax
jnz     short loc_1000d305
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
xor     ecx, ecx
cmp     eax, 2
setz    cl
mov     eax, ecx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
push    edi
push    0
push    0
push    0ffffffffh
push    ebx
push    0
push    0fde9h
call    off_10080678
mov     esi, eax
test    esi, esi
jnz     short loc_1000d34a
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000d342
lea     eax, [esi+esi]
push    eax
call    sub_100094a0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_1000d342
push    esi
push    edi
push    0ffffffffh
push    ebx
push    0
push    0fde9h
call    off_10080678
test    eax, eax
jnz     short loc_1000d386
push    edi
call    sub_10009770
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
push    edi
push    0
push    0
push    0
push    0
push    0ffffffffh
push    ebx
push    0
push    0fde9h
call    off_100806f0
mov     esi, eax
test    esi, esi
jnz     short loc_1000d3be
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000d3b6
push    esi
call    sub_100094a0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_1000d3b6
push    0
push    0
push    esi
push    edi
push    0ffffffffh
push    ebx
push    0
push    0fde9h
call    off_100806f0
test    eax, eax
jnz     short loc_1000d3fb
push    edi
call    sub_10009770
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
push    edi
call    off_10080444
push    0
neg     eax
push    0
sbb     esi, esi
mov     eax, [ebp+lpmultibytestr]
push    0ffffffffh
push    eax
push    0
inc     esi
push    esi
call    off_10080678
mov     edi, eax
add     edi, edi
jnz     short loc_1000d447
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000d43e
lea     ecx, [edi+edi]
push    ecx
call    sub_100094a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1000d43e
mov     edx, [ebp+lpmultibytestr]
push    edi
push    ebx
push    0ffffffffh
push    edx
push    0
push    esi
call    off_10080678
test    eax, eax
jnz     short loc_1000d482
push    ebx
call    sub_10009770
add     esp, 4
xor     ebx, ebx
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
push    edi
call    off_10080444
push    0
push    0
push    0
neg     eax
push    0
sbb     esi, esi
mov     eax, [ebp+lpwidecharstr]
push    0ffffffffh
push    eax
push    0
inc     esi
push    esi
call    off_100806f0
mov     edi, eax
test    edi, edi
jnz     short loc_1000d4cb
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000d4c2
push    edi
call    sub_100094a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1000d4c2
mov     ecx, [ebp+lpwidecharstr]
push    0
push    0
push    edi
push    ebx
push    0ffffffffh
push    ecx
push    0
push    esi
call    off_100806f0
test    eax, eax
jnz     short loc_1000d507
push    ebx
call    sub_10009770
add     esp, 4
xor     ebx, ebx
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0b0h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_8]
push    ebx
push    esi
mov     [ebp+var_ac], eax
mov     eax, dword_10081798
xor     esi, esi
push    edi
cmp     eax, esi
jnz     short loc_1000d563
lea     ecx, [ebp+versioninformation]
push    ecx
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
push    esi
cmp     eax, 2
mov     eax, [ebp+dwmessageid]
push    esi
jnz     short loc_1000d5be
lea     edx, [ebp+buffer]
push    edx
push    esi
push    eax
push    esi
push    1300h
mov     dword ptr [ebp+buffer], esi
call    off_100804ec
mov     edi, eax
cmp     edi, esi
jbe     loc_1000d62b
mov     eax, dword_100816bc
cmp     eax, esi
jz      short loc_1000d59d
call    eax
mov     ebx, dword ptr [ebp+buffer]
call    sub_1000d390
mov     esi, eax
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_1000d5b5
call    eax
mov     ecx, dword ptr [ebp+buffer]
push    ecx
jmp     short loc_1000d625
lea     edx, [ebp+var_a4]
push    edx
push    esi
push    eax
push    esi
push    1300h
mov     dword ptr [ebp+var_a4], esi
call    off_100804e0
mov     edi, eax
cmp     edi, esi
jbe     short loc_1000d62b
mov     eax, dword_100816bc
cmp     eax, esi
jz      short loc_1000d5ea
call    eax
mov     ecx, dword ptr [ebp+var_a4]
push    ecx
call    sub_1000d410
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1000d603
xor     esi, esi
jmp     short loc_1000d613
call    sub_1000d390
push    ebx
mov     esi, eax
call    sub_10009770
add     esp, 4
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_1000d61e
call    eax
mov     edx, dword ptr [ebp+var_a4]
push    edx
call    off_10080648
test    edi, edi
jnz     short loc_1000d64b
mov     eax, [ebp+dwmessageid]
mov     ecx, [ebp+arg_4]
push    eax
push    eax
mov     eax, [ebp+var_ac]
push    offset aoserror0xxu
push    eax
push    ecx
call    sub_1000b050
jmp     short loc_1000d667
mov     edx, [ebp+var_ac]
mov     eax, [ebp+arg_4]
push    esi
push    offset as
push    edx
push    eax
call    sub_1000b050
push    esi
call    sub_10009770
mov     ecx, [ebp+var_4]
add     esp, 14h
pop     edi
pop     esi
xor     ecx, ebp
xor     eax, eax
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 204h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
lea     eax, [ebp+var_200]
push    eax
push    1f4h
push    edi
mov     esi, ecx
mov     byte ptr [ebp+var_200], 0
call    sub_1000d510
add     esp, 0ch
test    esi, esi
jnz     short loc_1000d6bb
mov     esi, offset dword_100796bc
xor     eax, eax
cmp     byte ptr [ebp+var_200], al
jz      short loc_1000d6ec
jmp     short loc_1000d6d0
mov     cl, byte ptr [ebp+eax+var_200]
cmp     cl, 0dh
jz      short loc_1000d6ec
cmp     cl, 0ah
jz      short loc_1000d6ec
inc     eax
cmp     byte ptr [ebp+eax+var_200], 0
jnz     short loc_1000d6d0
mov     edx, [ebp+arg_4]
lea     ecx, [ebp+var_200]
push    ecx
push    esi
mov     esi, [ebp+arg_0]
push    ebx
push    edi
push    edx
push    offset aoswincddsss
push    esi
mov     byte ptr [ebp+eax+var_200], 0
call    sub_1000b150
mov     ecx, [ebp+var_4]
add     esp, 1ch
mov     eax, esi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ach
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, dword_10081798
test    eax, eax
jnz     short loc_1000d775
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
cmp     eax, 2
jnz     short loc_1000d7cb
mov     edx, [ebp+dwflags]
xor     eax, eax
lea     ecx, [ebp+overlapped]
push    ecx
push    eax
push    edi
push    eax
mov     dword ptr [ebp+overlapped.anonymous_0+4], eax
mov     dword ptr [ebp+overlapped.anonymous_0], eax
mov     [ebp+overlapped.internal], eax
mov     [ebp+overlapped.internalhigh], eax
mov     [ebp+overlapped.hevent], eax
mov     dword ptr [ebp+overlapped.anonymous_0+4], eax
mov     eax, [esi]
push    edx
push    eax
mov     dword ptr [ebp+overlapped.anonymous_0], ebx
call    off_10080660
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esi]
push    0
push    edi
push    0
push    ebx
push    ecx
call    off_10080654
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ach
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, dword_10081798
test    eax, eax
jnz     short loc_1000d835
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
cmp     eax, 2
jnz     short loc_1000d887
mov     edx, [esi]
xor     eax, eax
lea     ecx, [ebp+overlapped]
push    ecx
push    eax
push    edi
push    eax
mov     dword ptr [ebp+overlapped.anonymous_0], eax
mov     dword ptr [ebp+overlapped.anonymous_0+4], eax
push    edx
mov     [ebp+overlapped.internal], eax
mov     [ebp+overlapped.internalhigh], eax
mov     [ebp+overlapped.hevent], eax
mov     dword ptr [ebp+overlapped.anonymous_0], ebx
mov     dword ptr [ebp+overlapped.anonymous_0+4], eax
call    off_100806d8
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi]
push    0
push    edi
push    0
push    ebx
push    eax
call    off_100806cc
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_4]
push    ebx
push    edi
mov     ecx, eax
and     eax, 7fffffffh
push    0
lea     edx, [ebp+distancetomovehigh]
mov     [ebp+distancetomovehigh], eax
mov     eax, [ebp+ldistancetomove]
push    edx
sar     ecx, 1fh
mov     ecx, [esi+8]
push    eax
push    ecx
call    off_100806a8
cmp     eax, 0ffffffffh
jnz     short loc_1000d915
call    off_10080570
test    eax, eax
jz      short loc_1000d915
mov     ecx, [esi+1ch]
push    7c43h
push    160ah
mov     ebx, offset aseekwinfile
mov     edi, eax
mov     [esi+14h], eax
call    sub_1000d680
add     esp, 8
mov     eax, 1
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
push    edi
push    eax
xor     edi, edi
call    off_10080468
test    eax, eax
jnz     short loc_1000d962
lea     esp, [esp+0]
inc     edi
cmp     edi, 3
jge     short loc_1000d95e
push    64h
call    off_100806b4
mov     ecx, [esi+8]
push    ecx
call    off_10080468
test    eax, eax
jz      short loc_1000d940
jmp     short loc_1000d962
test    eax, eax
jz      short loc_1000d974
mov     dword ptr [esi+8], 0
test    eax, eax
jz      short loc_1000d974
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    7c8ch
call    off_10080570
mov     ecx, [esi+1ch]
push    100ah
mov     ebx, offset awinclose
mov     edi, eax
call    sub_1000d680
add     esp, 8
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
xor     eax, eax
mov     dword ptr [ebp+overlapped.anonymous_0], eax
mov     dword ptr [ebp+overlapped.anonymous_0+4], eax
mov     [ebp+overlapped.internal], eax
mov     [ebp+overlapped.internalhigh], eax
mov     [ebp+overlapped.hevent], eax
mov     eax, [ebp+arg_c]
mov     dword ptr [ebp+overlapped.anonymous_0], eax
mov     eax, [ebp+numberofbytesread]
push    ebx
mov     ebx, [ebp+lpbuffer]
mov     ecx, eax
push    esi
xor     esi, esi
sar     ecx, 1fh
and     eax, 7fffffffh
push    edi
mov     edi, [ebp+nnumberofbytestoread]
mov     dword ptr [ebp+overlapped.anonymous_0+4], eax
mov     ecx, [ebp+arg_0]
lea     edx, [ebp+overlapped]
push    edx
mov     edx, [ecx+8]
lea     eax, [ebp+numberofbytesread]
push    eax
push    edi
push    ebx
push    edx
call    off_10080690
test    eax, eax
jnz     short loc_1000da57
call    off_10080570
cmp     eax, 26h
jz      short loc_1000da57
call    off_10080570
cmp     esi, dword_100807ac
jge     short loc_1000da2e
cmp     eax, 5
jz      short loc_1000da1b
cmp     eax, 21h
jz      short loc_1000da1b
cmp     eax, 20h
jnz     short loc_1000da2e
inc     esi
mov     eax, esi
imul    eax, dword_100807b0
push    eax
call    off_100806b4
jmp     short loc_1000d9d8
mov     ecx, [ebp+arg_0]
mov     [ecx+14h], eax
mov     ecx, [ecx+1ch]
push    7cb5h
push    10ah
mov     ebx, offset awinread
mov     edi, eax
call    sub_1000d680
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jz      short loc_1000da7d
lea     eax, [esi+1]
imul    eax, dword_100807b0
imul    eax, esi
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    offset adelayeddmsforl
push    0ah
call    sub_1000b150
add     esp, 0ch
mov     eax, [ebp+numberofbytesread]
cmp     eax, edi
jnb     short loc_1000daa0
sub     edi, eax
push    edi
add     eax, ebx
push    0
push    eax
call    memset
add     esp, 0ch
pop     edi
pop     esi
mov     eax, 20ah
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     ecx, [ebp+lpbuffer]
xor     eax, eax
push    ebx
mov     ebx, [ebp+nnumberofbytestowrite]
push    esi
mov     esi, [ebp+numberofbyteswritten]
mov     dword ptr [ebp+overlapped.anonymous_0], eax
mov     dword ptr [ebp+overlapped.anonymous_0+4], eax
mov     [ebp+var_4], eax
mov     [ebp+overlapped.internal], eax
mov     [ebp+overlapped.internalhigh], eax
mov     [ebp+overlapped.hevent], eax
mov     edx, esi
mov     eax, esi
push    edi
mov     edi, [ebp+arg_c]
and     eax, 7fffffffh
sar     edx, 1fh
mov     [ebp+lpbuffer], ecx
mov     dword ptr [ebp+overlapped.anonymous_0], edi
mov     dword ptr [ebp+overlapped.anonymous_0+4], eax
test    ebx, ebx
jle     loc_1000dbad
mov     eax, [ebp+lpbuffer]
lea     ecx, [ebp+overlapped]
push    ecx
mov     ecx, [ebp+arg_0]
lea     edx, [ebp+numberofbyteswritten]
push    edx
mov     edx, [ecx+8]
push    ebx
push    eax
push    edx
call    off_100806fc
test    eax, eax
jnz     short loc_1000db58
call    off_10080570
mov     ecx, [ebp+var_4]
cmp     ecx, dword_100807ac
jge     loc_1000dbbf
cmp     eax, 5
jz      short loc_1000db3c
cmp     eax, 21h
jz      short loc_1000db3c
cmp     eax, 20h
jnz     loc_1000dbbf
lea     eax, [ecx+1]
mov     [ebp+nnumberofbytestowrite], eax
imul    eax, dword_100807b0
push    eax
call    off_100806b4
mov     eax, [ebp+nnumberofbytestowrite]
mov     [ebp+var_4], eax
jmp     short loc_1000db7c
mov     eax, [ebp+numberofbyteswritten]
test    eax, eax
jz      short loc_1000dbb6
add     edi, eax
adc     esi, 0
add     [ebp+lpbuffer], eax
mov     edx, esi
mov     ecx, esi
and     edx, 7fffffffh
sar     ecx, 1fh
mov     dword ptr [ebp+overlapped.anonymous_0], edi
mov     dword ptr [ebp+overlapped.anonymous_0+4], edx
sub     ebx, eax
test    ebx, ebx
jg      loc_1000daf6
mov     ecx, [ebp+var_4]
test    ecx, ecx
jz      short loc_1000dbad
lea     eax, [ecx+1]
imul    eax, dword_100807b0
imul    eax, ecx
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    offset adelayeddmsforl
push    0ah
call    sub_1000b150
add     esp, 0ch
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    off_10080570
mov     ecx, [ebp+var_4]
test    ebx, ebx
jle     short loc_1000db87
mov     ecx, [ebp+arg_0]
mov     [ecx+14h], eax
cmp     eax, 27h
jz      short loc_1000dbf6
cmp     eax, 70h
jz      short loc_1000dbf6
mov     ecx, [ecx+1ch]
push    7d0bh
push    30ah
mov     ebx, offset awinwrite
mov     edi, eax
call    sub_1000d680
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 0dh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+20h]
push    edi
test    eax, eax
jle     short loc_1000dc4b
cdq
mov     edi, eax
add     eax, [ebp+arg_4]
mov     ebx, edx
mov     ecx, edx
adc     ecx, [ebp+arg_8]
push    ebx
sub     eax, 1
push    edi
sbb     ecx, 0
push    ecx
push    eax
call    __alldiv
push    ebx
push    edi
push    edx
push    eax
call    __allmul
jmp     short loc_1000dc51
mov     edx, [ebp+arg_8]
mov     eax, [ebp+arg_4]
push    edx
push    eax
call    sub_1000d8b0
add     esp, 8
test    eax, eax
jz      short loc_1000dc83
mov     ecx, [esi+1ch]
mov     edi, [esi+14h]
push    7d2ah
push    60ah
mov     ebx, offset awintruncate1
call    sub_1000d680
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [esi+8]
push    edx
call    off_1008069c
test    eax, eax
jnz     short loc_1000dcbd
call    off_10080570
mov     ecx, [esi+1ch]
push    7d2eh
push    60ah
mov     ebx, offset awintruncate2
mov     edi, eax
mov     [esi+14h], eax
call    sub_1000d680
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
push    eax
call    off_100804d4
test    eax, eax
jz      short loc_1000dcea
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebx
push    edi
call    off_10080570
mov     ecx, [esi+1ch]
push    7d76h
push    40ah
mov     ebx, offset awinsync
mov     edi, eax
mov     [esi+14h], eax
call    sub_1000d680
add     esp, 8
pop     edi
pop     ebx
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+filesizehigh]
mov     ecx, [esi+8]
push    edi
lea     eax, [ebp+filesizehigh]
push    eax
push    ecx
xor     edi, edi
call    off_1008054c
mov     ebx, [ebp+filesizehigh]
xor     ecx, ecx
xor     edx, edx
add     edx, eax
adc     ebx, ecx
mov     ecx, [ebp+arg_4]
mov     [ecx], edx
mov     [ecx+4], ebx
cmp     eax, 0ffffffffh
jnz     short loc_1000dd81
call    off_10080570
test    eax, eax
jz      short loc_1000dd81
mov     ecx, [esi+1ch]
push    7d9ch
push    70ah
mov     ebx, offset awinfilesize
mov     edi, eax
mov     [esi+14h], eax
call    sub_1000d680
add     esp, 8
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0a0h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, dword_10081798
push    esi
mov     esi, ecx
mov     [ebp+var_9c], esi
test    eax, eax
jnz     short loc_1000ddde
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
push    ebx
push    edi
cmp     eax, 2
jnz     short loc_1000ddfc
mov     ebx, dword_1008031c
add     ebx, eax
push    1
add     esi, 8
mov     edi, 1feh
jmp     loc_1000de7d
cmp     dword_10080234, 0
mov     esi, 4
lea     ebx, [ebp+var_a0]
jnz     short loc_1000de14
xor     edi, edi
jmp     short loc_1000de30
push    5
call    dword_10080274
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_1000de30
push    edi
call    dword_1008027c
add     esp, 4
nop
call    sub_1000b190
mov     [ebx], al
inc     ebx
dec     esi
jnz     short loc_1000de30
test    edi, edi
jz      short loc_1000de49
push    edi
call    dword_10080284
add     esp, 4
mov     eax, [ebp+var_a0]
and     eax, 7fffffffh
cdq
mov     ecx, 1fdh
idiv    ecx
mov     eax, [ebp+var_9c]
mov     ecx, dword_1008031c
push    3
lea     esi, [eax+8]
mov     edi, 1
mov     [eax+0eh], dx
movsx   edx, dx
lea     ebx, [edx+ecx+2]
call    sub_1000d730
add     esp, 4
mov     esi, eax
pop     edi
pop     ebx
test    esi, esi
jnz     short loc_1000de9c
call    off_10080570
mov     edx, [ebp+var_9c]
mov     [edx+14h], eax
mov     ecx, [ebp+var_4]
mov     eax, esi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 9ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, dword_10081798
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     [ebp+var_9c], esi
test    eax, eax
jnz     short loc_1000df00
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
cmp     eax, 2
jnz     short loc_1000df14
mov     ebx, dword_1008031c
add     ebx, eax
mov     edi, 1feh
jmp     short loc_1000df27
movsx   ecx, word ptr [esi+0eh]
mov     edx, dword_1008031c
lea     ebx, [ecx+edx+2]
mov     edi, 1
add     esi, 8
call    sub_1000d7f0
mov     esi, eax
test    esi, esi
jnz     short loc_1000df67
call    off_10080570
cmp     eax, 9eh
jz      short loc_1000df67
mov     ecx, [ebp+var_9c]
mov     [ecx+14h], eax
mov     ecx, [ecx+1ch]
push    7df6h
push    80ah
mov     ebx, offset aunlockreadlock
mov     edi, eax
call    sub_1000d680
add     esp, 8
mov     ecx, [ebp+var_4]
pop     edi
mov     eax, esi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    esi
mov     esi, [ebp+arg_0]
mov     al, [esi+0ch]
movzx   ecx, al
push    edi
mov     edi, [ebp+arg_4]
xor     edx, edx
mov     [ebp+var_4], 1
mov     [ebp+var_10], edx
mov     [ebp+var_8], edx
cmp     ecx, edi
jl      short loc_1000dfaf
pop     edi
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     [ebp+var_c], ecx
cmp     al, dl
jz      short loc_1000dfc4
cmp     edi, 4
jnz     short loc_1000e01a
cmp     al, 2
jnz     loc_1000e0c2
mov     [ebp+var_10], 3
add     esi, 8
mov     edi, edi
mov     ebx, dword_1008031c
mov     edi, 1
sub     [ebp+var_10], edi
push    3
call    sub_1000d730
mov     edi, eax
add     esp, 4
mov     [ebp+var_4], edi
test    edi, edi
jnz     short loc_1000e004
mov     ebx, [ebp+var_10]
test    ebx, ebx
jz      short loc_1000e004
push    1
call    off_100806b4
test    ebx, ebx
jg      short loc_1000dfd0
mov     [ebp+var_10], edi
test    edi, edi
jnz     short loc_1000e014
call    off_10080570
mov     [ebp+var_8], eax
mov     esi, [ebp+arg_0]
mov     edi, [ebp+arg_4]
cmp     edi, 1
jnz     short loc_1000e043
cmp     [ebp+var_4], 0
jz      short loc_1000e07b
mov     ecx, esi
call    sub_1000dd90
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_1000e038
mov     [ebp+var_c], edi
jmp     short loc_1000e07b
call    off_10080570
mov     [ebp+var_8], eax
jmp     short loc_1000e07b
cmp     edi, 2
jnz     short loc_1000e0b7
cmp     [ebp+var_4], 0
jz      short loc_1000e07b
mov     ebx, dword_1008031c
inc     ebx
push    3
add     esi, 8
mov     edi, 1
call    sub_1000d730
add     esp, 4
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_1000e0ac
mov     [ebp+var_c], 2
mov     edi, [ebp+arg_4]
mov     esi, [ebp+arg_0]
cmp     [ebp+var_10], 0
jz      short loc_1000e097
cmp     edi, 1
jnz     short loc_1000e097
mov     ebx, dword_1008031c
add     esi, 8
call    sub_1000d7f0
mov     esi, [ebp+arg_0]
cmp     [ebp+var_4], 0
jz      short loc_1000e10f
mov     cl, byte ptr [ebp+var_c]
pop     ebx
pop     edi
mov     [esi+0ch], cl
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
call    off_10080570
mov     [ebp+var_8], eax
jmp     short loc_1000e075
cmp     edi, 4
jnz     short loc_1000e07b
cmp     [ebp+var_4], 0
jz      short loc_1000e07b
mov     ecx, esi
mov     [ebp+var_c], 3
call    sub_1000deb0
mov     ebx, dword_1008031c
add     ebx, 2
push    3
add     esi, 8
mov     edi, 1feh
call    sub_1000d730
add     esp, 4
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_1000e0fb
mov     [ebp+var_c], 4
jmp     short loc_1000e094
call    off_10080570
mov     ecx, [ebp+arg_0]
mov     [ebp+var_8], eax
call    sub_1000dd90
mov     esi, [ebp+arg_0]
mov     eax, [ebp+var_8]
mov     cl, byte ptr [ebp+var_c]
pop     ebx
mov     [esi+14h], eax
pop     edi
mov     [esi+0ch], cl
mov     eax, 5
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     byte ptr [eax+0ch], 2
jb      short loc_1000e14a
mov     ecx, [ebp+arg_4]
mov     eax, 1
mov     [ecx], eax
xor     eax, eax
pop     ebp
retn
push    ebx
mov     ebx, dword_1008031c
push    esi
push    edi
lea     esi, [eax+8]
inc     ebx
push    3
mov     edi, 1
call    sub_1000d730
add     esp, 4
mov     [ebp+arg_0], eax
test    eax, eax
jz      short loc_1000e17c
mov     ebx, dword_1008031c
inc     ebx
call    sub_1000d7f0
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
xor     edx, edx
test    eax, eax
setz    dl
pop     edi
pop     esi
pop     ebx
mov     eax, edx
mov     [ecx], eax
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
movzx   edi, byte ptr [esi+0ch]
mov     [ebp+var_8], 0
mov     [ebp+var_4], edi
cmp     edi, 4
jl      short loc_1000e215
mov     ebx, dword_1008031c
add     ebx, 2
add     esi, 8
mov     edi, 1feh
call    sub_1000d7f0
cmp     [ebp+arg_4], 1
jnz     short loc_1000e20f
mov     ecx, [ebp+arg_0]
call    sub_1000dd90
test    eax, eax
jnz     short loc_1000e20f
push    7ec5h
call    off_10080570
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx+1ch]
push    80ah
mov     ebx, offset awinunlock
mov     edi, eax
call    sub_1000d680
add     esp, 8
mov     [ebp+var_8], eax
mov     esi, [ebp+arg_0]
mov     edi, [ebp+var_4]
cmp     edi, 2
jl      short loc_1000e234
mov     ebx, dword_1008031c
inc     ebx
add     esi, 8
mov     edi, 1
call    sub_1000d7f0
mov     edi, [ebp+var_4]
mov     esi, [ebp+arg_0]
mov     ebx, [ebp+arg_4]
test    ebx, ebx
jnz     short loc_1000e247
cmp     edi, 1
jl      short loc_1000e247
mov     ecx, esi
call    sub_1000deb0
cmp     edi, 3
jl      short loc_1000e272
mov     ebx, dword_1008031c
add     esi, 8
mov     edi, 1
call    sub_1000d7f0
mov     eax, [ebp+arg_0]
mov     dl, byte ptr [ebp+arg_4]
pop     edi
pop     esi
mov     [eax+0ch], dl
mov     eax, [ebp+var_8]
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_8]
pop     edi
mov     [esi+0ch], bl
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+arg_4]
sub     esp, 0ch
dec     eax
push    esi
cmp     eax, 0ch
ja      def_1000e297
jmp     ds:jpt_1000e297[eax*4]
mov     eax, [ebp+filesizehigh]
movzx   ecx, byte ptr [eax+0ch]
mov     edx, [ebp+arg_8]
mov     [edx], ecx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+filesizehigh]
mov     ecx, [eax+14h]
mov     edx, [ebp+arg_8]
mov     [edx], ecx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
mov     ecx, [eax]
mov     edx, [ebp+filesizehigh]
mov     [edx+20h], ecx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+filesizehigh]
cmp     dword ptr [esi+20h], 0
jle     short loc_1000e2aa
lea     eax, [esp+10h+var_8]
push    eax
push    esi
call    sub_1000dd20
add     esp, 8
test    eax, eax
jnz     loc_1000e3f1
mov     ecx, [ebp+arg_8]
mov     edx, [ecx]
mov     ecx, [ecx+4]
cmp     ecx, [esp+10h+var_4]
jl      loc_1000e3f1
jg      short loc_1000e312
cmp     edx, [esp+10h+var_8]
jbe     loc_1000e3f1
push    ecx
push    edx
push    esi
call    sub_1000dc10
add     esp, 0ch
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_8]
mov     eax, [ecx]
test    eax, eax
jns     short loc_1000e341
mov     edx, [ebp+filesizehigh]
movzx   eax, byte ptr [edx+10h]
shr     eax, 2
and     eax, 1
mov     [ecx], eax
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+filesizehigh]
jnz     short loc_1000e351
and     byte ptr [eax+10h], 0fbh
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
or      byte ptr [eax+10h], 4
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_8]
mov     eax, [ecx]
test    eax, eax
jns     short loc_1000e37b
mov     edx, [ebp+filesizehigh]
movzx   eax, byte ptr [edx+10h]
shr     eax, 4
and     eax, 1
mov     [ecx], eax
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+filesizehigh]
jnz     short loc_1000e38b
and     byte ptr [eax+10h], 0efh
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
or      byte ptr [eax+10h], 10h
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    offset awin32
call    sub_1000b020
mov     ecx, [ebp+arg_8]
add     esp, 4
mov     [ecx], eax
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
mov     ecx, [eax]
test    ecx, ecx
jle     short loc_1000e3c0
mov     dword_100807ac, ecx
jmp     short loc_1000e3c8
mov     edx, dword_100807ac
mov     [eax], edx
mov     ecx, [eax+4]
test    ecx, ecx
jle     short loc_1000e3dc
mov     dword_100807b0, ecx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, dword_100807b0
mov     [eax+4], ecx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, 0ch
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, 1000h
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
movzx   eax, byte ptr [eax+10h]
and     eax, 10h
or      eax, 8
shl     eax, 8
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, dword_1008179c
push    edi
mov     ebx, offset dword_1008179c
test    esi, esi
jz      loc_1000e52b
lea     ebx, [ebx+0]
cmp     dword ptr [esi+3ch], 0
jnz     loc_1000e51e
mov     eax, [esi]
test    eax, eax
jz      short loc_1000e49a
push    eax
call    dword_10080278
add     esp, 4
xor     edi, edi
cmp     [esi+30h], edi
jle     short loc_1000e4c2
mov     eax, [esi+34h]
mov     ecx, [eax+edi*8+4]
push    ecx
call    off_100806e4
mov     edx, [esi+34h]
mov     eax, [edx+edi*8]
push    eax
call    off_10080468
inc     edi
cmp     edi, [esi+30h]
jl      short loc_1000e4a1
cmp     dword ptr [esi+10h], 0ffffffffh
jz      short loc_1000e4d4
lea     ecx, [esi+8]
push    ecx
call    sub_1000d920
add     esp, 4
cmp     [ebp+arg_4], 0
jz      short loc_1000e502
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_1000e4e5
call    eax
mov     edx, [esi+4]
mov     eax, [ebp+arg_0]
push    0
push    edx
push    eax
call    sub_1000f590
mov     eax, dword_100816c0
add     esp, 0ch
test    eax, eax
jz      short loc_1000e502
call    eax
mov     ecx, [esi+44h]
mov     [ebx], ecx
mov     edx, [esi+34h]
push    edx
call    sub_10009770
add     esp, 4
push    esi
call    sub_10009770
add     esp, 4
jmp     short loc_1000e521
lea     ebx, [esi+44h]
mov     esi, [ebx]
test    esi, esi
jnz     loc_1000e480
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
push    esi
push    edi
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000e5c7
push    10h
call    sub_100094a0
mov     ebx, eax
add     esp, 4
mov     [esp+20h+var_8], ebx
test    ebx, ebx
jz      short loc_1000e5c7
xor     eax, eax
mov     [ebx], eax
mov     [ebx+4], eax
mov     [ebx+8], eax
mov     [ebx+0ch], eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax+1ch]
mov     eax, ecx
test    ecx, ecx
jnz     short loc_1000e586
xor     esi, esi
jmp     short loc_1000e59f
cmp     byte ptr [ecx], 0
jz      short loc_1000e596
jmp     short loc_1000e590
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1000e590
sub     eax, ecx
and     eax, 3fffffffh
mov     esi, eax
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000e5be
lea     eax, [esi+59h]
push    eax
call    sub_100094a0
mov     edi, eax
add     esp, 4
mov     [esp+20h+var_14], edi
test    edi, edi
jnz     short loc_1000e5d3
push    ebx
call    sub_10009770
add     esp, 4
mov     eax, 0c0ah
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     eax, [esi+59h]
push    eax
push    0
push    edi
call    memset
mov     ecx, [ebp+arg_0]
lea     eax, [edi+48h]
add     esp, 0ch
mov     [edi+4], eax
mov     edx, [ecx+1ch]
push    edx
push    offset asshm
push    eax
add     esi, 0fh
push    esi
call    sub_1000b050
add     esp, 10h
cmp     dword_10080234, 0
jz      short loc_1000e623
push    2
call    dword_10080274
add     esp, 4
test    eax, eax
jz      short loc_1000e623
push    eax
call    dword_1008027c
add     esp, 4
mov     esi, dword_1008179c
test    esi, esi
jnz     short loc_1000e659
lea     esi, [edi+10h]
mov     dword ptr [esi], 0ffffffffh
mov     eax, dword_1008179c
mov     [edi+44h], eax
mov     [esp+20h+var_c], edi
mov     dword_1008179c, edi
call    sub_1006edd0
test    eax, eax
jz      short loc_1000e683
xor     eax, eax
jmp     short loc_1000e68e
mov     esi, [esp+20h+var_c]
mov     edx, [edi+4]
mov     ecx, [esi+4]
call    sub_1000bca0
test    eax, eax
jz      short loc_1000e675
mov     esi, [esi+44h]
mov     [esp+20h+var_c], esi
test    esi, esi
jnz     short loc_1000e655
jmp     short loc_1000e62d
push    edi
call    sub_10009770
add     esp, 4
jmp     loc_1000e7f6
push    0
call    dword_10080274
add     esp, 4
mov     [edi], eax
test    eax, eax
jnz     short loc_1000e6a1
mov     [esp+20h+var_10], 0c0ah
jmp     loc_1000e77e
mov     ecx, [edi+4]
mov     edx, [ebp+arg_0]
push    0
lea     eax, [edi+8]
push    80006h
push    eax
mov     [esp+2ch+var_4], eax
mov     eax, [edx+4]
push    ecx
push    eax
call    sub_1000f220
add     esp, 14h
mov     [esp+20h+var_10], eax
test    eax, eax
jnz     loc_1000e77e
lea     edi, [eax+1]
push    3
lea     ebx, [edi+7fh]
call    sub_1000d730
add     esp, 4
test    eax, eax
jnz     short loc_1000e6f2
call    off_10080570
mov     ecx, [esp+20h+var_14]
mov     [ecx+38h], eax
jmp     short loc_1000e734
mov     edx, [esp+20h+var_4]
push    0
push    0
push    edx
call    sub_1000dc10
add     esp, 0ch
test    eax, eax
jz      short loc_1000e734
push    8059h
call    off_10080570
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx+1ch]
push    120ah
mov     ebx, offset awinopenshm
mov     edi, eax
call    sub_1000d680
add     esp, 8
mov     [esp+20h+var_10], eax
test    eax, eax
jnz     short loc_1000e77e
mov     edi, 1
lea     ebx, [edi+7fh]
call    sub_1000d7f0
test    eax, eax
jnz     short loc_1000e752
call    off_10080570
mov     edx, [esp+20h+var_14]
mov     [edx+38h], eax
push    1
call    sub_1000d730
add     esp, 4
test    eax, eax
jz      short loc_1000e764
xor     eax, eax
jmp     short loc_1000e776
call    off_10080570
mov     ecx, [esp+20h+var_14]
mov     [ecx+38h], eax
mov     eax, 5
mov     [esp+20h+var_10], eax
test    eax, eax
jz      short loc_1000e7ee
mov     edi, 1
lea     ebx, [edi+7fh]
call    sub_1000d7f0
test    eax, eax
jnz     short loc_1000e79c
call    off_10080570
mov     edx, [esp+20h+var_14]
mov     [edx+38h], eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax+4]
push    0
push    ecx
call    sub_1000e460
mov     edx, [esp+28h+var_8]
push    edx
call    sub_10009770
add     esp, 0ch
push    0
call    sub_10009770
add     esp, 4
cmp     dword_10080234, 0
jz      short loc_1000e7e3
push    2
call    dword_10080274
add     esp, 4
test    eax, eax
jz      short loc_1000e7e3
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esp+20h+var_10]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [esp+20h+var_c]
mov     ebx, [esp+20h+var_8]
mov     eax, [ebp+arg_0]
mov     [ebx], esi
inc     dword ptr [esi+3ch]
mov     [eax+18h], ebx
cmp     dword_10080234, 0
jz      short loc_1000e823
push    2
call    dword_10080274
add     esp, 4
test    eax, eax
jz      short loc_1000e823
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esi]
test    eax, eax
jz      short loc_1000e833
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [esi+40h]
mov     [ebx+4], ecx
mov     [esi+40h], ebx
mov     esi, [esi]
test    esi, esi
jz      short loc_1000e84c
push    esi
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebx+18h]
test    esi, esi
jz      loc_1000e918
push    edi
mov     edi, [esi]
mov     eax, [edi]
test    eax, eax
jz      short loc_1000e886
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [edi+40h]
lea     eax, [edi+40h]
cmp     ecx, esi
jz      short loc_1000e899
lea     eax, [ecx+4]
mov     ecx, [eax]
cmp     ecx, esi
jnz     short loc_1000e890
mov     ecx, [esi+4]
push    esi
mov     [eax], ecx
call    sub_10009770
mov     dword ptr [ebx+18h], 0
mov     eax, [edi]
add     esp, 4
test    eax, eax
jz      short loc_1000e8be
push    eax
call    dword_10080284
add     esp, 4
cmp     dword_10080234, 0
jz      short loc_1000e8e0
push    2
call    dword_10080274
add     esp, 4
test    eax, eax
jz      short loc_1000e8e0
push    eax
call    dword_1008027c
add     esp, 4
dec     dword ptr [edi+3ch]
pop     edi
jnz     short loc_1000e8f6
mov     edx, [ebp+arg_4]
mov     eax, [ebx+4]
push    edx
push    eax
call    sub_1000e460
add     esp, 8
cmp     dword_10080234, 0
jz      short loc_1000e918
push    2
call    dword_10080274
add     esp, 4
test    eax, eax
jz      short loc_1000e918
push    eax
call    dword_10080284
add     esp, 4
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
push    ebx
push    esi
mov     esi, [eax+18h]
add     ecx, edx
mov     eax, 1
shl     ax, cl
mov     ebx, 1
mov     ecx, edx
shl     bx, cl
push    edi
mov     edi, [esi]
mov     [ebp+var_8], esi
sub     ax, bx
movzx   ebx, ax
mov     eax, [edi]
mov     [ebp+arg_0], edi
mov     [ebp+var_4], ebx
test    eax, eax
jz      short loc_1000e96d
push    eax
call    dword_1008027c
mov     edx, [ebp+arg_4]
add     esp, 4
mov     al, [ebp+arg_c]
test    al, 1
jz      loc_1000ea08
mov     eax, [edi+40h]
mov     [ebp+arg_4], 0
test    eax, eax
jz      short loc_1000e9a3
mov     cx, word ptr [ebp+arg_4]
lea     ebx, [ebx+0]
cmp     eax, esi
jz      short loc_1000e99c
or      cx, [eax+0ah]
mov     word ptr [ebp+arg_4], cx
mov     eax, [eax+4]
test    eax, eax
jnz     short loc_1000e990
mov     ecx, [ebp+arg_4]
and     ecx, ebx
test    cx, cx
jnz     short loc_1000e9f4
lea     esi, [edi+10h]
mov     edi, [ebp+arg_8]
lea     ebx, [edx+78h]
call    sub_1000d7f0
test    eax, eax
jz      short loc_1000e9e1
xor     ebx, ebx
test    ebx, ebx
jnz     loc_1000eaf3
mov     eax, [ebp+var_4]
mov     esi, [ebp+var_8]
mov     edi, [ebp+arg_0]
not     eax
and     [esi+0ch], ax
and     [esi+0ah], ax
jmp     loc_1000eaf6
call    off_10080570
mov     edx, [ebp+arg_0]
mov     [edx+38h], eax
mov     ebx, 5
jmp     short loc_1000e9c1
mov     eax, [ebp+var_4]
not     eax
and     [esi+0ch], ax
xor     ebx, ebx
and     [esi+0ah], ax
jmp     loc_1000eaf6
test    al, 4
mov     eax, [edi+40h]
jz      loc_1000ea9f
mov     [ebp+arg_4], 0
test    eax, eax
jz      short loc_1000ea37
mov     cx, word ptr [ebp+arg_4]
test    [eax+0ch], bx
jnz     short loc_1000ea75
or      cx, [eax+0ah]
mov     eax, [eax+4]
test    eax, eax
jnz     short loc_1000ea22
mov     word ptr [ebp+arg_4], cx
mov     eax, [ebp+arg_4]
and     eax, ebx
test    ax, ax
jnz     short loc_1000ea93
lea     esi, [edi+10h]
mov     edi, [ebp+arg_8]
lea     ebx, [edx+78h]
push    1
call    sub_1000d730
add     esp, 4
test    eax, eax
jz      short loc_1000ea80
xor     ebx, ebx
test    ebx, ebx
jnz     loc_1000eaf3
mov     esi, [ebp+var_8]
mov     dx, word ptr [ebp+var_4]
mov     edi, [ebp+arg_0]
or      [esi+0ah], dx
jmp     loc_1000eaf6
mov     word ptr [ebp+arg_4], cx
mov     ebx, 5
jmp     short loc_1000eaf6
call    off_10080570
mov     ecx, [ebp+arg_0]
mov     [ecx+38h], eax
mov     ebx, 5
jmp     short loc_1000ea5a
mov     dx, word ptr [ebp+var_4]
xor     ebx, ebx
or      [esi+0ah], dx
jmp     short loc_1000eaf6
test    eax, eax
jz      short loc_1000eab6
test    [eax+0ch], bx
jnz     short loc_1000ea79
test    [eax+0ah], bx
jnz     short loc_1000ea79
mov     eax, [eax+4]
test    eax, eax
jnz     short loc_1000eaa3
lea     esi, [edi+10h]
mov     edi, [ebp+arg_8]
lea     ebx, [edx+78h]
push    3
call    sub_1000d730
add     esp, 4
test    eax, eax
jz      short loc_1000ead1
xor     eax, eax
jmp     short loc_1000eae2
call    off_10080570
mov     ecx, [ebp+arg_0]
mov     [ecx+38h], eax
mov     eax, 5
mov     ebx, eax
test    eax, eax
jnz     short loc_1000eaf3
mov     dx, word ptr [ebp+var_4]
mov     eax, [ebp+var_8]
or      [eax+0ch], dx
mov     edi, [ebp+arg_0]
mov     edi, [edi]
test    edi, edi
jz      short loc_1000eb06
push    edi
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword_10080234, 0
jz      short locret_1000eb52
push    2
call    dword_10080274
add     esp, 4
test    eax, eax
jz      short loc_1000eb32
push    eax
call    dword_1008027c
add     esp, 4
cmp     dword_10080234, 0
jz      short locret_1000eb52
push    2
call    dword_10080274
add     esp, 4
test    eax, eax
jz      short locret_1000eb52
push    eax
call    dword_10080284
pop     ecx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+18h]
push    edi
mov     [esp+20h+var_14], 0
test    eax, eax
jnz     short loc_1000eb96
push    esi
call    sub_1000e540
add     esp, 4
mov     [esp+20h+var_14], eax
test    eax, eax
jnz     loc_1000ed97
mov     eax, [esi+18h]
mov     esi, [eax]
mov     eax, [esi]
test    eax, eax
jz      short loc_1000eba8
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [ebp+arg_4]
mov     ebx, [ebp+arg_8]
cmp     [esi+30h], edi
jg      loc_1000ed57
inc     edi
imul    edi, ebx
lea     ecx, [esp+20h+hobject]
lea     eax, [esi+8]
push    ecx
push    eax
mov     [esp+28h+var_4], edi
mov     [esi+2ch], ebx
call    sub_1000dd20
add     esp, 8
mov     [esp+20h+var_14], eax
test    eax, eax
jz      short loc_1000ec09
push    815dh
call    off_10080570
mov     edx, [ebp+arg_0]
mov     ecx, [edx+1ch]
push    130ah
mov     ebx, offset awinshmmap1
mov     edi, eax
call    sub_1000d680
add     esp, 8
mov     [esp+20h+var_14], eax
jmp     loc_1000ed54
mov     eax, edi
cdq
cmp     [esp+20h+var_c], edx
jg      short loc_1000ec68
jl      short loc_1000ec1a
cmp     [esp+20h+hobject], eax
jnb     short loc_1000ec68
cmp     [ebp+arg_c], 0
jz      loc_1000ed57
push    edx
push    eax
lea     eax, [esi+8]
push    eax
call    sub_1000dc10
add     esp, 0ch
mov     [esp+20h+var_14], eax
test    eax, eax
jz      short loc_1000ec68
push    816ch
call    off_10080570
mov     edx, [ebp+arg_0]
mov     ecx, [edx+1ch]
push    130ah
mov     ebx, offset awinshmmap2
mov     edi, eax
call    sub_1000d680
add     esp, 8
mov     [esp+20h+var_14], eax
jmp     loc_1000ed54
mov     eax, [esi+34h]
mov     [esp+20h+hobject], eax
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000ec94
mov     ecx, [ebp+arg_4]
mov     eax, [esp+20h+hobject]
lea     edx, ds:8[ecx*8]
push    edx
push    eax
call    sub_10009890
add     esp, 8
test    eax, eax
jnz     short loc_1000eca1
mov     [esp+20h+var_14], 0c0ah
jmp     loc_1000ed57
mov     ecx, [ebp+arg_4]
mov     [esi+34h], eax
cmp     [esi+30h], ecx
jg      loc_1000ed57
jmp     short loc_1000ecb6
mov     edi, [esp+20h+var_4]
mov     edx, [esi+10h]
push    0
push    edi
push    0
push    4
push    0
push    edx
call    off_1008048c
mov     edi, eax
mov     [esp+20h+hobject], edi
test    edi, edi
jz      short loc_1000ed19
mov     ecx, [esi+30h]
imul    ecx, ebx
mov     eax, ecx
xor     edx, edx
div     systeminfo.dwallocationgranularity
lea     eax, [edx+ebx]
push    eax
sub     ecx, edx
push    ecx
push    0
push    6
push    edi
call    off_1008066c
test    eax, eax
jz      short loc_1000ed19
mov     ecx, [esi+30h]
mov     edx, [esi+34h]
mov     [edx+ecx*8+4], eax
mov     eax, [esi+30h]
mov     ecx, [esi+34h]
mov     edx, [ebp+arg_4]
mov     [ecx+eax*8], edi
inc     dword ptr [esi+30h]
cmp     [esi+30h], edx
jle     short loc_1000ecb2
jmp     short loc_1000ed57
call    off_10080570
mov     ecx, [ebp+arg_0]
mov     [esi+38h], eax
mov     ecx, [ecx+1ch]
push    819eh
push    150ah
mov     ebx, offset awinshmmap3
mov     edi, eax
call    sub_1000d680
mov     [esp+28h+var_14], eax
mov     eax, [esp+28h+hobject]
add     esp, 8
test    eax, eax
jz      short loc_1000ed54
push    eax
call    off_10080468
mov     ebx, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
cmp     [esi+30h], ecx
jle     short loc_1000ed7a
mov     eax, ecx
imul    eax, ebx
xor     edx, edx
div     systeminfo.dwallocationgranularity
mov     edi, [esi+34h]
mov     eax, [ebp+arg_10]
add     edx, [edi+ecx*8+4]
mov     [eax], edx
jmp     short loc_1000ed83
mov     ecx, [ebp+arg_10]
mov     dword ptr [ecx], 0
mov     esi, [esi]
test    esi, esi
jz      short loc_1000ed93
push    esi
call    dword_10080284
add     esp, 4
mov     eax, [esp+20h+var_14]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 98h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, dword_10081798
push    ebx
mov     ebx, ecx
test    eax, eax
jnz     short loc_1000ede8
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
cmp     eax, 2
jnz     short loc_1000ee01
call    sub_1000d320
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
call    sub_1000d320
mov     esi, eax
test    esi, esi
jnz     short loc_1000ee1d
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    edi
push    esi
call    sub_1000d490
push    esi
mov     edi, eax
call    sub_10009770
mov     ecx, [ebp+var_4]
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 320h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
push    106h
lea     eax, [ebp+var_110]
push    0
push    eax
call    memset
mov     eax, dword_100817ac
add     esp, 0ch
test    eax, eax
jz      short loc_1000eea3
push    eax
push    offset as
lea     ecx, [ebp+var_110]
push    ecx
push    0e6h
call    sub_1000b050
add     esp, 10h
jmp     loc_1000ef6d
mov     eax, dword_10081798
test    eax, eax
jnz     short loc_1000eed5
lea     edx, [ebp+versioninformation]
push    edx
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
cmp     eax, 2
jnz     short loc_1000ef12
lea     eax, [ebp+buffer]
push    eax
push    0e6h
call    off_100805b8
lea     ebx, [ebp+buffer]
call    sub_1000d390
mov     esi, eax
test    esi, esi
jnz     short loc_1000ef4d
mov     eax, 0c0ah
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
lea     edx, [ebp+multibytestr]
push    edx
push    0e6h
call    off_100805ac
lea     eax, [ebp+multibytestr]
push    eax
call    sub_1000d410
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1000eefd
call    sub_1000d390
push    ebx
mov     esi, eax
call    sub_10009770
add     esp, 4
test    esi, esi
jz      short loc_1000eefd
push    esi
push    offset as
lea     ecx, [ebp+var_110]
push    ecx
push    0e6h
call    sub_1000b050
push    esi
call    sub_10009770
add     esp, 14h
cmp     [ebp+var_110], 0
lea     eax, [ebp+var_110]
jz      short loc_1000ef86
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1000ef80
lea     edx, [ebp+var_110]
sub     eax, edx
and     eax, 3fffffffh
mov     ecx, eax
mov     eax, offset aetilqs
lea     ebx, [ebx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1000efa0
sub     eax, offset aetilqs
and     eax, 3fffffffh
lea     eax, [eax+ecx+12h]
cmp     eax, 106h
jl      short loc_1000efd0
mov     eax, 1
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, ecx
test    ecx, ecx
jz      short loc_1000efea
lea     edx, [ebp+var_110]
lea     esp, [esp+0]
cmp     byte ptr [edx+eax-1], 5ch
jnz     short loc_1000efea
dec     eax
jnz     short loc_1000efe0
mov     [ebp+eax+var_110], 0
mov     eax, offset asetilqs
test    ecx, ecx
jg      short loc_1000f000
mov     eax, offset aetilqs
lea     ecx, [ebp+var_110]
push    ecx
push    eax
push    edi
push    0f4h
call    sub_1000b050
add     esp, 10h
mov     eax, edi
test    edi, edi
jz      short loc_1000f02e
cmp     byte ptr [edi], 0
jz      short loc_1000f027
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1000f021
sub     eax, edi
and     eax, 3fffffffh
cmp     dword_10080234, 0
lea     edx, [edi+eax]
mov     esi, eax
mov     ebx, 0fh
mov     [ebp+var_320], edx
jnz     short loc_1000f053
mov     [ebp+var_31c], 0
jmp     short loc_1000f072
push    5
call    dword_10080274
add     esp, 4
mov     [ebp+var_31c], eax
test    eax, eax
jz      short loc_1000f072
push    eax
call    dword_1008027c
add     esp, 4
call    sub_1000b190
mov     ecx, [ebp+var_320]
mov     [ecx], al
inc     ecx
dec     ebx
mov     [ebp+var_320], ecx
jnz     short loc_1000f072
mov     eax, [ebp+var_31c]
test    eax, eax
jz      short loc_1000f09d
push    eax
call    dword_10080284
add     esp, 4
mov     ecx, 3
movzx   eax, byte ptr [edi+esi]
xor     edx, edx
mov     ebx, 3eh
div     ebx
movzx   eax, byte ptr [edi+esi+1]
add     esi, 5
movzx   edx, byte_100807b4[edx]
mov     [edi+esi-5], dl
xor     edx, edx
div     ebx
movzx   eax, byte_100807b4[edx]
mov     [edi+esi-4], al
movzx   eax, byte ptr [edi+esi-3]
xor     edx, edx
div     ebx
movzx   eax, byte ptr [edi+esi-2]
movzx   edx, byte_100807b4[edx]
mov     [edi+esi-3], dl
xor     edx, edx
div     ebx
movzx   eax, byte_100807b4[edx]
mov     [edi+esi-2], al
movzx   eax, byte ptr [edi+esi-1]
xor     edx, edx
div     ebx
dec     ecx
movzx   edx, byte_100807b4[edx]
mov     [edi+esi-1], dl
jnz     short loc_1000f0a2
mov     [edi+esi], cx
mov     ecx, [ebp+var_4]
pop     esi
xor     ecx, ebp
xor     eax, eax
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0bch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, dword_10081798
test    eax, eax
jnz     short loc_1000f175
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
push    esi
cmp     eax, 2
jnz     short loc_1000f1e6
xor     esi, esi
xor     eax, eax
mov     [ebp+fileinformation], eax
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
mov     [ebp+var_1c], eax
mov     [ebp+var_18], eax
mov     [ebp+var_14], eax
mov     [ebp+var_10], eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
lea     ebx, [ebx+0]
lea     ecx, [ebp+fileinformation]
push    ecx
push    0
push    edi
call    off_10080540
test    eax, eax
jnz     short loc_1000f1e1
call    off_10080570
cmp     esi, dword_100807ac
jge     short loc_1000f20a
cmp     eax, 5
jz      short loc_1000f1ce
cmp     eax, 21h
jz      short loc_1000f1ce
cmp     eax, 20h
jnz     short loc_1000f20a
inc     esi
mov     edx, esi
imul    edx, dword_100807b0
push    edx
call    off_100806b4
jmp     short loc_1000f1a0
mov     eax, [ebp+fileinformation]
jmp     short loc_1000f1ed
push    edi
call    off_10080528
cmp     eax, 0ffffffffh
jz      short loc_1000f20a
test    al, 10h
jz      short loc_1000f20a
mov     eax, 1
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
xor     ecx, ebp
xor     eax, eax
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 13ch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+13ch+var_4], eax
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_10]
mov     ecx, [ebp+arg_4]
mov     [esp+13ch+var_118], edx
mov     [esp+13ch+var_124], eax
mov     eax, [ebp+arg_c]
mov     edx, eax
and     edx, 10h
mov     [esp+13ch+var_128], edx
mov     edx, eax
and     edx, 8
push    ebx
mov     [esp+140h+var_114], edx
push    esi
mov     esi, [ebp+arg_8]
mov     edx, eax
mov     ebx, eax
and     edx, 4
and     ebx, 2
push    edi
mov     [esp+148h+var_120], ecx
mov     [esp+148h+var_12c], ecx
mov     [esp+148h+var_138], 0
mov     [esp+148h+dwflagsandattributes], edx
mov     [esp+148h+var_11c], ebx
mov     dword ptr [esi+8], 0ffffffffh
test    ecx, ecx
jnz     short loc_1000f2aa
lea     edi, [esp+148h+var_110]
call    sub_1000ee50
test    eax, eax
jnz     loc_1000f56e
mov     eax, edi
mov     [esp+148h+var_12c], eax
mov     ecx, [esp+148h+var_12c]
call    sub_1000eda0
mov     edi, eax
mov     [esp+148h+lpfilename], edi
test    edi, edi
jnz     short loc_1000f2d7
mov     eax, 0c0ah
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+13ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
call    sub_1000f130
test    eax, eax
jz      short loc_1000f303
push    edi
call    sub_10009770
add     esp, 4
mov     eax, 20eh
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+13ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
neg     ebx
sbb     ebx, ebx
and     ebx, 40000000h
add     ebx, 80000000h
cmp     [esp+148h+var_128], 0
jz      short loc_1000f324
mov     [esp+148h+dwcreationdisposition], 1
jmp     short loc_1000f334
xor     ecx, ecx
cmp     [esp+148h+dwflagsandattributes], ecx
setnz   cl
add     ecx, 3
mov     [esp+148h+dwcreationdisposition], ecx
mov     eax, [esp+148h+var_114]
neg     eax
sbb     eax, eax
and     eax, 4000082h
sub     eax, 0ffffff80h
mov     [esp+148h+dwflagsandattributes], eax
call    sub_1000d2c0
test    eax, eax
jz      short loc_1000f3c0
mov     edx, [esp+148h+dwflagsandattributes]
mov     eax, [esp+148h+dwcreationdisposition]
mov     ecx, [esp+148h+lpfilename]
push    0
push    edx
push    eax
push    0
push    3
push    ebx
push    ecx
call    off_10080480
mov     edi, eax
cmp     edi, 0ffffffffh
jnz     loc_1000f421
call    off_10080570
mov     ecx, [esp+148h+var_138]
cmp     ecx, dword_100807ac
jge     short loc_1000f3b2
cmp     eax, 5
jz      short loc_1000f399
cmp     eax, 21h
jz      short loc_1000f399
cmp     eax, 20h
jnz     short loc_1000f3b2
lea     edi, [ecx+1]
mov     edx, edi
imul    edx, dword_100807b0
push    edx
call    off_100806b4
mov     [esp+148h+var_138], edi
jmp     short loc_1000f351
mov     [esp+148h+dwcreationdisposition], eax
jmp     short loc_1000f425
jmp     short loc_1000f3c0
mov     eax, [esp+148h+dwflagsandattributes]
mov     ecx, [esp+148h+dwcreationdisposition]
mov     edx, [esp+148h+lpfilename]
push    0
push    eax
push    ecx
push    0
push    3
push    ebx
push    edx
call    off_10080474
mov     edi, eax
cmp     edi, 0ffffffffh
jnz     short loc_1000f421
call    off_10080570
mov     ecx, [esp+148h+var_138]
cmp     ecx, dword_100807ac
jge     short loc_1000f41d
cmp     eax, 5
jz      short loc_1000f404
cmp     eax, 21h
jz      short loc_1000f404
cmp     eax, 20h
jnz     short loc_1000f41d
lea     edi, [ecx+1]
mov     eax, edi
imul    eax, dword_100807b0
push    eax
call    off_100806b4
mov     [esp+148h+var_138], edi
jmp     short loc_1000f3c0
mov     [esp+148h+dwcreationdisposition], eax
mov     ecx, [esp+148h+var_138]
xor     ebx, ebx
cmp     ecx, ebx
jz      short loc_1000f44d
lea     eax, [ecx+1]
imul    eax, dword_100807b0
imul    eax, ecx
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    offset adelayeddmsforl
push    0ah
call    sub_1000b150
add     esp, 0ch
cmp     edi, 0ffffffffh
jnz     loc_1000f4fb
mov     ecx, [esp+148h+dwcreationdisposition]
mov     edi, [esp+148h+dwcreationdisposition]
mov     [esi+14h], ecx
mov     ecx, [esp+148h+var_12c]
push    8336h
push    0eh
mov     ebx, offset awinopen
call    sub_1000d680
mov     edx, [esp+150h+lpfilename]
push    edx
call    sub_10009770
add     esp, 0ch
cmp     [esp+148h+var_11c], 0
jz      short loc_1000f4c8
cmp     [esp+148h+var_128], 0
jnz     short loc_1000f4c8
mov     eax, [esp+148h+var_118]
mov     ecx, [esp+148h+var_120]
mov     edx, [esp+148h+var_124]
push    eax
mov     eax, [ebp+arg_c]
and     eax, 0fffffff9h
or      eax, 1
push    eax
push    esi
push    ecx
push    edx
call    sub_1000f220
add     esp, 14h
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+13ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    833ch
push    offset acannotopenfile
push    0eh
call    sub_1000b150
add     esp, 10h
mov     eax, 0eh
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+13ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+148h+var_118]
cmp     eax, ebx
jz      short loc_1000f50f
xor     ecx, ecx
cmp     [esp+148h+var_11c], ebx
setnz   cl
inc     ecx
mov     [eax], ecx
mov     edx, [esp+148h+var_124]
mov     ecx, [esp+148h+var_120]
xor     eax, eax
mov     [esi+0ch], eax
mov     [esi+10h], eax
mov     [esi+20h], eax
mov     dword ptr [esi], offset dword_10076720
mov     [esi+8], edi
mov     [esi+14h], ebx
mov     [esi+4], edx
mov     [esi+18h], ebx
mov     [esi+1ch], ecx
call    sub_100721e0
cmp     eax, ebx
jz      short loc_1000f55b
push    1
push    1
mov     ebx, eax
call    sub_10050ad0
xor     ecx, ecx
add     esp, 8
test    al, al
setnz   cl
mov     eax, ecx
test    eax, eax
jz      short loc_1000f55f
or      byte ptr [esi+10h], 10h
mov     edx, [esp+148h+lpfilename]
push    edx
call    sub_10009770
add     esp, 4
xor     eax, eax
mov     ecx, [esp+148h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0a8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
mov     ecx, ebx
xor     edi, edi
call    sub_1000eda0
mov     esi, eax
test    esi, esi
jnz     short loc_1000f5ce
mov     eax, 0c0ah
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_10081798
test    eax, eax
jnz     short loc_1000f600
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
push    esi
cmp     eax, 2
jnz     loc_1000f6ae
call    off_10080534
cmp     eax, 0ffffffffh
jz      short loc_1000f66a
test    al, 10h
jnz     loc_1000f70e
push    esi
call    off_100804b0
test    eax, eax
jnz     short loc_1000f66a
call    off_10080570
cmp     edi, dword_100807ac
jge     loc_1000f714
cmp     eax, 5
jz      short loc_1000f64d
cmp     eax, 21h
jz      short loc_1000f64d
cmp     eax, 20h
jnz     loc_1000f714
inc     edi
mov     ecx, edi
imul    ecx, dword_100807b0
push    ecx
call    off_100806b4
push    esi
call    off_10080534
cmp     eax, 0ffffffffh
jnz     short loc_1000f615
xor     ebx, ebx
test    edi, edi
jz      short loc_1000f692
lea     eax, [edi+1]
imul    eax, dword_100807b0
imul    eax, edi
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    offset adelayeddmsforl
push    0ah
call    sub_1000b150
add     esp, 0ch
push    esi
call    sub_10009770
mov     ecx, [ebp+var_4]
add     esp, 4
pop     edi
pop     esi
mov     eax, ebx
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
call    off_10080528
cmp     eax, 0ffffffffh
jz      short loc_1000f66a
lea     esp, [esp+0]
test    al, 10h
jnz     short loc_1000f70e
push    esi
call    off_100804a4
test    eax, eax
jnz     short loc_1000f66a
call    off_10080570
cmp     edi, dword_100807ac
jge     short loc_1000f714
cmp     eax, 5
jz      short loc_1000f6ec
cmp     eax, 21h
jz      short loc_1000f6ec
cmp     eax, 20h
jnz     short loc_1000f714
inc     edi
mov     edx, edi
imul    edx, dword_100807b0
push    edx
call    off_100806b4
push    esi
call    off_10080528
cmp     eax, 0ffffffffh
jnz     short loc_1000f6c0
jmp     loc_1000f66a
mov     eax, [ebp+var_a4]
push    83c1h
mov     ecx, ebx
push    0a0ah
mov     ebx, offset awindelete
mov     edi, eax
call    sub_1000d680
add     esp, 8
mov     ebx, eax
jmp     loc_1000f692
push    ebp
mov     ebp, esp
sub     esp, 0c8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+arg_c]
push    esi
push    edi
mov     [ebp+var_c8], ecx
mov     [ebp+var_c4], eax
xor     esi, esi
call    sub_1000eda0
mov     edi, eax
mov     [ebp+var_c0], edi
test    edi, edi
jnz     short loc_1000f78f
pop     edi
mov     eax, 0c0ah
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_10081798
test    eax, eax
jnz     short loc_1000f7c1
lea     ecx, [ebp+versioninformation]
push    ecx
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
push    ebx
cmp     eax, 2
jnz     loc_1000f8d8
xor     ebx, ebx
xor     eax, eax
mov     [ebp+fileinformation], eax
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
mov     [ebp+var_1c], eax
mov     [ebp+var_18], eax
mov     [ebp+var_14], eax
mov     [ebp+var_10], eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
lea     ebx, [ebx+0]
lea     edx, [ebp+fileinformation]
push    edx
push    0
push    edi
call    off_10080540
mov     esi, eax
test    esi, esi
jnz     short loc_1000f83c
call    off_10080570
mov     edi, eax
cmp     ebx, dword_100807ac
jge     short loc_1000f85e
cmp     edi, 5
jz      short loc_1000f822
cmp     edi, 21h
jz      short loc_1000f822
cmp     edi, 20h
jnz     short loc_1000f85e
lea     eax, [ebx+1]
imul    eax, dword_100807b0
push    eax
call    off_100806b4
mov     edi, [ebp+var_c0]
inc     ebx
jmp     short loc_1000f7f0
cmp     [ebp+arg_8], 0
jnz     short loc_1000f856
cmp     [ebp+var_c], 0
jnz     short loc_1000f856
cmp     [ebp+var_8], 0
jnz     short loc_1000f856
or      ebx, 0ffffffffh
jmp     loc_1000f8e1
mov     ebx, [ebp+fileinformation]
jmp     loc_1000f8e1
test    ebx, ebx
jz      short loc_1000f884
lea     eax, [ebx+1]
imul    eax, dword_100807b0
imul    eax, ebx
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    offset adelayeddmsforl
push    0ah
call    sub_1000b150
add     esp, 0ch
cmp     edi, 2
jz      short loc_1000f8cd
cmp     edi, 3
jz      short loc_1000f8cd
mov     ecx, [ebp+var_c8]
push    83f3h
push    0d0ah
mov     ebx, offset awinaccess
call    sub_1000d680
mov     ecx, [ebp+var_c0]
push    ecx
call    sub_10009770
add     esp, 0ch
pop     ebx
pop     edi
mov     eax, 0d0ah
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+var_c0]
or      ebx, 0ffffffffh
jmp     short loc_1000f8e1
push    edi
call    off_10080528
mov     ebx, eax
push    edi
call    sub_10009770
mov     eax, [ebp+arg_8]
add     esp, 4
sub     eax, 0
jz      short loc_1000f8f8
dec     eax
jz      short loc_1000f91d
dec     eax
jnz     short loc_1000f902
xor     edx, edx
cmp     ebx, 0ffffffffh
setnz   dl
mov     esi, edx
mov     eax, [ebp+var_c4]
mov     ecx, [ebp+var_4]
pop     ebx
mov     [eax], esi
pop     edi
xor     ecx, ebp
xor     eax, eax
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 0ffffffffh
jz      short loc_1000f92e
test    bl, 1
jnz     short loc_1000f92e
mov     esi, 1
jmp     short loc_1000f902
xor     esi, esi
jmp     short loc_1000f902
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ach
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+0ach+var_4], eax
mov     ecx, [ebp+arg_4]
cmp     byte ptr [ecx], 2fh
mov     edx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ebp+arg_c]
push    edi
mov     [esp+0b8h+var_a4], edx
mov     [esp+0b8h+var_a8], esi
mov     bl, 3ah
jnz     short loc_1000f988
movzx   eax, byte ptr [ecx+1]
test    ds:byte_10076130[eax], 2
jz      short loc_1000f988
cmp     [ecx+2], bl
jnz     short loc_1000f988
inc     ecx
mov     edi, dword_100817b0
test    edi, edi
jz      short loc_1000f9e1
mov     al, [ecx]
cmp     al, 2fh
jz      short loc_1000f9e1
cmp     al, 5ch
jz      short loc_1000f9e1
movzx   eax, al
test    ds:byte_10076130[eax], 2
jz      short loc_1000f9ad
cmp     [ecx+1], bl
jz      short loc_1000f9e1
mov     eax, [edx+8]
mov     edx, [ebp+arg_8]
cmp     edx, eax
jge     short loc_1000f9b9
mov     eax, edx
push    ecx
push    edi
push    offset ass_2
push    esi
push    eax
call    sub_1000b050
add     esp, 14h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0ach+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
call    sub_1000eda0
mov     esi, eax
test    esi, esi
jz      short loc_1000fa51
mov     eax, dword_10081798
test    eax, eax
jnz     short loc_1000fa18
lea     ecx, [esp+0b8h+versioninformation]
push    ecx
mov     [esp+0bch+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [esp+0b8h+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
push    0
push    0
push    0
push    esi
cmp     eax, 2
jnz     short loc_1000fa8e
call    off_10080564
lea     edi, [eax+3]
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000fa48
lea     edx, [edi+edi]
push    edx
call    sub_100094a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1000fa6b
push    esi
call    sub_10009770
add     esp, 4
mov     eax, 0c0ah
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0ach+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    0
push    ebx
push    edi
push    esi
call    off_10080564
push    esi
call    sub_10009770
call    sub_1000d390
push    ebx
mov     esi, eax
call    sub_10009770
add     esp, 8
jmp     short loc_1000faec
call    off_10080558
lea     ebx, [eax+3]
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000fa48
push    ebx
call    sub_100094a0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_1000fa48
push    0
push    edi
push    ebx
push    esi
call    off_10080558
push    esi
call    sub_10009770
push    edi
call    sub_1000d410
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     short loc_1000fad3
xor     esi, esi
jmp     short loc_1000fae3
call    sub_1000d390
push    ebx
mov     esi, eax
call    sub_10009770
add     esp, 4
push    edi
call    sub_10009770
add     esp, 4
test    esi, esi
jz      loc_1000fa51
mov     eax, [esp+0b8h+var_a4]
mov     eax, [eax+8]
mov     ecx, [ebp+arg_8]
cmp     ecx, eax
jge     short loc_1000fb04
mov     eax, ecx
mov     ecx, [esp+0b8h+var_a8]
push    esi
push    offset as
push    ecx
push    eax
call    sub_1000b050
push    esi
call    sub_10009770
mov     ecx, [esp+0cch+var_4]
add     esp, 14h
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
xor     eax, eax
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 98h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_4]
push    esi
call    sub_1000eda0
mov     esi, eax
test    esi, esi
jnz     short loc_1000fb71
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_10081798
test    eax, eax
jnz     short loc_1000fba3
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    off_100805d0
xor     eax, eax
cmp     [ebp+versioninformation.dwplatformid], 2
setz    al
inc     eax
mov     dword_10081798, eax
push    edi
push    esi
cmp     eax, 2
jnz     short loc_1000fbb2
call    off_1008063c
jmp     short loc_1000fbb8
call    off_10080630
push    esi
mov     edi, eax
call    sub_10009770
mov     ecx, [ebp+var_4]
add     esp, 4
mov     eax, edi
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
push    eax
push    ecx
call    off_10080570
push    eax
call    sub_1000d510
add     esp, 0ch
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+lpprocname]
mov     ecx, [ebp+hmodule]
push    eax
push    ecx
call    off_1008057c
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+hlibmodule]
push    eax
call    off_100804f8
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
xor     esi, esi
push    edi
mov     edi, [ebp+arg_8]
cmp     ebx, 10h
jb      short loc_1000fc76
lea     eax, [ebp+systemtime]
push    eax
call    off_10080594
mov     ecx, dword ptr [ebp+systemtime.wyear]
mov     edx, dword ptr [ebp+systemtime.wdayofweek]
mov     eax, dword ptr [ebp+systemtime.whour]
mov     [edi], ecx
mov     ecx, dword ptr [ebp+systemtime.wsecond]
mov     [edi+4], edx
mov     [edi+8], eax
mov     [edi+0ch], ecx
mov     esi, 10h
mov     edx, ebx
sub     edx, esi
cmp     edx, 4
jb      short loc_1000fc8b
call    off_10080504
mov     [edi+esi], eax
add     esi, 4
mov     eax, ebx
sub     eax, esi
cmp     eax, 4
jb      short loc_1000fca0
call    off_100805c4
mov     [edi+esi], eax
add     esi, 4
sub     ebx, esi
cmp     ebx, 8
jb      short loc_1000fcd2
lea     ecx, [ebp+systemtime.whour]
push    ecx
call    off_10080684
mov     eax, dword ptr [ebp+systemtime.wsecond]
mov     edx, dword ptr [ebp+systemtime.whour]
mov     [edi+esi+4], eax
mov     [edi+esi], edx
pop     edi
lea     eax, [esi+8]
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
pop     edi
mov     eax, esi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
add     ecx, 3e7h
mov     eax, 10624dd3h
imul    ecx
push    esi
sar     edx, 6
mov     esi, edx
shr     esi, 1fh
add     esi, edx
push    esi
call    off_100806b4
mov     eax, esi
imul    eax, 3e8h
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
lea     eax, [ebp+systemtimeasfiletime]
push    eax
call    off_100805a0
mov     edx, [ebp+systemtimeasfiletime.dwhighdatetime]
xor     ecx, ecx
xor     esi, esi
add     ecx, [ebp+systemtimeasfiletime.dwlowdatetime]
push    esi
push    2710h
adc     edx, esi
push    edx
push    ecx
call    __alldiv
mov     ecx, eax
mov     eax, [ebp+arg_4]
add     ecx, 0d9cba00h
adc     edx, 0b531h
mov     [eax], ecx
mov     [eax+4], edx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
lea     eax, [ebp+systemtimeasfiletime]
push    eax
call    off_100805a0
mov     edx, [ebp+systemtimeasfiletime.dwhighdatetime]
xor     ecx, ecx
xor     esi, esi
add     ecx, [ebp+systemtimeasfiletime.dwlowdatetime]
push    esi
push    2710h
adc     edx, esi
push    edx
push    ecx
call    __alldiv
add     eax, 0d9cba00h
adc     edx, 0b531h
mov     [ebp+systemtimeasfiletime.dwlowdatetime], eax
mov     [ebp+systemtimeasfiletime.dwhighdatetime], edx
fild    qword ptr [ebp+systemtimeasfiletime.dwlowdatetime]
mov     ecx, [ebp+arg_4]
xor     eax, eax
fdiv    ds:dbl_1007cf28
pop     esi
fstp    qword ptr [ecx]
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
push    offset systeminfo
mov     dword ptr systeminfo.anonymous_0, eax
mov     systeminfo.dwpagesize, eax
mov     systeminfo.lpminimumapplicationaddress, eax
mov     systeminfo.lpmaximumapplicationaddress, eax
mov     systeminfo.dwactiveprocessormask, eax
mov     systeminfo.dwnumberofprocessors, eax
mov     systeminfo.dwprocessortype, eax
mov     systeminfo.dwallocationgranularity, eax
mov     dword ptr systeminfo.wprocessorlevel, eax
call    off_10080588
call    sub_1006edd0
test    eax, eax
jnz     short loc_1000fe5b
push    esi
cmp     dword_10080234, eax
jnz     short loc_1000fe10
xor     esi, esi
jmp     short loc_1000fe2b
push    2
call    dword_10080274
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_1000fe2b
push    esi
call    dword_1008027c
add     esp, 4
mov     edx, offset dword_100807f8
call    sub_10008ba0
mov     eax, dword_100816b8
mov     dword_10080804, eax
mov     dword_100816b8, offset dword_100807f8
test    esi, esi
jz      short loc_1000fe57
push    esi
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     esi
retn
xor     eax, eax
retn
push    esi
push    edi
mov     edi, eax
mov     esi, ecx
cmp     edi, [esi]
ja      short loc_1000fee8
test    edi, edi
jz      short loc_1000fee8
dec     edi
cmp     dword ptr [esi+8], 0
jz      short loc_1000fe8c
mov     eax, edi
xor     edx, edx
div     dword ptr [esi+8]
mov     esi, [esi+eax*4+0ch]
mov     edi, edx
test    esi, esi
jz      short loc_1000fee8
cmp     dword ptr [esi+8], 0
jnz     short loc_1000fe75
cmp     dword ptr [esi], 0fa0h
ja      short loc_1000feb2
mov     ecx, edi
and     ecx, 7
mov     eax, 1
shl     eax, cl
shr     edi, 3
test    [edi+esi+0ch], al
mov     eax, 0
pop     edi
setnz   al
pop     esi
retn
mov     eax, 10624dd3h
mul     edi
shr     edx, 3
mov     eax, edx
imul    eax, 7dh
mov     edx, edi
sub     edx, eax
mov     eax, [esi+edx*4+0ch]
inc     edi
test    eax, eax
jz      short loc_1000fee8
mov     edi, edi
cmp     eax, edi
jz      short loc_1000feed
lea     eax, [edx+1]
xor     edx, edx
mov     ecx, 7dh
div     ecx
mov     eax, [esi+edx*4+0ch]
test    eax, eax
jnz     short loc_1000fed0
pop     edi
xor     eax, eax
pop     esi
retn
pop     edi
mov     eax, 1
pop     esi
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
test    esi, esi
jz      loc_10010036
mov     ebx, [ebp+arg_4]
dec     ebx
cmp     dword ptr [esi], 0fa0h
jbe     loc_1000ffcd
mov     ecx, [esi+8]
mov     [esp+18h+var_4], ecx
test    ecx, ecx
jz      loc_1000ffc5
xor     edx, edx
mov     eax, ebx
div     ecx
mov     edi, eax
cmp     dword ptr [esi+edi*4+0ch], 0
mov     [ebp+arg_4], edx
jnz     short loc_1000ffaf
cmp     dword_10080230, 0
jz      loc_1000ffea
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1000ff68
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [esp+18h+var_8]
mov     eax, 200h
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1000ff89
push    eax
call    dword_10080284
add     esp, 4
mov     ebx, [esp+18h+var_8]
test    ebx, ebx
jz      short loc_1000ffa7
push    200h
push    0
push    ebx
call    memset
mov     eax, [esp+24h+var_4]
add     esp, 0ch
mov     [ebx], eax
mov     [esi+edi*4+0ch], ebx
test    ebx, ebx
jz      short loc_10010000
mov     esi, [esi+edi*4+0ch]
cmp     dword ptr [esi], 0fa0h
mov     ebx, [ebp+arg_4]
mov     [ebp+arg_0], esi
ja      loc_1000ff27
cmp     dword ptr [esi], 0fa0h
ja      short loc_1001000c
mov     ecx, ebx
shr     ecx, 3
lea     eax, [ecx+esi+0ch]
mov     ecx, ebx
and     ecx, 7
mov     dl, 1
shl     dl, cl
or      [eax], dl
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    200h
call    dword_1008024c
mov     ebx, eax
add     esp, 4
mov     [esp+18h+var_8], ebx
jmp     short loc_1000ff8d
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 10624dd3h
mul     ebx
shr     edx, 3
imul    edx, 7dh
mov     eax, ebx
sub     eax, edx
mov     ecx, [esi+eax*4+0ch]
inc     ebx
test    ecx, ecx
jnz     short loc_10010040
mov     ecx, [esi+4]
cmp     ecx, 7ch
jnb     short loc_10010054
inc     ecx
mov     [esi+4], ecx
mov     [esi+eax*4+0ch], ebx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ecx, ebx
jz      short loc_10010036
inc     eax
cmp     eax, 7dh
jb      short loc_1001004c
xor     eax, eax
mov     ecx, [esi+eax*4+0ch]
test    ecx, ecx
jnz     short loc_10010040
mov     ecx, [esi+4]
cmp     ecx, 3eh
jb      short loc_1001002e
push    1f4h
call    sub_100094a0
add     esp, 4
mov     [esp+18h+var_8], eax
test    eax, eax
jz      short loc_10010000
lea     edx, [esi+0ch]
push    1f4h
mov     esi, edx
mov     edi, eax
push    0
mov     ecx, 7dh
push    edx
rep movsd
call    memset
mov     esi, [ebp+arg_0]
mov     ecx, [esi]
add     ecx, 7ch
mov     eax, 10624dd3h
mul     ecx
add     esp, 0ch
shr     edx, 3
push    ebx
push    esi
mov     [esi+8], edx
call    sub_1000ff00
add     esp, 8
mov     ebx, eax
xor     edi, edi
mov     edx, [esp+18h+var_8]
mov     eax, [edx+edi*4]
test    eax, eax
jz      short loc_100100c9
push    eax
push    esi
call    sub_1000ff00
add     esp, 8
or      ebx, eax
inc     edi
cmp     edi, 7dh
jb      short loc_100100b2
mov     eax, [esp+18h+var_8]
push    eax
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
dec     [ebp+arg_0]
push    ebx
mov     ebx, eax
cmp     dword ptr [ebx+8], 0
jz      short loc_1001011d
nop
mov     eax, [ebp+arg_0]
xor     edx, edx
div     dword ptr [ebx+8]
mov     ebx, [ebx+eax*4+0ch]
mov     [ebp+arg_0], edx
test    ebx, ebx
jz      loc_100101b3
cmp     dword ptr [ebx+8], 0
jnz     short loc_10010100
cmp     dword ptr [ebx], 0fa0h
ja      short loc_1001013f
mov     ecx, [ebp+arg_0]
mov     eax, ecx
and     ecx, 7
mov     dl, 1
shl     dl, cl
shr     eax, 3
lea     ebx, [eax+ebx+0ch]
not     dl
and     [ebx], dl
pop     ebx
pop     ebp
retn
push    esi
push    edi
mov     edi, [ebp+arg_4]
lea     eax, [ebx+0ch]
push    1f4h
mov     esi, eax
push    0
mov     ecx, 7dh
push    eax
rep movsd
call    memset
add     esp, 0ch
mov     dword ptr [ebx+4], 0
xor     ecx, ecx
lea     esp, [esp+0]
mov     esi, [ebp+arg_4]
mov     eax, [esi+ecx*4]
test    eax, eax
jz      short loc_100101ab
mov     edx, [ebp+arg_0]
inc     edx
cmp     eax, edx
jz      short loc_100101ab
dec     eax
xor     edx, edx
mov     edi, 7dh
div     edi
inc     dword ptr [ebx+4]
cmp     dword ptr [ebx+edx*4+0ch], 0
jz      short loc_100101a4
inc     edx
cmp     edx, edi
jb      short loc_1001019d
xor     edx, edx
cmp     dword ptr [ebx+edx*4+0ch], 0
jnz     short loc_10010196
mov     eax, [esi+ecx*4]
mov     [ebx+edx*4+0ch], eax
inc     ecx
cmp     ecx, 7dh
jb      short loc_10010170
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
test    ebx, ebx
jz      short loc_100101fc
cmp     dword ptr [ebx+8], 0
jz      short loc_100101f3
push    esi
push    edi
lea     esi, [ebx+0ch]
mov     edi, 7dh
jmp     short loc_100101e0
mov     eax, [esi]
push    eax
call    sub_100101c0
add     esp, 4
add     esi, 4
dec     edi
jnz     short loc_100101e0
pop     edi
pop     esi
push    ebx
call    sub_10009770
add     esp, 4
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
push    ebx
push    esi
push    edi
push    200h
mov     [esp+34h+var_10], 0ffffffffh
call    sub_100094a0
mov     edi, eax
add     esp, 4
mov     [esp+30h+var_20], edi
test    edi, edi
jz      short loc_10010240
push    200h
push    0
push    edi
call    memset
mov     eax, [ebp+arg_0]
add     esp, 0ch
mov     [edi], eax
mov     eax, [ebp+arg_0]
add     eax, 7
cdq
and     edx, 7
lea     esi, [edx+eax]
sar     esi, 3
inc     esi
push    esi
call    sub_100094a0
mov     ebx, eax
add     esp, 4
mov     [esp+30h+var_14], ebx
test    ebx, ebx
jz      short loc_10010270
push    esi
push    0
push    ebx
call    memset
add     esp, 0ch
call    sub_1006edd0
test    eax, eax
jz      short loc_10010283
mov     [esp+30h+var_18], 0
jmp     short loc_10010294
push    200h
call    sub_100094a0
add     esp, 4
mov     [esp+30h+var_18], eax
test    edi, edi
jz      loc_100103bd
test    ebx, ebx
jz      loc_100103bd
cmp     [esp+30h+var_18], 0
jz      loc_100103bd
mov     eax, [ebp+arg_4]
mov     ebx, [eax]
xor     edi, edi
mov     [esp+30h+var_1c], ebx
test    ebx, ebx
jz      loc_10010433
jmp     short loc_100102ca
mov     ebx, [esp+30h+var_1c]
mov     eax, edx
test    ebx, ebx
jle     short loc_100102f7
cmp     ebx, 2
jle     short loc_100102d8
cmp     ebx, 5
jnz     short loc_100102f7
mov     ecx, [eax+edi*4+8]
lea     edx, [ecx-1]
mov     [esp+30h+var_4], edx
mov     edx, [eax+edi*4+0ch]
add     edx, ecx
mov     [esp+30h+var_8], 4
mov     [eax+edi*4+8], edx
jmp     short loc_1001035c
cmp     dword_10080234, 0
mov     [esp+30h+var_8], 2
mov     esi, 4
lea     ebx, [esp+30h+var_4]
jnz     short loc_1001031b
mov     [esp+30h+var_c], 0
jmp     short loc_10010338
push    5
call    dword_10080274
add     esp, 4
mov     [esp+30h+var_c], eax
test    eax, eax
jz      short loc_10010338
push    eax
call    dword_1008027c
add     esp, 4
call    sub_1000b190
mov     [ebx], al
inc     ebx
dec     esi
jnz     short loc_10010338
mov     eax, [esp+30h+var_c]
test    eax, eax
jz      short loc_10010355
push    eax
call    dword_10080284
add     esp, 4
mov     ebx, [esp+30h+var_1c]
mov     eax, [ebp+arg_4]
dec     dword ptr [eax+edi*4+4]
cmp     dword ptr [eax+edi*4+4], 0
jle     short loc_1001036f
mov     [esp+30h+var_8], 0
mov     eax, [esp+30h+var_4]
and     eax, 7fffffffh
cdq
idiv    [ebp+arg_0]
add     edi, [esp+30h+var_8]
lea     eax, [edx+1]
mov     [esp+30h+var_4], edx
mov     esi, eax
mov     ecx, eax
sar     esi, 3
add     esi, [esp+30h+var_14]
and     ecx, 7
mov     dl, 1
shl     dl, cl
test    bl, 1
jz      short loc_1001040b
or      [esi], dl
cmp     [esp+30h+var_1c], 5
jz      short loc_10010421
push    eax
mov     eax, [esp+34h+var_20]
push    eax
call    sub_1000ff00
add     esp, 8
test    eax, eax
jz      short loc_10010421
mov     edi, [esp+30h+var_20]
mov     eax, [esp+30h+var_18]
push    eax
call    sub_10009770
mov     ecx, [esp+34h+var_14]
push    ecx
call    sub_10009770
add     esp, 8
test    edi, edi
jz      short loc_10010400
cmp     dword ptr [edi+8], 0
jz      short loc_100103f7
lea     esi, [edi+0ch]
mov     ebx, 7dh
mov     edx, [esi]
push    edx
call    sub_100101c0
add     esp, 4
add     esi, 4
dec     ebx
jnz     short loc_100103e6
push    edi
call    sub_10009770
add     esp, 4
mov     eax, [esp+30h+var_10]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esp+30h+var_18]
push    ecx
not     dl
and     [esi], dl
push    eax
mov     eax, [esp+38h+var_20]
call    sub_100100f0
add     esp, 8
mov     edx, [ebp+arg_4]
mov     eax, [edx+edi*4]
mov     [esp+30h+var_1c], eax
test    eax, eax
jnz     loc_100102c4
mov     edi, [ebp+arg_0]
mov     ebx, [esp+30h+var_20]
lea     eax, [edi+1]
mov     ecx, ebx
call    sub_1000fe60
mov     ecx, [ebx]
sub     ecx, edi
add     ecx, eax
mov     esi, 1
mov     [esp+30h+var_10], ecx
cmp     edi, esi
jge     short loc_10010464
mov     edi, ebx
jmp     loc_100103bd
mov     ebx, [esp+30h+var_20]
mov     eax, esi
mov     ecx, ebx
call    sub_1000fe60
mov     ebx, [esp+30h+var_14]
mov     ecx, esi
and     ecx, 7
mov     edx, 1
shl     edx, cl
mov     ecx, esi
sar     ecx, 3
mov     cl, [ecx+ebx]
test    cl, dl
mov     edx, 0
setnz   dl
cmp     edx, eax
jnz     short loc_1001049d
inc     esi
cmp     esi, edi
jle     short loc_10010460
jmp     loc_100103b9
mov     [esp+30h+var_10], esi
jmp     loc_100103b9
mov     edx, [eax+1ch]
push    esi
xor     esi, esi
cmp     [edx+8], eax
jnz     short loc_100104d2
mov     ecx, [eax+24h]
cmp     ecx, esi
jz      short loc_100104cf
test    byte ptr [ecx+18h], 4
jz      short loc_100104cf
mov     ecx, [ecx+24h]
cmp     ecx, esi
jnz     short loc_100104c2
mov     [edx+8], ecx
mov     ecx, [eax+20h]
cmp     ecx, esi
jz      short loc_100104e3
push    edi
mov     edi, [eax+24h]
mov     [ecx+24h], edi
pop     edi
jmp     short loc_100104e9
mov     ecx, [eax+24h]
mov     [edx+4], ecx
mov     ecx, [eax+24h]
cmp     ecx, esi
jz      short loc_100104fe
mov     edx, [eax+20h]
mov     [ecx+20h], edx
mov     [eax+24h], esi
mov     [eax+20h], esi
pop     esi
retn
mov     ecx, [eax+20h]
mov     [edx], ecx
mov     [eax+24h], esi
mov     [eax+20h], esi
pop     esi
retn
mov     ecx, [edx+10h]
test    ecx, ecx
js      short loc_1001051a
mov     eax, ecx
retn
mov     eax, [edx+18h]
add     eax, [edx+14h]
push    esi
cdq
push    edi
mov     esi, eax
push    0ffffffffh
mov     eax, ecx
mov     edi, edx
cdq
push    0fffffc00h
push    edx
push    eax
call    __allmul
push    edi
push    esi
push    edx
push    eax
call    __alldiv
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
xor     esi, esi
cmp     [edi+28h], esi
jnz     short loc_100105a0
cmp     [ebp+arg_4], esi
jz      short loc_100105a0
mov     eax, [edi+1ch]
mov     ecx, [edi+18h]
mov     edx, [edi+14h]
push    eax
add     ecx, 28h
push    ecx
push    edx
call    dword_100802a0
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_1001058b
pop     esi
mov     eax, 7
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, edi
call    sub_10010510
push    eax
push    ebx
call    dword_100802a4
add     esp, 8
mov     [edi+28h], ebx
cmp     [edi+1ch], esi
jz      short loc_100105ad
cmp     [edi], esi
jz      short loc_100105ad
xor     eax, eax
jmp     short loc_100105b2
mov     eax, 1
mov     ebx, [ebp+arg_0]
lea     ecx, [eax+1]
imul    ecx, [ebp+arg_4]
mov     eax, [edi+28h]
mov     [ebp+var_4], ecx
test    eax, eax
jz      short loc_100105d9
push    ecx
push    ebx
push    eax
call    dword_100802ac
add     esp, 0ch
test    eax, eax
jnz     short loc_1001064d
mov     ecx, [ebp+var_4]
cmp     ecx, 1
jnz     loc_100106ae
mov     eax, [edi+8]
test    eax, eax
jz      short loc_10010602
mov     cl, 4
jmp     short loc_100105f0
cmp     [eax+1ah], si
jnz     short loc_100105fb
test    [eax+18h], cl
jz      short loc_10010602
mov     eax, [eax+24h]
test    eax, eax
jnz     short loc_100105f0
mov     [edi+8], eax
test    eax, eax
jnz     short loc_1001061f
mov     eax, [edi+4]
test    eax, eax
jz      short loc_10010639
cmp     [eax+1ah], si
jz      short loc_1001061f
mov     eax, [eax+24h]
test    eax, eax
jnz     short loc_10010610
jmp     short loc_10010639
mov     ecx, [edi+20h]
push    eax
mov     eax, [edi+24h]
push    eax
call    ecx
add     esp, 8
test    eax, eax
jz      short loc_10010639
cmp     eax, 5
jnz     loc_100106c1
mov     edx, [edi+28h]
push    2
push    ebx
push    edx
call    dword_100802ac
add     esp, 0ch
test    eax, eax
jz      short loc_100106ab
mov     esi, [eax+4]
cmp     dword ptr [esi], 0
jnz     short loc_10010694
xor     ecx, ecx
mov     [esi+4], ecx
mov     [esi+8], ecx
mov     [esi+0ch], ecx
mov     [esi+10h], ecx
mov     [esi+14h], ecx
mov     [esi+18h], ecx
mov     [esi+1ch], ecx
mov     [esi+20h], ecx
mov     [esi+24h], ecx
mov     [esi], eax
mov     eax, [eax]
mov     [esi+4], eax
lea     eax, [esi+28h]
mov     [esi+8], eax
mov     ecx, [edi+18h]
push    ecx
push    0
push    eax
call    memset
add     esp, 0ch
mov     [esi+1ch], edi
mov     [esi+14h], ebx
xor     edx, edx
cmp     dx, [esi+1ah]
jnz     short loc_1001069f
inc     dword ptr [edi+0ch]
inc     word ptr [esi+1ah]
cmp     ebx, 1
jnz     short loc_100106ab
mov     [edi+2ch], esi
mov     ecx, [ebp+var_4]
mov     eax, [ebp+arg_8]
mov     [eax], esi
test    esi, esi
jnz     short loc_100106bf
test    ecx, ecx
jnz     loc_10010580
xor     eax, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
or      edx, 0ffffffffh
add     [eax+1ah], dx
jnz     short locret_1001073c
mov     ecx, [eax+1ch]
add     [ecx+0ch], edx
test    byte ptr [eax+18h], 2
jnz     short loc_1001070e
mov     ecx, [eax+1ch]
cmp     dword ptr [ecx+1ch], 0
jz      short locret_1001073c
cmp     dword ptr [eax+14h], 1
jnz     short loc_100106fb
mov     dword ptr [ecx+2ch], 0
mov     eax, [eax]
mov     ecx, [ecx+28h]
push    0
push    eax
push    ecx
call    dword_100802b0
add     esp, 0ch
retn
call    sub_100104b0
mov     ecx, [eax+1ch]
mov     edx, [ecx]
mov     [eax+20h], edx
test    edx, edx
jz      short loc_10010722
mov     [edx+24h], eax
cmp     dword ptr [ecx+4], 0
mov     [ecx], eax
jnz     short loc_1001072d
mov     [ecx+4], eax
cmp     dword ptr [ecx+8], 0
jnz     short locret_1001073c
test    byte ptr [eax+18h], 4
jnz     short locret_1001073c
mov     [ecx+8], eax
retn
mov     ecx, 0ffdfh
and     [eax+18h], cx
movzx   ecx, word ptr [eax+18h]
test    cl, 2
jnz     short locret_10010782
or      ecx, 2
mov     [eax+18h], cx
mov     ecx, [eax+1ch]
mov     edx, [ecx]
mov     [eax+20h], edx
test    edx, edx
jz      short loc_10010768
mov     [edx+24h], eax
cmp     dword ptr [ecx+4], 0
mov     [ecx], eax
jnz     short loc_10010773
mov     [ecx+4], eax
cmp     dword ptr [ecx+8], 0
jnz     short locret_10010782
test    byte ptr [eax+18h], 4
jnz     short locret_10010782
mov     [ecx+8], eax
retn
test    byte ptr [eax+18h], 2
jz      short locret_100107d3
call    sub_100104b0
mov     ecx, 0fff9h
and     [eax+18h], cx
cmp     word ptr [eax+1ah], 0
jnz     short locret_100107d3
mov     ecx, [eax+1ch]
cmp     dword ptr [ecx+1ch], 0
jz      short locret_100107d3
cmp     dword ptr [eax+14h], 1
jnz     short loc_100107c1
mov     dword ptr [ecx+2ch], 0
mov     edx, [eax]
mov     eax, [ecx+28h]
push    0
push    edx
push    eax
call    dword_100802b0
add     esp, 0ch
retn
mov     eax, [edi]
push    esi
xor     esi, esi
cmp     eax, esi
jz      loc_1001088c
push    ebx
mov     bl, 4
test    byte ptr [eax+18h], 2
jz      loc_10010881
mov     edx, [eax+1ch]
cmp     [edx+8], eax
jnz     short loc_1001081f
mov     ecx, [eax+24h]
cmp     ecx, esi
jz      short loc_1001081c
lea     esp, [esp+0]
test    [ecx+18h], bl
jz      short loc_1001081c
mov     ecx, [ecx+24h]
cmp     ecx, esi
jnz     short loc_10010810
mov     [edx+8], ecx
mov     ecx, [eax+20h]
cmp     ecx, esi
jz      short loc_10010830
mov     ebx, [eax+24h]
mov     [ecx+24h], ebx
mov     bl, 4
jmp     short loc_10010836
mov     ecx, [eax+24h]
mov     [edx+4], ecx
mov     ecx, [eax+24h]
cmp     ecx, esi
jz      short loc_10010845
mov     edx, [eax+20h]
mov     [ecx+20h], edx
jmp     short loc_1001084a
mov     ecx, [eax+20h]
mov     [edx], ecx
mov     edx, 0fff9h
and     [eax+18h], dx
mov     [eax+20h], esi
mov     [eax+24h], esi
cmp     [eax+1ah], si
jnz     short loc_10010881
mov     ecx, [eax+1ch]
cmp     [ecx+1ch], esi
jz      short loc_10010881
cmp     dword ptr [eax+14h], 1
jnz     short loc_10010870
mov     [ecx+2ch], esi
mov     eax, [eax]
mov     ecx, [ecx+28h]
push    esi
push    eax
push    ecx
call    dword_100802b0
add     esp, 0ch
mov     eax, [edi]
cmp     eax, esi
jnz     loc_100107f0
pop     ebx
pop     esi
retn
mov     eax, [esi+14h]
mov     ecx, [esi]
mov     edx, [esi+1ch]
push    edi
push    eax
mov     eax, [edx+28h]
push    ecx
push    eax
call    dword_100802b4
movzx   eax, word ptr [esi+18h]
add     esp, 10h
mov     [esi+14h], edi
test    al, 2
jz      short locret_100108e7
test    al, 4
jz      short locret_100108e7
mov     eax, esi
call    sub_100104b0
mov     eax, [esi+1ch]
mov     ecx, [eax]
mov     [esi+20h], ecx
test    ecx, ecx
jz      short loc_100108cd
mov     [ecx+24h], esi
cmp     dword ptr [eax+4], 0
mov     [eax], esi
jnz     short loc_100108d8
mov     [eax+4], esi
cmp     dword ptr [eax+8], 0
jnz     short locret_100108e7
test    byte ptr [esi+18h], 4
jnz     short locret_100108e7
mov     [eax+8], esi
retn
push    ebp
mov     ebp, esp
cmp     dword ptr [edi+28h], 0
jz      loc_10010991
mov     eax, [edi]
test    eax, eax
jz      short loc_10010959
push    esi
mov     ecx, [eax+14h]
mov     esi, [eax+20h]
cmp     ecx, [ebp+arg_0]
jbe     short loc_10010952
test    byte ptr [eax+18h], 2
jz      short loc_10010952
call    sub_100104b0
mov     edx, 0fff9h
and     [eax+18h], dx
cmp     word ptr [eax+1ah], 0
jnz     short loc_10010952
mov     ecx, [eax+1ch]
cmp     dword ptr [ecx+1ch], 0
jz      short loc_10010952
cmp     dword ptr [eax+14h], 1
jnz     short loc_10010940
mov     dword ptr [ecx+2ch], 0
mov     eax, [eax]
mov     ecx, [ecx+28h]
push    0
push    eax
push    ecx
call    dword_100802b0
add     esp, 0ch
mov     eax, esi
test    esi, esi
jnz     short loc_10010904
pop     esi
cmp     [ebp+arg_0], 0
jnz     short loc_1001097f
mov     eax, [edi+2ch]
test    eax, eax
jz      short loc_1001097f
mov     edx, [edi+14h]
mov     eax, [eax+4]
push    edx
push    0
push    eax
call    memset
add     esp, 0ch
mov     [ebp+arg_0], 1
mov     ecx, [ebp+arg_0]
mov     edx, [edi+28h]
inc     ecx
push    ecx
push    edx
call    dword_100802b8
add     esp, 8
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [edx]
sub     esp, 0b4h
push    ebx
push    esi
push    edi
xor     edi, edi
cmp     eax, edi
jz      short loc_100109c0
mov     ecx, [eax+20h]
mov     [eax+0ch], ecx
mov     eax, ecx
cmp     eax, edi
jnz     short loc_100109b4
mov     ebx, [edx]
push    80h
lea     eax, [ebp+var_b0]
push    edi
push    eax
call    memset
add     esp, 0ch
cmp     ebx, edi
jz      loc_10010aa5
nop
lea     ecx, [ebx+0ch]
mov     eax, ebx
mov     ebx, [ecx]
mov     [ebp+var_4], ebx
mov     [ecx], edi
xor     esi, esi
mov     edi, edi
mov     ecx, [ebp+esi*4+var_b0]
cmp     ecx, edi
jz      short loc_10010a4a
lea     edx, [ebp+var_2c]
cmp     eax, edi
jz      short loc_10010a29
mov     ebx, [ecx+14h]
cmp     ebx, [eax+14h]
jnb     short loc_10010a14
mov     [edx+0ch], ecx
mov     edx, ecx
mov     ecx, [ecx+0ch]
jmp     short loc_10010a1c
mov     [edx+0ch], eax
mov     edx, eax
mov     eax, [eax+0ch]
cmp     ecx, edi
jnz     short loc_100109fe
cmp     eax, edi
jz      short loc_10010a32
mov     [edx+0ch], eax
jmp     short loc_10010a35
cmp     ecx, edi
jz      short loc_10010a32
mov     [edx+0ch], ecx
jmp     short loc_10010a35
mov     [edx+0ch], edi
mov     eax, [ebp+var_20]
mov     ebx, [ebp+var_4]
mov     [ebp+esi*4+var_b0], edi
inc     esi
cmp     esi, 1fh
jl      short loc_100109f0
jmp     short loc_10010a51
mov     [ebp+esi*4+var_b0], eax
cmp     esi, 1fh
jnz     short loc_10010a9d
mov     ecx, [ebp+var_34]
lea     edx, [ebp+var_2c]
cmp     ecx, edi
jz      short loc_10010a82
cmp     eax, edi
jz      short loc_10010a8b
mov     esi, [ecx+14h]
cmp     esi, [eax+14h]
jnb     short loc_10010a76
mov     [edx+0ch], ecx
mov     edx, ecx
mov     ecx, [ecx+0ch]
jmp     short loc_10010a7e
mov     [edx+0ch], eax
mov     edx, eax
mov     eax, [eax+0ch]
cmp     ecx, edi
jnz     short loc_10010a60
cmp     eax, edi
jz      short loc_10010a94
mov     [edx+0ch], eax
jmp     short loc_10010a97
cmp     ecx, edi
jz      short loc_10010a94
mov     [edx+0ch], ecx
jmp     short loc_10010a97
mov     [edx+0ch], edi
mov     ecx, [ebp+var_20]
mov     [ebp+var_34], ecx
cmp     ebx, edi
jnz     loc_100109e0
mov     ecx, [ebp+var_b0]
mov     esi, 1
mov     eax, [ebp+esi*4+var_b0]
lea     edx, [ebp+var_2c]
cmp     ecx, edi
jz      short loc_10010ae0
cmp     eax, edi
jz      short loc_10010ae9
mov     ebx, [ecx+14h]
cmp     ebx, [eax+14h]
jnb     short loc_10010ad4
mov     [edx+0ch], ecx
mov     edx, ecx
mov     ecx, [ecx+0ch]
jmp     short loc_10010adc
mov     [edx+0ch], eax
mov     edx, eax
mov     eax, [eax+0ch]
cmp     ecx, edi
jnz     short loc_10010abe
cmp     eax, edi
jz      short loc_10010af2
mov     [edx+0ch], eax
jmp     short loc_10010af5
cmp     ecx, edi
jz      short loc_10010af2
mov     [edx+0ch], ecx
jmp     short loc_10010af5
mov     [edx+0ch], edi
mov     eax, [ebp+var_20]
inc     esi
mov     ecx, eax
cmp     esi, 20h
jl      short loc_10010ab0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword_10081534, 0
push    esi
push    edi
mov     esi, eax
mov     edi, edx
jz      short loc_10010b88
and     edi, 0fffffff8h
mov     dword_10081538, edi
mov     dword_10081554, esi
mov     dword_1008153c, esi
cmp     esi, 5ah
jle     short loc_10010b45
mov     dword_10081540, 0ah
jmp     short loc_10010b5e
mov     eax, 66666667h
imul    esi
sar     edx, 2
mov     eax, edx
shr     eax, 1fh
lea     edx, [edx+eax+1]
mov     dword_10081540, edx
xor     eax, eax
mov     dword_10081544, ecx
mov     dword_10081550, eax
mov     dword_10081558, eax
test    esi, esi
jz      short loc_10010b82
mov     [ecx], eax
mov     eax, ecx
add     ecx, edi
dec     esi
jnz     short loc_10010b74
mov     dword_10081550, eax
mov     dword_10081548, ecx
pop     edi
pop     esi
retn
push    ecx
push    esi
push    edi
mov     edi, eax
mov     dword_10081684, edi
cmp     edi, dword_100816ac
jle     short loc_10010ba9
mov     dword_100816ac, edi
cmp     edi, dword_10081538
jg      short loc_10010c23
mov     ecx, dword_1008154c
test    ecx, ecx
jz      short loc_10010bcb
push    ecx
call    dword_1008027c
mov     ecx, dword_1008154c
add     esp, 4
mov     eax, dword_10081550
mov     esi, eax
test    eax, eax
jz      short loc_10010c11
mov     eax, [eax]
mov     dword_10081550, eax
mov     eax, dword_10081554
dec     eax
xor     edx, edx
cmp     eax, dword_10081540
mov     dword_10081554, eax
mov     eax, dword_1008166c
setl    dl
inc     eax
mov     dword_1008166c, eax
mov     dword_10081558, edx
cmp     eax, dword_10081694
jle     short loc_10010c11
mov     dword_10081694, eax
test    ecx, ecx
jz      short loc_10010c1f
push    ecx
call    dword_10080284
add     esp, 4
test    esi, esi
jnz     short loc_10010c80
push    edi
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10010c80
push    esi
call    dword_10080258
mov     edi, eax
mov     eax, dword_1008154c
add     esp, 4
test    eax, eax
jz      short loc_10010c56
push    eax
call    dword_1008027c
mov     eax, dword_1008154c
add     esp, 4
mov     ecx, dword_10081670
add     ecx, edi
mov     dword_10081670, ecx
cmp     ecx, dword_10081698
jle     short loc_10010c72
mov     dword_10081698, ecx
test    eax, eax
jz      short loc_10010c80
push    eax
call    dword_10080284
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ecx
retn
push    edi
xor     edi, edi
test    esi, esi
jnz     short loc_10010c9b
xor     eax, eax
pop     edi
retn
cmp     esi, dword_10081544
jb      short loc_10010d16
cmp     esi, dword_10081548
jnb     short loc_10010d16
mov     eax, dword_1008154c
test    eax, eax
jz      short loc_10010cbe
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, dword_1008166c
dec     eax
mov     dword_1008166c, eax
cmp     eax, dword_10081694
jle     short loc_10010cd6
mov     dword_10081694, eax
mov     eax, dword_10081550
mov     [esi], eax
mov     eax, dword_10081554
inc     eax
xor     ecx, ecx
cmp     eax, dword_10081540
mov     dword_10081554, eax
mov     eax, dword_1008154c
setl    cl
mov     dword_10081550, esi
mov     dword_10081558, ecx
test    eax, eax
jz      short loc_10010d6d
push    eax
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
retn
push    esi
call    dword_10080258
mov     edi, eax
mov     eax, dword_1008154c
add     esp, 4
test    eax, eax
jz      short loc_10010d3a
push    eax
call    dword_1008027c
mov     eax, dword_1008154c
add     esp, 4
mov     ecx, dword_10081670
sub     ecx, edi
mov     dword_10081670, ecx
cmp     ecx, dword_10081698
jle     short loc_10010d56
mov     dword_10081698, ecx
test    eax, eax
jz      short loc_10010d64
push    eax
call    dword_10080284
add     esp, 4
push    esi
call    sub_10009770
add     esp, 4
mov     eax, edi
pop     edi
retn
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi]
mov     eax, [eax]
push    edi
test    eax, eax
jz      short loc_10010d97
push    eax
call    dword_10080284
add     esp, 4
mov     ecx, [esi+8]
mov     edx, [esi+4]
lea     eax, [ecx+edx+1ch]
call    sub_10010b90
mov     edi, [esi+4]
mov     ebx, eax
mov     eax, [esi]
mov     eax, [eax]
add     edi, ebx
test    eax, eax
jz      short loc_10010dbf
push    eax
call    dword_1008027c
add     esp, 4
test    ebx, ebx
jz      short loc_10010ddc
lea     ecx, [edi+1ch]
mov     [edi], ebx
mov     [edi+4], ecx
cmp     dword ptr [esi+0ch], 0
jz      short loc_10010dd6
mov     esi, [esi]
inc     dword ptr [esi+10h]
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
retn
test    eax, eax
jz      short locret_10010e0d
push    esi
mov     esi, [eax]
push    edi
mov     edi, [eax+10h]
call    sub_10010c90
cmp     dword ptr [edi+0ch], 0
jz      short loc_10010e0b
mov     edi, [edi]
dec     dword ptr [edi+10h]
pop     edi
pop     esi
retn
cmp     dword_1008153c, 0
jz      short loc_10010e2c
mov     ecx, [eax+8]
add     ecx, [eax+4]
mov     eax, dword_10081558
cmp     ecx, dword_10081538
jle     short locret_10010e31
mov     eax, dword_10081794
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, [ebx+28h]
add     edi, edi
cmp     edi, 100h
jnb     short loc_10010e5e
mov     edi, 100h
mov     eax, [ebx]
mov     eax, [eax]
test    eax, eax
jz      short loc_10010e70
push    eax
call    dword_10080284
add     esp, 4
cmp     dword ptr [ebx+28h], 0
jz      short loc_10010e81
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_10010e81
call    eax
lea     eax, ds:0[edi*4]
push    eax
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10010eaa
lea     eax, ds:0[edi*4]
push    eax
push    0
push    esi
call    memset
add     esp, 0ch
cmp     dword ptr [ebx+28h], 0
jz      short loc_10010ebb
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_10010ebb
call    eax
mov     ecx, [ebx]
mov     eax, [ecx]
test    eax, eax
jz      short loc_10010ecd
push    eax
call    dword_1008027c
add     esp, 4
test    esi, esi
jz      short loc_10010f1f
xor     eax, eax
mov     [ebp+var_4], eax
cmp     [ebx+28h], eax
jbe     short loc_10010f0d
mov     edx, [ebx+2ch]
mov     ecx, [edx+eax*4]
test    ecx, ecx
jz      short loc_10010f04
mov     eax, [ecx+8]
xor     edx, edx
div     edi
mov     eax, [ecx+0ch]
mov     ebx, [esi+edx*4]
mov     [ecx+0ch], ebx
mov     [esi+edx*4], ecx
mov     ecx, eax
test    eax, eax
jnz     short loc_10010ee5
mov     eax, [ebp+var_4]
mov     ebx, [ebp+arg_0]
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [ebx+28h]
jb      short loc_10010edb
mov     eax, [ebx+2ch]
push    eax
call    sub_10009770
add     esp, 4
mov     [ebx+2ch], esi
mov     [ebx+28h], edi
mov     eax, [ebx+2ch]
neg     eax
sbb     eax, eax
pop     edi
and     eax, 0fffffff9h
pop     esi
add     eax, 7
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jz      short locret_10010f98
mov     ecx, [eax+10h]
mov     ecx, [ecx]
push    esi
mov     esi, [eax+14h]
test    esi, esi
jnz     short loc_10010f56
cmp     eax, [ecx+18h]
jnz     short loc_10010f97
mov     edx, [eax+18h]
test    edx, edx
jz      short loc_10010f60
mov     [edx+14h], esi
mov     edx, [eax+14h]
test    edx, edx
jz      short loc_10010f6d
mov     esi, [eax+18h]
mov     [edx+18h], esi
cmp     [ecx+14h], eax
jnz     short loc_10010f78
mov     edx, [eax+14h]
mov     [ecx+14h], edx
cmp     [ecx+18h], eax
jnz     short loc_10010f83
mov     edx, [eax+18h]
mov     [ecx+18h], edx
mov     dword ptr [eax+14h], 0
mov     dword ptr [eax+18h], 0
mov     eax, [eax+10h]
dec     dword ptr [eax+20h]
pop     esi
retn
mov     eax, [esi+8]
push    edi
mov     edi, [esi+10h]
xor     edx, edx
div     dword ptr [edi+28h]
mov     eax, [edi+2ch]
lea     ecx, [eax+edx*4]
mov     eax, [ecx]
cmp     eax, esi
jz      short loc_10010fc1
lea     ecx, [eax+0ch]
mov     eax, [ecx]
cmp     eax, esi
jnz     short loc_10010fb8
mov     edx, [ecx]
mov     eax, [edx+0ch]
mov     [ecx], eax
dec     dword ptr [edi+24h]
pop     edi
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+10h]
cmp     ecx, [eax+4]
jbe     loc_10011099
push    ebx
push    esi
push    edi
xor     ebx, ebx
jmp     short loc_10010ff0
mov     ecx, [eax+18h]
cmp     ecx, ebx
jz      loc_10011096
mov     esi, [ecx+14h]
mov     edx, [ecx+10h]
mov     eax, [edx]
cmp     esi, ebx
jnz     short loc_1001100c
cmp     ecx, [eax+18h]
jnz     short loc_10011045
mov     edx, [ecx+18h]
cmp     edx, ebx
jz      short loc_10011016
mov     [edx+14h], esi
mov     edx, [ecx+14h]
cmp     edx, ebx
jz      short loc_10011023
mov     esi, [ecx+18h]
mov     [edx+18h], esi
cmp     [eax+14h], ecx
jnz     short loc_1001102e
mov     edx, [ecx+14h]
mov     [eax+14h], edx
cmp     [eax+18h], ecx
jnz     short loc_10011039
mov     edx, [ecx+18h]
mov     [eax+18h], edx
mov     eax, [ecx+10h]
mov     [ecx+14h], ebx
mov     [ecx+18h], ebx
dec     dword ptr [eax+20h]
mov     esi, [ecx+10h]
mov     eax, [ecx+8]
xor     edx, edx
div     dword ptr [esi+28h]
mov     eax, [esi+2ch]
lea     eax, [eax+edx*4]
mov     edx, [eax]
cmp     edx, ecx
jz      short loc_10011069
lea     esp, [esp+0]
lea     eax, [edx+0ch]
mov     edx, [eax]
cmp     edx, ecx
jnz     short loc_10011060
mov     edx, [eax]
mov     edx, [edx+0ch]
mov     [eax], edx
dec     dword ptr [esi+24h]
mov     esi, [ecx]
mov     edi, [ecx+10h]
call    sub_10010c90
cmp     [edi+0ch], ebx
jz      short loc_10011087
mov     edi, [edi]
dec     dword ptr [edi+10h]
mov     eax, [ebp+arg_0]
mov     ecx, [eax+10h]
cmp     ecx, [eax+4]
ja      loc_10010ff0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
xor     edx, edx
mov     [ebp+var_4], edx
cmp     [ecx+28h], edx
jbe     loc_10011161
push    ebx
push    esi
push    edi
mov     eax, [ecx+2ch]
lea     ebx, [eax+edx*4]
mov     eax, [ebx]
test    eax, eax
jz      loc_10011151
mov     edx, [ebp+arg_4]
cmp     [eax+8], edx
jb      short loc_10011141
or      edi, 0ffffffffh
add     [ecx+24h], edi
mov     ecx, [eax+0ch]
mov     [ebx], ecx
mov     ecx, [eax+14h]
mov     edx, [eax+10h]
mov     edx, [edx]
test    ecx, ecx
jnz     short loc_100110ec
cmp     eax, [edx+18h]
jnz     short loc_10011127
mov     esi, [eax+18h]
test    esi, esi
jz      short loc_100110f6
mov     [esi+14h], ecx
mov     ecx, [eax+14h]
test    ecx, ecx
jz      short loc_10011103
mov     esi, [eax+18h]
mov     [ecx+18h], esi
cmp     [edx+14h], eax
jnz     short loc_1001110e
mov     ecx, [eax+14h]
mov     [edx+14h], ecx
cmp     [edx+18h], eax
jnz     short loc_10011119
mov     ecx, [eax+18h]
mov     [edx+18h], ecx
xor     ecx, ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     ecx, [eax+10h]
add     [ecx+20h], edi
mov     esi, [eax]
mov     edi, [eax+10h]
call    sub_10010c90
cmp     dword ptr [edi+0ch], 0
mov     ecx, [ebp+arg_0]
jz      short loc_10011144
mov     eax, [edi]
dec     dword ptr [eax+10h]
jmp     short loc_10011144
lea     ebx, [eax+0ch]
mov     eax, [ebx]
test    eax, eax
jnz     loc_100110c8
mov     edx, [ebp+var_4]
inc     edx
mov     [ebp+var_4], edx
cmp     edx, [ecx+28h]
jb      loc_100110b8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    44h
push    0
push    offset dword_10081518
call    memset
add     esp, 0ch
cmp     dword_10080234, 0
jz      short loc_100111c4
call    sub_1006edd0
test    eax, eax
jz      short loc_10011197
xor     eax, eax
jmp     short loc_100111a2
push    6
call    dword_10080274
add     esp, 4
mov     dword_10081518, eax
call    sub_1006edd0
test    eax, eax
jz      short loc_100111b4
xor     eax, eax
jmp     short loc_100111bf
push    7
call    dword_10080274
add     esp, 4
mov     dword_1008154c, eax
mov     dword_10081524, 0ah
mov     dword_10081534, 1
xor     eax, eax
retn
push    44h
push    0
push    offset dword_10081518
call    memset
add     esp, 0ch
retn
push    ebp
mov     ebp, esp
xor     eax, eax
cmp     dword_10080234, eax
push    ebx
setnle  al
push    esi
push    edi
mov     esi, eax
lea     ebx, ds:0[esi*8]
sub     ebx, esi
lea     ebx, ds:30h[ebx*4]
push    ebx
call    sub_100094a0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_100112a9
push    ebx
push    0
push    edi
call    memset
add     esp, 0ch
mov     ebx, 0ah
test    esi, esi
jz      short loc_1001124f
lea     esi, [edi+30h]
mov     [esi+0ch], ebx
jmp     short loc_10011254
mov     esi, offset dword_10081518
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_4]
mov     [edi+4], ecx
xor     ecx, ecx
test    eax, eax
setnz   cl
mov     [edi], esi
mov     [edi+8], edx
mov     [edi+0ch], ecx
test    eax, eax
jz      short loc_100112a7
mov     [edi+10h], ebx
mov     eax, [esi]
test    eax, eax
jz      short loc_10011286
push    eax
call    dword_1008027c
add     esp, 4
mov     edx, [edi+10h]
add     [esi+8], edx
mov     ecx, [esi+4]
sub     ecx, [esi+8]
add     ecx, ebx
mov     [esi+0ch], ecx
mov     esi, [esi]
test    esi, esi
jz      short loc_100112a7
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_0]
cmp     dword ptr [edi+0ch], 0
jz      short loc_10011314
push    esi
mov     esi, [edi]
mov     eax, [esi]
test    eax, eax
jz      short loc_100112d0
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebp+arg_4]
mov     eax, ecx
sub     eax, [edi+14h]
push    esi
add     [esi+4], eax
mov     eax, [esi+4]
sub     eax, [esi+8]
add     eax, 0ah
mov     [esi+0ch], eax
mov     [edi+14h], ecx
lea     ecx, [ecx+ecx*8]
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 3
mov     [edi+18h], edx
call    sub_10010fd0
mov     esi, [esi]
add     esp, 4
test    esi, esi
jz      short loc_10011313
push    esi
call    dword_10080284
add     esp, 4
pop     esi
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     dword ptr [eax+0ch], 0
jz      short loc_10011368
push    esi
mov     esi, [eax]
mov     eax, [esi]
test    eax, eax
jz      short loc_1001133f
push    eax
call    dword_1008027c
add     esp, 4
push    edi
mov     edi, [esi+4]
push    esi
mov     dword ptr [esi+4], 0
call    sub_10010fd0
mov     [esi+4], edi
mov     esi, [esi]
add     esp, 4
pop     edi
test    esi, esi
jz      short loc_10011367
push    esi
call    dword_10080284
add     esp, 4
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi]
mov     eax, [eax]
push    edi
test    eax, eax
jz      short loc_1001138a
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [esi]
mov     eax, [ecx]
mov     edi, [esi+24h]
test    eax, eax
jz      short loc_1001139f
push    eax
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [edi]
mov     [ebp+arg_0], eax
mov     eax, [eax]
xor     esi, esi
test    eax, eax
jz      short loc_100113d0
push    eax
call    dword_1008027c
add     esp, 4
mov     ebx, [edi+28h]
test    ebx, ebx
jz      short loc_10011400
mov     ecx, [ebp+arg_4]
xor     edx, edx
mov     eax, ecx
div     ebx
mov     eax, [edi+2ch]
mov     esi, [eax+edx*4]
test    esi, esi
jz      short loc_10011400
lea     ebx, [ebx+0]
cmp     [esi+8], ecx
jz      loc_10011545
mov     esi, [esi+0ch]
test    esi, esi
jnz     short loc_100113f0
mov     edx, [ebp+arg_8]
test    edx, edx
jz      loc_10011541
mov     ecx, [edi+24h]
mov     eax, ecx
sub     eax, [edi+20h]
cmp     edx, 1
jnz     short loc_10011456
mov     edx, [ebp+arg_0]
cmp     eax, [edx+0ch]
jnb     loc_10011591
cmp     eax, [edi+18h]
jnb     loc_10011591
cmp     dword_1008153c, 0
jz      short loc_10011449
mov     eax, [edi+8]
add     eax, [edi+4]
cmp     eax, dword_10081538
mov     eax, dword_10081558
jle     short loc_1001144e
mov     eax, dword_10081794
test    eax, eax
jnz     loc_10011591
cmp     ecx, ebx
jb      short loc_1001146b
push    edi
call    sub_10010e40
add     esp, 4
test    eax, eax
jnz     loc_10011591
cmp     dword ptr [edi+0ch], 0
jz      short loc_100114cf
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+18h]
test    edx, edx
jz      short loc_100114cf
mov     eax, [edi+24h]
inc     eax
cmp     eax, [edi+14h]
jnb     short loc_10011499
mov     ebx, ecx
mov     ecx, [ebx+10h]
cmp     ecx, [ebx+4]
jnb     short loc_1001149c
mov     eax, edi
call    sub_10010e10
test    eax, eax
jz      short loc_100114cf
mov     ebx, [ebp+arg_0]
mov     esi, edx
call    sub_10010fa0
mov     eax, esi
call    sub_10010f40
mov     eax, [esi+10h]
mov     edx, [eax+8]
mov     ecx, [edi+8]
add     edx, [eax+4]
add     ecx, [edi+4]
cmp     edx, ecx
jz      short loc_100114c6
mov     eax, esi
call    sub_10010df0
jmp     short loc_100114d3
mov     edx, [edi+0ch]
sub     edx, [eax+0ch]
add     [ebx+10h], edx
test    esi, esi
jnz     short loc_1001150b
mov     ebx, 1
cmp     [ebp+arg_8], ebx
jnz     short loc_100114e8
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_100114e8
call    eax
mov     eax, edi
call    sub_10010d80
mov     esi, eax
cmp     [ebp+arg_8], ebx
jnz     short loc_10011501
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_10011501
call    eax
test    esi, esi
jz      loc_100115a0
jmp     short loc_10011510
mov     ebx, 1
mov     ecx, [ebp+arg_4]
mov     eax, ecx
xor     edx, edx
div     dword ptr [edi+28h]
add     [edi+24h], ebx
mov     [esi+8], ecx
mov     eax, [edi+2ch]
mov     ecx, [eax+edx*4]
mov     [esi+0ch], ecx
mov     ecx, [esi+4]
xor     eax, eax
mov     [esi+10h], edi
mov     [esi+18h], eax
mov     [esi+14h], eax
mov     [ecx], eax
mov     eax, [edi+2ch]
mov     [eax+edx*4], esi
jmp     short loc_10011591
test    esi, esi
jz      short loc_100115a0
mov     edx, [esi+14h]
mov     ecx, [esi+10h]
mov     eax, [ecx]
test    edx, edx
jnz     short loc_10011556
cmp     esi, [eax+18h]
jnz     short loc_10011591
mov     ecx, [esi+18h]
xor     ebx, ebx
cmp     ecx, ebx
jz      short loc_10011562
mov     [ecx+14h], edx
mov     ecx, [esi+14h]
cmp     ecx, ebx
jz      short loc_1001156f
mov     edx, [esi+18h]
mov     [ecx+18h], edx
cmp     [eax+14h], esi
jnz     short loc_1001157a
mov     ecx, [esi+14h]
mov     [eax+14h], ecx
cmp     [eax+18h], esi
jnz     short loc_10011585
mov     edx, [esi+18h]
mov     [eax+18h], edx
mov     eax, [esi+10h]
mov     [esi+14h], ebx
mov     [esi+18h], ebx
dec     dword ptr [eax+20h]
test    esi, esi
jz      short loc_100115a0
mov     eax, [ebp+arg_4]
cmp     eax, [edi+1ch]
jbe     short loc_100115a0
mov     [edi+1ch], eax
mov     eax, [ebp+arg_0]
mov     eax, [eax]
test    eax, eax
jz      short loc_100115b3
push    eax
call    dword_10080284
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi]
mov     eax, [esi]
test    eax, eax
jz      short loc_100115da
push    eax
call    dword_1008027c
add     esp, 4
cmp     [ebp+arg_8], 0
jnz     short loc_1001160e
mov     eax, [esi+10h]
cmp     eax, [esi+4]
ja      short loc_1001160e
mov     ecx, [esi+14h]
mov     eax, [ebp+arg_4]
test    ecx, ecx
jz      short loc_10011603
mov     [ecx+18h], eax
mov     ecx, [esi+14h]
mov     [eax+14h], ecx
mov     [esi+14h], eax
inc     dword ptr [edi+20h]
jmp     short loc_10011653
mov     [esi+18h], eax
mov     [esi+14h], eax
inc     dword ptr [edi+20h]
jmp     short loc_10011653
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+10h]
mov     eax, [ecx+8]
xor     edx, edx
div     dword ptr [esi+28h]
mov     eax, [esi+2ch]
lea     eax, [eax+edx*4]
mov     edx, [eax]
cmp     edx, ecx
jz      short loc_10011631
lea     eax, [edx+0ch]
mov     edx, [eax]
cmp     edx, ecx
jnz     short loc_10011628
mov     edx, [eax]
mov     edx, [edx+0ch]
mov     [eax], edx
dec     dword ptr [esi+24h]
mov     esi, [ecx]
mov     edi, [ecx+10h]
call    sub_10010c90
cmp     dword ptr [edi+0ch], 0
jz      short loc_10011650
mov     edi, [edi]
dec     dword ptr [edi+10h]
mov     edi, [ebp+arg_0]
mov     eax, [edi]
mov     eax, [eax]
pop     edi
pop     esi
test    eax, eax
jz      short loc_10011667
push    eax
call    dword_10080284
add     esp, 4
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi]
mov     eax, [eax]
push    edi
test    eax, eax
jz      short loc_1001168a
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_8]
xor     edx, edx
div     dword ptr [esi+28h]
mov     ecx, [esi+2ch]
lea     eax, [ecx+edx*4]
mov     ecx, [ebp+arg_4]
cmp     [eax], ecx
jz      short loc_100116a9
nop
mov     eax, [eax]
add     eax, 0ch
cmp     [eax], ecx
jnz     short loc_100116a0
mov     edx, [ecx+0ch]
mov     edi, [ebp+arg_c]
mov     [eax], edx
xor     edx, edx
mov     eax, edi
div     dword ptr [esi+28h]
mov     [ecx+8], edi
mov     eax, [esi+2ch]
mov     eax, [eax+edx*4]
mov     [ecx+0ch], eax
mov     eax, [esi+2ch]
mov     [eax+edx*4], ecx
cmp     edi, [esi+1ch]
jbe     short loc_100116d2
mov     [esi+1ch], edi
mov     ecx, [esi]
mov     eax, [ecx]
pop     edi
pop     esi
test    eax, eax
jz      short loc_100116e6
push    eax
call    dword_10080284
add     esp, 4
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi]
mov     eax, [eax]
push    edi
test    eax, eax
jz      short loc_1001170a
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [ebp+arg_4]
cmp     edi, [esi+1ch]
ja      short loc_10011720
push    edi
push    esi
call    sub_100110a0
add     esp, 8
dec     edi
mov     [esi+1ch], edi
mov     ecx, [esi]
mov     eax, [ecx]
pop     edi
pop     esi
test    eax, eax
jz      short loc_10011734
push    eax
call    dword_10080284
add     esp, 4
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi]
mov     eax, [esi]
test    eax, eax
jz      short loc_1001175a
push    eax
call    dword_1008027c
add     esp, 4
push    0
push    edi
call    sub_100110a0
mov     eax, [edi+14h]
sub     [esi+4], eax
mov     ecx, [edi+10h]
mov     edx, [esi+4]
sub     [esi+8], ecx
sub     edx, [esi+8]
push    esi
add     edx, 0ah
mov     [esi+0ch], edx
call    sub_10010fd0
mov     esi, [esi]
add     esp, 0ch
test    esi, esi
jz      short loc_10011793
push    esi
call    dword_10080284
add     esp, 4
mov     eax, [edi+2ch]
push    eax
call    sub_10009770
push    edi
call    sub_10009770
add     esp, 8
pop     edi
pop     esi
pop     ebp
retn
mov     eax, [ebx]
test    eax, eax
jz      loc_1001183e
push    esi
push    edi
lea     esp, [esp+0]
mov     esi, [ebx+4]
mov     edi, [eax]
test    esi, esi
jz      short loc_1001182d
cmp     dword ptr [esi+1e8h], 0
jz      short loc_10011807
cmp     eax, [esi+0fch]
jb      short loc_100117f3
cmp     eax, [esi+100h]
jnb     short loc_100117f3
movzx   eax, word ptr [esi+0e0h]
mov     esi, [esi+1e8h]
add     [esi], eax
jmp     short loc_10011836
push    eax
call    dword_10080258
mov     esi, [esi+1e8h]
add     esp, 4
add     [esi], eax
jmp     short loc_10011836
cmp     eax, [esi+0fch]
jb      short loc_1001182d
cmp     eax, [esi+100h]
jnb     short loc_1001182d
mov     ecx, [esi+0f8h]
mov     [eax], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
jmp     short loc_10011836
push    eax
call    sub_10009770
add     esp, 4
mov     eax, edi
test    edi, edi
jnz     short loc_100117c0
pop     edi
pop     esi
xor     edx, edx
mov     dword ptr [ebx], 0
mov     [ebx+18h], dx
mov     [ebx+8], edx
mov     [ebx+0ch], edx
mov     [ebx+14h], edx
mov     byte ptr [ebx+1ah], 1
retn
push    ebp
mov     ebp, esp
cmp     word ptr [edi+18h], 0
push    ebx
push    esi
jnz     short loc_10011892
mov     esi, [edi+4]
mov     ecx, 3f4h
call    sub_10009a40
test    eax, eax
jz      short loc_100118ea
mov     ecx, [edi]
mov     [eax], ecx
mov     [edi], eax
add     eax, 4
mov     edx, 3fh
mov     [edi+10h], eax
mov     [edi+18h], dx
mov     eax, 0ffffh
add     [edi+18h], ax
mov     eax, [edi+10h]
lea     ecx, [eax+10h]
mov     [edi+10h], ecx
test    eax, eax
jz      short loc_100118ea
mov     ebx, [ebp+arg_0]
mov     esi, [ebp+arg_4]
mov     [eax], ebx
mov     [eax+4], esi
mov     dword ptr [eax+8], 0
mov     ecx, [edi+0ch]
test    ecx, ecx
jz      short loc_100118e4
mov     dl, [edi+1ah]
test    dl, 1
jz      short loc_100118da
cmp     esi, [ecx+4]
jg      short loc_100118da
jl      short loc_100118d4
cmp     ebx, [ecx]
ja      short loc_100118da
and     dl, 0feh
mov     [edi+1ah], dl
mov     [ecx+8], eax
mov     [edi+0ch], eax
pop     esi
pop     ebx
pop     ebp
retn
mov     [edi+8], eax
mov     [edi+0ch], eax
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
lea     edx, [ebp+var_14]
push    edi
mov     [ebp+var_4], edx
test    eax, eax
jz      short loc_1001192d
test    ecx, ecx
jz      short loc_10011958
mov     edx, [eax+4]
mov     esi, [ecx+4]
mov     edi, [eax]
mov     ebx, [ecx]
cmp     edx, esi
jg      short loc_1001193d
jl      short loc_1001191b
cmp     edi, ebx
jnb     short loc_1001193d
mov     edx, [ebp+var_4]
mov     [edx+8], eax
mov     edx, eax
mov     [ebp+var_4], edx
mov     eax, [eax+8]
test    eax, eax
jnz     short loc_10011903
mov     edx, [ebp+var_4]
mov     [edx+8], ecx
mov     eax, [ebp+var_c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     esi, edx
jg      short loc_10011926
jl      short loc_10011947
cmp     ebx, edi
jnb     short loc_10011926
mov     edx, [ebp+var_4]
mov     [edx+8], ecx
mov     edx, [edx+8]
mov     ecx, [ecx+8]
mov     [ebp+var_4], edx
jmp     short loc_10011929
test    eax, eax
jz      short loc_1001192d
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
mov     [ecx+8], eax
mov     eax, [ebp+var_c]
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0c4h
push    ebx
push    esi
push    edi
push    0a0h
mov     esi, eax
lea     eax, [ebp+var_c0]
push    0
push    eax
call    memset
add     esp, 0ch
test    esi, esi
jz      loc_10011a3e
lea     esp, [esp+0]
mov     eax, [esi+8]
xor     ecx, ecx
mov     [ebp+var_10], eax
mov     dword ptr [esi+8], 0
mov     [ebp+var_c], ecx
cmp     [ebp+var_c0], ecx
jz      short loc_10011a2d
lea     ecx, [ebp+var_c0]
mov     [ebp+var_8], ecx
mov     edx, [ebp+var_8]
mov     eax, [edx]
lea     edi, [ebp+var_20]
mov     ecx, esi
mov     [ebp+var_4], edi
test    eax, eax
jz      short loc_10011a00
test    ecx, ecx
jz      loc_10011a73
mov     edx, [eax+4]
mov     esi, [ecx+4]
mov     ebx, [eax]
cmp     edx, esi
jg      short loc_10011a5b
jl      short loc_100119f1
mov     edi, [ebp+var_4]
cmp     ebx, [ecx]
jnb     short loc_10011a5b
mov     [edi+8], eax
mov     edi, eax
mov     [ebp+var_4], edi
mov     eax, [eax+8]
test    eax, eax
jnz     short loc_100119d4
mov     [edi+8], ecx
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_c]
mov     esi, [ebp+var_18]
inc     ecx
mov     dword ptr [eax], 0
cmp     [ebp+ecx*4+var_c0], 0
lea     eax, [ebp+ecx*4+var_c0]
mov     [ebp+var_c], ecx
mov     [ebp+var_8], eax
jnz     short loc_100119c3
mov     eax, [ebp+var_10]
mov     [ebp+ecx*4+var_c0], esi
mov     esi, eax
test    eax, eax
jnz     loc_100119a0
xor     eax, eax
xor     esi, esi
mov     ecx, [ebp+esi*4+var_c0]
call    sub_100118f0
inc     esi
cmp     esi, 28h
jb      short loc_10011a42
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     esi, edx
jg      short loc_100119f9
jl      short loc_10011a65
cmp     [ecx], ebx
jnb     short loc_100119f9
mov     [edi+8], ecx
mov     edi, [edi+8]
mov     ecx, [ecx+8]
mov     [ebp+var_4], edi
jmp     short loc_100119fc
test    eax, eax
jz      short loc_10011a00
mov     [edi+8], eax
jmp     short loc_10011a03
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
lea     ebx, [ebx+0]
mov     ecx, [esi+0ch]
test    ecx, ecx
jz      short loc_10011aad
lea     edx, [ebp+arg_0]
push    edx
push    eax
push    ecx
call    sub_10011a80
mov     eax, [ebp+arg_0]
add     esp, 0ch
mov     [eax+8], esi
jmp     short loc_10011aaf
mov     [eax], esi
mov     ecx, [esi+8]
lea     eax, [esi+8]
test    ecx, ecx
jz      short loc_10011abd
mov     esi, ecx
jmp     short loc_10011a90
mov     ecx, [ebp+arg_8]
mov     [ecx], esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [edi]
xor     edx, edx
cmp     eax, edx
jnz     short loc_10011ae4
xor     eax, eax
pop     edi
pop     ebp
retn
mov     ecx, [ebp+arg_4]
cmp     ecx, 1
jnz     short loc_10011afa
mov     ecx, [eax+8]
mov     [edi], ecx
mov     [eax+8], edx
mov     [eax+0ch], edx
pop     edi
pop     ebp
retn
push    ebx
push    esi
lea     ebx, [ecx-1]
push    ebx
push    edi
call    sub_10011ad0
mov     esi, [edi]
add     esp, 8
test    esi, esi
jz      short loc_10011b26
mov     edx, [esi+8]
push    ebx
mov     [esi+0ch], eax
push    edi
mov     [edi], edx
call    sub_10011ad0
mov     [esi+8], eax
add     esp, 8
mov     eax, esi
pop     esi
pop     ebx
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [ebp+arg_0]
mov     ecx, [ebx+8]
mov     [ebp+arg_0], ecx
mov     dword ptr [ebx+8], 0
mov     dword ptr [ebx+0ch], 0
mov     eax, [ebp+arg_0]
push    edi
mov     edi, 1
mov     [ebp+var_4], edi
test    eax, eax
jz      loc_10011be4
push    esi
mov     edx, [eax+8]
mov     ecx, ebx
mov     ebx, eax
add     eax, 8
mov     [ebp+arg_0], edx
mov     [ebp+var_8], eax
mov     [ebx+0ch], ecx
mov     eax, [ebp+arg_0]
test    eax, eax
jnz     short loc_10011b81
xor     esi, esi
jmp     short loc_10011bd0
cmp     edi, 1
jnz     short loc_10011b9e
mov     ecx, [eax+8]
mov     esi, eax
mov     [ebp+arg_0], ecx
mov     dword ptr [eax+8], 0
mov     dword ptr [esi+0ch], 0
jmp     short loc_10011bd0
dec     edi
lea     edx, [ebp+arg_0]
push    edi
push    edx
call    sub_10011ad0
mov     esi, [ebp+arg_0]
add     esp, 8
test    esi, esi
jnz     short loc_10011bb7
mov     esi, eax
jmp     short loc_10011bd0
mov     [esi+0ch], eax
mov     eax, [esi+8]
lea     ecx, [ebp+arg_0]
push    edi
push    ecx
mov     [ebp+arg_0], eax
call    sub_10011ad0
add     esp, 8
mov     [esi+8], eax
mov     edx, [ebp+var_8]
mov     edi, [ebp+var_4]
mov     [edx], esi
mov     eax, [ebp+arg_0]
inc     edi
mov     [ebp+var_4], edi
test    eax, eax
jnz     short loc_10011b63
pop     esi
pop     edi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, eax
mov     al, [ebx+1ah]
test    al, 2
jnz     short loc_10011c0d
test    al, 1
jnz     short loc_10011c09
mov     eax, [ebx+8]
call    sub_10011970
mov     [ebx+8], eax
or      byte ptr [ebx+1ah], 2
mov     eax, [ebx+8]
test    eax, eax
jz      short loc_10011c37
mov     ecx, [eax]
mov     [esi], ecx
mov     edx, [eax+4]
mov     [esi+4], edx
mov     eax, [ebx+8]
mov     eax, [eax+8]
mov     [ebx+8], eax
test    eax, eax
jnz     short loc_10011c30
call    sub_100117b0
mov     eax, 1
pop     ebx
retn
xor     eax, eax
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     edi, eax
mov     al, [ebp+arg_0]
cmp     al, [edi+1bh]
jz      loc_10011d2c
mov     eax, [edi+8]
mov     [ebp+var_4], eax
test    eax, eax
jz      loc_10011d26
test    byte ptr [edi+1ah], 1
lea     ebx, [edi+14h]
jnz     short loc_10011c76
call    sub_10011970
mov     [ebp+var_4], eax
mov     esi, [ebx]
test    esi, esi
jz      short loc_10011cb2
mov     eax, [esi+0ch]
lea     ebx, [esi+8]
test    eax, eax
jz      short loc_10011cce
lea     ecx, [ebp+var_c]
push    ecx
lea     edx, [ebp+var_8]
push    edx
push    eax
call    sub_10011a80
mov     ecx, [ebp+var_4]
mov     eax, [ebp+var_8]
add     esp, 0ch
mov     dword ptr [esi+0ch], 0
call    sub_100118f0
mov     esi, [ebx]
mov     [ebp+var_4], eax
test    esi, esi
jnz     short loc_10011c7c
cmp     word ptr [edi+18h], 0
jnz     short loc_10011ce9
mov     esi, [edi+4]
mov     ecx, 3f4h
call    sub_10009a40
test    eax, eax
jnz     short loc_10011cd4
xor     esi, esi
jmp     short loc_10011cfb
mov     eax, [ebp+var_4]
push    eax
jmp     short loc_10011d0f
mov     ecx, [edi]
mov     [eax], ecx
mov     [edi], eax
add     eax, 4
mov     edx, 3fh
mov     [edi+10h], eax
mov     [edi+18h], dx
mov     esi, [edi+10h]
mov     eax, 0ffffh
add     [edi+18h], ax
lea     ecx, [esi+10h]
mov     [edi+10h], ecx
xor     eax, eax
mov     [ebx], esi
cmp     esi, eax
jz      short loc_10011d1a
mov     edx, [ebp+var_4]
mov     [esi], eax
mov     [esi+4], eax
mov     [esi+8], eax
push    edx
call    sub_10011b30
mov     [esi+0ch], eax
add     esp, 4
xor     eax, eax
or      byte ptr [edi+1ah], 1
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     al, [ebp+arg_0]
mov     [edi+1bh], al
mov     edi, [edi+14h]
test    edi, edi
jz      short loc_10011d73
mov     esi, [ebp+arg_8]
mov     ebx, [ebp+arg_4]
lea     esp, [esp+0]
mov     eax, [edi+0ch]
test    eax, eax
jz      short loc_10011d6c
mov     ecx, [eax+4]
mov     edx, [eax]
cmp     ecx, esi
jg      short loc_10011d65
jl      short loc_10011d56
cmp     edx, ebx
jnb     short loc_10011d5b
mov     eax, [eax+8]
jmp     short loc_10011d68
cmp     ecx, esi
jl      short loc_10011d7c
jg      short loc_10011d65
cmp     edx, ebx
jbe     short loc_10011d7c
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_10011d47
mov     edi, [edi+8]
test    edi, edi
jnz     short loc_10011d40
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     edx, [eax+14h]
mov     eax, [eax+10h]
mov     ecx, [eax+60h]
push    ebx
push    esi
push    edi
mov     [ebp+var_4], edx
mov     [ebp+var_8], 0
mov     [ebp+var_c], ecx
test    ecx, ecx
jle     loc_10011e88
mov     ebx, [eax+5ch]
add     ebx, 10h
lea     ecx, [ecx+0]
cmp     [ebx+4], edx
jb      loc_10011e75
mov     esi, [ebx]
test    esi, esi
jz      short loc_10011e21
cmp     edx, [esi]
ja      short loc_10011e21
test    edx, edx
jz      short loc_10011e21
cmp     dword ptr [esi+8], 0
lea     edi, [edx-1]
jz      short loc_10011dfa
mov     eax, edi
xor     edx, edx
div     dword ptr [esi+8]
mov     esi, [esi+eax*4+0ch]
mov     edi, edx
test    esi, esi
jz      short loc_10011e21
cmp     dword ptr [esi+8], 0
jnz     short loc_10011de0
mov     edx, [ebp+var_4]
cmp     dword ptr [esi], 0fa0h
ja      short loc_10011e2d
mov     ecx, edi
and     ecx, 7
mov     eax, 1
shl     eax, cl
shr     edi, 3
test    [edi+esi+0ch], al
mov     eax, 0
setnz   al
test    eax, eax
jnz     short loc_10011e75
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 10624dd3h
mul     edi
shr     edx, 3
mov     eax, edx
imul    eax, 7dh
mov     edx, edi
sub     edx, eax
mov     eax, [esi+edx*4+0ch]
inc     edi
test    eax, eax
jz      short loc_10011e21
lea     esp, [esp+0]
cmp     eax, edi
jz      short loc_10011e72
lea     eax, [edx+1]
xor     edx, edx
mov     ecx, 7dh
div     ecx
mov     eax, [esi+edx*4+0ch]
test    eax, eax
jnz     short loc_10011e50
pop     edi
pop     esi
lea     eax, [ecx-7ch]
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_8]
inc     eax
add     ebx, 2ch
mov     [ebp+var_8], eax
cmp     eax, [ebp+var_c]
jl      loc_10011dc0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     edx, [ebp+arg_4]
mov     ecx, [eax]
sub     esp, 8
push    edx
mov     edx, [ebp+arg_0]
push    edx
push    4
lea     edx, [esp+14h+var_4]
push    edx
push    eax
mov     eax, [ecx+8]
call    eax
add     esp, 14h
test    eax, eax
jnz     short loc_10011eef
mov     ecx, [esp+8+var_4]
movzx   edx, cl
movzx   ecx, ch
shl     edx, 8
or      edx, ecx
movzx   ecx, byte ptr [esp+8+var_4+2]
shl     edx, 8
or      edx, ecx
movzx   ecx, byte ptr [esp+8+var_4+3]
shl     edx, 8
or      edx, ecx
mov     ecx, [ebp+arg_8]
mov     [ecx], edx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, eax
shr     edx, 18h
mov     [ebp+var_4], dl
mov     edx, eax
shr     edx, 10h
mov     [ebp+var_3], dl
mov     edx, eax
shr     edx, 8
mov     [ebp+var_2], dl
mov     edx, [ebp+arg_4]
push    edx
mov     edx, [ebp+arg_0]
push    edx
mov     [ebp+var_1], al
mov     eax, [ecx]
mov     eax, [eax+0ch]
push    4
lea     edx, [ebp+var_4]
push    edx
push    ecx
call    eax
add     esp, 14h
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esi+3ch]
xor     eax, eax
cmp     [ecx], eax
jz      short locret_10011f5e
mov     eax, [ecx]
push    ebx
push    ecx
mov     ecx, [eax+20h]
call    ecx
add     esp, 8
cmp     byte ptr [esi+10h], 5
jz      short locret_10011f5e
mov     [esi+10h], bl
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 20h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+20h+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
push    edi
mov     byte ptr [eax], 0
lea     ecx, [esp+28h+var_18]
mov     [esp+28h+var_10], eax
mov     eax, [esi]
mov     edx, [eax+18h]
push    ecx
push    esi
call    edx
add     esp, 8
test    eax, eax
jnz     loc_100120c7
mov     edx, [esp+28h+var_14]
test    edx, edx
jl      loc_100120c7
mov     ecx, [esp+28h+var_18]
jg      short loc_10011fb3
cmp     ecx, 10h
jb      loc_100120c7
mov     eax, [esi]
sub     ecx, 10h
sbb     edx, 0
push    edx
mov     edx, [eax+8]
push    ecx
push    4
lea     ecx, [esp+34h+var_1c]
push    ecx
push    esi
call    edx
add     esp, 14h
test    eax, eax
jnz     short loc_10011ff6
mov     ecx, [esp+28h+var_1c]
movzx   edx, byte ptr [esp+28h+var_1c+2]
movzx   edi, cl
shl     edi, 8
movzx   ecx, ch
or      edi, ecx
movzx   ecx, byte ptr [esp+28h+var_1c+3]
shl     edi, 8
or      edi, edx
shl     edi, 8
or      edi, ecx
jmp     short loc_10011ffa
mov     edi, [esp+28h+var_10]
test    eax, eax
jnz     loc_100120c7
cmp     edi, [ebp+arg_4]
jnb     loc_100120c7
mov     eax, [esp+28h+var_18]
mov     ecx, [esp+28h+var_14]
sub     eax, 0ch
lea     edx, [esp+28h+var_1c]
push    edx
sbb     ecx, 0
push    ecx
push    eax
mov     eax, esi
call    sub_10011ea0
add     esp, 0ch
test    eax, eax
jnz     loc_100120c7
mov     eax, [esp+28h+var_18]
mov     ecx, [esp+28h+var_14]
mov     edx, [esi]
sub     eax, 8
sbb     ecx, 0
push    ecx
mov     ecx, [edx+8]
push    eax
push    8
lea     eax, [esp+34h+var_c]
push    eax
push    esi
call    ecx
add     esp, 14h
test    eax, eax
jnz     short loc_100120c7
lea     ecx, [eax+8]
xor     edx, edx
lea     ecx, [ecx+0]
mov     ebx, [esp+edx+28h+var_c]
cmp     ebx, ds:dword_10076780[edx]
jnz     short loc_100120c7
sub     ecx, 4
add     edx, 4
cmp     ecx, 4
jnb     short loc_10012060
mov     eax, [esp+28h+var_18]
mov     ecx, [esp+28h+var_14]
mov     ebx, [esp+28h+var_10]
xor     edx, edx
sub     eax, edi
sbb     ecx, edx
sub     eax, 10h
sbb     ecx, edx
mov     edx, [esi]
push    ecx
push    eax
mov     eax, [edx+8]
push    edi
push    ebx
push    esi
call    eax
add     esp, 14h
test    eax, eax
jnz     short loc_100120c7
mov     ecx, [esp+28h+var_1c]
test    edi, edi
jz      short loc_100120bb
lea     esp, [esp+0]
movsx   edx, byte ptr [ebx+eax]
inc     eax
sub     ecx, edx
cmp     eax, edi
jb      short loc_100120b0
test    ecx, ecx
jz      short loc_100120c1
xor     edi, edi
mov     byte ptr [ebx+edi], 0
xor     eax, eax
mov     ecx, [esp+28h+var_4]
pop     edi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
mov     edi, eax
mov     ecx, [edi+48h]
mov     esi, [edi+4ch]
mov     ebx, ecx
xor     eax, eax
xor     edx, edx
or      ebx, esi
jz      short loc_10012116
mov     edi, [edi+7ch]
xor     ebx, ebx
push    ebx
sub     ecx, 1
push    edi
sbb     esi, eax
push    esi
push    ecx
call    __alldiv
push    ebx
add     eax, 1
push    edi
adc     edx, ebx
push    edx
push    eax
call    __allmul
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, eax
mov     ecx, [esi+48h]
xor     eax, eax
or      ecx, [esi+4ch]
push    edi
jz      loc_100121dc
mov     edi, [esi+88h]
mov     ebx, [esi+8ch]
cmp     [ebp+arg_0], eax
jnz     short loc_1001216b
mov     edx, edi
or      edx, ebx
jz      short loc_1001216b
mov     eax, [esi+40h]
mov     ecx, [eax]
mov     edx, [ecx+0ch]
push    0
push    0
push    1ch
push    offset dword_10076704
push    eax
call    edx
add     esp, 14h
jmp     short loc_1001217d
mov     eax, [esi+40h]
mov     ecx, [eax]
mov     edx, [ecx+10h]
push    0
push    0
push    eax
call    edx
add     esp, 0ch
test    eax, eax
jnz     short loc_100121dc
cmp     [esi+7], al
jnz     short loc_100121a0
movzx   eax, byte ptr [esi+0bh]
mov     ecx, [esi+40h]
mov     edx, [ecx]
or      eax, 10h
push    eax
mov     eax, [edx+14h]
push    ecx
call    eax
add     esp, 8
test    eax, eax
jnz     short loc_100121dc
test    ebx, ebx
jl      short loc_100121dc
jg      short loc_100121aa
test    edi, edi
jz      short loc_100121dc
mov     eax, [esi+40h]
mov     ecx, [eax]
lea     edx, [ebp+var_8]
push    edx
push    eax
mov     eax, [ecx+18h]
call    eax
add     esp, 8
test    eax, eax
jnz     short loc_100121dc
cmp     [ebp+var_4], ebx
jl      short loc_100121dc
jg      short loc_100121cc
cmp     [ebp+var_8], edi
jbe     short loc_100121dc
mov     esi, [esi+40h]
mov     eax, [esi]
mov     ecx, [eax+10h]
push    ebx
push    edi
push    esi
call    ecx
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, [esi+7ch]
push    ebx
mov     ebx, [esi+80h]
xor     ecx, ecx
push    edi
mov     edi, [esi+0b0h]
mov     [ebp+var_c], ecx
cmp     ebx, eax
jbe     short loc_10012212
mov     ebx, eax
cmp     [esi+60h], ecx
jle     short loc_10012248
mov     [ebp+var_4], ecx
lea     ebx, [ebx+0]
mov     edx, [ebp+var_4]
mov     eax, [esi+5ch]
lea     eax, [eax+edx+8]
mov     edx, [eax]
or      edx, [eax+4]
jnz     short loc_1001223c
mov     edx, [esi+48h]
mov     [eax], edx
mov     edx, [esi+4ch]
mov     [eax+4], edx
add     [ebp+var_4], 2ch
inc     ecx
cmp     ecx, [esi+60h]
jl      short loc_10012220
xor     ecx, ecx
mov     eax, [esi+4ch]
mov     [ebp+var_18], ecx
mov     [ebp+var_14], ecx
mov     ecx, [esi+48h]
mov     edx, ecx
or      edx, eax
jz      short loc_10012285
xor     edx, edx
sub     ecx, 1
push    edx
sbb     eax, edx
mov     edx, [esi+7ch]
push    edx
push    eax
push    ecx
call    __alldiv
mov     ecx, eax
add     ecx, 1
adc     edx, 0
xor     eax, eax
push    eax
mov     eax, [esi+7ch]
push    eax
push    edx
push    ecx
call    __allmul
jmp     short loc_1001228b
mov     edx, [ebp+var_14]
mov     eax, [ebp+var_18]
cmp     byte ptr [esi+7], 0
mov     [esi+48h], eax
mov     [esi+4ch], edx
mov     [esi+50h], eax
mov     [esi+54h], edx
jnz     short loc_100122c4
cmp     byte ptr [esi+5], 4
jz      short loc_100122c4
mov     eax, [esi+3ch]
mov     edx, [eax]
push    eax
mov     eax, [edx+30h]
call    eax
add     esp, 4
test    eax, 200h
jnz     short loc_100122c4
xor     eax, eax
mov     [edi], eax
mov     [edi+4], eax
mov     [edi+8], eax
jmp     short loc_100122dc
mov     ecx, ds:dword_10076780
mov     [edi], ecx
mov     edx, ds:dword_10076784
mov     [edi+4], edx
mov     dword ptr [edi+8], 0ffffffffh
cmp     dword_10080234, 0
lea     eax, [esi+30h]
mov     [ebp+var_4], 4
mov     [ebp+var_14], eax
jnz     short loc_100122fb
mov     [ebp+var_8], 0
jmp     short loc_10012317
push    5
call    dword_10080274
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jz      short loc_10012317
push    eax
call    dword_1008027c
add     esp, 4
dec     [ebp+var_4]
call    sub_1000b190
mov     ecx, [ebp+var_14]
mov     [ecx], al
inc     ecx
cmp     [ebp+var_4], 0
mov     [ebp+var_14], ecx
jnz     short loc_10012317
mov     eax, [ebp+var_8]
test    eax, eax
jz      short loc_1001233f
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esi+30h]
mov     [edi+0fh], al
mov     ecx, eax
shr     ecx, 18h
mov     [edi+0ch], cl
mov     edx, eax
shr     edx, 10h
mov     [edi+0dh], dl
mov     ecx, eax
shr     ecx, 8
mov     [edi+0eh], cl
mov     eax, [esi+1ch]
mov     edx, eax
shr     edx, 18h
mov     [edi+10h], dl
mov     [edi+13h], al
mov     ecx, eax
shr     ecx, 10h
mov     [edi+11h], cl
mov     edx, eax
shr     edx, 8
mov     [edi+12h], dl
mov     eax, [esi+7ch]
mov     ecx, eax
shr     ecx, 18h
mov     [edi+14h], cl
mov     edx, eax
shr     edx, 10h
mov     [edi+15h], dl
mov     ecx, eax
shr     ecx, 8
mov     [edi+16h], cl
mov     [edi+17h], al
mov     eax, [esi+80h]
mov     edx, eax
shr     edx, 18h
mov     [edi+18h], dl
mov     ecx, eax
mov     edx, eax
mov     [edi+1bh], al
shr     ecx, 10h
lea     eax, [ebx-1ch]
push    eax
mov     [edi+19h], cl
lea     ecx, [edi+1ch]
shr     edx, 8
push    0
push    ecx
mov     [edi+1ah], dl
call    memset
add     esp, 0ch
mov     [ebp+var_8], 0
mov     edx, [ebp+var_8]
cmp     edx, [esi+7ch]
jnb     short loc_10012404
mov     ecx, [esi+4ch]
mov     eax, [esi+40h]
mov     edx, [eax]
push    ecx
mov     ecx, [esi+48h]
push    ecx
push    ebx
push    edi
push    eax
mov     eax, [edx+0ch]
call    eax
add     esp, 14h
add     [esi+48h], ebx
mov     [ebp+var_c], eax
adc     dword ptr [esi+4ch], 0
add     [ebp+var_8], ebx
test    eax, eax
jz      short loc_100123d3
mov     eax, [ebp+var_c]
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1ch+var_4], eax
mov     eax, [ebp+arg_c]
push    ebx
push    esi
push    edi
mov     edi, edx
mov     [esp+28h+var_10], eax
mov     eax, [edi+48h]
mov     [esp+28h+var_14], ecx
mov     ecx, [edi+4ch]
mov     edx, eax
xor     esi, esi
xor     ebx, ebx
or      edx, ecx
jz      short loc_10012467
mov     esi, [edi+7ch]
push    ebx
sub     eax, 1
push    esi
sbb     ecx, ebx
push    ecx
push    eax
call    __alldiv
push    ebx
add     eax, 1
push    esi
adc     edx, ebx
push    edx
push    eax
call    __allmul
mov     esi, eax
mov     ebx, edx
mov     ecx, [edi+7ch]
xor     eax, eax
add     ecx, esi
adc     eax, ebx
mov     [edi+48h], esi
mov     [edi+4ch], ebx
cmp     eax, [ebp+arg_8]
jl      short loc_10012499
jg      short loc_10012482
cmp     ecx, [ebp+arg_4]
jbe     short loc_10012499
mov     eax, 65h
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+1ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_0], 0
jnz     short loc_100124a9
cmp     esi, [edi+50h]
jnz     short loc_100124a9
cmp     ebx, [edi+54h]
jz      short loc_100124e7
mov     eax, [edi+40h]
mov     ecx, [eax]
push    ebx
push    esi
push    8
lea     edx, [esp+34h+var_c]
push    edx
push    eax
mov     eax, [ecx+8]
call    eax
add     esp, 14h
test    eax, eax
jnz     loc_100126ba
mov     eax, 8
xor     ecx, ecx
nop
mov     edx, [esp+ecx+28h+var_c]
cmp     edx, ds:dword_10076780[ecx]
jnz     short loc_10012482
sub     eax, 4
add     ecx, 4
cmp     eax, 4
jnb     short loc_100124d0
mov     eax, [edi+40h]
mov     ecx, [eax]
mov     edx, esi
add     edx, 8
mov     eax, ebx
adc     eax, 0
push    eax
mov     eax, [edi+40h]
push    edx
push    4
lea     edx, [esp+34h+var_18]
push    edx
push    eax
mov     eax, [ecx+8]
call    eax
add     esp, 14h
test    eax, eax
jnz     loc_100126ba
mov     ecx, [esp+28h+var_18]
movzx   edx, cl
shl     edx, 8
movzx   ecx, ch
or      edx, ecx
movzx   ecx, byte ptr [esp+28h+var_18+2]
shl     edx, 8
or      edx, ecx
movzx   ecx, byte ptr [esp+28h+var_18+3]
shl     edx, 8
or      edx, ecx
mov     ecx, [esp+28h+var_10]
mov     [ecx], edx
test    eax, eax
jnz     loc_100126ba
mov     eax, [edi+40h]
mov     edx, [eax]
mov     eax, esi
add     eax, 0ch
mov     ecx, ebx
adc     ecx, 0
push    ecx
mov     ecx, [edx+8]
push    eax
push    4
lea     eax, [esp+34h+var_18]
push    eax
mov     eax, [edi+40h]
push    eax
call    ecx
add     esp, 14h
test    eax, eax
jnz     loc_100126ba
mov     ecx, [esp+28h+var_18]
movzx   edx, cl
shl     edx, 8
movzx   ecx, ch
or      edx, ecx
movzx   ecx, byte ptr [esp+28h+var_18+2]
shl     edx, 8
or      edx, ecx
movzx   ecx, byte ptr [esp+28h+var_18+3]
shl     edx, 8
or      edx, ecx
mov     [edi+30h], edx
test    eax, eax
jnz     loc_100126ba
mov     eax, [edi+40h]
mov     edx, [eax]
mov     eax, esi
add     eax, 10h
mov     ecx, ebx
adc     ecx, 0
push    ecx
mov     ecx, [edx+8]
push    eax
push    4
lea     eax, [esp+34h+var_18]
push    eax
mov     eax, [edi+40h]
push    eax
call    ecx
add     esp, 14h
test    eax, eax
jnz     loc_100126ba
mov     ecx, [esp+28h+var_18]
movzx   edx, cl
shl     edx, 8
movzx   ecx, ch
or      edx, ecx
movzx   ecx, byte ptr [esp+28h+var_18+2]
shl     edx, 8
or      edx, ecx
movzx   ecx, byte ptr [esp+28h+var_18+3]
shl     edx, 8
or      edx, ecx
mov     ecx, [esp+28h+var_14]
mov     [ecx], edx
test    eax, eax
jnz     loc_100126ba
mov     edx, [edi+48h]
or      edx, [edi+4ch]
jnz     loc_100126b0
mov     ecx, esi
add     ecx, 14h
lea     eax, [esp+28h+var_14]
push    eax
mov     eax, [edi+40h]
mov     edx, ebx
adc     edx, 0
push    edx
push    ecx
call    sub_10011ea0
add     esp, 0ch
test    eax, eax
jnz     loc_100126ba
lea     eax, [esp+28h+var_18]
push    eax
mov     eax, [edi+40h]
add     esi, 18h
adc     ebx, 0
push    ebx
push    esi
call    sub_10011ea0
add     esp, 0ch
test    eax, eax
jnz     short loc_100126ba
mov     eax, [esp+28h+var_18]
test    eax, eax
jnz     short loc_10012659
mov     eax, [edi+80h]
mov     [esp+28h+var_18], eax
cmp     eax, 200h
jb      loc_10012482
mov     esi, [esp+28h+var_14]
cmp     esi, 20h
jb      loc_10012482
cmp     eax, 10000h
ja      loc_10012482
cmp     esi, 10000h
ja      loc_10012482
lea     ecx, [eax-1]
test    eax, ecx
jnz     loc_10012482
lea     edx, [esi-1]
test    esi, edx
jnz     loc_10012482
lea     eax, [esp+28h+var_18]
push    0ffffffffh
push    eax
call    sub_10013ff0
add     esp, 8
mov     [edi+7ch], esi
mov     ecx, [edi+7ch]
add     [edi+48h], ecx
adc     dword ptr [edi+4ch], 0
mov     ecx, [esp+28h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     ecx, [ebp+arg_0]
push    ebx
push    edi
xor     edi, edi
xor     edx, edx
mov     [ebp+var_8], edx
cmp     ecx, edi
jz      loc_100128bc
mov     al, [esi+5]
cmp     al, 4
jz      loc_100128bc
cmp     al, 2
jz      loc_100128bc
mov     byte ptr [esi+12h], 1
mov     al, [ecx]
xor     ebx, ebx
test    al, al
jz      short loc_10012720
lea     esp, [esp+0]
movsx   eax, al
inc     ebx
add     edx, eax
mov     al, [ebx+ecx]
test    al, al
jnz     short loc_10012710
mov     [ebp+var_8], edx
cmp     byte ptr [esi+8], 0
jz      short loc_10012768
mov     ecx, [esi+48h]
mov     eax, [esi+4ch]
mov     edx, ecx
or      edx, eax
mov     [ebp+var_14], edi
jz      short loc_1001275f
mov     edi, [esi+7ch]
xor     edx, edx
push    edx
sub     ecx, 1
push    edi
sbb     eax, edx
push    eax
push    ecx
call    __alldiv
mov     ecx, eax
add     ecx, 1
adc     edx, 0
xor     eax, eax
push    eax
push    edi
push    edx
push    ecx
call    __allmul
mov     edi, eax
jmp     short loc_10012762
mov     edx, [ebp+var_14]
mov     [esi+48h], edi
mov     [esi+4ch], edx
mov     edx, [esi+4ch]
mov     eax, dword_1008031c
mov     [ebp+var_c], edx
cdq
idiv    dword ptr [esi+80h]
mov     edi, [esi+48h]
mov     edx, [esi+40h]
mov     [ebp+var_10], edi
inc     eax
mov     ecx, eax
shr     ecx, 18h
mov     [ebp+var_4], cl
mov     ecx, eax
shr     ecx, 10h
mov     [ebp+var_3], cl
mov     ecx, eax
shr     ecx, 8
mov     [ebp+var_2], cl
mov     ecx, [ebp+var_c]
push    ecx
push    edi
push    4
lea     ecx, [ebp+var_4]
mov     [ebp+var_1], al
mov     eax, [edx]
push    ecx
push    edx
mov     edx, [eax+0ch]
call    edx
add     esp, 14h
test    eax, eax
jnz     loc_100128be
mov     edx, [ebp+var_c]
mov     eax, [esi+40h]
mov     ecx, [eax]
add     edi, 4
adc     edx, 0
push    edx
mov     edx, [ebp+arg_0]
push    edi
push    ebx
push    edx
push    eax
mov     eax, [ecx+0ch]
call    eax
add     esp, 14h
test    eax, eax
jnz     loc_100128be
mov     ecx, [esi+40h]
mov     ecx, [ecx]
mov     edx, ebx
shr     edx, 18h
mov     byte ptr [ebp+arg_0], dl
mov     eax, ebx
shr     eax, 10h
mov     byte ptr [ebp+arg_0+1], al
mov     edx, ebx
shr     edx, 8
mov     byte ptr [ebp+arg_0+2], dl
mov     eax, ebx
cdq
mov     edi, eax
add     edi, [ebp+var_10]
mov     byte ptr [ebp+arg_0+3], bl
adc     edx, [ebp+var_c]
mov     eax, edi
add     eax, 4
mov     [ebp+var_c], edx
adc     edx, 0
push    edx
push    eax
mov     eax, [esi+40h]
push    4
lea     edx, [ebp+arg_0]
push    edx
push    eax
mov     eax, [ecx+0ch]
call    eax
add     esp, 14h
test    eax, eax
jnz     loc_100128be
mov     edx, [ebp+var_c]
mov     ecx, edi
add     ecx, 8
adc     edx, eax
mov     eax, [ebp+var_8]
push    edx
push    ecx
mov     ecx, [esi+40h]
call    sub_10011f00
add     esp, 8
test    eax, eax
jnz     short loc_100128be
mov     ecx, [ebp+var_c]
mov     eax, [esi+40h]
mov     edx, [eax]
add     edi, 0ch
adc     ecx, 0
push    ecx
push    edi
push    8
push    offset dword_10076780
push    eax
mov     eax, [edx+0ch]
call    eax
add     esp, 14h
test    eax, eax
jnz     short loc_100128be
lea     eax, [ebx+14h]
cdq
add     [esi+48h], eax
mov     eax, [esi+40h]
adc     [esi+4ch], edx
mov     ecx, [eax]
lea     edx, [ebp+var_18]
push    edx
push    eax
mov     eax, [ecx+18h]
call    eax
add     esp, 8
test    eax, eax
jnz     short loc_100128be
mov     ecx, [esi+4ch]
mov     edx, [esi+48h]
cmp     [ebp+var_14], ecx
jl      short loc_100128be
jg      short loc_100128a9
cmp     [ebp+var_18], edx
jbe     short loc_100128be
mov     eax, [esi+40h]
push    ecx
push    edx
call    sub_100089d0
add     esp, 8
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    edi
mov     edi, [edx+0b4h]
lea     eax, [ebp+var_4]
push    eax
push    0
push    ecx
call    sub_10010550
mov     eax, [ebp+var_4]
add     esp, 0ch
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     eax, [edx+58h]
test    eax, eax
jz      short loc_1001291a
mov     ecx, 1
lea     esp, [esp+0]
mov     [eax+10h], ecx
mov     eax, [eax+2ch]
test    eax, eax
jnz     short loc_10012910
push    edi
mov     edi, [edx+0b4h]
push    0
call    sub_100108f0
add     esp, 4
pop     edi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
mov     esi, [ebp+arg_0]
xor     eax, eax
push    edi
mov     [ebp+var_8], eax
cmp     [esi+60h], eax
jle     short loc_1001299e
mov     [ebp+var_4], eax
push    ebx
lea     esp, [esp+0]
mov     eax, [esi+5ch]
mov     ecx, [ebp+var_4]
mov     ebx, [ecx+eax+10h]
test    ebx, ebx
jz      short loc_1001298d
cmp     dword ptr [ebx+8], 0
jz      short loc_10012984
lea     esi, [ebx+0ch]
mov     edi, 7dh
lea     esp, [esp+0]
mov     edx, [esi]
push    edx
call    sub_100101c0
add     esp, 4
add     esi, 4
dec     edi
jnz     short loc_10012970
mov     esi, [ebp+arg_0]
push    ebx
call    sub_10009770
add     esp, 4
mov     eax, [ebp+var_8]
add     [ebp+var_4], 2ch
inc     eax
mov     [ebp+var_8], eax
cmp     eax, [esi+60h]
jl      short loc_10012950
pop     ebx
cmp     byte ptr [esi+4], 0
jz      short loc_100129af
mov     eax, [esi+44h]
cmp     dword ptr [eax], offset dword_10076840
jnz     short loc_100129c7
mov     edi, [esi+44h]
mov     eax, [edi]
test    eax, eax
jz      short loc_100129c7
mov     ecx, [eax+4]
push    edi
call    ecx
add     esp, 4
mov     dword ptr [edi], 0
mov     edx, [esi+5ch]
push    edx
call    sub_10009770
add     esp, 4
xor     eax, eax
pop     edi
mov     [esi+5ch], eax
mov     [esi+60h], eax
mov     [esi+34h], eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
xor     eax, eax
push    edi
xor     edi, edi
mov     [ebp+var_4], eax
cmp     [esi+60h], eax
jle     short loc_10012a2d
xor     ebx, ebx
mov     eax, [esi+5ch]
mov     ecx, [ebp+arg_0]
cmp     ecx, [eax+ebx+14h]
ja      short loc_10012a21
mov     eax, [eax+ebx+10h]
push    ecx
push    eax
call    sub_1000ff00
add     esp, 8
or      [ebp+var_4], eax
inc     edi
add     ebx, 2ch
cmp     edi, [esi+60h]
jl      short loc_10012a04
mov     eax, [ebp+var_4]
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebx+38h]
push    edi
xor     edi, edi
mov     [ebp+var_4], esi
cmp     esi, edi
jz      short loc_10012a7d
cmp     [esi+8], edi
jz      short loc_10012a74
add     esi, 0ch
mov     edi, 7dh
nop
mov     eax, [esi]
push    eax
call    sub_100101c0
add     esp, 4
add     esi, 4
dec     edi
jnz     short loc_10012a60
mov     esi, [ebp+var_4]
push    esi
call    sub_10009770
add     esp, 4
push    ebx
mov     [ebx+38h], edi
call    sub_10012930
mov     esi, [ebx+0b8h]
add     esp, 4
cmp     esi, edi
jz      short loc_10012a9a
call    sub_100187d0
jmp     short loc_10012b09
cmp     byte ptr [ebx+4], 0
jnz     short loc_10012b0d
mov     eax, [ebx+3ch]
cmp     [eax], edi
jz      short loc_10012ab4
mov     ecx, [eax]
mov     edx, [ecx+30h]
push    eax
call    edx
add     esp, 4
jmp     short loc_10012ab6
xor     eax, eax
test    eax, 800h
jz      short loc_10012ac6
mov     al, [ebx+5]
and     al, 5
cmp     al, 1
jz      short loc_10012ada
mov     esi, [ebx+40h]
mov     eax, [esi]
cmp     eax, edi
jz      short loc_10012ada
mov     ecx, [eax+4]
push    esi
call    ecx
add     esp, 4
mov     [esi], edi
mov     eax, [ebx+3ch]
cmp     [eax], edi
jz      short loc_10012b05
mov     edx, [eax]
push    edi
push    eax
mov     eax, [edx+20h]
call    eax
add     esp, 8
cmp     byte ptr [ebx+10h], 5
jz      short loc_10012af7
mov     byte ptr [ebx+10h], 0
cmp     eax, edi
jz      short loc_10012b05
cmp     byte ptr [ebx+0fh], 6
jnz     short loc_10012b05
mov     byte ptr [ebx+10h], 5
mov     byte ptr [ebx+11h], 0
mov     byte ptr [ebx+0fh], 0
cmp     [ebx+28h], edi
jz      short loc_10012b50
mov     eax, [ebx+58h]
cmp     eax, edi
jz      short loc_10012b2e
lea     esp, [esp+0]
mov     dword ptr [eax+10h], 1
mov     eax, [eax+2ch]
cmp     eax, edi
jnz     short loc_10012b20
push    edi
mov     edi, [ebx+0b4h]
call    sub_100108f0
mov     cl, [ebx+0ch]
add     esp, 4
mov     [ebx+11h], cl
mov     byte ptr [ebx+0fh], 0
mov     dword ptr [ebx+28h], 0
xor     edi, edi
mov     [ebx+48h], edi
mov     [ebx+4ch], edi
mov     [ebx+50h], edi
mov     [ebx+54h], edi
pop     edi
mov     byte ptr [ebx+12h], 0
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, eax
and     ecx, 0ffh
cmp     ecx, 0dh
jz      short loc_10012b82
cmp     ecx, 0ah
jnz     short locret_10012b89
mov     [edx+28h], eax
mov     byte ptr [edx+0fh], 6
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 10h
push    esi
xor     esi, esi
mov     al, 2
push    edi
mov     [esp+18h+var_c], esi
mov     [esp+18h+var_8], esi
cmp     [ebx+0fh], al
jnb     short loc_10012bb9
cmp     [ebx+10h], al
jnb     short loc_10012bb9
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebx
call    sub_10012930
mov     edi, [ebx+40h]
mov     eax, [edi]
add     esp, 4
cmp     eax, esi
jz      loc_10012c58
cmp     eax, offset dword_10076840
jnz     short loc_10012be7
cmp     eax, esi
jz      short loc_10012c58
mov     eax, [eax+4]
push    edi
call    eax
add     esp, 4
mov     [edi], esi
jmp     short loc_10012c58
mov     al, [ebx+5]
cmp     al, 3
jnz     short loc_10012c1b
mov     ecx, [ebx+48h]
or      ecx, [ebx+4ch]
jnz     short loc_10012c02
mov     [esp+18h+var_c], esi
mov     [ebx+48h], esi
mov     [ebx+4ch], esi
jmp     short loc_10012c58
mov     edx, [edi]
mov     eax, [edx+10h]
push    esi
push    esi
push    edi
call    eax
add     esp, 0ch
mov     [esp+18h+var_c], eax
mov     [ebx+48h], esi
mov     [ebx+4ch], esi
jmp     short loc_10012c58
cmp     al, 1
jz      loc_10012d70
cmp     byte ptr [ebx+4], 0
jz      short loc_10012c31
cmp     al, 5
jnz     loc_10012d70
mov     esi, edi
call    sub_10008960
cmp     byte ptr [ebx+0ch], 0
jnz     short loc_10012c56
mov     ecx, [ebx+94h]
mov     eax, [ebx]
push    0
push    ecx
mov     ecx, [eax+1ch]
push    eax
call    ecx
add     esp, 0ch
mov     [esp+18h+var_c], eax
xor     esi, esi
mov     edi, [ebx+38h]
mov     [esp+18h+var_4], edi
cmp     edi, esi
jz      short loc_10012c8e
cmp     [edi+8], esi
jz      short loc_10012c85
add     edi, 0ch
mov     esi, 7dh
mov     eax, [edi]
push    eax
call    sub_100101c0
add     esp, 4
add     edi, 4
dec     esi
jnz     short loc_10012c70
mov     edi, [esp+18h+var_4]
push    edi
call    sub_10009770
add     esp, 4
mov     edi, [ebx+0b4h]
mov     [ebx+38h], esi
mov     [ebx+2ch], esi
call    sub_100107e0
mov     ecx, [ebx+18h]
mov     edi, [ebx+0b4h]
push    ecx
call    sub_100108f0
mov     edi, [ebx+0b8h]
add     esp, 4
cmp     edi, esi
jz      short loc_10012ce6
cmp     byte ptr [edi+2ch], 0
jz      short loc_10012ce2
cmp     byte ptr [edi+2bh], 0
jnz     short loc_10012cda
mov     eax, [edi+4]
mov     edx, [eax]
push    9
push    1
push    esi
push    eax
mov     eax, [edx+38h]
call    eax
add     esp, 10h
mov     byte ptr [edi+2ch], 0
mov     byte ptr [edi+2fh], 0
mov     [esp+18h+var_8], esi
cmp     byte ptr [ebx+4], 0
jnz     short loc_10012d56
mov     edi, [ebx+0b8h]
cmp     edi, esi
jz      short loc_10012d2e
cmp     byte ptr [edi+2bh], 0
jz      short loc_10012d56
movsx   eax, word ptr [edi+28h]
mov     ecx, [edi+4]
push    6
add     eax, 3
mov     byte ptr [edi+2bh], 0
mov     edx, [ecx]
push    1
push    eax
mov     eax, [edx+38h]
push    ecx
call    eax
add     esp, 10h
cmp     eax, esi
jz      short loc_10012d22
mov     byte ptr [edi+2bh], 1
xor     eax, eax
cmp     [edi+2bh], al
setz    al
cmp     eax, esi
jz      short loc_10012d56
mov     ecx, [ebx+3ch]
xor     eax, eax
cmp     [ecx], esi
jz      short loc_10012d4e
mov     edx, [ecx]
mov     eax, [edx+20h]
push    1
push    ecx
call    eax
add     esp, 8
cmp     byte ptr [ebx+10h], 5
jz      short loc_10012d4e
mov     byte ptr [ebx+10h], 1
mov     [esp+18h+var_8], eax
mov     byte ptr [ebx+11h], 0
mov     eax, [esp+18h+var_c]
mov     byte ptr [ebx+0fh], 1
mov     byte ptr [ebx+12h], 0
cmp     eax, esi
jnz     short loc_10012d6a
mov     eax, [esp+18h+var_8]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_0]
push    edx
mov     eax, ebx
call    sub_10012120
add     esp, 4
mov     [esp+18h+var_c], eax
mov     [ebx+48h], esi
mov     [ebx+4ch], esi
jmp     loc_10012c58
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ecx+30h]
mov     ecx, [ecx+80h]
push    ebx
push    edi
add     ecx, 0ffffff38h
xor     edi, edi
xor     ebx, ebx
mov     [ebp+var_4], eax
test    ecx, ecx
jle     short loc_10012dff
lea     edx, [ecx+0c7h]
mov     eax, 51eb851fh
imul    edx
sar     edx, 6
mov     eax, edx
shr     eax, 1fh
add     eax, edx
cmp     eax, 2
jl      short loc_10012dee
lea     esp, [esp+0]
movzx   edx, byte ptr [esi+ecx]
movzx   eax, byte ptr [esi+ecx-0c8h]
sub     ecx, 190h
add     edi, edx
add     ebx, eax
cmp     ecx, 0c8h
jg      short loc_10012dd0
mov     eax, [ebp+var_4]
test    ecx, ecx
jle     short loc_10012dfb
movzx   ecx, byte ptr [ecx+esi]
add     eax, ecx
add     ebx, edi
add     eax, ebx
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
cmp     [ebp+arg_8], 0
push    ebx
push    esi
push    edi
mov     edi, eax
mov     eax, [edi+0b0h]
mov     [esp+18h+src], eax
jz      short loc_10012e33
mov     esi, [edi+40h]
jmp     short loc_10012e36
mov     esi, [edi+44h]
mov     ecx, [ebp+arg_0]
mov     eax, [ecx]
mov     ecx, [ecx+4]
mov     edx, [esi]
push    ecx
mov     ecx, [edx+8]
push    eax
push    4
lea     eax, [esp+24h+var_8]
push    eax
push    esi
call    ecx
add     esp, 14h
test    eax, eax
jnz     loc_10013119
mov     eax, [esp+18h+var_8]
movzx   ecx, byte ptr [esp+18h+var_8+3]
movzx   ebx, al
movzx   edx, ah
movzx   eax, byte ptr [esp+18h+var_8+2]
shl     ebx, 8
or      ebx, edx
mov     edx, [esi]
shl     ebx, 8
or      ebx, eax
shl     ebx, 8
or      ebx, ecx
mov     ecx, [ebp+arg_0]
mov     eax, [ecx]
mov     ecx, [ecx+4]
add     eax, 4
adc     ecx, 0
push    ecx
mov     ecx, [edx+8]
push    eax
mov     eax, [edi+80h]
push    eax
mov     eax, [esp+24h+src]
push    eax
push    esi
call    ecx
add     esp, 14h
mov     [esp+18h+var_8], eax
test    eax, eax
jnz     loc_10013119
mov     edx, [edi+80h]
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
lea     eax, [edx+eax*4+4]
cdq
add     [ecx], eax
adc     [ecx+4], edx
test    ebx, ebx
jz      loc_10013114
mov     eax, dword_1008031c
cdq
idiv    dword ptr [edi+80h]
inc     eax
cmp     ebx, eax
jz      loc_10013114
cmp     ebx, [edi+18h]
ja      loc_1001310b
mov     edx, [ebp+arg_4]
test    edx, edx
jz      short loc_10012f0a
mov     eax, ebx
mov     ecx, edx
call    sub_1000fe60
test    eax, eax
jnz     loc_1001310b
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
cmp     [ebp+arg_8], 0
jz      short loc_10012f58
mov     eax, [ecx]
mov     ecx, [ecx+4]
sub     eax, 4
lea     edx, [esp+18h+var_c]
push    edx
sbb     ecx, 0
push    ecx
push    eax
mov     eax, esi
call    sub_10011ea0
add     esp, 0ch
mov     [esp+18h+var_8], eax
test    eax, eax
jnz     loc_10013119
cmp     [ebp+arg_c], eax
jnz     short loc_10012f52
mov     esi, [esp+18h+src]
mov     ecx, edi
call    sub_10012d90
cmp     eax, [esp+18h+var_c]
jnz     loc_10013114
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
test    edx, edx
jz      short loc_10012f75
push    ebx
push    edx
call    sub_1000ff00
add     esp, 8
mov     [esp+18h+var_8], eax
test    eax, eax
jnz     loc_10013100
mov     ecx, [ebp+arg_0]
cmp     ebx, 1
jnz     short loc_10012f91
mov     edx, [esp+18h+src]
mov     al, [edx+14h]
movzx   edx, al
cmp     [edi+76h], dx
jz      short loc_10012f91
movzx   eax, al
mov     [edi+76h], ax
cmp     dword ptr [edi+0b8h], 0
jz      short loc_10012fa2
xor     edx, edx
mov     [esp+18h+var_c], edx
jmp     short loc_10012fb4
mov     ecx, ebx
mov     edx, edi
call    sub_100128d0
mov     ecx, [ebp+arg_0]
mov     [esp+18h+var_c], eax
mov     edx, eax
cmp     [ebp+arg_8], 0
jz      short loc_10013034
cmp     byte ptr [edi+7], 0
jnz     short loc_10012fd1
mov     eax, [ecx+4]
cmp     eax, [edi+54h]
jl      short loc_10012fd1
jg      short loc_1001303e
mov     ecx, [ecx]
cmp     ecx, [edi+50h]
ja      short loc_1001303e
mov     ecx, 1
mov     eax, [edi+3ch]
cmp     dword ptr [eax], 0
jz      short loc_10013042
mov     al, [edi+0fh]
cmp     al, 4
jnb     short loc_10012fe9
test    al, al
jnz     short loc_10013042
test    ecx, ecx
jz      short loc_10013042
mov     esi, [edi+80h]
mov     eax, esi
cdq
push    edx
push    eax
lea     ecx, [ebx-1]
push    0
push    ecx
call    __allmul
push    edx
push    eax
mov     eax, [edi+3ch]
push    esi
mov     esi, [esp+24h+src]
push    esi
call    sub_100089b0
add     esp, 10h
mov     [esp+18h+var_8], eax
cmp     ebx, [edi+20h]
jbe     short loc_10013022
mov     [edi+20h], ebx
mov     eax, [edi+58h]
test    eax, eax
jz      short loc_10013081
push    esi
call    sub_10024240
add     esp, 4
jmp     short loc_10013081
test    edx, edx
jz      short loc_10012fd1
test    byte ptr [edx+18h], 4
jz      short loc_10012fd1
xor     ecx, ecx
jmp     short loc_10012fd6
cmp     [ebp+arg_8], 0
jnz     short loc_10013085
test    edx, edx
jnz     short loc_10013089
inc     byte ptr [edi+13h]
lea     edx, [esp+18h+var_c]
push    1
push    edx
mov     eax, edi
call    sub_10015300
dec     byte ptr [edi+13h]
add     esp, 8
mov     [esp+18h+var_8], eax
test    eax, eax
jnz     loc_10013119
mov     eax, [esp+18h+var_c]
mov     ecx, 0fff7h
and     [eax+18h], cx
call    sub_10010740
mov     edx, [esp+18h+var_c]
test    edx, edx
jz      short loc_10013100
mov     esi, [edx+4]
mov     edx, [edi+80h]
mov     eax, [esp+18h+src]
push    edx
push    eax
push    esi
call    memcpy
mov     ecx, [esp+24h+var_c]
mov     edx, [edi+0ach]
add     esp, 0ch
push    ecx
call    edx
add     esp, 4
cmp     [ebp+arg_8], 0
jz      short loc_100130da
cmp     [ebp+arg_c], 0
jz      short loc_100130d1
mov     eax, [ebp+arg_0]
mov     ecx, [eax+4]
cmp     ecx, [edi+54h]
jg      short loc_100130da
jl      short loc_100130d1
mov     edx, [eax]
cmp     edx, [edi+50h]
ja      short loc_100130da
mov     eax, [esp+18h+var_c]
call    sub_10010790
cmp     ebx, 1
jnz     short loc_100130f7
mov     ecx, [esi+18h]
mov     [edi+64h], ecx
mov     edx, [esi+1ch]
mov     [edi+68h], edx
mov     ecx, [esi+20h]
mov     [edi+6ch], ecx
mov     edx, [esi+24h]
mov     [edi+70h], edx
mov     eax, [esp+18h+var_c]
call    sub_100106d0
mov     eax, [esp+18h+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 65h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
push    ebx
push    esi
push    edi
mov     edi, [eax]
mov     esi, [edi+4]
add     esi, esi
push    esi
mov     [esp+34h+var_18], edi
mov     [esp+34h+var_24], 0
call    sub_100094a0
mov     ebx, eax
add     esp, 4
mov     [esp+30h+var_14], ebx
test    ebx, ebx
jz      short loc_1001315e
push    esi
push    0
push    ebx
call    memset
add     esp, 0ch
mov     eax, [edi+4]
add     eax, ebx
mov     [esp+30h+var_20], eax
test    ebx, ebx
jnz     short loc_10013173
lea     edi, [ebx+7]
jmp     loc_10013338
mov     ecx, [ebp+arg_0]
mov     edx, [edi+18h]
push    0
push    4001h
push    ebx
push    ecx
push    edi
call    edx
mov     edi, eax
add     esp, 14h
test    edi, edi
jnz     loc_10013338
mov     eax, [ebx]
mov     edx, [eax+18h]
lea     ecx, [esp+30h+var_8]
push    ecx
push    ebx
call    edx
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     loc_10013338
mov     eax, [esp+30h+var_18]
mov     eax, [eax+8]
mov     ecx, [esp+30h+var_8]
inc     eax
lea     edx, [ecx+eax+1]
push    edx
mov     [esp+34h+var_c], eax
call    sub_100094a0
add     esp, 4
mov     [esp+30h+var_24], eax
test    eax, eax
jnz     short loc_100131d9
lea     edi, [eax+7]
jmp     loc_10013338
mov     ecx, [esp+30h+var_8]
push    0
lea     edx, [ecx+eax+1]
push    0
push    ecx
mov     [esp+3ch+var_1c], edx
mov     edx, [ebx]
push    eax
mov     eax, [edx+8]
push    ebx
call    eax
mov     edi, eax
add     esp, 14h
test    edi, edi
jnz     loc_10013338
mov     ecx, [esp+30h+var_8]
mov     ebx, [esp+30h+var_24]
mov     [ecx+ebx], al
cmp     [esp+30h+var_4], eax
jl      loc_10013312
jg      short loc_10013221
cmp     [esp+30h+var_8], eax
jbe     loc_10013312
mov     esi, [esp+30h+var_18]
mov     eax, [esi+20h]
lea     edx, [esp+30h+var_10]
push    edx
push    0
push    ebx
push    esi
call    eax
mov     edi, eax
add     esp, 10h
test    edi, edi
jnz     loc_10013334
cmp     [esp+30h+var_10], eax
jz      loc_100132d9
mov     ecx, [esp+30h+var_20]
mov     edx, [esi+18h]
push    eax
push    801h
push    ecx
push    ebx
push    esi
call    edx
mov     edi, eax
add     esp, 14h
test    edi, edi
jnz     loc_10013334
mov     eax, [esp+30h+var_c]
mov     ecx, [esp+30h+var_1c]
mov     esi, [esp+30h+var_20]
push    eax
push    ecx
call    sub_10011f60
mov     edi, eax
mov     eax, [esi]
add     esp, 8
test    eax, eax
jz      short loc_10013296
mov     edx, [eax+4]
push    esi
call    edx
add     esp, 4
mov     dword ptr [esi], 0
test    edi, edi
jnz     loc_10013334
mov     eax, [esp+30h+var_1c]
cmp     byte ptr [eax], 0
jz      short loc_100132d9
mov     ecx, [ebp+arg_0]
lea     ebx, [ebx+0]
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_100132d0
test    dl, dl
jz      short loc_100132cc
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_100132d0
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_100132b0
xor     eax, eax
jmp     short loc_100132d5
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jz      short loc_10013334
mov     eax, ebx
test    ebx, ebx
jz      short loc_100132f1
cmp     byte ptr [ebx], 0
jz      short loc_100132ea
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100132e4
sub     eax, ebx
and     eax, 3fffffffh
lea     ebx, [ebx+eax+1]
mov     eax, ebx
sub     eax, [esp+30h+var_24]
cdq
cmp     edx, [esp+30h+var_4]
jl      loc_10013221
jg      short loc_10013312
cmp     eax, [esp+30h+var_8]
jb      loc_10013221
mov     esi, [esp+30h+var_14]
call    sub_10008960
mov     ecx, [ebp+arg_0]
mov     eax, [esp+30h+var_18]
mov     edx, [eax+1ch]
push    0
push    ecx
push    eax
call    edx
add     esp, 0ch
mov     edi, eax
mov     ebx, esi
jmp     short loc_10013338
mov     ebx, [esp+30h+var_14]
mov     eax, [esp+30h+var_24]
push    eax
call    sub_10009770
add     esp, 4
test    ebx, ebx
jz      short loc_10013367
mov     eax, [ebx]
test    eax, eax
jz      short loc_1001335e
mov     ecx, [eax+4]
push    ebx
call    ecx
add     esp, 4
mov     dword ptr [ebx], 0
push    ebx
call    sub_10009770
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     ecx, [edx+3ch]
sub     esp, 1ch
push    ebx
xor     eax, eax
push    esi
push    edi
cmp     [ecx], eax
jz      loc_1001345a
mov     bl, [edx+0fh]
cmp     bl, 4
jnb     short loc_10013399
test    bl, bl
jnz     loc_1001345a
mov     esi, [edx+80h]
mov     eax, [ecx]
mov     eax, [eax+18h]
lea     edx, [ebp+var_18]
push    edx
push    ecx
mov     [ebp+size], esi
call    eax
mov     ecx, [ebp+arg_4]
mov     ebx, eax
add     esp, 8
mov     eax, esi
cdq
push    edx
push    eax
push    0
push    ecx
mov     [ebp+var_10], eax
mov     [ebp+var_c], edx
call    __allmul
mov     edi, eax
mov     esi, edx
test    ebx, ebx
jnz     loc_10013458
mov     eax, [ebp+var_18]
mov     edx, [ebp+var_14]
cmp     eax, edi
jnz     short loc_100133e3
cmp     edx, esi
jz      short loc_10013458
cmp     edx, esi
jl      short loc_10013402
jg      short loc_100133ed
cmp     eax, edi
jbe     short loc_10013402
mov     edx, [ebp+arg_0]
mov     eax, [edx+3ch]
mov     ecx, [eax]
mov     edx, [ecx+10h]
push    esi
push    edi
push    eax
call    edx
add     esp, 0ch
jmp     short loc_10013449
mov     ecx, [ebp+var_10]
add     ecx, eax
mov     eax, [ebp+var_c]
adc     eax, edx
cmp     eax, esi
jg      short loc_1001344f
jl      short loc_10013416
cmp     ecx, edi
ja      short loc_1001344f
mov     ecx, [ebp+size]
mov     eax, [ebp+arg_0]
mov     ebx, [eax+0b0h]
push    ecx
push    0
push    ebx
call    memset
mov     edx, [ebp+size]
mov     eax, [ebp+arg_0]
mov     eax, [eax+3ch]
add     esp, 0ch
sub     edi, [ebp+var_10]
sbb     esi, [ebp+var_c]
push    esi
push    edi
push    edx
push    ebx
call    sub_100089b0
add     esp, 10h
mov     ebx, eax
test    ebx, ebx
jnz     short loc_10013458
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
mov     [edx+20h], ecx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi+0ch], 0
jnz     short loc_100134c1
mov     eax, [esi+3ch]
mov     ecx, [eax]
mov     edx, [ecx+30h]
push    eax
call    edx
add     esp, 4
test    eax, 1000h
jnz     short loc_100134c1
mov     eax, [esi+3ch]
mov     ecx, [eax]
mov     ecx, [ecx+2ch]
test    ecx, ecx
jz      short loc_1001349f
push    eax
call    ecx
add     esp, 4
jmp     short loc_100134a4
mov     eax, 1000h
mov     [esi+7ch], eax
cmp     eax, 20h
jnb     short loc_100134b3
mov     dword ptr [esi+7ch], 200h
mov     eax, 10000h
cmp     [esi+7ch], eax
jbe     short locret_100134c8
mov     [esi+7ch], eax
retn
mov     dword ptr [esi+7ch], 200h
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
mov     ebx, eax
mov     eax, [ebx]
push    esi
mov     [ebp+var_14], eax
mov     eax, [ebx+40h]
push    edi
lea     edx, [ebp+var_20]
mov     [ebp+var_c], 1
mov     ecx, [eax]
push    edx
push    eax
mov     eax, [ecx+18h]
mov     [ebp+var_8], 0
call    eax
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     loc_100136d4
mov     ecx, [ebx]
mov     edx, [ecx+8]
mov     eax, [ebx+0b0h]
mov     esi, [ebx+40h]
inc     edx
push    edx
push    eax
mov     [ebp+var_4], eax
call    sub_10011f60
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     loc_100136d4
mov     eax, [ebp+var_4]
cmp     byte ptr [eax], 0
jz      short loc_10013554
lea     ecx, [ebp+var_c]
push    ecx
push    edi
push    eax
mov     eax, [ebp+var_14]
mov     edx, [eax+20h]
push    eax
call    edx
mov     edi, eax
add     esp, 10h
test    edi, edi
jnz     loc_100136d4
cmp     [ebp+var_c], 0
jz      loc_100136d4
mov     edx, [ebp+var_1c]
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_4]
push    ecx
mov     ecx, [ebp+var_20]
push    edx
push    ecx
xor     esi, esi
push    eax
lea     ecx, [ebp+var_8]
mov     edx, ebx
mov     [ebx+48h], esi
mov     [ebx+4ch], esi
mov     [ebp+var_10], eax
call    sub_10012410
mov     edi, eax
add     esp, 10h
cmp     edi, esi
jnz     loc_100136c5
cmp     [ebp+var_4], 0ffffffffh
jnz     short loc_100135b9
mov     eax, [ebx+80h]
mov     edi, [ebp+var_20]
mov     ecx, [ebp+var_1c]
add     eax, 8
cdq
xor     esi, esi
sub     edi, [ebx+7ch]
push    edx
push    eax
sbb     ecx, esi
push    ecx
push    edi
call    __alldiv
mov     [ebp+var_4], eax
cmp     [ebp+var_4], 0
jnz     short loc_100135fe
cmp     [ebp+arg_0], 0
jnz     short loc_100135fe
mov     eax, [ebx+7ch]
mov     esi, [ebx+48h]
mov     edi, [ebx+4ch]
xor     ecx, ecx
add     eax, [ebx+50h]
adc     ecx, [ebx+54h]
cmp     eax, esi
jnz     short loc_100135fe
cmp     ecx, edi
jnz     short loc_100135fe
mov     eax, [ebx+80h]
mov     ecx, [ebp+var_20]
add     eax, 8
cdq
sub     ecx, esi
mov     esi, [ebp+var_1c]
push    edx
push    eax
sbb     esi, edi
push    esi
push    ecx
call    __alldiv
mov     [ebp+var_4], eax
mov     eax, [ebx+7ch]
xor     ecx, ecx
cmp     [ebx+48h], eax
jnz     short loc_10013627
cmp     [ebx+4ch], ecx
jnz     short loc_10013627
mov     esi, [ebp+var_8]
push    esi
push    ebx
call    sub_10013370
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     loc_100136d4
mov     [ebx+18h], esi
cmp     [ebp+var_4], 0
mov     [ebp+var_14], 0
jbe     short loc_1001369e
cmp     [ebp+var_10], 0
jz      short loc_10013666
mov     eax, [ebx+58h]
test    eax, eax
jz      short loc_1001364f
mov     dword ptr [eax+10h], 1
mov     eax, [eax+2ch]
test    eax, eax
jnz     short loc_10013641
mov     edi, [ebx+0b4h]
push    0
call    sub_100108f0
add     esp, 4
mov     [ebp+var_10], 0
push    0
push    1
push    0
lea     esi, [ebx+48h]
push    esi
mov     eax, ebx
call    sub_10012e10
mov     edi, eax
add     esp, 10h
test    edi, edi
jnz     short loc_1001368e
mov     eax, [ebp+var_14]
inc     eax
mov     [ebp+var_14], eax
cmp     eax, [ebp+var_4]
jb      short loc_10013634
jmp     short loc_1001369e
cmp     edi, 65h
jnz     short loc_100136ca
mov     ecx, [ebp+var_20]
mov     edx, [ebp+var_1c]
mov     [esi], ecx
mov     [esi+4], edx
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+var_20]
lea     eax, [ebp+var_4]
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    eax
lea     ecx, [ebp+var_8]
mov     edx, ebx
call    sub_10012410
mov     edi, eax
add     esp, 10h
test    edi, edi
jz      loc_10013590
cmp     edi, 65h
jmp     short loc_100136d0
cmp     edi, 20ah
jnz     short loc_100136d4
xor     edi, edi
mov     cl, [ebx+0ch]
mov     [ebx+11h], cl
test    edi, edi
jnz     loc_10013781
mov     edx, [ebx]
mov     ecx, [edx+8]
mov     eax, [ebx+0b0h]
mov     esi, [ebx+40h]
inc     ecx
push    ecx
push    eax
mov     [ebp+var_4], eax
call    sub_10011f60
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     loc_10013781
mov     al, [ebx+0fh]
cmp     al, 4
jnb     short loc_10013713
test    al, al
jnz     short loc_10013752
xor     eax, eax
cmp     [ebx+7], al
jnz     short loc_1001372f
movzx   ecx, byte ptr [ebx+0bh]
mov     eax, [ebx+3ch]
mov     edx, [eax]
push    ecx
push    eax
mov     eax, [edx+14h]
call    eax
add     esp, 8
jmp     short loc_1001374c
mov     ecx, [ebx+3ch]
cmp     [ecx], eax
jz      short loc_1001374c
mov     edx, [ecx]
mov     eax, [edx+28h]
push    0
push    8
push    ecx
call    eax
add     esp, 0ch
cmp     eax, 0ch
jnz     short loc_1001374c
xor     eax, eax
mov     edi, eax
test    eax, eax
jnz     short loc_10013781
mov     esi, [ebp+var_4]
xor     ecx, ecx
cmp     [esi], cl
setnz   cl
push    ecx
call    sub_10012b90
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     short loc_10013781
cmp     [esi], al
jz      short loc_10013781
cmp     [ebp+var_c], eax
jz      short loc_10013781
push    esi
mov     eax, ebx
call    sub_10013120
add     esp, 4
mov     edi, eax
cmp     byte ptr [ebx+0ch], 0
jnz     short loc_100137da
mov     eax, [ebx+3ch]
mov     edx, [eax]
push    eax
mov     eax, [edx+30h]
call    eax
add     esp, 4
test    eax, 1000h
jnz     short loc_100137da
mov     eax, [ebx+3ch]
mov     ecx, [eax]
mov     ecx, [ecx+2ch]
test    ecx, ecx
jz      short loc_100137b0
push    eax
call    ecx
add     esp, 4
jmp     short loc_100137b5
mov     eax, 1000h
mov     [ebx+7ch], eax
cmp     eax, 20h
jnb     short loc_100137c4
mov     dword ptr [ebx+7ch], 200h
mov     eax, 10000h
cmp     [ebx+7ch], eax
jbe     short loc_100137e1
mov     [ebx+7ch], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dword ptr [ebx+7ch], 200h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+10h]
mov     ecx, [esi+3ch]
cmp     dword ptr [ecx], 0
mov     eax, [edi+14h]
mov     ebx, [esi+80h]
mov     [esp+20h+var_4], eax
mov     [esp+20h+var_10], 0
jnz     short loc_10013836
mov     edx, [edi+4]
push    ebx
push    0
push    edx
call    memset
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esi+0b8h]
test    ecx, ecx
jz      short loc_10013862
mov     edx, [edi+4]
push    edx
push    ebx
lea     edx, [esp+28h+var_10]
push    edx
push    eax
push    ecx
call    sub_10018830
add     esp, 14h
test    eax, eax
jnz     short loc_1001389a
cmp     [esp+20h+var_10], eax
jnz     short loc_1001389a
mov     eax, [esp+20h+var_4]
lea     ecx, [eax-1]
mov     eax, [esi+80h]
cdq
push    edx
push    eax
push    0
push    ecx
call    __allmul
mov     ecx, [esi+3ch]
push    edx
mov     edx, eax
push    edx
mov     [esp+28h+var_10], eax
mov     eax, [edi+4]
push    ebx
push    eax
mov     eax, [ecx]
mov     eax, [eax+8]
push    ecx
call    eax
add     esp, 14h
cmp     eax, 20ah
jnz     short loc_1001389a
xor     eax, eax
cmp     [esp+20h+var_4], 1
jnz     short loc_100138d6
test    eax, eax
jz      short loc_100138bb
or      ecx, 0ffffffffh
mov     [esi+64h], ecx
mov     [esi+68h], ecx
mov     [esi+6ch], ecx
mov     [esi+70h], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [edi+4]
mov     ecx, [edi+18h]
mov     [esi+64h], ecx
mov     edx, [edi+1ch]
mov     [esi+68h], edx
mov     ecx, [edi+20h]
mov     [esi+6ch], ecx
mov     edx, [edi+24h]
mov     [esi+70h], edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, [ebx+0b4h]
xor     eax, eax
lea     ecx, [ebp+var_4]
push    ecx
push    eax
push    edx
mov     [ebp+var_8], eax
mov     [ebp+var_4], eax
call    sub_10010550
mov     esi, [ebp+var_4]
add     esp, 0ch
test    esi, esi
jz      short loc_1001394d
mov     edi, 1
cmp     [esi+1ah], di
jnz     short loc_10013977
test    byte ptr [esi+18h], 2
jz      short loc_1001392a
mov     eax, esi
call    sub_100104b0
mov     eax, [esi+1ch]
dec     dword ptr [eax+0ch]
cmp     [esi+14h], edi
jnz     short loc_1001393c
mov     dword ptr [eax+2ch], 0
mov     ecx, [esi]
mov     edx, [eax+28h]
push    edi
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
mov     edi, [ebp+var_8]
mov     eax, [ebx+58h]
test    eax, eax
jz      short loc_1001396e
jmp     short loc_10013960
mov     dword ptr [eax+10h], 1
mov     eax, [eax+2ch]
test    eax, eax
jnz     short loc_10013960
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, esi
call    sub_100137f0
mov     edi, eax
test    edi, edi
jnz     short loc_10013990
mov     eax, [ebx+0ach]
push    esi
call    eax
add     esp, 4
push    esi
call    sub_100154a0
add     esp, 4
jmp     short loc_10013950
push    ecx
mov     ecx, [edi+0b8h]
mov     eax, [edi+1ch]
push    ebx
push    esi
push    edi
push    ecx
mov     [edi+18h], eax
call    sub_10018a70
mov     edx, [edi+0b4h]
add     esp, 8
mov     ebx, eax
call    sub_100109a0
test    eax, eax
jz      short loc_100139e6
test    ebx, ebx
jnz     short loc_100139e6
mov     edx, [eax+14h]
mov     esi, [eax+0ch]
push    edx
push    edi
call    sub_100138e0
add     esp, 8
mov     ebx, eax
mov     eax, esi
test    esi, esi
jnz     short loc_100139ca
pop     esi
mov     eax, ebx
pop     ebx
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
cmp     [ebp+arg_8], 0
push    ebx
push    esi
mov     esi, [ebp+arg_0]
jz      short loc_10013a22
xor     ecx, ecx
lea     eax, [ebp+arg_0]
test    esi, esi
jz      short loc_10013a27
mov     edx, [esi+14h]
cmp     edx, [ebp+arg_4]
ja      short loc_10013a14
lea     eax, [esi+0ch]
inc     ecx
mov     esi, [esi+0ch]
mov     [eax], esi
test    esi, esi
jnz     short loc_10013a08
mov     esi, [ebp+arg_0]
jmp     short loc_10013a27
mov     ecx, 1
add     [edi+0a8h], ecx
cmp     dword ptr [esi+14h], 1
jnz     short loc_10013a93
mov     ecx, [esi+10h]
movzx   eax, byte ptr [ecx+64h]
movzx   edx, byte ptr [ecx+65h]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+66h]
movzx   ecx, byte ptr [ecx+67h]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
mov     ecx, [esi+4]
inc     eax
mov     ebx, eax
shr     ebx, 10h
mov     [ecx+19h], bl
mov     [ebp+arg_0], ebx
mov     edx, eax
shr     edx, 18h
mov     [ecx+18h], dl
mov     [ecx+1bh], al
mov     ebx, eax
shr     ebx, 8
mov     [ecx+1ah], bl
mov     ecx, [esi+4]
mov     [ecx+5ch], dl
mov     dl, byte ptr [ebp+arg_0]
mov     [ecx+5dh], dl
mov     [ecx+5eh], bl
mov     [ecx+5fh], al
mov     eax, [esi+4]
mov     dword ptr [eax+60h], 26e22d00h
movzx   eax, byte ptr [edi+0ah]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    eax
mov     eax, [edi+80h]
push    ecx
mov     ecx, [edi+0b8h]
push    edx
push    esi
push    eax
call    sub_10018d30
add     esp, 14h
mov     [ebp+arg_0], eax
test    eax, eax
jnz     short loc_10013ade
cmp     [edi+58h], eax
jz      short loc_10013ade
mov     ecx, [esi+4]
mov     ebx, [esi+14h]
mov     eax, [edi+58h]
push    ecx
call    sub_10024240
mov     esi, [esi+0ch]
add     esp, 4
test    esi, esi
jnz     short loc_10013ac2
mov     eax, [ebp+arg_0]
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi+0b8h]
cmp     byte ptr [esi+2ch], 0
mov     [ebp+var_4], 0
jz      short loc_10013b2e
cmp     byte ptr [esi+2bh], 0
jnz     short loc_10013b26
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    9
push    1
push    0
push    eax
call    edx
add     esp, 10h
mov     byte ptr [esi+2ch], 0
mov     byte ptr [esi+2fh], 0
movzx   ecx, word ptr [esi+28h]
test    cx, cx
js      short loc_10013b5d
cmp     byte ptr [esi+2bh], 0
jnz     short loc_10013b56
mov     eax, [esi+4]
mov     edx, [eax]
mov     edx, [edx+38h]
movsx   ecx, cx
push    5
push    1
add     ecx, 3
push    ecx
push    eax
call    edx
add     esp, 10h
or      eax, 0ffffffffh
mov     [esi+28h], ax
mov     edi, [edi+0b8h]
lea     ecx, [ebp+var_4]
push    ecx
call    sub_100184e0
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_10013b7a
cmp     [ebp+var_4], eax
jz      short loc_10013ba2
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+58h]
test    eax, eax
jz      short loc_10013b92
mov     dword ptr [eax+10h], 1
mov     eax, [eax+2ch]
test    eax, eax
jnz     short loc_10013b84
mov     edi, [ecx+0b4h]
push    0
call    sub_100108f0
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [esi+0b8h]
sub     esp, 8
push    edi
xor     edi, edi
cmp     eax, edi
jz      short loc_10013bd0
cmp     [eax+28h], di
jl      short loc_10013bd0
mov     eax, [eax+48h]
cmp     eax, edi
jnz     short loc_10013c10
mov     eax, [esi+3ch]
mov     [ebp+var_8], edi
mov     [ebp+var_4], edi
cmp     [eax], edi
jz      short loc_10013bf0
mov     ecx, [eax]
lea     edx, [ebp+var_8]
push    edx
push    eax
mov     eax, [ecx+18h]
call    eax
add     esp, 8
cmp     eax, edi
jnz     short loc_10013c25
mov     eax, [esi+80h]
cdq
mov     ecx, eax
add     ecx, [ebp+var_8]
mov     edi, edx
adc     edi, [ebp+var_4]
push    edx
sub     ecx, 1
push    eax
sbb     edi, 0
push    edi
push    ecx
call    __alldiv
cmp     eax, [esi+84h]
jbe     short loc_10013c1e
mov     [esi+84h], eax
mov     edx, [ebp+arg_0]
mov     [edx], eax
xor     eax, eax
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
mov     esi, eax
xor     eax, eax
cmp     [esi+0ch], al
jnz     short loc_10013ca4
lea     eax, [ebp+var_8]
push    eax
call    sub_10013bb0
add     esp, 4
test    eax, eax
jnz     short loc_10013ca4
cmp     [ebp+var_8], 0
mov     ecx, [esi+0bch]
mov     eax, [esi]
jnz     short loc_10013c73
push    0
push    ecx
mov     ecx, [eax+1ch]
push    eax
call    ecx
add     esp, 0ch
mov     [ebp+var_4], 0
jmp     short loc_10013c83
lea     edx, [ebp+var_4]
push    edx
push    0
push    ecx
push    eax
mov     eax, [eax+20h]
call    eax
add     esp, 10h
test    eax, eax
jnz     short loc_10013ca4
cmp     [ebp+var_4], eax
jz      short loc_10013c9a
push    eax
call    sub_10016840
add     esp, 4
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi+5], 5
jnz     short loc_10013ca4
mov     byte ptr [esi+5], 0
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
push    ebx
push    esi
push    edi
mov     edi, eax
mov     eax, [ebp+arg_0]
xor     ebx, ebx
mov     [ebp+var_4], ebx
cmp     eax, ebx
jz      short loc_10013d0f
mov     eax, [eax+14h]
push    200h
mov     [ebp+var_c], eax
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10013cf4
push    200h
push    ebx
push    esi
call    memset
mov     ecx, [ebp+var_c]
add     esp, 0ch
mov     [esi], ecx
mov     [ebp+var_4], esi
test    esi, esi
jnz     short loc_10013d05
lea     eax, [esi+7]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_0]
mov     ecx, [edx+14h]
mov     eax, edx
jmp     short loc_10013d12
mov     ecx, [edi+1ch]
mov     [edi+18h], ecx
mov     cl, [edi+0ch]
mov     [edi+11h], cl
test    eax, eax
jnz     short loc_10013d33
cmp     [edi+0b8h], ebx
jz      short loc_10013d33
call    sub_100139a0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_0]
mov     edx, [edi+48h]
mov     eax, [edi+4ch]
lea     esi, [edi+48h]
mov     [ebp+var_10], esi
mov     [ebp+var_20], edx
mov     [ebp+var_1c], eax
test    ecx, ecx
jz      short loc_10013da8
cmp     [edi+0b8h], ebx
jnz     short loc_10013da8
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     edx, eax
or      edx, ecx
jnz     short loc_10013d66
mov     eax, [ebp+var_20]
mov     ecx, [ebp+var_1c]
mov     [ebp+var_18], eax
mov     eax, [ebp+arg_0]
mov     edx, [eax]
mov     [esi], edx
mov     eax, [eax+4]
mov     [ebp+var_14], ecx
mov     [esi+4], eax
mov     ecx, [esi+4]
cmp     ecx, [ebp+var_14]
jg      short loc_10013daf
jl      short loc_10013d8a
mov     edx, [esi]
cmp     edx, [ebp+var_18]
jnb     short loc_10013daf
mov     eax, [ebp+var_4]
push    1
push    1
push    eax
push    esi
mov     eax, edi
call    sub_10012e10
mov     ebx, eax
add     esp, 10h
test    ebx, ebx
jz      short loc_10013d79
jmp     loc_10013e85
mov     [esi], ebx
mov     [esi+4], ebx
jmp     short loc_10013db7
test    ebx, ebx
jnz     loc_10013e85
mov     eax, [ebp+var_1c]
cmp     [esi+4], eax
jg      loc_10013e85
jl      short loc_10013dd0
mov     edx, [esi]
cmp     edx, [ebp+var_20]
jnb     loc_10013e85
mov     edx, [ebp+var_20]
lea     ecx, [ebp+var_8]
push    ecx
push    eax
push    edx
push    0
lea     ecx, [ebp+var_14]
mov     edx, edi
mov     [ebp+var_8], 0
call    sub_10012410
add     esp, 10h
cmp     [ebp+var_8], 0
mov     ebx, eax
mov     [ebp+var_c], ebx
jnz     short loc_10013e39
mov     eax, [edi+7ch]
mov     ecx, [esi]
xor     edx, edx
add     eax, [edi+50h]
adc     edx, [edi+54h]
cmp     eax, ecx
jnz     short loc_10013e39
mov     eax, [esi+4]
mov     [ebp+var_24], eax
cmp     edx, eax
jnz     short loc_10013e39
mov     eax, [edi+80h]
mov     esi, [ebp+var_20]
add     eax, 8
cdq
sub     esi, ecx
mov     ecx, [ebp+var_1c]
sbb     ecx, [ebp+var_24]
push    edx
push    eax
push    ecx
push    esi
call    __alldiv
mov     esi, [ebp+var_10]
mov     [ebp+var_8], eax
mov     [ebp+var_c], 0
test    ebx, ebx
jnz     short loc_10013e85
mov     edx, [ebp+var_8]
cmp     [ebp+var_c], edx
jnb     loc_10013db7
mov     eax, [esi+4]
cmp     eax, [ebp+var_1c]
jg      loc_10013db7
jl      short loc_10013e69
mov     ecx, [esi]
cmp     ecx, [ebp+var_20]
jnb     loc_10013db7
mov     edx, [ebp+var_4]
push    1
push    1
push    edx
push    esi
mov     eax, edi
call    sub_10012e10
inc     [ebp+var_c]
mov     ebx, eax
add     esp, 10h
test    ebx, ebx
jz      short loc_10013e44
mov     ecx, [ebp+arg_0]
test    ecx, ecx
jz      loc_10013f21
mov     eax, [edi+80h]
mov     ecx, [ecx+18h]
push    0
add     eax, 4
cdq
push    ecx
push    edx
push    eax
call    __allmul
mov     [ebp+var_18], eax
mov     eax, [edi+0b8h]
mov     [ebp+var_14], edx
test    eax, eax
jz      short loc_10013eed
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+28h]
cmp     edx, [eax+68h]
jz      short loc_10013ecf
mov     dword ptr [ecx+1ch], 0
mov     edx, [eax+68h]
mov     [ecx+28h], edx
mov     edx, [ecx+1ch]
cmp     edx, [eax+44h]
jnb     short loc_10013eeb
mov     [eax+44h], edx
mov     edx, [ecx+20h]
mov     [eax+4ch], edx
mov     ecx, [ecx+24h]
mov     [eax+50h], ecx
call    sub_10016da0
xor     ebx, ebx
mov     edx, [ebp+arg_0]
mov     eax, [edx+18h]
mov     [ebp+arg_0], eax
test    ebx, ebx
jnz     short loc_10013f21
mov     ecx, [ebp+arg_0]
cmp     ecx, [edi+34h]
jnb     short loc_10013f21
mov     edx, [ebp+var_4]
push    1
push    0
push    edx
lea     eax, [ebp+var_18]
push    eax
mov     eax, edi
call    sub_10012e10
inc     [ebp+arg_0]
mov     ebx, eax
add     esp, 10h
test    ebx, ebx
jz      short loc_10013efa
mov     edi, [ebp+var_4]
test    edi, edi
jz      short loc_10013f57
cmp     dword ptr [edi+8], 0
jz      short loc_10013f4b
add     edi, 0ch
mov     [ebp+arg_0], 7dh
mov     ecx, [edi]
push    ecx
call    sub_100101c0
add     esp, 4
add     edi, 4
dec     [ebp+arg_0]
jnz     short loc_10013f38
mov     edx, [ebp+var_4]
push    edx
call    sub_10009770
add     esp, 4
test    ebx, ebx
jnz     short loc_10013f66
mov     eax, [ebp+var_20]
mov     ecx, [ebp+var_1c]
mov     [esi], eax
mov     [esi+4], ecx
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     edx, 1
jz      short loc_10013f82
cmp     byte ptr [eax+0ch], 0
jnz     short loc_10013f82
xor     ecx, ecx
jmp     short loc_10013f87
mov     ecx, 1
mov     [eax+7], cl
cmp     edx, 3
jnz     short loc_10013f9c
cmp     byte ptr [eax+0ch], 0
jnz     short loc_10013f9c
mov     edx, 1
jmp     short loc_10013f9e
xor     edx, edx
mov     [eax+8], dl
test    cl, cl
jz      short loc_10013faf
mov     byte ptr [eax+0bh], 0
mov     byte ptr [eax+9], 0
jmp     short loc_10013fd7
cmp     [ebp+arg_0], 0
jz      short loc_10013fbf
mov     byte ptr [eax+0bh], 3
mov     byte ptr [eax+9], 3
jmp     short loc_10013fd7
cmp     [ebp+arg_4], 0
jz      short loc_10013fcf
mov     byte ptr [eax+0bh], 2
mov     byte ptr [eax+9], 3
jmp     short loc_10013fd7
mov     cl, 2
mov     [eax+0bh], cl
mov     [eax+9], cl
mov     cl, [eax+0bh]
mov     [eax+0ah], cl
test    dl, dl
jz      short loc_10013fe7
or      cl, 20h
mov     [eax+0ah], cl
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [eax]
push    esi
xor     esi, esi
cmp     byte ptr [edi+0eh], 0
mov     [ebp+var_4], esi
jz      short loc_10014011
cmp     [edi+18h], esi
jnz     loc_100140d6
mov     ecx, [edi+0b4h]
cmp     [ecx+0ch], esi
jnz     loc_100140d6
cmp     ebx, esi
jz      loc_100140d6
cmp     ebx, [edi+80h]
jz      loc_100140d6
cmp     byte ptr [edi+0fh], 0
mov     [ebp+var_10], esi
mov     [ebp+var_c], esi
jbe     short loc_1001405d
mov     eax, [edi+3ch]
cmp     [eax], esi
jz      short loc_1001405d
mov     edx, [eax]
mov     edx, [edx+18h]
lea     ecx, [ebp+var_10]
push    ecx
push    eax
call    edx
add     esp, 8
mov     [ebp+var_4], eax
cmp     eax, esi
jnz     short loc_100140d6
mov     eax, ebx
call    sub_10010b90
mov     [ebp+var_8], eax
cmp     eax, esi
jnz     short loc_10014074
mov     [ebp+var_4], 7
jmp     short loc_100140d6
mov     edx, edi
call    sub_10012900
xor     eax, eax
mov     ecx, ebx
add     ecx, [ebp+var_10]
mov     edx, eax
adc     edx, [ebp+var_c]
push    eax
sub     ecx, 1
push    ebx
sbb     edx, esi
push    edx
push    ecx
call    __alldiv
mov     esi, [edi+0b0h]
mov     [edi+18h], eax
mov     [edi+80h], ebx
call    sub_10010c90
mov     eax, [ebp+var_8]
mov     esi, [edi+0b4h]
mov     [edi+0b0h], eax
mov     eax, [esi+28h]
test    eax, eax
jz      short loc_100140d1
push    eax
call    dword_100802bc
add     esp, 4
xor     eax, eax
mov     [esi+28h], eax
mov     [esi+2ch], eax
mov     [esi+14h], ebx
xor     esi, esi
mov     eax, [ebp+var_4]
mov     ecx, [edi+80h]
mov     edx, [ebp+arg_0]
mov     [edx], ecx
cmp     eax, esi
jnz     short loc_100140fc
cmp     [ebp+arg_4], esi
jge     short loc_100140f4
movsx   ecx, word ptr [edi+76h]
mov     [ebp+arg_4], ecx
mov     dx, word ptr [ebp+arg_4]
mov     [edi+76h], dx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    edi
push    64h
xor     edi, edi
push    edi
push    esi
call    memset
mov     eax, [ebp+arg_0]
mov     eax, [eax+3ch]
add     esp, 0ch
cmp     [eax], edi
jz      short loc_1001414e
mov     ecx, [eax]
mov     edx, [ecx+8]
push    edi
push    edi
push    64h
push    esi
push    eax
call    edx
add     esp, 14h
cmp     eax, 20ah
jnz     short loc_10014150
xor     eax, eax
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
pop     edi
mov     esp, ebp
pop     ebp
retn
push    esi
mov     cl, [edi+10h]
movzx   edx, cl
xor     eax, eax
cmp     edx, ebx
jl      short loc_10014172
cmp     cl, 5
jnz     short loc_100141b6
mov     eax, [edi+3ch]
mov     ecx, [eax]
mov     edx, [ecx+1ch]
push    ebx
push    eax
call    edx
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_100141a6
cmp     esi, 5
jnz     short loc_100141b4
mov     eax, [edi+9ch]
mov     ecx, [edi+98h]
push    eax
call    ecx
add     esp, 4
test    eax, eax
jnz     short loc_10014161
mov     eax, esi
pop     esi
retn
cmp     byte ptr [edi+10h], 5
jnz     short loc_100141b1
cmp     ebx, 4
jnz     short loc_100141b4
mov     [edi+10h], bl
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, eax
cmp     byte ptr [esi+7], 0
jnz     short loc_100141dd
mov     eax, [esi+40h]
mov     ecx, [eax]
mov     edx, [ecx+14h]
push    2
push    eax
call    edx
add     esp, 8
test    eax, eax
jnz     short loc_100141ef
mov     eax, [esi+40h]
mov     ecx, [eax]
mov     edx, [ecx+18h]
add     esi, 50h
push    esi
push    eax
call    edx
add     esp, 8
pop     esi
retn
push    ebx
mov     ebx, eax
mov     eax, dword_100816bc
push    esi
mov     esi, [ebx+0b0h]
push    edi
test    eax, eax
jz      short loc_10014216
call    eax
mov     eax, [ebx+80h]
movzx   ecx, byte ptr [ebx+9]
push    esi
push    eax
mov     eax, [ebx+0b8h]
push    ecx
mov     byte ptr [ebx+4], 0
call    sub_10017e40
mov     eax, [ebx+58h]
add     esp, 0ch
mov     dword ptr [ebx+0b8h], 0
test    eax, eax
jz      short loc_1001425a
mov     ecx, 1
jmp     short loc_10014250
mov     [eax+10h], ecx
mov     eax, [eax+2ch]
test    eax, eax
jnz     short loc_10014250
mov     edi, [ebx+0b4h]
push    0
call    sub_100108f0
add     esp, 4
cmp     byte ptr [ebx+0eh], 0
jnz     loc_100142fc
mov     eax, [ebx+40h]
cmp     dword ptr [eax], 0
jz      short loc_100142be
cmp     byte ptr [ebx+7], 0
jnz     short loc_10014293
mov     edx, [eax]
push    2
push    eax
mov     eax, [edx+14h]
call    eax
add     esp, 8
test    eax, eax
jnz     short loc_100142a5
mov     eax, [ebx+40h]
mov     ecx, [eax]
lea     edx, [ebx+50h]
push    edx
push    eax
mov     eax, [ecx+18h]
call    eax
add     esp, 8
mov     ecx, eax
and     ecx, 0ffh
cmp     ecx, 0dh
jz      short loc_100142b7
cmp     ecx, 0ah
jnz     short loc_100142be
mov     [ebx+28h], eax
mov     byte ptr [ebx+0fh], 6
mov     al, [ebx+0fh]
cmp     al, 6
jz      short loc_100142fc
test    al, al
jz      short loc_100142fc
cmp     al, 2
jb      short loc_100142ec
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_100142d8
call    eax
mov     eax, ebx
call    sub_10016100
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_100142fc
call    eax
jmp     short loc_100142fc
cmp     byte ptr [ebx+4], 0
jnz     short loc_100142fc
push    0
call    sub_10012b90
add     esp, 4
call    sub_10012a40
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_1001430c
call    eax
mov     edi, [ebx+40h]
mov     eax, [edi]
test    eax, eax
jz      short loc_10014324
mov     ecx, [eax+4]
push    edi
call    ecx
add     esp, 4
mov     dword ptr [edi], 0
mov     edi, [ebx+3ch]
mov     eax, [edi]
test    eax, eax
jz      short loc_1001433c
mov     edx, [eax+4]
push    edi
call    edx
add     esp, 4
mov     dword ptr [edi], 0
call    sub_10010c90
mov     eax, [ebx+0b4h]
mov     eax, [eax+28h]
test    eax, eax
jz      short loc_10014358
push    eax
call    dword_100802bc
add     esp, 4
push    ebx
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
xor     eax, eax
pop     ebx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+2ch+var_4], eax
push    ebx
push    esi
mov     esi, ecx
cmp     dword ptr [esi+0b8h], 0
push    edi
jnz     short loc_100143a6
mov     ebx, 4
mov     edi, esi
call    sub_10014160
test    eax, eax
jnz     loc_100145bc
cmp     byte ptr [esi+7], 0
jnz     loc_1001458f
mov     eax, [esi+40h]
cmp     dword ptr [eax], 0
jz      loc_10014583
cmp     byte ptr [esi+5], 4
jz      loc_10014583
mov     eax, [esi+3ch]
mov     ecx, [eax]
mov     edx, [ecx+30h]
push    eax
call    edx
mov     edi, eax
mov     ebx, edi
add     esp, 4
and     ebx, 200h
mov     [esp+38h+var_28], edi
mov     [esp+38h+var_24], ebx
jnz     loc_10014521
mov     eax, ds:dword_10076780
mov     ecx, ds:dword_10076784
mov     [esp+38h+var_18], eax
mov     eax, [esi+2ch]
mov     edx, eax
shr     edx, 18h
mov     [esp+38h+var_14], ecx
mov     [esp+38h+var_10], dl
mov     ecx, eax
mov     edx, eax
shr     ecx, 10h
shr     edx, 8
mov     [esp+38h+var_d], al
mov     eax, esi
mov     [esp+38h+var_f], cl
mov     [esp+38h+var_e], dl
call    sub_100120e0
push    edx
mov     edi, eax
mov     eax, [esi+40h]
mov     ecx, [eax]
push    edi
mov     [esp+40h+var_1c], edx
push    8
lea     edx, [esp+44h+var_c]
push    edx
push    eax
mov     eax, [ecx+8]
call    eax
add     esp, 14h
test    eax, eax
jnz     short loc_100144c0
mov     eax, 8
mov     ecx, offset dword_10076780
lea     edx, [esp+38h+var_c]
mov     ebx, [edx]
cmp     ebx, [ecx]
jnz     short loc_1001446d
sub     eax, 4
add     ecx, 4
add     edx, 4
cmp     eax, 4
jnb     short loc_10014457
jmp     short loc_100144a1
movzx   eax, bl
movzx   ebx, byte ptr [ecx]
sub     eax, ebx
jnz     short loc_10014499
movzx   eax, byte ptr [edx+1]
movzx   ebx, byte ptr [ecx+1]
sub     eax, ebx
jnz     short loc_10014499
movzx   eax, byte ptr [edx+2]
movzx   ebx, byte ptr [ecx+2]
sub     eax, ebx
jnz     short loc_10014499
movzx   eax, byte ptr [edx+3]
movzx   ecx, byte ptr [ecx+3]
sub     eax, ecx
sar     eax, 1fh
or      eax, 1
jnz     short loc_100144cb
mov     ecx, [esp+38h+var_1c]
mov     eax, [esi+40h]
mov     edx, [eax]
mov     edx, [edx+0ch]
push    ecx
push    edi
push    1
push    offset byte_1007602f
push    eax
call    edx
add     esp, 14h
test    eax, eax
jz      short loc_100144cb
cmp     eax, 20ah
jnz     loc_100145bc
cmp     byte ptr [esi+8], 0
mov     edi, [esp+38h+var_28]
jz      short loc_100144f8
test    edi, 400h
jnz     short loc_100144f8
movzx   ecx, byte ptr [esi+0bh]
mov     eax, [esi+40h]
mov     edx, [eax]
push    ecx
push    eax
mov     eax, [edx+14h]
call    eax
add     esp, 8
test    eax, eax
jnz     loc_100145bc
mov     edx, [esi+54h]
mov     ecx, [esi+50h]
mov     eax, [esi+40h]
mov     ebx, [eax]
push    edx
mov     edx, [ebx+0ch]
push    ecx
push    0ch
lea     ecx, [esp+44h+var_18]
push    ecx
push    eax
call    edx
add     esp, 14h
test    eax, eax
jnz     loc_100145bc
mov     ebx, [esp+38h+var_24]
test    edi, 400h
jnz     short loc_1001454f
mov     al, [esi+0bh]
xor     ecx, ecx
cmp     al, 3
setnz   cl
movzx   eax, al
dec     ecx
and     ecx, 10h
or      ecx, eax
mov     eax, [esi+40h]
mov     edx, [eax]
push    ecx
push    eax
mov     eax, [edx+14h]
call    eax
add     esp, 8
test    eax, eax
jnz     short loc_100145bc
cmp     [ebp+arg_0], 0
mov     ecx, [esi+48h]
mov     edx, [esi+4ch]
mov     [esi+50h], ecx
mov     [esi+54h], edx
jz      short loc_1001458f
test    ebx, ebx
jnz     short loc_1001458f
mov     [esi+2ch], ebx
call    sub_100121f0
test    eax, eax
jz      short loc_1001458f
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+2ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+48h]
mov     ecx, [esi+4ch]
mov     [esi+50h], eax
mov     [esi+54h], ecx
mov     ecx, [esi+0b4h]
mov     eax, [ecx]
test    eax, eax
jz      short loc_100145b0
jmp     short loc_100145a0
mov     edx, 0fffbh
and     [eax+18h], dx
mov     eax, [eax+20h]
test    eax, eax
jnz     short loc_100145a0
mov     eax, [ecx+4]
mov     [ecx+8], eax
mov     byte ptr [esi+0fh], 4
xor     eax, eax
mov     ecx, [esp+38h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
mov     ebx, [ebp+arg_0]
mov     edx, [ebx+3ch]
cmp     dword ptr [edx], 0
push    esi
push    edi
mov     edi, eax
mov     [ebp+var_4], 0
jnz     short loc_10014614
mov     eax, [ebx+78h]
mov     ecx, [ebx]
or      eax, 1eh
push    0
and     eax, 87f7fh
push    eax
mov     eax, [ecx+18h]
push    edx
push    0
push    ecx
call    eax
add     esp, 14h
mov     [ebp+var_4], eax
test    eax, eax
jnz     loc_1001476a
mov     ecx, [ebx+18h]
cmp     ecx, [ebx+24h]
jbe     short loc_1001464d
mov     eax, [ebx+80h]
push    0
cdq
push    ecx
push    edx
push    eax
call    __allmul
mov     [ebp+var_c], edx
mov     [ebp+var_10], eax
mov     eax, [ebx+3ch]
mov     ecx, [eax]
lea     edx, [ebp+var_10]
push    edx
push    5
push    eax
mov     eax, [ecx+28h]
call    eax
mov     ecx, [ebx+18h]
add     esp, 0ch
mov     [ebx+24h], ecx
test    edi, edi
jz      loc_10014767
mov     esi, [edi+14h]
mov     [ebp+var_8], esi
cmp     esi, [ebx+18h]
ja      loc_1001475a
test    byte ptr [edi+18h], 20h
jnz     loc_1001475a
mov     eax, [ebx+80h]
cdq
push    edx
push    eax
lea     ecx, [esi-1]
push    0
push    ecx
call    __allmul
mov     [ebp+var_10], eax
mov     [ebp+var_c], edx
cmp     esi, 1
jnz     short loc_100146ed
mov     esi, [edi+10h]
movzx   ecx, byte ptr [esi+64h]
movzx   edx, byte ptr [esi+65h]
movzx   eax, byte ptr [esi+66h]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [esi+67h]
mov     esi, [edi+4]
shl     ecx, 8
or      ecx, eax
shl     ecx, 8
or      ecx, edx
inc     ecx
mov     [esi+1bh], cl
mov     eax, ecx
mov     edx, ecx
shr     eax, 18h
mov     [esi+18h], al
shr     edx, 10h
mov     [esi+19h], dl
mov     ebx, ecx
shr     ebx, 8
mov     [esi+1ah], bl
mov     esi, [edi+4]
mov     [esi+5eh], bl
mov     ebx, [ebp+arg_0]
mov     [esi+5ch], al
mov     [esi+5dh], dl
mov     [esi+5fh], cl
mov     ecx, [edi+4]
mov     esi, [ebp+var_8]
mov     dword ptr [ecx+60h], 26e22d00h
push    [ebp+var_c]
mov     eax, [edi+4]
push    [ebp+var_10]
mov     ecx, [ebx+80h]
mov     [ebp+var_8], eax
mov     eax, [ebx+3ch]
mov     edx, [eax]
mov     edx, [edx+0ch]
push    ecx
mov     ecx, [ebp+var_8]
push    ecx
push    eax
call    edx
add     esp, 14h
mov     [ebp+var_4], eax
cmp     esi, 1
jnz     short loc_10014735
mov     eax, [ebp+var_8]
mov     ecx, [eax+18h]
mov     [ebx+64h], ecx
mov     edx, [eax+1ch]
mov     [ebx+68h], edx
mov     ecx, [eax+20h]
mov     [ebx+6ch], ecx
mov     edx, [eax+24h]
mov     [ebx+70h], edx
cmp     esi, [ebx+20h]
jbe     short loc_1001473d
mov     [ebx+20h], esi
inc     dword ptr [ebx+0a8h]
mov     eax, [edi+4]
mov     ecx, [ebp+arg_0]
push    eax
mov     eax, [ecx+58h]
mov     ebx, esi
call    sub_10024240
mov     ebx, [ebp+arg_0]
add     esp, 4
cmp     [ebp+var_4], 0
mov     edi, [edi+0ch]
jz      loc_1001464d
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
sub     esp, 8
push    ebx
push    esi
mov     esi, [eax+10h]
mov     dl, [esi+5]
push    edi
cmp     dl, 2
jz      loc_1001486b
mov     ecx, [esi+44h]
xor     eax, eax
cmp     [ecx], eax
jnz     short loc_100147e2
cmp     dl, 4
jz      short loc_100147c5
cmp     [esi+15h], al
jnz     short loc_100147c5
mov     eax, [esi]
push    0
push    201eh
push    ecx
mov     ecx, [eax+18h]
push    0
push    eax
call    ecx
add     esp, 14h
jmp     short loc_100147e2
xor     edx, edx
mov     [ecx+4], edx
mov     [ecx+8], edx
mov     [ecx+0ch], edx
mov     [ecx+10h], edx
mov     [ecx+14h], edx
mov     [ecx+18h], edx
mov     [ecx+1ch], edx
mov     dword ptr [ecx], offset dword_10076840
test    eax, eax
jnz     loc_1001487d
mov     eax, [esi+80h]
mov     ecx, [esi+34h]
push    0
add     eax, 4
cdq
push    ecx
push    edx
push    eax
call    __allmul
mov     ecx, [esi+44h]
mov     ebx, edx
mov     edi, eax
mov     eax, [ebp+arg_0]
mov     edx, [eax+4]
mov     eax, [eax+14h]
mov     [ebp+var_8], edx
mov     edx, eax
shr     edx, 18h
mov     [ebp+var_4], dl
mov     edx, eax
shr     edx, 10h
mov     [ebp+var_3], dl
mov     edx, eax
push    ebx
shr     edx, 8
push    edi
mov     [ebp+var_2], dl
mov     [ebp+var_1], al
mov     eax, [ecx]
mov     eax, [eax+0ch]
push    4
lea     edx, [ebp+var_4]
push    edx
push    ecx
call    eax
add     esp, 14h
test    eax, eax
jnz     short loc_1001487d
mov     ecx, [esi+80h]
mov     eax, [esi+44h]
mov     edx, [eax]
mov     edx, [edx+0ch]
add     edi, 4
adc     ebx, 0
push    ebx
push    edi
push    ecx
mov     ecx, [ebp+var_8]
push    ecx
push    eax
call    edx
add     esp, 14h
test    eax, eax
jnz     short loc_1001487d
mov     eax, [ebp+arg_0]
inc     dword ptr [esi+34h]
mov     ecx, [eax+14h]
push    ecx
call    sub_100129f0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     dword ptr [edi+28h], 0
jz      short loc_100148ac
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+13h], 0
jnz     short loc_100148a3
cmp     byte ptr [edi+14h], 0
mov     ebx, [ebp+arg_4]
mov     al, 4
jz      short loc_100148c2
test    [ebx+18h], al
jnz     short loc_100148a3
mov     dword ptr [ebx+0ch], 0
cmp     dword ptr [edi+0b8h], 0
jz      short loc_100148fb
mov     eax, ebx
call    sub_10011d90
test    eax, eax
jz      short loc_100148ec
push    ebx
call    sub_10014780
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_10014952
push    0
push    0
push    ebx
call    sub_100139f0
add     esp, 0ch
jmp     short loc_10014945
test    [ebx+18h], al
jnz     short loc_10014906
cmp     byte ptr [edi+0fh], 3
jnz     short loc_10014918
push    1
mov     ecx, edi
call    sub_10014370
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_10014952
mov     eax, [ebx+14h]
cmp     eax, [edi+18h]
jbe     short loc_1001493a
mov     eax, ebx
call    sub_10011d90
test    eax, eax
jz      short loc_1001493a
push    ebx
call    sub_10014780
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_10014952
push    edi
mov     eax, ebx
call    sub_100145d0
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_10014952
mov     eax, ebx
call    sub_10010790
mov     eax, esi
and     eax, 0ffh
cmp     eax, 0dh
jz      short loc_10014963
cmp     eax, 0ah
jnz     short loc_1001496a
mov     [edi+28h], esi
mov     byte ptr [edi+0fh], 6
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     edx, [ebp+arg_0]
mov     eax, ecx
push    ebx
not     eax
and     eax, 1
push    esi
mov     [ebp+var_20], eax
mov     eax, [edx+4]
push    edi
xor     edi, edi
xor     ebx, ebx
mov     [ebp+var_4], edi
mov     [ebp+var_1c], edi
mov     [ebp+var_14], edi
mov     [ebp+var_c], 400h
mov     [ebp+src], edi
mov     [ebp+var_8], edi
cmp     eax, 20h
jle     short loc_100149c3
add     eax, 7
and     eax, 0fffffff8h
mov     [ebp+var_10], eax
jmp     short loc_100149ca
mov     [ebp+var_10], 20h
mov     eax, [ebp+arg_4]
mov     esi, [ebp+arg_8]
mov     [eax], edi
test    cl, 2
jz      loc_10014bc4
mov     [ebp+var_14], 1
cmp     esi, edi
jz      short loc_10014a13
cmp     [esi], bl
jz      loc_10014bc4
push    edi
mov     ebx, esi
call    sub_10009b70
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_10014cd2
mov     ecx, ebx
call    sub_1000ba20
mov     edi, eax
mov     [ebp+arg_8], 0
mov     edx, [ebp+arg_0]
mov     eax, [edx+4]
mov     edx, [ebp+var_10]
add     eax, 7
and     eax, 0fffffff8h
add     eax, [ebp+var_8]
lea     ecx, [edi+edi*2]
lea     eax, [eax+edx*2]
lea     eax, [ecx+eax+101h]
push    eax
mov     [ebp+size], eax
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      loc_10014cc9
mov     ecx, [ebp+size]
push    ecx
push    0
push    esi
call    memset
mov     ecx, [ebp+arg_0]
lea     eax, [esi+0c0h]
mov     [esi+0b4h], eax
add     eax, 30h
mov     [esi+3ch], eax
mov     edx, [ecx+4]
add     edx, 7
and     edx, 0fffffff8h
add     eax, edx
mov     edx, [ebp+var_10]
mov     [esi+44h], eax
add     eax, edx
mov     [esi+40h], eax
add     eax, edx
add     esp, 0ch
mov     [esi+90h], eax
test    ebx, ebx
jz      loc_10014b40
mov     ecx, [ebp+var_8]
push    edi
lea     edx, [eax+ecx]
lea     ecx, [edx+edi+1]
push    ebx
push    eax
mov     [esi+94h], ecx
call    memcpy
mov     eax, [ebp+var_8]
add     esp, 0ch
test    eax, eax
jz      short loc_10014acc
mov     edx, [ebp+src]
push    eax
mov     eax, [esi+90h]
push    edx
lea     ecx, [eax+edi+1]
push    ecx
call    memcpy
add     esp, 0ch
mov     edx, [esi+94h]
push    edi
push    ebx
push    edx
call    memcpy
mov     ecx, ds:dword_1007988c
mov     eax, [esi+94h]
mov     [eax+edi], ecx
mov     edx, ds:dword_10079890
mov     [eax+edi+4], edx
mov     cl, ds:byte_10079894
add     esp, 0ch
mov     [eax+edi+8], cl
mov     edx, [esi+94h]
push    edi
lea     eax, [edx+edi+9]
push    ebx
push    eax
mov     [esi+0bch], eax
call    memcpy
mov     eax, [esi+0bch]
mov     ecx, ds:dword_10079898
mov     [eax+edi], ecx
mov     dl, ds:byte_1007989c
add     esp, 0ch
push    ebx
mov     [eax+edi+4], dl
call    sub_10009770
mov     ecx, [ebp+arg_0]
add     esp, 4
mov     eax, [ebp+arg_8]
mov     ebx, [ebp+arg_c]
mov     [esi], ecx
mov     [esi+78h], ebx
test    eax, eax
jz      loc_10014ce3
cmp     byte ptr [eax], 0
jz      loc_10014ce3
mov     eax, [esi+3ch]
mov     edx, [esi+90h]
lea     edi, [ebp+arg_0]
push    edi
and     ebx, 87f7fh
push    ebx
push    eax
mov     eax, [ecx+18h]
push    edx
push    ecx
mov     [ebp+arg_0], 0
call    eax
mov     ebx, [ebp+arg_0]
mov     edi, eax
add     esp, 14h
and     ebx, 1
test    edi, edi
jnz     loc_10014d13
test    ebx, ebx
jnz     loc_10014cf9
call    sub_10013470
mov     eax, [esi+7ch]
cmp     eax, 400h
jbe     loc_10014cf9
cmp     eax, 2000h
jbe     loc_10014cde
mov     [ebp+var_c], 2000h
jmp     loc_10014cf9
cmp     esi, edi
jz      loc_10014a13
cmp     [esi], bl
jz      loc_10014a13
mov     edi, [edx+8]
inc     edi
lea     ecx, [edi+edi]
push    ecx
call    sub_100094a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_10014cd2
mov     eax, [ebp+arg_0]
push    ebx
push    edi
mov     byte ptr [ebx], 0
mov     edx, [eax+24h]
push    esi
push    eax
call    edx
mov     edx, eax
add     esp, 10h
cmp     byte ptr [ebx], 0
mov     [ebp+var_4], edx
mov     eax, ebx
jz      short loc_10014c16
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10014c10
sub     eax, ebx
and     eax, 3fffffffh
cmp     byte ptr [esi], 0
mov     edi, eax
mov     eax, esi
jz      short loc_10014c2c
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10014c26
sub     eax, esi
and     eax, 3fffffffh
cmp     byte ptr [eax+esi+1], 0
lea     esi, [eax+esi+1]
mov     [ebp+src], esi
mov     ecx, esi
jz      short loc_10014c88
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_10014c56
lea     ebx, [ebx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10014c50
sub     eax, ecx
and     eax, 3fffffffh
lea     ecx, [ecx+eax+1]
mov     eax, ecx
test    ecx, ecx
jz      short loc_10014c7d
cmp     byte ptr [ecx], 0
jz      short loc_10014c76
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10014c70
sub     eax, ecx
and     eax, 3fffffffh
cmp     byte ptr [ecx+eax+1], 0
lea     ecx, [ecx+eax+1]
jnz     short loc_10014c43
sub     ecx, esi
inc     ecx
mov     [ebp+var_8], ecx
test    edx, edx
jnz     short loc_10014cb6
mov     ecx, [ebp+arg_0]
lea     eax, [edi+8]
cmp     eax, [ecx+8]
jle     loc_10014a13
mov     eax, 0a185h
call    sub_10071c80
mov     [ebp+var_4], eax
test    eax, eax
jz      loc_10014a13
push    ebx
call    sub_10009770
mov     eax, [ebp+var_4]
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
call    sub_10009770
add     esp, 4
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_c], eax
jmp     short loc_10014cf9
and     ebx, 1
cmp     [ebp+var_4], 0
mov     [ebp+var_1c], 1
mov     word ptr [esi+0fh], 401h
jnz     short loc_10014d10
lea     ecx, [ebp+var_c]
push    0ffffffffh
push    ecx
mov     edi, esi
call    sub_10013ff0
add     esp, 8
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_10014d3d
mov     edi, [ebp+var_4]
mov     ebx, [esi+3ch]
mov     eax, [ebx]
test    eax, eax
jz      short loc_10014d2b
mov     edx, [eax+4]
push    ebx
call    edx
add     esp, 4
mov     dword ptr [ebx], 0
push    esi
call    sub_10009770
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [esi+0b4h]
push    30h
push    0
push    edi
call    memset
mov     ecx, [ebp+var_14]
mov     eax, [ebp+var_c]
mov     [edi+14h], eax
xor     edx, edx
add     esp, 0ch
test    ecx, ecx
setz    dl
mov     eax, ecx
neg     eax
sbb     eax, eax
not     eax
mov     dword ptr [edi+18h], 50h
and     eax, offset sub_10014890
mov     [edi+20h], eax
mov     al, byte ptr [ebp+var_1c]
mov     [edi+1ch], edx
mov     dl, byte ptr [ebp+var_20]
mov     [edi+24h], esi
mov     dword ptr [edi+10h], 64h
mov     [esi+6], dl
mov     dword ptr [esi+84h], 3fffffffh
mov     [esi+0ch], al
mov     [esi+4], al
mov     [esi+11h], al
mov     [esi+0eh], cl
mov     [esi+0dh], bl
mov     [esi+7], al
test    al, al
jnz     short loc_10014db4
mov     dword ptr [esi+8], 2220201h
mov     eax, 50h
mov     [esi+74h], ax
or      eax, 0ffffffffh
mov     [esi+88h], eax
mov     [esi+8ch], eax
call    sub_10013470
cmp     [ebp+var_20], 0
jnz     short loc_10014ddd
mov     byte ptr [esi+5], 2
jmp     short loc_10014de7
cmp     [ebp+var_14], 0
jz      short loc_10014de7
mov     byte ptr [esi+5], 4
mov     ecx, [ebp+arg_4]
mov     dword ptr [esi+0ach], offset sub_1001ad40
pop     edi
mov     [ecx], esi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
mov     edx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+40h]
mov     ebx, [esi]
xor     ecx, ecx
mov     [esp+1ch+var_10], 1
cmp     [eax], ecx
push    edi
setnz   cl
mov     dword ptr [edx], 0
mov     eax, ecx
mov     [esp+20h+var_8], eax
test    eax, eax
jnz     short loc_10014e60
mov     eax, [esi+94h]
mov     edx, [ebx+20h]
lea     ecx, [esp+20h+var_10]
push    ecx
push    0
push    eax
push    ebx
call    edx
mov     edi, eax
add     esp, 10h
test    edi, edi
jnz     loc_10014fad
cmp     [esp+20h+var_10], eax
jz      loc_10014fad
mov     eax, [esi+3ch]
lea     edx, [esp+20h+var_c]
mov     [esp+20h+var_c], 0
mov     ecx, [eax]
push    edx
push    eax
mov     eax, [ecx+24h]
call    eax
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     loc_10014fad
cmp     [esp+20h+var_c], eax
jnz     loc_10014fad
lea     ecx, [esp+20h+var_4]
push    ecx
call    sub_10013bb0
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     loc_10014fad
cmp     [esp+20h+var_4], eax
jnz     short loc_10014f1a
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_10014eb7
call    eax
mov     al, [esi+10h]
cmp     al, 2
jb      short loc_10014ec2
cmp     al, 5
jnz     short loc_10014ee0
mov     eax, [esi+3ch]
mov     edx, [eax]
push    2
push    eax
mov     eax, [edx+1ch]
call    eax
add     esp, 8
test    eax, eax
jnz     short loc_10014f02
cmp     byte ptr [esi+10h], 5
jz      short loc_10014ee0
mov     byte ptr [esi+10h], 2
mov     ecx, [esi+94h]
mov     edx, [ebx+1ch]
push    0
push    ecx
push    ebx
call    edx
add     esp, 0ch
cmp     byte ptr [esi+4], 0
jnz     short loc_10014f02
mov     ebx, 1
call    sub_10011f40
mov     eax, dword_100816c0
test    eax, eax
jz      loc_10014fad
call    eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [esp+20h+var_8], 0
jnz     short loc_10014f4d
mov     eax, [esi+40h]
mov     ecx, [esi+94h]
lea     edx, [esp+20h+var_4]
push    edx
push    801h
push    eax
mov     eax, [ebx+18h]
push    ecx
push    ebx
mov     [esp+34h+var_4], 801h
call    eax
mov     edi, eax
add     esp, 14h
test    edi, edi
jnz     short loc_10014f9d
mov     eax, [esi+40h]
push    0
push    0
push    1
lea     edx, [esp+2ch+var_11]
mov     [esp+2ch+var_11], 0
mov     ecx, [eax]
push    edx
push    eax
mov     eax, [ecx+8]
call    eax
mov     edi, eax
add     esp, 14h
cmp     edi, 20ah
jnz     short loc_10014f77
xor     edi, edi
cmp     [esp+20h+var_8], 0
jnz     short loc_10014f86
mov     esi, [esi+40h]
call    sub_10008960
mov     edx, [ebp+arg_0]
xor     ecx, ecx
cmp     [esp+20h+var_11], cl
mov     eax, edi
setnz   cl
mov     [edx], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     edi, 0eh
jnz     short loc_10014fad
mov     eax, [ebp+arg_0]
mov     dword ptr [eax], 1
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+24h+var_4], eax
push    ebx
push    esi
push    edi
mov     edi, ecx
cmp     byte ptr [edi+0eh], 0
mov     [esp+30h+var_20], 0
jz      short loc_10014ff2
mov     eax, [edi+28h]
test    eax, eax
jnz     loc_10015277
cmp     dword ptr [edi+0b8h], 0
jnz     loc_1001521f
cmp     byte ptr [edi+0fh], 0
jnz     loc_10015216
mov     ebx, 1
mov     [esp+30h+var_1c], ebx
call    sub_10014160
xor     ebx, ebx
mov     [esp+30h+var_20], eax
cmp     eax, ebx
jnz     loc_10015252
cmp     byte ptr [edi+10h], 1
ja      short loc_10015050
lea     eax, [esp+30h+var_1c]
push    eax
mov     eax, edi
call    sub_10014e00
add     esp, 4
mov     [esp+30h+var_20], eax
cmp     eax, ebx
jnz     loc_10015252
cmp     [esp+30h+var_1c], ebx
jz      loc_1001514b
mov     cl, [edi+10h]
xor     eax, eax
cmp     cl, 4
jb      short loc_1001505f
cmp     cl, 5
jnz     short loc_10015077
mov     eax, [edi+3ch]
mov     ecx, [eax]
mov     edx, [ecx+1ch]
push    4
push    eax
call    edx
add     esp, 8
cmp     eax, ebx
jnz     short loc_10015077
mov     byte ptr [edi+10h], 4
mov     [esp+30h+var_20], eax
cmp     eax, ebx
jnz     loc_10015252
mov     eax, [edi+40h]
cmp     [eax], ebx
jnz     short loc_100150f7
mov     eax, [edi+94h]
mov     esi, [edi]
mov     edx, [esi+20h]
lea     ecx, [esp+30h+var_18]
push    ecx
push    ebx
push    eax
push    esi
call    edx
add     esp, 10h
mov     [esp+30h+var_20], eax
cmp     eax, ebx
jnz     short loc_100150f7
cmp     [esp+30h+var_18], ebx
jz      short loc_100150f7
mov     eax, [edi+40h]
mov     ecx, [edi+94h]
lea     edx, [esp+30h+var_1c]
push    edx
push    802h
push    eax
mov     eax, [esi+18h]
push    ecx
push    esi
mov     [esp+44h+var_1c], ebx
call    eax
add     esp, 14h
mov     [esp+30h+var_20], eax
cmp     eax, ebx
jnz     short loc_100150f7
test    byte ptr [esp+30h+var_1c], 1
jz      short loc_100150f7
mov     eax, 0a335h
call    sub_10071c80
mov     esi, [edi+40h]
mov     [esp+30h+var_20], eax
call    sub_10008960
mov     ecx, [edi+40h]
cmp     [ecx], ebx
jz      short loc_10015122
mov     eax, edi
call    sub_100141c0
mov     [esp+30h+var_20], eax
cmp     eax, ebx
jnz     short loc_1001513b
push    1
mov     eax, edi
call    sub_100134d0
add     esp, 4
mov     [esp+30h+var_20], eax
mov     [edi+0fh], bl
jmp     short loc_10015135
cmp     [edi+4], bl
jnz     short loc_10015135
mov     ebx, 1
mov     esi, edi
call    sub_10011f40
xor     ebx, ebx
cmp     [esp+30h+var_20], ebx
jz      short loc_1001514b
mov     eax, [esp+30h+var_20]
mov     edx, edi
call    sub_10012b70
jmp     loc_1001524b
cmp     [edi+0ch], bl
jnz     loc_1001520b
cmp     [edi+58h], ebx
jnz     short loc_1001517c
mov     eax, [edi+0b4h]
mov     eax, [eax+28h]
cmp     eax, ebx
jz      loc_1001520b
push    eax
call    dword_100802a8
add     esp, 4
cmp     eax, ebx
jle     loc_1001520b
lea     edx, [esp+30h+var_1c]
push    edx
mov     esi, edi
mov     [esp+34h+var_1c], ebx
call    sub_10013bb0
add     esp, 4
mov     [esp+30h+var_20], eax
cmp     eax, ebx
jnz     loc_10015252
cmp     [esp+30h+var_1c], ebx
jbe     short loc_100151c7
mov     eax, [edi+3ch]
mov     ecx, [eax]
push    ebx
push    18h
push    10h
lea     edx, [esp+3ch+var_14]
push    edx
push    eax
mov     eax, [ecx+8]
call    eax
add     esp, 14h
mov     [esp+30h+var_20], eax
cmp     eax, ebx
jnz     loc_10015252
jmp     short loc_100151d9
xor     eax, eax
mov     [esp+30h+var_14], eax
mov     [esp+30h+var_10], eax
mov     [esp+30h+var_c], eax
mov     [esp+30h+var_8], eax
lea     eax, [esp+30h+var_14]
lea     edx, [edi+64h]
mov     esi, eax
mov     ecx, 10h
sub     edx, esi
lea     esp, [esp+0]
mov     esi, [edx+eax]
cmp     esi, [eax]
jnz     short loc_10015204
sub     ecx, 4
add     eax, 4
cmp     ecx, 4
jnb     short loc_100151f0
jmp     short loc_1001520b
mov     edx, edi
call    sub_10012900
mov     eax, edi
call    sub_10013c30
mov     [esp+30h+var_20], eax
cmp     dword ptr [edi+0b8h], 0
jz      short loc_1001522c
push    edi
call    sub_10013af0
add     esp, 4
mov     [esp+30h+var_20], eax
cmp     byte ptr [edi+0fh], 0
jnz     short loc_1001524b
cmp     [esp+30h+var_20], 0
jnz     short loc_10015252
lea     ecx, [edi+18h]
push    ecx
mov     esi, edi
call    sub_10013bb0
add     esp, 4
mov     [esp+30h+var_20], eax
cmp     [esp+30h+var_20], 0
jz      short loc_1001526f
mov     ebx, edi
call    sub_10012a40
mov     eax, [esp+30h+var_20]
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+24h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+30h+var_20]
mov     byte ptr [edi+0fh], 1
mov     ecx, [esp+30h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx+0b4h]
cmp     dword ptr [eax+0ch], 0
jnz     short loc_100152f2
mov     al, [ebx+0fh]
cmp     al, 6
jz      short loc_100152ed
test    al, al
jz      short loc_100152ed
cmp     al, 2
jb      short loc_100152dd
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_100152c1
call    eax
mov     eax, ebx
call    sub_10016100
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_100152ed
call    eax
call    sub_10012a40
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [ebx+4], 0
jnz     short loc_100152ed
push    0
call    sub_10012b90
add     esp, 4
call    sub_10012a40
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
push    edi
mov     esi, eax
test    ebx, ebx
jnz     short loc_10015330
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
lea     eax, [ebx+0bh]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edi, [esi+28h]
test    edi, edi
jnz     loc_10015486
mov     eax, [ebp+arg_0]
mov     edi, [esi+0b4h]
push    eax
push    1
push    ebx
call    sub_10010550
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     loc_10015486
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx]
mov     edi, [ebp+arg_4]
mov     [ebp+var_4], ecx
cmp     [ecx+10h], eax
jz      short loc_1001537a
test    edi, edi
jnz     short loc_1001537a
inc     dword ptr [esi+0a0h]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     [ecx+10h], esi
cmp     ebx, 7fffffffh
ja      loc_10015430
mov     eax, dword_1008031c
cdq
idiv    dword ptr [esi+80h]
inc     eax
cmp     ebx, eax
jz      loc_10015430
cmp     byte ptr [esi+0eh], 0
jnz     short loc_100153cc
cmp     [esi+18h], ebx
jb      short loc_100153cc
test    edi, edi
jnz     short loc_100153cc
mov     edx, [esi+3ch]
cmp     [edx], edi
jz      short loc_100153cc
inc     dword ptr [esi+0a4h]
mov     eax, ecx
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      short loc_10015428
jmp     loc_1001544e
cmp     ebx, [esi+84h]
jbe     short loc_100153db
mov     edi, 0dh
jmp     short loc_10015451
test    edi, edi
jz      short loc_10015413
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_100153ea
call    eax
cmp     ebx, [esi+1ch]
ja      short loc_100153fc
mov     eax, [esi+38h]
push    ebx
push    eax
call    sub_1000ff00
add     esp, 8
push    ebx
call    sub_100129f0
mov     eax, dword_100816c0
add     esp, 4
test    eax, eax
jz      short loc_10015410
call    eax
mov     ecx, [ebp+var_4]
mov     edx, [esi+80h]
mov     eax, [ecx+4]
push    edx
push    0
push    eax
call    memset
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
mov     ecx, [ebp+var_4]
test    byte ptr [ecx+18h], 2
jz      short loc_10015461
mov     eax, ecx
call    sub_100104b0
mov     ecx, [ebp+var_4]
mov     eax, [ecx+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [ecx+14h], 1
jnz     short loc_10015474
mov     dword ptr [eax+2ch], 0
mov     ecx, [ecx]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    esi
call    sub_10015290
mov     eax, [ebp+arg_0]
add     esp, 4
mov     dword ptr [eax], 0
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_0]
push    esi
test    eax, eax
jz      short loc_100154c0
mov     esi, [eax+10h]
call    sub_100106d0
push    esi
call    sub_10015290
add     esp, 4
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+28h]
mov     ebx, [esi]
push    edi
xor     edi, edi
test    eax, eax
jnz     loc_100155cf
cmp     [esi+0b8h], edi
jnz     loc_100155c9
cmp     byte ptr [esi+5], 2
jz      loc_100155c9
mov     eax, [esi+18h]
push    200h
mov     [ebp+var_4], eax
call    sub_100094a0
mov     edi, eax
xor     edx, edx
add     esp, 4
cmp     edi, edx
jz      short loc_1001552f
push    200h
push    edx
push    edi
call    memset
mov     ecx, [ebp+var_4]
add     esp, 0ch
mov     [edi], ecx
xor     edx, edx
mov     [esi+38h], edi
cmp     edi, edx
jnz     short loc_10015542
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+40h]
cmp     [eax], edx
jnz     short loc_1001558f
cmp     byte ptr [esi+5], 4
jnz     short loc_10015556
call    sub_10033de0
jmp     short loc_1001558f
movzx   ecx, byte ptr [esi+0ch]
mov     edx, [esi+94h]
neg     ecx
sbb     ecx, ecx
and     ecx, 808h
add     ecx, 800h
or      ecx, 6
push    0
and     ecx, 87f7fh
push    ecx
push    eax
push    edx
mov     edx, [ebx+18h]
push    ebx
call    edx
mov     edi, eax
add     esp, 14h
test    edi, edi
jnz     short loc_100155ad
xor     edx, edx
mov     [esi+2ch], edx
mov     [esi+48h], edx
mov     [esi+4ch], edx
mov     byte ptr [esi+12h], 0
mov     [esi+50h], edx
mov     [esi+54h], edx
call    sub_100121f0
mov     edi, eax
test    edi, edi
jz      short loc_100155c9
mov     eax, [esi+38h]
push    eax
call    sub_100101c0
add     esp, 4
mov     dword ptr [esi+38h], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [esi+0fh], 3
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, eax
mov     ecx, [edi+28h]
xor     eax, eax
test    ecx, ecx
jz      short loc_100155f4
mov     eax, ecx
pop     edi
pop     ebp
retn
mov     cl, [ebp+arg_4]
push    ebx
mov     ebx, 1
push    esi
mov     [edi+15h], cl
cmp     [edi+0fh], bl
jnz     loc_100156d6
mov     eax, [edi+0b8h]
test    eax, eax
jz      short loc_1001567c
cmp     byte ptr [edi+4], 0
jz      short loc_1001566f
cmp     byte ptr [eax+2bh], 0
jnz     short loc_1001566f
mov     al, [edi+10h]
cmp     al, 4
jb      short loc_1001562b
cmp     al, 5
jnz     short loc_10015647
mov     eax, [edi+3ch]
mov     edx, [eax]
push    4
push    eax
mov     eax, [edx+1ch]
call    eax
add     esp, 8
test    eax, eax
jnz     loc_100156d6
mov     byte ptr [edi+10h], 4
mov     esi, [edi+0b8h]
cmp     byte ptr [esi+2bh], 0
jnz     short loc_1001566c
movsx   edx, word ptr [esi+28h]
mov     eax, [esi+4]
mov     ecx, [eax]
push    5
push    ebx
add     edx, 3
push    edx
push    eax
mov     eax, [ecx+38h]
call    eax
add     esp, 10h
mov     [esi+2bh], bl
mov     esi, [edi+0b8h]
call    sub_100189f0
jmp     short loc_100156ba
mov     cl, [edi+10h]
xor     eax, eax
cmp     cl, 2
jb      short loc_1001568b
cmp     cl, 5
jnz     short loc_100156a9
mov     eax, [edi+3ch]
mov     ecx, [eax]
mov     edx, [ecx+1ch]
push    2
push    eax
call    edx
add     esp, 8
test    eax, eax
jnz     short loc_100156d6
cmp     byte ptr [edi+10h], 5
jz      short loc_100156a9
mov     byte ptr [edi+10h], 2
test    eax, eax
jnz     short loc_100156d6
cmp     [ebp+arg_0], eax
jz      short loc_100156ba
lea     ebx, [eax+4]
call    sub_10014160
xor     edx, edx
cmp     eax, edx
jnz     short loc_100156d6
mov     ecx, [edi+18h]
mov     byte ptr [edi+0fh], 2
mov     [edi+24h], ecx
mov     [edi+20h], ecx
mov     [edi+1ch], ecx
mov     [edi+48h], edx
mov     [edi+4ch], edx
pop     esi
pop     ebx
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
mov     ebx, eax
mov     eax, [ebx+4]
push    esi
push    edi
mov     edi, [ebx+10h]
mov     [ebp+var_8], eax
mov     eax, [edi+28h]
mov     [ebp+var_4], 0
test    eax, eax
jnz     loc_10015895
cmp     [edi+0dh], al
jz      short loc_10015717
mov     eax, 3
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+0fh], 2
jnz     short loc_1001572f
mov     eax, edi
call    sub_100154d0
mov     [ebp+var_4], eax
test    eax, eax
jnz     loc_10015895
mov     eax, ebx
call    sub_10010740
mov     ecx, [ebx+10h]
mov     esi, [ecx+38h]
test    esi, esi
jz      short loc_10015773
mov     eax, [ebx+14h]
mov     ecx, esi
call    sub_1000fe60
test    eax, eax
jz      short loc_1001575d
mov     eax, ebx
call    sub_10011d90
test    eax, eax
jz      loc_10015887
test    esi, esi
jz      short loc_10015773
mov     eax, [ebx+14h]
mov     ecx, esi
call    sub_1000fe60
test    eax, eax
jnz     loc_10015870
cmp     dword ptr [edi+0b8h], 0
jnz     loc_10015870
mov     eax, [ebx+14h]
cmp     eax, [edi+1ch]
ja      loc_10015865
mov     edx, [edi+40h]
cmp     dword ptr [edx], 0
jz      loc_10015865
mov     ecx, [edi+4ch]
mov     eax, [edi+48h]
mov     esi, [ebp+var_8]
mov     [ebp+var_c], ecx
mov     ecx, edi
mov     [ebp+var_10], eax
call    sub_10012d90
mov     edx, [ebp+var_c]
or      word ptr [ebx+18h], 4
mov     esi, [ebp+var_10]
mov     ecx, [edi+40h]
push    edx
mov     [ebp+var_4], eax
mov     eax, [ebx+14h]
push    esi
call    sub_10011f00
add     esp, 8
test    eax, eax
jnz     loc_10015895
mov     ecx, [ebp+var_c]
mov     edx, [edi+80h]
mov     eax, esi
add     eax, 4
adc     ecx, 0
push    ecx
push    eax
mov     eax, [ebp+var_8]
push    edx
push    eax
mov     eax, [edi+40h]
call    sub_100089b0
add     esp, 10h
test    eax, eax
jnz     loc_10015895
mov     eax, [edi+80h]
mov     ecx, [edi+40h]
cdq
add     eax, esi
adc     edx, [ebp+var_c]
add     eax, 4
adc     edx, 0
push    edx
push    eax
mov     eax, [ebp+var_4]
call    sub_10011f00
add     esp, 8
test    eax, eax
jnz     short loc_10015895
mov     eax, [edi+80h]
add     eax, 8
cdq
add     [edi+48h], eax
adc     [edi+4ch], edx
inc     dword ptr [edi+2ch]
mov     ecx, [ebx+14h]
mov     edx, [edi+38h]
push    ecx
push    edx
call    sub_1000ff00
mov     [ebp+var_4], eax
mov     eax, [ebx+14h]
push    eax
mov     esi, edi
call    sub_100129f0
add     esp, 0ch
or      [ebp+var_4], eax
jz      short loc_10015870
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+0fh], 4
jz      short loc_10015870
or      word ptr [ebx+18h], 4
mov     eax, ebx
call    sub_10011d90
test    eax, eax
jz      short loc_10015887
push    ebx
call    sub_10014780
add     esp, 4
mov     [ebp+var_4], eax
mov     ebx, [ebx+14h]
cmp     [edi+18h], ebx
jnb     short loc_10015892
mov     [edi+18h], ebx
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebx+10h]
mov     eax, [esi+7ch]
xor     edx, edx
div     dword ptr [esi+80h]
xor     ecx, ecx
push    edi
mov     [esp+30h+var_1c], ecx
cmp     eax, 1
jbe     loc_10015b76
inc     byte ptr [esi+14h]
mov     edx, [ebx+14h]
mov     [esp+30h+var_10], ecx
lea     edi, [eax-1]
not     edi
lea     ecx, [edx-1]
and     edi, ecx
mov     ecx, [esi+18h]
inc     edi
mov     [esp+30h+var_4], edi
cmp     edx, ecx
jbe     short loc_100158f7
mov     ebx, edx
sub     ebx, edi
inc     ebx
mov     [esp+30h+var_20], ebx
jmp     short loc_10015910
lea     edx, [edi+eax-1]
cmp     edx, ecx
jbe     short loc_1001590a
sub     ecx, edi
inc     ecx
mov     [esp+30h+var_20], ecx
mov     ebx, ecx
jmp     short loc_10015910
mov     [esp+30h+var_20], eax
mov     ebx, eax
mov     [esp+30h+var_c], 0
test    ebx, ebx
jle     loc_10015b68
mov     ebx, [esp+30h+var_14]
mov     [esp+30h+var_18], edi
jmp     short loc_10015930
cmp     [esp+30h+var_1c], 0
jnz     loc_10015b68
mov     eax, [ebp+arg_0]
cmp     edi, [eax+14h]
jz      short loc_10015991
mov     ecx, [esi+38h]
test    ecx, ecx
jz      short loc_10015991
mov     eax, edi
call    sub_1000fe60
test    eax, eax
jz      short loc_10015991
lea     ecx, [esp+30h+var_8]
push    ecx
push    0
push    edi
mov     edi, [esi+0b4h]
call    sub_10010550
mov     eax, [esp+3ch+var_8]
add     esp, 0ch
mov     ebx, eax
mov     [esp+30h+var_14], ebx
test    eax, eax
jz      loc_10015b02
test    byte ptr [eax+18h], 4
jz      short loc_1001598b
mov     [esp+30h+var_10], 1
push    eax
jmp     loc_10015afa
mov     eax, dword_1008031c
cdq
idiv    dword ptr [esi+80h]
inc     eax
cmp     edi, eax
jz      loc_10015b06
test    edi, edi
jnz     short loc_100159d0
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     [esp+30h+var_1c], 0bh
jmp     loc_10015b06
mov     eax, [esi+28h]
test    eax, eax
jnz     short loc_100159f1
lea     edx, [esp+30h+var_14]
push    edx
push    1
push    edi
mov     edi, [esi+0b4h]
call    sub_10010550
mov     ebx, [esp+3ch+var_14]
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     loc_10015ac9
cmp     [ebx+10h], eax
jz      short loc_10015a0b
inc     dword ptr [esi+0a0h]
jmp     loc_10015ae0
mov     ecx, [esp+30h+var_18]
mov     [ebx+10h], esi
cmp     ecx, 7fffffffh
ja      short loc_10015a79
mov     eax, dword_1008031c
mov     edi, [esi+80h]
cdq
idiv    edi
inc     eax
cmp     ecx, eax
jz      short loc_10015a79
cmp     byte ptr [esi+0eh], 0
jnz     short loc_10015a59
cmp     [esi+18h], ecx
jb      short loc_10015a59
mov     eax, [esi+3ch]
cmp     dword ptr [eax], 0
jz      short loc_10015a59
inc     dword ptr [esi+0a4h]
mov     eax, ebx
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      loc_10015ae0
jmp     short loc_10015a97
cmp     ecx, [esi+84h]
jbe     short loc_10015a68
mov     edi, 0dh
jmp     short loc_10015a97
mov     ecx, [ebx+4]
push    edi
push    0
push    ecx
call    memset
add     esp, 0ch
jmp     short loc_10015ae0
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
test    byte ptr [ebx+18h], 2
jz      short loc_10015aa4
mov     eax, ebx
call    sub_100104b0
mov     eax, [ebx+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [ebx+14h], 1
jnz     short loc_10015ab7
mov     dword ptr [eax+2ch], 0
mov     edx, [ebx]
mov     eax, [eax+28h]
push    1
push    edx
push    eax
call    dword_100802b0
add     esp, 0ch
push    esi
call    sub_10015290
xor     ebx, ebx
add     esp, 4
mov     [esp+30h+var_14], ebx
mov     [esp+30h+var_1c], edi
test    edi, edi
jnz     short loc_10015b02
mov     eax, ebx
call    sub_100156e0
test    byte ptr [ebx+18h], 4
mov     [esp+30h+var_1c], eax
jz      short loc_10015af9
mov     [esp+30h+var_10], 1
push    ebx
call    sub_100154a0
add     esp, 4
mov     edi, [esp+30h+var_18]
mov     eax, [esp+30h+var_c]
inc     eax
inc     edi
mov     [esp+30h+var_c], eax
mov     [esp+30h+var_18], edi
cmp     eax, [esp+30h+var_20]
jl      loc_10015930
cmp     [esp+30h+var_1c], 0
jnz     short loc_10015b68
cmp     [esp+30h+var_10], 0
jz      short loc_10015b68
xor     ebx, ebx
mov     edx, [esp+30h+var_4]
mov     edi, [esi+0b4h]
lea     ecx, [esp+30h+var_8]
push    ecx
lea     eax, [ebx+edx]
push    0
push    eax
call    sub_10010550
mov     eax, [esp+3ch+var_8]
add     esp, 0ch
test    eax, eax
jz      short loc_10015b61
or      word ptr [eax+18h], 4
push    eax
call    sub_100154a0
add     esp, 4
inc     ebx
cmp     ebx, [esp+30h+var_20]
jl      short loc_10015b2e
dec     byte ptr [esi+14h]
mov     eax, [esp+30h+var_1c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, ebx
call    sub_100156e0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
xor     eax, eax
push    esi
push    edi
cmp     [ebx+18h], eax
jbe     loc_10015d35
mov     edi, [ebx+28h]
test    edi, edi
jnz     loc_10015c91
mov     edi, [ebx+0b4h]
lea     eax, [esp+10h+var_4]
push    eax
push    1
push    1
call    sub_10010550
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     loc_10015c91
mov     esi, [esp+10h+var_4]
cmp     [esi+10h], eax
jz      short loc_10015be8
inc     dword ptr [ebx+0a0h]
jmp     loc_10015ca4
mov     eax, dword_1008031c
cdq
mov     [esi+10h], ebx
mov     ecx, [ebx+80h]
idiv    ecx
mov     edx, eax
mov     eax, 1
add     edx, eax
cmp     edx, eax
jnz     short loc_10015c26
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
jmp     short loc_10015c5f
cmp     byte ptr [ebx+0eh], 0
jnz     short loc_10015c4e
cmp     [ebx+18h], eax
jb      short loc_10015c4e
mov     edx, [ebx+3ch]
cmp     dword ptr [edx], 0
jz      short loc_10015c4e
add     [ebx+0a4h], eax
mov     eax, esi
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      short loc_10015ca4
jmp     short loc_10015c5f
cmp     [ebx+84h], eax
jnb     loc_10015d3c
mov     edi, 0dh
test    byte ptr [esi+18h], 2
jz      short loc_10015c6c
mov     eax, esi
call    sub_100104b0
mov     eax, [esi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [esi+14h], 1
jnz     short loc_10015c7f
mov     dword ptr [eax+2ch], 0
mov     ecx, [esi]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    ebx
call    sub_10015290
add     esp, 4
xor     esi, esi
test    edi, edi
jnz     loc_10015d33
push    esi
call    sub_100158a0
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     short loc_10015d1c
mov     ecx, [esi+10h]
movzx   edx, byte ptr [ecx+64h]
movzx   eax, byte ptr [ecx+65h]
shl     edx, 8
or      eax, edx
movzx   edx, byte ptr [ecx+66h]
movzx   ecx, byte ptr [ecx+67h]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
mov     ecx, [esi+4]
inc     eax
mov     ebx, eax
shr     ebx, 10h
mov     [ecx+19h], bl
mov     [ecx+1bh], al
mov     edx, eax
mov     [esp+10h+var_4], ebx
shr     edx, 18h
mov     [ecx+18h], dl
mov     ebx, eax
shr     ebx, 8
mov     [ecx+1ah], bl
mov     ecx, [esi+4]
mov     [ecx+5ch], dl
mov     dl, byte ptr [esp+10h+var_4]
mov     [ecx+5fh], al
mov     [ecx+5dh], dl
mov     [ecx+5eh], bl
mov     eax, [esi+4]
mov     dword ptr [eax+60h], 26e22d00h
mov     eax, [ebp+arg_0]
mov     byte ptr [eax+11h], 1
test    esi, esi
jz      short loc_10015d33
mov     ebx, [esi+10h]
mov     eax, esi
call    sub_100106d0
push    ebx
call    sub_10015290
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+4]
push    ecx
push    0
push    eax
call    memset
add     esp, 0ch
jmp     loc_10015ca4
xor     eax, eax
cmp     [ecx+7], al
jnz     short loc_10015d6b
movzx   eax, byte ptr [ecx+0bh]
mov     ecx, [ecx+3ch]
mov     edx, [ecx]
push    eax
mov     eax, [edx+14h]
push    ecx
call    eax
add     esp, 8
retn
mov     ecx, [ecx+3ch]
cmp     [ecx], eax
jz      short locret_10015d88
mov     edx, [ecx]
mov     eax, [edx+28h]
push    0
push    8
push    ecx
call    eax
add     esp, 0ch
cmp     eax, 0ch
jnz     short locret_10015d88
xor     eax, eax
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+28h]
xor     ebx, ebx
push    edi
test    eax, eax
jnz     loc_1001609c
cmp     byte ptr [esi+0fh], 3
jnb     short loc_10015db8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [esi+0eh], bl
jz      short loc_10015de3
mov     eax, [esi+58h]
test    eax, eax
jz      loc_1001608d
jmp     short loc_10015dd0
mov     dword ptr [eax+10h], 1
mov     eax, [eax+2ch]
test    eax, eax
jnz     short loc_10015dd0
jmp     loc_1001608d
cmp     [esi+0b8h], ebx
jz      loc_10015f49
mov     edx, [esi+0b4h]
call    sub_100109a0
xor     edi, edi
mov     [esp+18h+var_c], edi
lea     ebx, [edi+1]
test    eax, eax
jnz     loc_10015f06
mov     eax, [esi+28h]
test    eax, eax
jnz     loc_10015ed7
mov     edi, [esi+0b4h]
lea     eax, [esp+18h+var_c]
push    eax
push    ebx
push    ebx
call    sub_10010550
mov     edi, [esp+24h+var_c]
add     esp, 0ch
test    eax, eax
jnz     loc_10015ed7
cmp     [edi+10h], eax
jz      short loc_10015e47
add     [esi+0a0h], ebx
jmp     loc_10015efd
mov     eax, dword_1008031c
cdq
mov     [edi+10h], esi
mov     ecx, [esi+80h]
idiv    ecx
add     eax, ebx
cmp     eax, ebx
jnz     short loc_10015e79
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
jmp     short loc_10015ea7
cmp     byte ptr [esi+0eh], 0
jnz     short loc_10015e9f
cmp     [esi+18h], ebx
jb      short loc_10015e9f
mov     edx, [esi+3ch]
cmp     dword ptr [edx], 0
jz      short loc_10015e9f
add     [esi+0a4h], ebx
mov     eax, edi
call    sub_100137f0
test    eax, eax
jz      short loc_10015efd
jmp     short loc_10015ea7
cmp     [esi+84h], ebx
jnb     short loc_10015eee
test    byte ptr [edi+18h], 2
jz      short loc_10015eb4
mov     eax, edi
call    sub_100104b0
mov     eax, [edi+1ch]
dec     dword ptr [eax+0ch]
cmp     [edi+14h], ebx
jnz     short loc_10015ec6
mov     dword ptr [eax+2ch], 0
mov     ecx, [edi]
mov     edx, [eax+28h]
push    ebx
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    esi
call    sub_10015290
mov     [esp+1ch+var_c], 0
mov     edi, [esp+1ch+var_c]
add     esp, 4
jmp     short loc_10015efd
mov     eax, [edi+4]
push    ecx
push    0
push    eax
call    memset
add     esp, 0ch
mov     eax, edi
mov     dword ptr [edi+0ch], 0
mov     ecx, [esi+18h]
push    ebx
push    ecx
push    eax
mov     edi, esi
call    sub_100139f0
mov     ebx, eax
mov     eax, [esp+24h+var_c]
add     esp, 0ch
test    eax, eax
jz      short loc_10015f31
mov     edi, [eax+10h]
call    sub_100106d0
push    edi
call    sub_10015290
add     esp, 4
test    ebx, ebx
jnz     loc_1001609a
mov     edi, [esi+0b4h]
call    sub_100107e0
jmp     loc_1001608d
cmp     [esi+11h], bl
jnz     short loc_10015f61
push    esi
call    sub_10015b90
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     loc_1001609a
mov     edi, [esi+18h]
mov     ecx, [esi+1ch]
mov     [esp+18h+var_4], edi
cmp     edi, ecx
jnb     loc_10016000
cmp     byte ptr [esi+5], 2
jz      loc_10016000
mov     eax, dword_1008031c
cdq
idiv    dword ptr [esi+80h]
inc     edi
mov     [esi+18h], ecx
lea     ebx, [eax+1]
mov     [esp+18h+var_8], ebx
cmp     edi, ecx
ja      short loc_10015ff9
mov     ecx, [esi+38h]
test    ecx, ecx
jz      short loc_10015faa
mov     eax, edi
call    sub_1000fe60
test    eax, eax
jnz     short loc_10015ff3
cmp     edi, ebx
jz      short loc_10015ff3
lea     edx, [esp+18h+var_c]
push    0
push    edx
mov     ebx, edi
mov     eax, esi
call    sub_10015300
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     loc_1001609a
mov     eax, [esp+18h+var_c]
push    eax
call    sub_100158a0
mov     ecx, [esp+1ch+var_c]
add     esp, 4
push    ecx
mov     ebx, eax
call    sub_100154a0
add     esp, 4
test    ebx, ebx
jnz     loc_1001609a
mov     ebx, [esp+18h+var_8]
inc     edi
cmp     edi, [esi+1ch]
jbe     short loc_10015f98
mov     edx, [esp+18h+var_4]
mov     [esi+18h], edx
mov     eax, [ebp+arg_0]
push    eax
call    sub_100126d0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     loc_1001609a
push    eax
mov     ecx, esi
call    sub_10014370
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1001609a
mov     edx, [esi+0b4h]
call    sub_100109a0
push    esi
call    sub_100145d0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1001609a
mov     edi, [esi+0b4h]
call    sub_100107e0
mov     ecx, [esi+18h]
cmp     ecx, [esi+20h]
jz      short loc_1001607a
mov     eax, dword_1008031c
cdq
idiv    dword ptr [esi+80h]
xor     edx, edx
inc     eax
cmp     ecx, eax
setz    dl
sub     ecx, edx
push    ecx
push    esi
call    sub_10013370
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     short loc_1001609a
cmp     [ebp+arg_4], 0
jnz     short loc_10016089
mov     ecx, esi
call    sub_10015d50
mov     ebx, eax
test    ebx, ebx
jnz     short loc_1001609a
cmp     dword ptr [esi+0b8h], 0
jnz     short loc_1001609a
mov     byte ptr [esi+0fh], 5
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, eax
mov     eax, [ebx+28h]
test    eax, eax
jnz     short loc_100160f9
cmp     byte ptr [ebx+0fh], 2
jnz     short loc_100160d3
cmp     [ebx+4], al
jz      short loc_100160d3
mov     al, 1
cmp     [ebx+5], al
jnz     short loc_100160d3
mov     [ebx+0fh], al
xor     eax, eax
pop     ebx
retn
movzx   eax, byte ptr [ebx+12h]
push    eax
call    sub_10012b90
mov     ecx, eax
and     ecx, 0ffh
add     esp, 4
cmp     ecx, 0dh
jz      short loc_100160f2
cmp     ecx, 0ah
jnz     short loc_100160f9
mov     [ebx+28h], eax
mov     byte ptr [ebx+0fh], 6
pop     ebx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
mov     ebx, eax
mov     al, [ebx+0fh]
push    esi
push    edi
cmp     al, 6
jnz     short loc_1001611d
mov     eax, [ebx+28h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     al, 1
ja      short loc_1001612a
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword ptr [ebx+0b8h], 0
jz      short loc_10016174
push    2
push    ebx
or      edx, 0ffffffffh
call    sub_100162f0
mov     esi, eax
movzx   eax, byte ptr [ebx+12h]
push    eax
call    sub_10012b90
add     esp, 0ch
test    esi, esi
jnz     short loc_10016153
mov     esi, eax
mov     eax, esi
and     eax, 0ffh
cmp     eax, 0dh
jz      short loc_10016164
cmp     eax, 0ah
jnz     short loc_1001616b
mov     [ebx+28h], esi
mov     byte ptr [ebx+0fh], 6
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebx+40h]
cmp     dword ptr [ecx], 0
jz      short loc_1001618e
cmp     al, 2
jz      short loc_1001618e
push    0
mov     eax, ebx
call    sub_100134d0
add     esp, 4
jmp     short loc_10016151
push    0
movzx   edi, al
call    sub_10012b90
add     esp, 4
cmp     byte ptr [ebx+0eh], 0
mov     esi, eax
jnz     short loc_10016153
cmp     edi, 2
jle     short loc_10016153
pop     edi
pop     esi
mov     dword ptr [ebx+28h], 4
mov     byte ptr [ebx+0fh], 6
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
sub     esp, 0ch
push    ebx
mov     ebx, [esi+60h]
push    edi
cmp     eax, ebx
jle     loc_100162dd
cmp     byte ptr [esi+6], 0
jz      loc_100162dd
imul    eax, 2ch
push    eax
mov     eax, [esi+5ch]
push    eax
call    sub_10009890
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     short loc_10016201
mov     eax, 7
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_0]
sub     edx, ebx
imul    edx, 2ch
mov     eax, ebx
imul    eax, 2ch
push    edx
add     eax, edi
push    0
push    eax
mov     [ebp+var_8], eax
call    memset
add     esp, 0ch
mov     [esi+5ch], edi
mov     [ebp+var_4], ebx
cmp     ebx, [ebp+arg_0]
jge     loc_100162dd
mov     edi, [ebp+var_8]
add     edi, 24h
mov     eax, [esi+18h]
mov     [edi-10h], eax
mov     ecx, [esi+40h]
cmp     dword ptr [ecx], 0
jz      short loc_1001625a
mov     eax, [esi+4ch]
mov     ecx, [esi+48h]
test    eax, eax
jl      short loc_1001625a
jg      short loc_10016252
test    ecx, ecx
jz      short loc_1001625a
mov     [edi-24h], ecx
mov     [edi-20h], eax
jmp     short loc_10016267
mov     edx, [esi+7ch]
mov     [edi-24h], edx
mov     dword ptr [edi-20h], 0
mov     eax, [esi+34h]
mov     [edi-0ch], eax
mov     ecx, [esi+18h]
push    200h
mov     [ebp+var_8], ecx
call    sub_100094a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1001629b
push    200h
push    0
push    ebx
call    memset
mov     edx, [ebp+var_8]
add     esp, 0ch
mov     [ebx], edx
mov     [edi-14h], ebx
test    ebx, ebx
jz      loc_100161f6
mov     eax, [esi+0b8h]
test    eax, eax
jz      short loc_100162c7
mov     ecx, [eax+44h]
mov     [edi-8], ecx
mov     edx, [eax+4ch]
mov     [edi-4], edx
mov     ecx, [eax+50h]
mov     [edi], ecx
mov     edx, [eax+68h]
mov     [edi+4], edx
mov     eax, [ebp+var_4]
inc     eax
add     edi, 2ch
mov     [esi+60h], eax
mov     [ebp+var_4], eax
cmp     eax, [ebp+arg_0]
jl      loc_10016234
pop     edi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     edi, [ecx+28h]
mov     [ebp+var_4], edi
test    edi, edi
jnz     loc_100163c2
mov     esi, [ecx+60h]
cmp     edx, esi
jge     loc_100163c2
xor     eax, eax
cmp     [ebp+arg_4], 1
setnz   al
add     edx, eax
mov     [ebp+var_10], edx
mov     [ebp+var_8], edx
cmp     edx, esi
jge     short loc_10016388
mov     esi, edx
imul    esi, 2ch
mov     [ebp+var_c], esi
mov     eax, [ecx+5ch]
mov     ebx, [esi+eax+10h]
test    ebx, ebx
jz      short loc_10016376
cmp     dword ptr [ebx+8], 0
jz      short loc_10016361
lea     esi, [ebx+0ch]
mov     edi, 7dh
jmp     short loc_10016350
mov     ecx, [esi]
push    ecx
call    sub_100101c0
add     esp, 4
add     esi, 4
dec     edi
jnz     short loc_10016350
push    ebx
call    sub_10009770
mov     edx, [ebp+var_10]
mov     edi, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     esi, [ebp+var_c]
add     esp, 4
mov     eax, [ebp+var_8]
inc     eax
add     esi, 2ch
mov     [ebp+var_8], eax
mov     [ebp+var_c], esi
cmp     eax, [ecx+60h]
jl      short loc_10016332
cmp     [ebp+arg_4], 1
mov     [ecx+60h], edx
jnz     short loc_100163cb
test    edx, edx
jnz     short loc_100163c2
mov     edx, [ecx+44h]
mov     esi, [edx]
test    esi, esi
jz      short loc_100163c2
cmp     esi, offset dword_10076840
jnz     short loc_100163bb
mov     ecx, [esi+10h]
push    0
push    0
push    edx
call    ecx
mov     ecx, [ebp+arg_0]
add     esp, 0ch
mov     [ebp+var_4], eax
mov     edi, eax
mov     dword ptr [ecx+34h], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword ptr [ecx+0b8h], 0
jnz     short loc_100163dc
mov     eax, [ecx+40h]
cmp     dword ptr [eax], 0
jz      short loc_100163c2
test    edx, edx
jnz     short loc_100163f4
xor     eax, eax
push    eax
mov     eax, ecx
call    sub_10013cb0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ecx+5ch]
imul    edx, 2ch
lea     eax, [eax+edx-2ch]
push    eax
mov     eax, ecx
call    sub_10013cb0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+0eh], 0
push    edi
mov     ebx, eax
mov     [esp+18h+var_8], 0
jz      short loc_10016440
push    ebx
call    sub_100158a0
add     esp, 4
test    eax, eax
jnz     loc_100165d7
test    byte ptr [ebx+18h], 2
jz      short loc_10016462
mov     eax, ebx
call    sub_10011d90
test    eax, eax
jz      short loc_10016462
push    ebx
call    sub_10014780
add     esp, 4
test    eax, eax
jnz     loc_100165d7
movzx   eax, word ptr [ebx+18h]
test    al, 4
jz      short loc_10016477
cmp     [ebp+arg_8], 0
jnz     short loc_10016477
mov     ecx, [ebx+14h]
mov     [esp+18h+var_8], ecx
and     eax, 0fffbh
lea     edx, [esp+18h+var_c]
push    edx
mov     [ebx+18h], ax
mov     eax, [ebp+arg_4]
mov     edi, [esi+0b4h]
push    0
push    eax
call    sub_10010550
mov     eax, [esp+24h+var_c]
add     esp, 0ch
test    eax, eax
jz      short loc_100164f0
mov     cx, [eax+18h]
and     cx, 4
or      [ebx+18h], cx
cmp     byte ptr [esi+0eh], 0
jz      short loc_100164c0
mov     edi, [esi+18h]
inc     edi
mov     esi, eax
call    sub_10010890
jmp     short loc_100164f0
test    byte ptr [eax+18h], 2
jz      short loc_100164cb
call    sub_100104b0
mov     ecx, [eax+1ch]
dec     dword ptr [ecx+0ch]
cmp     dword ptr [eax+14h], 1
jnz     short loc_100164de
mov     dword ptr [ecx+2ch], 0
mov     edx, [eax]
mov     eax, [ecx+28h]
push    1
push    edx
push    eax
call    dword_100802b0
add     esp, 0ch
mov     ecx, [ebx+14h]
mov     edi, [ebp+arg_4]
mov     esi, ebx
mov     [esp+18h+var_4], ecx
call    sub_10010890
mov     edx, 0ffdfh
and     [ebx+18h], dx
movzx   eax, word ptr [ebx+18h]
test    al, 2
jnz     short loc_10016542
or      eax, 2
mov     [ebx+18h], ax
mov     eax, [ebx+1ch]
mov     ecx, [eax]
mov     [ebx+20h], ecx
test    ecx, ecx
jz      short loc_10016528
mov     [ecx+24h], ebx
cmp     dword ptr [eax+4], 0
mov     [eax], ebx
jnz     short loc_10016533
mov     [eax+4], ebx
cmp     dword ptr [eax+8], 0
jnz     short loc_10016542
test    byte ptr [ebx+18h], 4
jnz     short loc_10016542
mov     [eax+8], ebx
mov     eax, [ebp+arg_0]
cmp     byte ptr [eax+0eh], 0
jz      short loc_1001656f
mov     edi, [esp+18h+var_4]
mov     esi, [esp+18h+var_c]
call    sub_10010890
test    esi, esi
jz      short loc_1001656f
mov     edi, [esi+10h]
mov     eax, esi
call    sub_100106d0
push    edi
call    sub_10015290
add     esp, 4
mov     ebx, [esp+18h+var_8]
test    ebx, ebx
jz      short loc_100165d5
mov     esi, [ebp+arg_0]
lea     ecx, [esp+18h+var_4]
push    0
push    ecx
mov     eax, esi
call    sub_10015300
mov     edi, eax
add     esp, 8
test    edi, edi
jz      short loc_100165b6
cmp     ebx, [esi+1ch]
ja      short loc_100165ad
mov     eax, [esi+38h]
test    eax, eax
jz      short loc_100165ad
mov     edx, [esi+0b0h]
push    edx
push    ebx
call    sub_100100f0
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+18h+var_4]
or      word ptr [eax+18h], 4
call    sub_10010740
mov     esi, [eax+10h]
call    sub_100106d0
push    esi
call    sub_10015290
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    edx, edx
js      short loc_100165fd
cmp     byte ptr [eax+0ch], 0
jnz     short loc_100165fd
mov     ecx, [eax+0b8h]
test    ecx, ecx
jz      short loc_100165fa
cmp     byte ptr [ecx+2bh], 2
jz      short loc_100165fd
mov     [eax+4], dl
movzx   eax, byte ptr [eax+4]
retn
push    ebx
push    esi
mov     esi, eax
cmp     byte ptr [esi+0eh], 0
mov     al, [esi+5]
push    edi
mov     ebx, 2
jz      short loc_1001662f
cmp     ecx, 4
jz      short loc_1001662f
cmp     ecx, ebx
jz      short loc_1001662f
movzx   ecx, al
movzx   edx, al
cmp     ecx, edx
jz      loc_1001670a
cmp     byte ptr [esi+4], 0
mov     [esi+5], cl
jnz     loc_1001670a
and     al, 5
cmp     al, 1
jnz     loc_1001670a
test    al, cl
jnz     loc_1001670a
mov     edi, [esi+40h]
mov     eax, [edi]
test    eax, eax
jz      short loc_10016671
mov     eax, [eax+4]
push    edi
call    eax
add     esp, 4
mov     dword ptr [edi], 0
cmp     [esi+10h], bl
jb      short loc_10016692
mov     ecx, [esi+94h]
mov     eax, [esi]
mov     edx, [eax+1ch]
push    0
push    ecx
push    eax
call    edx
movzx   eax, byte ptr [esi+5]
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
movzx   edi, byte ptr [esi+0fh]
xor     eax, eax
test    edi, edi
jnz     short loc_100166a3
mov     ecx, esi
call    sub_10014fc0
cmp     byte ptr [esi+0fh], 1
jnz     short loc_100166d3
mov     cl, [esi+10h]
xor     eax, eax
cmp     cl, bl
jb      short loc_100166b7
cmp     cl, 5
jnz     short loc_100166d3
mov     eax, [esi+3ch]
mov     ecx, [eax]
mov     edx, [ecx+1ch]
push    ebx
push    eax
call    edx
add     esp, 8
test    eax, eax
jnz     short loc_100166ff
cmp     byte ptr [esi+10h], 5
jz      short loc_100166d3
mov     [esi+10h], bl
test    eax, eax
jnz     short loc_100166ff
mov     ecx, [esi+94h]
mov     eax, [esi]
mov     edx, [eax+1ch]
push    0
push    ecx
push    eax
call    edx
add     esp, 0ch
cmp     edi, 1
jnz     short loc_100166ff
mov     ebx, edi
call    sub_10011f40
movzx   eax, byte ptr [esi+5]
pop     edi
pop     esi
pop     ebx
retn
test    edi, edi
jnz     short loc_1001670a
mov     ebx, esi
call    sub_10012a40
movzx   eax, byte ptr [esi+5]
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
cmp     esi, 0ffffffffh
jl      short loc_10016752
mov     edx, [ebp+arg_0]
jg      short loc_10016736
cmp     edx, 0ffffffffh
jb      short loc_10016752
mov     eax, [ecx+0b8h]
mov     [ecx+88h], edx
mov     [ecx+8ch], esi
test    eax, eax
jz      short loc_10016761
mov     [eax+10h], edx
mov     [eax+14h], esi
mov     eax, [ecx+88h]
mov     edx, [ecx+8ch]
pop     esi
pop     ebp
retn
mov     eax, edx
mov     edx, esi
pop     esi
pop     ebp
retn
cmp     byte ptr [eax+4], 0
mov     ecx, [eax+3ch]
mov     ecx, [ecx]
jnz     short loc_10016789
cmp     dword ptr [ecx], 2
jl      short loc_10016786
cmp     dword ptr [ecx+34h], 0
jnz     short loc_10016789
xor     eax, eax
retn
mov     eax, 1
retn
mov     cl, [esi+10h]
xor     eax, eax
cmp     cl, 4
jb      short loc_1001679f
cmp     cl, 5
jnz     short locret_100167e2
mov     eax, [esi+3ch]
mov     ecx, [eax]
mov     edx, [ecx+1ch]
push    edi
push    4
push    eax
call    edx
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     short loc_100167bc
mov     byte ptr [esi+10h], 4
pop     edi
retn
mov     eax, [esi+3ch]
cmp     dword ptr [eax], 0
jz      short loc_100167df
mov     ecx, [eax]
mov     edx, [ecx+20h]
push    1
push    eax
call    edx
add     esp, 8
cmp     byte ptr [esi+10h], 5
mov     eax, edi
jz      short loc_100167e1
mov     byte ptr [esi+10h], 1
pop     edi
retn
mov     eax, edi
pop     edi
retn
push    esi
mov     esi, eax
cmp     byte ptr [esi+4], 0
jz      short loc_10016802
call    sub_10016790
test    eax, eax
jnz     short loc_10016831
mov     ecx, [esi+8ch]
mov     edx, [esi+88h]
lea     eax, [esi+0b8h]
push    eax
movzx   eax, byte ptr [esi+4]
push    ecx
mov     ecx, [esi+0bch]
push    edx
mov     edx, [esi+3ch]
push    eax
mov     eax, [esi]
push    ecx
push    edx
call    sub_100173e0
add     esp, 18h
pop     esi
retn
push    ebp
mov     ebp, esp
xor     eax, eax
push    edi
cmp     [esi+0ch], al
jnz     short loc_1001689e
cmp     [esi+0b8h], eax
jnz     short loc_1001689e
cmp     byte ptr [esi+4], 0
mov     eax, [esi+3ch]
mov     eax, [eax]
jnz     short loc_10016871
cmp     dword ptr [eax], 2
jl      short loc_10016869
cmp     dword ptr [eax+34h], 0
jnz     short loc_10016871
mov     eax, 0eh
pop     edi
pop     ebp
retn
mov     edi, [esi+40h]
mov     eax, [edi]
test    eax, eax
jz      short loc_10016889
mov     ecx, [eax+4]
push    edi
call    ecx
add     esp, 4
mov     dword ptr [edi], 0
mov     eax, esi
call    sub_100167f0
test    eax, eax
jnz     short loc_100168a7
mov     byte ptr [esi+5], 5
mov     [esi+0fh], al
pop     edi
pop     ebp
retn
mov     edx, [ebp+arg_0]
mov     dword ptr [edx], 1
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, eax
xor     eax, eax
cmp     [esi+0b8h], eax
jnz     short loc_1001691f
mov     cl, [esi+10h]
mov     [ebp+var_4], eax
cmp     cl, 1
jb      short loc_100168d1
cmp     cl, 5
jnz     short loc_100168ef
mov     eax, [esi+3ch]
mov     ecx, [eax]
mov     edx, [ecx+1ch]
push    1
push    eax
call    edx
add     esp, 8
test    eax, eax
jnz     short loc_1001695c
cmp     byte ptr [esi+10h], 5
jz      short loc_100168ef
mov     byte ptr [esi+10h], 1
test    eax, eax
jnz     short loc_1001695c
mov     ecx, [esi+0bch]
mov     eax, [esi]
lea     edx, [ebp+var_4]
push    edx
push    0
push    ecx
push    eax
mov     eax, [eax+20h]
call    eax
add     esp, 10h
test    eax, eax
jnz     short loc_1001695c
cmp     [ebp+var_4], eax
jz      short loc_1001691f
mov     eax, esi
call    sub_100167f0
test    eax, eax
jnz     short loc_1001695c
cmp     dword ptr [esi+0b8h], 0
jz      short loc_1001695c
call    sub_10016790
test    eax, eax
jnz     short loc_1001695c
mov     ecx, [esi+0b0h]
movzx   eax, byte ptr [esi+9]
mov     edx, [esi+80h]
push    ecx
push    edx
push    eax
mov     eax, [esi+0b8h]
call    sub_10017e40
add     esp, 0ch
mov     dword ptr [esi+0b8h], 0
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     [ebp+var_4], 0
cmp     [esi+18h], edi
jg      short loc_100169df
mov     ebx, [esi+20h]
call    sub_1006edd0
test    eax, eax
jnz     short loc_100169a6
lea     eax, ds:4[edi*4]
push    eax
push    ebx
call    sub_10009890
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     short loc_100169b9
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx], 0
mov     eax, 7
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+18h]
mov     edx, edi
sub     edx, eax
lea     ecx, ds:4[edx*4]
push    ecx
lea     edx, [ebx+eax*4]
push    0
push    edx
call    memset
lea     eax, [edi+1]
add     esp, 0ch
mov     [esi+20h], ebx
mov     [esi+18h], eax
mov     ecx, [esi+20h]
cmp     dword ptr [ecx+edi*4], 0
lea     ecx, [ecx+edi*4]
jnz     short loc_10016a69
cmp     byte ptr [esi+2bh], 2
jnz     short loc_10016a3c
push    8000h
call    sub_100094a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10016a14
push    8000h
push    0
push    ebx
call    memset
add     esp, 0ch
mov     edx, [esi+20h]
mov     [edx+edi*4], ebx
mov     eax, [esi+20h]
cmp     dword ptr [eax+edi*4], 0
jnz     short loc_10016a69
mov     ecx, [ebp+arg_0]
mov     edx, eax
mov     eax, [edx+edi*4]
mov     [ebp+var_4], 7
mov     [ecx], eax
mov     eax, [ebp+var_4]
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   edx, byte ptr [esi+2ch]
mov     eax, [esi+4]
mov     ebx, [eax]
push    ecx
mov     ecx, [ebx+34h]
push    edx
push    8000h
push    edi
push    eax
call    ecx
add     esp, 14h
mov     [ebp+var_4], eax
cmp     eax, 8
jnz     short loc_10016a69
or      byte ptr [esi+2eh], 2
mov     [ebp+var_4], 0
mov     edx, [esi+20h]
mov     eax, [edx+edi*4]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
mov     eax, [ebp+var_4]
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
lea     edi, [eax+edx]
mov     [ebp+var_4], edi
test    ecx, ecx
jz      short loc_10016a9b
mov     edx, [ecx]
mov     esi, [ecx+4]
jmp     short loc_10016a9f
xor     esi, esi
xor     edx, edx
cmp     [ebp+arg_0], 0
jz      short loc_10016ac5
mov     ecx, [eax]
add     ecx, esi
add     edx, ecx
mov     ecx, [eax+4]
add     ecx, edx
add     eax, 8
add     esi, ecx
cmp     eax, edi
jb      short loc_10016aa5
pop     edi
mov     [ebx+4], esi
pop     esi
mov     [ebx], edx
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [eax+4]
mov     eax, [ecx-4]
mov     edi, eax
mov     ebx, eax
shr     eax, 8
and     ebx, 0ff00h
shl     edi, 10h
add     edi, ebx
movzx   ebx, byte ptr [ecx-1]
and     eax, 0ff00h
add     eax, esi
shl     edi, 8
add     eax, edi
add     ebx, eax
mov     eax, [ecx]
add     edx, ebx
mov     edi, eax
mov     ebx, eax
shr     eax, 8
and     ebx, 0ff00h
shl     edi, 10h
add     edi, ebx
movzx   ebx, byte ptr [ecx+3]
and     eax, 0ff00h
add     eax, edx
shl     edi, 8
add     eax, edi
add     ebx, eax
add     ecx, 8
lea     eax, [ecx-4]
add     esi, ebx
cmp     eax, [ebp+var_4]
jb      short loc_10016ac8
mov     eax, [ebp+arg_4]
pop     edi
mov     [eax+4], esi
pop     esi
mov     [eax], edx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [edx+20h]
mov     ecx, [eax]
push    ebx
push    esi
lea     ebx, [edx+34h]
mov     [ebp+var_4], ecx
xor     esi, esi
push    edi
mov     byte ptr [edx+40h], 1
mov     dword ptr [ebx], 2de218h
mov     eax, ebx
xor     ecx, ecx
mov     edi, [eax]
add     edi, esi
add     ecx, edi
mov     edi, [eax+4]
add     edi, ecx
add     esi, edi
add     eax, 8
lea     edi, [ebx+28h]
cmp     eax, edi
jb      short loc_10016b62
mov     edi, [ebp+var_4]
mov     [edx+5ch], ecx
mov     [edx+60h], esi
add     edi, 30h
mov     ecx, 0ch
mov     esi, ebx
rep movsd
cmp     byte ptr [edx+2bh], 2
jz      short loc_10016ba2
mov     edx, [edx+4]
mov     eax, [edx]
mov     ecx, [eax+3ch]
push    edx
call    ecx
add     esp, 4
mov     edi, [ebp+var_4]
mov     esi, ebx
mov     ecx, 0ch
rep movsd
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    edi
mov     edx, ecx
shr     edx, 18h
mov     [esi], dl
mov     [esi+3], cl
mov     edx, ecx
shr     edx, 10h
mov     [esi+1], dl
mov     edx, ecx
shr     edx, 8
mov     [esi+2], dl
mov     ecx, eax
shr     ecx, 18h
mov     [esi+4], cl
mov     edx, eax
mov     ecx, eax
mov     [esi+7], al
shr     edx, 10h
mov     [esi+5], dl
shr     ecx, 8
mov     [esi+6], cl
mov     edx, [ebx+54h]
mov     [esi+8], edx
mov     eax, [ebx+58h]
mov     [esi+0ch], eax
xor     eax, eax
cmp     [ebx+41h], al
setz    al
lea     edi, [ebx+4ch]
push    edi
mov     ecx, edi
mov     edx, 8
mov     [ebp+var_4], eax
push    eax
mov     eax, esi
call    sub_10016a80
mov     ecx, [ebp+var_4]
mov     edx, [ebx+24h]
mov     eax, [ebp+arg_0]
push    edi
push    ecx
mov     ecx, edi
call    sub_10016a80
mov     eax, [edi]
mov     edx, eax
shr     edx, 18h
mov     [esi+10h], dl
mov     ecx, eax
shr     ecx, 10h
mov     [esi+11h], cl
mov     edx, eax
shr     edx, 8
mov     [esi+12h], dl
mov     [esi+13h], al
mov     eax, [edi+4]
mov     ecx, eax
shr     ecx, 18h
mov     [esi+14h], cl
mov     edx, eax
add     esp, 10h
shr     edx, 10h
mov     ecx, eax
shr     ecx, 8
mov     [esi+15h], dl
mov     [esi+16h], cl
mov     [esi+17h], al
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
lea     eax, [esi+8]
lea     ecx, [ebx+54h]
push    edi
lea     edi, [ebx+4ch]
mov     [ebp+var_4], 8
sub     ecx, eax
lea     esp, [esp+0]
mov     edx, [ecx+eax]
cmp     edx, [eax]
jnz     loc_10016d90
mov     edx, [ebp+var_4]
sub     edx, 4
add     eax, 4
mov     [ebp+var_4], edx
cmp     edx, 4
jnb     short loc_10016ca0
movzx   eax, byte ptr [esi]
movzx   ecx, byte ptr [esi+1]
movzx   edx, byte ptr [esi+2]
shl     eax, 8
or      eax, ecx
movzx   ecx, byte ptr [esi+3]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
mov     [ebp+var_8], eax
jz      loc_10016d90
xor     eax, eax
cmp     [ebx+41h], al
push    edi
setz    al
mov     ecx, edi
mov     edx, 8
mov     [ebp+var_4], eax
push    eax
mov     eax, esi
call    sub_10016a80
mov     edx, [ebp+var_4]
mov     eax, [ebp+arg_8]
push    edi
push    edx
mov     edx, [ebx+24h]
mov     ecx, edi
call    sub_10016a80
movzx   eax, byte ptr [esi+10h]
movzx   ecx, byte ptr [esi+11h]
movzx   edx, byte ptr [esi+12h]
shl     eax, 8
or      eax, ecx
movzx   ecx, byte ptr [esi+13h]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
add     esp, 10h
cmp     [edi], eax
jnz     short loc_10016d90
movzx   edx, byte ptr [esi+14h]
movzx   eax, byte ptr [esi+15h]
movzx   ecx, byte ptr [esi+16h]
shl     edx, 8
or      edx, eax
movzx   eax, byte ptr [esi+17h]
shl     edx, 8
or      edx, ecx
shl     edx, 8
or      edx, eax
cmp     [edi+4], edx
jnz     short loc_10016d90
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+var_8]
movzx   eax, byte ptr [esi+4]
mov     [ecx], edx
movzx   ecx, byte ptr [esi+5]
movzx   edx, byte ptr [esi+6]
shl     eax, 8
or      eax, ecx
movzx   ecx, byte ptr [esi+7]
shl     eax, 8
or      eax, edx
mov     edx, [ebp+arg_4]
shl     eax, 8
or      eax, ecx
mov     [edx], eax
mov     eax, 1
pop     edi
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+44h]
xor     ebx, ebx
push    edi
cmp     eax, ebx
jz      loc_10016e3b
lea     edi, [eax+21h]
lea     eax, [ebp+var_4]
shr     edi, 0ch
push    eax
call    sub_10016970
add     esp, 4
test    eax, eax
jnz     short loc_10016df9
mov     ecx, [ebp+var_4]
lea     ebx, [ecx+4000h]
test    edi, edi
jnz     short loc_10016de9
add     ecx, 88h
mov     [ebp+var_4], ecx
lea     edx, [ecx-4]
jmp     short loc_10016dfd
lea     eax, [edi-1]
shl     eax, 0ch
add     eax, 0fdeh
lea     edx, [ecx-4]
jmp     short loc_10016dfd
mov     edx, ebx
mov     eax, edx
mov     ecx, [esi+44h]
sub     ecx, eax
xor     eax, eax
mov     si, [ebx+eax*2]
movzx   esi, si
cmp     esi, ecx
jle     short loc_10016e15
xor     esi, esi
mov     [ebx+eax*2], si
inc     eax
cmp     eax, 2000h
jl      short loc_10016e04
lea     eax, ds:0[ecx*4]
sub     ebx, eax
sub     ebx, edx
sub     ebx, 4
push    ebx
lea     ecx, [eax+edx+4]
push    0
push    ecx
call    memset
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, eax
push    edi
lea     eax, [ebp+var_4]
lea     edi, [ebx+21h]
shr     edi, 0ch
push    eax
call    sub_10016970
add     esp, 4
mov     [ebp+var_c], eax
test    eax, eax
jnz     loc_10016f17
mov     ecx, [ebp+var_4]
lea     esi, [ecx+4000h]
test    edi, edi
jnz     short loc_10016e93
add     ecx, 88h
mov     [ebp+var_4], ecx
jmp     short loc_10016e9e
lea     eax, [edi-1]
shl     eax, 0ch
add     eax, 0fdeh
sub     ebx, eax
add     ecx, 0fffffffch
mov     edi, ebx
mov     [ebp+var_8], ecx
cmp     edi, 1
jnz     short loc_10016ec9
mov     edx, esi
sub     edx, ecx
add     edx, 3ffch
push    edx
add     ecx, 4
push    0
push    ecx
call    memset
mov     ecx, [ebp+var_8]
add     esp, 0ch
mov     eax, [ecx+edi*4]
test    eax, eax
jz      short loc_10016edb
mov     eax, [ebp+arg_0]
call    sub_10016da0
mov     ecx, [ebp+var_8]
mov     eax, [ebp+arg_4]
imul    eax, 17fh
and     eax, 1fffh
mov     bx, [esi+eax*2]
mov     edx, edi
test    bx, bx
jz      short loc_10016f0a
mov     ebx, edx
dec     edx
test    ebx, ebx
jz      short loc_10016f1e
inc     eax
and     eax, 1fffh
mov     bx, [esi+eax*2]
test    bx, bx
jnz     short loc_10016ef4
mov     edx, [ebp+arg_4]
mov     [ecx+edi*4], edx
mov     [esi+eax*2], di
mov     eax, [ebp+var_c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0af62h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 64h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+64h+var_4], eax
push    ebx
push    esi
mov     ebx, ecx
push    edi
movzx   edi, byte ptr [ebx+2dh]
inc     edi
xor     eax, eax
mov     esi, 8
sub     esi, edi
mov     [esp+70h+var_3c], eax
mov     [esp+70h+var_38], eax
mov     [esp+70h+var_58], edi
mov     [esp+70h+var_5c], esi
cmp     [ebx+2bh], al
jnz     short loc_10016fa6
mov     eax, [ebx+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    0ah
push    esi
push    edi
push    eax
call    edx
add     esp, 10h
test    eax, eax
jnz     loc_10017154
push    30h
lea     eax, [ebx+34h]
push    0
push    eax
call    memset
mov     eax, [ebx+8]
mov     ecx, [eax]
add     esp, 0ch
lea     edx, [esp+70h+var_48]
push    edx
push    eax
mov     eax, [ecx+18h]
call    eax
add     esp, 8
mov     [esp+70h+var_60], eax
test    eax, eax
jnz     loc_10017138
cmp     [esp+70h+var_44], eax
jl      loc_1001728c
jg      short loc_10016fec
cmp     [esp+70h+var_48], 20h
jbe     loc_1001728c
mov     eax, [ebx+8]
mov     ecx, [eax]
push    0
push    0
push    20h
lea     edx, [esp+7ch+var_24]
push    edx
push    eax
mov     eax, [ecx+8]
call    eax
add     esp, 14h
mov     [esp+70h+var_60], eax
test    eax, eax
jnz     loc_10017138
movzx   eax, [esp+70h+var_24]
movzx   ecx, [esp+70h+var_23]
movzx   edx, [esp+70h+var_22]
movzx   esi, [esp+70h+var_1c]
shl     eax, 8
or      eax, ecx
movzx   ecx, [esp+70h+var_21]
shl     eax, 8
or      eax, edx
movzx   edx, [esp+70h+var_1b]
shl     esi, 8
or      esi, edx
movzx   edx, [esp+70h+var_19]
shl     eax, 8
or      eax, ecx
movzx   ecx, [esp+70h+var_1a]
shl     esi, 8
or      esi, ecx
shl     esi, 8
mov     ecx, eax
or      esi, edx
and     ecx, 0fffffffeh
mov     [esp+70h+var_40], esi
cmp     ecx, 377f0682h
jnz     loc_10017288
lea     edx, [esi-1]
test    esi, edx
jnz     loc_10017288
lea     ecx, [esi-200h]
cmp     ecx, 0fe00h
ja      loc_10017288
and     al, 1
lea     ecx, [esp+70h+var_18]
mov     [esp+70h+var_61], al
mov     [ebx+41h], al
mov     [ebx+24h], esi
call    sub_1000c8a0
mov     edx, [esp+70h+var_14]
xor     ecx, ecx
cmp     [esp+70h+var_61], cl
lea     edi, [ebx+4ch]
setz    cl
mov     [ebx+68h], eax
mov     eax, [esp+70h+var_10]
push    edi
mov     [ebx+54h], edx
mov     [ebx+58h], eax
lea     eax, [esp+74h+var_24]
push    ecx
xor     ecx, ecx
lea     edx, [ecx+18h]
call    sub_10016a80
add     esp, 8
lea     ecx, [esp+70h+var_c]
call    sub_1000c8a0
cmp     [edi], eax
jnz     loc_10017284
lea     ecx, [esp+70h+var_8]
call    sub_1000c8a0
cmp     [ebx+50h], eax
jnz     loc_10017284
lea     ecx, [esp+70h+var_20]
call    sub_1000c8a0
cmp     eax, 2de218h
jz      short loc_10017114
mov     eax, 0afe5h
call    sub_10071c80
mov     [esp+70h+var_60], eax
jmp     loc_10017279
lea     eax, [esi+18h]
push    eax
call    sub_10009510
add     esp, 4
mov     [esp+70h+var_54], eax
test    eax, eax
jnz     short loc_10017166
mov     [esp+70h+var_60], 7
mov     esi, [esp+70h+var_5c]
mov     edi, [esp+70h+var_58]
cmp     byte ptr [ebx+2bh], 0
jnz     short loc_10017150
mov     ebx, [ebx+4]
mov     edx, [ebx]
mov     eax, [edx+38h]
push    9
push    esi
push    edi
push    ebx
call    eax
add     esp, 10h
mov     eax, [esp+70h+var_60]
mov     ecx, [esp+70h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
lea     eax, [esi+18h]
cdq
xor     edi, edi
mov     ecx, eax
mov     [esp+70h+var_30], eax
add     ecx, 20h
mov     eax, edx
adc     eax, edi
mov     [esp+70h+var_50], 20h
mov     [esp+70h+var_4c], edi
mov     [esp+70h+var_2c], edx
cmp     eax, [esp+70h+var_44]
jg      loc_1001726c
jl      short loc_100171a5
cmp     ecx, [esp+70h+var_48]
ja      loc_1001726c
jmp     short loc_100171a5
mov     esi, [esp+70h+var_40]
mov     edx, [esp+70h+var_4c]
mov     eax, [esp+70h+var_50]
mov     ecx, [esp+70h+var_54]
push    edx
push    eax
mov     eax, [ebx+8]
add     esi, 18h
push    esi
push    ecx
inc     edi
call    sub_10008980
add     esp, 10h
mov     [esp+70h+var_60], eax
test    eax, eax
jnz     loc_1001726c
mov     esi, [esp+70h+var_54]
lea     eax, [esi+18h]
push    eax
lea     edx, [esp+74h+var_28]
push    edx
lea     eax, [esp+78h+var_34]
push    eax
call    sub_10016c80
add     esp, 0ch
test    eax, eax
jz      short loc_1001726c
mov     ecx, [esp+70h+var_34]
push    ecx
push    ebx
mov     eax, edi
call    sub_10016e50
add     esp, 8
mov     [esp+70h+var_60], eax
test    eax, eax
jnz     short loc_1001726c
mov     eax, [esp+70h+var_28]
test    eax, eax
jz      short loc_10017236
mov     ecx, [ebx+50h]
mov     [ebx+48h], eax
mov     eax, [esp+70h+var_40]
mov     edx, eax
and     eax, 0ff00h
sar     edx, 10h
or      edx, eax
mov     eax, [ebx+4ch]
mov     [ebx+44h], edi
mov     [ebx+42h], dx
mov     [esp+70h+var_3c], eax
mov     [esp+70h+var_38], ecx
mov     edx, [esp+70h+var_50]
mov     ecx, [esp+70h+var_30]
mov     esi, [esp+70h+var_4c]
mov     eax, [esp+70h+var_2c]
add     edx, ecx
adc     esi, eax
add     ecx, edx
adc     eax, esi
mov     [esp+70h+var_50], edx
mov     [esp+70h+var_4c], esi
cmp     eax, [esp+70h+var_44]
jl      loc_100171a1
jg      short loc_1001726c
cmp     ecx, [esp+70h+var_48]
jbe     loc_100171a1
mov     edx, [esp+70h+var_54]
push    edx
call    sub_10009770
add     esp, 4
cmp     [esp+70h+var_60], 0
jnz     loc_10017130
mov     edi, [esp+70h+var_58]
mov     esi, [esp+70h+var_5c]
mov     eax, [esp+70h+var_3c]
mov     ecx, [esp+70h+var_38]
mov     edx, ebx
mov     [ebx+4ch], eax
mov     [ebx+50h], ecx
call    sub_10016b40
mov     edx, [ebx+20h]
mov     eax, [edx]
mov     dword ptr [eax+60h], 0
mov     dword ptr [eax+64h], 0
lea     ecx, [eax+68h]
mov     edx, 4
lea     esp, [esp+0]
mov     dword ptr [ecx], 0ffffffffh
add     ecx, 4
dec     edx
jnz     short loc_100172c0
mov     ecx, [ebx+44h]
test    ecx, ecx
jz      short loc_100172d6
mov     [eax+68h], ecx
mov     eax, [ebx+48h]
test    eax, eax
jz      loc_10017138
mov     ecx, [ebx+64h]
push    ecx
push    eax
push    offset arecovereddfram
push    0
call    sub_1000b150
add     esp, 10h
jmp     loc_10017138
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, eax
cmp     byte ptr [ebx+2bh], 2
jnz     loc_100173c9
push    edi
xor     edi, edi
cmp     [ebx+18h], edi
jle     loc_100173c5
push    esi
lea     ecx, [ecx+0]
mov     eax, [ebx+20h]
mov     esi, [eax+edi*4]
test    esi, esi
jz      loc_100173b0
cmp     dword_10080230, 0
jz      short loc_100173a6
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1001734a
push    eax
call    dword_1008027c
add     esp, 4
push    esi
call    dword_10080258
mov     ecx, dword_10081668
neg     eax
add     ecx, eax
add     esp, 4
mov     dword_10081668, ecx
cmp     ecx, dword_10081690
jle     short loc_10017372
mov     dword_10081690, ecx
mov     eax, dword_1008168c
dec     eax
mov     dword_1008168c, eax
cmp     eax, dword_100816b4
jle     short loc_1001738a
mov     dword_100816b4, eax
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
test    eax, eax
jz      short loc_100173b0
push    eax
call    dword_10080284
jmp     short loc_100173ad
push    esi
call    dword_10080250
add     esp, 4
mov     ecx, [ebx+20h]
mov     dword ptr [ecx+edi*4], 0
inc     edi
cmp     edi, [ebx+18h]
jl      loc_10017320
pop     esi
pop     edi
pop     ebx
pop     ebp
retn
mov     ebx, [ebx+4]
mov     eax, [ebp+arg_0]
mov     edx, [ebx]
mov     ecx, [edx+40h]
push    eax
push    ebx
call    ecx
add     esp, 8
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, eax
mov     eax, [ebp+arg_14]
mov     dword ptr [eax], 0
mov     ebx, [edi+4]
add     ebx, 6ch
push    ebx
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      loc_100174b5
push    ebx
push    0
push    esi
call    memset
mov     edx, [ebp+arg_0]
or      eax, 0ffffffffh
mov     [esi+28h], ax
mov     eax, [ebp+arg_8]
add     esp, 0ch
mov     [esi+4], edx
mov     edx, [ebp+arg_10]
neg     eax
lea     ecx, [esi+6ch]
mov     [esi+8], ecx
mov     ecx, [ebp+arg_c]
sbb     al, al
mov     [esi+10h], ecx
mov     ecx, [ebp+arg_4]
mov     [esi+14h], edx
and     al, 2
mov     [esi+2bh], al
lea     edx, [ebp+var_4]
push    edx
mov     [esi], edi
mov     [esi+64h], ecx
mov     word ptr [esi+30h], 101h
mov     [ebp+var_4], 80006h
mov     eax, [esi+8]
push    80006h
push    eax
mov     eax, [edi+18h]
push    ecx
push    edi
mov     bl, 1
call    eax
mov     edi, eax
add     esp, 14h
mov     [ebp+var_8], edi
test    edi, edi
jnz     short loc_100174c1
test    byte ptr [ebp+var_4], bl
jz      short loc_10017483
mov     [esi+2eh], bl
mov     eax, [esi+8]
mov     edx, [eax]
push    eax
mov     eax, [edx+30h]
call    eax
add     esp, 4
test    eax, 400h
jz      short loc_1001749c
mov     byte ptr [esi+30h], 0
test    eax, 1000h
jz      short loc_100174a7
mov     byte ptr [esi+31h], 0
mov     ecx, [ebp+arg_14]
mov     [ecx], esi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    0
mov     eax, esi
call    sub_10017300
mov     edi, [esi+8]
mov     eax, [edi]
add     esp, 4
test    eax, eax
jz      short loc_100174e5
mov     ecx, [eax+4]
push    edi
call    ecx
add     esp, 4
mov     dword ptr [edi], 0
push    esi
call    sub_10009770
mov     edi, [ebp+var_8]
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
mov     edx, [eax]
push    ebx
mov     ebx, [eax+4]
or      ecx, 0ffffffffh
dec     ebx
mov     [ebp+var_4], ecx
mov     [ebp+var_8], edx
js      short loc_1001756b
lea     ecx, [ebx+ebx*4]
push    esi
lea     eax, [eax+ecx*4+8]
push    edi
mov     edx, [eax]
cmp     edx, [eax+0ch]
jge     short loc_1001755d
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     edx, [eax]
movzx   ecx, word ptr [esi+edx*2]
mov     ecx, [edi+ecx*4]
cmp     ecx, [ebp+var_8]
ja      short loc_10017549
inc     edx
mov     [eax], edx
cmp     edx, [eax+0ch]
jl      short loc_10017531
jmp     short loc_1001755d
cmp     ecx, [ebp+var_4]
jnb     short loc_1001755d
movzx   edx, word ptr [esi+edx*2]
add     edx, [eax+10h]
mov     [ebp+var_4], ecx
mov     ecx, [ebp+arg_8]
mov     [ecx], edx
sub     eax, 14h
dec     ebx
jns     short loc_10017524
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
mov     edx, [ebp+arg_4]
mov     [eax], ecx
xor     eax, eax
cmp     ecx, 0ffffffffh
mov     [edx], ecx
setz    al
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 9ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
xor     edi, edi
mov     [ebp+src], eax
mov     eax, [ebp+arg_c]
mov     esi, [eax]
push    68h
lea     ecx, [ebp+var_70]
push    edi
push    ecx
mov     [ebp+var_98], eax
mov     [ebp+var_94], esi
mov     [ebp+var_78], edi
mov     [ebp+var_7c], edi
call    memset
xor     eax, eax
add     esp, 0ch
mov     [ebp+var_88], eax
test    esi, esi
jle     loc_10017685
mov     edx, [ebp+arg_8]
mov     [ebp+var_80], edx
mov     ecx, [ebp+var_80]
xor     edi, edi
mov     [ebp+var_78], 1
mov     [ebp+var_7c], ecx
mov     [ebp+var_74], edi
test    al, 1
jz      short loc_10017664
mov     edx, [ebp+edi*8+var_70]
mov     esi, [ebp+edi*8+var_6c]
mov     [ebp+var_84], edx
xor     edx, edx
xor     eax, eax
mov     [ebp+var_8c], edx
jmp     short loc_10017613
mov     edi, [ebp+var_74]
mov     ecx, [ebp+var_78]
cmp     [ebp+var_8c], ecx
jl      loc_100176b6
cmp     eax, [ebp+var_84]
jl      loc_100176be
mov     eax, [ebp+src]
mov     [ebp+var_78], edx
add     edx, edx
push    edx
push    eax
push    esi
mov     [ebp+var_7c], esi
call    memcpy
mov     eax, [ebp+var_88]
inc     edi
mov     edx, 1
mov     ecx, edi
shl     edx, cl
add     esp, 0ch
mov     [ebp+var_74], edi
test    eax, edx
jnz     short loc_100175f6
mov     esi, [ebp+var_94]
mov     ecx, [ebp+var_7c]
mov     edx, [ebp+var_78]
add     [ebp+var_80], 2
inc     eax
mov     [ebp+edi*8+var_6c], ecx
mov     [ebp+edi*8+var_70], edx
mov     [ebp+var_88], eax
cmp     eax, esi
jl      loc_100175e0
inc     edi
mov     eax, 1
mov     ecx, edi
rol     eax, cl
mov     [ebp+var_88], eax
cmp     edi, 0dh
jge     loc_10017816
test    esi, eax
jz      loc_1001776a
mov     ecx, [ebp+edi*8+var_70]
xor     eax, eax
xor     edx, edx
mov     [ebp+var_74], edx
mov     [ebp+var_80], eax
jmp     short loc_10017733
cmp     eax, [ebp+var_84]
jge     short loc_100176e6
mov     ecx, [ebp+var_8c]
cmp     ecx, [ebp+var_78]
jge     short loc_100176df
mov     ebx, [ebp+var_7c]
movzx   edi, word ptr [esi+eax*2]
movzx   ecx, word ptr [ebx+ecx*2]
mov     ebx, [ebp+arg_0]
mov     edi, [ebx+edi*4]
cmp     edi, [ebx+ecx*4]
jnb     short loc_100176e6
movzx   ecx, word ptr [esi+eax*2]
inc     eax
jmp     short loc_100176fa
mov     edi, [ebp+var_8c]
mov     ecx, [ebp+var_7c]
movzx   ecx, word ptr [ecx+edi*2]
inc     edi
mov     [ebp+var_8c], edi
movzx   edi, cx
mov     edi, [ebx+edi*4]
mov     ebx, [ebp+src]
mov     [ebx+edx*2], cx
mov     ebx, [ebp+arg_0]
inc     edx
cmp     eax, [ebp+var_84]
jge     loc_10017610
movzx   ecx, word ptr [esi+eax*2]
cmp     [ebx+ecx*4], edi
jnz     loc_10017610
inc     eax
jmp     loc_10017610
mov     edx, [ebp+var_74]
mov     esi, [ebp+var_78]
cmp     edx, esi
jl      short loc_10017798
cmp     eax, ecx
jl      short loc_1001779c
mov     eax, [ebp+var_80]
mov     edx, [ebp+src]
mov     ecx, [ebp+edi*8+var_6c]
mov     [ebp+var_78], eax
add     eax, eax
push    eax
push    edx
push    ecx
mov     [ebp+var_7c], ecx
call    memcpy
mov     eax, [ebp+var_88]
mov     esi, [ebp+var_94]
add     esp, 0ch
inc     edi
rol     eax, 1
mov     [ebp+var_88], eax
cmp     edi, 0dh
jl      loc_1001769e
mov     eax, [ebp+var_78]
mov     ecx, [ebp+var_98]
mov     [ecx], eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     eax, ecx
jge     short loc_100177c5
cmp     edx, esi
jge     short loc_100177b7
mov     ecx, [ebp+edi*8+var_6c]
movzx   ecx, word ptr [ecx+eax*2]
mov     esi, [ebp+var_7c]
movzx   edx, word ptr [esi+edx*2]
mov     ecx, [ebx+ecx*4]
cmp     ecx, [ebx+edx*4]
jnb     short loc_100177c2
mov     ecx, [ebp+edi*8+var_6c]
movzx   ecx, word ptr [ecx+eax*2]
inc     eax
jmp     short loc_100177d0
mov     edx, [ebp+var_74]
mov     ecx, [ebp+var_7c]
movzx   ecx, word ptr [ecx+edx*2]
inc     edx
mov     [ebp+var_74], edx
mov     esi, [ebp+src]
movzx   edx, cx
mov     edx, [ebx+edx*4]
mov     [ebp+var_84], edx
mov     edx, [ebp+var_80]
mov     [esi+edx*2], cx
mov     ecx, [ebp+edi*8+var_70]
inc     edx
mov     [ebp+var_80], edx
cmp     eax, ecx
jge     loc_10017730
mov     edx, [ebp+edi*8+var_6c]
movzx   edx, word ptr [edx+eax*2]
mov     esi, [ebp+var_84]
cmp     [ebx+edx*4], esi
jnz     loc_10017730
inc     eax
jmp     loc_10017730
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_78]
mov     eax, [ebp+var_98]
pop     edi
pop     esi
xor     ecx, ebp
mov     [eax], edx
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [eax+44h]
push    esi
lea     esi, [ebx+21h]
shr     esi, 0ch
inc     esi
push    edi
lea     ecx, [esi+esi*4]
lea     edi, [ebx+ecx*2]
lea     edi, [edi+edi+8]
mov     eax, edi
mov     [ebp+var_8], 0
mov     [ebp+var_24], ebx
mov     [ebp+var_1c], esi
call    sub_10009540
mov     [ebp+var_c], eax
test    eax, eax
jnz     short loc_10017887
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    edi
push    0
push    eax
call    memset
mov     edx, [ebp+var_c]
add     esp, 0ch
mov     [edx+4], esi
cmp     ebx, 1000h
jbe     short loc_100178a6
mov     ebx, 1000h
lea     eax, [ebx+ebx]
call    sub_10009540
mov     [ebp+var_20], eax
test    eax, eax
jnz     short loc_100178bc
mov     [ebp+var_8], 7
xor     edi, edi
mov     [ebp+var_4], edi
cmp     [ebp+var_8], edi
jnz     loc_100179b8
mov     ebx, [ebp+arg_0]
jmp     short loc_100178d6
mov     esi, [ebp+var_1c]
mov     edi, [ebp+var_4]
cmp     edi, esi
jge     loc_100179b8
mov     esi, [ebp+arg_0]
lea     eax, [ebp+var_18]
push    eax
call    sub_10016970
mov     edi, eax
add     esp, 4
mov     [ebp+var_2c], edi
test    edi, edi
jnz     short loc_10017932
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_18]
lea     esi, [ecx+4000h]
test    eax, eax
jnz     short loc_1001791c
add     ecx, 88h
lea     edx, [ecx-4]
mov     [ebp+var_18], ecx
mov     [ebp+var_14], edx
mov     [ebp+var_28], esi
mov     ebx, eax
jmp     short loc_10017935
dec     eax
shl     eax, 0ch
add     eax, 0fdeh
lea     edx, [ecx-4]
mov     [ebp+var_14], edx
mov     [ebp+var_28], esi
mov     ebx, eax
jmp     short loc_10017935
mov     edx, [ebp+var_14]
mov     [ebp+var_8], edi
test    edi, edi
jnz     short loc_100179ad
mov     ecx, [ebp+var_4]
add     edx, 4
inc     ecx
mov     [ebp+var_14], edx
cmp     ecx, [ebp+var_1c]
jnz     short loc_10017952
mov     ecx, [ebp+var_24]
sub     ecx, ebx
jmp     short loc_1001795a
mov     ecx, [ebp+var_28]
sub     ecx, edx
sar     ecx, 2
mov     edi, [ebp+var_c]
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
lea     eax, [ebx+eax*2]
lea     esi, [edi+eax*2+8]
inc     ebx
xor     eax, eax
mov     [ebp+var_10], ecx
test    ecx, ecx
jle     short loc_1001797d
mov     [esi+eax*2], ax
inc     eax
cmp     eax, ecx
jl      short loc_10017974
mov     eax, [ebp+var_20]
lea     ecx, [ebp+var_10]
push    ecx
push    esi
push    eax
push    edx
call    sub_10017580
mov     eax, [ebp+var_4]
mov     edx, [ebp+var_10]
lea     ecx, [eax+eax*4]
lea     eax, [edi+ecx*4]
mov     ecx, [ebp+var_14]
mov     edi, [ebp+var_2c]
add     esp, 10h
mov     [eax+18h], ebx
mov     [eax+14h], edx
mov     [eax+0ch], esi
mov     [eax+10h], ecx
inc     [ebp+var_4]
test    edi, edi
jz      loc_100178d0
mov     esi, [ebp+var_20]
call    sub_10009650
mov     edi, [ebp+var_8]
test    edi, edi
jz      short loc_100179cf
mov     esi, [ebp+var_c]
call    sub_10009650
mov     eax, [ebp+var_c]
mov     edx, [ebp+arg_4]
mov     [edx], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
cmp     byte ptr [edi+2bh], 0
jz      short loc_100179ee
xor     esi, esi
jmp     short loc_10017a05
mov     eax, [edi+4]
mov     edx, [ebp+arg_8]
mov     ecx, [eax]
push    0ah
push    ebx
push    edx
push    eax
mov     eax, [ecx+38h]
call    eax
add     esp, 10h
mov     esi, eax
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10017a1e
cmp     esi, 5
jnz     short loc_10017a1e
mov     ecx, [ebp+arg_4]
push    ecx
call    eax
add     esp, 4
test    eax, eax
jnz     short loc_100179e4
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 3ch
push    ebx
push    esi
push    edi
mov     edi, eax
xor     eax, eax
mov     [esp+48h+var_20], eax
mov     [esp+48h+var_24], eax
mov     [esp+48h+var_1c], eax
mov     [esp+48h+var_34], eax
movzx   eax, word ptr [edi+42h]
mov     esi, eax
and     esi, 1
and     eax, 0fe00h
shl     esi, 10h
add     esi, eax
mov     eax, [edi+20h]
mov     eax, [eax]
mov     ecx, [eax+60h]
add     eax, 60h
mov     [esp+48h+var_38], eax
cmp     ecx, [edi+44h]
jb      short loc_10017a80
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     edx, [esp+48h+var_20]
push    edx
push    edi
call    sub_10017840
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     loc_10017db4
cmp     [ebp+arg_0], eax
jz      short loc_10017aa4
mov     eax, [ebp+arg_4]
mov     [esp+48h+var_34], eax
mov     ecx, [edi+44h]
mov     edx, [edi+48h]
mov     [esp+48h+var_3c], ecx
mov     ecx, 1
mov     [esp+48h+var_18], edx
mov     [esp+48h+var_30], ecx
mov     eax, [esp+48h+var_38]
mov     eax, [eax+ecx*4+4]
mov     [esp+48h+var_14], eax
cmp     [esp+48h+var_3c], eax
jbe     short loc_10017b3e
mov     edx, [esp+48h+var_34]
lea     eax, [ecx+3]
mov     ecx, [ebp+arg_8]
push    eax
push    ecx
push    edx
mov     ebx, 1
call    sub_100179e0
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_10017b25
mov     eax, [esp+48h+var_30]
cmp     eax, 1
jnz     short loc_10017afc
mov     ecx, [esp+48h+var_3c]
jmp     short loc_10017aff
or      ecx, 0ffffffffh
mov     edx, [esp+48h+var_38]
mov     [edx+eax*4+4], ecx
cmp     byte ptr [edi+2bh], 0
jnz     short loc_10017b3e
mov     ecx, [edi+4]
mov     edx, [ecx]
push    9
add     eax, 3
push    1
push    eax
mov     eax, [edx+38h]
push    ecx
call    eax
add     esp, 10h
jmp     short loc_10017b3e
cmp     ebx, 5
jnz     loc_10017da9
mov     ecx, [esp+48h+var_14]
mov     [esp+48h+var_3c], ecx
mov     [esp+48h+var_34], 0
mov     ecx, [esp+48h+var_30]
inc     ecx
mov     [esp+48h+var_30], ecx
cmp     ecx, 5
jl      loc_10017abb
mov     edx, [esp+48h+var_38]
mov     eax, [edx]
cmp     eax, [esp+48h+var_3c]
jnb     loc_10017d37
mov     ecx, [ebp+arg_8]
mov     edx, [esp+48h+var_34]
push    3
push    ecx
push    edx
mov     ebx, 1
call    sub_100179e0
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     loc_10017d37
mov     eax, [esp+48h+var_38]
mov     ecx, [eax]
mov     [esp+48h+var_14], ecx
mov     ecx, [ebp+arg_c]
test    ecx, ecx
jz      short loc_10017bac
mov     eax, [edi+8]
mov     edx, [eax]
push    ecx
push    eax
mov     eax, [edx+14h]
call    eax
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     loc_10017d1d
mov     ecx, [esp+48h+var_18]
mov     eax, esi
cdq
push    edx
push    eax
push    0
push    ecx
mov     [esp+58h+var_30], eax
mov     [esp+58h+var_2c], edx
call    __allmul
mov     [esp+48h+var_10], eax
mov     eax, [edi+4]
mov     [esp+48h+var_c], edx
mov     edx, [eax]
mov     edx, [edx+18h]
lea     ecx, [esp+48h+var_8]
push    ecx
push    eax
call    edx
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     loc_10017d1d
mov     eax, [esp+48h+var_4]
cmp     eax, [esp+48h+var_c]
jg      short loc_10017c15
jl      short loc_10017c00
mov     ecx, [esp+48h+var_8]
cmp     ecx, [esp+48h+var_10]
jnb     short loc_10017c15
mov     eax, [edi+4]
mov     edx, [eax]
mov     edx, [edx+28h]
lea     ecx, [esp+48h+var_10]
push    ecx
push    5
push    eax
call    edx
add     esp, 0ch
mov     edx, [esp+48h+var_20]
lea     eax, [esp+48h+var_1c]
push    eax
lea     ecx, [esp+4ch+var_24]
push    ecx
push    edx
call    sub_10017500
add     esp, 0ch
test    eax, eax
jnz     loc_10017cc0
mov     ecx, [esp+48h+var_1c]
cmp     ecx, [esp+48h+var_14]
jbe     short loc_10017c15
cmp     ecx, [esp+48h+var_3c]
ja      short loc_10017c15
mov     eax, [esp+48h+var_18]
cmp     [esp+48h+var_24], eax
ja      short loc_10017c15
mov     eax, [edi+8]
mov     ebx, [eax]
push    0
lea     eax, [esi+18h]
cdq
dec     ecx
push    ecx
push    edx
push    eax
call    __allmul
mov     ecx, [ebp+arg_10]
add     eax, 38h
adc     edx, 0
push    edx
mov     edx, [ebx+8]
push    eax
mov     eax, [edi+8]
push    esi
push    ecx
push    eax
call    edx
mov     ebx, eax
add     esp, 14h
test    ebx, ebx
jnz     loc_10017d1d
mov     ecx, [esp+48h+var_2c]
mov     eax, [edi+4]
mov     ebx, [eax]
mov     edx, [esp+48h+var_30]
mov     eax, [esp+48h+var_24]
push    ecx
push    edx
dec     eax
push    0
push    eax
call    __allmul
mov     ecx, [ebx+0ch]
push    edx
push    eax
mov     eax, [ebp+arg_10]
push    esi
push    eax
mov     eax, [edi+4]
push    eax
call    ecx
mov     ebx, eax
add     esp, 14h
test    ebx, ebx
jz      loc_10017c15
jmp     short loc_10017d1d
mov     edx, [edi+20h]
mov     eax, [edx]
mov     eax, [eax+10h]
mov     esi, [esp+48h+var_3c]
cmp     esi, eax
jnz     short loc_10017d17
mov     edx, [esp+48h+var_2c]
mov     eax, [esp+48h+var_30]
mov     ecx, [edi+48h]
push    edx
push    eax
push    0
push    ecx
call    __allmul
mov     ecx, [edi+4]
mov     ebx, [ecx]
push    edx
push    eax
push    ecx
mov     ecx, [ebx+10h]
call    ecx
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_10017d1d
mov     ecx, [ebp+arg_c]
test    ecx, ecx
jz      short loc_10017d17
mov     eax, [edi+4]
mov     edx, [eax]
push    ecx
push    eax
mov     eax, [edx+14h]
call    eax
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     short loc_10017d1d
mov     ecx, [esp+48h+var_38]
mov     [ecx], esi
cmp     byte ptr [edi+2bh], 0
jnz     short loc_10017d37
mov     eax, [edi+4]
mov     edx, [eax]
push    9
push    1
push    3
push    eax
mov     eax, [edx+38h]
call    eax
add     esp, 10h
cmp     ebx, 5
jnz     short loc_10017d40
xor     ebx, ebx
jmp     short loc_10017d44
test    ebx, ebx
jnz     short loc_10017da9
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10017da9
mov     ecx, [esp+48h+var_38]
mov     edx, [ecx]
cmp     edx, [edi+44h]
jnb     short loc_10017d6d
mov     esi, [esp+48h+var_20]
mov     ebx, 5
call    sub_10009650
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     eax, 2
jnz     short loc_10017da9
mov     eax, [ebp+arg_8]
mov     ecx, [esp+48h+var_34]
push    4
push    eax
push    ecx
mov     ebx, 4
call    sub_100179e0
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_10017da9
cmp     [edi+2bh], al
jnz     short loc_10017da9
mov     edi, [edi+4]
mov     edx, [edi]
mov     eax, [edx+38h]
push    9
push    4
push    4
push    edi
call    eax
add     esp, 10h
mov     esi, [esp+48h+var_20]
call    sub_10009650
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, dword_100816bc
sub     esp, 0ch
push    esi
test    eax, eax
jz      short loc_10017dd2
call    eax
mov     eax, [edi+8]
mov     ecx, [eax]
lea     edx, [ebp+var_8]
push    edx
push    eax
mov     eax, [ecx+18h]
call    eax
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     short loc_10017e0e
mov     edx, [ebp+arg_4]
cmp     [ebp+var_4], edx
jl      short loc_10017e0e
mov     ecx, [ebp+arg_0]
jg      short loc_10017dfc
cmp     [ebp+var_8], ecx
jbe     short loc_10017e0e
mov     eax, [edi+8]
mov     esi, [eax]
push    edx
push    ecx
mov     ecx, [esi+10h]
push    eax
call    ecx
add     esp, 0ch
mov     esi, eax
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_10017e19
call    eax
test    esi, esi
jz      short loc_10017e2f
mov     edx, [edi+64h]
push    edx
push    offset acannotlimitwal
push    esi
call    sub_1000b150
add     esp, 0ch
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, eax
xor     eax, eax
test    edi, edi
jz      loc_10017f53
mov     [esp+18h+var_8], eax
mov     eax, [edi+4]
mov     ecx, [eax]
mov     edx, [ecx+1ch]
push    4
push    eax
call    edx
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     short loc_10017ee7
cmp     [edi+2bh], al
jnz     short loc_10017e7b
mov     byte ptr [edi+2bh], 1
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    0
push    0
push    eax
push    ecx
push    edx
push    0
push    0
xor     esi, esi
mov     eax, edi
call    sub_100191a0
mov     ebx, eax
add     esp, 1ch
test    ebx, ebx
jnz     short loc_10017ee7
mov     eax, [edi+4]
lea     edx, [esp+18h+var_4]
push    edx
mov     [esp+1ch+var_4], 0ffffffffh
mov     ecx, [eax]
push    0ah
push    eax
mov     eax, [ecx+28h]
call    eax
mov     eax, 1
add     esp, 0ch
cmp     [esp+18h+var_4], eax
jz      short loc_10017ecf
mov     [esp+18h+var_8], eax
jmp     short loc_10017ee7
cmp     [edi+14h], esi
jl      short loc_10017ee7
jg      short loc_10017edb
cmp     [edi+10h], esi
jb      short loc_10017ee7
push    0
push    0
call    sub_10017dc0
add     esp, 8
mov     ecx, [esp+18h+var_8]
push    ecx
mov     eax, edi
call    sub_10017300
mov     esi, [edi+8]
mov     eax, [esi]
add     esp, 4
test    eax, eax
jz      short loc_10017f0e
mov     edx, [eax+4]
push    esi
call    edx
add     esp, 4
mov     dword ptr [esi], 0
cmp     [esp+18h+var_8], 0
jz      short loc_10017f3c
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_10017f20
call    eax
mov     ecx, [edi+64h]
mov     eax, [edi]
mov     edx, [eax+1ch]
push    0
push    ecx
push    eax
call    edx
mov     eax, dword_100816c0
add     esp, 0ch
test    eax, eax
jz      short loc_10017f3c
call    eax
mov     eax, [edi+20h]
push    eax
call    sub_10009770
add     esp, 4
push    edi
call    sub_10009770
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 74h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
cmp     byte ptr [ebx+2bh], 2
mov     eax, [ebp+arg_0]
mov     ecx, [ebx+20h]
push    esi
mov     [ebp+var_6c], eax
mov     eax, [ecx]
push    edi
mov     ecx, 0ch
mov     esi, eax
lea     edi, [ebp+var_38]
mov     [ebp+var_70], eax
rep movsd
jz      short loc_10017fa3
mov     eax, [ebx+4]
mov     edx, [eax]
push    eax
mov     eax, [edx+3ch]
call    eax
mov     eax, [ebp+var_70]
add     esp, 4
lea     esi, [eax+30h]
mov     ecx, 0ch
lea     edi, [ebp+var_68]
rep movsd
mov     eax, 30h
xor     ecx, ecx
jmp     short loc_10017fc0
mov     edx, [ebp+ecx+var_38]
cmp     edx, [ebp+ecx+var_68]
jnz     loc_10018081
sub     eax, 4
add     ecx, 4
cmp     eax, 4
jnb     short loc_10017fc0
cmp     [ebp+var_2c], 0
jz      loc_10018081
xor     edx, edx
lea     eax, [ebp+var_38]
xor     ecx, ecx
lea     ebx, [ebx+0]
mov     esi, [eax]
add     esi, edx
add     ecx, esi
mov     esi, [eax+4]
add     esi, ecx
add     edx, esi
add     eax, 8
lea     esi, [ebp+var_10]
cmp     eax, esi
jb      short loc_10017ff0
cmp     ecx, [ebp+var_10]
jnz     short loc_10018081
cmp     edx, [ebp+var_c]
jnz     short loc_10018081
lea     eax, [ebp+var_38]
lea     edi, [ebx+34h]
mov     edx, edi
mov     esi, eax
mov     ecx, 30h
sub     edx, esi
mov     esi, [edx+eax]
cmp     esi, [eax]
jnz     short loc_10018046
sub     ecx, 4
add     eax, 4
cmp     ecx, 4
jnb     short loc_10018022
xor     eax, eax
pop     edi
pop     esi
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_6c]
mov     dword ptr [eax], 1
mov     ecx, 0ch
lea     esi, [ebp+var_38]
rep movsd
movzx   eax, word ptr [ebx+42h]
mov     ecx, eax
and     ecx, 1
shl     ecx, 10h
and     eax, 0fe00h
add     ecx, eax
mov     [ebx+24h], ecx
xor     eax, eax
pop     edi
pop     esi
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_8]
pop     edi
xor     ecx, ebp
mov     eax, 1
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, eax
push    edi
lea     eax, [ebp+var_4]
push    eax
xor     edi, edi
call    sub_10016970
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     loc_100181dc
cmp     [ebp+var_4], eax
jz      short loc_1001812c
mov     ecx, [ebp+arg_0]
push    ecx
mov     ebx, esi
call    sub_10017f60
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_100181b3
test    byte ptr [esi+2eh], 2
jz      short loc_10018133
cmp     byte ptr [esi+2bh], 0
jnz     short loc_10018122
mov     eax, [esi+4]
mov     edx, [eax]
push    6
push    1
push    0
push    eax
mov     eax, [edx+38h]
call    eax
mov     edi, eax
add     esp, 10h
test    edi, edi
jnz     loc_100181af
cmp     [esi+2bh], al
jnz     short loc_10018122
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    5
push    1
push    edi
push    eax
call    edx
add     esp, 10h
mov     edi, 108h
jmp     loc_100181af
mov     ebx, 1
jmp     short loc_100180e0
cmp     byte ptr [esi+2bh], 0
jnz     short loc_10018153
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    0ah
push    1
push    0
push    eax
call    edx
mov     edi, eax
add     esp, 10h
test    edi, edi
jnz     short loc_100181af
lea     eax, [ebp+var_4]
push    eax
xor     edi, edi
mov     byte ptr [esi+2ch], 1
call    sub_10016970
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     short loc_10018191
mov     ecx, [ebp+arg_0]
push    ecx
mov     ebx, esi
call    sub_10017f60
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10018191
mov     ecx, esi
call    sub_10016f50
mov     edx, [ebp+arg_0]
mov     edi, eax
mov     dword ptr [edx], 1
cmp     byte ptr [esi+2bh], 0
mov     byte ptr [esi+2ch], 0
jnz     short loc_100181af
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    9
push    1
push    0
push    eax
call    edx
add     esp, 10h
test    ebx, ebx
jnz     short loc_100181da
cmp     dword ptr [esi+34h], 2de218h
jz      short loc_100181da
push    offset ac0d89d4a975292
push    0b34ah
push    offset acannotopenfile
push    0eh
call    sub_1000b150
add     esp, 10h
mov     edi, 0eh
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
xor     edi, edi
mov     ebx, ecx
mov     esi, edx
cmp     eax, 5
jle     short loc_10018230
lea     ecx, [edi+1]
cmp     eax, 64h
jle     short loc_10018216
lea     eax, [edi+0fh]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     eax, 0ah
jl      short loc_10018224
lea     ecx, [eax-9]
imul    ecx, 0eeh
mov     eax, [esi]
push    ecx
push    eax
mov     eax, [eax+3ch]
call    eax
add     esp, 8
test    ebx, ebx
jnz     loc_100182b8
mov     ecx, [ebp+arg_0]
push    ecx
mov     eax, esi
call    sub_100180a0
mov     edi, eax
add     esp, 4
cmp     edi, 5
jnz     short loc_100182ab
mov     edx, [esi+20h]
cmp     [edx], ebx
jz      short loc_1001828c
cmp     [esi+2bh], bl
jnz     short loc_1001828c
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    6
push    1
push    2
push    eax
call    edx
mov     edi, eax
add     esp, 10h
test    edi, edi
jnz     short loc_10018298
cmp     [esi+2bh], al
jnz     short loc_1001828c
mov     esi, [esi+4]
mov     eax, [esi]
mov     ecx, [eax+38h]
push    5
push    1
push    2
push    esi
call    ecx
add     esp, 10h
or      edi, 0ffffffffh
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     edi, 5
jnz     short loc_100182ab
mov     edi, 105h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    edi, edi
jz      short loc_100182b8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [esi+20h]
mov     edx, [edx]
add     edx, 60h
mov     [ebp+var_c], edx
test    ebx, ebx
jnz     loc_1001835f
mov     eax, [edx]
cmp     eax, [esi+44h]
jnz     loc_1001835f
cmp     [esi+2bh], bl
jz      short loc_100182df
xor     edi, edi
jmp     short loc_100182f8
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    6
push    1
push    3
push    eax
call    edx
mov     edx, [ebp+var_c]
add     esp, 10h
mov     edi, eax
cmp     byte ptr [esi+2bh], 2
jz      short loc_1001830f
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+3ch]
push    eax
call    edx
mov     edx, [ebp+var_c]
add     esp, 4
test    edi, edi
jnz     short loc_10018356
mov     edx, [esi+20h]
mov     edx, [edx]
lea     eax, [esi+34h]
lea     ecx, [edi+30h]
sub     edx, eax
mov     edi, [edx+eax]
cmp     edi, [eax]
jnz     short loc_10018341
sub     ecx, 4
add     eax, 4
cmp     ecx, 4
jnb     short loc_10018320
xor     edx, edx
mov     [esi+28h], dx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi+2bh], 0
jnz     loc_100184cb
push    5
push    1
push    3
jmp     loc_100184bd
cmp     edi, 5
jnz     loc_100182af
mov     [ebp+var_8], 0
mov     [ebp+var_4], 0
mov     eax, 1
add     edx, 8
mov     ecx, [edx]
cmp     [ebp+var_8], ecx
ja      short loc_10018387
cmp     ecx, [esi+44h]
ja      short loc_10018387
mov     [ebp+var_8], ecx
mov     [ebp+var_4], eax
inc     eax
add     edx, 4
cmp     eax, 5
jl      short loc_10018375
test    byte ptr [esi+2eh], 2
jnz     short loc_10018410
mov     eax, [ebp+var_8]
cmp     eax, [esi+44h]
jb      short loc_100183a9
mov     ecx, [ebp+var_4]
test    ecx, ecx
jnz     loc_1001842b
mov     ebx, 1
mov     edi, edi
cmp     byte ptr [esi+2bh], 0
jnz     short loc_100183e2
mov     eax, [esi+4]
mov     ecx, [eax]
push    0ah
push    1
lea     edx, [ebx+3]
push    edx
push    eax
mov     eax, [ecx+38h]
call    eax
mov     edi, eax
add     esp, 10h
test    edi, edi
jz      short loc_100183e4
cmp     edi, 5
jnz     loc_100182af
inc     ebx
cmp     ebx, eax
jl      short loc_100183b0
jmp     short loc_10018410
xor     edi, edi
mov     eax, [esi+44h]
mov     ecx, [ebp+var_c]
mov     [ecx+ebx*4+4], eax
cmp     byte ptr [esi+2bh], 0
mov     [ebp+var_8], eax
mov     [ebp+var_4], ebx
jnz     short loc_10018410
mov     eax, [esi+4]
mov     edx, [eax]
push    9
push    1
add     ebx, 3
push    ebx
push    eax
mov     eax, [edx+38h]
call    eax
add     esp, 10h
mov     ecx, [ebp+var_4]
test    ecx, ecx
jnz     short loc_1001842b
lea     eax, [edi-5]
neg     eax
sbb     eax, eax
and     eax, 209h
dec     eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi+2bh], 0
jnz     short loc_1001845e
mov     eax, [esi+4]
mov     edx, [eax]
push    6
push    1
add     ecx, 3
push    ecx
push    eax
mov     eax, [edx+38h]
call    eax
add     esp, 10h
test    eax, eax
jz      short loc_1001845e
cmp     eax, 5
jnz     loc_100184ce
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi+2bh], 2
jz      short loc_10018472
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+3ch]
push    eax
call    edx
add     esp, 4
mov     eax, [ebp+var_c]
mov     edi, [ebp+var_4]
mov     ecx, [eax+edi*4+4]
cmp     ecx, [ebp+var_8]
jnz     short loc_100184af
mov     edx, [esi+20h]
mov     edx, [edx]
lea     eax, [esi+34h]
mov     ecx, 30h
sub     edx, eax
mov     ebx, [edx+eax]
cmp     ebx, [eax]
jnz     short loc_100184af
sub     ecx, 4
add     eax, 4
cmp     ecx, 4
jnb     short loc_10018490
mov     [esi+28h], di
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi+2bh], 0
jnz     short loc_100184cb
push    5
push    1
add     edi, 3
push    edi
mov     esi, [esi+4]
mov     eax, [esi]
mov     ecx, [eax+38h]
push    esi
call    ecx
add     esp, 10h
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     [ebp+var_10], 0
mov     [ebp+var_14], 0fffff7a2h
mov     edx, [ebp+var_10]
mov     eax, [ebp+var_14]
inc     edx
add     eax, 0eeh
mov     [ebp+var_10], edx
mov     [ebp+var_14], eax
cmp     edx, 5
jle     short loc_10018530
mov     ecx, 1
cmp     eax, 549ah
jg      loc_100187c5
cmp     edx, 0ah
jl      short loc_10018524
mov     ecx, eax
mov     eax, [edi]
push    ecx
push    eax
mov     eax, [eax+3ch]
call    eax
add     esp, 8
mov     ecx, [ebp+arg_0]
push    ecx
mov     eax, edi
call    sub_100180a0
mov     esi, eax
add     esp, 4
cmp     esi, 5
jnz     short loc_100185a6
mov     edx, [edi+20h]
cmp     dword ptr [edx], 0
jz      short loc_10018586
cmp     byte ptr [edi+2bh], 0
jnz     short loc_10018586
mov     eax, [edi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    6
push    1
push    2
push    eax
call    edx
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     short loc_1001859a
cmp     [edi+2bh], al
jnz     short loc_10018586
mov     eax, [edi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    5
push    1
push    2
push    eax
call    edx
add     esp, 10h
or      esi, 0ffffffffh
cmp     esi, 0ffffffffh
jz      loc_100184f6
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     esi, 5
jnz     short loc_100185a6
mov     esi, 105h
jmp     short loc_10018589
test    esi, esi
jnz     short loc_10018589
mov     eax, [edi+20h]
mov     ebx, [eax]
mov     ecx, [ebx+60h]
add     ebx, 60h
mov     [ebp+var_c], ebx
cmp     ecx, [edi+44h]
jnz     loc_1001864e
cmp     byte ptr [edi+2bh], 0
jnz     short loc_100185dd
mov     eax, [edi+4]
mov     edx, [eax]
push    6
push    1
push    3
push    eax
mov     eax, [edx+38h]
call    eax
add     esp, 10h
mov     esi, eax
cmp     byte ptr [edi+2bh], 2
jz      short loc_100185f1
mov     eax, [edi+4]
mov     ecx, [eax]
mov     edx, [ecx+3ch]
push    eax
call    edx
add     esp, 4
test    esi, esi
jnz     short loc_10018645
mov     edx, [edi+20h]
mov     edx, [edx]
lea     eax, [edi+34h]
lea     ecx, [esi+30h]
sub     edx, eax
mov     esi, [edx+eax]
cmp     esi, [eax]
jnz     short loc_10018622
sub     ecx, 4
add     eax, 4
cmp     ecx, 4
jnb     short loc_10018602
xor     ecx, ecx
mov     [edi+28h], cx
xor     eax, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+2bh], 0
jnz     loc_100184f6
mov     eax, [edi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    5
push    1
push    3
push    eax
call    edx
add     esp, 10h
jmp     loc_100184f6
cmp     esi, 5
jnz     loc_10018589
xor     eax, eax
mov     [ebp+var_8], eax
mov     [ebp+var_4], eax
mov     eax, 1
lea     edx, [ebx+8]
mov     edi, edi
mov     ecx, [edx]
cmp     [ebp+var_8], ecx
ja      short loc_10018672
cmp     ecx, [edi+44h]
ja      short loc_10018672
mov     [ebp+var_8], ecx
mov     [ebp+var_4], eax
inc     eax
add     edx, 4
cmp     eax, 5
jl      short loc_10018660
test    byte ptr [edi+2eh], 2
jnz     loc_10018703
mov     eax, [ebp+var_8]
cmp     eax, [edi+44h]
jb      short loc_10018698
mov     ecx, [ebp+var_4]
test    ecx, ecx
jnz     loc_1001871d
mov     ebx, 1
lea     ecx, [ecx+0]
cmp     byte ptr [edi+2bh], 0
jnz     short loc_100186d2
mov     eax, [edi+4]
mov     ecx, [eax]
push    0ah
push    1
lea     edx, [ebx+3]
push    edx
push    eax
mov     eax, [ecx+38h]
call    eax
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_100186d4
cmp     esi, 5
jnz     loc_10018589
inc     ebx
cmp     ebx, eax
jl      short loc_100186a0
jmp     short loc_10018700
xor     esi, esi
mov     eax, [edi+44h]
mov     ecx, [ebp+var_c]
mov     [ecx+ebx*4+4], eax
cmp     byte ptr [edi+2bh], 0
mov     [ebp+var_8], eax
mov     [ebp+var_4], ebx
jnz     short loc_10018700
mov     eax, [edi+4]
mov     edx, [eax]
push    9
push    1
add     ebx, 3
push    ebx
push    eax
mov     eax, [edx+38h]
call    eax
add     esp, 10h
mov     ebx, [ebp+var_c]
mov     ecx, [ebp+var_4]
test    ecx, ecx
jnz     short loc_1001871d
sub     esi, 5
neg     esi
sbb     esi, esi
and     esi, 209h
dec     esi
jmp     loc_10018589
cmp     byte ptr [edi+2bh], 0
jz      short loc_10018773
xor     esi, esi
cmp     byte ptr [edi+2bh], 2
jz      short loc_10018739
mov     eax, [edi+4]
mov     ecx, [eax]
mov     edx, [ecx+3ch]
push    eax
call    edx
add     esp, 4
mov     eax, [ebp+var_4]
mov     ecx, [ebx+eax*4+4]
cmp     ecx, [ebp+var_8]
jnz     short loc_1001879d
mov     edx, [edi+20h]
mov     edx, [edx]
lea     eax, [edi+34h]
mov     ecx, 30h
sub     edx, eax
mov     ebx, [edx+eax]
cmp     ebx, [eax]
jnz     short loc_1001879d
sub     ecx, 4
add     eax, 4
cmp     ecx, 4
jnb     short loc_10018754
mov     ax, word ptr [ebp+var_4]
mov     [edi+28h], ax
jmp     loc_10018589
mov     eax, [edi+4]
mov     edx, [eax]
push    6
push    1
add     ecx, 3
push    ecx
push    eax
mov     eax, [edx+38h]
call    eax
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_10018725
cmp     esi, 5
jz      loc_100184f6
jmp     loc_10018589
cmp     byte ptr [edi+2bh], 0
jnz     loc_100184f6
mov     eax, [edi+4]
mov     edx, [ebp+var_4]
mov     ecx, [eax]
push    5
push    1
add     edx, 3
push    edx
push    eax
mov     eax, [ecx+38h]
call    eax
add     esp, 10h
jmp     loc_100184f6
pop     esi
mov     eax, 0fh
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi+2ch], 0
jz      short loc_100187f8
cmp     byte ptr [esi+2bh], 0
jnz     short loc_100187f0
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    9
push    1
push    0
push    eax
call    edx
add     esp, 10h
mov     byte ptr [esi+2ch], 0
mov     byte ptr [esi+2fh], 0
movzx   ecx, word ptr [esi+28h]
test    cx, cx
js      short locret_10018827
cmp     byte ptr [esi+2bh], 0
jnz     short loc_10018820
mov     eax, [esi+4]
mov     edx, [eax]
mov     edx, [edx+38h]
movsx   ecx, cx
push    5
push    1
add     ecx, 3
push    ecx
push    eax
call    edx
add     esp, 10h
or      eax, 0ffffffffh
mov     [esi+28h], ax
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 1ch
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, [ebx+44h]
mov     [esp+28h+var_18], 0
mov     [esp+28h+var_8], edi
test    edi, edi
jz      loc_100189d8
cmp     word ptr [ebx+28h], 0
jz      loc_100189d8
add     edi, 21h
shr     edi, 0ch
mov     [esp+28h+var_14], edi
test    edi, edi
js      loc_100189c6
cmp     [esp+28h+var_18], 0
jnz     loc_10018947
lea     eax, [esp+28h+var_10]
push    eax
mov     esi, ebx
call    sub_10016970
add     esp, 4
test    eax, eax
jnz     loc_100189e3
mov     eax, [esp+28h+var_10]
lea     edx, [eax+4000h]
test    edi, edi
jnz     short loc_100188b0
add     eax, 88h
mov     [esp+28h+var_10], eax
xor     esi, esi
jmp     short loc_100188bc
lea     esi, [edi-1]
shl     esi, 0ch
add     esi, 0fdeh
add     eax, 0fffffffch
mov     [esp+28h+var_4], eax
mov     eax, [ebp+arg_4]
imul    eax, 17fh
and     eax, 1fffh
mov     cx, [edx+eax*2]
mov     [esp+28h+var_c], 2000h
test    cx, cx
jz      short loc_10018931
mov     cx, [edx+eax*2]
movzx   ecx, cx
add     ecx, esi
cmp     ecx, [esp+28h+var_8]
ja      short loc_1001890c
mov     di, [edx+eax*2]
mov     ebx, [esp+28h+var_4]
movzx   edi, di
mov     edi, [ebx+edi*4]
cmp     edi, [ebp+arg_4]
mov     edi, [esp+28h+var_14]
jnz     short loc_1001890c
mov     [esp+28h+var_18], ecx
mov     ecx, [esp+28h+var_c]
mov     ebx, ecx
dec     ecx
mov     [esp+28h+var_c], ecx
test    ebx, ebx
jz      loc_100189a1
inc     eax
and     eax, 1fffh
mov     cx, [edx+eax*2]
test    cx, cx
jnz     short loc_100188e2
mov     ebx, [ebp+arg_0]
dec     edi
mov     [esp+28h+var_14], edi
jns     loc_10018873
cmp     [esp+28h+var_18], 0
jz      loc_100189c6
movzx   eax, word ptr [ebx+42h]
mov     ecx, [esp+28h+var_18]
mov     edi, eax
and     edi, 1
and     eax, 0fe00h
shl     edi, 10h
add     edi, eax
push    0
lea     eax, [edi+18h]
cdq
dec     ecx
push    ecx
push    edx
push    eax
call    __allmul
mov     ecx, [ebp+arg_8]
add     eax, 38h
mov     dword ptr [ecx], 1
mov     ecx, [ebp+arg_c]
adc     edx, 0
cmp     ecx, edi
jg      short loc_10018985
mov     edi, ecx
mov     ecx, [ebx+8]
mov     esi, [ecx]
push    edx
mov     edx, [ebp+arg_10]
push    eax
mov     eax, [esi+8]
push    edi
push    edx
push    ecx
call    eax
add     esp, 14h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0b4adh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_8]
mov     dword ptr [ecx], 0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_8]
mov     dword ptr [edx], 0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi+2eh], 0
jz      short loc_100189fc
mov     eax, 8
retn
cmp     byte ptr [esi+2bh], 0
jz      short loc_10018a06
xor     eax, eax
jmp     short loc_10018a1e
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    0ah
push    1
push    0
push    eax
call    edx
add     esp, 10h
test    eax, eax
jnz     short locret_10018a6d
mov     ecx, [esi+20h]
push    ebx
push    edi
mov     byte ptr [esi+2ch], 1
mov     ecx, [ecx]
lea     edi, [esi+34h]
mov     edx, 30h
sub     edi, ecx
mov     ebx, [edi+ecx]
cmp     ebx, [ecx]
jnz     short loc_10018a48
sub     edx, 4
add     ecx, 4
cmp     edx, 4
jnb     short loc_10018a33
pop     edi
pop     ebx
retn
cmp     byte ptr [esi+2bh], 0
jnz     short loc_10018a62
mov     eax, [esi+4]
mov     edx, [eax]
push    9
push    1
push    0
push    eax
mov     eax, [edx+38h]
call    eax
add     esp, 10h
pop     edi
mov     byte ptr [esi+2ch], 0
mov     eax, 5
pop     ebx
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
sub     esp, 0ch
push    ebx
xor     ebx, ebx
push    esi
push    edi
cmp     [eax+2ch], bl
jz      short loc_10018af9
mov     ecx, [eax+44h]
mov     edx, [eax+20h]
mov     esi, [edx]
mov     [ebp+var_8], ecx
lea     edi, [eax+34h]
mov     ecx, 0ch
rep movsd
mov     edi, [eax+44h]
inc     edi
lea     esi, [edi+21h]
lea     ecx, ds:0[esi*4]
mov     [ebp+var_4], ecx
lea     esp, [esp+0]
cmp     edi, [ebp+var_8]
ja      short loc_10018af4
mov     edx, [eax+20h]
mov     ecx, esi
shr     ecx, 0ch
test    ecx, ecx
jnz     short loc_10018acb
mov     eax, [edx]
mov     ecx, [ebp+var_4]
mov     eax, [ecx+eax]
jmp     short loc_10018ad8
mov     ecx, [edx+ecx*4]
mov     eax, esi
and     eax, 0fffh
mov     eax, [ecx+eax*4]
mov     edx, [ebp+arg_4]
push    eax
push    edx
call    sub_100138e0
add     [ebp+var_4], 4
mov     ebx, eax
mov     eax, [ebp+arg_0]
add     esp, 8
inc     edi
inc     esi
test    ebx, ebx
jz      short loc_10018ab0
call    sub_10016da0
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
xor     eax, eax
push    ebx
push    edi
cmp     [esi+28h], ax
jnz     loc_10018c7b
mov     ecx, [esi+20h]
mov     edi, [ecx]
mov     edx, [edi+60h]
test    edx, edx
jz      loc_10018c3c
lea     ecx, [ebp+var_c]
lea     ebx, [eax+4]
mov     [ebp+var_8], ecx
cmp     dword_10080234, eax
jnz     short loc_10018b4a
mov     [ebp+var_4], eax
jmp     short loc_10018b68
push    5
call    dword_10080274
add     esp, 4
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_10018b68
mov     edx, eax
push    edx
call    dword_1008027c
add     esp, 4
call    sub_1000b190
mov     ecx, [ebp+var_8]
mov     [ecx], al
inc     ecx
dec     ebx
mov     [ebp+var_8], ecx
jnz     short loc_10018b68
mov     eax, [ebp+var_4]
cmp     eax, ebx
jz      short loc_10018b8a
push    eax
call    dword_10080284
add     esp, 4
cmp     [esi+2bh], bl
jnz     short loc_10018bab
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    0ah
push    4
push    4
push    eax
call    edx
add     esp, 10h
cmp     eax, ebx
jnz     loc_10018c37
inc     dword ptr [esi+68h]
mov     [esi+44h], ebx
movzx   eax, byte ptr [esi+54h]
movzx   ecx, byte ptr [esi+55h]
movzx   edx, byte ptr [esi+56h]
shl     eax, 8
or      eax, ecx
movzx   ecx, byte ptr [esi+57h]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
inc     eax
mov     edx, eax
shr     edx, 18h
mov     [esi+54h], dl
mov     edx, eax
mov     ecx, eax
shr     edx, 8
mov     [esi+57h], al
mov     eax, [ebp+var_c]
shr     ecx, 10h
mov     [esi+56h], dl
mov     edx, esi
mov     [esi+55h], cl
mov     [esi+58h], eax
call    sub_10016b40
mov     [edi+60h], ebx
mov     [edi+68h], ebx
lea     eax, [edi+6ch]
mov     ecx, 3
jmp     short loc_10018c10
mov     dword ptr [eax], 0ffffffffh
add     eax, 4
dec     ecx
jnz     short loc_10018c10
cmp     [esi+2bh], bl
jnz     short loc_10018c3c
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    9
push    4
push    4
push    eax
call    edx
add     esp, 10h
jmp     short loc_10018c3c
cmp     eax, 5
jnz     short loc_10018c7b
cmp     byte ptr [esi+2bh], 0
jnz     short loc_10018c56
mov     eax, [esi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    5
push    1
push    3
push    eax
call    edx
add     esp, 10h
or      eax, 0ffffffffh
mov     [esi+28h], ax
xor     edi, edi
nop
lea     ecx, [ebp+var_10]
inc     edi
push    ecx
mov     eax, edi
mov     ecx, 1
mov     edx, esi
call    sub_100181f0
add     esp, 4
cmp     eax, 0ffffffffh
jz      short loc_10018c60
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
push    edi
mov     edi, eax
mov     ecx, [edi+0ch]
mov     esi, [edi+8]
cmp     [ebp+arg_c], ecx
jg      short loc_10018d08
jl      short loc_10018cad
cmp     ebx, esi
jnb     short loc_10018d08
mov     eax, [ebp+arg_4]
cdq
add     eax, ebx
adc     edx, [ebp+arg_c]
cmp     edx, ecx
jl      short loc_10018d08
jg      short loc_10018cc0
cmp     eax, esi
jb      short loc_10018d08
mov     edx, [ebp+arg_c]
mov     eax, [edi+4]
mov     ecx, [eax]
push    edx
mov     edx, [ebp+arg_0]
push    ebx
sub     esi, ebx
push    esi
push    edx
push    eax
mov     eax, [ecx+0ch]
call    eax
add     esp, 14h
test    eax, eax
jnz     short loc_10018d23
mov     ecx, [edi+10h]
mov     eax, esi
cdq
add     ebx, eax
mov     eax, [edi+4]
adc     [ebp+arg_c], edx
mov     edx, [eax]
sub     [ebp+arg_4], esi
add     [ebp+arg_0], esi
push    ecx
push    eax
mov     eax, [edx+14h]
call    eax
add     esp, 8
cmp     [ebp+arg_4], 0
jz      short loc_10018d23
test    eax, eax
jnz     short loc_10018d23
mov     edx, [ebp+arg_c]
mov     eax, [ebp+arg_4]
mov     edi, [edi+4]
mov     ecx, [edi]
push    edx
mov     edx, [ebp+arg_0]
push    ebx
push    eax
mov     eax, [ecx+0ch]
push    edx
push    edi
call    eax
add     esp, 14h
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 78h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, ecx
xor     ebx, ebx
mov     esi, edi
mov     [ebp+var_68], eax
mov     [ebp+var_44], ebx
mov     [ebp+var_40], ebx
call    sub_10018b10
mov     esi, eax
cmp     esi, ebx
jnz     loc_1001918b
mov     eax, [edi+44h]
cmp     eax, ebx
mov     ebx, [ebp+arg_0]
mov     [ebp+var_48], eax
jnz     loc_10018e89
mov     eax, ebx
shr     eax, 8
mov     ecx, ebx
shr     ecx, 18h
mov     [ebp+var_20], cl
mov     [ebp+var_1e], al
mov     eax, [edi+68h]
mov     edx, ebx
shr     edx, 10h
mov     ecx, eax
shr     ecx, 18h
mov     [ebp+var_1f], dl
mov     [ebp+var_1c], cl
mov     edx, eax
mov     ecx, eax
shr     edx, 10h
shr     ecx, 8
mov     [ebp+var_28], 82067f37h
mov     [ebp+var_24], 18e22d00h
mov     [ebp+var_1d], bl
mov     [ebp+var_1b], dl
mov     [ebp+var_1a], cl
mov     [ebp+var_19], al
test    eax, eax
jnz     short loc_10018dce
lea     edx, [edi+54h]
push    edx
push    8
call    sub_1000b290
add     esp, 8
mov     ecx, [edi+58h]
mov     eax, [edi+54h]
mov     [ebp+var_14], ecx
mov     [ebp+var_18], eax
xor     ecx, ecx
lea     edx, [ebp+var_28]
xor     eax, eax
mov     esi, [edx]
add     esi, ecx
add     eax, esi
mov     esi, [edx+4]
add     esi, eax
add     ecx, esi
add     edx, 8
lea     esi, [ebp+var_10]
cmp     edx, esi
jb      short loc_10018de1
mov     edx, eax
shr     edx, 18h
mov     [ebp+var_10], dl
mov     edx, eax
shr     edx, 10h
mov     [ebp+var_f], dl
mov     edx, eax
shr     edx, 8
mov     [ebp+var_e], dl
mov     edx, ecx
shr     edx, 18h
mov     [ebp+var_c], dl
mov     edx, ecx
shr     edx, 10h
mov     [ebp+var_b], dl
mov     edx, ecx
push    0
shr     edx, 8
mov     [ebp+var_a], dl
push    0
mov     [ebp+var_d], al
mov     [edi+4ch], eax
mov     eax, [edi+8]
push    20h
lea     edx, [ebp+var_28]
mov     [ebp+var_9], cl
mov     [edi+24h], ebx
mov     byte ptr [edi+41h], 0
mov     [edi+50h], ecx
mov     byte ptr [edi+2fh], 1
mov     ecx, [eax]
push    edx
push    eax
mov     eax, [ecx+0ch]
call    eax
mov     esi, eax
add     esp, 14h
test    esi, esi
jnz     loc_10019189
cmp     [edi+30h], al
jz      short loc_10018e89
mov     ecx, [ebp+arg_10]
test    ecx, ecx
jz      short loc_10018e89
mov     eax, [edi+8]
mov     edx, [eax]
and     ecx, 13h
push    ecx
push    eax
mov     eax, [edx+14h]
call    eax
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_10019189
mov     edx, [ebp+arg_10]
mov     ecx, [edi+8]
xor     eax, eax
mov     [ebp+var_58], eax
mov     [ebp+var_54], eax
lea     eax, [ebx+18h]
mov     [ebp+var_64], eax
mov     [ebp+var_50], edx
cdq
push    edx
push    eax
mov     [ebp+var_74], eax
mov     eax, [ebp+var_48]
push    0
push    eax
mov     [ebp+var_60], edi
mov     [ebp+var_5c], ecx
mov     [ebp+var_4c], ebx
mov     [ebp+var_70], edx
call    __allmul
mov     ecx, eax
add     ecx, 20h
mov     ebx, edx
mov     edx, [ebp+var_68]
adc     ebx, 0
mov     [ebp+var_34], ecx
mov     [ebp+var_30], ebx
mov     [ebp+var_38], edx
test    edx, edx
jz      loc_10018f7a
jmp     short loc_10018ee3
mov     edx, [ebp+var_38]
inc     [ebp+var_48]
cmp     [ebp+arg_c], 0
jz      short loc_10018ef7
cmp     dword ptr [edx+0ch], 0
jnz     short loc_10018ef7
mov     eax, [ebp+arg_8]
jmp     short loc_10018ef9
xor     eax, eax
mov     ecx, [edx+4]
mov     ebx, [ebp+var_60]
mov     [ebp+var_44], ecx
push    ecx
mov     ecx, [edx+14h]
lea     esi, [ebp+var_20]
call    sub_10016bc0
mov     esi, [ebp+var_30]
mov     ebx, [ebp+var_34]
add     esp, 4
push    esi
push    ebx
lea     ecx, [ebp+var_20]
push    18h
push    ecx
lea     eax, [ebp+var_60]
call    sub_10018c90
add     esp, 10h
test    eax, eax
jnz     short loc_10018f4a
mov     ecx, [ebp+var_44]
mov     edx, ebx
add     edx, 18h
adc     esi, eax
mov     eax, [ebp+var_4c]
push    esi
push    edx
push    eax
push    ecx
lea     eax, [ebp+var_60]
call    sub_10018c90
add     esp, 10h
mov     esi, eax
test    esi, esi
jnz     loc_10019189
mov     eax, [ebp+var_64]
mov     ecx, [ebp+var_38]
cdq
add     ebx, eax
mov     eax, [ecx+0ch]
adc     [ebp+var_30], edx
mov     [ebp+var_44], ecx
mov     [ebp+var_34], ebx
mov     [ebp+var_38], eax
test    eax, eax
jnz     loc_10018ee0
mov     ebx, [ebp+var_30]
mov     ecx, [ebp+var_34]
cmp     [ebp+arg_c], 0
jz      loc_100190e9
mov     eax, [ebp+arg_10]
test    al, 20h
jz      loc_10019092
cmp     byte ptr [edi+31h], 0
jz      loc_1001907e
mov     eax, [edi+8]
mov     edx, [eax]
mov     edx, [edx+2ch]
test    edx, edx
jz      short loc_10018fb0
push    eax
call    edx
mov     ecx, [ebp+var_34]
add     esp, 4
jmp     short loc_10018fb5
mov     eax, 1000h
cdq
mov     [ebp+var_3c], eax
add     eax, ecx
mov     ecx, edx
push    edx
adc     ecx, ebx
mov     [ebp+var_38], edx
mov     edx, [ebp+var_3c]
sub     eax, 1
push    edx
sbb     ecx, 0
push    ecx
push    eax
call    __alldiv
mov     ecx, [ebp+var_38]
push    ecx
mov     ecx, [ebp+var_3c]
push    ecx
push    edx
push    eax
call    __allmul
mov     [ebp+var_58], eax
mov     [ebp+var_54], edx
cmp     ebx, edx
jg      loc_10019092
jl      short loc_10018ffc
cmp     [ebp+var_34], eax
jnb     loc_10019092
mov     ecx, [ebp+var_44]
mov     eax, [ecx+4]
mov     ecx, [ecx+14h]
mov     ebx, [ebp+var_60]
mov     [ebp+var_38], eax
push    eax
mov     eax, [ebp+arg_8]
lea     esi, [ebp+var_20]
call    sub_10016bc0
mov     ebx, [ebp+var_30]
mov     esi, [ebp+var_34]
add     esp, 4
push    ebx
push    esi
lea     edx, [ebp+var_20]
push    18h
push    edx
lea     eax, [ebp+var_60]
call    sub_10018c90
add     esp, 10h
test    eax, eax
jnz     short loc_10019054
mov     ecx, [ebp+var_4c]
mov     edx, [ebp+var_38]
add     esi, 18h
mov     eax, ebx
adc     eax, 0
push    eax
push    esi
push    ecx
push    edx
lea     eax, [ebp+var_60]
call    sub_10018c90
add     esp, 10h
mov     esi, eax
test    esi, esi
jnz     loc_10019189
mov     eax, [ebp+var_64]
cdq
add     [ebp+var_34], eax
adc     ebx, edx
inc     [ebp+var_40]
mov     [ebp+var_30], ebx
cmp     ebx, [ebp+var_54]
jl      short loc_10018ffc
jg      short loc_10019092
mov     eax, [ebp+var_34]
cmp     eax, [ebp+var_58]
jb      short loc_10018ffc
jmp     short loc_10019092
mov     ecx, [ebp+var_5c]
mov     edx, [ecx]
and     eax, 13h
push    eax
mov     eax, [edx+14h]
push    ecx
call    eax
add     esp, 8
mov     esi, eax
cmp     byte ptr [edi+2fh], 0
jz      short loc_100190e9
mov     ebx, [edi+14h]
mov     eax, [edi+10h]
test    ebx, ebx
jl      short loc_100190e9
jg      short loc_100190a8
test    eax, eax
jb      short loc_100190e9
mov     edx, [ebp+var_74]
mov     ecx, [ebp+var_48]
add     ecx, [ebp+var_40]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_70]
push    eax
push    edx
push    0
push    ecx
mov     [ebp+var_30], ebx
call    __allmul
add     eax, 20h
adc     edx, 0
cmp     edx, ebx
jl      short loc_100190d5
jg      short loc_100190db
cmp     eax, [edi+10h]
ja      short loc_100190db
mov     eax, [ebp+var_34]
mov     edx, [ebp+var_30]
push    edx
push    eax
call    sub_10017dc0
add     esp, 8
mov     byte ptr [edi+2fh], 0
mov     eax, [ebp+var_68]
mov     ebx, [edi+44h]
mov     [ebp+var_38], eax
test    eax, eax
jz      short loc_10019120
test    esi, esi
jnz     loc_10019189
mov     eax, [ebp+var_38]
mov     ecx, [eax+14h]
push    ecx
inc     ebx
push    edi
mov     eax, ebx
call    sub_10016e50
mov     edx, [ebp+var_38]
mov     esi, eax
mov     eax, [edx+0ch]
add     esp, 8
mov     [ebp+var_38], eax
test    eax, eax
jnz     short loc_100190f6
test    esi, esi
jnz     short loc_10019189
cmp     [ebp+var_40], 0
jle     short loc_10019157
mov     eax, [ebp+var_44]
mov     ecx, [eax+14h]
dec     [ebp+var_40]
push    ecx
inc     ebx
push    edi
mov     eax, ebx
call    sub_10016e50
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_10019124
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jnz     short loc_10019189
mov     eax, [ebp+arg_0]
mov     edx, eax
sar     edx, 10h
and     eax, 0ff00h
or      edx, eax
mov     [edi+42h], dx
mov     [edi+44h], ebx
cmp     [ebp+arg_c], esi
jz      short loc_10019189
mov     eax, [ebp+arg_8]
inc     dword ptr [edi+3ch]
mov     edx, edi
mov     [edi+48h], eax
call    sub_10016b40
mov     [edi+0ch], ebx
mov     eax, esi
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
mov     ebx, [ebp+arg_0]
push    edi
mov     edi, eax
cmp     byte ptr [edi+2eh], 0
mov     [ebp+var_8], 0
mov     [ebp+var_4], ebx
jz      short loc_100191c8
mov     eax, 8
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+2bh], 0
jnz     short loc_100191ea
mov     eax, [edi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    0ah
push    1
push    1
push    eax
call    edx
add     esp, 10h
test    eax, eax
jnz     loc_1001930f
mov     byte ptr [edi+2dh], 1
test    ebx, ebx
jz      short loc_10019222
mov     eax, [ebp+arg_4]
push    0
push    esi
push    eax
mov     ebx, 1
call    sub_100179e0
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_10019212
mov     byte ptr [edi+2ch], 1
jmp     short loc_10019222
cmp     ebx, 5
jnz     loc_100192b8
mov     [ebp+var_4], 0
lea     ecx, [ebp+var_8]
push    ecx
mov     eax, edi
call    sub_100180a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_100192a2
cmp     [edi+44h], eax
jz      short loc_1001925f
movzx   eax, word ptr [edi+42h]
mov     edx, eax
and     edx, 1
shl     edx, 10h
and     eax, 0fe00h
add     edx, eax
cmp     edx, [ebp+arg_c]
jz      short loc_1001925f
mov     eax, 0b6feh
call    sub_10071c60
jmp     short loc_1001927a
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    eax
mov     eax, [ebp+var_4]
push    ecx
push    esi
push    edx
push    eax
mov     eax, edi
call    sub_10017a30
add     esp, 14h
mov     ebx, eax
test    ebx, ebx
jz      short loc_10019285
cmp     ebx, 5
jnz     short loc_100192a2
mov     eax, [ebp+arg_14]
test    eax, eax
jz      short loc_10019291
mov     ecx, [edi+44h]
mov     [eax], ecx
mov     eax, [ebp+arg_18]
test    eax, eax
jz      short loc_100192a2
mov     edx, [edi+20h]
mov     ecx, [edx]
mov     edx, [ecx+60h]
mov     [eax], edx
cmp     [ebp+var_8], 0
jz      short loc_100192b8
push    30h
lea     eax, [edi+34h]
push    0
push    eax
call    memset
add     esp, 0ch
cmp     byte ptr [edi+2ch], 0
jz      short loc_100192e0
cmp     byte ptr [edi+2bh], 0
jnz     short loc_100192d8
mov     eax, [edi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    9
push    1
push    0
push    eax
call    edx
add     esp, 10h
mov     byte ptr [edi+2ch], 0
mov     byte ptr [edi+2fh], 0
cmp     byte ptr [edi+2bh], 0
jnz     short loc_100192fa
mov     eax, [edi+4]
mov     ecx, [eax]
mov     edx, [ecx+38h]
push    9
push    1
push    1
push    eax
call    edx
add     esp, 10h
mov     byte ptr [edi+2dh], 0
test    ebx, ebx
jnz     short loc_1001930d
mov     eax, [ebp+var_4]
cmp     [ebp+arg_0], eax
lea     eax, [ebx+5]
jnz     short loc_1001930f
mov     eax, ebx
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+9], 0
jz      locret_100193de
inc     dword ptr [edi+0ch]
cmp     byte ptr [edi+0ah], 0
jnz     locret_100193de
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001934f
push    eax
call    dword_10080280
add     esp, 4
test    eax, eax
jnz     short loc_1001935c
mov     ecx, [edi+4]
mov     edx, [edi]
mov     [ecx+4], edx
mov     byte ptr [edi+0ah], 1
retn
push    esi
mov     esi, [edi+14h]
test    esi, esi
jz      short loc_10019389
cmp     byte ptr [esi+0ah], 0
jz      short loc_10019382
mov     eax, [esi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001937e
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
mov     esi, [esi+14h]
test    esi, esi
jnz     short loc_10019364
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1001939d
push    eax
call    dword_1008027c
add     esp, 4
mov     edx, [edi+4]
mov     eax, [edi]
mov     [edx+4], eax
mov     esi, [edi+14h]
mov     byte ptr [edi+0ah], 1
test    esi, esi
jz      short loc_100193dd
cmp     dword ptr [esi+0ch], 0
jz      short loc_100193d6
mov     ecx, [esi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_100193ca
push    eax
call    dword_1008027c
add     esp, 4
mov     edx, [esi+4]
mov     eax, [esi]
mov     [edx+4], eax
mov     byte ptr [esi+0ah], 1
mov     esi, [esi+14h]
test    esi, esi
jnz     short loc_100193b0
pop     esi
retn
cmp     byte ptr [esi+9], 0
jz      short locret_10019403
dec     dword ptr [esi+0ch]
jnz     short locret_10019403
mov     eax, [esi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_100193ff
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
retn
push    esi
mov     esi, [eax]
cmp     byte ptr [esi+9], 0
jz      short loc_10019436
dec     dword ptr [esi+0ch]
jnz     short loc_10019436
mov     ecx, [esi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_10019432
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
push    ebx
xor     ebx, ebx
mov     [ebp+var_8], ebx
cmp     [eax+14h], ebx
jle     loc_10019546
push    esi
mov     [ebp+var_4], ebx
push    edi
lea     ecx, [ecx+0]
mov     eax, [eax+10h]
mov     ecx, [ebp+var_4]
mov     esi, [ecx+eax+4]
cmp     esi, ebx
jz      loc_1001952d
cmp     [esi+9], bl
jz      loc_1001952d
inc     dword ptr [esi+0ch]
cmp     [esi+0ah], bl
jnz     loc_1001952d
mov     edx, [esi+4]
mov     eax, [edx+38h]
cmp     eax, ebx
jz      short loc_1001949f
push    eax
call    dword_10080280
add     esp, 4
cmp     eax, ebx
jnz     short loc_100194b0
mov     eax, [esi+4]
mov     ecx, [esi]
mov     [eax+4], ecx
mov     byte ptr [esi+0ah], 1
jmp     loc_1001952d
mov     edi, [esi+14h]
cmp     edi, ebx
jz      short loc_100194da
cmp     [edi+0ah], bl
jz      short loc_100194d3
mov     edx, [edi+4]
mov     eax, [edx+38h]
cmp     eax, ebx
jz      short loc_100194d0
push    eax
call    dword_10080284
add     esp, 4
mov     [edi+0ah], bl
mov     edi, [edi+14h]
cmp     edi, ebx
jnz     short loc_100194b7
mov     eax, [esi+4]
mov     eax, [eax+38h]
cmp     eax, ebx
jz      short loc_100194ee
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [esi+4]
mov     edx, [esi]
mov     [ecx+4], edx
mov     byte ptr [esi+0ah], 1
mov     esi, [esi+14h]
cmp     esi, ebx
jz      short loc_1001952d
cmp     [esi+0ch], ebx
jz      short loc_10019526
mov     eax, [esi+4]
mov     eax, [eax+38h]
cmp     eax, ebx
jz      short loc_1001951a
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [esi+4]
mov     edx, [esi]
mov     [ecx+4], edx
mov     byte ptr [esi+0ah], 1
mov     esi, [esi+14h]
cmp     esi, ebx
jnz     short loc_10019501
mov     ecx, [ebp+var_8]
mov     eax, [ebp+arg_0]
add     [ebp+var_4], 10h
inc     ecx
mov     [ebp+var_8], ecx
cmp     ecx, [eax+14h]
jl      loc_10019460
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    edi
xor     edi, edi
mov     [ebp+var_4], edi
cmp     [ebx+14h], edi
jle     short loc_1001959e
push    esi
mov     eax, [ebx+10h]
mov     esi, [eax+edi+4]
test    esi, esi
jz      short loc_1001958e
cmp     byte ptr [esi+9], 0
jz      short loc_1001958e
dec     dword ptr [esi+0ch]
jnz     short loc_1001958e
mov     ecx, [esi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1001958a
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
mov     eax, [ebp+var_4]
inc     eax
add     edi, 10h
mov     [ebp+var_4], eax
cmp     eax, [ebx+14h]
jl      short loc_10019560
pop     esi
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_100802f0, eax
xor     eax, eax
pop     ebp
retn
cmp     byte ptr [ecx+9], 0
push    esi
mov     esi, [ecx+4]
jz      short loc_100195f5
cmp     [esi+4ch], ecx
jz      short loc_100195d5
test    byte ptr [esi+16h], 20h
jnz     short loc_10019603
mov     eax, [esi+48h]
test    eax, eax
jz      short loc_100195f5
lea     esp, [esp+0]
cmp     [eax], ecx
jz      short loc_100195ee
cmp     [eax+4], edi
jnz     short loc_100195ee
cmp     [eax+8], dl
jnz     short loc_100195f9
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_100195e0
xor     eax, eax
pop     esi
retn
cmp     dl, 2
jnz     short loc_10019603
or      word ptr [esi+16h], 40h
mov     eax, 106h
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, [edi+4]
mov     eax, [esi+48h]
test    eax, eax
jz      short loc_10019639
mov     ecx, [eax+4]
cmp     ecx, [ebp+arg_0]
jnz     short loc_10019632
cmp     [eax], edi
jz      loc_100196b6
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_10019622
cmp     dword_10080230, 0
jz      short loc_10019698
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10019655
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [ebp+var_4]
mov     eax, 10h
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10019675
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+var_4]
test    eax, eax
jz      short loc_1001968d
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
test    eax, eax
jnz     short loc_100196a5
mov     eax, 7
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    10h
call    dword_1008024c
add     esp, 4
jmp     short loc_10019678
mov     edx, [ebp+arg_0]
mov     [eax+4], edx
mov     [eax], edi
mov     ecx, [esi+48h]
mov     [eax+0ch], ecx
mov     [esi+48h], eax
mov     cl, [ebp+arg_4]
cmp     cl, [eax+8]
jbe     short loc_100196c1
mov     [eax+8], cl
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [eax+4]
cmp     dword ptr [ebx+48h], 0
push    edi
lea     edi, [ebx+48h]
jz      loc_100197a0
push    esi
lea     esp, [esp+0]
mov     esi, [edi]
mov     ecx, [ebp+arg_0]
cmp     [esi], ecx
jnz     loc_10019793
mov     edx, [esi+0ch]
mov     [edi], edx
cmp     dword ptr [esi+4], 1
jz      loc_10019796
cmp     dword_10080230, 0
jz      short loc_10019787
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10019728
push    eax
call    dword_1008027c
add     esp, 4
push    esi
call    dword_10080258
mov     ecx, dword_10081668
neg     eax
add     ecx, eax
add     esp, 4
mov     dword_10081668, ecx
cmp     ecx, dword_10081690
jle     short loc_10019750
mov     dword_10081690, ecx
mov     eax, dword_1008168c
dec     eax
mov     dword_1008168c, eax
cmp     eax, dword_100816b4
jle     short loc_10019768
mov     dword_100816b4, eax
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
test    eax, eax
jz      short loc_10019796
push    eax
call    dword_10080284
add     esp, 4
jmp     short loc_10019796
push    esi
call    dword_10080250
add     esp, 4
jmp     short loc_10019796
lea     edi, [esi+0ch]
cmp     dword ptr [edi], 0
jnz     loc_100196f0
pop     esi
mov     eax, [ebp+arg_0]
cmp     [ebx+4ch], eax
jnz     short loc_100197bc
mov     ecx, 0ff9fh
and     [ebx+16h], cx
pop     edi
mov     dword ptr [ebx+4ch], 0
pop     ebx
pop     ebp
retn
cmp     dword ptr [ebx+28h], 2
jnz     short loc_100197cb
mov     edx, 0ffbfh
and     [ebx+16h], dx
pop     edi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, eax
cmp     dword ptr [edi+3ch], 0
jnz     short loc_10019815
mov     ebx, [edi+2ch]
push    200h
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10019806
push    200h
push    0
push    esi
call    memset
add     esp, 0ch
mov     [esi], ebx
mov     [edi+3ch], esi
test    esi, esi
jnz     short loc_10019815
lea     eax, [esi+7]
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, [edi+3ch]
mov     eax, [ebp+arg_0]
cmp     eax, [edi]
ja      short loc_1001982e
push    eax
push    edi
call    sub_1000ff00
add     esp, 8
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [eax+3ch]
test    ebx, ebx
jz      short loc_10019889
cmp     dword ptr [ebx+8], 0
jz      short loc_10019873
push    esi
push    edi
lea     esi, [ebx+0ch]
mov     edi, 7dh
mov     edi, edi
mov     eax, [esi]
push    eax
call    sub_100101c0
add     esp, 4
add     esi, 4
dec     edi
jnz     short loc_10019860
pop     edi
pop     esi
push    ebx
call    sub_10009770
mov     ecx, [ebp+arg_0]
add     esp, 4
mov     dword ptr [ecx+3ch], 0
pop     ebx
pop     ebp
retn
mov     dword ptr [eax+3ch], 0
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, eax
push    edi
lea     edi, [esi+40h]
call    sub_1001d3b0
mov     [ebp+var_4], eax
mov     eax, [esi+80h]
cmp     byte ptr [eax+2], 0
jnz     short loc_100198fd
mov     ecx, [esi+40h]
push    ecx
call    sub_100094a0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      loc_1001995f
mov     ebx, [esi+40h]
push    0
push    edi
push    ebx
push    0
push    esi
call    sub_1001d750
add     esp, 14h
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_100198f4
mov     [esi+48h], edi
jmp     short loc_10019903
push    edi
call    sub_10009770
add     esp, 4
cmp     [ebp+var_4], 0
jnz     short loc_10019942
xor     edx, edx
xor     ebx, ebx
cmp     dx, [esi+56h]
jg      short loc_10019937
lea     edi, [esi+80h]
mov     eax, [edi]
test    eax, eax
jz      short loc_10019925
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     dword ptr [edi], 0
movsx   ecx, word ptr [esi+56h]
inc     ebx
add     edi, 4
cmp     ebx, ecx
jle     short loc_10019913
or      edx, 0ffffffffh
mov     [esi+56h], dx
mov     byte ptr [esi+53h], 2
mov     eax, [esi+14h]
push    eax
call    sub_10009770
mov     eax, [ebp+var_4]
add     esp, 4
pop     edi
mov     dword ptr [esi+14h], 0
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_4], 7
jmp     short loc_10019942
push    esi
mov     esi, [eax+8]
test    esi, esi
jz      short loc_1001999d
cmp     esi, ebx
jz      short loc_10019996
test    edi, edi
jz      short loc_10019985
cmp     [esi+18h], edi
jnz     short loc_10019996
cmp     byte ptr [esi+53h], 1
jnz     short loc_10019996
mov     eax, esi
call    sub_100198a0
test    eax, eax
jnz     short loc_1001999f
mov     esi, [esi+8]
test    esi, esi
jnz     short loc_10019978
xor     eax, eax
pop     esi
retn
mov     eax, [esi+48h]
push    eax
call    sub_10009770
xor     eax, eax
add     esp, 4
mov     [esi+48h], eax
mov     [esi+53h], al
retn
push    ebp
mov     ebp, esp
sub     esp, 0a8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_c]
push    ebx
push    esi
xor     esi, esi
mov     [ebp+var_a8], edx
mov     [ebp+var_a4], eax
test    edx, edx
jz      loc_10019a7f
mov     ebx, [edi+10h]
movzx   ecx, word ptr [ebx+6]
lea     eax, [ebp+var_a0]
neg     eax
and     eax, 7
lea     ecx, [ecx+ecx*4]
lea     ecx, ds:40h[ecx*8]
lea     esi, [eax+96h]
cmp     ecx, esi
jle     short loc_10019a39
mov     esi, [ebx]
call    sub_10009a40
mov     esi, eax
test    eax, eax
jz      short loc_10019a6a
mov     edx, [ebp+var_a8]
jmp     short loc_10019a42
lea     eax, [ebp+eax+var_a0]
xor     esi, esi
lea     ecx, [eax+18h]
mov     [eax+10h], ecx
mov     [eax], ebx
mov     cx, [ebx+6]
push    eax
push    edx
mov     edx, [ebp+arg_0]
inc     cx
mov     [eax+4], cx
mov     ebx, eax
mov     eax, [edi+10h]
push    edx
push    eax
call    sub_10028960
add     esp, 10h
jmp     short loc_10019a81
mov     eax, 7
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
xor     ebx, ebx
mov     ecx, [ebp+var_a4]
mov     edx, [ebp+arg_8]
mov     eax, [ebp+arg_4]
push    ecx
mov     ecx, [ebp+arg_0]
push    edx
push    eax
push    ecx
push    ebx
push    edi
call    sub_1001df80
add     esp, 18h
mov     ebx, eax
test    esi, esi
jz      short loc_10019ab0
mov     edx, [edi+10h]
mov     ecx, [edx]
mov     eax, esi
call    sub_10009810
mov     ecx, [ebp+var_4]
pop     esi
mov     eax, ebx
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
push    edi
mov     edi, eax
cmp     byte ptr [edi+53h], 3
jnz     short loc_10019ae9
mov     eax, [edi+4ch]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edi+44h]
mov     edx, [edi+40h]
lea     eax, [edi+4ch]
push    eax
push    0
push    ecx
push    edx
mov     edx, [edi+48h]
mov     byte ptr [edi+53h], 0
call    sub_100199d0
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     short loc_10019b1b
mov     eax, [edi+48h]
push    eax
call    sub_10009770
add     esp, 4
mov     [edi+48h], esi
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
push    edi
mov     edi, eax
mov     al, [edi+53h]
cmp     al, 2
jb      short loc_10019b80
cmp     al, 3
jnz     short loc_10019b4a
mov     eax, [edi+4ch]
jmp     short loc_10019b82
mov     ecx, [edi+44h]
mov     edx, [edi+40h]
lea     eax, [edi+4ch]
push    eax
push    0
push    ecx
push    edx
mov     edx, [edi+48h]
mov     byte ptr [edi+53h], 0
call    sub_100199d0
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     short loc_10019b7c
mov     eax, [edi+48h]
push    eax
call    sub_10009770
add     esp, 4
mov     [edi+48h], esi
mov     eax, esi
jmp     short loc_10019b82
xor     eax, eax
test    eax, eax
jz      short loc_10019b95
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx], 1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+53h], 1
jnz     short loc_10019bb2
cmp     dword ptr [edi+4ch], 0
jnz     short loc_10019bb2
mov     edx, [ebp+arg_0]
mov     dword ptr [edx], 0
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
pop     edi
mov     dword ptr [eax], 1
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     ecx, 2
jnb     short loc_10019bd8
xor     eax, eax
retn
mov     eax, 0cccccccdh
mul     dword ptr [edi+24h]
push    esi
mov     esi, edx
shr     esi, 2
inc     esi
lea     eax, [ecx-2]
xor     edx, edx
div     esi
xor     edx, edx
mov     ecx, eax
mov     eax, dword_1008031c
imul    ecx, esi
div     dword ptr [edi+20h]
add     ecx, 2
pop     esi
inc     eax
cmp     ecx, eax
jnz     short loc_10019c07
inc     ecx
mov     eax, ecx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_c]
cmp     dword ptr [esi], 0
push    edi
mov     edi, eax
jnz     loc_10019d56
test    edi, edi
jnz     short loc_10019c52
push    offset ac0d89d4a975292
push    0be41h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     dword ptr [esi], 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     edi, 2
jnb     short loc_10019c5b
xor     ebx, ebx
jmp     short loc_10019c8d
mov     ebx, [ebp+arg_0]
mov     eax, 0cccccccdh
mul     dword ptr [ebx+24h]
mov     esi, edx
shr     esi, 2
xor     edx, edx
inc     esi
lea     eax, [edi-2]
div     esi
xor     edx, edx
mov     ecx, eax
mov     eax, dword_1008031c
imul    ecx, esi
div     dword ptr [ebx+20h]
add     ecx, 2
inc     eax
cmp     ecx, eax
jnz     short loc_10019c8b
inc     ecx
mov     ebx, ecx
mov     ecx, [ebp+arg_0]
lea     eax, [esp+10h+var_4]
push    0
push    eax
mov     eax, [ecx]
call    sub_10015300
add     esp, 8
test    eax, eax
jz      short loc_10019cb1
mov     edx, [ebp+arg_c]
mov     [edx], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sub     edi, ebx
lea     esi, [edi+edi*4-5]
test    esi, esi
jns     short loc_10019cdf
push    offset ac0d89d4a975292
push    0be4ch
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
mov     eax, [ebp+arg_c]
add     esp, 10h
mov     dword ptr [eax], 0bh
jmp     short loc_10019d3d
mov     ecx, [esp+10h+var_4]
mov     edi, [ecx+4]
mov     dl, [ebp+arg_4]
cmp     dl, [edi+esi]
jnz     short loc_10019d00
lea     ecx, [edi+esi+1]
call    sub_1000c8a0
mov     ebx, [ebp+arg_8]
cmp     eax, ebx
jz      short loc_10019d3d
jmp     short loc_10019d03
mov     ebx, [ebp+arg_8]
mov     eax, [esp+10h+var_4]
push    eax
call    sub_100158a0
mov     ecx, [ebp+arg_c]
add     esp, 4
mov     [ecx], eax
test    eax, eax
jnz     short loc_10019d3d
mov     dl, [ebp+arg_4]
mov     [edi+esi], dl
lea     eax, [edi+esi+1]
mov     ecx, ebx
shr     ecx, 18h
mov     [eax], cl
mov     edx, ebx
shr     edx, 10h
mov     ecx, ebx
shr     ecx, 8
mov     [eax+1], dl
mov     [eax+2], cl
mov     [eax+3], bl
mov     eax, [esp+10h+var_4]
test    eax, eax
jz      short loc_10019d56
mov     esi, [eax+10h]
call    sub_100106d0
push    esi
call    sub_10015290
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, eax
cmp     ecx, 2
jnb     short loc_10019d7a
xor     eax, eax
mov     [ebp+var_4], eax
jmp     short loc_10019dac
mov     eax, 0cccccccdh
mul     dword ptr [edi+24h]
mov     esi, edx
shr     esi, 2
lea     eax, [ecx-2]
xor     edx, edx
inc     esi
div     esi
xor     edx, edx
mov     ecx, eax
mov     eax, dword_1008031c
imul    ecx, esi
div     dword ptr [edi+20h]
add     ecx, 2
inc     eax
cmp     ecx, eax
jnz     short loc_10019da7
inc     ecx
mov     [ebp+var_4], ecx
mov     eax, ecx
mov     esi, [edi]
test    eax, eax
jnz     short loc_10019dc1
push    offset ac0d89d4a975292
push    0a3fbh
jmp     loc_10019f53
mov     edi, [esi+28h]
test    edi, edi
jnz     loc_10019ebb
mov     edi, [esi+0b4h]
lea     ecx, [ebp+var_8]
push    ecx
push    1
push    eax
call    sub_10010550
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     loc_10019ebb
mov     ebx, [ebp+var_8]
cmp     [ebx+10h], eax
jz      short loc_10019dfe
inc     dword ptr [esi+0a0h]
jmp     loc_10019ed0
mov     ecx, [ebp+var_4]
mov     [ebx+10h], esi
cmp     ecx, 7fffffffh
ja      short loc_10019e6b
mov     eax, dword_1008031c
mov     edi, [esi+80h]
cdq
idiv    edi
inc     eax
cmp     ecx, eax
jz      short loc_10019e6b
cmp     byte ptr [esi+0eh], 0
jnz     short loc_10019e4b
cmp     [esi+18h], ecx
jb      short loc_10019e4b
mov     edx, [esi+3ch]
cmp     dword ptr [edx], 0
jz      short loc_10019e4b
inc     dword ptr [esi+0a4h]
mov     eax, ebx
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      loc_10019ed0
jmp     short loc_10019e89
cmp     ecx, [esi+84h]
jbe     short loc_10019e5a
mov     edi, 0dh
jmp     short loc_10019e89
mov     eax, [ebx+4]
push    edi
push    0
push    eax
call    memset
add     esp, 0ch
jmp     short loc_10019ed0
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
test    byte ptr [ebx+18h], 2
jz      short loc_10019e96
mov     eax, ebx
call    sub_100104b0
mov     eax, [ebx+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [ebx+14h], 1
jnz     short loc_10019ea9
mov     dword ptr [eax+2ch], 0
mov     ecx, [ebx]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    esi
call    sub_10015290
add     esp, 4
xor     ebx, ebx
mov     eax, edi
test    edi, edi
jnz     loc_10019f67
mov     eax, [ebp+arg_0]
sub     eax, [ebp+var_4]
mov     esi, [ebx+4]
lea     eax, [eax+eax*4-5]
test    eax, eax
jns     short loc_10019ef6
push    ebx
call    sub_100154a0
add     esp, 4
push    offset ac0d89d4a975292
push    0be79h
jmp     short loc_10019f53
mov     cl, [eax+esi]
mov     edx, [ebp+arg_4]
mov     [edx], cl
mov     ecx, [ebp+arg_8]
test    ecx, ecx
jz      short loc_10019f2a
movzx   edx, byte ptr [eax+esi+1]
movzx   edi, byte ptr [eax+esi+2]
shl     edx, 8
or      edx, edi
movzx   edi, byte ptr [eax+esi+3]
movzx   eax, byte ptr [eax+esi+4]
shl     edx, 8
or      edx, edi
shl     edx, 8
or      edx, eax
mov     [ecx], edx
push    ebx
call    sub_100154a0
mov     ecx, [ebp+arg_4]
mov     al, [ecx]
add     esp, 4
cmp     al, 1
jb      short loc_10019f49
cmp     al, 5
ja      short loc_10019f49
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0be81h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     edi, eax
mov     [edi+8], ecx
cmp     byte ptr [edx+2], 0
movzx   eax, byte ptr [edx+6]
mov     [ebp+var_4], eax
mov     bx, ax
jz      short loc_10019fe4
cmp     byte ptr [edx+4], 0
jz      short loc_10019fd0
movzx   edx, bx
lea     eax, [edx+ecx]
mov     dl, [eax]
cmp     dl, 80h
jnb     short loc_10019fb5
mov     eax, 1
movzx   eax, al
movzx   esi, dl
add     bx, ax
jmp     short loc_10019fd2
lea     esi, [ebp+var_4]
mov     ecx, eax
call    sub_1000c800
mov     esi, [ebp+var_4]
mov     ecx, [ebp+arg_4]
movzx   eax, al
movzx   eax, al
add     bx, ax
jmp     short loc_10019fd2
xor     esi, esi
movzx   eax, bx
add     eax, ecx
call    sub_1000c680
mov     edx, [ebp+arg_0]
mov     [edi+0ch], esi
jmp     short loc_1001a01a
movzx   eax, bx
add     ecx, eax
mov     dword ptr [edi+0ch], 0
mov     al, [ecx]
cmp     al, 80h
jnb     short loc_1001a000
movzx   esi, al
mov     eax, 1
jmp     short loc_1001a011
lea     esi, [ebp+var_4]
call    sub_1000c800
mov     esi, [ebp+var_4]
mov     edx, [ebp+arg_0]
movzx   eax, al
mov     [edi], esi
mov     dword ptr [edi+4], 0
movzx   ecx, al
add     bx, cx
mov     [edi+10h], esi
mov     [edi+14h], bx
movzx   eax, word ptr [edx+8]
mov     [ebp+arg_4], eax
cmp     esi, eax
ja      short loc_1001a05b
movzx   eax, bx
add     eax, esi
mov     [edi+1ah], ax
cmp     ax, 4
jnb     short loc_1001a04a
mov     eax, 4
mov     [edi+1ah], ax
xor     ecx, ecx
mov     [edi+16h], si
mov     [edi+18h], cx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   ecx, word ptr [edx+0ah]
mov     edx, [edx+34h]
mov     eax, [edx+24h]
sub     eax, 4
mov     [ebp+arg_0], eax
mov     eax, esi
xor     edx, edx
sub     eax, ecx
div     [ebp+arg_0]
add     edx, ecx
cmp     edx, [ebp+arg_4]
jg      short loc_1001a081
mov     [edi+16h], dx
jmp     short loc_1001a085
mov     [edi+16h], cx
movzx   eax, word ptr [edi+16h]
add     ax, bx
mov     [edi+18h], ax
add     eax, 4
mov     [edi+1ah], ax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     ebx, eax
push    edi
movzx   edi, byte ptr [ebx+6]
add     edi, [ebp+arg_0]
cmp     byte ptr [ebx+2], 0
jz      short loc_1001a0fe
cmp     byte ptr [ebx+4], 0
jz      short loc_1001a0ea
mov     al, [edi]
cmp     al, 80h
jnb     short loc_1001a0d3
mov     ecx, 1
movzx   ecx, cl
movzx   eax, al
add     edi, ecx
jmp     short loc_1001a0ec
lea     esi, [ebp+var_4]
mov     ecx, edi
call    sub_1000c800
movzx   ecx, al
mov     eax, [ebp+var_4]
movzx   ecx, cl
add     edi, ecx
jmp     short loc_1001a0ec
xor     eax, eax
lea     esi, [edi+9]
nop
mov     dl, [edi]
inc     edi
and     dl, 80h
jz      short loc_1001a123
cmp     edi, esi
jb      short loc_1001a0f0
jmp     short loc_1001a123
mov     al, [edi]
cmp     al, 80h
jnb     short loc_1001a10e
movzx   eax, al
mov     ecx, 1
jmp     short loc_1001a11e
lea     esi, [ebp+var_4]
mov     ecx, edi
call    sub_1000c800
movzx   ecx, al
mov     eax, [ebp+var_4]
movzx   ecx, cl
add     edi, ecx
movzx   esi, word ptr [ebx+8]
cmp     eax, esi
jbe     short loc_1001a14a
movzx   ecx, word ptr [ebx+0ah]
mov     edx, [ebx+34h]
mov     ebx, [edx+24h]
sub     eax, ecx
sub     ebx, 4
xor     edx, edx
div     ebx
lea     eax, [ecx+edx]
cmp     eax, esi
jbe     short loc_1001a147
mov     eax, ecx
add     eax, 4
sub     edi, [ebp+arg_0]
add     eax, edi
cmp     eax, 4
jnb     short loc_1001a159
mov     eax, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
cmp     dword ptr [ebx], 0
jnz     short loc_1001a1b8
push    edi
push    esi
lea     eax, [ebp+var_1c]
call    sub_10019f70
mov     ax, [ebp+var_4]
add     esp, 8
test    ax, ax
jz      short loc_1001a1b8
movzx   ecx, ax
mov     eax, [esi+48h]
movzx   edx, byte ptr [ecx+edi]
add     ecx, edi
push    ebx
push    eax
movzx   eax, byte ptr [ecx+1]
shl     edx, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
mov     edx, [esi+34h]
shl     eax, 8
push    3
or      eax, ecx
push    edx
call    sub_10019c10
add     esp, 10h
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, [edi+34h]
mov     ecx, [eax]
mov     edx, [ecx+0b0h]
movzx   ecx, byte ptr [edi+5]
push    ebx
movzx   ebx, word ptr [edi+0ch]
mov     [ebp+var_10], ebx
movzx   ebx, word ptr [edi+10h]
push    esi
mov     esi, [edi+38h]
mov     [ebp+var_24], ecx
mov     [ebp+var_14], ebx
mov     ebx, [eax+24h]
movzx   eax, byte ptr [ecx+esi+5]
movzx   ecx, byte ptr [ecx+esi+6]
shl     eax, 8
or      eax, ecx
mov     ecx, ebx
sub     ecx, eax
push    ecx
lea     ecx, [eax+esi]
push    ecx
add     eax, edx
push    eax
mov     [ebp+var_18], edx
mov     [ebp+var_c], ebx
call    memcpy
mov     edx, [ebp+var_10]
mov     eax, [ebp+var_14]
add     esp, 0ch
lea     ecx, [edx+eax*2]
mov     [ebp+var_8], ecx
mov     [ebp+var_10], 0
test    eax, eax
jle     loc_1001a2cd
add     edx, esi
mov     [ebp+var_4], edx
jmp     short loc_1001a243
mov     edx, [ebp+var_4]
movzx   eax, byte ptr [edx]
movzx   edx, byte ptr [edx+1]
shl     eax, 8
or      eax, edx
mov     [ebp+var_1c], eax
cmp     eax, ecx
jl      loc_1001a349
mov     ecx, [ebp+var_c]
add     ecx, 0fffffffch
cmp     eax, ecx
jg      loc_1001a349
add     eax, [ebp+var_18]
mov     [ebp+src], eax
push    eax
mov     eax, edi
call    sub_1001a0a0
movzx   eax, ax
sub     ebx, eax
add     esp, 4
cmp     ebx, [ebp+var_8]
jl      loc_1001a325
mov     edx, [ebp+var_1c]
lea     ecx, [eax+edx]
cmp     ecx, [ebp+var_c]
jg      loc_1001a325
mov     edx, [ebp+src]
push    eax
push    edx
lea     eax, [ebx+esi]
push    eax
call    memcpy
mov     eax, [ebp+var_4]
mov     ecx, ebx
sar     ecx, 8
mov     [eax], cl
mov     ecx, [ebp+var_10]
inc     ecx
mov     [eax+1], bl
add     eax, 2
add     esp, 0ch
cmp     ecx, [ebp+var_14]
mov     [ebp+var_10], ecx
mov     ecx, [ebp+var_8]
mov     [ebp+var_4], eax
jl      loc_1001a240
mov     eax, [ebp+var_24]
mov     edx, ebx
mov     [eax+esi+6], bl
sub     ebx, ecx
push    ebx
add     ecx, esi
sar     edx, 8
push    0
push    ecx
mov     [eax+esi+5], dl
mov     word ptr [eax+esi+1], 0
mov     byte ptr [eax+esi+7], 0
call    memset
movzx   eax, word ptr [edi+0eh]
add     esp, 0ch
cmp     ebx, eax
jz      short loc_1001a36d
push    offset ac0d89d4a975292
push    0bfa5h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0bf94h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0bf88h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     edi, eax
movzx   esi, byte ptr [edi+5]
mov     ecx, [edi+38h]
mov     eax, [edi+34h]
mov     edx, [eax+24h]
lea     eax, [ecx+esi+7]
mov     [ebp+var_1c], eax
movzx   eax, byte ptr [eax]
mov     [ebp+var_10], eax
movzx   eax, word ptr [edi+0ch]
mov     [ebp+var_14], edx
movzx   edx, word ptr [edi+10h]
lea     edx, [eax+edx*2]
movzx   eax, byte ptr [ecx+esi+5]
mov     [ebp+var_8], edx
lea     ebx, [ecx+esi+5]
lea     edx, [ecx+esi+6]
shl     eax, 8
mov     [ebp+var_c], edx
movzx   edx, byte ptr [edx]
or      eax, edx
dec     eax
and     eax, 0ffffh
inc     eax
mov     [ebp+var_18], ebx
cmp     [ebp+var_8], eax
jle     short loc_1001a402
push    offset ac0d89d4a975292
push    0bfcdh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+var_10], 3ch
jl      short loc_1001a46e
call    sub_1001a1c0
test    eax, eax
jnz     short loc_1001a467
movzx   eax, byte ptr [ebx]
mov     ecx, [ebp+var_c]
movzx   edx, byte ptr [ecx]
shl     eax, 8
or      eax, edx
dec     eax
and     eax, 0ffffh
inc     eax
mov     edx, [ebp+var_8]
mov     esi, [ebp+arg_0]
lea     ecx, [edx+esi+2]
cmp     ecx, eax
jle     short loc_1001a452
call    sub_1001a1c0
test    eax, eax
jnz     short loc_1001a467
movzx   eax, byte ptr [ebx]
mov     edx, [ebp+var_c]
movzx   ecx, byte ptr [edx]
shl     eax, 8
or      eax, ecx
dec     eax
and     eax, 0ffffh
inc     eax
mov     ecx, [ebp+var_c]
sub     eax, esi
mov     edx, eax
sar     edx, 8
mov     [ebx], dl
mov     edx, [ebp+arg_4]
mov     [ecx], al
mov     [edx], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_8]
add     edx, 2
cmp     edx, eax
jg      short loc_1001a426
movzx   edx, byte ptr [esi+ecx+1]
inc     esi
mov     [ebp+var_4], esi
movzx   esi, byte ptr [esi+ecx+1]
shl     edx, 8
or      edx, esi
jle     short loc_1001a426
mov     ebx, [ebp+var_4]
mov     esi, [ebp+var_14]
add     esi, 0fffffffch
cmp     edx, esi
jg      loc_1001a53f
add     ebx, 4
cmp     edx, ebx
jl      loc_1001a53f
movzx   esi, byte ptr [edx+ecx+2]
movzx   ebx, byte ptr [edx+ecx+3]
shl     esi, 8
or      esi, ebx
mov     ebx, [ebp+arg_0]
cmp     esi, ebx
jge     short loc_1001a4dc
movzx   esi, byte ptr [edx+ecx]
mov     ebx, edx
movzx   edx, byte ptr [edx+ecx+1]
shl     esi, 8
or      edx, esi
mov     [ebp+var_4], ebx
jg      short loc_1001a490
mov     ebx, [ebp+var_18]
jmp     loc_1001a426
mov     eax, esi
sub     eax, ebx
cmp     eax, 4
jge     short loc_1001a50a
mov     si, [edx+ecx]
mov     edi, [ebp+var_4]
mov     [edi+ecx], si
mov     cl, byte ptr [ebp+var_10]
mov     esi, [ebp+var_1c]
add     cl, al
mov     [esi], cl
mov     ecx, [ebp+arg_4]
add     eax, edx
mov     [ecx], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
add     esi, edx
cmp     esi, [ebp+var_14]
jle     short loc_1001a522
mov     eax, 0bfedh
call    sub_10071c60
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, eax
sar     ebx, 8
mov     [edx+ecx+3], al
mov     [edx+ecx+2], bl
mov     ecx, [ebp+arg_4]
add     eax, edx
mov     [ecx], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0bfe0h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi+38h]
mov     ebx, eax
mov     eax, [edi+34h]
test    byte ptr [eax+16h], 4
jz      short loc_1001a59a
mov     ecx, [ebp+size]
push    ecx
lea     edx, [esi+ebx]
push    0
push    edx
call    memset
add     esp, 0ch
mov     eax, [ebp+arg_0]
mov     ecx, [eax+34h]
movzx   edx, byte ptr [edi+5]
mov     eax, [ecx+24h]
movzx   ecx, byte ptr [edx+esi+1]
sub     eax, 4
lea     edi, [edx+1]
mov     [ebp+var_4], eax
movzx   eax, byte ptr [edi+esi+1]
shl     ecx, 8
or      eax, ecx
cmp     eax, ebx
jge     short loc_1001a5e2
test    eax, eax
jle     short loc_1001a5e2
add     edi, 4
cmp     eax, edi
jl      short loc_1001a60c
movzx   ecx, byte ptr [eax+esi]
mov     edi, eax
movzx   eax, byte ptr [eax+esi+1]
shl     ecx, 8
or      eax, ecx
cmp     eax, ebx
jl      short loc_1001a5c3
cmp     eax, [ebp+var_4]
jle     short loc_1001a631
push    offset ac0d89d4a975292
push    0c040h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0c03bh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, ebx
sar     ecx, 8
mov     [edi+esi], cl
mov     [edi+esi+1], bl
mov     ecx, eax
sar     ecx, 8
mov     [esi+ebx], cl
mov     [esi+ebx+1], al
mov     eax, [ebp+size]
mov     ecx, eax
sar     ecx, 8
mov     [esi+ebx+2], cl
mov     ecx, [ebp+arg_0]
mov     [esi+ebx+3], al
add     [ecx+0eh], ax
movzx   eax, byte ptr [edx+esi+2]
lea     ecx, [edx+1]
mov     [ebp+var_4], ecx
movzx   ecx, byte ptr [ecx+esi]
shl     ecx, 8
or      eax, ecx
jle     loc_1001a727
lea     ebx, [ebx+0]
movzx   edi, byte ptr [eax+esi]
movzx   ecx, byte ptr [esi+eax+1]
movzx   ebx, byte ptr [esi+eax+3]
shl     edi, 8
or      edi, ecx
movzx   ecx, byte ptr [esi+eax+2]
shl     ecx, 8
or      ecx, ebx
lea     ebx, [ecx+eax+3]
cmp     ebx, edi
jl      short loc_1001a70e
test    edi, edi
jle     short loc_1001a70e
mov     ebx, edi
sub     ebx, ecx
sub     ebx, eax
mov     [ebp+arg_0], ebx
js      loc_1001a78d
mov     cl, [edx+esi+7]
movzx   ebx, cl
cmp     [ebp+arg_0], ebx
jg      loc_1001a78d
sub     cl, byte ptr [ebp+arg_0]
mov     [edx+esi+7], cl
movzx   ecx, byte ptr [edi+esi]
movzx   ebx, byte ptr [esi+edi+1]
shl     ecx, 8
or      ecx, ebx
mov     ebx, ecx
mov     [esi+eax+1], cl
sar     ebx, 8
mov     [eax+esi], bl
movzx   ecx, byte ptr [esi+edi+2]
movzx   ebx, byte ptr [esi+edi+3]
shl     ecx, 8
or      ecx, ebx
sub     ecx, eax
add     ecx, edi
mov     ebx, ecx
sar     ebx, 8
mov     [esi+eax+3], cl
mov     ecx, [ebp+var_4]
mov     [esi+eax+2], bl
jmp     short loc_1001a713
mov     ecx, eax
mov     [ebp+var_4], ecx
movzx   eax, byte ptr [ecx+esi]
movzx   ecx, byte ptr [esi+ecx+1]
shl     eax, 8
or      eax, ecx
jg      loc_1001a680
mov     al, [edx+esi+1]
lea     ecx, [edx+esi+1]
lea     edi, [edx+esi+5]
mov     [ebp+arg_0], edi
cmp     al, [edi]
jnz     short loc_1001a784
mov     bl, [edx+esi+6]
lea     edi, [edx+esi+6]
mov     dl, [edx+esi+2]
cmp     dl, bl
jnz     short loc_1001a784
movzx   edx, dl
movzx   eax, al
shl     eax, 8
or      eax, edx
mov     dx, [eax+esi]
mov     [ecx], dx
movzx   ecx, byte ptr [eax+esi+2]
movzx   eax, byte ptr [eax+esi+3]
shl     ecx, 8
or      ecx, eax
mov     eax, [ebp+arg_0]
movzx   edx, byte ptr [eax]
shl     edx, 8
movzx   esi, bl
or      edx, esi
add     ecx, edx
mov     edx, ecx
sar     edx, 8
mov     [eax], dl
mov     [edi], cl
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0c053h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, ecx
sar     ecx, 3
mov     [eax+3], cl
mov     dl, cl
mov     cl, 1
sub     cl, dl
add     cl, cl
add     cl, cl
and     esi, 0fffffff7h
mov     [eax+6], cl
mov     ecx, [eax+34h]
cmp     esi, 5
jnz     short loc_1001a802
mov     byte ptr [eax+2], 1
mov     [eax+4], dl
movzx   edx, word ptr [ecx+1ch]
mov     [eax+8], dx
movzx   edx, word ptr [ecx+1eh]
mov     [eax+0ah], dx
mov     cl, [ecx+14h]
mov     [eax+7], cl
xor     eax, eax
pop     esi
retn
cmp     esi, 2
jnz     short loc_1001a829
xor     dl, dl
mov     [eax+2], dl
mov     [eax+4], dl
movzx   edx, word ptr [ecx+18h]
mov     [eax+8], dx
movzx   edx, word ptr [ecx+1ah]
mov     [eax+0ah], dx
mov     cl, [ecx+14h]
mov     [eax+7], cl
xor     eax, eax
pop     esi
retn
push    offset ac0d89d4a975292
push    0c08bh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
cmp     byte ptr [esi], 0
push    ebx
push    edi
jnz     loc_1001aa58
mov     eax, [esi+34h]
mov     ebx, [esi+38h]
mov     [ebp+var_c], eax
mov     al, [esi+5]
movzx   edi, al
movzx   ecx, byte ptr [edi+ebx]
add     edi, ebx
mov     [ebp+var_1], al
mov     eax, esi
call    sub_1001a7c0
test    eax, eax
jz      short loc_1001a8a8
push    offset ac0d89d4a975292
push    0c0b2h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_c]
movzx   edx, word ptr [eax+20h]
dec     dx
mov     [esi+12h], dx
mov     byte ptr [esi+1], 0
mov     ecx, [eax+24h]
movzx   eax, byte ptr [esi+3]
mov     edx, 3
sub     dx, ax
movzx   eax, [ebp+var_1]
add     dx, dx
add     dx, dx
add     dx, ax
movzx   eax, dx
mov     [esi+0ch], ax
mov     [ebp+var_14], eax
add     eax, ebx
mov     [esi+40h], eax
mov     [ebp+var_8], ecx
add     ecx, ebx
mov     [esi+3ch], ecx
movzx   ecx, byte ptr [edi+5]
movzx   edx, byte ptr [edi+6]
movzx   eax, byte ptr [edi+3]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [edi+4]
shl     ax, 8
or      ax, dx
mov     edx, [ebp+var_c]
mov     [esi+10h], ax
mov     edx, [edx+20h]
movzx   eax, ax
mov     [ebp+var_10], eax
sub     edx, 8
mov     eax, 0aaaaaaabh
mul     edx
mov     eax, [ebp+var_10]
dec     ecx
and     ecx, 0ffffh
shr     edx, 2
inc     ecx
cmp     eax, edx
jbe     short loc_1001a958
push    offset ac0d89d4a975292
push    0c0beh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_14]
lea     eax, [edx+eax*2]
movzx   edx, byte ptr [edi+1]
mov     [ebp+var_10], eax
movzx   eax, byte ptr [edi+2]
shl     dx, 8
or      dx, ax
movzx   eax, byte ptr [edi+7]
movzx   edx, dx
add     eax, ecx
mov     [ebp+var_c], eax
test    dx, dx
jz      short loc_1001a9f1
movzx   eax, dx
cmp     eax, [ebp+var_10]
jl      loc_1001aa2a
mov     ecx, [ebp+var_8]
add     ecx, 0fffffffch
cmp     eax, ecx
jg      loc_1001aa2a
movzx   edx, byte ptr [eax+ebx]
movzx   ecx, byte ptr [eax+ebx+1]
movzx   edi, byte ptr [eax+ebx+3]
shl     dx, 8
or      cx, dx
movzx   edx, byte ptr [eax+ebx+2]
shl     dx, 8
or      dx, di
movzx   ecx, cx
movzx   edx, dx
mov     [ebp+var_14], edx
test    cx, cx
jz      short loc_1001a9d8
movzx   edx, dx
lea     edx, [edx+eax+3]
cmp     ecx, edx
jle     short loc_1001aa06
mov     edx, [ebp+var_14]
movzx   edx, dx
add     eax, edx
cmp     eax, [ebp+var_8]
jg      short loc_1001aa06
mov     eax, [ebp+var_c]
add     eax, edx
mov     [ebp+var_c], eax
mov     edx, ecx
test    cx, cx
jnz     short loc_1001a981
cmp     eax, [ebp+var_8]
jle     short loc_1001aa4e
mov     eax, 0c0feh
call    sub_10071c60
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0c0f0h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0c0e9h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sub     eax, [ebp+var_10]
mov     byte ptr [esi], 1
mov     [esi+0eh], ax
pop     edi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     cl, [esi+5]
push    ebx
mov     ebx, [esi+38h]
push    edi
mov     edi, [esi+34h]
test    byte ptr [edi+16h], 4
mov     [ebp+var_1], cl
jz      short loc_1001aa93
movzx   eax, cl
mov     ecx, [edi+24h]
sub     ecx, eax
push    ecx
add     eax, ebx
push    0
push    eax
call    memset
mov     cl, [ebp+var_1]
add     esp, 0ch
mov     edx, [ebp+arg_0]
movzx   eax, cl
mov     [eax+ebx], dl
add     eax, ebx
shr     edx, 3
not     edx
and     edx, 1
mov     dword ptr [eax+1], 0
movzx   ecx, cl
lea     edx, ds:8[edx*4]
add     dx, cx
movzx   ecx, dx
mov     byte ptr [eax+7], 0
mov     edx, [edi+24h]
shr     edx, 8
mov     [eax+5], dl
mov     dl, [edi+24h]
mov     [eax+6], dl
mov     ax, [edi+24h]
sub     ax, cx
mov     [ebp+var_8], ecx
mov     ecx, [ebp+arg_0]
mov     [esi+0eh], ax
mov     eax, esi
call    sub_1001a7c0
mov     eax, [ebp+var_8]
mov     cl, [ebp+var_1]
mov     [esi+0ch], ax
mov     [esi+5], cl
mov     edx, [edi+24h]
movzx   eax, ax
add     edx, ebx
add     eax, ebx
mov     [esi+3ch], edx
mov     [esi+40h], eax
mov     byte ptr [esi+1], 0
mov     cx, [edi+20h]
dec     cx
xor     edx, edx
pop     edi
mov     [esi+12h], cx
mov     [esi+10h], dx
mov     byte ptr [esi], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, ecx
push    eax
mov     eax, [esi]
lea     ecx, [ebp+var_4]
push    ecx
call    sub_10015300
add     esp, 8
test    eax, eax
jnz     short loc_1001ab76
mov     ecx, [ebp+var_4]
mov     eax, [ecx+8]
mov     edx, [ecx+4]
mov     [eax+44h], ecx
cmp     ebx, 1
setnz   cl
dec     cl
mov     [eax+38h], edx
mov     edx, [ebp+arg_0]
and     cl, 64h
mov     [eax+34h], esi
mov     [eax+48h], ebx
mov     [eax+5], cl
mov     [edx], eax
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
sub     esp, 8
push    ebx
push    esi
push    edi
cmp     ecx, [eax+2ch]
jbe     short loc_1001abb9
push    offset ac0d89d4a975292
push    0c181h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [eax]
test    ecx, ecx
jnz     short loc_1001abe4
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [esi+28h]
test    ebx, ebx
jnz     loc_1001acde
mov     edi, [esi+0b4h]
lea     eax, [ebp+var_4]
push    eax
push    1
push    ecx
call    sub_10010550
mov     ecx, [ebp+arg_4]
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     loc_1001acde
mov     edi, [ebp+var_4]
cmp     [edi+10h], eax
jz      short loc_1001ac24
inc     dword ptr [esi+0a0h]
jmp     loc_1001acf2
mov     [edi+10h], esi
cmp     ecx, 7fffffffh
ja      short loc_1001ac8e
mov     eax, dword_1008031c
mov     ebx, [esi+80h]
cdq
idiv    ebx
inc     eax
cmp     ecx, eax
jz      short loc_1001ac8e
cmp     byte ptr [esi+0eh], 0
jnz     short loc_1001ac6e
cmp     [esi+18h], ecx
jb      short loc_1001ac6e
mov     edx, [esi+3ch]
cmp     dword ptr [edx], 0
jz      short loc_1001ac6e
inc     dword ptr [esi+0a4h]
mov     eax, edi
call    sub_100137f0
mov     ebx, eax
test    ebx, ebx
jz      loc_1001acef
jmp     short loc_1001acac
cmp     ecx, [esi+84h]
jbe     short loc_1001ac7d
mov     ebx, 0dh
jmp     short loc_1001acac
mov     eax, [edi+4]
push    ebx
push    0
push    eax
call    memset
add     esp, 0ch
jmp     short loc_1001acef
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     ebx, 0bh
test    byte ptr [edi+18h], 2
jz      short loc_1001acb9
mov     eax, edi
call    sub_100104b0
mov     eax, [edi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [edi+14h], 1
jnz     short loc_1001accc
mov     dword ptr [eax+2ch], 0
mov     ecx, [edi]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    esi
call    sub_10015290
add     esp, 4
xor     edi, edi
mov     eax, ebx
test    ebx, ebx
jnz     short loc_1001ad38
mov     ecx, [ebp+arg_4]
mov     eax, [edi+4]
mov     esi, [edi+8]
mov     edx, [ebp+arg_0]
mov     [esi+38h], eax
cmp     ecx, 1
setnz   al
dec     al
mov     [esi+44h], edi
mov     edi, [ebp+arg_8]
and     al, 64h
mov     [esi+34h], edx
mov     [esi+48h], ecx
mov     [esi+5], al
mov     [edi], esi
call    sub_1001a850
mov     esi, eax
test    esi, esi
jz      short loc_1001ad36
mov     edi, [edi]
test    edi, edi
jz      short loc_1001ad36
mov     ecx, [edi+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [eax+8]
cmp     byte ptr [esi], 0
jz      short loc_1001ad5e
mov     byte ptr [esi], 0
cmp     word ptr [eax+1ah], 1
jle     short loc_1001ad5e
call    sub_1001a850
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [eax+4]
add     esi, 1a4h
jz      short loc_1001adad
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_1001adad
mov     eax, [esi+8]
test    eax, eax
js      short loc_1001adad
mov     edx, [esi+4]
push    eax
push    edx
call    ecx
add     esp, 8
test    eax, eax
jnz     short loc_1001ada7
mov     dword ptr [esi+8], 0ffffffffh
pop     esi
pop     ebp
retn
inc     dword ptr [esi+8]
pop     esi
pop     ebp
retn
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0a4h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
xor     ebx, ebx
push    esi
mov     [ebp+var_8c], eax
mov     eax, [ebp+arg_4]
mov     esi, edx
push    edi
mov     [ebp+var_94], eax
mov     [ebp+var_88], esi
mov     [ebp+var_a0], ecx
mov     [ebp+var_90], ebx
mov     [ebp+var_78], ebx
cmp     eax, ebx
jz      short loc_1001ae0d
cmp     [eax], bl
jz      short loc_1001ae0d
xor     edi, edi
jmp     short loc_1001ae12
mov     edi, 1
mov     [ebp+var_80], edi
cmp     eax, ebx
jz      short loc_1001ae49
mov     ecx, offset amemory
mov     edi, edi
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_1001ae40
test    dl, dl
jz      short loc_1001ae3c
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_1001ae40
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_1001ae20
xor     eax, eax
jmp     short loc_1001ae45
sbb     eax, eax
sbb     eax, 0ffffffffh
cmp     eax, ebx
jz      short loc_1001ae5e
cmp     edi, ebx
jz      short loc_1001ae53
cmp     byte ptr [esi+31h], 2
jz      short loc_1001ae5e
mov     eax, [ebp+arg_c]
test    al, al
js      short loc_1001ae61
xor     esi, esi
jmp     short loc_1001ae6a
mov     eax, [ebp+arg_c]
or      [ebp+arg_8], 2
mov     esi, 1
mov     [ebp+var_9c], esi
test    eax, 100h
jz      short loc_1001ae8c
cmp     esi, ebx
jnz     short loc_1001ae7f
cmp     edi, ebx
jz      short loc_1001ae8c
and     eax, 0fffffeffh
or      eax, 200h
mov     [ebp+arg_c], eax
push    2ch
call    sub_100094a0
mov     edi, eax
add     esp, 4
mov     [ebp+var_98], edi
cmp     edi, ebx
jz      short loc_1001af0e
push    2ch
push    ebx
push    edi
call    memset
mov     edx, [ebp+var_88]
add     esp, 0ch
mov     [edi+8], bl
mov     [edi], edx
mov     [edi+1ch], edi
mov     dword ptr [edi+20h], 1
cmp     [ebp+var_80], ebx
jnz     loc_1001b0aa
test    esi, esi
jz      short loc_1001aeda
test    byte ptr [ebp+arg_c], 40h
jz      loc_1001b0aa
test    [ebp+arg_c], 20000h
jz      loc_1001b0aa
mov     eax, [ebp+var_8c]
mov     ebx, [eax+8]
inc     ebx
push    ebx
call    sub_100094a0
add     esp, 4
mov     [ebp+var_80], eax
mov     byte ptr [edi+9], 1
test    eax, eax
jnz     short loc_1001af24
push    edi
call    sub_10009770
add     esp, 4
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jz      short loc_1001af5f
mov     ecx, [ebp+var_94]
call    sub_1000ba20
inc     eax
push    eax
push    ecx
mov     ecx, [ebp+var_80]
push    ecx
call    memcpy
add     esp, 0ch
xor     ebx, ebx
cmp     dword_10080234, ebx
jnz     short loc_1001af97
mov     [ebp+var_90], ebx
mov     [ebp+var_84], ebx
mov     esi, ebx
jmp     loc_1001afe9
mov     edx, [ebp+var_94]
mov     esi, eax
mov     eax, [ebp+var_8c]
push    esi
push    ebx
push    edx
mov     byte ptr [esi], 0
push    eax
mov     eax, [eax+24h]
call    eax
add     esp, 10h
mov     [ebp+var_78], eax
test    eax, eax
jz      short loc_1001af42
push    esi
call    sub_10009770
add     esp, 4
push    edi
call    sub_10009770
jmp     loc_1001b3f9
push    4
call    dword_10080274
add     esp, 4
mov     [ebp+var_90], eax
cmp     eax, ebx
jz      short loc_1001afb6
push    eax
call    dword_1008027c
add     esp, 4
cmp     dword_10080234, ebx
jnz     short loc_1001afc8
mov     [ebp+var_84], ebx
mov     esi, ebx
jmp     short loc_1001afe9
push    2
call    dword_10080274
mov     esi, eax
add     esp, 4
mov     [ebp+var_84], esi
cmp     esi, ebx
jz      short loc_1001afe9
push    esi
call    dword_1008027c
add     esp, 4
mov     eax, dword_100817a0
mov     [ebp+var_7c], eax
cmp     eax, ebx
jz      loc_1001b086
mov     ebx, [ebp+var_8c]
nop
mov     ecx, [ebp+var_7c]
mov     esi, [ecx]
mov     ecx, [esi+90h]
mov     eax, [ebp+var_80]
mov     edi, edi
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_1001b030
test    dl, dl
jz      short loc_1001b02c
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_1001b030
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_1001b010
xor     eax, eax
jmp     short loc_1001b035
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     short loc_1001b03d
cmp     [esi], ebx
jz      short loc_1001b04c
mov     edx, [ebp+var_7c]
mov     eax, [edx+44h]
mov     [ebp+var_7c], eax
test    eax, eax
jnz     short loc_1001b000
jmp     short loc_1001b080
mov     ecx, [ebp+var_88]
mov     eax, [ecx+14h]
dec     eax
js      short loc_1001b077
mov     ecx, [ecx+10h]
mov     esi, [ebp+var_7c]
mov     edx, eax
add     edx, edx
lea     ecx, [ecx+edx*8+4]
mov     edx, [ecx]
test    edx, edx
jz      short loc_1001b071
cmp     [edx+4], esi
jz      short loc_1001b0da
sub     ecx, 10h
dec     eax
jns     short loc_1001b066
mov     eax, [ebp+var_7c]
mov     [edi+4], eax
inc     dword ptr [eax+40h]
mov     esi, [ebp+var_84]
test    esi, esi
jz      short loc_1001b094
push    esi
call    dword_10080284
add     esp, 4
mov     eax, [ebp+var_80]
push    eax
call    sub_10009770
add     esp, 4
cmp     [ebp+var_7c], 0
jnz     loc_1001b27a
push    54h
call    sub_100094a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1001b0c7
push    54h
push    0
push    ebx
call    memset
add     esp, 0ch
mov     [ebp+var_7c], ebx
test    ebx, ebx
jnz     short loc_1001b12d
mov     [ebp+var_78], 7
jmp     loc_1001b357
mov     eax, [ebp+var_84]
test    eax, eax
jz      short loc_1001b0ee
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+var_90]
test    eax, eax
jz      short loc_1001b102
push    eax
call    dword_10080284
add     esp, 4
mov     edx, [ebp+var_80]
push    edx
call    sub_10009770
add     esp, 4
push    edi
call    sub_10009770
add     esp, 4
mov     eax, 13h
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+var_94]
mov     eax, [ebp+var_8c]
push    ecx
mov     ecx, [ebp+arg_8]
push    edx
push    ebx
push    eax
call    sub_10014980
add     esp, 10h
mov     [ebp+var_78], eax
test    eax, eax
jnz     loc_1001b357
mov     ecx, [ebx]
push    ecx
lea     esi, [ebp+var_70]
call    sub_10014110
add     esp, 4
mov     [ebp+var_78], eax
test    eax, eax
jnz     loc_1001b357
mov     eax, [ebp+var_88]
mov     dl, byte ptr [ebp+arg_8]
mov     [ebx+4], eax
mov     eax, [ebx]
mov     [ebx+10h], dl
mov     dword ptr [eax+98h], offset sub_1001ad70
mov     [eax+9ch], ebx
mov     ecx, edi
mov     [ecx+4], ebx
mov     eax, [ebx]
xor     ecx, ecx
mov     [ebx+8], ecx
mov     [ebx+0ch], ecx
cmp     [eax+0dh], cl
jz      short loc_1001b1a9
or      word ptr [ebx+16h], 1
movzx   eax, [ebp+var_5f]
movzx   edx, [ebp+var_60]
shl     eax, 8
or      eax, edx
shl     eax, 8
lea     edi, [ebx+20h]
mov     [edi], eax
cmp     eax, 200h
jb      short loc_1001b200
cmp     eax, 10000h
ja      short loc_1001b200
lea     edx, [eax-1]
test    eax, edx
jnz     short loc_1001b200
mov     al, [ebp+var_5c]
or      word ptr [ebx+16h], 2
lea     ecx, [ebp+var_3c]
mov     [ebp+var_71], al
call    sub_1000c8a0
test    eax, eax
setnz   cl
mov     [ebx+11h], cl
lea     ecx, [ebp+var_30]
call    sub_1000c8a0
test    eax, eax
setnz   dl
mov     [ebx+12h], dl
jmp     short loc_1001b219
mov     [edi], ecx
cmp     [ebp+var_94], ecx
jz      short loc_1001b216
cmp     [ebp+var_9c], ecx
jnz     short loc_1001b216
mov     [ebx+11h], cx
mov     [ebp+var_71], cl
movzx   esi, [ebp+var_71]
push    esi
push    edi
mov     edi, [ebx]
call    sub_10013ff0
add     esp, 8
mov     [ebp+var_78], eax
test    eax, eax
jnz     loc_1001b357
mov     eax, [ebx+20h]
mov     ecx, [ebp+var_98]
sub     eax, esi
mov     [ebx+24h], eax
cmp     byte ptr [ecx+9], 0
jz      short loc_1001b27a
mov     dword ptr [ebx+40h], 1
cmp     dword_10080234, 0
jnz     short loc_1001b2bb
xor     esi, esi
push    esi
call    sub_10008ec0
mov     eax, dword_100817a0
add     esp, 4
push    esi
mov     [ebx+44h], eax
mov     dword_100817a0, ebx
call    sub_10008f00
add     esp, 4
mov     edi, [ebp+var_98]
cmp     byte ptr [edi+9], 0
jz      loc_1001b349
mov     esi, [ebp+var_88]
xor     edx, edx
cmp     [esi+14h], edx
jle     loc_1001b349
mov     ecx, [esi+10h]
add     ecx, 4
mov     eax, [ecx]
test    eax, eax
jz      short loc_1001b2ad
cmp     byte ptr [eax+9], 0
jnz     short loc_1001b2f9
inc     edx
add     ecx, 10h
cmp     edx, [esi+14h]
jl      short loc_1001b2a1
jmp     loc_1001b349
push    2
call    dword_10080274
add     esp, 4
cmp     dword_10080234, 0
mov     esi, eax
jz      short loc_1001b25a
push    0
call    dword_10080274
add     esp, 4
mov     [ebx+38h], eax
test    eax, eax
jnz     loc_1001b25a
mov     edx, [ebp+var_88]
mov     [ebp+var_78], 7
mov     [edx+32h], al
jmp     short loc_1001b357
cmp     dword ptr [eax+18h], 0
jz      short loc_1001b309
nop
mov     eax, [eax+18h]
cmp     dword ptr [eax+18h], 0
jnz     short loc_1001b300
mov     edx, [edi+4]
cmp     edx, [eax+4]
jnb     short loc_1001b320
mov     [edi+14h], eax
mov     dword ptr [edi+18h], 0
mov     [eax+18h], edi
jmp     short loc_1001b349
cmp     dword ptr [eax+14h], 0
jz      short loc_1001b336
mov     ecx, [eax+14h]
cmp     [ecx+4], edx
jnb     short loc_1001b336
mov     eax, ecx
cmp     dword ptr [eax+14h], 0
jnz     short loc_1001b326
mov     ecx, [eax+14h]
mov     [edi+14h], ecx
mov     [edi+18h], eax
test    ecx, ecx
jz      short loc_1001b346
mov     [ecx+18h], edi
mov     [eax+14h], edi
cmp     [ebp+var_78], 0
mov     edx, [ebp+var_a0]
mov     [edx], edi
jz      short loc_1001b38f
mov     esi, [ebp+var_7c]
test    esi, esi
jz      short loc_1001b369
mov     eax, [esi]
test    eax, eax
jz      short loc_1001b369
call    sub_10014200
push    esi
call    sub_10009770
mov     eax, [ebp+var_98]
add     esp, 4
push    eax
call    sub_10009770
mov     ecx, [ebp+var_a0]
add     esp, 4
mov     dword ptr [ecx], 0
jmp     short loc_1001b3e8
mov     esi, [edi+4]
call    sub_10019320
cmp     byte ptr [edi+9], 0
jz      short loc_1001b3ba
dec     dword ptr [edi+0ch]
jnz     short loc_1001b3ba
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_1001b3b6
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
cmp     dword ptr [esi+30h], 0
jnz     short loc_1001b3e8
mov     eax, [edi+4]
mov     ecx, [eax]
mov     eax, [ecx+0b4h]
mov     dword ptr [eax+10h], 7d0h
mov     eax, [eax+28h]
test    eax, eax
jz      short loc_1001b3e8
push    7d0h
push    eax
call    dword_100802a4
add     esp, 8
mov     eax, [ebp+var_90]
test    eax, eax
jz      short loc_1001b3fc
push    eax
call    dword_10080284
add     esp, 4
mov     ecx, [ebp+var_4]
mov     eax, [ebp+var_78]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
xor     edi, edi
mov     esi, eax
cmp     dword_10080234, edi
jnz     short loc_1001b423
xor     ebx, ebx
jmp     short loc_1001b43e
push    2
call    dword_10080274
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1001b43e
push    ebx
call    dword_1008027c
add     esp, 4
dec     dword ptr [esi+40h]
cmp     [esi+40h], edi
jg      short loc_1001b48b
mov     eax, dword_100817a0
cmp     eax, esi
jnz     short loc_1001b459
mov     eax, [esi+44h]
mov     dword_100817a0, eax
jmp     short loc_1001b475
test    eax, eax
jz      short loc_1001b475
lea     ecx, [ecx+0]
mov     ecx, [eax+44h]
cmp     ecx, esi
jz      short loc_1001b46f
mov     eax, ecx
test    eax, eax
jnz     short loc_1001b460
jmp     short loc_1001b475
mov     ecx, [esi+44h]
mov     [eax+44h], ecx
mov     esi, [esi+38h]
test    esi, esi
jz      short loc_1001b486
push    esi
call    dword_10080278
add     esp, 4
mov     edi, 1
test    ebx, ebx
jz      short loc_1001b499
push    ebx
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
mov     esi, [ebx+4]
push    edi
mov     edi, ebx
mov     [ebp+var_4], esi
call    sub_10019320
mov     edi, [esi+8]
test    edi, edi
jz      short loc_1001b4d7
lea     esp, [esp+0]
mov     eax, edi
mov     edi, [edi+8]
cmp     [eax], ebx
jnz     short loc_1001b4d3
mov     esi, eax
call    sub_1001d2b0
mov     esi, [ebp+var_4]
test    edi, edi
jnz     short loc_1001b4c0
push    ebx
xor     eax, eax
call    sub_1001ced0
add     esp, 4
cmp     byte ptr [ebx+9], 0
jz      short loc_1001b516
dec     dword ptr [ebx+0ch]
jnz     short loc_1001b505
mov     eax, [ebx+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001b501
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [ebx+0ah], 0
cmp     byte ptr [ebx+9], 0
jz      short loc_1001b516
mov     eax, esi
call    sub_1001b410
test    eax, eax
jz      short loc_1001b558
mov     eax, [esi]
call    sub_10014200
mov     ecx, [esi+34h]
test    ecx, ecx
jz      short loc_1001b531
mov     eax, [esi+30h]
test    eax, eax
jz      short loc_1001b531
push    eax
call    ecx
add     esp, 4
mov     ecx, [esi+30h]
push    ecx
call    sub_10009770
mov     esi, [esi+50h]
add     esp, 4
call    sub_10010c90
mov     eax, [ebp+var_4]
push    eax
mov     dword ptr [eax+50h], 0
call    sub_10009770
add     esp, 4
mov     eax, [ebx+18h]
test    eax, eax
jz      short loc_1001b565
mov     edx, [ebx+14h]
mov     [eax+14h], edx
mov     eax, [ebx+14h]
test    eax, eax
jz      short loc_1001b572
mov     ecx, [ebx+18h]
mov     [eax+18h], ecx
push    ebx
call    sub_10009770
add     esp, 4
pop     edi
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    edi
mov     edi, eax
mov     ebx, [edi+4]
call    sub_10019320
mov     eax, [ebx]
mov     ecx, [eax+0b4h]
mov     edx, [ecx+28h]
mov     [ecx+10h], esi
mov     [ebp+var_8], edx
test    edx, edx
jz      short loc_1001b5f6
test    esi, esi
js      short loc_1001b5bf
mov     eax, esi
jmp     short loc_1001b5eb
mov     eax, [ecx+18h]
add     eax, [ecx+14h]
push    0ffffffffh
cdq
mov     ebx, eax
mov     [ebp+var_4], edx
mov     eax, esi
cdq
push    0fffffc00h
push    edx
push    eax
call    __allmul
mov     ecx, [ebp+var_4]
push    ecx
push    ebx
push    edx
push    eax
call    __alldiv
mov     edx, [ebp+var_8]
push    eax
push    edx
call    dword_100802a4
add     esp, 8
cmp     byte ptr [edi+9], 0
jz      short loc_1001b619
dec     dword ptr [edi+0ch]
jnz     short loc_1001b619
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1001b615
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+4]
call    sub_10019320
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    eax
mov     eax, [esi]
push    ecx
call    sub_10013f70
add     esp, 8
cmp     byte ptr [edi+9], 0
jz      short loc_1001b677
dec     dword ptr [edi+0ch]
jnz     short loc_1001b677
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_1001b673
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+4]
call    sub_10019320
cmp     byte ptr [edi+9], 0
mov     eax, [esi]
movzx   esi, byte ptr [eax+7]
jz      short loc_1001b6b5
dec     dword ptr [edi+0ch]
jnz     short loc_1001b6b5
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1001b6b1
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, [edi+4]
mov     esi, eax
call    sub_10019320
test    byte ptr [ebx+16h], 2
jz      short loc_1001b706
cmp     byte ptr [edi+9], 0
jz      short loc_1001b6fc
dec     dword ptr [edi+0ch]
jnz     short loc_1001b6fc
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001b6f8
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, 8
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
cmp     [ebp+arg_4], 0
jge     short loc_1001b715
mov     eax, [ebx+20h]
sub     eax, [ebx+24h]
mov     [ebp+arg_4], eax
lea     ecx, [esi-200h]
cmp     ecx, 0fe00h
ja      short loc_1001b73c
lea     edx, [esi-1]
test    esi, edx
jnz     short loc_1001b73c
mov     [ebx+20h], esi
mov     esi, [ebx+50h]
call    sub_10010c90
mov     dword ptr [ebx+50h], 0
mov     eax, [ebp+arg_4]
mov     edi, [ebx]
push    eax
lea     esi, [ebx+20h]
push    esi
call    sub_10013ff0
movzx   ecx, word ptr [ebp+arg_4]
mov     edx, [esi]
sub     edx, ecx
add     esp, 8
cmp     [ebp+arg_8], 0
mov     edi, eax
mov     [ebx+24h], edx
jz      short loc_1001b766
or      word ptr [ebx+16h], 2
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+9], 0
jz      short loc_1001b78c
dec     dword ptr [esi+0ch]
jnz     short loc_1001b78c
mov     eax, [esi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001b788
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    esi
push    edi
mov     edi, eax
call    sub_10019320
mov     eax, [edi+4]
mov     esi, [eax+20h]
sub     esi, [eax+24h]
cmp     byte ptr [edi+9], 0
jz      short loc_1001b7d2
dec     dword ptr [edi+0ch]
jnz     short loc_1001b7d2
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001b7ce
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
retn
push    esi
push    edi
mov     edi, ecx
mov     esi, eax
call    sub_10019320
mov     eax, [edi+4]
mov     eax, [eax]
test    esi, esi
jle     short loc_1001b7fa
mov     [eax+84h], esi
cmp     byte ptr [edi+9], 0
mov     esi, [eax+84h]
jz      short loc_1001b823
dec     dword ptr [edi+0ch]
jnz     short loc_1001b823
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1001b81f
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
retn
push    esi
push    edi
mov     edi, ecx
mov     esi, eax
test    edi, edi
jnz     short loc_1001b83f
pop     edi
xor     eax, eax
pop     esi
retn
call    sub_10019320
test    esi, esi
js      short loc_1001b860
mov     eax, [edi+4]
mov     ecx, 0fffbh
and     [eax+16h], cx
test    esi, esi
jz      short loc_1001b860
mov     eax, [edi+4]
or      word ptr [eax+16h], 4
mov     eax, [edi+4]
movzx   esi, word ptr [eax+16h]
shr     esi, 2
and     esi, 1
cmp     byte ptr [edi+9], 0
jz      short loc_1001b88d
dec     dword ptr [edi+0ch]
jnz     short loc_1001b88d
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001b889
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
push    ebx
mov     bl, byte ptr [ebp+arg_0]
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+4]
mov     [ebp+arg_0], 0
call    sub_10019320
test    byte ptr [esi+16h], 2
jz      short loc_1001b8d6
movzx   ecx, byte ptr [esi+11h]
xor     eax, eax
test    bl, bl
setnz   al
cmp     eax, ecx
jz      short loc_1001b8d6
mov     esi, 8
jmp     short loc_1001b8ea
test    bl, bl
setnz   dl
cmp     bl, 2
setz    al
mov     [esi+11h], dl
mov     [esi+12h], al
mov     esi, [ebp+arg_0]
cmp     byte ptr [edi+9], 0
jz      short loc_1001b90d
dec     dword ptr [edi+0ch]
jnz     short loc_1001b90d
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1001b909
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn
push    esi
push    edi
mov     edi, eax
call    sub_10019320
mov     eax, [edi+4]
cmp     byte ptr [eax+11h], 0
jnz     short loc_1001b936
xor     esi, esi
jmp     short loc_1001b941
xor     ecx, ecx
cmp     [eax+12h], cl
setnz   cl
lea     esi, [ecx+1]
cmp     byte ptr [edi+9], 0
jz      short loc_1001b961
dec     dword ptr [edi+0ch]
jnz     short loc_1001b961
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001b95d
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebx]
sub     esp, 18h
push    esi
push    edi
call    sub_10014fc0
test    eax, eax
jnz     loc_1001bd0f
mov     esi, [ebx]
mov     eax, [esi+28h]
test    eax, eax
jnz     short loc_1001b9a6
mov     edi, [esi+0b4h]
lea     eax, [ebp+var_18]
push    eax
push    1
push    1
call    sub_10010550
add     esp, 0ch
mov     [ebp+var_4], eax
test    eax, eax
jnz     loc_1001ba72
mov     edi, [ebp+var_18]
cmp     [edi+10h], eax
jz      short loc_1001b9c4
inc     dword ptr [esi+0a0h]
jmp     loc_1001ba88
mov     eax, dword_1008031c
cdq
mov     [edi+10h], esi
mov     ecx, [esi+80h]
idiv    ecx
mov     edx, eax
mov     eax, 1
add     edx, eax
cmp     edx, eax
jnz     short loc_1001ba04
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     [ebp+var_4], 0bh
jmp     short loc_1001ba40
cmp     byte ptr [esi+0eh], 0
jnz     short loc_1001ba2d
cmp     [esi+18h], eax
jb      short loc_1001ba2d
mov     edx, [esi+3ch]
cmp     dword ptr [edx], 0
jz      short loc_1001ba2d
add     [esi+0a4h], eax
mov     eax, edi
call    sub_100137f0
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_1001ba88
jmp     short loc_1001ba40
cmp     [esi+84h], eax
jnb     loc_1001bb08
mov     [ebp+var_4], 0dh
test    byte ptr [edi+18h], 2
jz      short loc_1001ba4d
mov     eax, edi
call    sub_100104b0
mov     eax, [edi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [edi+14h], 1
jnz     short loc_1001ba60
mov     dword ptr [eax+2ch], 0
mov     ecx, [edi]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    esi
call    sub_10015290
mov     eax, [ebp+var_4]
add     esp, 4
xor     edi, edi
test    eax, eax
jnz     loc_1001bd0f
mov     edx, [edi+8]
mov     ecx, [edi+4]
mov     [edx+38h], ecx
mov     [edx+44h], edi
mov     edi, ecx
mov     [edx+34h], ebx
mov     dword ptr [edx+48h], 1
mov     byte ptr [edx+5], 64h
movzx   ecx, byte ptr [edi+1ch]
movzx   eax, byte ptr [edi+1dh]
shl     ecx, 8
or      ecx, eax
movzx   eax, byte ptr [edi+1eh]
shl     ecx, 8
or      ecx, eax
movzx   eax, byte ptr [edi+1fh]
shl     ecx, 8
or      ecx, eax
mov     eax, [ebx]
mov     eax, [eax+18h]
mov     [ebp+var_4], edx
mov     [ebp+var_18], edi
mov     [ebp+var_8], ecx
mov     [ebp+var_14], eax
jz      short loc_1001bae0
mov     eax, edi
mov     esi, [eax+18h]
cmp     esi, [eax+5ch]
jz      short loc_1001bae6
mov     ecx, [ebp+var_14]
mov     [ebp+var_8], ecx
test    ecx, ecx
jle     loc_1001bca3
mov     eax, offset asqliteformat3
mov     esi, edi
sub     esi, eax
mov     [ebp+var_c], 1ah
mov     ecx, 10h
mov     [ebp+var_10], esi
jmp     short loc_1001bb23
mov     eax, [edi+4]
push    ecx
push    0
push    eax
call    memset
add     esp, 0ch
jmp     loc_1001ba88
mov     esi, [ebp+var_10]
mov     esi, [esi+eax]
cmp     esi, [eax]
jnz     loc_1001bc53
sub     ecx, 4
add     eax, 4
cmp     ecx, 4
jnb     short loc_1001bb20
cmp     byte ptr [edi+12h], 2
jbe     short loc_1001bb44
or      word ptr [ebx+16h], 1
mov     al, [edi+13h]
cmp     al, 2
ja      loc_1001bc53
jnz     short loc_1001bb9d
test    byte ptr [ebx+16h], 10h
jnz     short loc_1001bb9d
mov     esi, [ebx]
lea     edx, [ebp+var_10]
push    edx
mov     [ebp+var_10], 0
call    sub_10016840
add     esp, 4
mov     [ebp+var_c], eax
test    eax, eax
jnz     loc_1001bc50
cmp     [ebp+var_10], eax
jnz     short loc_1001bb93
mov     eax, [ebp+var_4]
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_4]
mov     [ebp+var_c], 1ah
cmp     byte ptr [edi+15h], 40h
jnz     loc_1001bc53
mov     al, 20h
cmp     [edi+16h], al
jnz     loc_1001bc53
cmp     [edi+17h], al
jnz     loc_1001bc53
movzx   edi, byte ptr [edi+11h]
mov     eax, [ebp+var_18]
movzx   edx, byte ptr [eax+10h]
shl     edi, 8
or      edi, edx
shl     edi, 8
lea     ecx, [edi-1]
test    edi, ecx
jnz     short loc_1001bc50
lea     edx, [edi-101h]
cmp     edx, 0feffh
ja      short loc_1001bc50
movzx   ecx, byte ptr [eax+14h]
mov     esi, edi
sub     esi, ecx
mov     [ebp+var_10], esi
cmp     edi, [ebx+20h]
jz      short loc_1001bc2f
mov     edx, [ebp+var_4]
mov     eax, [edx+44h]
push    eax
call    sub_100154a0
mov     [ebx+24h], esi
mov     esi, [ebx+50h]
add     esp, 4
mov     [ebx+20h], edi
call    sub_10010c90
sub     edi, [ebp+var_10]
lea     eax, [ebx+20h]
push    edi
mov     edi, [ebx]
push    eax
mov     dword ptr [ebx+50h], 0
call    sub_10013ff0
add     esp, 8
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebx+4]
test    dword ptr [ecx+18h], 800000h
jnz     short loc_1001bc6f
mov     edx, [ebp+var_14]
cmp     [ebp+var_8], edx
jle     short loc_1001bc6f
mov     eax, 0c49ch
call    sub_10071c60
mov     [ebp+var_c], eax
mov     edx, [ebp+var_4]
mov     edx, [edx+44h]
push    edx
call    sub_100154a0
mov     eax, [ebp+var_c]
add     esp, 4
mov     dword ptr [ebx+0ch], 0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     esi, 1e0h
jb      short loc_1001bc50
lea     ecx, [eax+34h]
mov     [ebx+20h], edi
mov     [ebx+24h], esi
call    sub_1000c8a0
mov     ecx, [ebp+var_18]
test    eax, eax
setnz   al
add     ecx, 40h
mov     [ebx+11h], al
call    sub_1000c8a0
test    eax, eax
setnz   cl
mov     [ebx+12h], cl
mov     ecx, [ebp+var_8]
mov     esi, [ebx+24h]
add     esi, 0fffffff4h
mov     edx, esi
shl     edx, 6
mov     eax, 80808081h
mul     edx
shr     edx, 7
lea     edi, [edx-17h]
shl     esi, 5
mov     eax, 80808081h
mul     esi
shr     edx, 7
lea     eax, [edx-17h]
mov     dx, [ebx+24h]
sub     dx, 23h
mov     [ebx+18h], di
mov     [ebx+1ah], ax
mov     [ebx+1ch], dx
mov     [ebx+1eh], ax
cmp     di, 7fh
jbe     short loc_1001bcfe
mov     edx, [ebp+var_4]
mov     byte ptr [ebx+14h], 7fh
mov     [ebx+0ch], edx
mov     [ebx+2ch], ecx
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     al, [ebx+18h]
mov     edx, [ebp+var_4]
mov     [ebx+14h], al
mov     [ebx+0ch], edx
mov     [ebx+2ch], ecx
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ecx
cmp     dword ptr [ebx+2ch], 0
push    esi
push    edi
ja      loc_1001bdf7
mov     esi, [ebx+0ch]
mov     eax, [esi+44h]
mov     edi, [esi+38h]
push    eax
call    sub_100158a0
add     esp, 4
test    eax, eax
jnz     loc_1001bdf9
mov     ecx, dword ptr ds:asqliteformat3
mov     [edi], ecx
mov     edx, dword ptr ds:asqliteformat3+4
mov     [edi+4], edx
mov     eax, dword ptr ds:asqliteformat3+8
mov     [edi+8], eax
mov     ecx, dword ptr ds:asqliteformat3+0ch
mov     [edi+0ch], ecx
mov     dl, [ebx+21h]
mov     [edi+10h], dl
mov     al, [ebx+22h]
mov     [edi+11h], al
mov     word ptr [edi+12h], 101h
mov     cl, [ebx+20h]
sub     cl, [ebx+24h]
push    4ch
lea     edx, [edi+18h]
mov     al, 20h
push    0
push    edx
mov     [edi+14h], cl
mov     word ptr [edi+15h], 2040h
mov     [edi+17h], al
call    memset
add     esp, 0ch
push    0dh
call    sub_1001aa60
movzx   eax, byte ptr [ebx+11h]
or      word ptr [ebx+16h], 2
mov     ecx, eax
shr     ecx, 18h
mov     [edi+34h], cl
mov     [edi+37h], al
mov     edx, eax
shr     edx, 10h
mov     [edi+35h], dl
mov     ecx, eax
shr     ecx, 8
mov     [edi+36h], cl
movzx   eax, byte ptr [ebx+12h]
mov     edx, eax
shr     edx, 18h
mov     [edi+40h], dl
mov     ecx, eax
shr     ecx, 10h
mov     edx, eax
add     esp, 4
shr     edx, 8
mov     [edi+41h], cl
mov     [edi+42h], dl
mov     [edi+43h], al
mov     dword ptr [ebx+2ch], 1
mov     byte ptr [edi+1fh], 1
xor     eax, eax
pop     edi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi+4]
xor     ebx, ebx
call    sub_10019320
mov     al, [edi+8]
cmp     al, 2
jz      loc_1001c06c
cmp     al, 1
jnz     short loc_1001be2c
cmp     [ebp+arg_4], ebx
jz      loc_1001c08c
movzx   ecx, word ptr [esi+16h]
mov     eax, [ebp+arg_4]
test    cl, 1
jz      short loc_1001be46
test    eax, eax
jz      short loc_1001be50
mov     ebx, 8
jmp     loc_1001c08c
test    eax, eax
jz      short loc_1001be50
cmp     byte ptr [esi+13h], 2
jz      short loc_1001be55
test    cl, 40h
jz      short loc_1001be5c
mov     eax, [esi+4ch]
mov     eax, [eax]
jmp     short loc_1001be94
cmp     eax, 1
jle     short loc_1001be73
mov     eax, [esi+48h]
test    eax, eax
jz      short loc_1001be73
cmp     [eax], edi
jnz     short loc_1001be90
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_1001be68
mov     eax, [edi+4]
cmp     [edi+9], bl
jz      short loc_1001bec5
cmp     [eax+4ch], edi
jz      short loc_1001bea2
test    byte ptr [eax+16h], 20h
jz      short loc_1001bea2
mov     ebx, 106h
jmp     loc_1001c08c
mov     edx, [eax]
mov     eax, [edx]
test    eax, eax
jz      short loc_1001be73
mov     ebx, 106h
jmp     loc_1001c08c
mov     eax, [eax+48h]
test    eax, eax
jz      short loc_1001bec5
mov     edx, 1
mov     edi, edi
cmp     [eax], edi
jz      short loc_1001bebe
cmp     [eax+4], edx
jnz     short loc_1001bebe
cmp     [eax+8], dl
jnz     short loc_1001be98
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_1001beb0
mov     eax, ecx
xor     ebx, ebx
and     eax, 0fff7h
mov     [esi+16h], ax
cmp     [esi+2ch], ebx
jnz     short loc_1001bee0
or      eax, 8
mov     [esi+16h], ax
mov     edi, edi
cmp     dword ptr [esi+0ch], 0
jnz     short loc_1001bef8
mov     ebx, esi
call    sub_1001b970
mov     edi, [ebp+arg_0]
mov     ebx, eax
test    ebx, ebx
jz      short loc_1001bee0
jmp     short loc_1001bf45
test    ebx, ebx
jnz     short loc_1001bf45
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jz      short loc_1001bf65
test    byte ptr [esi+16h], 1
jz      short loc_1001bf10
mov     ebx, 8
jmp     short loc_1001bf45
mov     eax, [edi]
xor     edx, edx
cmp     byte ptr [eax+31h], 2
setz    dl
xor     eax, eax
cmp     ecx, 1
setnle  al
push    edx
push    eax
mov     eax, [esi]
call    sub_100155e0
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     short loc_1001bf45
mov     ebx, esi
call    sub_1001bd20
mov     edi, [ebp+arg_0]
mov     ebx, eax
test    ebx, ebx
jz      short loc_1001bf65
cmp     byte ptr [esi+13h], 0
jnz     short loc_1001bf65
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_1001bf65
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     dword ptr [esi+0ch], 0
cmp     bl, 5
jnz     short loc_1001bfab
cmp     byte ptr [esi+13h], 0
jnz     short loc_1001bfab
mov     edi, [esi+4]
add     edi, 1a4h
jz      short loc_1001bfa8
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_1001bfa8
mov     eax, [edi+8]
test    eax, eax
js      short loc_1001bfa8
mov     edx, [edi+4]
push    eax
push    edx
call    ecx
add     esp, 8
test    eax, eax
jz      short loc_1001bfa1
inc     dword ptr [edi+8]
mov     edi, [ebp+arg_0]
jmp     loc_1001bee0
mov     dword ptr [edi+8], 0ffffffffh
mov     edi, [ebp+arg_0]
test    ebx, ebx
jnz     loc_1001c08c
cmp     [edi+8], bl
jnz     short loc_1001bfd0
inc     dword ptr [esi+28h]
cmp     [edi+9], bl
jz      short loc_1001bfd0
mov     byte ptr [edi+24h], 1
mov     eax, [esi+48h]
lea     ecx, [edi+1ch]
mov     [edi+28h], eax
mov     [esi+48h], ecx
mov     ecx, [ebp+arg_4]
test    ecx, ecx
setnz   al
inc     al
mov     [edi+8], al
cmp     al, [esi+13h]
jbe     short loc_1001bfe5
mov     [esi+13h], al
test    ecx, ecx
jz      loc_1001c08c
mov     edx, [ebp+arg_0]
mov     edi, [esi+0ch]
mov     eax, 0ffdfh
and     [esi+16h], ax
movzx   eax, word ptr [esi+16h]
mov     [esi+4ch], edx
cmp     ecx, 1
jle     short loc_1001c00f
or      eax, 20h
mov     [esi+16h], ax
mov     eax, [edi+38h]
movzx   ecx, byte ptr [eax+1ch]
movzx   edx, byte ptr [eax+1dh]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+1eh]
movzx   eax, byte ptr [eax+1fh]
shl     ecx, 8
or      ecx, edx
shl     ecx, 8
or      ecx, eax
cmp     [esi+2ch], ecx
jz      short loc_1001c069
mov     ecx, [edi+44h]
push    ecx
call    sub_100158a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1001c089
mov     ecx, [esi+2ch]
mov     eax, [edi+38h]
mov     edx, ecx
shr     edx, 18h
mov     [eax+1ch], dl
mov     edx, ecx
shr     edx, 10h
mov     [eax+1dh], dl
mov     edx, ecx
shr     edx, 8
mov     [eax+1eh], dl
mov     [eax+1fh], cl
mov     edi, [ebp+arg_0]
cmp     [ebp+arg_4], 0
jz      short loc_1001c08c
mov     eax, [edi]
mov     ecx, [eax+1d8h]
mov     esi, [esi]
push    ecx
call    sub_100161c0
add     esp, 4
mov     ebx, eax
jmp     short loc_1001c08c
mov     edi, [ebp+arg_0]
cmp     byte ptr [edi+9], 0
jz      short loc_1001c0af
dec     dword ptr [edi+0ch]
jnz     short loc_1001c0af
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_1001c0ab
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 34h
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+34h]
mov     cl, [esi]
mov     edx, [esi+48h]
push    edi
mov     [ebp+var_14], eax
mov     [ebp+var_1], cl
mov     [ebp+var_10], edx
call    sub_1001a850
mov     ebx, eax
mov     [ebp+var_8], ebx
test    ebx, ebx
jnz     loc_1001c222
movzx   ecx, word ptr [esi+10h]
mov     [ebp+var_18], ecx
mov     [ebp+var_c], eax
test    ecx, ecx
jle     loc_1001c1c0
mov     ecx, [esi+40h]
movzx   edi, byte ptr [ecx+eax*2]
movzx   edx, byte ptr [ecx+eax*2+1]
lea     eax, [ecx+eax*2]
movzx   eax, word ptr [esi+12h]
shl     edi, 8
or      edi, edx
and     edi, eax
add     edi, [esi+38h]
test    ebx, ebx
jnz     short loc_1001c173
push    edi
push    esi
lea     eax, [ebp+var_34]
call    sub_10019f70
mov     ax, [ebp+var_1c]
add     esp, 8
test    ax, ax
jz      short loc_1001c173
movzx   ecx, ax
mov     eax, [esi+48h]
add     ecx, edi
lea     edx, [ebp+var_8]
push    edx
movzx   edx, byte ptr [ecx+1]
push    eax
movzx   eax, byte ptr [ecx]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
mov     edx, [esi+34h]
shl     eax, 8
push    3
or      eax, ecx
push    edx
call    sub_10019c10
mov     ebx, [ebp+var_8]
add     esp, 10h
cmp     byte ptr [esi+3], 0
jnz     short loc_1001c1b0
movzx   edx, byte ptr [edi]
mov     ecx, [ebp+var_10]
lea     eax, [ebp+var_8]
push    eax
movzx   eax, byte ptr [edi+1]
push    ecx
movzx   ecx, byte ptr [edi+2]
shl     edx, 8
or      eax, edx
movzx   edx, byte ptr [edi+3]
shl     eax, 8
or      eax, ecx
mov     ecx, [ebp+var_14]
shl     eax, 8
push    5
or      eax, edx
push    ecx
call    sub_10019c10
mov     ebx, [ebp+var_8]
add     esp, 10h
mov     eax, [ebp+var_c]
inc     eax
mov     [ebp+var_c], eax
cmp     eax, [ebp+var_18]
jl      loc_1001c100
cmp     byte ptr [esi+3], 0
jnz     short loc_1001c214
movzx   edx, byte ptr [esi+5]
mov     eax, [esi+38h]
lea     ecx, [edx+eax+8]
mov     eax, [ebp+var_10]
lea     edx, [ebp+var_8]
push    edx
movzx   edx, byte ptr [ecx+1]
push    eax
movzx   eax, byte ptr [ecx]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
mov     edx, [ebp+var_14]
shl     eax, 8
push    5
or      eax, ecx
push    edx
call    sub_10019c10
mov     al, [ebp+var_1]
mov     [esi], al
mov     eax, [ebp+var_8]
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     cl, [ebp+var_1]
mov     [esi], cl
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dl, [ebp+var_1]
pop     edi
mov     [esi], dl
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
cmp     [ebp+arg_8], 4
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
mov     esi, eax
jnz     short loc_1001c2b2
mov     esi, [esi+38h]
movzx   eax, byte ptr [esi]
movzx   ecx, byte ptr [esi+1]
movzx   edx, byte ptr [esi+2]
shl     eax, 8
or      eax, ecx
movzx   ecx, byte ptr [esi+3]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
cmp     eax, [ebp+arg_0]
jz      short loc_1001c28f
push    offset ac0d89d4a975292
push    0c5f6h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, ebx
mov     edx, ebx
shr     eax, 10h
mov     ecx, ebx
shr     edx, 18h
shr     ecx, 8
mov     [esi+1], al
mov     [esi], dl
mov     [esi+2], cl
mov     [esi+3], bl
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dl, [esi]
mov     [ebp+var_1], dl
call    sub_1001a850
movzx   ecx, word ptr [esi+10h]
xor     eax, eax
mov     [ebp+var_c], ecx
mov     [ebp+var_8], eax
test    ecx, ecx
jle     loc_1001c3b0
mov     ecx, [esi+40h]
movzx   edi, byte ptr [ecx+eax*2]
movzx   edx, byte ptr [ecx+eax*2+1]
lea     eax, [ecx+eax*2]
movzx   eax, word ptr [esi+12h]
shl     edi, 8
or      edi, edx
and     edi, eax
add     edi, [esi+38h]
cmp     [ebp+arg_8], 3
jnz     short loc_1001c36f
push    edi
push    esi
lea     eax, [ebp+var_28]
call    sub_10019f70
mov     cx, [ebp+var_10]
add     esp, 8
test    cx, cx
jz      loc_1001c419
movzx   edx, word ptr [esi+12h]
add     edx, [esi+38h]
movzx   eax, cx
add     eax, edi
lea     ebx, [eax+3]
cmp     ebx, edx
ja      loc_1001c416
movzx   edx, byte ptr [eax]
movzx   ebx, byte ptr [eax+1]
shl     edx, 8
or      edx, ebx
movzx   ebx, byte ptr [eax+2]
movzx   eax, byte ptr [eax+3]
shl     edx, 8
or      edx, ebx
mov     ebx, [ebp+arg_4]
shl     edx, 8
or      edx, eax
cmp     [ebp+arg_0], edx
jnz     loc_1001c419
movzx   eax, cx
add     eax, edi
mov     ecx, ebx
shr     ecx, 18h
mov     [eax], cl
mov     edx, ebx
shr     edx, 10h
mov     ecx, ebx
shr     ecx, 8
mov     [eax+1], dl
mov     [eax+2], cl
mov     [eax+3], bl
jmp     short loc_1001c3b0
movzx   edx, byte ptr [edi]
movzx   ecx, byte ptr [edi+1]
movzx   eax, byte ptr [edi+2]
shl     edx, 8
or      ecx, edx
movzx   edx, byte ptr [edi+3]
shl     ecx, 8
or      ecx, eax
shl     ecx, 8
or      ecx, edx
cmp     ecx, [ebp+arg_0]
jnz     loc_1001c419
mov     edx, ebx
mov     eax, ebx
shr     edx, 18h
shr     eax, 10h
mov     ecx, ebx
shr     ecx, 8
mov     [edi], dl
mov     [edi+1], al
mov     [edi+2], cl
mov     [edi+3], bl
mov     edx, [ebp+var_c]
cmp     [ebp+var_8], edx
jnz     short loc_1001c408
cmp     [ebp+arg_8], 5
jnz     short loc_1001c42b
movzx   eax, byte ptr [esi+5]
mov     ecx, [esi+38h]
movzx   edx, byte ptr [eax+ecx+8]
lea     eax, [eax+ecx+8]
movzx   ecx, byte ptr [eax+1]
shl     edx, 8
or      edx, ecx
movzx   ecx, byte ptr [eax+2]
shl     edx, 8
or      edx, ecx
movzx   ecx, byte ptr [eax+3]
shl     edx, 8
or      edx, ecx
cmp     edx, [ebp+arg_0]
jnz     short loc_1001c42b
mov     edx, ebx
shr     edx, 18h
mov     [eax], dl
mov     ecx, ebx
shr     ecx, 10h
mov     edx, ebx
shr     edx, 8
mov     [eax+1], cl
mov     [eax+2], dl
mov     [eax+3], bl
mov     al, [ebp+var_1]
mov     [esi], al
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [ebp+arg_4]
mov     eax, [ebp+var_8]
inc     eax
mov     [ebp+var_8], eax
cmp     eax, [ebp+var_c]
jl      loc_1001c2d0
jmp     short loc_1001c3b0
push    offset ac0d89d4a975292
push    0c618h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     ecx, [ebp+arg_0]
push    esi
mov     esi, eax
mov     eax, [esi+48h]
push    edi
push    edx
mov     [ebp+var_8], eax
mov     eax, [ecx]
push    ebx
push    eax
mov     eax, [esi+44h]
call    sub_10016410
mov     edi, eax
add     esp, 0ch
mov     [ebp+var_4], edi
test    edi, edi
jnz     loc_1001c576
mov     al, byte ptr [ebp+arg_4]
mov     [esi+48h], ebx
cmp     al, 5
jz      short loc_1001c4d3
cmp     al, 1
jz      short loc_1001c4d3
mov     esi, [esi+38h]
movzx   eax, byte ptr [esi]
movzx   ecx, byte ptr [esi+1]
movzx   edx, byte ptr [esi+2]
shl     eax, 8
or      eax, ecx
movzx   ecx, byte ptr [esi+3]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
jz      short loc_1001c4e4
mov     ecx, [ebp+arg_0]
lea     edx, [ebp+var_4]
push    edx
push    ebx
push    4
push    ecx
call    sub_10019c10
mov     edi, [ebp+var_4]
add     esp, 10h
test    edi, edi
jz      short loc_1001c4e4
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, esi
call    sub_1001c0c0
mov     edi, eax
test    edi, edi
jnz     loc_1001c576
cmp     byte ptr [ebp+arg_4], 1
jz      loc_1001c574
mov     ecx, [ebp+arg_8]
mov     esi, [ebp+arg_0]
lea     edx, [ebp+var_4]
push    edx
xor     eax, eax
call    sub_1001ab30
add     esp, 4
test    eax, eax
jnz     short loc_1001c576
mov     esi, [ebp+var_4]
mov     eax, [esi+44h]
push    eax
call    sub_100158a0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_1001c52f
mov     ecx, [esi+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
mov     eax, [ebp+var_8]
push    edx
push    ebx
push    eax
mov     eax, esi
call    sub_1001c230
mov     ecx, [esi+44h]
add     esp, 0ch
mov     edi, eax
push    ecx
mov     [ebp+var_4], edi
call    sub_100154a0
add     esp, 4
test    edi, edi
jnz     short loc_1001c574
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
lea     edx, [ebp+var_4]
push    edx
mov     edx, [ebp+arg_0]
push    eax
push    ecx
push    edx
mov     eax, ebx
call    sub_10019c10
mov     edi, [ebp+var_4]
add     esp, 10h
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     ebx, 2
jnb     short loc_1001c598
xor     ecx, ecx
jmp     short loc_1001c5c5
mov     eax, 0cccccccdh
mul     dword ptr [edi+24h]
mov     esi, edx
shr     esi, 2
xor     edx, edx
inc     esi
lea     eax, [ebx-2]
div     esi
xor     edx, edx
mov     ecx, eax
mov     eax, dword_1008031c
imul    ecx, esi
div     dword ptr [edi+20h]
add     ecx, 2
inc     eax
cmp     ecx, eax
jnz     short loc_1001c5c5
inc     ecx
cmp     ecx, ebx
jz      loc_1001c731
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [edi+20h]
inc     eax
cmp     ebx, eax
jz      loc_1001c731
mov     eax, [edi+0ch]
mov     eax, [eax+38h]
movzx   ecx, byte ptr [eax+24h]
movzx   edx, byte ptr [eax+25h]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+26h]
movzx   eax, byte ptr [eax+27h]
shl     ecx, 8
or      ecx, edx
shl     ecx, 8
or      ecx, eax
jnz     short loc_1001c611
lea     eax, [ecx+65h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp+var_14]
push    ecx
lea     edx, [ebp+var_8]
push    edx
push    ebx
mov     eax, edi
call    sub_10019d60
add     esp, 0ch
test    eax, eax
jnz     loc_1001c975
mov     al, byte ptr [ebp+var_8]
cmp     al, 1
jnz     short loc_1001c644
mov     eax, 0c69fh
call    sub_10071c60
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     al, 2
jnz     short loc_1001c68a
cmp     [ebp+arg_4], 0
jnz     loc_1001c973
push    1
push    ebx
lea     eax, [ebp+var_14]
push    eax
lea     ecx, [ebp+arg_8]
push    ecx
push    edi
call    sub_1001e690
add     esp, 14h
test    eax, eax
jnz     loc_1001c975
mov     eax, [ebp+arg_8]
test    eax, eax
jz      loc_1001c73b
mov     edx, [eax+44h]
push    edx
call    sub_100154a0
add     esp, 4
jmp     loc_1001c73b
lea     eax, [ebp+var_4]
push    eax
xor     eax, eax
mov     ecx, ebx
mov     esi, edi
call    sub_1001ab30
add     esp, 4
test    eax, eax
jnz     loc_1001c975
push    0
push    0
lea     ecx, [ebp+var_c]
push    ecx
lea     edx, [ebp+var_10]
push    edx
push    edi
call    sub_1001e690
mov     esi, eax
add     esp, 14h
test    esi, esi
jnz     loc_1001c75c
mov     eax, [ebp+var_10]
test    eax, eax
jz      short loc_1001c6d6
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_1001c6e2
cmp     [ebp+var_c], eax
ja      short loc_1001c6a4
mov     edx, [ebp+var_4]
mov     eax, [edx+44h]
push    eax
call    sub_100158a0
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_1001c71e
mov     ecx, [ebp+var_14]
mov     eax, [ebp+var_8]
mov     ebx, [ebp+var_c]
xor     edx, edx
cmp     [ebp+arg_4], edx
push    ecx
setnz   dl
push    eax
mov     eax, [ebp+var_4]
push    edi
call    sub_1001c450
mov     ebx, [ebp+arg_8]
mov     edi, [ebp+arg_0]
add     esp, 0ch
mov     esi, eax
mov     ecx, [ebp+var_4]
mov     edx, [ecx+44h]
push    edx
call    sub_100154a0
add     esp, 4
test    esi, esi
jnz     short loc_1001c76f
cmp     [ebp+arg_4], 0
jnz     loc_1001c973
dec     ebx
lea     eax, [ebx-2]
mov     [ebp+var_4], eax
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [edi+20h]
lea     esi, [eax+1]
cmp     ebx, esi
jz      short loc_1001c7a0
cmp     ebx, 2
jnb     short loc_1001c778
xor     eax, eax
jmp     short loc_1001c798
mov     eax, [ebp+var_4]
test    eax, eax
jz      short loc_1001c76f
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 0cccccccdh
mul     dword ptr [edi+24h]
mov     eax, [ebp+var_4]
mov     ecx, edx
shr     ecx, 2
inc     ecx
xor     edx, edx
div     ecx
imul    eax, ecx
add     eax, 2
cmp     eax, esi
jnz     short loc_1001c798
inc     eax
cmp     eax, ebx
jnz     loc_1001c96b
cmp     ebx, 2
jnb     short loc_1001c7a9
xor     eax, eax
jmp     short loc_1001c7c9
mov     eax, 0cccccccdh
mul     dword ptr [edi+24h]
mov     eax, [ebp+var_4]
mov     ecx, edx
shr     ecx, 2
inc     ecx
xor     edx, edx
div     ecx
imul    eax, ecx
add     eax, 2
cmp     eax, esi
jnz     short loc_1001c7c9
inc     eax
cmp     eax, ebx
jnz     loc_1001c93d
mov     esi, [edi]
test    ebx, ebx
jz      loc_1001c946
mov     edi, [esi+28h]
test    edi, edi
jnz     loc_1001c8d8
mov     edi, [esi+0b4h]
lea     ecx, [ebp+arg_8]
push    ecx
push    1
push    ebx
call    sub_10010550
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     loc_1001c8d8
mov     ecx, [ebp+arg_8]
cmp     [ecx+10h], eax
jz      short loc_1001c818
inc     dword ptr [esi+0a0h]
jmp     loc_1001c8f5
mov     [ecx+10h], esi
cmp     ebx, 7fffffffh
ja      short loc_1001c882
mov     eax, dword_1008031c
mov     edi, [esi+80h]
cdq
idiv    edi
inc     eax
cmp     ebx, eax
jz      short loc_1001c882
cmp     byte ptr [esi+0eh], 0
jnz     short loc_1001c862
cmp     [esi+18h], ebx
jb      short loc_1001c862
mov     edx, [esi+3ch]
cmp     dword ptr [edx], 0
jz      short loc_1001c862
inc     dword ptr [esi+0a4h]
mov     eax, ecx
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      loc_1001c8f2
jmp     short loc_1001c8a0
cmp     ebx, [esi+84h]
jbe     short loc_1001c871
mov     edi, 0dh
jmp     short loc_1001c8a3
mov     eax, [ecx+4]
push    edi
push    0
push    eax
call    memset
add     esp, 0ch
jmp     short loc_1001c8f2
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
mov     ecx, [ebp+arg_8]
test    byte ptr [ecx+18h], 2
jz      short loc_1001c8b3
mov     eax, ecx
call    sub_100104b0
mov     ecx, [ebp+arg_8]
mov     eax, [ecx+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [ecx+14h], 1
jnz     short loc_1001c8c6
mov     dword ptr [eax+2ch], 0
mov     ecx, [ecx]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    esi
call    sub_10015290
add     esp, 4
mov     [ebp+arg_8], 0
mov     eax, edi
test    edi, edi
jnz     loc_1001c975
mov     ecx, [ebp+arg_8]
mov     edi, [ecx+8]
mov     eax, [ecx+4]
cmp     ebx, 1
setnz   dl
mov     [edi+44h], ecx
mov     ecx, [ebp+arg_0]
dec     dl
and     dl, 64h
mov     [edi+38h], eax
mov     [edi+34h], ecx
mov     [edi+48h], ebx
mov     [edi+5], dl
mov     eax, [edi+44h]
push    eax
call    sub_100158a0
mov     ecx, [edi+44h]
add     esp, 4
push    ecx
mov     esi, eax
call    sub_100154a0
add     esp, 4
test    esi, esi
jnz     loc_1001c76f
mov     edi, [ebp+arg_0]
dec     ebx
dec     [ebp+var_4]
jmp     loc_1001c742
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [edi]
mov     [edx+18h], ebx
mov     [edi+2ch], ebx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
push    esi
mov     esi, [ebx+4]
push    edi
mov     edi, ebx
call    sub_10019320
cmp     byte ptr [esi+11h], 0
jnz     short loc_1001c99a
mov     edi, 65h
jmp     short loc_1001ca05
mov     edi, [esi+8]
test    edi, edi
jz      short loc_1001c9bb
mov     eax, [edi+14h]
push    eax
call    sub_10009770
mov     dword ptr [edi+14h], 0
mov     edi, [edi+8]
add     esp, 4
test    edi, edi
jnz     short loc_1001c9a1
mov     eax, [esi+2ch]
push    eax
push    0
push    esi
call    sub_1001c580
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     short loc_1001ca05
mov     ecx, [esi+0ch]
mov     edx, [ecx+44h]
push    edx
call    sub_100158a0
mov     ecx, [esi+2ch]
mov     edi, eax
mov     eax, [esi+0ch]
mov     eax, [eax+38h]
mov     edx, ecx
shr     edx, 18h
mov     [eax+1ch], dl
mov     edx, ecx
shr     edx, 10h
mov     [eax+1dh], dl
mov     edx, ecx
add     esp, 4
shr     edx, 8
mov     [eax+1eh], dl
mov     [eax+1fh], cl
cmp     byte ptr [ebx+9], 0
jz      short loc_1001ca28
dec     dword ptr [ebx+0ch]
jnz     short loc_1001ca28
mov     eax, [ebx+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001ca24
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [ebx+0ah], 0
mov     eax, edi
pop     edi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, eax
mov     ebx, [edi+8]
mov     eax, [edi]
xor     esi, esi
mov     [ebp+var_4], esi
mov     [ebp+var_10], eax
cmp     ebx, esi
jz      short loc_1001ca66
lea     esp, [esp+0]
mov     ecx, [ebx+14h]
push    ecx
call    sub_10009770
mov     [ebx+14h], esi
mov     ebx, [ebx+8]
add     esp, 4
cmp     ebx, esi
jnz     short loc_1001ca50
cmp     byte ptr [edi+12h], 0
jnz     loc_1001cc15
mov     ebx, [edi+2ch]
cmp     ebx, 2
jnb     short loc_1001ca7c
xor     ecx, ecx
jmp     short loc_1001caa9
mov     eax, 0cccccccdh
mul     dword ptr [edi+24h]
mov     esi, edx
shr     esi, 2
xor     edx, edx
inc     esi
lea     eax, [ebx-2]
div     esi
xor     edx, edx
mov     ecx, eax
mov     eax, dword_1008031c
imul    ecx, esi
div     dword ptr [edi+20h]
add     ecx, 2
inc     eax
cmp     ecx, eax
jnz     short loc_1001caa9
inc     ecx
cmp     ecx, ebx
jz      loc_1001cc1f
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [edi+20h]
inc     eax
mov     [ebp+var_8], eax
cmp     ebx, eax
jz      loc_1001cc1f
mov     edx, [edi+0ch]
mov     eax, [edx+38h]
movzx   esi, byte ptr [eax+24h]
movzx   ecx, byte ptr [eax+25h]
movzx   edx, byte ptr [eax+26h]
movzx   eax, byte ptr [eax+27h]
shl     esi, 8
or      esi, ecx
shl     esi, 8
or      esi, edx
shl     esi, 8
or      esi, eax
mov     eax, 0cccccccdh
mul     dword ptr [edi+24h]
shr     edx, 2
mov     ecx, ebx
mov     [ebp+var_c], edx
call    sub_10019bd0
mov     ecx, [ebp+var_c]
lea     edx, [esi+eax]
mov     eax, ecx
sub     eax, ebx
add     eax, edx
xor     edx, edx
div     ecx
mov     ecx, [ebp+var_8]
sub     ebx, eax
sub     ebx, esi
cmp     [edi+2ch], ecx
jbe     short loc_1001cb22
cmp     ebx, ecx
jnb     short loc_1001cb22
dec     ebx
cmp     ebx, 2
jnb     short loc_1001cb2b
xor     eax, eax
jmp     short loc_1001cb45
mov     ecx, [ebp+var_c]
inc     ecx
xor     edx, edx
lea     eax, [ebx-2]
div     ecx
imul    eax, ecx
add     eax, 2
cmp     eax, [ebp+var_8]
jnz     short loc_1001cb42
inc     eax
mov     ecx, [ebp+var_8]
cmp     eax, ebx
jz      short loc_1001cb21
cmp     ebx, ecx
jz      short loc_1001cb21
mov     eax, [edi+2ch]
cmp     ebx, eax
jbe     short loc_1001cb79
push    offset ac0d89d4a975292
push    0c737h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_8], eax
cmp     eax, ebx
jbe     short loc_1001cbae
cmp     [ebp+var_4], 0
jnz     short loc_1001cba2
mov     eax, [ebp+var_8]
push    eax
push    ebx
push    edi
call    sub_1001c580
mov     [ebp+var_4], eax
mov     eax, [ebp+var_8]
dec     eax
add     esp, 0ch
mov     [ebp+var_8], eax
cmp     eax, ebx
ja      short loc_1001cb80
mov     eax, [ebp+var_4]
cmp     eax, 65h
jz      short loc_1001cbae
test    eax, eax
jnz     short loc_1001cc0d
test    esi, esi
jz      short loc_1001cc07
mov     ecx, [edi+0ch]
mov     edx, [ecx+44h]
push    edx
call    sub_100158a0
mov     [ebp+var_4], eax
mov     eax, [edi+0ch]
mov     eax, [eax+38h]
mov     dword ptr [eax+20h], 0
mov     ecx, [edi+0ch]
mov     eax, [ecx+38h]
mov     dword ptr [eax+24h], 0
mov     edx, [edi+0ch]
mov     eax, [edx+38h]
mov     ecx, ebx
shr     ecx, 18h
mov     [eax+1ch], cl
mov     edx, ebx
shr     edx, 10h
mov     ecx, ebx
add     esp, 4
mov     [eax+1dh], dl
shr     ecx, 8
mov     [eax+1eh], cl
mov     [eax+1fh], bl
mov     edx, [edi]
mov     [edx+18h], ebx
mov     [edi+2ch], ebx
cmp     [ebp+var_4], 0
jz      short loc_1001cc15
mov     eax, [ebp+var_10]
call    sub_10016100
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0c72ah
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, eax
xor     esi, esi
cmp     byte ptr [edi+8], 2
jnz     short loc_1001ccda
mov     esi, [edi+4]
call    sub_10019320
cmp     byte ptr [esi+11h], 0
jz      short loc_1001cca5
mov     eax, esi
call    sub_1001ca30
mov     ebx, eax
test    ebx, ebx
jz      short loc_1001cca5
cmp     byte ptr [edi+9], 0
jz      short loc_1001cc9e
dec     dword ptr [edi+0ch]
jnz     short loc_1001cc9e
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001cc9a
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     ecx, [ebp+arg_0]
mov     eax, [esi]
push    0
push    ecx
call    sub_10015d90
add     esp, 8
cmp     byte ptr [edi+9], 0
mov     esi, eax
jz      short loc_1001ccda
dec     dword ptr [edi+0ch]
jnz     short loc_1001ccda
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_1001ccd6
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn
push    ecx
push    ebx
push    esi
mov     esi, [edi+4]
push    esi
call    sub_10019840
mov     al, [edi+8]
xor     ebx, ebx
add     esp, 4
cmp     al, bl
jbe     short loc_1001cd43
mov     edx, [edi]
mov     ecx, 1
cmp     [edx+7ch], ecx
jle     short loc_1001cd41
mov     eax, [edi+4]
cmp     [eax+4ch], edi
jnz     short loc_1001cd3a
mov     edx, 0ff9fh
and     [eax+16h], dx
mov     [eax+4ch], ebx
mov     eax, [eax+48h]
cmp     eax, ebx
jz      short loc_1001cd3a
nop
mov     [eax+8], cl
mov     eax, [eax+0ch]
cmp     eax, ebx
jnz     short loc_1001cd30
mov     [edi+8], cl
pop     esi
pop     ebx
pop     ecx
retn
cmp     al, bl
jz      short loc_1001cd56
push    edi
call    sub_100196d0
add     esp, 4
dec     dword ptr [esi+28h]
jnz     short loc_1001cd56
mov     [esi+13h], bl
mov     [edi+8], bl
cmp     [esi+13h], bl
jnz     short loc_1001cd74
mov     eax, [esi+0ch]
cmp     eax, ebx
jz      short loc_1001cd74
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     [esi+0ch], ebx
pop     esi
pop     ebx
pop     ecx
retn
push    ebx
push    esi
push    edi
mov     edi, eax
call    sub_10019320
push    0
mov     eax, edi
call    sub_1001cc50
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_1001cdf5
cmp     [edi+8], al
jz      short loc_1001cdf3
call    sub_10019320
cmp     byte ptr [edi+8], 2
jnz     short loc_1001cdcb
mov     esi, [edi+4]
mov     eax, [esi]
call    sub_100160b0
mov     ebx, eax
test    ebx, ebx
jz      short loc_1001cdc7
mov     esi, edi
call    sub_100193e0
mov     esi, ebx
jmp     short loc_1001cdf5
mov     byte ptr [esi+13h], 1
call    sub_1001ccf0
cmp     byte ptr [edi+9], 0
jz      short loc_1001cdf3
dec     dword ptr [edi+0ch]
jnz     short loc_1001cdf3
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001cdef
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
xor     esi, esi
cmp     byte ptr [edi+9], 0
jz      short loc_1001ce18
dec     dword ptr [edi+0ch]
jnz     short loc_1001ce18
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1001ce14
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      loc_1001cec1
call    sub_10019320
mov     eax, [edi+4]
mov     esi, [eax+8]
test    esi, esi
jz      short loc_1001ce9e
mov     ecx, [esi+48h]
push    ecx
call    sub_10009770
mov     edx, [ebp+arg_4]
xor     ebx, ebx
xor     eax, eax
add     esp, 4
mov     [esi+48h], ebx
mov     byte ptr [esi+53h], 3
mov     [esi+4ch], edx
cmp     ax, [esi+56h]
jg      short loc_1001ce94
lea     edi, [esi+80h]
lea     ebx, [ebx+0]
mov     eax, [edi]
test    eax, eax
jz      short loc_1001ce82
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     dword ptr [edi], 0
movsx   edx, word ptr [esi+56h]
inc     ebx
add     edi, 4
cmp     ebx, edx
jle     short loc_1001ce70
mov     esi, [esi+8]
test    esi, esi
jnz     short loc_1001ce41
mov     edi, [ebp+arg_0]
cmp     byte ptr [edi+9], 0
jz      short loc_1001cec1
dec     dword ptr [edi+0ch]
jnz     short loc_1001cec1
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001cebd
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, [edi+4]
mov     esi, eax
mov     [ebp+var_8], ebx
call    sub_10019320
test    esi, esi
jnz     short loc_1001cf1e
mov     esi, [ebx+8]
test    esi, esi
jz      short loc_1001cf0c
cmp     byte ptr [esi+53h], 1
jnz     short loc_1001cf05
mov     eax, esi
call    sub_100198a0
test    eax, eax
jnz     short loc_1001cf15
mov     esi, [esi+8]
test    esi, esi
jnz     short loc_1001cef4
xor     esi, esi
mov     ebx, esi
mov     [ebp+var_4], ebx
jmp     short loc_1001cf28
mov     esi, eax
mov     ebx, esi
mov     [ebp+var_4], ebx
jmp     short loc_1001cf28
mov     [ebp+var_4], 0
mov     ebx, [ebp+var_4]
test    esi, esi
jz      short loc_1001cf36
push    esi
push    edi
call    sub_1001ce20
add     esp, 8
cmp     byte ptr [edi+8], 2
jnz     loc_1001d0bb
mov     esi, [ebp+var_8]
mov     eax, [esi]
call    sub_10016100
test    eax, eax
jz      short loc_1001cf51
mov     [ebp+var_4], eax
mov     ebx, [esi]
mov     edi, [ebx+28h]
test    edi, edi
jnz     loc_1001d03a
mov     edi, [ebx+0b4h]
lea     eax, [ebp+var_c]
push    eax
push    1
push    1
call    sub_10010550
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     loc_1001d03a
mov     esi, [ebp+var_c]
cmp     [esi+10h], eax
jz      short loc_1001cf91
inc     dword ptr [ebx+0a0h]
jmp     loc_1001d049
mov     eax, dword_1008031c
cdq
mov     [esi+10h], ebx
mov     ecx, [ebx+80h]
idiv    ecx
mov     edx, eax
mov     eax, 1
add     edx, eax
cmp     edx, eax
jnz     short loc_1001cfcf
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
jmp     short loc_1001d008
cmp     byte ptr [ebx+0eh], 0
jnz     short loc_1001cff7
cmp     [ebx+18h], eax
jb      short loc_1001cff7
mov     edx, [ebx+3ch]
cmp     dword ptr [edx], 0
jz      short loc_1001cff7
add     [ebx+0a4h], eax
mov     eax, esi
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      short loc_1001d049
jmp     short loc_1001d008
cmp     [ebx+84h], eax
jnb     loc_1001d09d
mov     edi, 0dh
test    byte ptr [esi+18h], 2
jz      short loc_1001d015
mov     eax, esi
call    sub_100104b0
mov     eax, [esi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [esi+14h], 1
jnz     short loc_1001d028
mov     dword ptr [eax+2ch], 0
mov     ecx, [esi]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    ebx
call    sub_10015290
add     esp, 4
xor     esi, esi
test    edi, edi
jnz     short loc_1001d0ae
mov     edx, [esi+4]
mov     ecx, [esi+8]
mov     [ecx+44h], esi
mov     esi, [ebp+var_8]
mov     [ecx+38h], edx
mov     [ecx+34h], esi
mov     dword ptr [ecx+48h], 1
mov     byte ptr [ecx+5], 64h
movzx   eax, byte ptr [edx+1ch]
movzx   edi, byte ptr [edx+1dh]
shl     eax, 8
or      eax, edi
movzx   edi, byte ptr [edx+1eh]
movzx   edx, byte ptr [edx+1fh]
shl     eax, 8
or      eax, edi
shl     eax, 8
or      eax, edx
jnz     short loc_1001d08c
mov     eax, [esi]
mov     eax, [eax+18h]
mov     [esi+2ch], eax
mov     ecx, [ecx+44h]
push    ecx
call    sub_100154a0
add     esp, 4
jmp     short loc_1001d0b1
mov     eax, [esi+4]
push    ecx
push    0
push    eax
call    memset
add     esp, 0ch
jmp     short loc_1001d049
mov     esi, [ebp+var_8]
mov     edi, [ebp+arg_0]
mov     ebx, [ebp+var_4]
mov     byte ptr [esi+13h], 1
call    sub_1001ccf0
cmp     byte ptr [edi+9], 0
jz      short loc_1001d0e3
dec     dword ptr [edi+0ch]
jnz     short loc_1001d0e3
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_1001d0df
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+4]
call    sub_10019320
mov     eax, [ebp+arg_0]
mov     esi, [esi]
push    eax
call    sub_100161c0
add     esp, 4
cmp     byte ptr [edi+9], 0
mov     esi, eax
jz      short loc_1001d135
dec     dword ptr [edi+0ch]
jnz     short loc_1001d135
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1001d12f
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, esi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, eax
xor     eax, eax
test    edi, edi
jz      loc_1001d1df
cmp     byte ptr [edi+8], 2
jnz     loc_1001d1df
mov     ebx, [edi+4]
call    sub_10019320
mov     eax, [ebp+arg_0]
mov     ecx, [ebx]
mov     edx, [ebp+arg_4]
push    eax
push    ecx
call    sub_100162f0
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     short loc_1001d1ba
cmp     [ebp+arg_4], eax
jge     short loc_1001d18b
test    byte ptr [ebx+16h], 8
jz      short loc_1001d18b
mov     [ebx+2ch], eax
call    sub_1001bd20
mov     edx, [ebx+0ch]
mov     esi, eax
mov     eax, [edx+38h]
movzx   ecx, byte ptr [eax+1ch]
movzx   edx, byte ptr [eax+1dh]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+1eh]
movzx   eax, byte ptr [eax+1fh]
shl     ecx, 8
or      ecx, edx
shl     ecx, 8
or      ecx, eax
mov     [ebx+2ch], ecx
cmp     byte ptr [edi+9], 0
jz      short loc_1001d1dd
dec     dword ptr [edi+0ch]
jnz     short loc_1001d1dd
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1001d1d9
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, ecx
mov     esi, eax
call    sub_10019320
mov     ecx, [ebp+arg_0]
mov     eax, [edi+4]
test    ebx, ebx
jz      short loc_1001d215
test    byte ptr [eax+16h], 1
jz      short loc_1001d215
mov     esi, 8
jmp     short loc_1001d257
cmp     ecx, 1
jnz     short loc_1001d222
cmp     dword ptr [eax+2ch], 0
jnz     short loc_1001d222
xor     ecx, ecx
mov     edx, [ebp+arg_4]
mov     [esi+18h], ecx
or      ecx, 0ffffffffh
mov     [esi+10h], edx
mov     [esi+56h], cx
mov     [esi], edi
mov     [esi+4], eax
mov     [esi+50h], bl
mov     ecx, [eax+8]
xor     edx, edx
mov     [esi+8], ecx
cmp     ecx, edx
jz      short loc_1001d249
mov     [ecx+0ch], esi
mov     [eax+8], esi
mov     [esi+53h], dl
mov     [esi+1ch], edx
mov     [esi+20h], edx
xor     esi, esi
cmp     byte ptr [edi+9], 0
jz      short loc_1001d27a
dec     dword ptr [edi+0ch]
jnz     short loc_1001d27a
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001d276
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [esi+4]
mov     eax, [eax+8]
test    eax, eax
jz      short loc_1001d2aa
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    edi
mov     edi, [eax+18h]
cmp     edi, [esi+18h]
jnz     short loc_1001d2a2
mov     [eax+1ch], edx
mov     [eax+20h], ecx
mov     eax, [eax+8]
test    eax, eax
jnz     short loc_1001d294
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [esi]
push    edi
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      loc_1001d39d
mov     eax, [esi+4]
mov     edi, ebx
mov     [ebp+var_4], eax
call    sub_10019320
mov     ecx, [esi+48h]
push    ecx
call    sub_10009770
mov     eax, [esi+0ch]
xor     edi, edi
add     esp, 4
mov     [esi+48h], edi
mov     byte ptr [esi+53h], 0
cmp     eax, edi
jz      short loc_1001d2f6
mov     edx, [esi+8]
mov     [eax+8], edx
jmp     short loc_1001d2ff
mov     eax, [esi+8]
mov     ecx, [ebp+var_4]
mov     [ecx+8], eax
mov     eax, [esi+8]
cmp     eax, edi
jz      short loc_1001d30c
mov     edx, [esi+0ch]
mov     [eax+0ch], edx
xor     eax, eax
cmp     ax, [esi+56h]
jg      short loc_1001d341
lea     ebx, [esi+80h]
lea     ebx, [ebx+0]
mov     eax, [ebx]
test    eax, eax
jz      short loc_1001d332
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
movsx   edx, word ptr [esi+56h]
inc     edi
add     ebx, 4
cmp     edi, edx
jle     short loc_1001d320
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_4]
cmp     byte ptr [eax+13h], 0
jnz     short loc_1001d367
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1001d367
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
mov     ecx, [ebp+var_4]
add     esp, 4
mov     dword ptr [ecx+0ch], 0
mov     edx, [esi+14h]
push    edx
call    sub_10009770
add     esp, 4
mov     dword ptr [esi+14h], 0
cmp     byte ptr [ebx+9], 0
jz      short loc_1001d39d
dec     dword ptr [ebx+0ch]
jnz     short loc_1001d39d
mov     eax, [ebx+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1001d399
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [ebx+0ah], 0
pop     edi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi+53h], 1
jz      short loc_1001d3c6
mov     dword ptr [edi], 0
mov     dword ptr [edi+4], 0
xor     eax, eax
retn
cmp     word ptr [esi+3eh], 0
jnz     short loc_1001d40c
movsx   eax, word ptr [esi+56h]
mov     ecx, [esi+eax*4+80h]
movzx   edx, word ptr [esi+eax*2+58h]
mov     eax, [ecx+40h]
push    ebx
movzx   ebx, byte ptr [eax+edx*2]
lea     edx, [eax+edx*2]
movzx   edx, byte ptr [edx+1]
shl     ebx, 8
or      ebx, edx
movzx   edx, word ptr [ecx+12h]
and     ebx, edx
add     ebx, [ecx+38h]
lea     eax, [esi+24h]
push    ebx
push    ecx
call    sub_10019f70
add     esp, 8
mov     byte ptr [esi+52h], 1
pop     ebx
mov     eax, [esi+24h]
mov     [edi], eax
mov     ecx, [esi+28h]
mov     [edi+4], ecx
xor     eax, eax
retn
push    ebp
mov     ebp, esp
cmp     word ptr [esi+3eh], 0
jnz     short loc_1001d468
movsx   eax, word ptr [esi+56h]
mov     ecx, [esi+eax*4+80h]
movzx   edx, word ptr [esi+eax*2+58h]
mov     eax, [ecx+40h]
lea     edx, [eax+edx*2]
push    edi
movzx   edi, byte ptr [edx+1]
movzx   edx, byte ptr [edx]
shl     edx, 8
or      edi, edx
movzx   edx, word ptr [ecx+12h]
and     edi, edx
add     edi, [ecx+38h]
lea     eax, [esi+24h]
push    edi
push    ecx
call    sub_10019f70
add     esp, 8
mov     byte ptr [esi+52h], 1
pop     edi
mov     eax, [esi+30h]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
xor     eax, eax
push    edi
mov     edi, [ebp+arg_0]
mov     [ebp+var_c], eax
mov     [ebp+var_10], eax
cmp     [edi+11h], al
jz      loc_1001d538
mov     ebx, [ebp+arg_4]
inc     ebx
lea     eax, [ebx-2]
mov     [ebp+var_8], eax
cmp     ebx, 2
jnb     short loc_1001d4b0
xor     ecx, ecx
jmp     short loc_1001d4e2
mov     eax, 0cccccccdh
mul     dword ptr [edi+24h]
mov     eax, [ebp+var_8]
mov     esi, edx
shr     esi, 2
inc     esi
xor     edx, edx
div     esi
xor     edx, edx
mov     ecx, eax
mov     eax, dword_1008031c
imul    ecx, esi
mov     esi, [ebp+arg_0]
div     dword ptr [esi+20h]
add     ecx, 2
inc     eax
cmp     ecx, eax
jnz     short loc_1001d4e0
inc     ecx
mov     edi, esi
cmp     ecx, ebx
jz      short loc_1001d4f5
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [edi+20h]
inc     eax
cmp     ebx, eax
jnz     short loc_1001d4fb
inc     ebx
inc     [ebp+var_8]
jmp     short loc_1001d4a7
cmp     ebx, [edi+2ch]
ja      short loc_1001d538
lea     ecx, [ebp+var_8]
push    ecx
lea     edx, [ebp+var_1]
push    edx
push    ebx
mov     eax, edi
call    sub_10019d60
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     loc_1001d5ed
cmp     [ebp+var_1], 4
jnz     short loc_1001d538
mov     eax, [ebp+arg_4]
cmp     [ebp+var_8], eax
jnz     short loc_1001d538
mov     [ebp+var_c], ebx
mov     esi, 65h
jmp     loc_1001d5ed
mov     eax, [ebp+arg_4]
mov     ebx, [edi]
test    eax, eax
jnz     short loc_1001d566
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
mov     edi, 0bh
add     esp, 10h
mov     esi, edi
jmp     loc_1001d5ed
mov     edi, [ebx+28h]
test    edi, edi
jnz     loc_1001d6d5
mov     edi, [ebx+0b4h]
lea     ecx, [ebp+var_8]
push    ecx
push    1
push    eax
call    sub_10010550
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     loc_1001d6d5
mov     esi, [ebp+var_8]
cmp     [esi+10h], eax
jz      short loc_1001d615
inc     dword ptr [ebx+0a0h]
mov     eax, [esi+8]
mov     ecx, [esi+4]
mov     edx, [ebp+arg_0]
mov     [eax+38h], ecx
mov     ecx, [ebp+arg_4]
mov     [eax+48h], ecx
cmp     ecx, 1
setnz   cl
dec     cl
and     cl, 64h
mov     [eax+5], cl
mov     [eax+44h], esi
mov     [eax+34h], edx
mov     [ebp+var_10], eax
mov     eax, [eax+38h]
movzx   edx, byte ptr [eax]
movzx   ecx, byte ptr [eax+1]
shl     edx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+2]
movzx   eax, byte ptr [eax+3]
shl     ecx, 8
or      ecx, edx
shl     ecx, 8
xor     esi, esi
or      ecx, eax
mov     [ebp+var_c], ecx
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+var_c]
mov     [ecx], edx
test    eax, eax
jz      loc_1001d6ef
mov     ecx, [ebp+var_10]
mov     [eax], ecx
lea     eax, [esi-65h]
neg     eax
sbb     eax, eax
and     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_4]
mov     [esi+10h], ebx
cmp     ecx, 7fffffffh
ja      short loc_1001d685
mov     eax, dword_1008031c
mov     edi, [ebx+80h]
cdq
idiv    edi
inc     eax
cmp     ecx, eax
jz      short loc_1001d685
cmp     byte ptr [ebx+0eh], 0
jnz     short loc_1001d662
cmp     [ebx+18h], ecx
jb      short loc_1001d662
mov     edx, [ebx+3ch]
cmp     dword ptr [edx], 0
jz      short loc_1001d662
inc     dword ptr [ebx+0a4h]
mov     eax, esi
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      loc_1001d59e
jmp     short loc_1001d6a3
cmp     ecx, [ebx+84h]
jbe     short loc_1001d671
mov     edi, 0dh
jmp     short loc_1001d6a3
mov     eax, [esi+4]
push    edi
push    0
push    eax
call    memset
add     esp, 0ch
jmp     loc_1001d59e
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
test    byte ptr [esi+18h], 2
jz      short loc_1001d6b0
mov     eax, esi
call    sub_100104b0
mov     eax, [esi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [esi+14h], 1
jnz     short loc_1001d6c3
mov     dword ptr [eax+2ch], 0
mov     ecx, [esi]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    ebx
call    sub_10015290
add     esp, 4
xor     esi, esi
test    edi, edi
jz      loc_1001d59e
mov     esi, edi
jmp     loc_1001d5ed
mov     eax, [ebp+var_10]
test    eax, eax
jz      short loc_1001d702
mov     edx, [eax+44h]
push    edx
call    sub_100154a0
add     esp, 4
lea     eax, [esi-65h]
neg     eax
sbb     eax, eax
pop     edi
and     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    eax
call    sub_100158a0
add     esp, 4
test    eax, eax
jnz     short loc_1001d746
mov     ecx, [ebp+size]
mov     edx, [ebp+src]
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    eax
call    memcpy
add     esp, 0ch
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
movsx   eax, word ptr [esi+56h]
mov     ebx, [esi+eax*4+80h]
mov     edx, [esi+4]
xor     ecx, ecx
push    edi
mov     [ebp+var_4], ecx
mov     [ebp+var_18], ecx
mov     [ebp+var_10], ebx
mov     [ebp+var_c], edx
cmp     [esi+3eh], cx
jnz     short loc_1001d7b4
movzx   edx, word ptr [esi+eax*2+58h]
mov     ecx, ebx
mov     eax, [ecx+40h]
movzx   edi, byte ptr [eax+edx*2+1]
lea     edx, [eax+edx*2]
movzx   edx, byte ptr [edx]
shl     edx, 8
or      edi, edx
movzx   edx, word ptr [ecx+12h]
and     edi, edx
add     edi, [ecx+38h]
lea     eax, [esi+24h]
push    edi
push    ecx
call    sub_10019f70
add     esp, 8
mov     byte ptr [esi+52h], 1
xor     ecx, ecx
movzx   edi, word ptr [esi+38h]
add     edi, [esi+2ch]
cmp     byte ptr [ebx+2], 0
jz      short loc_1001d7c6
mov     [ebp+var_14], ecx
jmp     short loc_1001d7cc
mov     eax, [esi+24h]
mov     [ebp+var_14], eax
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+size]
lea     eax, [ecx+edx]
mov     edx, [esi+30h]
add     edx, [ebp+var_14]
mov     [ebp+arg_4], eax
cmp     eax, edx
ja      loc_1001da47
mov     edx, [ebx+38h]
movzx   eax, word ptr [esi+3ah]
mov     ebx, [ebp+var_c]
add     edx, [ebx+24h]
lea     ebx, [eax+edi]
cmp     ebx, edx
ja      loc_1001da47
cmp     ecx, eax
jnb     loc_1001d95e
mov     ebx, [ebp+size]
cmp     [ebp+arg_4], eax
jbe     short loc_1001d812
sub     eax, ecx
mov     ebx, eax
mov     eax, [ebp+var_10]
mov     eax, [eax+44h]
add     ecx, edi
cmp     [ebp+arg_10], 0
mov     [ebp+arg_4], ecx
jz      short loc_1001d840
push    eax
call    sub_100158a0
add     esp, 4
test    eax, eax
jz      short loc_1001d835
mov     [ebp+var_4], eax
jmp     short loc_1001d855
mov     ecx, [ebp+src]
mov     edx, [ebp+arg_4]
push    ebx
push    ecx
push    edx
jmp     short loc_1001d846
mov     eax, [ebp+src]
push    ebx
push    ecx
push    eax
call    memcpy
add     esp, 0ch
mov     [ebp+var_4], 0
add     [ebp+src], ebx
sub     [ebp+size], ebx
cmp     [ebp+var_4], 0
mov     [ebp+arg_4], 0
jnz     loc_1001da27
cmp     [ebp+size], 0
jbe     loc_1001da27
movzx   eax, word ptr [esi+3ah]
movzx   ebx, byte ptr [eax+edi]
movzx   edx, byte ptr [eax+edi+1]
mov     ecx, [ebp+var_c]
mov     ecx, [ecx+24h]
shl     ebx, 8
or      ebx, edx
movzx   edx, byte ptr [eax+edi+2]
shl     ebx, 8
or      ebx, edx
movzx   edx, byte ptr [eax+edi+3]
shl     ebx, 8
sub     ecx, 4
or      ebx, edx
cmp     byte ptr [esi+54h], 0
mov     [ebp+var_10], ecx
mov     [ebp+var_8], ebx
jz      short loc_1001d8ea
cmp     dword ptr [esi+14h], 0
jnz     short loc_1001d8ea
mov     edx, [esi+34h]
sub     edx, eax
lea     eax, [edx+ecx-1]
xor     edx, edx
div     ecx
lea     edi, ds:0[eax*4]
mov     [ebp+var_14], eax
call    sub_10009a00
cmp     [ebp+var_14], 0
mov     [esi+14h], eax
jz      short loc_1001d8e7
test    eax, eax
jnz     short loc_1001d8e7
mov     [ebp+var_4], 7
mov     ecx, [ebp+var_10]
mov     edi, [esi+14h]
test    edi, edi
jz      short loc_1001d90a
mov     eax, [ebp+arg_4]
xor     edx, edx
div     ecx
cmp     dword ptr [edi+eax*4], 0
jz      short loc_1001d90a
mov     ebx, [edi+eax*4]
mov     [ebp+var_18], eax
mov     [ebp+var_8], ebx
mov     [ebp+arg_4], edx
cmp     [ebp+var_4], 0
jnz     loc_1001da27
mov     edx, [ebp+var_18]
add     edx, edx
add     edx, edx
mov     [ebp+var_18], edx
mov     edi, edi
mov     edi, [ebp+size]
test    edi, edi
jz      loc_1001da31
test    ebx, ebx
jz      loc_1001da31
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_1001d93d
mov     [edx+eax], ebx
cmp     [ebp+arg_4], ecx
jb      short loc_1001d98c
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_1001d968
mov     eax, [edx+eax+4]
test    eax, eax
jz      short loc_1001d968
sub     [ebp+arg_4], ecx
mov     ebx, eax
mov     [ebp+var_8], ebx
jmp     loc_1001da14
sub     ecx, eax
mov     [ebp+arg_4], ecx
jmp     loc_1001d86c
mov     ecx, [ebp+var_c]
lea     eax, [ebp+var_8]
push    eax
push    0
push    ebx
push    ecx
call    sub_1001d480
mov     ecx, [ebp+var_10]
mov     ebx, [ebp+var_8]
add     esp, 10h
sub     [ebp+arg_4], ecx
mov     [ebp+var_4], eax
jmp     loc_1001da14
mov     edx, [ebp+size]
mov     eax, [ebp+arg_4]
add     edx, eax
cmp     edx, ecx
jbe     short loc_1001d99c
mov     edi, ecx
sub     edi, eax
mov     ecx, [ebp+var_c]
lea     eax, [ebp+var_14]
push    0
push    eax
mov     eax, [ecx]
call    sub_10015300
add     esp, 8
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_1001da0b
mov     edx, [ebp+var_14]
mov     esi, [edx+4]
mov     ecx, esi
call    sub_1000c8a0
mov     ebx, eax
mov     eax, [ebp+arg_4]
lea     eax, [esi+eax+4]
xor     esi, esi
mov     [ebp+var_8], ebx
push    edi
cmp     [ebp+arg_10], esi
jz      short loc_1001d9e9
mov     ecx, [ebp+src]
push    ecx
push    eax
mov     eax, [ebp+var_14]
call    sub_1001d720
mov     [ebp+var_4], eax
jmp     short loc_1001d9f6
mov     edx, [ebp+src]
push    eax
push    edx
call    memcpy
mov     [ebp+var_4], esi
mov     eax, [ebp+var_14]
add     esp, 0ch
push    eax
call    sub_100154a0
mov     [ebp+arg_4], esi
mov     esi, [ebp+arg_0]
add     esp, 4
sub     [ebp+size], edi
add     [ebp+src], edi
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_18]
add     edx, 4
cmp     [ebp+var_4], 0
mov     [ebp+var_18], edx
jz      loc_1001d920
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+var_4], 0
jnz     short loc_1001da27
test    edi, edi
jz      short loc_1001da27
push    offset ac0d89d4a975292
push    0cae2h
jmp     short loc_1001da51
push    offset ac0d89d4a975292
push    0ca5ch
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+arg_0]
mov     al, [esi+53h]
test    al, al
jnz     short loc_1001da88
mov     eax, 4
pop     esi
pop     ecx
pop     ebp
retn
cmp     al, 2
jb      short loc_1001da97
mov     eax, esi
call    sub_10019ad0
test    eax, eax
jnz     short loc_1001daae
mov     eax, [ebp+src]
mov     ecx, [ebp+size]
mov     edx, [ebp+arg_4]
push    0
push    eax
push    ecx
push    edx
push    esi
call    sub_1001d750
add     esp, 14h
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
xor     eax, eax
cmp     byte ptr [esi+53h], 1
jnz     short loc_1001db1b
cmp     [esi+3eh], ax
jnz     short loc_1001db0b
movsx   eax, word ptr [esi+56h]
mov     ecx, [esi+eax*4+80h]
movzx   edx, word ptr [esi+eax*2+58h]
mov     eax, [ecx+40h]
lea     edx, [eax+edx*2]
push    edi
movzx   edi, byte ptr [edx+1]
movzx   edx, byte ptr [edx]
shl     edx, 8
or      edi, edx
movzx   edx, word ptr [ecx+12h]
and     edi, edx
add     edi, [ecx+38h]
lea     eax, [esi+24h]
push    edi
push    ecx
call    sub_10019f70
add     esp, 8
pop     edi
movzx   eax, word ptr [esi+38h]
movzx   ecx, word ptr [esi+3ah]
mov     edx, [ebp+arg_0]
add     eax, [esi+2ch]
mov     [edx], ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, eax
xor     eax, eax
cmp     byte ptr [esi+53h], 1
jnz     short loc_1001dbab
cmp     word ptr [esi+3eh], 0
movsx   eax, word ptr [esi+56h]
push    edi
mov     edi, [esi+eax*4+80h]
jnz     short loc_1001db7b
movsx   eax, word ptr [esi+56h]
mov     ecx, [esi+eax*4+80h]
movzx   edx, word ptr [esi+eax*2+58h]
mov     eax, [ecx+40h]
lea     edx, [eax+edx*2]
push    ebx
movzx   ebx, byte ptr [edx+1]
movzx   edx, byte ptr [edx]
shl     edx, 8
or      ebx, edx
movzx   edx, word ptr [ecx+12h]
and     ebx, edx
add     ebx, [ecx+38h]
lea     eax, [esi+24h]
push    ebx
push    ecx
call    sub_10019f70
add     esp, 8
pop     ebx
movzx   eax, word ptr [esi+38h]
add     eax, [esi+2ch]
cmp     byte ptr [edi+2], 0
pop     edi
jz      short loc_1001db9b
movzx   edx, word ptr [esi+3ah]
mov     esi, [ebp+arg_0]
xor     ecx, ecx
sub     edx, ecx
mov     [esi], edx
add     eax, ecx
pop     esi
pop     ebp
retn
movzx   edx, word ptr [esi+3ah]
mov     ecx, [esi+24h]
mov     esi, [ebp+arg_0]
sub     edx, ecx
mov     [esi], edx
add     eax, ecx
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
movzx   eax, word ptr [esi+56h]
mov     ecx, [esi+4]
sub     esp, 8
push    edi
movsx   edi, ax
cmp     ax, 13h
jl      short loc_1001dbd3
push    offset ac0d89d4a975292
push    0cb86h
jmp     short loc_1001dc31
mov     edx, [ebp+arg_0]
lea     eax, [ebp+var_4]
push    eax
push    edx
push    ecx
call    sub_1001ab80
add     esp, 0ch
test    eax, eax
jnz     short loc_1001dc45
mov     eax, [ebp+var_4]
mov     [esi+edi*4+84h], eax
xor     ecx, ecx
mov     [esi+edi*2+5ah], cx
xor     edx, edx
mov     ecx, 1
add     [esi+56h], cx
mov     [esi+3eh], dx
mov     [esi+52h], dl
cmp     [eax+10h], cx
jb      short loc_1001dc27
mov     ecx, [esi+edi*4+80h]
mov     dl, [eax+2]
cmp     dl, [ecx+2]
jnz     short loc_1001dc27
xor     eax, eax
pop     edi
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0cb91h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
mov     eax, 0bh
add     esp, 10h
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi]
mov     ebx, [eax+4]
mov     al, [esi+53h]
push    edi
mov     [ebp+var_4], 0
cmp     al, 2
jb      short loc_1001dc91
cmp     al, 3
jnz     short loc_1001dc7a
mov     eax, [esi+4ch]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esi+48h]
push    ecx
call    sub_10009770
add     esp, 4
mov     dword ptr [esi+48h], 0
mov     byte ptr [esi+53h], 0
movzx   eax, word ptr [esi+56h]
test    ax, ax
js      loc_1001dd2f
mov     edi, 1
mov     edx, edi
cmp     dx, ax
jg      short loc_1001dcce
lea     ebx, [esi+84h]
mov     eax, [ebx]
test    eax, eax
jz      short loc_1001dcc2
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
movsx   ecx, word ptr [esi+56h]
inc     edi
add     ebx, 4
cmp     edi, ecx
jle     short loc_1001dcb0
xor     edx, edx
mov     [esi+56h], dx
mov     eax, [esi+80h]
xor     ecx, ecx
xor     edx, edx
mov     [esi+58h], cx
mov     [esi+3eh], dx
mov     [esi+51h], cx
movzx   ecx, word ptr [eax+10h]
test    cx, cx
jnz     loc_1001dde9
cmp     [eax+3], dl
jnz     loc_1001dde6
cmp     dword ptr [eax+48h], 1
jz      loc_1001dda4
push    offset ac0d89d4a975292
push    0cc1fh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+18h]
test    eax, eax
jnz     short loc_1001dd40
mov     [esi+53h], al
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     edi, [esi+80h]
push    edi
push    eax
push    ebx
call    sub_1001ab80
add     esp, 0ch
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_1001dd63
mov     byte ptr [esi+53h], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [edi]
xor     eax, eax
xor     ecx, ecx
cmp     [esi+10h], eax
mov     [esi+56h], ax
movzx   eax, byte ptr [edx+2]
setz    cl
cmp     ecx, eax
jz      loc_1001dcd4
push    offset ac0d89d4a975292
push    0cc0ah
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   ecx, byte ptr [eax+5]
mov     edx, [eax+38h]
movzx   eax, byte ptr [ecx+edx+8]
lea     ecx, [ecx+edx+8]
movzx   edx, byte ptr [ecx+1]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
push    eax
mov     byte ptr [esi+53h], 1
call    sub_1001dbb0
add     esp, 4
mov     [ebp+var_4], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    cx, cx
mov     eax, [ebp+var_4]
setnz   dl
pop     edi
mov     [esi+53h], dl
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, eax
xor     eax, eax
jmp     short loc_1001de10
movsx   ecx, word ptr [esi+56h]
mov     ecx, [esi+ecx*4+80h]
cmp     byte ptr [ecx+3], 0
jnz     short loc_1001de70
movsx   edx, word ptr [esi+56h]
movzx   eax, word ptr [esi+edx*2+58h]
mov     edx, [ecx+40h]
lea     edx, [edx+eax*2]
movzx   eax, byte ptr [edx]
movzx   edx, byte ptr [edx+1]
shl     eax, 8
or      eax, edx
movzx   edx, word ptr [ecx+12h]
and     eax, edx
add     eax, [ecx+38h]
movzx   ecx, byte ptr [eax]
movzx   edx, byte ptr [eax+1]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+2]
movzx   eax, byte ptr [eax+3]
shl     ecx, 8
or      ecx, edx
shl     ecx, 8
or      ecx, eax
push    ecx
call    sub_1001dbb0
add     esp, 4
test    eax, eax
jz      short loc_1001de10
pop     esi
retn
push    ebx
push    esi
mov     esi, eax
push    edi
xor     eax, eax
jmp     short loc_1001de90
movsx   edi, word ptr [esi+56h]
mov     edx, [esi+edi*4+80h]
cmp     byte ptr [edx+3], 0
jnz     short loc_1001dee5
movzx   eax, byte ptr [edx+5]
mov     ecx, [edx+38h]
movzx   ebx, byte ptr [eax+ecx+9]
mov     dx, [edx+10h]
lea     ecx, [eax+ecx+8]
movzx   eax, byte ptr [ecx]
shl     eax, 8
or      eax, ebx
movzx   ebx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, ebx
shl     eax, 8
or      eax, ecx
push    eax
mov     [esi+edi*2+58h], dx
call    sub_1001dbb0
add     esp, 4
test    eax, eax
jz      short loc_1001de90
pop     edi
pop     esi
pop     ebx
retn
test    eax, eax
jnz     short loc_1001df01
mov     cx, [edx+10h]
movsx   edx, word ptr [esi+56h]
dec     cx
mov     [esi+edx*2+58h], cx
xor     ecx, ecx
mov     [esi+3eh], cx
mov     [esi+52h], cl
pop     edi
pop     esi
pop     ebx
retn
push    ecx
mov     eax, esi
call    sub_1001dc50
test    eax, eax
jnz     short loc_1001df36
cmp     [esi+53h], al
jnz     short loc_1001df29
mov     dword ptr [edi], 1
pop     ecx
retn
mov     eax, esi
mov     dword ptr [edi], 0
call    sub_1001de00
pop     ecx
retn
push    ecx
cmp     byte ptr [esi+53h], 1
jnz     short loc_1001df51
cmp     byte ptr [esi+51h], 0
jz      short loc_1001df51
xor     eax, eax
pop     ecx
retn
mov     eax, esi
call    sub_1001dc50
test    eax, eax
jnz     short loc_1001df7e
cmp     [esi+53h], al
jnz     short loc_1001df69
mov     dword ptr [edi], 1
pop     ecx
retn
mov     eax, esi
mov     dword ptr [edi], 0
call    sub_1001de80
test    eax, eax
setz    cl
mov     [esi+51h], cl
pop     ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     byte ptr [edi+53h], 1
jnz     short loc_1001dfeb
cmp     byte ptr [edi+52h], 0
jz      short loc_1001dfeb
mov     eax, [edi+80h]
cmp     byte ptr [eax+2], 0
jz      short loc_1001dfeb
mov     eax, [edi+24h]
mov     edx, [ebp+arg_8]
mov     ecx, [edi+28h]
cmp     eax, edx
jnz     short loc_1001dfc8
cmp     ecx, [ebp+arg_c]
jnz     short loc_1001dfc8
mov     ecx, [ebp+arg_14]
mov     dword ptr [ecx], 0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+51h], 0
jz      short loc_1001dfeb
cmp     ecx, [ebp+arg_c]
jg      short loc_1001dfeb
jl      short loc_1001dfd9
cmp     eax, edx
jnb     short loc_1001dfeb
mov     edx, [ebp+arg_14]
mov     dword ptr [edx], 0ffffffffh
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
call    sub_1001dc50
test    eax, eax
jnz     loc_1001e348
cmp     [edi+53h], al
jnz     short loc_1001e011
mov     eax, [ebp+arg_14]
mov     dword ptr [eax], 0ffffffffh
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movsx   ecx, word ptr [edi+56h]
mov     esi, [edi+ecx*4+80h]
movzx   eax, word ptr [esi+10h]
dec     eax
cmp     [ebp+arg_10], 0
mov     [ebp+var_14], 0
mov     [ebp+var_18], eax
jnz     short loc_1001e036
cdq
sub     eax, edx
sar     eax, 1
mov     [edi+ecx*2+58h], ax
xor     ecx, ecx
mov     [edi+3eh], cx
mov     edx, [esi+40h]
movzx   ebx, byte ptr [edx+eax*2+1]
movzx   ecx, byte ptr [esi+6]
mov     [ebp+var_c], eax
lea     eax, [edx+eax*2]
movzx   edx, byte ptr [eax]
movzx   eax, word ptr [esi+12h]
shl     edx, 8
or      ebx, edx
and     ebx, eax
add     ebx, ecx
add     ebx, [esi+38h]
cmp     byte ptr [esi+2], 0
jz      loc_1001e113
cmp     byte ptr [esi+4], 0
jz      short loc_1001e0a7
mov     al, 80h
cmp     [ebx], al
jnb     short loc_1001e083
mov     eax, 1
jmp     short loc_1001e0a2
test    [ebx+1], al
jnz     short loc_1001e08c
mov     al, 2
jmp     short loc_1001e09f
test    [ebx+2], al
jnz     short loc_1001e095
mov     al, 3
jmp     short loc_1001e09f
mov     eax, ebx
lea     edi, [ebp+var_8]
call    sub_1000c680
movzx   eax, al
movzx   ecx, al
add     ebx, ecx
lea     edi, [ebp+var_20]
mov     eax, ebx
call    sub_1000c680
mov     ecx, [ebp+var_20]
mov     eax, [ebp+arg_8]
mov     edx, [ebp+var_1c]
cmp     ecx, eax
jnz     short loc_1001e0d9
cmp     edx, [ebp+arg_c]
jnz     short loc_1001e0dc
mov     eax, [ebp+arg_0]
xor     ebx, ebx
mov     byte ptr [eax+52h], 1
mov     [eax+24h], ecx
mov     [eax+28h], edx
mov     edi, eax
jmp     loc_1001e20f
cmp     edx, [ebp+arg_c]
jg      short loc_1001e0fb
jl      short loc_1001e0e4
cmp     ecx, eax
jnb     short loc_1001e0fb
mov     eax, [ebp+arg_0]
or      ebx, 0ffffffffh
mov     byte ptr [eax+52h], 1
mov     [eax+24h], ecx
mov     [eax+28h], edx
mov     edi, eax
jmp     loc_1001e20f
mov     eax, [ebp+arg_0]
mov     ebx, 1
mov     [eax+52h], bl
mov     [eax+24h], ecx
mov     [eax+28h], edx
mov     edi, eax
jmp     loc_1001e20f
movzx   eax, byte ptr [ebx]
movzx   edx, byte ptr [esi+7]
cmp     eax, edx
jg      short loc_1001e134
mov     ecx, [ebp+arg_4]
push    ecx
inc     ebx
push    ebx
push    eax
call    sub_10028ab0
add     esp, 0ch
mov     ebx, eax
jmp     loc_1001e20f
mov     dl, [ebx+1]
test    dl, dl
js      short loc_1001e166
and     eax, 7fh
movzx   edx, dl
shl     eax, 7
add     eax, edx
movzx   edx, word ptr [esi+8]
cmp     eax, edx
jg      short loc_1001e166
mov     ecx, [ebp+arg_4]
push    ecx
add     ebx, 2
push    ebx
push    eax
call    sub_10028ab0
add     esp, 0ch
mov     ebx, eax
jmp     loc_1001e20f
sub     ebx, ecx
push    ebx
lea     eax, [edi+24h]
push    esi
call    sub_10019f70
mov     ebx, [edi+24h]
lea     edx, [ebx-1]
add     esp, 8
mov     [ebp+size], ebx
cmp     edx, 7ffffefeh
ja      loc_1001e2f8
cmp     dword_10080230, 0
jz      loc_1001e21e
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1001e1aa
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+size]
lea     ebx, [ebp+src]
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1001e1c8
push    eax
call    dword_10080284
add     esp, 4
mov     ebx, [ebp+size]
mov     eax, [ebp+src]
test    eax, eax
jz      loc_1001e2f8
push    0
push    eax
push    ebx
push    0
push    edi
call    sub_1001d750
add     esp, 14h
mov     [ebp+size], eax
test    eax, eax
jnz     loc_1001e309
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+src]
push    eax
push    ecx
push    ebx
call    sub_10028ab0
mov     edx, [ebp+src]
add     esp, 0ch
push    edx
mov     ebx, eax
call    sub_10009770
add     esp, 4
test    ebx, ebx
jz      short loc_1001e253
jns     short loc_1001e22d
mov     eax, [ebp+var_c]
inc     eax
mov     [ebp+var_14], eax
jmp     short loc_1001e234
push    ebx
call    dword_1008024c
add     esp, 4
mov     [ebp+src], eax
jmp     short loc_1001e1cb
mov     ecx, [ebp+var_c]
dec     ecx
mov     [ebp+var_18], ecx
mov     edx, [ebp+var_14]
mov     eax, [ebp+var_18]
cmp     edx, eax
jg      short loc_1001e26f
add     eax, edx
cdq
sub     eax, edx
movsx   edx, word ptr [edi+56h]
sar     eax, 1
mov     [edi+edx*2+58h], ax
jmp     loc_1001e03b
cmp     byte ptr [esi+2], 0
jz      loc_1001e31f
cmp     byte ptr [esi+3], 0
jnz     loc_1001e31f
mov     eax, [ebp+var_c]
mov     [ebp+var_14], eax
mov     edx, eax
cmp     byte ptr [esi+3], 0
jnz     loc_1001e339
movzx   ecx, word ptr [esi+10h]
cmp     edx, ecx
jl      short loc_1001e28e
movzx   eax, byte ptr [esi+5]
mov     ecx, [esi+38h]
lea     ecx, [eax+ecx+8]
jmp     short loc_1001e2aa
mov     eax, [esi+40h]
movzx   ecx, byte ptr [eax+edx*2+1]
lea     eax, [eax+edx*2]
movzx   eax, byte ptr [eax]
shl     eax, 8
or      ecx, eax
movzx   eax, word ptr [esi+12h]
and     ecx, eax
add     ecx, [esi+38h]
movzx   eax, byte ptr [ecx]
movzx   esi, byte ptr [ecx+1]
shl     eax, 8
or      eax, esi
movzx   esi, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, esi
shl     eax, 8
or      eax, ecx
test    eax, eax
jz      short loc_1001e339
movsx   ecx, word ptr [edi+56h]
mov     [edi+ecx*2+58h], dx
xor     edx, edx
push    eax
mov     esi, edi
mov     [edi+3eh], dx
mov     [edi+52h], dl
call    sub_1001dbb0
add     esp, 4
test    eax, eax
jz      loc_1001e011
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+size], 7
mov     eax, [ebp+size]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+src]
push    eax
call    sub_10009770
mov     eax, [ebp+size]
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_14]
mov     [ebp+size], 0
mov     eax, [ebp+size]
mov     dword ptr [ecx], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_14]
mov     [ebp+size], 0
mov     eax, [ebp+size]
mov     [edx], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     al, [esi+53h]
xor     ebx, ebx
push    edi
cmp     al, 2
jb      short loc_1001e3a5
cmp     al, 3
jnz     short loc_1001e36f
mov     eax, [esi+4ch]
jmp     short loc_1001e3a7
mov     ecx, [esi+44h]
mov     edx, [esi+40h]
lea     eax, [esi+4ch]
push    eax
push    ebx
push    ecx
push    edx
mov     edx, [esi+48h]
mov     edi, esi
mov     [esi+53h], bl
call    sub_100199d0
mov     edi, eax
add     esp, 10h
cmp     edi, ebx
jnz     short loc_1001e3a1
mov     eax, [esi+48h]
push    eax
call    sub_10009770
add     esp, 4
mov     [esi+48h], ebx
mov     eax, edi
jmp     short loc_1001e3a7
xor     eax, eax
cmp     eax, ebx
jnz     loc_1001e4d5
cmp     [esi+53h], bl
jnz     short loc_1001e3c6
mov     ecx, [ebp+arg_4]
mov     dword ptr [ecx], 1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [esi+4ch], ebx
mov     [esi+4ch], ebx
jle     short loc_1001e3dc
mov     edx, [ebp+arg_4]
mov     [edx], ebx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movsx   eax, word ptr [esi+56h]
mov     dx, [esi+eax*2+58h]
mov     ecx, [esi+eax*4+80h]
inc     dx
movzx   edx, dx
mov     [esi+eax*2+58h], dx
xor     eax, eax
mov     [esi+3eh], ax
mov     [esi+52h], bl
cmp     dx, [ecx+10h]
jb      loc_1001e4c0
cmp     [ecx+3], bl
jnz     short loc_1001e442
movzx   edx, byte ptr [ecx+5]
mov     eax, [ecx+38h]
lea     ecx, [edx+eax+8]
call    sub_1000c8a0
push    eax
call    sub_1001dbb0
add     esp, 4
cmp     eax, ebx
jnz     loc_1001e4d5
mov     eax, esi
call    sub_1001de00
mov     ecx, [ebp+arg_4]
mov     [ecx], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
or      edi, 0ffffffffh
movzx   eax, word ptr [esi+56h]
cmp     ax, bx
jz      short loc_1001e4ab
movsx   edx, ax
mov     eax, [esi+edx*4+80h]
cmp     eax, ebx
jz      short loc_1001e468
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
add     [esi+56h], di
mov     ax, [esi+56h]
xor     ecx, ecx
cwde
mov     [esi+3eh], cx
mov     [esi+52h], bl
mov     ecx, [esi+eax*4+80h]
mov     dx, [esi+eax*2+58h]
cmp     dx, [ecx+10h]
jnb     short loc_1001e445
mov     eax, [ebp+arg_4]
mov     [eax], ebx
cmp     [ecx+2], bl
jz      loc_1001e3bd
push    eax
push    esi
call    sub_1001e350
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     dword ptr [eax], 1
mov     [esi+53h], bl
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
mov     [edx], ebx
cmp     [ecx+3], bl
jnz     loc_1001e3bd
mov     eax, esi
call    sub_1001de00
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     al, [esi+53h]
xor     ebx, ebx
push    edi
cmp     al, 2
jb      short loc_1001e535
cmp     al, 3
jnz     short loc_1001e4ff
mov     eax, [esi+4ch]
jmp     short loc_1001e537
mov     ecx, [esi+44h]
mov     edx, [esi+40h]
lea     eax, [esi+4ch]
push    eax
push    ebx
push    ecx
push    edx
mov     edx, [esi+48h]
mov     edi, esi
mov     [esi+53h], bl
call    sub_100199d0
mov     edi, eax
add     esp, 10h
cmp     edi, ebx
jnz     short loc_1001e531
mov     eax, [esi+48h]
push    eax
call    sub_10009770
add     esp, 4
mov     [esi+48h], ebx
mov     eax, edi
jmp     short loc_1001e537
xor     eax, eax
cmp     eax, ebx
jnz     loc_1001e67f
mov     [esi+51h], bl
cmp     [esi+53h], bl
jnz     short loc_1001e559
mov     ecx, [ebp+arg_4]
mov     dword ptr [ecx], 1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [esi+4ch], ebx
mov     [esi+4ch], ebx
jl      loc_1001e678
movsx   eax, word ptr [esi+56h]
mov     ecx, [esi+eax*4+80h]
cmp     [ecx+3], bl
jnz     short loc_1001e5d7
movzx   eax, word ptr [esi+eax*2+58h]
mov     edx, [ecx+40h]
lea     edx, [edx+eax*2]
movzx   eax, byte ptr [edx+1]
movzx   edx, byte ptr [edx]
shl     edx, 8
or      eax, edx
movzx   edx, word ptr [ecx+12h]
and     eax, edx
add     eax, [ecx+38h]
movzx   edx, byte ptr [eax]
movzx   ecx, byte ptr [eax+1]
shl     edx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+2]
movzx   eax, byte ptr [eax+3]
shl     ecx, 8
or      ecx, edx
shl     ecx, 8
or      ecx, eax
push    ecx
call    sub_1001dbb0
add     esp, 4
cmp     eax, ebx
jnz     loc_1001e67f
mov     eax, esi
call    sub_1001de80
mov     edx, [ebp+arg_4]
mov     [edx], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [esi+eax*2+58h], bx
jnz     short loc_1001e61c
or      edi, 0ffffffffh
movzx   eax, word ptr [esi+56h]
cmp     ax, bx
jz      short loc_1001e663
movsx   ecx, ax
mov     eax, [esi+ecx*4+80h]
cmp     eax, ebx
jz      short loc_1001e604
mov     edx, [eax+44h]
push    edx
call    sub_100154a0
add     esp, 4
add     [esi+56h], di
xor     eax, eax
mov     [esi+3eh], ax
mov     [esi+52h], bl
movsx   ecx, word ptr [esi+56h]
cmp     [esi+ecx*2+58h], bx
jz      short loc_1001e5e1
movsx   ecx, word ptr [esi+56h]
xor     eax, eax
mov     [esi+3eh], ax
mov     [esi+52h], bl
lea     eax, [esi+ecx*2+58h]
mov     edx, 0ffffh
add     [eax], dx
movsx   eax, word ptr [esi+56h]
mov     eax, [esi+eax*4+80h]
cmp     [eax+2], bl
jz      short loc_1001e678
cmp     [eax+3], bl
jnz     short loc_1001e678
mov     ecx, [ebp+arg_4]
push    ecx
push    esi
call    sub_1001e4e0
mov     edx, [ebp+arg_4]
add     esp, 8
mov     [edx], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
mov     [esi+53h], bl
mov     dword ptr [edx], 1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
xor     eax, eax
mov     [edx], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 30h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi+0ch]
mov     eax, [esi+38h]
movzx   ebx, byte ptr [eax+24h]
movzx   edx, byte ptr [eax+25h]
mov     ecx, [edi+2ch]
shl     ebx, 8
or      ebx, edx
movzx   edx, byte ptr [eax+26h]
movzx   eax, byte ptr [eax+27h]
shl     ebx, 8
or      ebx, edx
shl     ebx, 8
or      ebx, eax
mov     [ebp+var_14], 0
mov     [ebp+var_1c], esi
mov     [ebp+var_24], ecx
cmp     ebx, ecx
jb      short loc_1001e6fa
push    offset ac0d89d4a975292
push    0ce2dh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    ebx, ebx
jz      loc_1001ee21
cmp     [ebp+arg_10], 0
mov     [ebp+var_1], 0
jz      short loc_1001e73f
cmp     [ebp+arg_c], ecx
ja      short loc_1001e73f
mov     edx, [ebp+arg_c]
push    0
lea     ecx, [ebp+var_2]
push    ecx
push    edx
mov     eax, edi
call    sub_10019d60
add     esp, 0ch
test    eax, eax
jnz     loc_1001ef50
cmp     [ebp+var_2], 2
jnz     short loc_1001e737
mov     [ebp+var_1], 1
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_c]
mov     [eax], ecx
mov     edx, [esi+44h]
push    edx
call    sub_100158a0
add     esp, 4
test    eax, eax
jnz     loc_1001ef50
mov     eax, [esi+38h]
dec     ebx
mov     ecx, ebx
shr     ecx, 18h
mov     [eax+24h], cl
mov     edx, ebx
shr     edx, 10h
mov     ecx, ebx
shr     ecx, 8
mov     [eax+25h], dl
mov     [eax+26h], cl
mov     [eax+27h], bl
mov     eax, [ebp+var_14]
mov     [ebp+var_10], eax
test    eax, eax
jz      short loc_1001e79f
mov     eax, [eax+38h]
movzx   ebx, byte ptr [eax]
movzx   edx, byte ptr [eax+1]
movzx   ecx, byte ptr [eax+2]
shl     ebx, 8
or      ebx, edx
movzx   edx, byte ptr [eax+3]
shl     ebx, 8
or      ebx, ecx
shl     ebx, 8
or      ebx, edx
jmp     short loc_1001e7c1
mov     eax, [esi+38h]
movzx   ebx, byte ptr [eax+20h]
movzx   ecx, byte ptr [eax+21h]
movzx   edx, byte ptr [eax+22h]
movzx   eax, byte ptr [eax+23h]
shl     ebx, 8
or      ebx, ecx
shl     ebx, 8
or      ebx, edx
shl     ebx, 8
or      ebx, eax
cmp     ebx, [ebp+var_24]
ja      loc_1001ed15
mov     esi, [edi]
test    ebx, ebx
jz      loc_1001ed37
mov     edi, [esi+28h]
test    edi, edi
jnz     loc_1001e8d8
mov     edi, [esi+0b4h]
lea     ecx, [ebp+var_c]
push    ecx
push    1
push    ebx
call    sub_10010550
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     loc_1001e8d8
mov     ecx, [ebp+var_c]
cmp     [ecx+10h], eax
jz      short loc_1001e811
inc     dword ptr [esi+0a0h]
jmp     loc_1001e8f0
mov     [ecx+10h], esi
cmp     ebx, 7fffffffh
ja      short loc_1001e87f
mov     eax, dword_1008031c
mov     edi, [esi+80h]
cdq
idiv    edi
inc     eax
cmp     ebx, eax
jz      short loc_1001e87f
cmp     byte ptr [esi+0eh], 0
jnz     short loc_1001e85c
cmp     [esi+18h], ebx
jb      short loc_1001e85c
mov     edx, [esi+3ch]
cmp     dword ptr [edx], 0
jz      short loc_1001e85c
mov     eax, [ebp+var_c]
inc     dword ptr [esi+0a4h]
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      loc_1001e8f0
jmp     short loc_1001e89d
cmp     ebx, [esi+84h]
jbe     short loc_1001e86b
mov     edi, 0dh
jmp     short loc_1001e8a0
mov     eax, [ebp+var_c]
mov     ecx, [eax+4]
push    edi
push    0
push    ecx
call    memset
add     esp, 0ch
jmp     short loc_1001e8f0
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
mov     ecx, [ebp+var_c]
test    byte ptr [ecx+18h], 2
jz      short loc_1001e8b0
mov     eax, [ebp+var_c]
call    sub_100104b0
mov     ecx, eax
mov     eax, [ecx+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [ecx+14h], 1
jnz     short loc_1001e8c3
mov     dword ptr [eax+2ch], 0
mov     edx, [ebp+var_c]
mov     ecx, [edx]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    esi
call    sub_10015290
add     esp, 4
mov     [ebp+var_c], 0
test    edi, edi
jnz     loc_1001ed55
mov     eax, [ebp+var_c]
mov     edi, [eax+8]
mov     ecx, [eax+4]
cmp     ebx, 1
setnz   dl
dec     dl
mov     esi, ecx
mov     [edi+38h], ecx
mov     [edi+44h], eax
mov     eax, [ebp+arg_0]
and     dl, 64h
mov     [edi+5], dl
mov     [edi+34h], eax
mov     [edi+48h], ebx
movzx   edx, byte ptr [esi+4]
movzx   ecx, byte ptr [esi+5]
shl     edx, 8
or      ecx, edx
movzx   edx, byte ptr [esi+6]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [esi+7]
shl     ecx, 8
or      ecx, edx
mov     [ebp+var_14], edi
mov     [ebp+var_8], 0
mov     [ebp+var_28], ecx
jnz     short loc_1001e987
cmp     [ebp+var_1], 0
jnz     short loc_1001e987
mov     eax, [edi+44h]
push    eax
call    sub_100158a0
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1001ed7a
mov     ecx, [ebp+arg_8]
mov     eax, [ebp+var_1c]
mov     edx, [edi+38h]
mov     edx, [edx]
mov     [ecx], ebx
mov     ecx, [eax+38h]
mov     eax, [ebp+arg_4]
mov     [ecx+20h], edx
mov     [eax], edi
mov     [ebp+var_14], 0
jmp     loc_1001ece8
mov     edx, [eax+24h]
shr     edx, 2
sub     edx, 2
cmp     ecx, edx
ja      loc_1001ed5a
cmp     [ebp+var_1], 0
jz      loc_1001eb3c
cmp     [ebp+arg_c], ebx
jnz     loc_1001eb3c
mov     ecx, [edi+44h]
mov     eax, [ebp+arg_4]
push    ecx
mov     [eax], edi
mov     [ebp+var_1], 0
call    sub_100158a0
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1001ed7a
cmp     [ebp+var_28], eax
jnz     short loc_1001ea21
mov     eax, [ebp+var_10]
test    eax, eax
jnz     short loc_1001e9f1
mov     edx, [edi+38h]
mov     eax, [ebp+var_1c]
mov     ecx, [eax+38h]
mov     edx, [edx]
mov     [ecx+20h], edx
mov     [ebp+var_14], 0
jmp     loc_1001ece8
mov     eax, [eax+44h]
push    eax
call    sub_100158a0
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1001ed7a
mov     ecx, [edi+38h]
mov     edx, [ebp+var_10]
mov     eax, [edx+38h]
mov     ecx, [ecx]
mov     [eax], ecx
mov     [ebp+var_14], 0
jmp     loc_1001ece8
mov     ecx, [edi+38h]
add     ecx, 8
call    sub_1000c8a0
mov     ebx, eax
cmp     ebx, [ebp+var_24]
ja      loc_1001edef
mov     esi, [ebp+arg_0]
lea     edx, [ebp+var_30]
push    edx
xor     eax, eax
mov     ecx, ebx
call    sub_1001ab30
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1001ed7a
mov     esi, [ebp+var_30]
mov     eax, [esi+44h]
push    eax
call    sub_100158a0
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1001ee01
mov     ecx, [edi+38h]
mov     eax, [ecx]
mov     edx, [esi+38h]
mov     ecx, [ebp+var_28]
mov     [edx], eax
mov     eax, [esi+38h]
dec     ecx
mov     edx, ecx
shr     edx, 18h
mov     [eax+4], dl
mov     edx, ecx
shr     edx, 10h
mov     [eax+5], dl
mov     edx, ecx
shr     edx, 8
mov     [eax+6], dl
mov     [eax+7], cl
mov     edx, [esi+38h]
lea     eax, ds:0[ecx*4]
mov     ecx, [edi+38h]
push    eax
add     ecx, 0ch
push    ecx
add     edx, 8
push    edx
call    memcpy
mov     eax, [esi+44h]
add     esp, 0ch
push    eax
call    sub_100154a0
mov     eax, [ebp+var_10]
add     esp, 4
test    eax, eax
jnz     short loc_1001eaf9
mov     ecx, [ebp+var_1c]
mov     eax, [ecx+38h]
mov     edx, ebx
shr     edx, 18h
mov     [eax+20h], dl
mov     ecx, ebx
shr     ecx, 10h
mov     edx, ebx
shr     edx, 8
mov     [eax+21h], cl
mov     [eax+22h], dl
mov     [eax+23h], bl
mov     [ebp+var_14], 0
jmp     loc_1001ece8
mov     eax, [eax+44h]
push    eax
call    sub_100158a0
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1001ed7a
mov     ecx, [ebp+var_10]
mov     eax, [ecx+38h]
mov     edx, ebx
shr     edx, 18h
mov     [eax], dl
mov     ecx, ebx
shr     ecx, 10h
mov     edx, ebx
shr     edx, 8
mov     [eax+1], cl
mov     [eax+2], dl
mov     [eax+3], bl
mov     [ebp+var_14], 0
jmp     loc_1001ece8
test    ecx, ecx
jz      loc_1001ece8
xor     ebx, ebx
cmp     [ebp+arg_c], ebx
jbe     loc_1001ebf4
movzx   eax, byte ptr [esi+8]
movzx   edx, byte ptr [esi+9]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [esi+0ah]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [esi+0bh]
shl     eax, 8
or      eax, edx
sub     eax, [ebp+arg_c]
mov     [ebp+var_2c], ebx
jns     short loc_1001eb88
cmp     eax, 80000000h
jnz     short loc_1001eb86
mov     [ebp+var_18], 7fffffffh
jmp     short loc_1001eb8b
neg     eax
mov     [ebp+var_18], eax
mov     [ebp+var_20], 1
cmp     ecx, 1
jbe     short loc_1001ebf4
lea     edx, [esi+0eh]
lea     ebx, [ebx+0]
movzx   eax, byte ptr [edx-2]
movzx   ebx, byte ptr [edx-1]
shl     eax, 8
or      eax, ebx
movzx   ebx, byte ptr [edx]
shl     eax, 8
or      eax, ebx
movzx   ebx, byte ptr [edx+1]
shl     eax, 8
or      eax, ebx
sub     eax, [ebp+arg_c]
jns     short loc_1001ebd3
cmp     eax, 80000000h
jnz     short loc_1001ebd1
mov     eax, 7fffffffh
jmp     short loc_1001ebd3
neg     eax
cmp     eax, [ebp+var_18]
jge     short loc_1001ebe3
mov     ebx, [ebp+var_20]
mov     [ebp+var_2c], ebx
mov     [ebp+var_18], eax
jmp     short loc_1001ebe6
mov     ebx, [ebp+var_2c]
mov     eax, [ebp+var_20]
inc     eax
add     edx, 4
mov     [ebp+var_20], eax
cmp     eax, ecx
jb      short loc_1001eba0
movzx   eax, byte ptr [esi+ebx*4+8]
movzx   ecx, byte ptr [esi+ebx*4+9]
movzx   edx, byte ptr [esi+ebx*4+0ah]
shl     eax, 8
or      eax, ecx
movzx   ecx, byte ptr [esi+ebx*4+0bh]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
cmp     eax, [ebp+var_24]
ja      loc_1001ee12
cmp     [ebp+var_1], 0
jz      short loc_1001ec2f
cmp     eax, [ebp+arg_c]
jnz     loc_1001ece8
mov     edx, [ebp+arg_8]
mov     [edx], eax
mov     eax, [edi+44h]
push    eax
call    sub_100158a0
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1001ed7a
mov     ecx, [ebp+var_28]
lea     eax, [ecx-1]
cmp     ebx, eax
jnb     short loc_1001ec5d
mov     ecx, [esi+ecx*4+4]
mov     [esi+ebx*4+8], ecx
mov     edx, eax
shr     edx, 18h
mov     [esi+4], dl
mov     ecx, eax
mov     edx, eax
shr     ecx, 10h
shr     edx, 8
mov     [esi+7], al
mov     eax, [ebp+arg_8]
mov     edi, [eax]
mov     [esi+5], cl
mov     [esi+6], dl
mov     esi, [ebp+arg_0]
mov     ecx, [esi+3ch]
test    ecx, ecx
jz      short loc_1001ec9d
cmp     edi, [ecx]
ja      short loc_1001ec96
mov     eax, edi
call    sub_1000fe60
test    eax, eax
jz      short loc_1001ec9d
mov     eax, 1
jmp     short loc_1001ec9f
xor     eax, eax
mov     ebx, [ebp+arg_4]
xor     ecx, ecx
test    eax, eax
setz    cl
push    ebx
mov     eax, ecx
mov     ecx, edi
call    sub_1001ab30
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jnz     short loc_1001ece4
mov     edx, [ebx]
mov     eax, [edx+44h]
push    eax
call    sub_100158a0
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jz      short loc_1001ece4
mov     ebx, [ebx]
test    ebx, ebx
jz      short loc_1001ece4
mov     ecx, [ebx+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     [ebp+var_1], 0
cmp     [ebp+var_10], 0
jz      short loc_1001ecfd
mov     edx, [ebp+var_10]
mov     eax, [edx+44h]
push    eax
call    sub_100154a0
add     esp, 4
cmp     [ebp+var_1], 0
mov     [ebp+var_10], 0
jz      short loc_1001ed7a
mov     edi, [ebp+arg_0]
mov     esi, [ebp+var_1c]
jmp     loc_1001e772
push    offset ac0d89d4a975292
push    0ce5ah
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     [ebp+var_8], 0bh
jmp     short loc_1001ed8d
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
mov     [ebp+var_8], edi
jmp     short loc_1001ed8d
push    offset ac0d89d4a975292
push    0ce76h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     [ebp+var_8], 0bh
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_1001ed8d
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     eax, [ebp+var_10]
test    eax, eax
jz      short loc_1001eda0
mov     edx, [eax+44h]
push    edx
call    sub_100154a0
add     esp, 4
cmp     [ebp+var_8], 0
jnz     loc_1001ef44
mov     eax, [ebp+arg_4]
mov     eax, [eax]
mov     ecx, [eax+44h]
cmp     word ptr [ecx+1ah], 1
jle     loc_1001ef37
test    eax, eax
jz      short loc_1001edca
push    ecx
call    sub_100154a0
add     esp, 4
push    offset ac0d89d4a975292
push    0cf1bh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 0ce96h
call    sub_10071c60
mov     [ebp+var_8], eax
jmp     loc_1001ed7a
mov     ecx, [esi+44h]
push    ecx
call    sub_100154a0
add     esp, 4
jmp     loc_1001ed7a
push    offset ac0d89d4a975292
push    0cecdh
jmp     loc_1001ed64
mov     edx, [esi+44h]
push    edx
call    sub_100158a0
add     esp, 4
test    eax, eax
jnz     loc_1001ef50
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [edi+20h]
inc     dword ptr [edi+2ch]
mov     ecx, [edi+2ch]
inc     eax
cmp     ecx, eax
jnz     short loc_1001ee4e
inc     ecx
mov     [edi+2ch], ecx
cmp     byte ptr [edi+11h], 0
jz      short loc_1001eec7
mov     esi, [edi+2ch]
mov     ecx, esi
call    sub_10019bd0
cmp     eax, esi
jnz     short loc_1001eec7
lea     eax, [ebp+var_2c]
push    eax
mov     ecx, esi
mov     eax, 1
mov     esi, edi
mov     [ebp+var_2c], 0
call    sub_1001ab30
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     short loc_1001eea5
mov     ebx, [ebp+var_2c]
mov     ecx, [ebx+44h]
push    ecx
call    sub_100158a0
mov     edx, [ebx+44h]
add     esp, 4
push    edx
mov     edi, eax
call    sub_100154a0
add     esp, 4
test    edi, edi
jz      short loc_1001eeae
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [esi+20h]
inc     dword ptr [esi+2ch]
mov     ecx, [esi+2ch]
inc     eax
cmp     ecx, eax
jnz     short loc_1001eec7
inc     ecx
mov     [esi+2ch], ecx
mov     esi, [ebp+arg_0]
mov     ecx, [esi+2ch]
mov     eax, [esi+0ch]
mov     eax, [eax+38h]
mov     edi, [ebp+arg_4]
mov     edx, ecx
shr     edx, 18h
mov     [eax+1ch], dl
mov     edx, ecx
shr     edx, 10h
mov     [eax+1dh], dl
mov     edx, ecx
shr     edx, 8
mov     [eax+1eh], dl
mov     [eax+1fh], cl
mov     ecx, [esi+2ch]
mov     eax, [ebp+arg_8]
mov     [eax], ecx
push    edi
mov     eax, 1
call    sub_1001ab30
add     esp, 4
test    eax, eax
jnz     short loc_1001ef50
mov     ecx, [edi]
mov     edx, [ecx+44h]
push    edx
call    sub_100158a0
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jz      loc_1001edaa
mov     edi, [edi]
test    edi, edi
jz      loc_1001eda0
mov     eax, [edi+44h]
push    eax
jmp     loc_1001ed98
mov     byte ptr [eax], 0
mov     eax, [ebp+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     dword ptr [eax], 0
mov     eax, [ebp+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ecx, [esi+0ch]
xor     ebx, ebx
push    edi
mov     [ebp+var_8], ebx
mov     [ebp+var_c], ecx
cmp     eax, ebx
jz      short loc_1001ef87
mov     [ebp+var_4], eax
mov     eax, [eax+44h]
inc     word ptr [eax+1ah]
jmp     short loc_1001efd4
mov     eax, [ebp+arg_4]
mov     ecx, [esi]
mov     edi, [ecx+0b4h]
lea     edx, [ebp+var_10]
push    edx
push    ebx
push    eax
mov     [ebp+var_10], ebx
call    sub_10010550
mov     ecx, [ebp+var_10]
add     esp, 0ch
cmp     ecx, ebx
jz      short loc_1001efcf
mov     eax, [ecx+8]
mov     edx, [ecx+4]
mov     [eax+44h], ecx
mov     ecx, [ebp+arg_4]
cmp     ecx, 1
mov     [eax+48h], ecx
setnz   cl
dec     cl
and     cl, 64h
mov     [eax+38h], edx
mov     [eax+34h], esi
mov     [eax+5], cl
jmp     short loc_1001efd1
xor     eax, eax
mov     [ebp+var_4], eax
mov     edx, [ebp+var_c]
mov     eax, [edx+44h]
push    eax
call    sub_100158a0
mov     esi, eax
add     esp, 4
mov     [ebp+var_10], esi
test    esi, esi
jnz     loc_1001f26c
mov     ecx, [ebp+var_c]
mov     eax, [ecx+38h]
movzx   edi, byte ptr [eax+24h]
movzx   edx, byte ptr [eax+25h]
movzx   ecx, byte ptr [eax+26h]
shl     edi, 8
or      edi, edx
movzx   edx, byte ptr [eax+27h]
mov     esi, [ebp+arg_0]
shl     edi, 8
or      edi, ecx
shl     edi, 8
or      edi, edx
lea     ecx, [edi+1]
mov     edx, ecx
shr     edx, 18h
mov     [eax+24h], dl
mov     edx, ecx
shr     edx, 10h
mov     [eax+25h], dl
mov     edx, ecx
shr     edx, 8
mov     [eax+26h], dl
mov     [eax+27h], cl
test    byte ptr [esi+16h], 4
jz      short loc_1001f092
cmp     [ebp+var_4], ebx
jnz     short loc_1001f05c
mov     ecx, [ebp+arg_4]
lea     eax, [ebp+var_4]
push    eax
xor     eax, eax
call    sub_1001ab30
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     loc_1001f26c
mov     ecx, [ebp+var_4]
mov     edx, [ecx+44h]
push    edx
call    sub_100158a0
mov     esi, eax
add     esp, 4
mov     [ebp+var_10], esi
test    esi, esi
jnz     loc_1001f26c
mov     eax, [ebp+var_4]
mov     ecx, [eax+34h]
mov     edx, [ecx+20h]
mov     eax, [eax+38h]
push    edx
push    esi
push    eax
call    memset
mov     esi, [ebp+arg_0]
add     esp, 0ch
cmp     [esi+11h], bl
jz      short loc_1001f0b9
mov     eax, [ebp+arg_4]
lea     ecx, [ebp+var_10]
push    ecx
push    0
push    2
push    esi
call    sub_10019c10
mov     esi, [ebp+var_10]
add     esp, 10h
test    esi, esi
jnz     loc_1001f26c
mov     esi, [ebp+arg_0]
test    edi, edi
jz      loc_1001f1f0
mov     edx, [ebp+var_c]
mov     eax, [edx+38h]
movzx   ebx, byte ptr [eax+20h]
movzx   ecx, byte ptr [eax+21h]
movzx   edx, byte ptr [eax+22h]
movzx   eax, byte ptr [eax+23h]
shl     ebx, 8
or      ebx, ecx
shl     ebx, 8
or      ebx, edx
shl     ebx, 8
or      ebx, eax
lea     ecx, [ebp+var_8]
push    ecx
xor     eax, eax
mov     ecx, ebx
call    sub_1001ab30
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     loc_1001f26c
mov     edx, [ebp+var_8]
mov     eax, [edx+38h]
movzx   edi, byte ptr [eax+4]
movzx   ecx, byte ptr [eax+5]
movzx   edx, byte ptr [eax+6]
movzx   eax, byte ptr [eax+7]
shl     edi, 8
or      edi, ecx
mov     ecx, [ebp+arg_0]
shl     edi, 8
or      edi, edx
shl     edi, 8
or      edi, eax
mov     eax, [ecx+24h]
shr     eax, 2
lea     edx, [eax-2]
cmp     edi, edx
jbe     short loc_1001f146
mov     eax, 0cf71h
call    sub_10071c60
mov     esi, eax
jmp     loc_1001f26c
add     eax, 0fffffff8h
cmp     edi, eax
jnb     loc_1001f1ee
mov     eax, [ebp+var_8]
mov     ecx, [eax+44h]
push    ecx
call    sub_100158a0
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     loc_1001f26c
mov     esi, [ebp+var_8]
mov     eax, [esi+38h]
lea     ecx, [edi+1]
mov     edx, ecx
shr     edx, 18h
mov     [eax+4], dl
mov     edx, ecx
shr     edx, 10h
mov     [eax+5], dl
mov     [eax+7], cl
mov     edx, ecx
shr     edx, 8
mov     [eax+6], dl
mov     eax, [esi+38h]
lea     edi, [eax+edi*4+8]
mov     eax, [ebp+arg_4]
mov     ecx, eax
shr     ecx, 18h
mov     [edi], cl
mov     ecx, eax
shr     ecx, 8
mov     edx, eax
mov     [edi+2], cl
mov     ecx, [ebp+var_4]
shr     edx, 10h
mov     [edi+1], dl
mov     [edi+3], al
test    ecx, ecx
jz      short loc_1001f1de
mov     edx, [ebp+arg_0]
test    byte ptr [edx+16h], 4
jnz     short loc_1001f1de
mov     edx, [ecx+44h]
movzx   ecx, word ptr [edx+18h]
test    cl, 2
jz      short loc_1001f1de
mov     esi, [edx+10h]
cmp     dword ptr [esi+60h], 0
jnz     short loc_1001f1de
or      ecx, 20h
mov     [edx+18h], cx
push    eax
mov     eax, [ebp+arg_0]
call    sub_100197d0
add     esp, 4
mov     esi, eax
jmp     short loc_1001f26c
mov     esi, ecx
cmp     [ebp+var_4], 0
jnz     short loc_1001f20d
mov     ecx, [ebp+arg_4]
lea     eax, [ebp+var_4]
push    eax
xor     eax, eax
call    sub_1001ab30
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_1001f26c
mov     ecx, [ebp+var_4]
mov     edx, [ecx+44h]
push    edx
call    sub_100158a0
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_1001f26c
mov     edi, [ebp+var_4]
mov     eax, [edi+38h]
mov     ecx, ebx
shr     ecx, 18h
mov     [eax], cl
mov     [eax+3], bl
mov     edx, ebx
shr     edx, 10h
mov     [eax+1], dl
mov     edx, [ebp+var_c]
mov     ecx, ebx
shr     ecx, 8
mov     [eax+2], cl
mov     eax, [edi+38h]
mov     ecx, [ebp+arg_4]
mov     [eax+4], esi
mov     eax, [edx+38h]
mov     edx, ecx
shr     edx, 18h
mov     [eax+20h], dl
mov     edx, ecx
shr     edx, 10h
mov     [eax+21h], dl
mov     edx, ecx
shr     edx, 8
mov     [eax+22h], dl
mov     [eax+23h], cl
mov     eax, [ebp+var_4]
test    eax, eax
jz      short loc_1001f282
mov     byte ptr [eax], 0
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     eax, [ebp+var_8]
test    eax, eax
jz      short loc_1001f295
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
cmp     dword ptr [esi], 0
jnz     short loc_1001f2b8
mov     ecx, [eax+48h]
mov     edx, [eax+34h]
push    ecx
push    edx
call    sub_1001ef60
add     esp, 8
mov     [esi], eax
pop     ecx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 2ch
push    ebx
push    esi
push    edi
mov     edi, eax
mov     esi, ecx
mov     ebx, [esi+34h]
push    edi
push    esi
lea     eax, [esp+40h+var_1c]
call    sub_10019f70
mov     ax, [esp+40h+var_4]
add     esp, 8
test    ax, ax
jz      short loc_1001f33f
movzx   ecx, word ptr [esi+12h]
add     ecx, [esi+38h]
movzx   eax, ax
add     eax, edi
lea     edx, [eax+3]
cmp     edx, ecx
ja      loc_1001f470
movzx   esi, byte ptr [eax]
movzx   ecx, byte ptr [eax+1]
movzx   edx, byte ptr [eax+2]
movzx   eax, byte ptr [eax+3]
shl     esi, 8
or      esi, ecx
mov     ecx, [ebx+24h]
shl     esi, 8
or      esi, edx
movzx   edx, [esp+38h+var_6]
shl     esi, 8
or      esi, eax
mov     eax, [esp+38h+var_c]
sub     eax, edx
sub     ecx, 4
xor     edx, edx
lea     eax, [eax+ecx-1]
div     ecx
xor     edi, edi
cmp     eax, edi
jnz     short loc_1001f34e
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+38h+var_20]
xor     edi, edi
dec     eax
mov     [esp+38h+var_20], eax
mov     [esp+38h+var_24], edi
mov     [esp+38h+var_28], edi
cmp     esi, 2
jb      loc_1001f457
cmp     esi, [ebx+2ch]
ja      loc_1001f457
cmp     eax, edi
jz      short loc_1001f391
lea     ecx, [esp+38h+var_24]
push    ecx
lea     edx, [esp+3ch+var_28]
push    edx
push    esi
push    ebx
call    sub_1001d480
add     esp, 10h
cmp     eax, edi
jnz     short loc_1001f341
mov     edi, [esp+38h+var_28]
test    edi, edi
jnz     short loc_1001f3de
mov     ecx, [ebx]
lea     eax, [esp+38h+var_28]
push    eax
push    edi
mov     [esp+40h+var_28], edi
mov     edi, [ecx+0b4h]
push    esi
call    sub_10010550
mov     ecx, [esp+44h+var_28]
add     esp, 0ch
test    ecx, ecx
jz      short loc_1001f3d6
mov     eax, [ecx+8]
mov     edx, [ecx+4]
cmp     esi, 1
mov     [eax+44h], ecx
setnz   cl
dec     cl
and     cl, 64h
mov     [eax+38h], edx
mov     [eax+34h], ebx
mov     [eax+48h], esi
mov     [eax+5], cl
jmp     short loc_1001f3d8
xor     eax, eax
mov     edi, eax
test    eax, eax
jz      short loc_1001f408
mov     edx, [edi+44h]
cmp     word ptr [edx+1ah], 1
jz      short loc_1001f408
push    offset ac0d89d4a975292
push    0cfe4h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     esi, 0bh
jmp     short loc_1001f416
push    esi
push    ebx
mov     eax, edi
call    sub_1001ef60
add     esp, 8
mov     esi, eax
test    edi, edi
jz      short loc_1001f432
mov     eax, [edi+44h]
test    eax, eax
jz      short loc_1001f432
mov     edi, [eax+10h]
call    sub_100106d0
push    edi
call    sub_10015290
add     esp, 4
test    esi, esi
jnz     short loc_1001f44e
cmp     [esp+38h+var_20], 0
mov     esi, [esp+38h+var_24]
jnz     loc_1001f348
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0cfd0h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 3ch
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, eax
mov     esi, [edi+34h]
mov     [ebp+var_1c], ebx
mov     [ebp+var_10], ebx
mov     [ebp+var_14], esi
mov     [ebp+var_18], ebx
mov     [ebp+var_4], ebx
cmp     [edi+3], bl
jnz     short loc_1001f4ab
mov     [ebp+var_4], 4
cmp     [edi+4], bl
jz      short loc_1001f4cf
mov     eax, [ebp+arg_14]
add     eax, [ebp+arg_18]
mov     ecx, [ebp+var_4]
cdq
push    edx
mov     edx, [ebp+arg_0]
push    eax
lea     ecx, [ecx+edx]
call    sub_1000c550
add     esp, 8
add     [ebp+var_4], eax
jmp     short loc_1001f4d5
mov     [ebp+arg_18], ebx
mov     [ebp+arg_14], ebx
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
push    ecx
mov     ecx, [ebp+var_4]
add     ecx, [ebp+arg_0]
push    edx
call    sub_1000c550
mov     edx, [ebp+arg_0]
add     [ebp+var_4], eax
push    edx
push    edi
lea     eax, [ebp+var_3c]
call    sub_10019f70
mov     ecx, [ebp+arg_14]
mov     eax, [ebp+arg_18]
add     eax, ecx
add     esp, 10h
mov     [ebp+var_8], eax
cmp     [edi+2], bl
jz      short loc_1001f513
mov     edx, [ebp+arg_10]
mov     [ebp+arg_14], ebx
jmp     short loc_1001f53d
cmp     [ebp+arg_c], ebx
jg      loc_1001f72f
mov     ecx, [ebp+arg_8]
jl      short loc_1001f52d
cmp     ecx, 7fffffffh
ja      loc_1001f72f
mov     edx, [ebp+arg_4]
test    edx, edx
jz      loc_1001f72f
add     eax, ecx
mov     [ebp+var_8], eax
movzx   edi, [ebp+var_26]
mov     [ebp+arg_18], ecx
movzx   ecx, [ebp+var_22]
mov     [ebp+src], edx
mov     edx, [ebp+arg_1c]
mov     [edx], ecx
mov     edx, [ebp+arg_0]
mov     ecx, [ebp+var_4]
add     ecx, edx
mov     [ebp+arg_0], ecx
movzx   ecx, [ebp+var_24]
add     ecx, edx
mov     [ebp+var_4], ecx
test    eax, eax
jle     loc_1001f709
jmp     short loc_1001f576
mov     esi, [ebp+var_14]
mov     eax, [ebp+var_8]
mov     ecx, [ebp+arg_18]
test    edi, edi
jnz     loc_1001f698
cmp     byte ptr [esi+11h], 0
mov     [ebp+var_20], ebx
jz      short loc_1001f5da
mov     edi, dword_1008031c
inc     ebx
cmp     ebx, 2
jnb     short loc_1001f59a
xor     ecx, ecx
jmp     short loc_1001f5c7
mov     eax, 0cccccccdh
mul     dword ptr [esi+24h]
mov     esi, edx
shr     esi, 2
inc     esi
xor     edx, edx
lea     eax, [ebx-2]
div     esi
xor     edx, edx
mov     ecx, eax
imul    ecx, esi
mov     esi, [ebp+var_14]
mov     eax, edi
div     dword ptr [esi+20h]
add     ecx, 2
inc     eax
cmp     ecx, eax
jnz     short loc_1001f5c7
inc     ecx
cmp     ecx, ebx
jz      short loc_1001f590
xor     edx, edx
mov     eax, edi
div     dword ptr [esi+20h]
inc     eax
cmp     ebx, eax
jz      short loc_1001f590
mov     [ebp+var_18], ebx
push    0
push    ebx
lea     edx, [ebp+var_18]
push    edx
lea     eax, [ebp+var_1c]
push    eax
push    esi
call    sub_1001e690
mov     edi, [ebp+var_1c]
mov     ebx, [ebp+var_18]
add     esp, 14h
cmp     byte ptr [esi+11h], 0
mov     [ebp+arg_0], eax
jz      short loc_1001f63a
test    eax, eax
jnz     loc_1001f712
mov     eax, [ebp+var_20]
test    eax, eax
lea     ecx, [ebp+arg_0]
push    ecx
push    eax
setnz   dl
add     dl, 3
movzx   eax, dl
push    eax
push    esi
mov     eax, ebx
call    sub_10019c10
add     esp, 10h
cmp     [ebp+arg_0], 0
jz      short loc_1001f644
test    edi, edi
jz      short loc_1001f63a
mov     ecx, [edi+44h]
push    ecx
call    sub_100154a0
add     esp, 4
cmp     [ebp+arg_0], 0
jnz     loc_1001f712
mov     eax, [ebp+var_4]
mov     edx, ebx
shr     edx, 18h
mov     [eax], dl
mov     ecx, ebx
mov     edx, ebx
shr     ecx, 10h
shr     edx, 8
mov     [eax+1], cl
mov     [eax+2], dl
mov     [eax+3], bl
mov     eax, [ebp+var_10]
test    eax, eax
jz      short loc_1001f674
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     eax, [edi+38h]
mov     ecx, [ebp+arg_18]
mov     dword ptr [eax], 0
mov     [ebp+var_4], eax
mov     eax, [edi+38h]
add     eax, 4
mov     [ebp+var_10], edi
mov     edi, [esi+24h]
mov     [ebp+arg_0], eax
mov     eax, [ebp+var_8]
sub     edi, 4
mov     esi, eax
cmp     eax, edi
jle     short loc_1001f6a0
mov     esi, edi
test    ecx, ecx
jle     short loc_1001f6ba
cmp     esi, ecx
jle     short loc_1001f6aa
mov     esi, ecx
mov     ecx, [ebp+src]
mov     edx, [ebp+arg_0]
push    esi
push    ecx
push    edx
call    memcpy
jmp     short loc_1001f6c6
mov     eax, [ebp+arg_0]
push    esi
push    0
push    eax
call    memset
mov     eax, [ebp+arg_18]
sub     [ebp+var_8], esi
add     [ebp+arg_0], esi
add     [ebp+src], esi
sub     eax, esi
add     esp, 0ch
sub     edi, esi
mov     [ebp+arg_18], eax
test    eax, eax
jnz     short loc_1001f6ec
mov     ecx, [ebp+arg_14]
mov     edx, [ebp+arg_10]
mov     [ebp+arg_18], ecx
mov     [ebp+src], edx
cmp     [ebp+var_8], 0
jg      loc_1001f570
mov     eax, [ebp+var_10]
test    eax, eax
jz      short loc_1001f709
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_10]
test    eax, eax
jz      short loc_1001f725
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0d032h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
sub     esp, 8
cmp     dword ptr [eax], 0
push    esi
push    edi
jnz     loc_1001f839
mov     ecx, [ebx+40h]
movzx   eax, byte ptr [ecx+edx*2]
mov     esi, [ebx+38h]
lea     edi, [ecx+edx*2]
movzx   ecx, byte ptr [edi+1]
shl     eax, 8
or      eax, ecx
movzx   ecx, byte ptr [ebx+5]
movzx   edx, byte ptr [ecx+esi+5]
mov     [ebp+var_8], ecx
movzx   ecx, byte ptr [ecx+esi+6]
shl     edx, 8
or      edx, ecx
mov     [ebp+var_4], esi
cmp     eax, edx
jb      short loc_1001f817
mov     ecx, [ebp+size]
mov     edx, [ebx+34h]
add     ecx, eax
cmp     ecx, [edx+24h]
ja      short loc_1001f817
mov     edx, [ebp+size]
push    edx
push    ebx
call    sub_1001a570
add     esp, 8
test    eax, eax
jz      short loc_1001f7d0
mov     ecx, [ebp+arg_4]
mov     [ecx], eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
movzx   edx, word ptr [ebx+10h]
mov     eax, [ebx+40h]
lea     ecx, [eax+edx*2-2]
cmp     edi, ecx
jnb     short loc_1001f7ee
sub     ecx, edi
dec     ecx
shr     ecx, 1
lea     esi, [edi+2]
inc     ecx
rep movsw
mov     esi, [ebp+var_4]
mov     eax, [ebp+var_8]
mov     ecx, 0ffffh
add     [ebx+10h], cx
movzx   edx, word ptr [ebx+10h]
shr     edx, 8
mov     [eax+esi+3], dl
mov     cl, [ebx+10h]
mov     [eax+esi+4], cl
add     word ptr [ebx+0eh], 2
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    0d0b1h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
mov     edx, [ebp+arg_4]
add     esp, 10h
mov     dword ptr [edx], 0bh
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     ebx, eax
mov     eax, [ebp+arg_c]
mov     edi, eax
neg     edi
sbb     edi, edi
mov     esi, ecx
mov     ecx, [ebp+arg_10]
and     edi, 4
cmp     dword ptr [ecx], 0
mov     [ebp+var_4], 0
jnz     loc_1001f9d8
cmp     byte ptr [esi+1], 0
jnz     loc_1001f97b
movzx   ecx, word ptr [esi+0eh]
lea     edx, [ebx+2]
cmp     edx, ecx
jg      loc_1001f97b
mov     edx, [esi+44h]
push    edx
call    sub_100158a0
add     esp, 4
test    eax, eax
jz      short loc_1001f8a1
mov     ecx, [ebp+arg_10]
mov     [ecx], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   eax, word ptr [esi+0ch]
movzx   ecx, word ptr [esi+10h]
mov     edx, [esi+38h]
mov     [ebp+var_8], edx
lea     edx, [eax+ecx*2]
mov     ecx, [ebp+arg_0]
mov     [ebp+var_c], edx
lea     edx, [eax+ecx*2]
lea     eax, [ebp+var_4]
push    eax
push    ebx
mov     eax, esi
mov     [ebp+var_10], edx
call    sub_1001a380
add     esp, 8
test    eax, eax
jnz     short loc_1001f895
mov     eax, [ebp+arg_4]
inc     word ptr [esi+10h]
mov     edx, 0fffeh
sub     edx, ebx
add     [esi+0eh], dx
sub     ebx, edi
push    ebx
mov     ebx, [ebp+var_8]
lea     ecx, [edi+eax]
lea     edx, [ebx+edi]
add     edx, [ebp+var_4]
push    ecx
push    edx
call    memcpy
mov     eax, [ebp+arg_c]
mov     edx, [ebp+var_4]
add     esp, 0ch
test    eax, eax
jz      short loc_1001f924
mov     ecx, eax
shr     ecx, 18h
mov     [ebx+edx], cl
mov     ecx, eax
shr     ecx, 10h
mov     [ebx+edx+1], cl
mov     ecx, eax
shr     ecx, 8
mov     [ebx+edx+2], cl
mov     [ebx+edx+3], al
mov     eax, [ebp+var_c]
mov     ecx, [ebp+var_10]
add     eax, ebx
add     ecx, ebx
cmp     eax, ecx
jbe     short loc_1001f940
mov     di, [eax-2]
mov     [eax], di
add     eax, 0fffffffeh
cmp     eax, ecx
ja      short loc_1001f932
mov     [ecx+1], dl
mov     eax, edx
sar     eax, 8
mov     [ecx], al
movzx   ecx, byte ptr [esi+5]
mov     dl, [esi+11h]
mov     [ecx+ebx+3], dl
movzx   eax, byte ptr [esi+5]
mov     cl, [esi+10h]
mov     [eax+ebx+4], cl
mov     edx, [esi+34h]
cmp     byte ptr [edx+11h], 0
jz      short loc_1001f9d8
mov     ebx, [ebp+arg_10]
mov     edi, [ebp+arg_4]
call    sub_1001a160
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_8]
test    ecx, ecx
jz      short loc_1001f99f
mov     eax, [ebp+arg_4]
sub     ebx, edi
lea     edx, [edi+eax]
push    ebx
push    edx
add     edi, ecx
push    edi
call    memcpy
mov     ecx, [ebp+arg_8]
mov     eax, [ebp+arg_c]
add     esp, 0ch
jmp     short loc_1001f9a2
mov     ecx, [ebp+arg_4]
test    eax, eax
jz      short loc_1001f9c0
mov     edx, eax
shr     edx, 18h
mov     [ecx], dl
mov     edx, eax
shr     edx, 10h
mov     [ecx+1], dl
mov     edx, eax
shr     edx, 8
mov     [ecx+2], dl
mov     [ecx+3], al
mov     al, [esi+1]
movzx   edx, al
inc     al
mov     [esi+1], al
mov     ax, word ptr [ebp+arg_0]
mov     [esi+edx*4+20h], ecx
mov     [esi+edx*2+14h], ax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
mov     ecx, [eax+38h]
movzx   edx, byte ptr [eax+5]
mov     [ebp+var_4], ecx
mov     ecx, [eax+34h]
push    ebx
mov     ebx, [ecx+24h]
mov     ecx, [ebp+arg_4]
push    esi
mov     [ebp+var_8], edx
mov     edx, [eax+40h]
lea     esi, [ecx-1]
push    edi
mov     [ebp+var_c], ebx
lea     edi, [edx+ecx*2]
test    esi, esi
js      short loc_1001fa48
mov     eax, [ebp+arg_c]
movzx   eax, word ptr [eax+esi*2]
mov     edx, [ebp+arg_8]
sub     ebx, eax
mov     ecx, ebx
sar     ecx, 8
sub     edi, 2
push    eax
mov     [edi], cl
mov     ecx, [ebp+var_4]
mov     [edi+1], bl
mov     eax, [edx+esi*4]
push    eax
lea     edx, [ebx+ecx]
push    edx
call    memcpy
add     esp, 0ch
dec     esi
jns     short loc_1001fa12
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
mov     edi, [ebp+var_4]
mov     esi, [ebp+var_8]
mov     edx, ecx
sar     edx, 8
mov     [esi+edi+3], dl
mov     edx, esi
mov     esi, edi
mov     [edx+esi+4], cl
mov     esi, [ebp+var_8]
mov     edx, ebx
sar     edx, 8
mov     [esi+edi+5], dl
mov     edx, esi
mov     esi, edi
mov     [edx+esi+6], bl
lea     edx, [ecx+ecx]
sub     ebx, edx
sub     ebx, [ebp+var_c]
pop     edi
add     [eax+0eh], bx
pop     esi
mov     [eax+10h], cx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
mov     ebx, [ebp+arg_4]
cmp     word ptr [ebx+10h], 0
mov     eax, [ebx+34h]
push    esi
push    edi
mov     [ebp+var_18], eax
ja      short loc_1001face
push    offset ac0d89d4a975292
push    0d18ah
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    0
push    0
lea     ecx, [ebp+var_10]
push    ecx
lea     edx, [ebp+var_14]
push    edx
push    eax
call    sub_1001e690
add     esp, 14h
mov     [ebp+var_4], eax
test    eax, eax
jnz     loc_1001fc0b
mov     eax, [ebx+20h]
mov     edi, [ebp+arg_8]
mov     [ebp+var_c], eax
push    eax
add     edi, 4
mov     eax, ebx
mov     [ebp+var_1c], edi
call    sub_1001a0a0
mov     esi, [ebp+var_14]
movzx   eax, ax
add     esp, 4
push    0dh
mov     [ebp+var_8], eax
call    sub_1001aa60
add     esp, 4
lea     ecx, [ebp+var_8]
push    ecx
lea     edx, [ebp+var_c]
push    edx
push    1
push    esi
call    sub_1001f9e0
mov     eax, [ebp+var_18]
add     esp, 10h
cmp     byte ptr [eax+11h], 0
jz      short loc_1001fb6b
mov     edx, [ebp+arg_0]
lea     ecx, [ebp+var_4]
push    ecx
mov     ecx, [edx+48h]
push    ecx
push    5
push    eax
mov     eax, [ebp+var_10]
call    sub_10019c10
mov     dx, word ptr [ebp+var_8]
add     esp, 10h
cmp     dx, [esi+0ah]
jbe     short loc_1001fb6b
mov     edi, [ebp+var_c]
lea     ebx, [ebp+var_4]
call    sub_1001a160
mov     ebx, [ebp+arg_4]
mov     edi, [ebp+var_1c]
movzx   eax, word ptr [ebx+10h]
mov     ecx, [ebx+40h]
movzx   edx, byte ptr [ecx+eax*2-1]
lea     ecx, [ecx+eax*2]
movzx   eax, byte ptr [ecx-2]
movzx   ecx, word ptr [ebx+12h]
shl     eax, 8
or      eax, edx
and     eax, ecx
add     eax, [ebx+38h]
lea     ecx, [eax+9]
nop
mov     dl, [eax]
inc     eax
and     dl, 80h
jz      short loc_1001fb9c
cmp     eax, ecx
jb      short loc_1001fb90
lea     edx, [eax+9]
nop
mov     cl, [eax]
mov     [edi], cl
inc     edi
inc     eax
and     cl, 80h
jz      short loc_1001fbaf
cmp     eax, edx
jb      short loc_1001fba0
mov     ecx, [ebx+48h]
lea     eax, [ebp+var_4]
push    eax
push    ecx
mov     ecx, [ebp+arg_8]
mov     eax, edi
mov     edi, [ebp+arg_0]
movzx   edx, word ptr [edi+10h]
push    0
push    ecx
sub     eax, ecx
push    edx
mov     ecx, edi
call    sub_1001f840
movzx   eax, byte ptr [edi+5]
mov     ecx, [edi+38h]
lea     eax, [eax+ecx+8]
mov     ecx, [ebp+var_10]
mov     edx, ecx
shr     edx, 18h
mov     [eax], dl
mov     edx, ecx
shr     edx, 10h
mov     [eax+1], dl
mov     edx, ecx
shr     edx, 8
add     esp, 14h
mov     [eax+2], dl
mov     [eax+3], cl
test    esi, esi
jz      short loc_1001fc0b
mov     eax, [esi+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
mov     esi, eax
mov     eax, [ebp+arg_0]
cmp     dword ptr [eax], 0
push    edi
jnz     loc_1001fccc
mov     edx, [ebx+38h]
mov     edi, [ebx+48h]
mov     ecx, [esi+34h]
mov     [ebp+var_4], edx
movzx   edx, byte ptr [esi+5]
dec     edi
mov     [ebp+var_8], ecx
mov     ecx, [esi+38h]
movzx   eax, byte ptr [edx+ecx+5]
neg     edi
sbb     edi, edi
add     edx, ecx
mov     [ebp+src], edx
movzx   edx, byte ptr [edx+6]
shl     eax, 8
or      eax, edx
mov     edx, [ebp+var_8]
mov     edx, [edx+24h]
sub     edx, eax
push    edx
add     ecx, eax
add     eax, [ebp+var_4]
push    ecx
and     edi, 0ffffff9ch
push    eax
add     edi, 64h
call    memcpy
movzx   eax, word ptr [esi+10h]
movzx   ecx, word ptr [esi+0ch]
add     edi, [ebp+var_4]
add     esp, 0ch
lea     edx, [ecx+eax*2]
mov     eax, [ebp+src]
push    edx
push    eax
push    edi
call    memcpy
add     esp, 0ch
mov     esi, ebx
mov     byte ptr [ebx], 0
call    sub_1001a850
test    eax, eax
jz      short loc_1001fcb7
mov     edx, [ebp+arg_0]
mov     [edx], eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_8]
cmp     byte ptr [eax+11h], 0
jz      short loc_1001fccc
mov     eax, ebx
call    sub_1001c0c0
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0c8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     ebx, edx
xor     edx, edx
push    edi
mov     edi, [eax+34h]
mov     [ebp+var_74], eax
mov     [ebp+var_98], ecx
mov     [ebp+var_4c], edx
mov     [ebp+var_6c], edx
mov     [ebp+var_50], edx
mov     [ebp+var_60], edx
mov     [ebp+var_64], edx
mov     [ebp+var_44], edx
mov     [ebp+var_48], edi
cmp     ecx, edx
jnz     short loc_1001fd36
lea     eax, [edx+7]
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
movzx   edx, word ptr [eax+10h]
movzx   ecx, byte ptr [eax+1]
lea     esi, [ecx+edx]
cmp     esi, 2
jge     short loc_1001fd4f
mov     [ebp+var_38], 0
jmp     short loc_1001fd74
test    ebx, ebx
jnz     short loc_1001fd58
mov     [ebp+var_38], ebx
jmp     short loc_1001fd6c
cmp     ebx, esi
jnz     short loc_1001fd68
mov     ebx, [ebp+arg_8]
lea     esi, [esi+ebx-2]
mov     [ebp+var_38], esi
jmp     short loc_1001fd6c
dec     ebx
mov     [ebp+var_38], ebx
mov     esi, 2
sub     esi, [ebp+arg_8]
lea     ebx, [esi+1]
mov     [ebp+var_58], ebx
mov     ebx, [ebp+var_38]
sub     ebx, ecx
lea     ecx, [ebx+esi]
cmp     ecx, edx
jnz     short loc_1001fd99
movzx   ecx, byte ptr [eax+5]
mov     edx, [eax+38h]
lea     ecx, [ecx+edx+8]
mov     [ebp+var_84], ecx
jmp     short loc_1001fdba
mov     edx, [eax+40h]
lea     edx, [edx+ecx*2]
movzx   ecx, byte ptr [edx+1]
movzx   edx, byte ptr [edx]
shl     edx, 8
or      ecx, edx
movzx   edx, word ptr [eax+12h]
and     ecx, edx
add     ecx, [eax+38h]
mov     [ebp+var_84], ecx
movzx   eax, byte ptr [ecx]
movzx   edx, byte ptr [ecx+1]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
lea     ebx, [ebp+esi*4+var_90]
push    ebx
push    eax
push    edi
mov     [ebp+var_78], eax
call    sub_1001ab80
add     esp, 0ch
mov     [ebp+var_30], eax
test    eax, eax
jnz     loc_1001ff5d
mov     ebx, [ebx]
movzx   eax, byte ptr [ebx+1]
add     eax, [ebp+var_6c]
movzx   edx, word ptr [ebx+10h]
mov     ecx, esi
lea     eax, [eax+edx+1]
dec     esi
mov     [ebp+var_6c], eax
test    ecx, ecx
jz      loc_1001ff7b
mov     ebx, [ebp+var_74]
movzx   edx, word ptr [ebx+14h]
mov     eax, [ebp+var_38]
lea     ecx, [eax+esi]
cmp     ecx, edx
jnz     short loc_1001fe74
cmp     byte ptr [ebx+1], 0
jz      short loc_1001fe74
mov     eax, [ebx+20h]
movzx   edi, byte ptr [eax]
movzx   edx, byte ptr [eax+1]
movzx   ecx, byte ptr [eax+2]
shl     edi, 8
or      edi, edx
movzx   edx, byte ptr [eax+3]
shl     edi, 8
or      edi, ecx
shl     edi, 8
mov     [ebp+esi*4+src], eax
or      edi, edx
push    eax
mov     eax, ebx
mov     [ebp+var_78], edi
call    sub_1001a0a0
movzx   eax, ax
add     esp, 4
mov     [ebp+esi*4+var_18], eax
mov     byte ptr [ebx+1], 0
jmp     loc_1001ff3d
movzx   ecx, byte ptr [ebx+1]
mov     edx, [ebx+40h]
sub     eax, ecx
add     eax, esi
movzx   ecx, byte ptr [edx+eax*2]
lea     eax, [edx+eax*2]
movzx   edx, byte ptr [eax+1]
movzx   eax, word ptr [ebx+12h]
shl     ecx, 8
or      ecx, edx
and     ecx, eax
add     ecx, [ebx+38h]
movzx   eax, byte ptr [ecx]
movzx   edx, byte ptr [ecx+1]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
mov     [ebp+var_78], eax
push    ecx
mov     eax, ebx
mov     [ebp+esi*4+src], ecx
call    sub_1001a0a0
mov     ecx, [ebp+var_48]
movzx   edi, ax
add     esp, 4
test    byte ptr [ecx+16h], 4
mov     [ebp+esi*4+var_18], edi
jz      short loc_1001ff22
mov     eax, [ebp+esi*4+src]
sub     eax, [ebx+38h]
lea     edx, [edi+eax]
cmp     edx, [ecx+24h]
jg      loc_10020800
mov     ecx, [ebp+esi*4+src]
push    edi
push    ecx
mov     ecx, [ebp+var_98]
add     ecx, eax
push    ecx
call    memcpy
mov     edx, [ebp+var_98]
sub     edx, [ebx+38h]
add     esp, 0ch
add     edx, [ebp+esi*4+src]
mov     [ebp+esi*4+src], edx
movzx   ecx, byte ptr [ebx+1]
mov     edx, [ebp+var_38]
lea     eax, [ebp+var_30]
push    eax
sub     edx, ecx
push    edi
add     edx, esi
call    sub_1001f760
mov     edi, [ebp+var_78]
add     esp, 8
mov     edx, [ebp+var_48]
lea     ebx, [ebp+esi*4+var_90]
push    ebx
push    edi
push    edx
call    sub_1001ab80
add     esp, 0ch
mov     [ebp+var_30], eax
test    eax, eax
jz      loc_1001fdf8
lea     eax, ds:4[esi*4]
push    eax
lea     ecx, [ebp+var_90]
push    0
push    ecx
call    memset
add     esp, 0ch
jmp     loc_10020836
mov     edx, [ebp+var_48]
mov     edi, [ebp+var_58]
lea     esi, [eax+3]
mov     eax, [edx+20h]
lea     ecx, [eax+50h]
mov     [ebp+var_3c], ecx
imul    ecx, edi
and     esi, 0fffffffch
lea     edx, [esi+esi*2]
add     ecx, eax
lea     eax, [ecx+edx*2]
call    sub_10009540
mov     [ebp+var_44], eax
test    eax, eax
jnz     short loc_1001ffb3
mov     [ebp+var_30], 7
jmp     loc_10020836
lea     eax, [eax+esi*4]
mov     [ebp+var_40], eax
lea     eax, [eax+esi*2]
mov     [ebp+var_5c], eax
mov     eax, [ebp+var_90]
movzx   ecx, byte ptr [eax+3]
movzx   eax, byte ptr [eax+4]
add     cx, cx
add     cx, cx
movzx   edx, cx
mov     [ebp+var_70], edx
mov     [ebp+var_68], eax
mov     [ebp+var_34], 0
test    edi, edi
jle     loc_100201b7
mov     ecx, [ebp+var_58]
dec     ecx
mov     [ebp+var_94], ecx
mov     [ebp+var_6c], 0
mov     edx, [ebp+var_48]
mov     ebx, [edx+20h]
add     ebx, [ebp+var_6c]
mov     eax, [ebp+var_34]
add     ebx, [ebp+var_5c]
mov     ecx, 13h
mov     [ebp+eax*4+var_ac], ebx
mov     eax, [ebp+eax*4+var_90]
mov     esi, eax
mov     edi, ebx
rep movsd
lea     ecx, [ebx+4ch]
mov     [ebx+38h], ecx
mov     edx, [edx+20h]
mov     eax, [eax+38h]
push    edx
push    eax
push    ecx
call    memcpy
mov     al, [ebx+1]
movzx   edi, word ptr [ebx+10h]
movzx   ecx, al
add     esp, 0ch
add     edi, ecx
test    al, al
jz      short loc_100200c6
mov     [ebp+var_54], 0
test    edi, edi
jle     loc_1002011c
movzx   eax, byte ptr [ebx+1]
dec     eax
mov     ecx, [ebp+var_54]
js      short loc_10020078
lea     esi, [ebx+eax*2+14h]
movzx   edx, word ptr [esi]
cmp     edx, ecx
jg      short loc_10020072
jz      short loc_100200c0
dec     ecx
sub     esi, 2
dec     eax
jns     short loc_10020068
mov     edx, [ebx+40h]
movzx   eax, byte ptr [edx+ecx*2+1]
lea     ecx, [edx+ecx*2]
movzx   ecx, byte ptr [ecx]
movzx   edx, word ptr [ebx+12h]
shl     ecx, 8
or      eax, ecx
and     eax, edx
add     eax, [ebx+38h]
mov     ecx, [ebp+var_44]
mov     esi, [ebp+var_4c]
mov     [ecx+esi*4], eax
push    eax
mov     eax, ebx
call    sub_1001a0a0
mov     edx, [ebp+var_40]
mov     [edx+esi*2], ax
mov     eax, [ebp+var_54]
inc     eax
inc     esi
add     esp, 4
mov     [ebp+var_4c], esi
mov     [ebp+var_54], eax
cmp     eax, edi
jl      short loc_1002005a
jmp     short loc_1002011c
mov     eax, [ebx+eax*4+20h]
jmp     short loc_10020094
mov     edx, [ebx+38h]
movzx   eax, word ptr [ebx+12h]
movzx   ecx, word ptr [ebx+0ch]
mov     [ebp+var_7c], edx
test    edi, edi
jle     short loc_1002011c
mov     [ebp+var_80], eax
lea     esi, [edx+ecx]
mov     [ebp+var_54], edi
movzx   edx, byte ptr [esi]
movzx   ecx, byte ptr [esi+1]
mov     eax, [ebp+var_7c]
mov     edi, [ebp+var_4c]
shl     edx, 8
or      ecx, edx
and     ecx, [ebp+var_80]
add     eax, ecx
mov     ecx, [ebp+var_44]
mov     [ecx+edi*4], eax
push    eax
mov     eax, ebx
call    sub_1001a0a0
mov     edx, [ebp+var_40]
mov     [edx+edi*2], ax
inc     edi
add     esp, 4
add     esi, 2
dec     [ebp+var_54]
mov     [ebp+var_4c], edi
jnz     short loc_100200e1
mov     eax, [ebp+var_34]
cmp     eax, [ebp+var_94]
jge     short loc_100201a1
cmp     [ebp+var_68], 0
jnz     short loc_100201a1
mov     ecx, [ebp+var_40]
mov     esi, [ebp+var_4c]
mov     edi, [ebp+var_5c]
mov     edx, eax
movzx   eax, word ptr [ebp+edx*4+var_18]
mov     edx, [ebp+edx*4+src]
mov     [ecx+esi*2], ax
mov     ecx, [ebp+var_60]
push    eax
add     edi, ecx
push    edx
add     ecx, eax
push    edi
mov     [ebp+var_60], ecx
call    memcpy
mov     ecx, [ebp+var_70]
mov     edx, [ebp+var_44]
movzx   eax, cx
add     eax, edi
mov     [edx+esi*4], eax
mov     eax, [ebp+var_40]
sub     [eax+esi*2], cx
mov     ax, [eax+esi*2]
add     esp, 0ch
cmp     byte ptr [ebx+3], 0
jnz     short loc_1002018b
mov     eax, [ebx+38h]
mov     eax, [eax+8]
mov     ecx, edx
mov     edx, [ecx+esi*4]
mov     [edx], eax
jmp     short loc_1002019d
cmp     ax, 4
jnb     short loc_1002019d
mov     edx, [ebp+var_40]
mov     ecx, 4
mov     [edx+esi*2], cx
inc     esi
mov     [ebp+var_4c], esi
mov     eax, [ebp+var_34]
mov     ecx, [ebp+var_3c]
add     [ebp+var_6c], ecx
inc     eax
mov     [ebp+var_34], eax
cmp     eax, [ebp+var_58]
jl      loc_1001fffc
movzx   eax, word ptr [ebp+var_70]
mov     edx, [ebp+var_48]
mov     ecx, [edx+24h]
mov     ebx, [ebp+var_4c]
lea     esi, [ecx+eax-0ch]
xor     ecx, ecx
xor     edi, edi
xor     eax, eax
test    ebx, ebx
jle     short loc_10020203
mov     edx, [ebp+var_40]
movzx   edx, word ptr [edx+ecx*2]
lea     eax, [eax+edx+2]
cmp     eax, esi
jle     short loc_100201fe
sub     eax, edx
cmp     [ebp+var_68], 0
mov     [ebp+edi*4+var_18], eax
mov     [ebp+edi*4+var_2c], ecx
jz      short loc_100201f2
dec     ecx
inc     edi
xor     eax, eax
cmp     edi, 4
jg      loc_1002027b
inc     ecx
cmp     ecx, ebx
jl      short loc_100201d2
mov     [ebp+edi*4+var_2c], ebx
inc     edi
mov     [ebp+edi*4+var_1c], eax
lea     ebx, [edi-1]
mov     [ebp+var_3c], edi
mov     [ebp+var_34], ebx
test    ebx, ebx
jle     loc_100202b7
lea     ecx, [ecx+0]
mov     edx, [ebp+ebx*4+var_18]
mov     esi, [ebp+ebx*4+var_1c]
mov     eax, [ebp+ebx*4+var_30]
dec     eax
mov     ecx, eax
sub     ecx, [ebp+var_68]
inc     ecx
test    edx, edx
jz      short loc_1002025d
cmp     [ebp+arg_8], 0
jnz     short loc_100202a0
mov     edi, [ebp+var_40]
movzx   edi, word ptr [edi+eax*2]
mov     ebx, esi
sub     ebx, edi
mov     edi, [ebp+var_40]
movzx   edi, word ptr [edi+ecx*2]
sub     ebx, 2
lea     edi, [edi+edx+2]
cmp     edi, ebx
mov     ebx, [ebp+var_34]
jg      short loc_100202a0
mov     edi, [ebp+var_40]
movzx   ecx, word ptr [edi+ecx*2]
movzx   eax, word ptr [edi+eax*2]
lea     edx, [edx+ecx+2]
mov     ecx, 0fffffffeh
sub     ecx, eax
add     esi, ecx
dec     [ebp+ebx*4+var_30]
jmp     short loc_10020228
push    offset ac0d89d4a975292
push    0d363h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     [ebp+var_30], 0bh
jmp     loc_10020836
mov     edi, [ebp+var_3c]
mov     [ebp+ebx*4+var_18], edx
mov     [ebp+ebx*4+var_1c], esi
dec     ebx
mov     [ebp+var_34], ebx
test    ebx, ebx
jg      loc_10020220
mov     eax, [ebp+var_90]
cmp     dword ptr [eax+48h], 1
ja      short loc_100202cf
push    offset ac0d89d4a975292
push    0d3a1h
jmp     short loc_10020285
mov     edx, [eax+38h]
movzx   eax, byte ptr [edx]
xor     esi, esi
mov     [ebp+var_5c], eax
test    edi, edi
jle     loc_10020385
cmp     esi, [ebp+var_58]
jge     short loc_10020316
mov     eax, [ebp+esi*4+var_90]
mov     ecx, [eax+44h]
push    ecx
mov     [ebp+esi*4+var_18], eax
mov     [ebp+var_60], eax
mov     [ebp+esi*4+var_90], 0
call    sub_100158a0
inc     [ebp+var_50]
add     esp, 4
mov     [ebp+var_30], eax
test    eax, eax
jmp     short loc_10020376
cmp     [ebp+arg_8], 0
mov     eax, 1
jnz     short loc_10020324
mov     eax, [ebp+var_78]
mov     ecx, [ebp+var_48]
push    0
push    eax
lea     edx, [ebp+var_78]
push    edx
lea     eax, [ebp+var_60]
push    eax
push    ecx
call    sub_1001e690
add     esp, 14h
mov     [ebp+var_30], eax
test    eax, eax
jnz     loc_10020836
mov     ecx, [ebp+var_48]
mov     eax, [ebp+var_60]
inc     [ebp+var_50]
cmp     byte ptr [ecx+11h], 0
mov     [ebp+esi*4+var_18], eax
jz      short loc_1002037c
mov     eax, [eax+48h]
lea     edx, [ebp+var_30]
push    edx
mov     edx, [ebp+var_74]
mov     edx, [edx+48h]
push    edx
push    5
push    ecx
call    sub_10019c10
add     esp, 10h
cmp     [ebp+var_30], 0
jnz     loc_10020836
inc     esi
cmp     esi, edi
jl      loc_100202e2
cmp     esi, [ebp+var_58]
jge     short loc_100203d9
cmp     [ebp+var_30], 0
mov     ebx, [ebp+esi*4+var_90]
jnz     loc_10020836
mov     eax, [ebx+48h]
mov     ecx, [ebx+34h]
push    eax
push    ecx
mov     eax, ebx
call    sub_1001ef60
add     esp, 8
mov     [ebp+var_30], eax
test    eax, eax
jnz     loc_10020836
test    ebx, ebx
jz      short loc_100203c8
mov     edx, [ebx+44h]
push    edx
call    sub_100154a0
add     esp, 4
mov     [ebp+esi*4+var_90], 0
inc     esi
cmp     esi, [ebp+var_58]
jl      short loc_1002038a
lea     eax, [edi-1]
xor     ecx, ecx
test    eax, eax
jle     short loc_10020437
lea     eax, [ebp+ecx*4+var_18]
mov     [ebp+var_94], eax
mov     eax, [eax]
mov     esi, [eax+48h]
mov     [ebp+var_7c], eax
lea     eax, [ecx+1]
mov     ebx, ecx
mov     [ebp+var_80], eax
cmp     eax, edi
jge     short loc_1002042d
mov     edx, [ebp+eax*4+var_18]
mov     edx, [edx+48h]
cmp     edx, esi
jnb     short loc_1002040f
mov     ebx, eax
mov     esi, edx
inc     eax
cmp     eax, edi
jl      short loc_10020400
cmp     ebx, ecx
jle     short loc_1002042d
mov     ecx, [ebp+ebx*4+var_18]
mov     edx, [ebp+var_94]
lea     eax, [ebp+ebx*4+var_18]
mov     [edx], ecx
mov     ecx, [ebp+var_7c]
mov     [eax], ecx
mov     ecx, [ebp+var_80]
lea     eax, [edi-1]
cmp     ecx, eax
jl      short loc_100203e2
mov     esi, [ebp+var_50]
mov     eax, [ebp+esi*4+var_1c]
mov     eax, [eax+48h]
mov     ecx, [ebp+var_84]
mov     edx, eax
shr     edx, 18h
mov     [ecx], dl
mov     edx, eax
shr     edx, 10h
mov     [ecx+1], dl
mov     edx, eax
xor     ebx, ebx
shr     edx, 8
mov     [ecx+2], dl
mov     [ecx+3], al
mov     [ebp+var_34], ebx
cmp     esi, ebx
jle     loc_10020576
mov     edi, edi
mov     eax, [ebp+var_5c]
mov     edi, [ebp+var_34]
mov     esi, [ebp+edi*4+var_18]
push    eax
call    sub_1001aa60
mov     ecx, [ebp+var_40]
mov     eax, [ebp+var_44]
mov     edi, [ebp+edi*4+var_2c]
add     esp, 4
lea     edx, [ecx+ebx*2]
push    edx
lea     ecx, [eax+ebx*4]
push    ecx
mov     edx, edi
sub     edx, ebx
push    edx
push    esi
call    sub_1001f9e0
mov     ebx, edi
add     esp, 10h
cmp     ebx, [ebp+var_4c]
jge     loc_10020566
mov     eax, [ebp+var_44]
mov     ecx, [eax+ebx*4]
mov     edx, [ebp+var_40]
movzx   eax, word ptr [ebp+var_70]
mov     edi, [ebp+var_64]
add     edi, [ebp+var_98]
mov     [ebp+var_3c], ecx
movzx   ecx, word ptr [edx+ebx*2]
add     eax, ecx
cmp     byte ptr [esi+3], 0
jnz     short loc_100204e0
mov     edx, [ebp+var_3c]
mov     ecx, [esi+38h]
mov     edx, [edx]
mov     [ecx+8], edx
jmp     short loc_10020539
cmp     [ebp+var_68], 0
jz      short loc_1002051e
mov     eax, [ebp+var_44]
mov     ecx, [eax+ebx*4-4]
dec     ebx
push    ecx
push    esi
lea     eax, [ebp+var_c8]
call    sub_10019f70
mov     edx, [ebp+var_c4]
mov     eax, [ebp+var_c8]
push    edx
push    eax
lea     ecx, [edi+4]
mov     [ebp+var_3c], edi
call    sub_1000c550
add     esp, 10h
add     eax, 4
xor     edi, edi
jmp     short loc_10020539
sub     [ebp+var_3c], 4
cmp     ecx, 4
jnz     short loc_10020539
mov     ecx, [ebp+var_3c]
mov     eax, [ebp+var_74]
push    ecx
call    sub_1001a0a0
add     esp, 4
movzx   eax, ax
mov     ecx, [esi+48h]
add     [ebp+var_64], eax
lea     edx, [ebp+var_30]
push    edx
mov     edx, [ebp+var_3c]
push    ecx
mov     ecx, [ebp+var_38]
push    edi
push    edx
push    ecx
mov     ecx, [ebp+var_74]
call    sub_1001f840
add     esp, 14h
cmp     [ebp+var_30], 0
jnz     loc_10020836
inc     ebx
inc     [ebp+var_38]
mov     eax, [ebp+var_34]
inc     eax
mov     [ebp+var_34], eax
cmp     eax, [ebp+var_50]
jl      loc_10020470
test    byte ptr [ebp+var_5c], 8
jnz     short loc_10020599
mov     edx, [ebp+var_58]
mov     eax, [ebp+edx*4+var_b0]
mov     ecx, [eax+38h]
mov     edx, [ebp+var_50]
mov     eax, [ebp+edx*4+var_1c]
mov     eax, [eax+38h]
mov     ecx, [ecx+8]
mov     [eax+8], ecx
cmp     [ebp+arg_4], 0
mov     esi, [ebp+var_18]
jz      short loc_100205e8
mov     ebx, [ebp+var_74]
cmp     word ptr [ebx+10h], 0
jnz     short loc_100205e8
movzx   edx, byte ptr [ebx+5]
cmp     dx, [esi+0eh]
ja      short loc_100205e8
lea     eax, [ebp+var_30]
push    eax
mov     eax, esi
call    sub_1001fc20
add     esp, 4
cmp     [ebp+var_30], 0
jnz     loc_10020836
mov     ecx, [esi+48h]
mov     edx, [esi+34h]
push    ecx
push    edx
mov     eax, esi
call    sub_1001ef60
add     esp, 8
mov     [ebp+var_30], eax
jmp     loc_10020836
mov     eax, [ebp+var_48]
cmp     byte ptr [eax+11h], 0
jz      loc_10020836
mov     edi, [ebp+var_ac]
movzx   eax, byte ptr [edi+1]
mov     [ebp+var_38], esi
movzx   esi, word ptr [edi+10h]
xor     ebx, ebx
add     esi, eax
mov     [ebp+var_64], eax
cmp     eax, ebx
jz      short loc_10020617
movzx   eax, word ptr [edi+14h]
jmp     short loc_1002061a
or      eax, 0ffffffffh
mov     [ebp+var_34], eax
mov     [ebp+var_54], ebx
mov     [ebp+var_3c], ebx
cmp     [ebp+var_4c], ebx
jle     loc_1002079e
mov     [ebp+var_60], ebx
xor     ecx, ecx
cmp     ebx, esi
jnz     short loc_10020677
cmp     [ebp+var_68], ecx
setz    cl
mov     eax, [ebp+var_54]
mov     edi, [ebp+eax*4+var_a8]
movzx   edx, word ptr [edi+10h]
inc     eax
mov     [ebp+var_54], eax
mov     al, [edi+1]
movzx   esi, al
add     edx, ecx
add     esi, edx
add     esi, ebx
test    al, al
jz      short loc_10020670
movzx   eax, al
mov     [ebp+var_64], eax
movzx   eax, word ptr [edi+14h]
add     eax, ecx
add     eax, ebx
mov     [ebp+var_34], eax
jmp     short loc_10020673
mov     eax, [ebp+var_34]
cmp     ebx, esi
jz      short loc_1002063b
cmp     ebx, eax
jnz     short loc_1002068f
mov     edx, [ebp+var_64]
dec     edx
mov     ecx, 1
mov     [ebp+var_64], edx
test    edx, edx
jle     short loc_1002068f
inc     eax
mov     [ebp+var_34], eax
mov     edx, [ebp+var_60]
cmp     ebx, [ebp+edx+var_2c]
jnz     short loc_100206b7
mov     edx, [ebp+var_3c]
inc     edx
mov     [ebp+var_3c], edx
add     edx, edx
add     edx, edx
cmp     [ebp+var_68], 0
mov     [ebp+var_60], edx
mov     edx, [ebp+edx+var_18]
mov     [ebp+var_38], edx
jz      loc_10020794
test    ecx, ecx
jnz     short loc_100206ca
mov     ecx, [edi+48h]
mov     edx, [ebp+var_38]
cmp     ecx, [edx+48h]
jz      loc_10020794
cmp     word ptr [ebp+var_70], 0
jnz     short loc_10020711
mov     eax, [ebp+var_44]
mov     ecx, [eax+ebx*4]
mov     eax, [ebp+var_38]
lea     edx, [ebp+var_30]
push    edx
mov     edx, [eax+48h]
movzx   eax, byte ptr [ecx]
push    edx
movzx   edx, byte ptr [ecx+1]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
mov     edx, [ebp+var_48]
shl     eax, 8
push    5
or      eax, ecx
push    edx
call    sub_10019c10
mov     eax, [ebp+var_34]
add     esp, 10h
mov     ecx, [ebp+var_40]
mov     dx, [ecx+ebx*2]
mov     ecx, [ebp+var_38]
cmp     dx, [ecx+0ah]
jbe     short loc_10020794
cmp     [ebp+var_30], 0
mov     edx, [ebp+var_44]
mov     ecx, [edx+ebx*4]
mov     [ebp+var_5c], ecx
jnz     short loc_10020794
mov     eax, [ebp+var_38]
mov     edx, ecx
push    edx
push    eax
lea     eax, [ebp+var_c8]
call    sub_10019f70
mov     ax, word ptr [ebp+var_b0]
add     esp, 8
test    ax, ax
jz      short loc_10020791
movzx   ecx, ax
add     ecx, [ebp+var_5c]
mov     eax, [ebp+var_38]
lea     edx, [ebp+var_30]
push    edx
mov     edx, [eax+48h]
movzx   eax, byte ptr [ecx+1]
push    edx
movzx   edx, byte ptr [ecx]
shl     edx, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
mov     edx, [ebp+var_38]
shl     eax, 8
or      eax, ecx
mov     ecx, [edx+34h]
push    3
push    ecx
call    sub_10019c10
add     esp, 10h
mov     eax, [ebp+var_34]
inc     ebx
cmp     ebx, [ebp+var_4c]
jl      loc_1002062f
cmp     word ptr [ebp+var_70], 0
jnz     loc_10020836
xor     esi, esi
cmp     [ebp+var_50], esi
jle     loc_10020836
mov     ebx, [ebp+var_48]
mov     edi, [ebp+var_50]
lea     ebx, [ebx+0]
mov     eax, [ebp+esi*4+var_18]
mov     ecx, [eax+38h]
mov     eax, [eax+48h]
lea     edx, [ebp+var_30]
push    edx
movzx   edx, byte ptr [ecx+8]
push    eax
movzx   eax, byte ptr [ecx+9]
shl     edx, 8
or      eax, edx
movzx   edx, byte ptr [ecx+0ah]
movzx   ecx, byte ptr [ecx+0bh]
shl     eax, 8
or      eax, edx
shl     eax, 8
push    5
or      eax, ecx
push    ebx
call    sub_10019c10
inc     esi
add     esp, 10h
cmp     esi, edi
jl      short loc_100207c0
jmp     short loc_10020836
push    offset ac0d89d4a975292
push    0d2d8h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
lea     edx, ds:4[esi*4]
push    edx
lea     eax, [ebp+var_90]
push    0
push    eax
mov     [ebp+var_30], 0bh
call    memset
add     esp, 1ch
mov     esi, [ebp+var_44]
call    sub_10009650
mov     edi, [ebp+var_58]
xor     esi, esi
test    edi, edi
jle     short loc_1002086c
jmp     short loc_10020850
mov     eax, [ebp+esi*4+var_90]
test    eax, eax
jz      short loc_10020867
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
inc     esi
cmp     esi, edi
jl      short loc_10020850
mov     edi, [ebp+var_50]
xor     esi, esi
test    edi, edi
jle     short loc_1002088e
mov     eax, [ebp+esi*4+var_18]
test    eax, eax
jz      short loc_10020889
mov     edx, [eax+44h]
push    edx
call    sub_100154a0
add     esp, 4
inc     esi
cmp     esi, edi
jl      short loc_10020875
mov     ecx, [ebp+var_4]
mov     eax, [ebp+var_30]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+44h]
push    edi
mov     edi, [esi+34h]
xor     ebx, ebx
push    eax
mov     [ebp+var_c], ebx
mov     [ebp+var_8], ebx
call    sub_100158a0
add     esp, 4
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_10020925
mov     ecx, [esi+48h]
push    eax
push    ecx
lea     edx, [ebp+var_8]
push    edx
lea     eax, [ebp+var_c]
push    eax
push    edi
call    sub_1001e690
mov     ebx, [ebp+var_c]
lea     ecx, [ebp+var_4]
add     esp, 14h
mov     [ebp+var_4], eax
push    ecx
mov     eax, esi
call    sub_1001fc20
add     esp, 4
cmp     byte ptr [edi+11h], 0
jz      short loc_1002091f
mov     eax, [esi+48h]
lea     edx, [ebp+var_4]
push    edx
push    eax
mov     eax, [ebp+var_8]
push    5
push    edi
call    sub_10019c10
add     esp, 10h
cmp     [ebp+var_4], 0
jz      short loc_10020948
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx], 0
test    ebx, ebx
jz      short loc_1002093e
mov     edx, [ebx+44h]
push    edx
call    sub_100154a0
add     esp, 4
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   eax, byte ptr [esi+1]
add     eax, eax
push    eax
lea     ecx, [esi+14h]
push    ecx
lea     edx, [ebx+14h]
push    edx
call    memcpy
movzx   eax, byte ptr [esi+1]
add     eax, eax
add     esp, 0ch
add     eax, eax
push    eax
lea     ecx, [esi+20h]
push    ecx
lea     edx, [ebx+20h]
push    edx
call    memcpy
mov     al, [esi+1]
mov     [ebx+1], al
mov     ecx, [ebx+38h]
movzx   edx, byte ptr [ecx]
and     edx, 0fffffff7h
add     esp, 0ch
push    edx
call    sub_1001aa60
movzx   eax, byte ptr [esi+5]
mov     ecx, [esi+38h]
lea     eax, [eax+ecx+8]
mov     ecx, [ebp+var_8]
mov     edx, ecx
shr     edx, 18h
mov     [eax], dl
mov     edx, ecx
shr     edx, 10h
mov     [eax+1], dl
add     esp, 4
mov     edx, ecx
shr     edx, 8
mov     [eax+2], dl
mov     [eax+3], cl
mov     eax, [ebp+arg_0]
pop     edi
mov     [eax], ebx
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [edi+4]
mov     ecx, [eax+24h]
add     ecx, ecx
mov     eax, 0aaaaaaabh
mul     ecx
push    ebx
xor     ebx, ebx
shr     edx, 1
push    esi
mov     [ebp+var_28], edx
mov     [ebp+var_1c], ebx
movsx   esi, word ptr [edi+56h]
mov     eax, [edi+esi*4+80h]
mov     [ebp+var_24], eax
test    esi, esi
jnz     short loc_10020a3f
cmp     byte ptr [eax+1], 0
jz      loc_10020b0f
lea     edx, [edi+84h]
push    edx
call    sub_100208b0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     loc_10020b0f
xor     edx, edx
mov     dword ptr [edi+56h], 1
mov     [edi+5ah], dx
jmp     short loc_100209fb
cmp     byte ptr [eax+1], 0
jnz     short loc_10020a52
movzx   eax, word ptr [eax+0eh]
cmp     eax, [ebp+var_28]
jle     loc_10020b0f
mov     eax, [edi+esi*4+7ch]
movzx   ecx, word ptr [edi+esi*2+56h]
mov     edx, [eax+44h]
push    edx
mov     [ebp+var_18], eax
mov     [ebp+var_20], ecx
call    sub_100158a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_10020af0
mov     eax, [ebp+var_24]
cmp     [eax+4], bl
jz      short loc_10020aaf
cmp     byte ptr [eax+1], 1
jnz     short loc_10020aaf
mov     cx, [eax+14h]
cmp     cx, [eax+10h]
jnz     short loc_10020aaf
mov     ebx, [ebp+var_18]
cmp     dword ptr [ebx+48h], 1
jz      short loc_10020ab2
movzx   edx, word ptr [ebx+10h]
cmp     edx, [ebp+var_20]
jnz     short loc_10020ab2
lea     ecx, [ebp+var_14]
push    ecx
push    eax
push    ebx
call    sub_1001fa90
add     esp, 0ch
mov     ebx, eax
jmp     short loc_10020af0
mov     ebx, [ebp+var_18]
mov     edx, [edi+4]
mov     eax, [edx+20h]
call    sub_10010b90
movzx   ecx, byte ptr [edi+55h]
xor     edx, edx
cmp     esi, 1
setz    dl
push    ecx
mov     ecx, eax
mov     [ebp+var_18], eax
push    edx
mov     edx, [ebp+var_20]
push    ebx
call    sub_1001fce0
mov     esi, [ebp+var_1c]
add     esp, 0ch
mov     ebx, eax
test    esi, esi
jz      short loc_10020aea
call    sub_10010c90
mov     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_24]
mov     ecx, [eax+44h]
push    ecx
mov     byte ptr [eax+1], 0
call    sub_100154a0
dec     word ptr [edi+56h]
add     esp, 4
test    ebx, ebx
jz      loc_100209fb
mov     esi, [ebp+var_1c]
test    esi, esi
jz      short loc_10020b1b
call    sub_10010c90
mov     ecx, [ebp+var_4]
pop     esi
mov     eax, ebx
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, eax
cmp     byte ptr [edi+53h], 3
mov     ebx, [edi]
mov     eax, [ebp+arg_1c]
mov     ecx, [ebx+4]
mov     [ebp+var_8], eax
mov     [ebp+var_10], 0
mov     [ebp+var_4], ecx
jnz     short loc_10020b60
mov     eax, [edi+4ch]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ecx+8]
mov     eax, [edi+18h]
mov     [ebp+var_c], eax
test    esi, esi
jz      short loc_10020b9c
lea     ecx, [ecx+0]
cmp     esi, edi
jz      short loc_10020b95
test    eax, eax
jz      short loc_10020b7d
cmp     [esi+18h], eax
jnz     short loc_10020b95
cmp     byte ptr [esi+53h], 1
jnz     short loc_10020b95
mov     eax, esi
call    sub_100198a0
test    eax, eax
jnz     loc_10020d54
mov     eax, [ebp+var_c]
mov     esi, [esi+8]
test    esi, esi
jnz     short loc_10020b70
cmp     dword ptr [edi+10h], 0
jnz     short loc_10020bd1
mov     ecx, [ebx+4]
mov     eax, [ecx+8]
test    eax, eax
jz      short loc_10020bd1
lea     esp, [esp+0]
cmp     byte ptr [eax+54h], 0
jz      short loc_10020bca
mov     edx, [eax+24h]
cmp     edx, [ebp+arg_4]
jnz     short loc_10020bca
mov     ecx, [eax+28h]
cmp     ecx, [ebp+arg_8]
jnz     short loc_10020bca
mov     byte ptr [eax+53h], 0
mov     eax, [eax+8]
test    eax, eax
jnz     short loc_10020bb0
cmp     [ebp+arg_1c], 0
jnz     short loc_10020bfa
mov     eax, [ebp+arg_18]
mov     ecx, [ebp+arg_8]
lea     edx, [ebp+var_8]
push    edx
mov     edx, [ebp+arg_4]
push    eax
push    ecx
push    edx
mov     edx, [ebp+arg_0]
call    sub_100199d0
add     esp, 10h
test    eax, eax
jnz     loc_10020d54
movsx   eax, word ptr [edi+56h]
mov     esi, [edi+eax*4+80h]
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+50h], 0
jnz     short loc_10020c1c
mov     eax, [eax+20h]
call    sub_10010b90
mov     ecx, [ebp+var_4]
mov     [ecx+50h], eax
mov     edx, [ebp+var_4]
mov     ebx, [edx+50h]
mov     [ebp+var_c], ebx
test    ebx, ebx
jnz     short loc_10020c33
lea     eax, [ebx+7]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_14]
mov     edx, [ebp+arg_10]
lea     eax, [ebp+var_10]
push    eax
mov     eax, [ebp+arg_c]
push    ecx
mov     ecx, [ebp+arg_8]
push    edx
mov     edx, [ebp+arg_4]
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    eax
push    ebx
mov     eax, esi
call    sub_1001f480
add     esp, 20h
mov     [ebp+arg_1c], eax
test    eax, eax
jnz     loc_10020d54
movsx   ecx, word ptr [edi+56h]
movzx   edx, word ptr [edi+ecx*2+58h]
lea     eax, [edi+ecx*2+58h]
mov     ecx, [ebp+var_8]
mov     [ebp+var_4], edx
test    ecx, ecx
jnz     short loc_10020cfb
mov     eax, [esi+44h]
push    eax
call    sub_100158a0
add     esp, 4
test    eax, eax
jnz     loc_10020d54
mov     ecx, [esi+40h]
mov     edx, [ebp+var_4]
movzx   ebx, byte ptr [ecx+edx*2+1]
lea     eax, [ecx+edx*2]
movzx   eax, byte ptr [eax]
movzx   ecx, word ptr [esi+12h]
shl     eax, 8
or      ebx, eax
and     ebx, ecx
add     ebx, [esi+38h]
cmp     byte ptr [esi+3], 0
jnz     short loc_10020cbc
mov     edx, [ebx]
mov     eax, [ebp+var_c]
mov     [eax], edx
push    ebx
mov     eax, esi
call    sub_1001a0a0
movzx   ecx, ax
mov     [ebp+var_8], ecx
add     esp, 4
mov     eax, ebx
mov     ecx, esi
call    sub_1001f2c0
mov     [ebp+arg_1c], eax
movzx   eax, word ptr [ebp+var_8]
lea     edx, [ebp+arg_1c]
push    edx
mov     edx, [ebp+var_4]
push    eax
mov     ebx, esi
call    sub_1001f760
mov     eax, [ebp+arg_1c]
add     esp, 8
test    eax, eax
jnz     short loc_10020d54
mov     ebx, [ebp+var_c]
jmp     short loc_10020d0d
jns     short loc_10020d0d
cmp     word ptr [esi+10h], 0
jbe     short loc_10020d0d
inc     word ptr [eax]
movzx   ecx, word ptr [eax]
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
lea     edx, [ebp+arg_1c]
push    edx
push    0
push    0
push    ebx
push    eax
mov     eax, [ebp+var_10]
mov     ecx, esi
call    sub_1001f840
mov     eax, [ebp+arg_1c]
xor     ecx, ecx
add     esp, 14h
mov     [edi+3eh], cx
mov     [edi+52h], cl
test    eax, eax
jnz     short loc_10020d54
cmp     [esi+1], cl
jz      short loc_10020d54
call    sub_100209d0
movsx   edx, word ptr [edi+56h]
mov     ecx, [edi+edx*4+80h]
mov     byte ptr [ecx+1], 0
mov     byte ptr [edi+53h], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     eax, [esi]
mov     [ebp+var_14], eax
mov     eax, [eax+4]
mov     [ebp+var_8], eax
movsx   eax, word ptr [esi+56h]
mov     ecx, [esi+eax*4+80h]
mov     dx, [esi+eax*2+58h]
push    ebx
push    edi
mov     [ebp+var_18], eax
cmp     dx, [ecx+10h]
jnb     loc_10020f9f
cmp     byte ptr [esi+53h], 1
jnz     loc_10020f9f
mov     eax, [ecx+40h]
movzx   edx, dx
mov     [ebp+var_c], edx
lea     edx, [eax+edx*2]
movzx   eax, byte ptr [edx]
movzx   edx, byte ptr [edx+1]
shl     eax, 8
or      eax, edx
movzx   edx, word ptr [ecx+12h]
and     eax, edx
add     eax, [ecx+38h]
cmp     byte ptr [ecx+3], 0
mov     [ebp+var_10], ecx
mov     [ebp+var_4], eax
jnz     short loc_10020ddc
lea     eax, [ebp+var_1c]
push    eax
push    esi
call    sub_1001e4e0
add     esp, 8
test    eax, eax
jnz     loc_10020fa4
mov     edi, [esi+18h]
mov     eax, [ebp+var_8]
mov     ebx, esi
call    sub_10019970
xor     ebx, ebx
cmp     eax, ebx
jnz     loc_10020fa4
cmp     [esi+10h], ebx
jnz     short loc_10020e29
mov     eax, [ebp+var_14]
mov     eax, [eax+4]
mov     eax, [eax+8]
mov     ecx, [esi+24h]
mov     edx, [esi+28h]
cmp     eax, ebx
jz      short loc_10020e29
jmp     short loc_10020e10
cmp     [eax+54h], bl
jz      short loc_10020e22
cmp     [eax+24h], ecx
jnz     short loc_10020e22
cmp     [eax+28h], edx
jnz     short loc_10020e22
mov     [eax+53h], bl
mov     eax, [eax+8]
cmp     eax, ebx
jnz     short loc_10020e10
mov     edi, [ebp+var_10]
mov     ecx, [edi+44h]
push    ecx
call    sub_100158a0
add     esp, 4
cmp     eax, ebx
jnz     loc_10020fa4
mov     ebx, [ebp+var_4]
mov     eax, ebx
mov     ecx, edi
call    sub_1001f2c0
lea     edx, [ebp+var_4]
push    edx
push    ecx
mov     [ebp+var_4], eax
push    ebx
mov     eax, edi
call    sub_1001a0a0
mov     edx, [ebp+var_c]
movzx   eax, ax
add     esp, 8
push    eax
mov     ebx, edi
call    sub_1001f760
mov     eax, [ebp+var_4]
add     esp, 8
test    eax, eax
jnz     loc_10020fa4
cmp     [edi+3], al
jnz     loc_10020f40
movsx   ecx, word ptr [esi+56h]
mov     ebx, [esi+ecx*4+80h]
mov     edx, [ebp+var_18]
mov     eax, [esi+edx*4+84h]
mov     ecx, [eax+48h]
movzx   edx, word ptr [ebx+10h]
mov     eax, [ebx+40h]
movzx   edi, byte ptr [eax+edx*2-2]
lea     eax, [eax+edx*2]
movzx   edx, word ptr [ebx+12h]
mov     [ebp+var_1c], ecx
movzx   ecx, byte ptr [eax-1]
shl     edi, 8
or      edi, ecx
and     edi, edx
add     edi, [ebx+38h]
mov     eax, ebx
push    edi
call    sub_1001a0a0
movzx   eax, ax
mov     [ebp+var_14], eax
mov     eax, [ebp+var_8]
add     esp, 4
cmp     dword ptr [eax+50h], 0
jnz     short loc_10020eea
mov     eax, [eax+20h]
call    sub_10010b90
mov     ecx, [ebp+var_8]
mov     [ecx+50h], eax
mov     eax, ecx
mov     edx, [eax+50h]
mov     eax, [ebx+44h]
push    eax
mov     [ebp+var_8], edx
call    sub_100158a0
mov     edx, [ebp+var_1c]
add     esp, 4
lea     ecx, [ebp+var_4]
push    ecx
mov     ecx, [ebp+var_c]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_8]
push    edx
push    eax
mov     eax, [ebp+var_14]
add     edi, 0fffffffch
push    edi
push    ecx
mov     ecx, [ebp+var_10]
add     eax, 4
call    sub_1001f840
mov     eax, [ebp+var_14]
add     esp, 14h
lea     edx, [ebp+var_4]
push    edx
movzx   edx, word ptr [ebx+10h]
push    eax
dec     edx
call    sub_1001f760
mov     eax, [ebp+var_4]
add     esp, 8
test    eax, eax
jnz     short loc_10020fa4
mov     edi, esi
call    sub_100209d0
mov     edi, eax
test    edi, edi
jnz     short loc_10020f97
movsx   ecx, word ptr [esi+56h]
mov     ebx, [ebp+var_18]
cmp     ecx, ebx
jle     short loc_10020f90
movzx   eax, word ptr [esi+56h]
movsx   edx, ax
mov     ecx, [esi+edx*4+80h]
dec     eax
mov     [esi+56h], ax
test    ecx, ecx
jz      short loc_10020f7b
mov     eax, [ecx+44h]
push    eax
call    sub_100154a0
add     esp, 4
movsx   ecx, word ptr [esi+56h]
cmp     ecx, ebx
jg      short loc_10020f58
mov     edi, esi
call    sub_100209d0
mov     edi, eax
test    edi, edi
jnz     short loc_10020f97
mov     eax, esi
call    sub_1001dc50
mov     eax, edi
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, [ebx+4]
cmp     byte ptr [edi+11h], 0
jz      loc_10021219
mov     esi, [edi+8]
test    esi, esi
jz      short loc_10020fed
mov     eax, [esi+14h]
push    eax
call    sub_10009770
mov     dword ptr [esi+14h], 0
mov     esi, [esi+8]
add     esp, 4
test    esi, esi
jnz     short loc_10020fd3
lea     ecx, [esp+20h+var_14]
push    ecx
push    4
mov     eax, ebx
call    sub_100218e0
mov     ebx, [esp+28h+var_14]
add     esp, 8
inc     ebx
lea     edx, [ebx-2]
mov     [esp+20h+var_14], ebx
mov     [esp+20h+var_10], edx
mov     edi, edi
cmp     ebx, 2
jnb     short loc_10021019
xor     ecx, ecx
jmp     short loc_10021047
mov     eax, 0cccccccdh
mul     dword ptr [edi+24h]
mov     eax, [esp+20h+var_10]
mov     esi, edx
shr     esi, 2
xor     edx, edx
inc     esi
div     esi
xor     edx, edx
mov     ecx, eax
mov     eax, dword_1008031c
imul    ecx, esi
div     dword ptr [edi+20h]
add     ecx, 2
inc     eax
cmp     ecx, eax
jnz     short loc_10021047
inc     ecx
cmp     ebx, ecx
jz      short loc_1002105a
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [edi+20h]
inc     eax
cmp     ebx, eax
jnz     short loc_10021061
inc     ebx
inc     [esp+20h+var_10]
jmp     short loc_10021010
push    1
push    ebx
lea     eax, [esp+28h+var_4]
push    eax
lea     ecx, [esp+2ch+var_10]
push    ecx
push    edi
mov     [esp+34h+var_14], ebx
call    sub_1001e690
add     esp, 14h
mov     [esp+20h+var_c], eax
test    eax, eax
jnz     loc_10021276
cmp     [esp+20h+var_4], ebx
jz      loc_100211ad
mov     byte ptr [esp+20h+var_c], al
mov     [esp+20h+var_8], eax
mov     eax, [esp+20h+var_10]
test    eax, eax
jz      short loc_100210ad
mov     edx, [eax+44h]
push    edx
call    sub_100154a0
add     esp, 4
lea     eax, [esp+20h+var_10]
push    eax
xor     eax, eax
mov     ecx, ebx
mov     esi, edi
call    sub_1001ab30
add     esp, 4
test    eax, eax
jnz     loc_10021276
lea     ecx, [esp+20h+var_8]
push    ecx
lea     edx, [esp+24h+var_c]
push    edx
push    ebx
mov     eax, edi
call    sub_10019d60
mov     esi, eax
mov     al, byte ptr [esp+2ch+var_c]
add     esp, 0ch
cmp     al, 1
jz      short loc_100210eb
cmp     al, 2
jnz     short loc_1002110b
push    offset ac0d89d4a975292
push    0d6fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     esi, 0bh
jmp     short loc_1002110f
test    esi, esi
jz      short loc_1002112c
mov     eax, [esp+20h+var_10]
test    eax, eax
jz      short loc_10021123
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esp+20h+var_8]
mov     edx, [esp+20h+var_c]
mov     esi, [esp+20h+var_10]
mov     ebx, [esp+20h+var_4]
push    ecx
push    edx
push    edi
xor     edx, edx
mov     eax, esi
call    sub_1001c450
add     esp, 0ch
mov     ebx, eax
test    esi, esi
jz      short loc_1002115d
mov     eax, [esi+44h]
push    eax
call    sub_100154a0
add     esp, 4
test    ebx, ebx
jnz     short loc_100211a4
lea     ecx, [esp+20h+var_10]
push    ecx
mov     ecx, [esp+24h+var_14]
xor     eax, eax
mov     esi, edi
call    sub_1001ab30
add     esp, 4
test    eax, eax
jnz     loc_10021276
mov     esi, [esp+20h+var_10]
mov     edx, [esi+44h]
push    edx
call    sub_100158a0
mov     ebx, eax
add     esp, 4
mov     [esp+20h+var_c], ebx
test    ebx, ebx
jz      short loc_100211b3
mov     eax, [esi+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [esp+20h+var_10]
jmp     short loc_100211b7
mov     ebx, [esp+20h+var_14]
lea     ecx, [esp+20h+var_c]
push    ecx
push    0
push    1
push    edi
mov     eax, ebx
call    sub_10019c10
mov     edi, [esp+30h+var_c]
add     esp, 10h
test    edi, edi
jz      short loc_100211ec
test    esi, esi
jz      short loc_100211e3
mov     edx, [esi+44h]
push    edx
call    sub_100154a0
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
push    ebx
push    4
call    sub_10021950
mov     edi, eax
add     esp, 8
test    edi, edi
jz      short loc_1002123c
test    esi, esi
jz      short loc_100211e3
mov     eax, [esi+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    0
push    1
lea     ecx, [esp+28h+var_14]
push    ecx
lea     edx, [esp+2ch+var_10]
push    edx
push    edi
call    sub_1001e690
add     esp, 14h
test    eax, eax
jnz     short loc_10021276
mov     esi, [esp+20h+var_10]
mov     ebx, [esp+20h+var_14]
mov     al, [ebp+arg_8]
and     al, 1
movsx   eax, al
neg     eax
sbb     eax, eax
and     eax, 3
add     eax, 0ah
push    eax
call    sub_1001aa60
mov     eax, [esi+44h]
add     esp, 4
test    eax, eax
jz      short loc_1002126f
mov     esi, [eax+10h]
call    sub_100106d0
push    esi
call    sub_10015290
add     esp, 4
mov     ecx, [ebp+arg_4]
mov     [ecx], ebx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, eax
call    sub_10019320
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
push    edi
call    sub_10020fb0
add     esp, 0ch
cmp     byte ptr [edi+9], 0
mov     esi, eax
jz      short loc_100212c4
dec     dword ptr [edi+0ch]
jnz     short loc_100212c4
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_100212be
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, esi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     eax, [edi+2ch]
jbe     short loc_10021307
push    offset ac0d89d4a975292
push    0d753h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp+var_4]
push    ecx
push    eax
push    edi
call    sub_1001ab80
add     esp, 0ch
test    eax, eax
jnz     loc_10021454
mov     esi, [ebp+var_4]
xor     edx, edx
mov     [ebp+arg_4], eax
cmp     dx, [esi+10h]
jnb     loc_100213b9
mov     eax, [esi+40h]
mov     ecx, [ebp+arg_4]
movzx   edi, byte ptr [eax+ecx*2]
movzx   edx, byte ptr [eax+ecx*2+1]
lea     eax, [eax+ecx*2]
movzx   eax, word ptr [esi+12h]
shl     edi, 8
or      edi, edx
and     edi, eax
add     edi, [esi+38h]
cmp     byte ptr [esi+3], 0
jnz     short loc_10021390
movzx   ecx, byte ptr [edi]
movzx   eax, byte ptr [edi+1]
movzx   edx, byte ptr [edi+2]
shl     ecx, 8
or      eax, ecx
movzx   ecx, byte ptr [edi+3]
shl     eax, 8
or      eax, edx
mov     edx, [ebp+arg_c]
push    edx
shl     eax, 8
or      eax, ecx
push    1
push    eax
mov     eax, [ebp+arg_0]
push    eax
call    sub_100212d0
mov     ebx, eax
add     esp, 10h
test    ebx, ebx
jnz     loc_10021446
mov     eax, edi
mov     ecx, esi
call    sub_1001f2c0
mov     ebx, eax
test    ebx, ebx
jnz     loc_10021446
mov     eax, [ebp+arg_4]
movzx   ecx, word ptr [esi+10h]
inc     eax
mov     [ebp+arg_4], eax
cmp     eax, ecx
jl      loc_1002132f
mov     edi, [ebp+arg_0]
cmp     byte ptr [esi+3], 0
jnz     short loc_100213f9
mov     ecx, [esi+38h]
movzx   eax, byte ptr [ecx+8]
movzx   edx, byte ptr [ecx+9]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+0ah]
movzx   ecx, byte ptr [ecx+0bh]
shl     eax, 8
or      eax, edx
mov     edx, [ebp+arg_c]
push    edx
shl     eax, 8
or      eax, ecx
push    1
push    eax
push    edi
call    sub_100212d0
mov     ebx, eax
add     esp, 10h
test    ebx, ebx
jnz     short loc_10021446
jmp     short loc_10021406
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_10021406
movzx   ecx, word ptr [esi+10h]
add     [eax], ecx
cmp     [ebp+arg_8], 0
jz      short loc_10021422
mov     edx, [esi+48h]
mov     eax, [esi+34h]
push    edx
push    eax
mov     eax, esi
call    sub_1001ef60
add     esp, 8
mov     ebx, eax
jmp     short loc_10021446
mov     ecx, [esi+44h]
push    ecx
call    sub_100158a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_10021446
mov     edx, [esi+38h]
movzx   eax, byte ptr [edx]
or      eax, 8
push    eax
call    sub_1001aa60
add     esp, 4
mov     ecx, [esi+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+4]
mov     [ebp+var_4], esi
call    sub_10019320
mov     esi, [esi+8]
test    esi, esi
jz      short loc_100214a0
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10021488
cmp     [esi+18h], eax
jnz     short loc_10021499
cmp     byte ptr [esi+53h], 1
jnz     short loc_10021499
mov     eax, esi
call    sub_100198a0
test    eax, eax
jnz     short loc_100214d7
mov     esi, [esi+8]
test    esi, esi
jnz     short loc_1002147c
mov     eax, [edi+4]
mov     eax, [eax+8]
test    eax, eax
jz      short loc_100214c1
lea     ebx, [ebx+0]
cmp     byte ptr [eax+54h], 0
jz      short loc_100214ba
mov     byte ptr [eax+53h], 0
mov     eax, [eax+8]
test    eax, eax
jnz     short loc_100214b0
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
mov     eax, [ebp+var_4]
push    ecx
push    0
push    edx
push    eax
call    sub_100212d0
add     esp, 10h
cmp     byte ptr [edi+9], 0
mov     esi, eax
jz      short loc_100214fc
dec     dword ptr [edi+0ch]
jnz     short loc_100214fc
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_100214f8
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
push    ebx
push    esi
xor     esi, esi
push    edi
mov     [ebp+var_c], esi
mov     [ebp+var_4], eax
cmp     [eax+8], esi
jz      short loc_10021538
mov     eax, 106h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+arg_4]
mov     ebx, [eax]
test    edi, edi
jnz     short loc_10021562
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
lea     eax, [edi+0bh]
jmp     loc_1002169c
mov     eax, [ebx+28h]
test    eax, eax
jnz     short loc_1002157e
lea     ecx, [ebp+var_8]
push    ecx
push    1
push    edi
mov     edi, [ebx+0b4h]
call    sub_10010550
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     loc_10021658
mov     esi, [ebp+var_8]
mov     edi, [ebp+arg_4]
cmp     [esi+10h], eax
jz      short loc_1002159e
inc     dword ptr [ebx+0a0h]
jmp     loc_1002166c
mov     [esi+10h], ebx
cmp     edi, 7fffffffh
ja      short loc_10021608
mov     eax, dword_1008031c
mov     ecx, [ebx+80h]
cdq
idiv    ecx
inc     eax
cmp     edi, eax
jz      short loc_10021608
cmp     byte ptr [ebx+0eh], 0
jnz     short loc_100215e8
cmp     [ebx+18h], edi
jb      short loc_100215e8
mov     edx, [ebx+3ch]
cmp     dword ptr [edx], 0
jz      short loc_100215e8
inc     dword ptr [ebx+0a4h]
mov     eax, esi
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      loc_10021669
jmp     short loc_10021626
cmp     edi, [ebx+84h]
jbe     short loc_100215f7
mov     edi, 0dh
jmp     short loc_10021626
mov     eax, [esi+4]
push    ecx
push    0
push    eax
call    memset
add     esp, 0ch
jmp     short loc_1002166c
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
test    byte ptr [esi+18h], 2
jz      short loc_10021633
mov     eax, esi
call    sub_100104b0
mov     eax, [esi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [esi+14h], 1
jnz     short loc_10021646
mov     dword ptr [eax+2ch], 0
mov     ecx, [esi]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    ebx
call    sub_10015290
add     esp, 4
xor     esi, esi
mov     eax, edi
test    edi, edi
jnz     short loc_10021699
mov     edi, [ebp+arg_4]
mov     eax, [esi+8]
mov     ecx, [esi+4]
mov     edx, [ebp+var_4]
cmp     edi, 1
mov     [eax+38h], ecx
setnz   cl
dec     cl
and     cl, 64h
mov     [eax+44h], esi
mov     [eax+48h], edi
mov     edi, [ebp+arg_4]
mov     [eax+34h], edx
mov     [eax+5], cl
mov     [ebp+var_c], eax
mov     esi, eax
jmp     short loc_100216a4
mov     edi, [ebp+arg_4]
test    eax, eax
jnz     loc_10021881
mov     eax, [ebp+arg_0]
push    0
push    edi
call    sub_10021460
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_100216d8
test    esi, esi
jz      loc_1002187f
mov     edx, [esi+44h]
push    edx
call    sub_100154a0
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
mov     dword ptr [eax], 0
cmp     edi, 1
jbe     loc_10021862
mov     ecx, [ebp+var_4]
cmp     byte ptr [ecx+11h], 0
jz      loc_1002183c
mov     eax, [ebp+arg_0]
lea     edx, [ebp+var_10]
push    edx
push    4
call    sub_100218e0
mov     ebx, [ebp+var_10]
add     esp, 8
cmp     edi, ebx
jnz     short loc_1002173e
mov     edi, [ebp+var_c]
lea     esi, [ebp+var_8]
mov     eax, edi
call    sub_1001f2a0
test    edi, edi
jz      short loc_1002172c
mov     eax, [edi+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     eax, [ebp+var_8]
test    eax, eax
jz      loc_100217fa
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jz      short loc_1002174e
mov     ecx, [esi+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     esi, [ebp+var_4]
lea     edx, [ebp+var_c]
push    edx
xor     eax, eax
mov     ecx, ebx
call    sub_1001ab30
add     esp, 4
test    eax, eax
jnz     loc_10021881
mov     ecx, [ebp+arg_4]
mov     edi, [ebp+var_c]
push    0
mov     eax, esi
mov     eax, [eax]
push    ecx
push    eax
mov     eax, [edi+44h]
call    sub_10016410
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_10021797
mov     edx, [ebp+arg_4]
mov     eax, edi
mov     [edi+48h], edx
call    sub_1001c0c0
mov     esi, eax
mov     eax, [edi+44h]
push    eax
call    sub_100154a0
add     esp, 4
test    esi, esi
jz      short loc_100217b0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+var_4]
lea     ecx, [ebp+var_c]
push    ecx
xor     eax, eax
mov     ecx, ebx
mov     [ebp+var_c], 0
call    sub_1001ab30
mov     edi, [ebp+var_c]
mov     [ebp+var_8], eax
add     esp, 4
lea     esi, [ebp+var_8]
mov     eax, edi
call    sub_1001f2a0
test    edi, edi
jz      short loc_100217ea
mov     edx, [edi+44h]
push    edx
call    sub_100154a0
add     esp, 4
mov     eax, [ebp+var_8]
test    eax, eax
jnz     loc_10021881
mov     eax, [ebp+arg_8]
mov     [eax], ebx
mov     eax, dword_1008031c
mov     ecx, [ebp+var_4]
xor     edx, edx
dec     ebx
div     dword ptr [ecx+20h]
lea     esi, [eax+1]
jmp     short loc_10021810
cmp     ebx, esi
jz      short loc_10021822
mov     edi, [ebp+var_4]
mov     ecx, ebx
call    sub_10019bd0
cmp     eax, ebx
jnz     short loc_10021825
dec     ebx
jmp     short loc_10021810
mov     eax, [ebp+arg_0]
push    ebx
push    4
call    sub_10021950
add     esp, 8
mov     ebx, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [esi+48h]
mov     eax, [esi+34h]
push    edx
push    eax
mov     eax, esi
call    sub_1001ef60
mov     ecx, [esi+44h]
push    ecx
mov     ebx, eax
call    sub_100154a0
add     esp, 0ch
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    9
call    sub_1001aa60
mov     eax, [ebp+var_c]
add     esp, 4
test    eax, eax
jz      short loc_1002187f
mov     edx, [eax+44h]
push    edx
call    sub_100154a0
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, eax
call    sub_10019320
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
push    edi
call    sub_10021510
add     esp, 0ch
cmp     byte ptr [edi+9], 0
mov     esi, eax
jz      short loc_100218d4
dec     dword ptr [edi+0ch]
jnz     short loc_100218d4
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_100218ce
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, esi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+4]
call    sub_10019320
mov     eax, [esi+0ch]
mov     ecx, [eax+38h]
mov     edx, [ebp+arg_0]
lea     eax, [ecx+edx*4+24h]
movzx   ecx, byte ptr [eax]
movzx   edx, byte ptr [eax+1]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+2]
movzx   eax, byte ptr [eax+3]
shl     ecx, 8
or      ecx, edx
mov     edx, [ebp+arg_4]
shl     ecx, 8
or      ecx, eax
mov     [edx], ecx
cmp     byte ptr [edi+9], 0
jz      short loc_10021942
dec     dword ptr [edi+0ch]
jnz     short loc_10021942
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1002193e
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, eax
mov     ebx, [edi+4]
call    sub_10019320
mov     eax, [ebx+0ch]
mov     esi, [eax+38h]
mov     eax, [eax+44h]
push    eax
call    sub_100158a0
add     esp, 4
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_100219aa
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
mov     eax, edx
shr     eax, 18h
mov     [esi+ecx*4+24h], al
mov     eax, edx
shr     eax, 10h
mov     [esi+ecx*4+25h], al
mov     eax, edx
shr     eax, 8
mov     [esi+ecx*4+26h], al
mov     eax, [ebp+var_4]
mov     [esi+ecx*4+27h], dl
cmp     ecx, 7
jnz     short loc_100219aa
mov     [ebx+12h], dl
cmp     byte ptr [edi+9], 0
jz      short loc_100219d0
dec     dword ptr [edi+0ch]
jnz     short loc_100219d0
mov     ecx, [edi+4]
mov     ecx, [ecx+38h]
test    ecx, ecx
jz      short loc_100219cc
push    ecx
call    dword_10080284
mov     eax, [ebp+var_4]
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
xor     ebx, ebx
mov     esi, eax
push    edi
mov     [ebp+var_8], ebx
mov     [ebp+var_4], ebx
cmp     [esi+18h], ebx
jnz     short loc_10021a09
mov     eax, [ebp+arg_0]
mov     [eax], ebx
mov     [eax+4], ebx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    sub_1001dc50
cmp     eax, ebx
jnz     loc_10021b4d
jmp     short loc_10021a20
movsx   edi, word ptr [esi+56h]
mov     ecx, [esi+edi*4+80h]
cmp     [ecx+3], bl
jnz     short loc_10021a35
cmp     [ecx+2], bl
jnz     short loc_10021a42
movzx   eax, word ptr [ecx+10h]
cdq
add     [ebp+var_8], eax
adc     [ebp+var_4], edx
xor     ebx, ebx
cmp     [ecx+3], bl
jz      short loc_10021ab2
jmp     short loc_10021a50
movzx   eax, word ptr [esi+56h]
cmp     ax, bx
jz      loc_10021b3d
cwde
mov     eax, [esi+eax*4+80h]
cmp     eax, ebx
jz      short loc_10021a75
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
dec     word ptr [esi+56h]
mov     cx, [esi+56h]
xor     edx, edx
movsx   eax, cx
mov     [esi+3eh], dx
mov     [esi+52h], bl
mov     edx, [esi+eax*4+80h]
mov     ax, [esi+eax*2+58h]
cmp     ax, [edx+10h]
jnb     short loc_10021a50
movsx   ecx, cx
inc     word ptr [esi+ecx*2+58h]
movsx   edi, word ptr [esi+56h]
lea     eax, [esi+ecx*2+58h]
mov     ecx, [esi+edi*4+80h]
movzx   eax, word ptr [esi+edi*2+58h]
movzx   edx, word ptr [ecx+10h]
cmp     eax, edx
jnz     short loc_10021aec
movzx   eax, byte ptr [ecx+5]
mov     ecx, [ecx+38h]
movzx   edx, byte ptr [eax+ecx+9]
lea     ecx, [eax+ecx+8]
movzx   eax, byte ptr [ecx]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
push    eax
jmp     short loc_10021b26
mov     edx, [ecx+40h]
lea     edx, [edx+eax*2]
movzx   eax, byte ptr [edx+1]
movzx   edx, byte ptr [edx]
shl     edx, 8
or      eax, edx
movzx   edx, word ptr [ecx+12h]
and     eax, edx
add     eax, [ecx+38h]
movzx   ecx, byte ptr [eax]
movzx   edx, byte ptr [eax+1]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+2]
movzx   eax, byte ptr [eax+3]
shl     ecx, 8
or      ecx, edx
shl     ecx, 8
or      ecx, eax
push    ecx
call    sub_1001dbb0
add     esp, 4
cmp     eax, ebx
jz      loc_10021a20
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_4]
mov     [eax], ecx
mov     [eax+4], edx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+10h]
test    eax, eax
jz      short loc_10021bc8
inc     dword ptr [esi+14h]
dec     eax
cmp     dword ptr [esi+28h], 0
mov     [esi+10h], eax
jz      short loc_10021b91
push    1
push    offset asc_100798f0
lea     eax, [esi+1ch]
call    sub_1000ac50
add     esp, 8
mov     eax, [ebp+src]
test    eax, eax
jz      short loc_10021ba6
push    0ffffffffh
push    eax
lea     eax, [esi+1ch]
call    sub_1000ac50
add     esp, 8
mov     eax, [ebp+arg_8]
push    eax
lea     ecx, [esi+1ch]
push    1
push    ecx
lea     ecx, [ebp+arg_c]
call    sub_10009dd0
add     esp, 0ch
cmp     byte ptr [esi+34h], 0
jz      short loc_10021bc8
mov     dword ptr [esi+18h], 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
push    edi
test    eax, eax
jz      short loc_10021bf5
cmp     eax, [ecx+0ch]
jbe     short loc_10021bff
push    eax
mov     eax, [ebp+src]
push    offset ainvalidpagenum
push    eax
push    ecx
call    sub_10021b60
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edx, [ecx+8]
mov     edi, eax
and     edi, 7
mov     ebx, 1
mov     ecx, edi
shl     ebx, cl
mov     esi, eax
shr     esi, 3
test    [esi+edx], bl
jz      short loc_10021c3a
mov     ecx, [ebp+arg_0]
push    eax
mov     eax, [ebp+src]
push    offset a2ndreferenceto
push    eax
push    ecx
call    sub_10021b60
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edx, [ebp+arg_0]
mov     eax, [edx+8]
mov     dl, 1
shl     dl, cl
pop     edi
or      [eax+esi], dl
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
lea     eax, [ebp+var_8]
push    eax
mov     eax, [esi]
lea     ecx, [ebp+var_1]
push    ecx
push    edi
call    sub_10019d60
add     esp, 0ch
test    eax, eax
jz      short loc_10021c97
cmp     eax, 7
jz      short loc_10021c79
cmp     eax, 0c0ah
jnz     short loc_10021c80
mov     dword ptr [esi+18h], 1
mov     edx, [ebp+src]
push    edi
push    offset afailedtoreadpt
push    edx
push    esi
call    sub_10021b60
add     esp, 10h
mov     esp, ebp
pop     ebp
retn
mov     al, [ebp+var_1]
mov     ecx, [ebp+var_8]
cmp     al, bl
jnz     short loc_10021ca6
cmp     ecx, [ebp+arg_0]
jz      short loc_10021cc6
push    ecx
mov     ecx, [ebp+arg_0]
movzx   eax, al
push    eax
mov     eax, [ebp+src]
push    ecx
movzx   edx, bl
push    edx
push    edi
push    offset abadptrmapentry
push    eax
push    esi
call    sub_10021b60
add     esp, 20h
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 1ch
mov     eax, [ebp+arg_c]
push    ebx
push    esi
mov     esi, dword ptr [ebp+arg_8]
push    edi
mov     [esp+28h+var_4], eax
mov     [esp+28h+var_8], esi
test    eax, eax
jle     loc_10022042
mov     edi, [ebp+arg_0]
dec     [ebp+arg_c]
cmp     dword ptr [edi+10h], 0
jz      loc_10022042
cmp     esi, 1
jl      loc_10022004
mov     eax, [ebp+src]
push    eax
push    edi
mov     eax, esi
call    sub_10021bd0
add     esp, 8
test    eax, eax
jnz     loc_10022042
mov     ebx, [edi+4]
test    esi, esi
jz      loc_10021fe9
mov     edi, [ebx+28h]
test    edi, edi
jnz     loc_10021e28
mov     edi, [ebx+0b4h]
lea     ecx, [esp+28h+var_1c]
push    ecx
push    1
push    esi
call    sub_10010550
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     loc_10021e28
mov     edi, [esp+28h+var_1c]
cmp     [edi+10h], eax
jz      short loc_10021d6c
inc     dword ptr [ebx+0a0h]
jmp     loc_10021e45
mov     [edi+10h], ebx
cmp     esi, 7fffffffh
ja      short loc_10021dd6
mov     eax, dword_1008031c
mov     ecx, [ebx+80h]
cdq
idiv    ecx
inc     eax
cmp     esi, eax
jz      short loc_10021dd6
cmp     byte ptr [ebx+0eh], 0
jnz     short loc_10021db6
cmp     [ebx+18h], esi
jb      short loc_10021db6
mov     edx, [ebx+3ch]
cmp     dword ptr [edx], 0
jz      short loc_10021db6
inc     dword ptr [ebx+0a4h]
mov     eax, edi
call    sub_100137f0
mov     edi, eax
test    edi, edi
jz      loc_10021e41
jmp     short loc_10021df4
cmp     esi, [ebx+84h]
jbe     short loc_10021dc5
mov     edi, 0dh
jmp     short loc_10021df4
mov     eax, [edi+4]
push    ecx
push    0
push    eax
call    memset
add     esp, 0ch
jmp     short loc_10021e45
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     edi, 0bh
mov     eax, [esp+28h+var_1c]
test    byte ptr [eax+18h], 2
jz      short loc_10021e03
call    sub_100104b0
mov     ecx, [eax+1ch]
dec     dword ptr [ecx+0ch]
cmp     dword ptr [eax+14h], 1
jnz     short loc_10021e16
mov     dword ptr [ecx+2ch], 0
mov     edx, [eax]
mov     eax, [ecx+28h]
push    1
push    edx
push    eax
call    dword_100802b0
add     esp, 0ch
push    ebx
call    sub_10015290
add     esp, 4
mov     [esp+28h+var_1c], 0
test    edi, edi
jnz     loc_1002202c
mov     edi, [esp+28h+var_1c]
cmp     [ebp+arg_4], 0
mov     ebx, [edi+4]
mov     [esp+28h+var_18], ebx
jz      loc_10021f5f
movzx   ecx, byte ptr [ebx+4]
movzx   edx, byte ptr [ebx+5]
movzx   eax, byte ptr [ebx+6]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [ebx+7]
shl     ecx, 8
or      ecx, eax
mov     eax, [ebp+arg_0]
shl     ecx, 8
or      ecx, edx
mov     edx, [eax]
cmp     byte ptr [edx+11h], 0
mov     [esp+28h+var_c], ecx
jz      short loc_10021eaa
mov     ecx, [ebp+src]
push    ecx
mov     edi, esi
push    0
mov     bl, 2
mov     esi, eax
call    sub_10021c50
mov     esi, dword ptr [ebp+arg_8]
mov     ebx, [esp+30h+var_18]
mov     ecx, [esp+30h+var_c]
mov     eax, [ebp+arg_0]
mov     edi, [esp+30h+var_1c]
add     esp, 8
mov     edx, [eax]
mov     eax, [edx+24h]
cdq
and     edx, 3
add     eax, edx
sar     eax, 2
sub     eax, 2
cmp     ecx, eax
jle     short loc_10021edd
mov     eax, [ebp+src]
mov     ecx, [ebp+arg_0]
push    esi
push    offset afreelistleafco
push    eax
push    ecx
call    sub_10021b60
add     esp, 10h
dec     [ebp+arg_c]
jmp     loc_10021fa7
test    ecx, ecx
jle     short loc_10021f5a
lea     esi, [ebx+0ah]
mov     [esp+28h+var_14], esi
mov     [esp+28h+var_10], ecx
lea     esp, [esp+0]
movzx   edi, byte ptr [esi-2]
movzx   edx, byte ptr [esi-1]
movzx   eax, byte ptr [esi]
movzx   ecx, byte ptr [esi+1]
shl     edi, 8
or      edi, edx
shl     edi, 8
or      edi, eax
mov     eax, [ebp+arg_0]
mov     edx, [eax]
shl     edi, 8
or      edi, ecx
cmp     byte ptr [edx+11h], 0
jz      short loc_10021f36
mov     ecx, [ebp+src]
push    ecx
push    0
mov     bl, 2
mov     esi, eax
call    sub_10021c50
mov     ebx, [esp+30h+var_18]
mov     esi, [esp+30h+var_14]
mov     eax, [ebp+arg_0]
add     esp, 8
mov     edx, [ebp+src]
push    edx
push    eax
mov     eax, edi
call    sub_10021bd0
add     esi, 4
add     esp, 8
dec     [esp+28h+var_10]
mov     [esp+28h+var_14], esi
jnz     short loc_10021ef0
mov     ecx, [esp+28h+var_c]
mov     edi, [esp+28h+var_1c]
sub     [ebp+arg_c], ecx
jmp     short loc_10021fa7
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
cmp     byte ptr [ecx+11h], 0
jz      short loc_10021fa7
cmp     [ebp+arg_c], 0
jle     short loc_10021fa7
movzx   edi, byte ptr [ebx]
movzx   ecx, byte ptr [ebx+1]
mov     edx, [ebp+src]
shl     edi, 8
or      edi, ecx
movzx   ecx, byte ptr [ebx+3]
push    edx
movzx   edx, byte ptr [ebx+2]
shl     edi, 8
or      edi, edx
push    esi
shl     edi, 8
or      edi, ecx
mov     bl, 4
mov     esi, eax
call    sub_10021c50
mov     ebx, [esp+30h+var_18]
mov     edi, [esp+30h+var_1c]
add     esp, 8
movzx   eax, byte ptr [ebx]
movzx   edx, byte ptr [ebx+1]
movzx   ecx, byte ptr [ebx+2]
mov     esi, [edi+10h]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ebx+3]
shl     eax, 8
or      eax, ecx
shl     eax, 8
or      eax, edx
mov     dword ptr [ebp+arg_8], eax
mov     eax, edi
call    sub_100106d0
push    esi
call    sub_10015290
add     esp, 4
cmp     [ebp+arg_c], 0
jle     short loc_10022042
mov     esi, dword ptr [ebp+arg_8]
jmp     loc_10021cf2
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
jmp     short loc_1002202f
mov     eax, [esp+28h+var_8]
mov     ecx, [esp+28h+var_4]
mov     edx, [ebp+arg_c]
push    eax
mov     eax, [ebp+src]
push    ecx
inc     edx
push    edx
push    offset adofdpagesmissi
push    eax
push    edi
call    sub_10021b60
add     esp, 18h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+arg_0]
mov     ecx, [ebp+src]
push    esi
push    offset afailedtogetpag
push    ecx
push    edi
call    sub_10021b60
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0d0h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_10]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     [ebp+var_94], eax
xor     eax, eax
push    esi
mov     dword ptr [ebp+var_a8], eax
mov     [ebp+var_a4], eax
mov     dword ptr [ebp+var_88], eax
mov     [ebp+var_84], eax
push    offset apaged
lea     eax, [ebp+src]
push    eax
push    64h
mov     [ebp+var_78], ebx
mov     [ebp+var_ac], ecx
mov     [ebp+var_90], edx
call    sub_1000b050
mov     edi, [ebx]
mov     ecx, [edi+24h]
add     esp, 10h
mov     [ebp+var_98], edi
mov     [ebp+var_9c], ecx
test    esi, esi
jz      loc_10022283
mov     edx, [ebp+var_94]
push    edx
push    ebx
mov     eax, esi
call    sub_10021bd0
add     esp, 8
test    eax, eax
jnz     loc_10022283
mov     ebx, [edi]
mov     eax, [ebx+28h]
test    eax, eax
jnz     short loc_1002210c
mov     edi, [ebx+0b4h]
lea     eax, [ebp+var_94]
push    eax
push    1
push    esi
call    sub_10010550
add     esp, 0ch
mov     dword ptr [ebp+var_74], eax
test    eax, eax
jnz     loc_100221ec
mov     edi, [ebp+var_94]
cmp     [edi+10h], eax
jz      short loc_1002212d
inc     dword ptr [ebx+0a0h]
jmp     loc_100221fc
mov     [edi+10h], ebx
cmp     esi, 7fffffffh
ja      short loc_1002219a
mov     eax, dword_1008031c
mov     ecx, [ebx+80h]
cdq
idiv    ecx
inc     eax
cmp     esi, eax
jz      short loc_1002219a
cmp     byte ptr [ebx+0eh], 0
jnz     short loc_10022178
cmp     [ebx+18h], esi
jb      short loc_10022178
mov     edx, [ebx+3ch]
cmp     dword ptr [edx], 0
jz      short loc_10022178
inc     dword ptr [ebx+0a4h]
mov     eax, edi
call    sub_100137f0
mov     dword ptr [ebp+var_74], eax
test    eax, eax
jz      loc_100221fc
jmp     short loc_100221ba
cmp     esi, [ebx+84h]
jbe     short loc_10022189
mov     dword ptr [ebp+var_74], 0dh
jmp     short loc_100221ba
mov     eax, [edi+4]
push    ecx
push    0
push    eax
call    memset
add     esp, 0ch
jmp     short loc_100221fc
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     dword ptr [ebp+var_74], 0bh
test    byte ptr [edi+18h], 2
jz      short loc_100221c7
mov     eax, edi
call    sub_100104b0
mov     eax, [edi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [edi+14h], 1
jnz     short loc_100221da
mov     dword ptr [eax+2ch], 0
mov     ecx, [edi]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
push    ebx
call    sub_10015290
xor     edi, edi
add     esp, 4
cmp     dword ptr [ebp+var_74], edi
jnz     short loc_1002226a
mov     ebx, [edi+8]
mov     eax, [edi+4]
mov     ecx, [ebp+var_98]
cmp     esi, 1
setnz   dl
dec     dl
mov     [ebx+48h], esi
and     dl, 64h
mov     [ebx+38h], eax
mov     [ebx+44h], edi
mov     [ebx+34h], ecx
mov     [ebx+5], dl
mov     esi, ebx
mov     [ebp+var_8c], ebx
mov     byte ptr [ebx], 0
call    sub_1001a850
xor     ecx, ecx
cmp     eax, ecx
jz      short loc_10022296
mov     ecx, [ebp+var_78]
push    eax
push    offset abtreeinitpager
lea     eax, [ebp+src]
push    eax
push    ecx
call    sub_10021b60
mov     edx, [ebx+44h]
push    edx
call    sub_100154a0
add     esp, 14h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, dword ptr [ebp+var_74]
mov     edx, [ebp+var_78]
push    eax
push    offset aunabletogetthe
lea     ecx, [ebp+src]
push    ecx
push    edx
call    sub_10021b60
add     esp, 10h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
mov     [ebp+var_94], ecx
mov     dword ptr [ebp+var_7c], ecx
cmp     ax, [ebx+10h]
jnb     loc_10022503
mov     edi, [ebp+var_78]
cmp     dword ptr [edi+10h], 0
jz      loc_10022506
mov     esi, dword ptr [ebp+var_7c]
mov     ecx, [ebp+arg_4]
push    esi
push    ecx
push    offset aontreepagedcel
lea     edx, [ebp+src]
push    edx
push    64h
call    sub_1000b050
mov     eax, [ebx+40h]
movzx   ecx, byte ptr [eax+esi*2+1]
movzx   edx, word ptr [ebx+12h]
lea     eax, [eax+esi*2]
movzx   esi, byte ptr [eax]
shl     esi, 8
or      esi, ecx
and     esi, edx
add     esi, [ebx+38h]
add     esp, 14h
push    esi
push    ebx
lea     eax, [ebp+var_c8]
mov     dword ptr [ebp+var_74], esi
call    sub_10019f70
mov     edi, [ebp+var_bc]
add     esp, 8
cmp     byte ptr [ebx+2], 0
jnz     short loc_10022319
add     edi, dword ptr [ebp+var_c8]
jmp     loc_100223a0
cmp     dword ptr [ebp+var_7c], 0
jnz     short loc_10022345
mov     eax, dword ptr [ebp+var_c8]
mov     ecx, [ebp+var_c4]
mov     dword ptr [ebp+var_88], eax
mov     [ebp+var_84], ecx
mov     dword ptr [ebp+var_a8], eax
mov     [ebp+var_a4], ecx
jmp     short loc_100223a0
mov     ecx, [ebp+var_84]
cmp     [ebp+var_c4], ecx
jg      short loc_10022388
mov     eax, dword ptr [ebp+var_88]
jl      short loc_10022363
cmp     dword ptr [ebp+var_c8], eax
ja      short loc_10022388
mov     edx, dword ptr [ebp+var_c8]
push    ecx
mov     ecx, [ebp+var_c4]
push    eax
push    ecx
mov     ecx, [ebp+var_78]
push    edx
push    offset arowidlldoutofo
lea     eax, [ebp+src]
push    eax
push    ecx
call    sub_10021b60
add     esp, 1ch
mov     edx, dword ptr [ebp+var_c8]
mov     eax, [ebp+var_c4]
mov     dword ptr [ebp+var_88], edx
mov     [ebp+var_84], eax
movzx   eax, [ebp+var_b2]
cmp     edi, eax
jbe     loc_1002244e
movzx   ecx, [ebp+var_b0]
mov     edx, [ebx+38h]
mov     eax, [ebp+var_98]
add     edx, [eax+24h]
add     ecx, esi
cmp     ecx, edx
ja      loc_1002244e
movzx   eax, [ebp+var_b2]
mov     edx, [ebp+var_9c]
sub     edi, eax
lea     eax, [edi+edx-5]
lea     edi, [edx-4]
xor     edx, edx
div     edi
movzx   edi, byte ptr [ecx]
movzx   edx, byte ptr [ecx+1]
shl     edi, 8
or      edi, edx
mov     edx, [ebp+var_98]
shl     edi, 8
mov     [ebp+var_cc], eax
movzx   eax, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
or      edi, eax
shl     edi, 8
or      edi, ecx
cmp     byte ptr [edx+11h], 0
jz      short loc_10022434
mov     ecx, [ebp+arg_4]
mov     esi, [ebp+var_78]
lea     eax, [ebp+src]
push    eax
push    ecx
mov     bl, 3
call    sub_10021c50
mov     ebx, [ebp+var_8c]
mov     esi, dword ptr [ebp+var_74]
add     esp, 8
mov     eax, [ebp+var_cc]
mov     ecx, [ebp+var_78]
lea     edx, [ebp+src]
push    edx
push    eax
push    edi
push    0
push    ecx
call    sub_10021cd0
add     esp, 14h
cmp     byte ptr [ebx+3], 0
jnz     loc_100224f0
movzx   edi, byte ptr [esi]
movzx   edx, byte ptr [esi+1]
movzx   eax, byte ptr [esi+2]
movzx   ecx, byte ptr [esi+3]
shl     edi, 8
or      edi, edx
mov     edx, [ebp+var_98]
shl     edi, 8
or      edi, eax
shl     edi, 8
or      edi, ecx
cmp     byte ptr [edx+11h], 0
jz      short loc_1002249d
mov     ecx, [ebp+arg_4]
mov     esi, [ebp+var_78]
lea     eax, [ebp+src]
push    eax
push    ecx
mov     bl, 5
call    sub_10021c50
mov     ebx, [ebp+var_8c]
add     esp, 8
mov     esi, dword ptr [ebp+var_7c]
mov     edx, esi
neg     edx
sbb     edx, edx
lea     eax, [ebp+var_88]
and     edx, eax
mov     eax, [ebp+var_78]
push    edx
lea     ecx, [ebp+var_a8]
push    ecx
lea     edx, [ebp+src]
push    edx
push    edi
push    eax
call    sub_10022050
add     esp, 14h
mov     edi, eax
test    esi, esi
jle     short loc_100224ea
cmp     edi, [ebp+var_94]
jz      short loc_100224ea
mov     edx, [ebp+var_78]
push    offset achildpagedepth
lea     ecx, [ebp+src]
push    ecx
push    edx
call    sub_10021b60
add     esp, 0ch
mov     [ebp+var_94], edi
mov     eax, dword ptr [ebp+var_7c]
movzx   ecx, word ptr [ebx+10h]
inc     eax
mov     dword ptr [ebp+var_7c], eax
cmp     eax, ecx
jl      loc_100222ab
mov     edi, [ebp+var_78]
cmp     byte ptr [ebx+3], 0
jnz     loc_100225ab
movzx   edx, byte ptr [ebx+5]
mov     eax, [ebx+38h]
movzx   edi, byte ptr [edx+eax+8]
movzx   ecx, byte ptr [edx+eax+9]
lea     eax, [edx+eax+8]
movzx   edx, byte ptr [eax+2]
movzx   eax, byte ptr [eax+3]
shl     edi, 8
or      edi, ecx
mov     ecx, [ebp+arg_4]
shl     edi, 8
push    ecx
or      edi, edx
push    offset aonpagedatright
lea     edx, [ebp+src]
push    edx
shl     edi, 8
push    64h
or      edi, eax
call    sub_1000b050
mov     eax, [ebp+var_98]
add     esp, 10h
cmp     byte ptr [eax+11h], 0
jz      short loc_1002257a
mov     edx, [ebp+arg_4]
mov     esi, [ebp+var_78]
lea     ecx, [ebp+src]
push    ecx
push    edx
mov     bl, 5
call    sub_10021c50
mov     ebx, [ebp+var_8c]
add     esp, 8
movzx   eax, word ptr [ebx+10h]
neg     eax
sbb     eax, eax
lea     ecx, [ebp+var_88]
and     eax, ecx
push    eax
mov     eax, [ebp+var_78]
push    0
lea     edx, [ebp+src]
push    edx
push    edi
push    eax
call    sub_10022050
mov     edi, [ebp+var_78]
add     esp, 14h
cmp     byte ptr [ebx+3], 0
jz      loc_100226d0
cmp     byte ptr [ebx+2], 0
jz      loc_100226d0
mov     esi, [ebp+var_ac]
test    esi, esi
jz      loc_10022691
mov     edx, [ebp+var_90]
test    edx, edx
jnz     short loc_10022606
mov     eax, [esi]
mov     esi, [esi+4]
mov     ecx, [ebp+var_84]
cmp     ecx, esi
jl      loc_100226d0
jg      short loc_100225ee
cmp     dword ptr [ebp+var_88], eax
jbe     loc_100226d0
push    esi
push    eax
push    ecx
mov     ecx, dword ptr [ebp+var_88]
push    ecx
push    offset arowidlldoutofo_0
lea     edx, [ebp+src]
push    edx
jmp     loc_100226c7
mov     eax, [esi+4]
mov     ecx, [esi]
cmp     [ebp+var_a4], eax
jg      short loc_10022645
jl      short loc_1002261d
cmp     dword ptr [ebp+var_a8], ecx
ja      short loc_10022645
push    eax
mov     eax, [ebp+var_a4]
push    ecx
mov     ecx, dword ptr [ebp+var_a8]
push    eax
push    ecx
push    offset arowidlldoutofo_1
lea     edx, [ebp+src]
push    edx
push    edi
call    sub_10021b60
mov     edx, [ebp+var_90]
add     esp, 1ch
mov     eax, [edx+4]
mov     ecx, [edx]
cmp     [ebp+var_84], eax
jl      short loc_1002267e
jg      short loc_1002265c
cmp     dword ptr [ebp+var_88], ecx
jbe     short loc_1002267e
push    eax
mov     eax, [ebp+var_84]
push    ecx
mov     ecx, dword ptr [ebp+var_88]
push    eax
push    ecx
push    offset arowidlldoutofo_2
lea     edx, [ebp+src]
push    edx
push    edi
call    sub_10021b60
add     esp, 1ch
mov     eax, dword ptr [ebp+var_88]
mov     ecx, [ebp+var_84]
mov     [esi], eax
mov     [esi+4], ecx
jmp     short loc_100226d0
mov     eax, [ebp+var_90]
test    eax, eax
jz      short loc_100226d0
mov     ecx, [eax]
mov     eax, [eax+4]
mov     edx, [ebp+var_a4]
cmp     edx, eax
jg      short loc_100226d0
jl      short loc_100226b4
cmp     dword ptr [ebp+var_a8], ecx
ja      short loc_100226d0
push    eax
push    ecx
push    edx
mov     edx, dword ptr [ebp+var_a8]
push    edx
push    offset arowidlldoutofo_3
lea     eax, [ebp+src]
push    eax
push    edi
call    sub_10021b60
add     esp, 1ch
movzx   edx, byte ptr [ebx+5]
mov     ecx, [ebx+38h]
mov     eax, [ebp+var_98]
mov     eax, [eax+20h]
mov     dword ptr [ebp+var_74], ecx
mov     [ebp+var_8c], edx
call    sub_10010b90
mov     esi, eax
test    esi, esi
jnz     short loc_10022700
mov     dword ptr [edi+18h], 1
jmp     loc_100228cc
mov     eax, dword ptr [ebp+var_74]
mov     ecx, [ebp+var_8c]
movzx   edi, byte ptr [ecx+eax+5]
movzx   ecx, byte ptr [ecx+eax+6]
mov     edx, [ebp+var_9c]
shl     edi, 8
or      edi, ecx
dec     edi
and     edi, 0ffffh
inc     edi
sub     edx, edi
push    edx
lea     eax, [edi+esi]
push    0
push    eax
call    memset
add     esp, 0ch
push    edi
push    1
push    esi
call    memset
mov     ecx, [ebp+var_8c]
mov     edx, dword ptr [ebp+var_74]
movzx   eax, byte ptr [ecx+edx+3]
movzx   edx, byte ptr [ecx+edx+4]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ebx+3]
mov     edi, 3
sub     edi, edx
mov     edx, [ebp+var_9c]
add     esp, 0ch
mov     [ebp+var_ac], eax
lea     ecx, [ecx+edi*4]
mov     dword ptr [ebp+var_7c], 0
test    eax, eax
jle     loc_10022819
add     ecx, dword ptr [ebp+var_74]
mov     [ebp+var_90], ecx
lea     ecx, [ecx+0]
mov     eax, [ebp+var_90]
movzx   ecx, byte ptr [eax]
movzx   edi, byte ptr [eax+1]
shl     ecx, 8
or      edi, ecx
lea     ecx, [edx-4]
mov     eax, 10000h
cmp     edi, ecx
jg      short loc_100227c8
mov     edx, dword ptr [ebp+var_74]
lea     eax, [edi+edx]
push    eax
mov     eax, ebx
call    sub_1001a0a0
mov     edx, [ebp+var_9c]
add     esp, 4
movzx   eax, ax
lea     eax, [eax+edi-1]
cmp     eax, edx
jl      short loc_100227f3
mov     ecx, [ebp+arg_4]
mov     edx, dword ptr [ebp+var_7c]
mov     eax, [ebp+var_78]
push    ecx
push    edx
push    offset acorruptiondete
push    0
push    eax
call    sub_10021b60
mov     edx, [ebp+var_9c]
add     esp, 14h
jmp     short loc_100227ff
cmp     eax, edi
jl      short loc_100227ff
inc     byte ptr [eax+esi]
dec     eax
cmp     eax, edi
jge     short loc_100227f7
mov     eax, dword ptr [ebp+var_7c]
add     [ebp+var_90], 2
inc     eax
mov     dword ptr [ebp+var_7c], eax
cmp     eax, [ebp+var_ac]
jl      loc_10022790
mov     eax, dword ptr [ebp+var_74]
mov     edi, [ebp+var_8c]
movzx   ecx, byte ptr [edi+eax+1]
movzx   edi, byte ptr [edi+eax+2]
shl     ecx, 8
or      ecx, edi
jle     short loc_1002286b
movzx   edi, byte ptr [eax+ecx+2]
movzx   eax, byte ptr [eax+ecx+3]
shl     edi, 8
or      edi, eax
lea     eax, [edi+ecx-1]
cmp     eax, ecx
jl      short loc_10022858
lea     ebx, [ebx+0]
inc     byte ptr [eax+esi]
dec     eax
cmp     eax, ecx
jge     short loc_10022850
mov     eax, dword ptr [ebp+var_74]
movzx   edi, byte ptr [eax+ecx]
movzx   ecx, byte ptr [eax+ecx+1]
shl     edi, 8
or      ecx, edi
jg      short loc_10022833
xor     edi, edi
xor     eax, eax
test    edx, edx
jle     short loc_100228a1
mov     cl, [eax+esi]
test    cl, cl
jnz     short loc_1002287d
inc     edi
jmp     short loc_10022882
cmp     cl, 1
jg      short loc_10022889
inc     eax
cmp     eax, edx
jl      short loc_10022873
jmp     short loc_100228a1
mov     edx, [ebp+arg_4]
push    edx
push    eax
mov     eax, [ebp+var_78]
push    offset amultipleusesfo
push    0
push    eax
call    sub_10021b60
add     esp, 14h
mov     ecx, [ebp+var_8c]
mov     edx, dword ptr [ebp+var_74]
movzx   eax, byte ptr [ecx+edx+7]
cmp     edi, eax
jz      short loc_100228cc
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+var_78]
push    ecx
push    eax
push    edi
push    offset afragmentationo
push    0
push    edx
call    sub_10021b60
add     esp, 18h
call    sub_10010c90
mov     eax, [ebx+44h]
push    eax
call    sub_100154a0
mov     ecx, [ebp+var_4]
mov     eax, [ebp+var_94]
add     esp, 4
pop     edi
pop     esi
xor     ecx, ebp
inc     eax
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0c0h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ebx, [edi+4]
mov     esi, edx
mov     [ebp+var_bc], edi
mov     [ebp+var_80], esi
mov     [ebp+var_7c], ebx
call    sub_10019320
mov     eax, [ebx]
mov     ecx, [eax+0b4h]
mov     edx, [ecx+0ch]
mov     ecx, [ebp+arg_8]
mov     [ebp+var_b8], ebx
mov     eax, [ebx]
mov     [ebp+var_b4], eax
mov     eax, [ebx+2ch]
mov     [ebp+var_a8], ecx
xor     ecx, ecx
mov     dword ptr [ebp+var_c0], edx
mov     [ebp+var_ac], eax
mov     [ebp+var_a4], ecx
mov     [ebp+var_a0], ecx
mov     [esi], ecx
cmp     eax, ecx
jnz     short loc_100229a8
cmp     [edi+9], cl
jz      short loc_10022995
dec     dword ptr [edi+0ch]
jnz     short loc_10022995
mov     edx, [edi+4]
mov     eax, [edx+38h]
cmp     eax, ecx
jz      short loc_10022991
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
shr     eax, 3
lea     esi, [eax+1]
push    esi
call    sub_100094a0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_100229c9
push    esi
push    0
push    edi
call    memset
add     esp, 0ch
mov     [ebp+var_b0], edi
test    edi, edi
jnz     short loc_10022a18
mov     eax, [ebp+var_80]
mov     esi, [ebp+var_bc]
mov     dword ptr [eax], 1
cmp     byte ptr [esi+9], 0
jz      short loc_10022a05
dec     dword ptr [esi+0ch]
jnz     short loc_10022a05
mov     ecx, [esi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_10022a01
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [ebx+20h]
inc     eax
cmp     eax, [ebp+var_ac]
ja      short loc_10022a3c
mov     ecx, eax
mov     edx, eax
and     ecx, 7
mov     al, 1
shl     al, cl
shr     edx, 3
or      [edi+edx], al
mov     [ebp+var_8c], 64h
mov     [ebp+var_88], 4e20h
mov     [ebp+var_84], 200h
xor     eax, eax
mov     [ebp+var_9c], eax
mov     [ebp+var_90], eax
mov     [ebp+var_82], al
lea     ecx, [ebp+var_74]
mov     [ebp+src], ecx
mov     edx, ecx
mov     [ebp+var_94], edx
mov     eax, [ebx+0ch]
mov     eax, [eax+38h]
movzx   ecx, byte ptr [eax+24h]
movzx   edx, byte ptr [eax+25h]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+26h]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+27h]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+21h]
push    offset amainfreelist
push    ecx
movzx   ecx, byte ptr [eax+20h]
shl     ecx, 8
or      ecx, edx
movzx   edx, byte ptr [eax+22h]
movzx   eax, byte ptr [eax+23h]
shl     ecx, 8
or      ecx, edx
shl     ecx, 8
or      ecx, eax
push    ecx
lea     ecx, [ebp+var_b8]
push    1
push    ecx
call    sub_10021cd0
xor     edi, edi
add     esp, 14h
mov     [ebp+var_78], edi
cmp     [ebp+arg_4], edi
jle     short loc_10022b46
cmp     [ebp+var_a8], 0
jz      short loc_10022b46
mov     edx, [ebp+arg_0]
mov     eax, [edx+edi*4]
test    eax, eax
jz      short loc_10022b3d
cmp     byte ptr [ebx+11h], 0
jz      short loc_10022b1e
cmp     eax, 1
jle     short loc_10022b1e
push    0
push    0
mov     bl, 1
mov     edi, eax
lea     esi, [ebp+var_b8]
call    sub_10021c50
mov     edi, [ebp+var_78]
mov     ebx, [ebp+var_7c]
add     esp, 8
mov     eax, [ebp+arg_0]
mov     ecx, [eax+edi*4]
push    0
push    0
push    offset alistoftreeroot
push    ecx
lea     edx, [ebp+var_b8]
push    edx
call    sub_10022050
add     esp, 14h
inc     edi
mov     [ebp+var_78], edi
cmp     edi, [ebp+arg_4]
jl      short loc_10022ae4
mov     edi, 1
cmp     [ebp+var_ac], edi
jb      loc_10022c55
cmp     [ebp+var_a8], 0
jz      loc_10022c55
mov     ecx, edi
and     ecx, 7
mov     eax, 1
shl     eax, cl
mov     ecx, [ebp+var_b0]
mov     esi, edi
shr     esi, 3
mov     [ebp+var_78], eax
mov     [ebp+var_7c], esi
test    [esi+ecx], al
jnz     short loc_10022be6
cmp     edi, 2
jnb     short loc_10022b8f
xor     ecx, ecx
jmp     short loc_10022bc2
mov     eax, 0cccccccdh
mul     dword ptr [ebx+24h]
mov     esi, edx
shr     esi, 2
xor     edx, edx
inc     esi
lea     eax, [edi-2]
div     esi
xor     edx, edx
mov     ecx, eax
mov     eax, dword_1008031c
imul    ecx, esi
div     dword ptr [ebx+20h]
add     ecx, 2
inc     eax
cmp     ecx, eax
jnz     short loc_10022bbc
inc     ecx
mov     eax, [ebp+var_78]
mov     esi, [ebp+var_7c]
cmp     ecx, edi
jnz     short loc_10022bcc
cmp     byte ptr [ebx+11h], 0
jnz     short loc_10022be6
push    edi
push    offset apagedisneverus
lea     edx, [ebp+var_b8]
push    0
push    edx
call    sub_10021b60
mov     eax, [ebp+var_78]
add     esp, 10h
mov     ecx, [ebp+var_b0]
test    [esi+ecx], al
jz      short loc_10022c48
cmp     edi, 2
jnb     short loc_10022bfa
xor     ecx, ecx
jmp     short loc_10022c27
mov     eax, 0cccccccdh
mul     dword ptr [ebx+24h]
mov     esi, edx
shr     esi, 2
xor     edx, edx
inc     esi
lea     eax, [edi-2]
div     esi
xor     edx, edx
mov     ecx, eax
mov     eax, dword_1008031c
imul    ecx, esi
div     dword ptr [ebx+20h]
add     ecx, 2
inc     eax
cmp     ecx, eax
jnz     short loc_10022c27
inc     ecx
cmp     ecx, edi
jnz     short loc_10022c48
cmp     byte ptr [ebx+11h], 0
jz      short loc_10022c48
push    edi
push    offset apointermappage
lea     edx, [ebp+var_b8]
push    0
push    edx
call    sub_10021b60
add     esp, 10h
inc     edi
cmp     edi, [ebp+var_ac]
jbe     loc_10022b57
mov     eax, [ebx]
mov     ecx, [eax+0b4h]
mov     eax, [ecx+0ch]
mov     ecx, dword ptr [ebp+var_c0]
cmp     ecx, eax
jz      short loc_10022c82
push    eax
push    ecx
push    offset aoutstandingpag
lea     edx, [ebp+var_b8]
push    0
push    edx
call    sub_10021b60
add     esp, 14h
mov     esi, [ebp+var_bc]
cmp     byte ptr [esi+9], 0
jz      short loc_10022cab
dec     dword ptr [esi+0ch]
jnz     short loc_10022cab
mov     eax, [esi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_10022ca7
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
mov     ecx, [ebp+var_b0]
push    ecx
call    sub_10009770
add     esp, 4
cmp     [ebp+var_a0], 0
jz      short loc_10022d2c
mov     eax, [ebp+var_94]
cmp     eax, [ebp+src]
jz      short loc_10022d0d
cmp     byte ptr [ebp+var_84+1], 1
jnz     short loc_10022d04
mov     ecx, [ebp+var_9c]
call    sub_10009810
mov     edx, [ebp+var_a4]
mov     eax, [ebp+var_80]
inc     edx
mov     [eax], edx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    eax
call    sub_10009770
add     esp, 4
mov     edx, [ebp+var_a4]
mov     eax, [ebp+var_80]
inc     edx
mov     [eax], edx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_a4]
mov     ecx, [ebp+var_80]
mov     [ecx], eax
test    eax, eax
mov     eax, [ebp+var_94]
jnz     short loc_10022d8c
cmp     eax, [ebp+src]
jz      short loc_10022d79
cmp     byte ptr [ebp+var_84+1], 1
jnz     short loc_10022d70
mov     ecx, [ebp+var_9c]
call    sub_10009810
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    eax
call    sub_10009770
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jz      short loc_10022e03
mov     edx, [ebp+var_90]
mov     byte ptr [edx+eax], 0
mov     cl, byte ptr [ebp+var_84+1]
mov     eax, [ebp+var_94]
test    cl, cl
jz      short loc_10022e03
cmp     eax, [ebp+src]
jnz     short loc_10022e03
cmp     cl, 1
jnz     short loc_10022dcb
mov     ecx, [ebp+var_90]
mov     esi, [ebp+var_9c]
inc     ecx
call    sub_10009a40
jmp     short loc_10022ddb
mov     eax, [ebp+var_90]
inc     eax
push    eax
call    sub_10009510
add     esp, 4
mov     [ebp+var_94], eax
test    eax, eax
jz      short loc_10022e03
mov     ecx, [ebp+var_90]
mov     edx, [ebp+src]
inc     ecx
push    ecx
push    edx
push    eax
call    memcpy
mov     eax, [ebp+var_94]
add     esp, 0ch
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [eax+4]
mov     eax, [ecx]
cmp     byte ptr [eax+0eh], 0
jz      short loc_10022e31
mov     eax, offset dword_100796bc
retn
mov     eax, [eax+90h]
retn
push    ebx
push    esi
push    edi
mov     edi, eax
call    sub_10019320
mov     bl, [edi+9]
mov     ecx, [edi+4]
test    bl, bl
jz      short loc_10022e87
cmp     [ecx+4ch], edi
jz      short loc_10022e66
test    byte ptr [ecx+16h], 20h
jz      short loc_10022e66
mov     esi, 106h
jmp     short loc_10022e89
mov     eax, [ecx+48h]
test    eax, eax
jz      short loc_10022e87
mov     edx, 1
cmp     [eax], edi
jz      short loc_10022e80
cmp     [eax+4], edx
jnz     short loc_10022e80
cmp     [eax+8], dl
jnz     short loc_10022e5f
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_10022e72
xor     esi, esi
test    bl, bl
jz      short loc_10022ea7
dec     dword ptr [edi+0ch]
jnz     short loc_10022ea7
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_10022ea3
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
xor     eax, eax
push    ebx
push    edi
cmp     [esi+9], al
jz      short loc_10022f14
lea     ebx, [ecx+1]
mov     edi, esi
mov     byte ptr [ebp+var_4], bl
call    sub_10019320
mov     dl, bl
mov     ebx, [ebp+arg_0]
mov     edi, ebx
mov     ecx, esi
call    sub_100195c0
mov     edi, eax
test    edi, edi
jnz     short loc_10022eef
mov     eax, [ebp+var_4]
push    eax
push    ebx
mov     edi, esi
call    sub_10019610
add     esp, 8
mov     edi, eax
cmp     byte ptr [esi+9], 0
jz      short loc_10022f12
dec     dword ptr [esi+0ch]
jnz     short loc_10022f12
mov     ecx, [esi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_10022f0e
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
mov     eax, edi
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     al, [edi+53h]
cmp     al, 2
jb      short loc_10022f71
cmp     al, 3
jnz     short loc_10022f3b
mov     eax, [edi+4ch]
jmp     short loc_10022f73
mov     ecx, [edi+44h]
mov     edx, [edi+40h]
lea     eax, [edi+4ch]
push    eax
push    0
push    ecx
push    edx
mov     edx, [edi+48h]
mov     byte ptr [edi+53h], 0
call    sub_100199d0
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     short loc_10022f6d
mov     eax, [edi+48h]
push    eax
call    sub_10009770
add     esp, 4
mov     [edi+48h], esi
mov     eax, esi
jmp     short loc_10022f73
xor     eax, eax
test    eax, eax
jnz     short loc_10022fb0
cmp     byte ptr [edi+53h], 1
jz      short loc_10022f88
mov     eax, 4
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+50h], 0
jnz     short loc_10022f99
mov     eax, 8
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+src]
mov     edx, [ebp+size]
mov     eax, [ebp+arg_4]
push    1
push    ecx
push    edx
push    eax
push    edi
call    sub_1001d750
add     esp, 14h
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
mov     ebx, [ebp+arg_0]
mov     ecx, [ebx+4]
mov     eax, 0ffefh
and     [ecx+16h], ax
cmp     [ebp+arg_4], 1
movzx   eax, word ptr [ecx+16h]
push    esi
push    edi
mov     [ebp+var_8], ecx
jnz     short loc_10022fec
or      eax, 10h
mov     [ecx+16h], ax
mov     esi, [ebx+4]
mov     edi, ebx
mov     [ebp+var_4], 0
call    sub_10019320
mov     al, [ebx+8]
cmp     al, 2
jz      loc_10023140
cmp     al, 1
jz      loc_10023140
movzx   ecx, word ptr [esi+16h]
test    cl, 40h
jz      short loc_1002302d
mov     edx, [esi+4ch]
cmp     dword ptr [edx], 0
jz      short loc_1002302d
mov     [ebp+var_4], 106h
jmp     loc_10023140
cmp     byte ptr [ebx+9], 0
mov     eax, [ebx+4]
jz      short loc_1002306b
cmp     [eax+4ch], ebx
jz      short loc_1002304d
test    byte ptr [eax+16h], 20h
jz      short loc_1002304d
mov     [ebp+var_4], 106h
jmp     loc_10023140
mov     eax, [eax+48h]
test    eax, eax
jz      short loc_1002306b
cmp     [eax], ebx
jz      short loc_10023064
cmp     dword ptr [eax+4], 1
jnz     short loc_10023064
cmp     byte ptr [eax+8], 1
jnz     short loc_10023021
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_10023054
mov     eax, ecx
and     eax, 0fff7h
cmp     dword ptr [esi+2ch], 0
mov     [ebp+var_4], 0
mov     [esi+16h], ax
jnz     short loc_10023090
or      eax, 8
mov     [esi+16h], ax
lea     ebx, [ebx+0]
cmp     dword ptr [esi+0ch], 0
jnz     short loc_100230a9
mov     ebx, esi
call    sub_1001b970
mov     ebx, [ebp+arg_0]
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_10023090
jmp     short loc_100230af
cmp     [ebp+var_4], 0
jz      short loc_100230cf
cmp     byte ptr [esi+13h], 0
jnz     short loc_100230cf
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_100230cf
mov     eax, [eax+44h]
push    eax
call    sub_100154a0
add     esp, 4
mov     dword ptr [esi+0ch], 0
cmp     byte ptr [ebp+var_4], 5
jnz     short loc_1002310d
cmp     byte ptr [esi+13h], 0
jnz     short loc_1002310d
mov     edi, [esi+4]
add     edi, 1a4h
jz      short loc_1002310d
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_1002310d
mov     eax, [edi+8]
test    eax, eax
js      short loc_1002310d
mov     edx, [edi+4]
push    eax
push    edx
call    ecx
add     esp, 8
test    eax, eax
jz      short loc_10023106
inc     dword ptr [edi+8]
jmp     short loc_10023090
mov     dword ptr [edi+8], 0ffffffffh
cmp     [ebp+var_4], 0
jnz     short loc_10023140
cmp     byte ptr [ebx+8], 0
jnz     short loc_10023132
inc     dword ptr [esi+28h]
cmp     byte ptr [ebx+9], 0
jz      short loc_10023132
mov     byte ptr [ebx+24h], 1
mov     eax, [esi+48h]
lea     ecx, [ebx+1ch]
mov     [ebx+28h], eax
mov     [esi+48h], ecx
mov     byte ptr [ebx+8], 1
cmp     byte ptr [esi+13h], 1
jnb     short loc_10023140
mov     byte ptr [esi+13h], 1
cmp     byte ptr [ebx+9], 0
jz      short loc_10023163
dec     dword ptr [ebx+0ch]
jnz     short loc_10023163
mov     edx, [ebx+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_1002315f
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [ebx+0ah], 0
mov     eax, [ebp+var_4]
mov     edi, [ebp+var_8]
test    eax, eax
jnz     short loc_100231ab
mov     ecx, [edi+0ch]
mov     esi, [ecx+38h]
mov     cl, byte ptr [ebp+arg_4]
cmp     [esi+12h], cl
jnz     short loc_10023180
cmp     [esi+13h], cl
jz      short loc_100231ab
push    2
push    ebx
call    sub_1001be00
add     esp, 8
test    eax, eax
jnz     short loc_100231ab
mov     edx, [edi+0ch]
mov     eax, [edx+44h]
push    eax
call    sub_100158a0
add     esp, 4
test    eax, eax
jnz     short loc_100231ab
mov     cl, byte ptr [ebp+arg_4]
mov     [esi+12h], cl
mov     [esi+13h], cl
mov     ecx, 0ffefh
and     [edi+16h], cx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_0]
push    edi
mov     ebx, eax
call    sub_1003ff40
mov     [ebp+var_4], eax
cmp     eax, 1
jnz     loc_10023264
mov     ecx, 22ch
xor     edi, edi
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1002324a
push    22ch
push    edi
push    ebx
call    memset
mov     eax, [ebp+arg_0]
add     esp, 0ch
mov     [ebx], eax
call    sub_10043bb0
test    eax, eax
jz      short loc_1002322a
mov     ecx, [ebx+4]
mov     edx, [ebx+0ch]
push    ecx
push    offset as
push    edx
mov     eax, esi
call    sub_1000ba40
add     esp, 0ch
mov     edi, 1
mov     eax, [ebx+4]
mov     ecx, esi
call    sub_10009810
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
test    edi, edi
jz      short loc_10023283
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset aoutofmemory
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jns     short loc_10023286
push    ebx
push    offset aunknowndatabas
push    1
mov     eax, esi
call    sub_1000ba40
add     esp, 0ch
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+10h]
pop     edi
add     eax, eax
mov     eax, [edx+eax*8+4]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_8]
mov     eax, [ebx+0ch]
push    edi
test    eax, eax
jz      short loc_100232b9
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [ebp+arg_0]
mov     eax, [edi+0ch]
test    eax, eax
jz      short loc_100232cd
push    eax
call    dword_1008027c
add     esp, 4
cmp     ebx, edi
jnz     short loc_100232ee
push    offset asourceanddesti
push    1
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     [ebp+arg_8], 0
jmp     loc_10023392
push    esi
push    30h
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_1002330c
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
mov     [ebp+arg_8], esi
test    esi, esi
jnz     short loc_10023322
push    esi
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
jmp     short loc_10023391
mov     eax, [ebp+arg_c]
push    ebx
mov     ecx, edi
call    sub_100231c0
mov     [esi+18h], eax
mov     eax, [ebp+arg_4]
push    edi
mov     ecx, edi
call    sub_100231c0
mov     ecx, [esi+18h]
add     esp, 8
mov     [esi+4], eax
mov     [esi], edi
mov     [esi+14h], ebx
mov     dword ptr [esi+10h], 1
mov     dword ptr [esi+28h], 0
test    ecx, ecx
jz      short loc_10023379
test    eax, eax
jz      short loc_10023379
mov     ecx, [ecx+4]
mov     ecx, [ecx+20h]
push    0
push    0ffffffffh
push    eax
mov     eax, ecx
call    sub_1001b6c0
add     esp, 0ch
cmp     eax, 7
jnz     short loc_1002338b
push    esi
call    sub_10009770
add     esp, 4
mov     [ebp+arg_8], 0
jmp     short loc_10023391
mov     esi, [esi+18h]
inc     dword ptr [esi+10h]
pop     esi
mov     edi, [edi+0ch]
test    edi, edi
jz      short loc_100233a3
push    edi
call    dword_10080284
add     esp, 4
mov     eax, [ebx+0ch]
pop     edi
pop     ebx
test    eax, eax
jz      short loc_100233b6
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+arg_8]
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 40h
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+4]
mov     eax, [eax+4]
mov     edx, [eax]
mov     ecx, [ecx+18h]
push    ebx
mov     ebx, [eax+20h]
mov     [ebp+var_4], edx
mov     edx, [ecx+4]
push    esi
mov     esi, [edx+20h]
push    edi
mov     [ebp+var_10], ebx
mov     [ebp+size], esi
cmp     esi, ebx
jl      short loc_100233f0
mov     [ebp+size], ebx
mov     eax, esi
cdq
mov     edi, eax
mov     eax, [ebp+arg_4]
push    edx
push    edi
push    0
push    eax
mov     [ebp+var_20], edi
mov     [ebp+var_1c], edx
call    __allmul
mov     [ebp+var_28], eax
mov     [ebp+var_24], edx
mov     [ebp+arg_4], 0
cmp     esi, ebx
jz      short loc_10023429
mov     ecx, [ebp+var_4]
cmp     byte ptr [ecx+0eh], 0
jz      short loc_10023429
mov     [ebp+arg_4], 8
mov     esi, eax
sub     esi, edi
mov     edi, [ebp+arg_4]
mov     ecx, edx
sbb     ecx, [ebp+var_1c]
mov     [ebp+var_18], esi
mov     [ebp+var_14], ecx
test    edi, edi
jz      short loc_1002345f
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
jmp     short loc_10023450
mov     ecx, [ebp+var_14]
mov     ebx, [ebp+var_10]
mov     edx, [ebp+var_24]
mov     eax, [ebp+var_28]
mov     edi, [ebp+arg_4]
cmp     ecx, edx
jg      short loc_1002343f
jl      short loc_10023469
cmp     esi, eax
jnb     short loc_1002343f
mov     eax, ebx
cdq
push    edx
push    eax
push    ecx
xor     edi, edi
push    esi
mov     [ebp+var_8], edi
mov     [ebp+var_30], eax
mov     [ebp+var_2c], edx
call    __alldvrm
mov     [ebp+var_3c], edx
mov     edx, [ebp+arg_0]
mov     [ebp+var_34], ebx
lea     ebx, [eax+1]
mov     eax, [edx+4]
mov     [ebp+var_38], ecx
mov     ecx, [eax+4]
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [ecx+20h]
inc     eax
cmp     ebx, eax
jz      loc_10023634
test    ebx, ebx
jnz     short loc_100234d1
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     [ebp+arg_4], 0bh
jmp     loc_1002362b
mov     eax, [ebp+var_4]
mov     esi, [eax+28h]
test    esi, esi
jnz     loc_100235d1
mov     edi, [eax+0b4h]
lea     edx, [ebp+var_8]
push    edx
push    1
push    ebx
call    sub_10010550
mov     edi, [ebp+var_8]
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     loc_100235d1
cmp     [edi+10h], eax
jz      short loc_10023514
mov     eax, [ebp+var_4]
inc     dword ptr [eax+0a0h]
jmp     loc_100235e6
mov     ecx, [ebp+var_4]
mov     [edi+10h], ecx
cmp     ebx, 7fffffffh
ja      short loc_10023581
mov     eax, dword_1008031c
mov     esi, [ecx+80h]
cdq
idiv    esi
inc     eax
cmp     ebx, eax
jz      short loc_10023581
cmp     byte ptr [ecx+0eh], 0
jnz     short loc_10023561
cmp     [ecx+18h], ebx
jb      short loc_10023561
mov     eax, [ecx+3ch]
cmp     dword ptr [eax], 0
jz      short loc_10023561
inc     dword ptr [ecx+0a4h]
mov     eax, edi
call    sub_100137f0
mov     esi, eax
test    esi, esi
jz      loc_100235e6
jmp     short loc_1002359f
cmp     ebx, [ecx+84h]
jbe     short loc_10023570
mov     esi, 0dh
jmp     short loc_1002359f
mov     ecx, [edi+4]
push    esi
push    0
push    ecx
call    memset
add     esp, 0ch
jmp     short loc_100235e6
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     esi, 0bh
test    byte ptr [edi+18h], 2
jz      short loc_100235ac
mov     eax, edi
call    sub_100104b0
mov     eax, [edi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [edi+14h], 1
jnz     short loc_100235bf
mov     dword ptr [eax+2ch], 0
mov     edx, [edi]
mov     eax, [eax+28h]
push    1
push    edx
push    eax
call    dword_100802b0
add     esp, 0ch
mov     ecx, [ebp+var_4]
push    ecx
call    sub_10015290
add     esp, 4
xor     edi, edi
mov     [ebp+arg_4], esi
test    esi, esi
jnz     short loc_10023628
push    edi
call    sub_100158a0
add     esp, 4
mov     [ebp+arg_4], eax
test    eax, eax
jnz     short loc_10023628
mov     edx, [ebp+size]
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+var_20]
push    edx
mov     edx, [ebp+var_14]
push    eax
mov     eax, [ebp+var_18]
push    ecx
push    edx
push    eax
call    __allrem
add     eax, [ebp+arg_8]
mov     ecx, [edi+4]
add     ecx, [ebp+var_38]
push    eax
push    ecx
call    memcpy
mov     edx, [edi+8]
add     esp, 0ch
mov     byte ptr [edx], 0
mov     esi, [ebp+var_18]
push    edi
call    sub_100154a0
add     esp, 4
add     esi, [ebp+var_30]
mov     eax, [ebp+var_2c]
adc     [ebp+var_14], eax
cmp     [ebp+arg_4], 0
mov     [ebp+var_18], esi
jz      loc_10023450
mov     eax, [ebp+arg_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 3ch
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx+14h]
mov     eax, [eax+0ch]
push    esi
push    edi
test    eax, eax
jz      short loc_10023683
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [ebx+18h]
call    sub_10019320
mov     eax, [ebx]
test    eax, eax
jz      short loc_100236a2
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_100236a2
push    eax
call    dword_1008027c
add     esp, 4
mov     esi, [ebx+1ch]
test    esi, esi
jz      short loc_100236b7
cmp     esi, 5
jz      short loc_100236b7
cmp     esi, 6
jnz     loc_1002401a
cmp     dword ptr [ebx], 0
mov     eax, [ebx+18h]
mov     ecx, [eax+4]
mov     edx, [ecx]
mov     ecx, [ebx+4]
mov     [esp+48h+var_3c], edx
mov     edx, [ecx+4]
mov     edx, [edx]
mov     [esp+48h+var_20], edx
mov     [esp+48h+var_1c], 0
jz      short loc_100236ef
mov     eax, [eax+4]
cmp     byte ptr [eax+13h], 2
jnz     short loc_100236ef
mov     esi, 5
jmp     loc_100238b8
xor     esi, esi
cmp     [ebx+0ch], esi
jnz     short loc_10023723
push    2
push    ecx
call    sub_1001be00
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_100238b8
mov     eax, [ebx+4]
lea     ecx, [ebx+8]
push    ecx
push    1
mov     dword ptr [ebx+0ch], 1
call    sub_100218e0
add     esp, 8
mov     edi, [ebx+18h]
cmp     byte ptr [edi+8], 0
jnz     loc_100238b8
mov     esi, [edi+4]
mov     [esp+48h+var_38], 0
call    sub_10019320
mov     al, [edi+8]
cmp     al, 2
jz      loc_10023886
cmp     al, 1
jz      loc_10023886
movzx   edx, word ptr [esi+16h]
test    dl, 40h
jz      short loc_10023771
mov     eax, [esi+4ch]
cmp     dword ptr [eax], 0
jz      short loc_10023771
mov     [esp+48h+var_38], 106h
jmp     loc_10023886
cmp     byte ptr [edi+9], 0
mov     eax, [edi+4]
jz      short loc_100237b5
cmp     [eax+4ch], edi
jz      short loc_10023792
test    byte ptr [eax+16h], 20h
jz      short loc_10023792
mov     [esp+48h+var_38], 106h
jmp     loc_10023886
mov     eax, [eax+48h]
test    eax, eax
jz      short loc_100237b5
mov     ecx, 1
mov     edi, edi
cmp     [eax], edi
jz      short loc_100237ae
cmp     [eax+4], ecx
jnz     short loc_100237ae
cmp     [eax+8], cl
jnz     short loc_10023764
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_100237a0
mov     eax, edx
and     eax, 0fff7h
cmp     dword ptr [esi+2ch], 0
mov     [esp+48h+var_38], 0
mov     [esi+16h], ax
jnz     short loc_100237d5
or      eax, 8
mov     [esi+16h], ax
cmp     dword ptr [esi+0ch], 0
jnz     short loc_100237ec
mov     ebx, esi
call    sub_1001b970
mov     [esp+48h+var_38], eax
test    eax, eax
jz      short loc_100237d5
jmp     short loc_100237f3
cmp     [esp+48h+var_38], 0
jz      short loc_10023813
cmp     byte ptr [esi+13h], 0
jnz     short loc_10023813
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10023813
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     dword ptr [esi+0ch], 0
cmp     byte ptr [esp+48h+var_38], 5
jnz     short loc_10023852
cmp     byte ptr [esi+13h], 0
jnz     short loc_10023852
mov     ebx, [esi+4]
add     ebx, 1a4h
jz      short loc_10023852
mov     ecx, [ebx]
test    ecx, ecx
jz      short loc_10023852
mov     eax, [ebx+8]
test    eax, eax
js      short loc_10023852
mov     edx, [ebx+4]
push    eax
push    edx
call    ecx
add     esp, 8
test    eax, eax
jz      short loc_1002384b
inc     dword ptr [ebx+8]
jmp     short loc_100237d5
mov     dword ptr [ebx+8], 0ffffffffh
cmp     [esp+48h+var_38], 0
jnz     short loc_10023886
cmp     byte ptr [edi+8], 0
jnz     short loc_10023878
inc     dword ptr [esi+28h]
cmp     byte ptr [edi+9], 0
jz      short loc_10023878
mov     byte ptr [edi+24h], 1
mov     eax, [esi+48h]
lea     ecx, [edi+1ch]
mov     [edi+28h], eax
mov     [esi+48h], ecx
mov     byte ptr [edi+8], 1
cmp     byte ptr [esi+13h], 1
jnb     short loc_10023886
mov     byte ptr [esi+13h], 1
cmp     byte ptr [edi+9], 0
jz      short loc_100238a9
dec     dword ptr [edi+0ch]
jnz     short loc_100238a9
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_100238a5
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     esi, [esp+48h+var_38]
mov     ebx, [ebp+arg_0]
mov     [esp+48h+var_1c], 1
mov     eax, [ebx+18h]
mov     ecx, [eax+4]
mov     eax, [ebx+4]
mov     eax, [eax+4]
mov     edi, [eax+20h]
mov     eax, [eax]
movzx   eax, byte ptr [eax+5]
mov     edx, [ecx+20h]
mov     [esp+48h+var_24], edx
mov     [esp+48h+var_10], edi
mov     [esp+48h+var_18], eax
test    esi, esi
jnz     short loc_100238ec
cmp     eax, 5
jnz     short loc_100238ec
cmp     edx, edi
jz      short loc_100238ec
lea     esi, [eax+3]
mov     ecx, [ecx+2ch]
mov     edi, [esp+48h+var_2c]
mov     [esp+48h+var_38], ecx
mov     [esp+48h+var_28], 0
mov     eax, [ebp+arg_4]
test    eax, eax
js      short loc_10023910
cmp     [esp+48h+var_28], eax
jge     loc_10023acc
mov     edx, [ebp+arg_0]
mov     ebx, [edx+10h]
cmp     ebx, [esp+48h+var_38]
ja      loc_10023acc
test    esi, esi
jnz     loc_10023b0f
mov     eax, edx
mov     ecx, [eax+18h]
mov     ecx, [ecx+4]
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [ecx+20h]
inc     eax
cmp     ebx, eax
jz      loc_10023ab8
test    ebx, ebx
jnz     short loc_10023974
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
mov     eax, [ebp+arg_0]
mov     ecx, 1
add     [eax+10h], ecx
add     esp, 10h
add     [esp+48h+var_28], ecx
lea     esi, [ebx+0bh]
jmp     short loc_100238ff
mov     ecx, [esp+48h+var_3c]
mov     esi, [ecx+28h]
test    esi, esi
jnz     loc_10023a7b
lea     edx, [esp+48h+var_2c]
push    edx
mov     eax, ecx
mov     edi, [eax+0b4h]
push    1
push    ebx
call    sub_10010550
mov     edi, [esp+54h+var_2c]
mov     ecx, [esp+54h+var_3c]
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     loc_10023a7b
cmp     [edi+10h], eax
jz      short loc_100239bd
inc     dword ptr [ecx+0a0h]
jmp     loc_10023a92
mov     [edi+10h], ecx
cmp     ebx, 7fffffffh
ja      short loc_10023a2b
mov     eax, dword_1008031c
mov     esi, [ecx+80h]
cdq
idiv    esi
inc     eax
cmp     ebx, eax
jz      short loc_10023a2b
cmp     byte ptr [ecx+0eh], 0
jnz     short loc_10023a0b
cmp     [ecx+18h], ebx
jb      short loc_10023a0b
mov     edx, [ecx+3ch]
cmp     dword ptr [edx], 0
jz      short loc_10023a0b
mov     eax, [esp+48h+var_3c]
inc     dword ptr [eax+0a4h]
mov     eax, edi
call    sub_100137f0
mov     esi, eax
test    esi, esi
jz      loc_10023a92
jmp     short loc_10023a49
cmp     ebx, [ecx+84h]
jbe     short loc_10023a1a
mov     esi, 0dh
jmp     short loc_10023a49
mov     eax, [edi+4]
push    esi
push    0
push    eax
call    memset
add     esp, 0ch
jmp     short loc_10023a92
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     esi, 0bh
test    byte ptr [edi+18h], 2
jz      short loc_10023a56
mov     eax, edi
call    sub_100104b0
mov     eax, [edi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [edi+14h], 1
jnz     short loc_10023a69
mov     dword ptr [eax+2ch], 0
mov     ecx, [edi]
mov     edx, [eax+28h]
push    1
push    ecx
push    edx
call    dword_100802b0
add     esp, 0ch
mov     eax, [esp+48h+var_3c]
push    eax
call    sub_10015290
xor     edi, edi
add     esp, 4
mov     [esp+48h+var_2c], edi
test    esi, esi
jnz     short loc_10023ab8
mov     eax, [edi+4]
mov     ecx, [ebp+arg_0]
push    eax
push    ebx
push    ecx
call    sub_100233c0
mov     ebx, [edi+10h]
mov     esi, eax
add     esp, 0ch
mov     eax, edi
call    sub_100106d0
push    ebx
call    sub_10015290
add     esp, 4
mov     eax, [ebp+arg_0]
mov     ecx, 1
add     [eax+10h], ecx
add     [esp+48h+var_28], ecx
jmp     loc_100238ff
test    esi, esi
jnz     short loc_10023b0f
mov     edx, [esp+48h+var_38]
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+10h]
mov     edi, edx
sub     edi, eax
inc     edi
mov     [ecx+24h], edx
mov     [ecx+20h], edi
cmp     eax, edx
ja      short loc_10023b18
cmp     [ecx+28h], esi
jnz     loc_10023f75
mov     edx, [ecx+18h]
mov     eax, [edx+4]
mov     eax, [eax]
mov     edx, [eax+58h]
mov     [ecx+2ch], edx
mov     [eax+58h], ecx
mov     dword ptr [ecx+28h], 1
jmp     loc_10023f75
cmp     esi, 65h
jnz     loc_10023f75
mov     eax, [ebp+arg_0]
mov     ebx, [eax+8]
mov     edi, [eax+4]
mov     esi, [edi+4]
inc     ebx
call    sub_10019320
mov     eax, [esi+0ch]
mov     edx, [eax+44h]
mov     ecx, [eax+38h]
push    edx
mov     [esp+4ch+var_28], ecx
call    sub_100158a0
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_10023b65
mov     eax, [esp+48h+var_28]
mov     ecx, ebx
shr     ecx, 18h
mov     [eax+28h], cl
mov     edx, ebx
shr     edx, 10h
mov     ecx, ebx
shr     ecx, 8
mov     [eax+29h], dl
mov     [eax+2ah], cl
mov     [eax+2bh], bl
cmp     byte ptr [edi+9], 0
jz      short loc_10023b88
dec     dword ptr [edi+0ch]
jnz     short loc_10023b88
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_10023b84
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
test    esi, esi
jnz     loc_10023f75
mov     edi, [ebp+arg_0]
mov     eax, [edi]
test    eax, eax
jz      short loc_10023b9e
call    sub_1003fad0
cmp     [esp+48h+var_18], 5
jnz     short loc_10023bb5
mov     eax, [edi+4]
push    2
push    eax
call    sub_10022fc0
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     loc_10023f75
mov     edi, [esp+48h+var_24]
mov     ebx, [esp+48h+var_10]
cmp     edi, ebx
jge     short loc_10023bf8
mov     eax, ebx
cdq
idiv    edi
mov     edx, [esp+48h+var_38]
mov     ecx, eax
lea     eax, [ecx+edx-1]
cdq
idiv    ecx
mov     ecx, eax
mov     eax, [ebp+arg_0]
mov     edx, [eax+4]
mov     esi, [edx+4]
mov     eax, dword_1008031c
xor     edx, edx
div     dword ptr [esi+20h]
inc     eax
cmp     ecx, eax
jnz     short loc_10023c04
dec     ecx
jmp     short loc_10023c04
mov     eax, edi
cdq
idiv    ebx
mov     ecx, eax
imul    ecx, [esp+48h+var_38]
mov     esi, [esp+48h+var_20]
mov     [esi+18h], ecx
cmp     edi, ebx
jge     loc_10023ee9
mov     eax, edi
cdq
mov     ecx, edx
mov     [esp+48h+var_8], eax
mov     eax, [esp+48h+var_38]
push    ecx
mov     [esp+4ch+var_4], ecx
mov     ecx, [esp+4ch+var_8]
cdq
push    ecx
push    edx
push    eax
call    __allmul
mov     [esp+48h+var_14], edx
mov     edx, [esi+3ch]
mov     [esp+48h+var_18], eax
push    1
push    0
mov     eax, esi
mov     [esp+50h+var_2c], edx
call    sub_10015d90
mov     ecx, dword_1008031c
mov     esi, eax
lea     eax, [ecx+ebx]
cdq
add     esp, 8
cmp     edx, [esp+48h+var_14]
jg      short loc_10023c69
jl      short loc_10023c71
cmp     eax, [esp+48h+var_18]
jb      short loc_10023c71
mov     eax, [esp+48h+var_18]
mov     edx, [esp+48h+var_14]
mov     [esp+48h+var_38], eax
lea     eax, [ecx+edi]
mov     [esp+48h+var_34], edx
cdq
mov     [esp+48h+var_10], eax
mov     [esp+48h+var_c], edx
test    esi, esi
jnz     loc_10023f75
mov     eax, [esp+48h+var_c]
cmp     eax, [esp+48h+var_34]
jg      loc_10023e5e
jl      short loc_10023cab
mov     ecx, [esp+48h+var_10]
cmp     ecx, [esp+48h+var_38]
jnb     loc_10023e5e
mov     edx, [esp+48h+var_4]
mov     ecx, [esp+48h+var_8]
push    edx
mov     edx, [esp+4ch+var_10]
push    ecx
push    eax
xor     edi, edi
push    edx
mov     [esp+58h+var_28], edi
call    __alldiv
mov     esi, eax
inc     esi
jnz     short loc_10023cec
push    offset ac0d89d4a975292
push    0a3fbh
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
lea     esi, [edi+0bh]
jmp     loc_10023e41
mov     eax, [esp+48h+var_3c]
mov     ebx, [eax+28h]
test    ebx, ebx
jnz     loc_10023df5
lea     ecx, [esp+48h+var_28]
push    ecx
mov     edx, eax
mov     edi, [edx+0b4h]
push    1
push    esi
call    sub_10010550
mov     edi, [esp+54h+var_28]
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     loc_10023df5
cmp     [edi+10h], eax
jz      short loc_10023d35
mov     eax, [esp+48h+var_3c]
inc     dword ptr [eax+0a0h]
jmp     loc_10023e0a
mov     ecx, [esp+48h+var_3c]
mov     [edi+10h], ecx
cmp     esi, 7fffffffh
ja      short loc_10023da5
mov     eax, dword_1008031c
mov     ebx, [ecx+80h]
cdq
idiv    ebx
inc     eax
cmp     esi, eax
jz      short loc_10023da5
cmp     byte ptr [ecx+0eh], 0
jnz     short loc_10023d85
cmp     [ecx+18h], esi
jb      short loc_10023d85
mov     eax, [ecx+3ch]
cmp     dword ptr [eax], 0
jz      short loc_10023d85
mov     eax, ecx
inc     dword ptr [eax+0a4h]
mov     eax, edi
call    sub_100137f0
mov     ebx, eax
test    ebx, ebx
jz      loc_10023e0a
jmp     short loc_10023dc3
cmp     esi, [ecx+84h]
jbe     short loc_10023d94
mov     ebx, 0dh
jmp     short loc_10023dc3
mov     ecx, [edi+4]
push    ebx
push    0
push    ecx
call    memset
add     esp, 0ch
jmp     short loc_10023e0a
push    offset ac0d89d4a975292
push    0a421h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     ebx, 0bh
test    byte ptr [edi+18h], 2
jz      short loc_10023dd0
mov     eax, edi
call    sub_100104b0
mov     eax, [edi+1ch]
dec     dword ptr [eax+0ch]
cmp     dword ptr [edi+14h], 1
jnz     short loc_10023de3
mov     dword ptr [eax+2ch], 0
mov     edx, [edi]
mov     eax, [eax+28h]
push    1
push    edx
push    eax
call    dword_100802b0
add     esp, 0ch
mov     ecx, [esp+48h+var_3c]
push    ecx
call    sub_10015290
add     esp, 4
xor     edi, edi
mov     esi, ebx
test    ebx, ebx
jnz     short loc_10023e41
mov     esi, [esp+48h+var_c]
mov     ecx, [edi+4]
mov     eax, [esp+48h+var_2c]
mov     edx, [eax]
push    esi
mov     esi, [esp+4ch+var_10]
push    esi
mov     esi, [esp+50h+var_24]
push    esi
push    ecx
push    eax
mov     eax, [edx+0ch]
call    eax
mov     ebx, [edi+10h]
mov     esi, eax
add     esp, 14h
mov     eax, edi
call    sub_100106d0
push    ebx
call    sub_10015290
add     esp, 4
mov     ecx, [esp+48h+var_8]
add     [esp+48h+var_10], ecx
mov     edx, [esp+48h+var_4]
adc     [esp+48h+var_c], edx
test    esi, esi
jz      loc_10023c8d
jmp     loc_10023f75
test    esi, esi
jnz     loc_10023f75
mov     esi, [esp+48h+var_2c]
mov     eax, [esi]
mov     edx, [eax+18h]
lea     ecx, [esp+48h+var_8]
push    ecx
push    esi
call    edx
add     esp, 8
test    eax, eax
jnz     short loc_10023ea5
mov     ecx, [esp+48h+var_14]
cmp     [esp+48h+var_4], ecx
jl      short loc_10023ea5
jg      short loc_10023e94
mov     edx, [esp+48h+var_8]
cmp     edx, [esp+48h+var_18]
jbe     short loc_10023ea5
mov     eax, [esi]
mov     edx, [eax+10h]
push    ecx
mov     ecx, [esp+4ch+var_18]
push    ecx
push    esi
call    edx
add     esp, 0ch
mov     esi, eax
test    eax, eax
jnz     loc_10023f75
mov     ecx, [esp+48h+var_20]
cmp     [ecx+7], al
jnz     short loc_10023eca
movzx   eax, byte ptr [ecx+0bh]
mov     ecx, [ecx+3ch]
mov     edx, [ecx]
push    eax
mov     eax, [edx+14h]
push    ecx
call    eax
jmp     short loc_10023ef4
mov     ecx, [ecx+3ch]
cmp     [ecx], eax
jz      short loc_10023ef7
mov     edx, [ecx]
mov     eax, [edx+28h]
push    0
push    8
push    ecx
call    eax
add     esp, 0ch
cmp     eax, 0ch
jnz     short loc_10023ef7
xor     eax, eax
jmp     short loc_10023ef7
push    0
push    0
mov     eax, esi
call    sub_10015d90
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_10023f75
mov     ecx, [ebp+arg_0]
mov     edi, [ecx+4]
cmp     [edi+8], al
jz      short loc_10023f70
call    sub_10019320
cmp     byte ptr [edi+8], 2
jnz     short loc_10023f48
mov     esi, [edi+4]
mov     ebx, [esi]
mov     eax, [ebx+28h]
test    eax, eax
jnz     loc_1002409a
cmp     byte ptr [ebx+0fh], 2
jnz     loc_10024074
cmp     [ebx+4], al
jz      loc_10024074
cmp     byte ptr [ebx+5], 1
jnz     loc_10024074
mov     byte ptr [ebx+0fh], 1
mov     byte ptr [esi+13h], 1
call    sub_1001ccf0
cmp     byte ptr [edi+9], 0
jz      short loc_10023f70
dec     dword ptr [edi+0ch]
jnz     short loc_10023f70
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_10023f6c
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     esi, 65h
cmp     [esp+48h+var_1c], 0
jz      loc_10024005
mov     edi, [ebp+arg_0]
mov     eax, [edi+18h]
push    0
call    sub_1001cc50
mov     edi, [edi+18h]
add     esp, 4
cmp     byte ptr [edi+8], 0
jz      short loc_10024005
call    sub_10019320
cmp     byte ptr [edi+8], 2
jnz     short loc_10023fdd
mov     ecx, [edi+4]
mov     ebx, [ecx]
mov     eax, [ebx+28h]
mov     [esp+48h+var_10], ecx
test    eax, eax
jnz     loc_10024100
cmp     byte ptr [ebx+0fh], 2
jnz     loc_100240ce
cmp     [ebx+4], al
jz      loc_100240ce
cmp     byte ptr [ebx+5], 1
jnz     loc_100240ce
mov     byte ptr [ebx+0fh], 1
mov     byte ptr [ecx+13h], 1
call    sub_1001ccf0
cmp     byte ptr [edi+9], 0
jz      short loc_10024005
dec     dword ptr [edi+0ch]
jnz     short loc_10024005
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_10024001
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
cmp     esi, 0c0ah
jnz     short loc_10024012
mov     esi, 7
mov     edx, [ebp+arg_0]
mov     [edx+1ch], esi
mov     ebx, edx
mov     eax, [ebx]
test    eax, eax
jz      short loc_10024031
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_10024031
push    eax
call    dword_10080284
add     esp, 4
mov     edi, [ebx+18h]
cmp     byte ptr [edi+9], 0
jz      short loc_10024057
dec     dword ptr [edi+0ch]
jnz     short loc_10024057
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_10024053
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     ecx, [ebx+14h]
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_1002406b
push    eax
call    dword_10080284
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   edx, byte ptr [ebx+12h]
push    edx
call    sub_10012b90
mov     ecx, eax
and     ecx, 0ffh
add     esp, 4
cmp     ecx, 0dh
jz      short loc_10024093
cmp     ecx, 0ah
jnz     short loc_1002409a
mov     [ebx+28h], eax
mov     byte ptr [ebx+0fh], 6
mov     ebx, eax
test    ebx, ebx
jz      loc_10023f44
cmp     byte ptr [edi+9], 0
jz      short loc_100240c7
dec     dword ptr [edi+0ch]
jnz     short loc_100240c7
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_100240c3
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     esi, ebx
jmp     loc_10023f75
movzx   edx, byte ptr [ebx+12h]
push    edx
call    sub_10012b90
mov     ecx, eax
and     ecx, 0ffh
add     esp, 4
cmp     ecx, 0dh
jz      short loc_100240ed
cmp     ecx, 0ah
jnz     short loc_100240f4
mov     [ebx+28h], eax
mov     byte ptr [ebx+0fh], 6
mov     ecx, [esp+48h+var_10]
test    eax, eax
jz      loc_10023fd9
cmp     byte ptr [edi+9], 0
jz      loc_10024005
dec     dword ptr [edi+0ch]
jnz     loc_10024005
mov     eax, [edi+4]
mov     eax, [eax+38h]
jmp     loc_10023ff3
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
test    esi, esi
jnz     short loc_10024134
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [esi+14h]
mov     [ebp+arg_0], eax
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002414b
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [esi+18h]
call    sub_10019320
mov     eax, [esi]
test    eax, eax
jz      short loc_10024175
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002416a
push    eax
call    dword_1008027c
add     esp, 4
cmp     dword ptr [esi], 0
jz      short loc_10024175
mov     eax, [esi+18h]
dec     dword ptr [eax+10h]
cmp     dword ptr [esi+28h], 0
jz      short loc_1002419e
mov     eax, [esi+18h]
mov     ecx, [eax+4]
mov     eax, [ecx]
add     eax, 58h
cmp     [eax], esi
jz      short loc_10024199
lea     ebx, [ebx+0]
mov     eax, [eax]
add     eax, 2ch
cmp     [eax], esi
jnz     short loc_10024190
mov     edx, [esi+2ch]
mov     [eax], edx
mov     eax, [esi+4]
push    eax
xor     eax, eax
call    sub_1001ced0
mov     eax, [esi+1ch]
lea     edi, [eax-65h]
add     esp, 4
neg     edi
sbb     edi, edi
and     edi, eax
mov     eax, [esi]
push    0
push    edi
call    sub_1000ba40
mov     eax, [esi]
add     esp, 8
test    eax, eax
jz      short loc_100241d0
call    sub_1006f8f0
mov     ebx, [esi+18h]
cmp     byte ptr [ebx+9], 0
jz      short loc_100241f6
dec     dword ptr [ebx+0ch]
jnz     short loc_100241f6
mov     ecx, [ebx+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_100241f2
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [ebx+0ah], 0
cmp     dword ptr [esi], 0
jz      short loc_10024204
push    esi
call    sub_10009770
add     esp, 4
mov     eax, [ebp+arg_0]
call    sub_1006f8f0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax+20h]
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax+24h]
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, eax
push    edi
test    esi, esi
jz      short loc_100242aa
lea     esp, [esp+0]
mov     eax, [esi+1ch]
test    eax, eax
jz      short loc_10024261
cmp     eax, 5
jz      short loc_10024261
cmp     eax, 6
jnz     short loc_100242a3
cmp     ebx, [esi+10h]
jnb     short loc_100242a3
mov     eax, [esi]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_10024279
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebp+arg_0]
push    ecx
push    ebx
push    esi
call    sub_100233c0
mov     edx, [esi]
mov     edi, eax
mov     eax, [edx+0ch]
add     esp, 0ch
test    eax, eax
jz      short loc_1002429c
push    eax
call    dword_10080284
add     esp, 4
test    edi, edi
jz      short loc_100242a3
mov     [esi+1ch], edi
mov     esi, [esi+2ch]
test    esi, esi
jnz     short loc_10024250
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 3ch
push    ebx
mov     ebx, [ebp+arg_0]
push    edi
mov     edi, ebx
call    sub_10019320
mov     edi, esi
call    sub_10019320
mov     eax, [ebx+4]
mov     ecx, [eax]
mov     edi, [ecx+3ch]
mov     ebx, [edi]
test    ebx, ebx
jz      short loc_1002430f
mov     eax, [esi+4]
mov     ecx, [eax+2ch]
mov     eax, [eax+20h]
cdq
push    edx
push    eax
push    0
push    ecx
call    __allmul
mov     [ebp+var_8], edx
lea     edx, [ebp+var_c]
push    edx
mov     [ebp+var_c], eax
mov     eax, [ebx+28h]
push    0bh
push    edi
call    eax
mov     ebx, eax
add     esp, 0ch
cmp     ebx, 0ch
jz      short loc_1002430f
test    ebx, ebx
jnz     loc_1002439e
push    30h
lea     ecx, [ebp+var_3c]
push    0
push    ecx
call    memset
mov     edx, [esi]
mov     edi, [ebp+arg_0]
add     esp, 0ch
lea     eax, [ebp+var_3c]
push    7fffffffh
push    eax
mov     [ebp+var_28], edx
mov     [ebp+var_24], esi
mov     [ebp+var_38], edi
mov     [ebp+var_2c], 1
call    sub_10023660
lea     ecx, [ebp+var_3c]
push    ecx
call    sub_10024120
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_10024362
mov     eax, [edi+4]
mov     edx, 0fffdh
and     [eax+16h], dx
jmp     short loc_100243a1
mov     eax, [ebp+var_38]
mov     ecx, [eax+4]
mov     ecx, [ecx]
cmp     byte ptr [ecx+0eh], 0
jnz     short loc_100243a1
cmp     byte ptr [ecx+0ch], 0
jnz     short loc_100243a1
mov     eax, [ecx+58h]
test    eax, eax
jz      short loc_1002438e
lea     ecx, [ecx+0]
mov     dword ptr [eax+10h], 1
mov     eax, [eax+2ch]
test    eax, eax
jnz     short loc_10024380
mov     edi, [ecx+0b4h]
push    0
call    sub_100108f0
add     esp, 4
mov     edi, [ebp+arg_0]
cmp     byte ptr [esi+9], 0
jz      short loc_100243c4
dec     dword ptr [esi+0ch]
jnz     short loc_100243c4
mov     edx, [esi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_100243c0
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
cmp     byte ptr [edi+9], 0
jz      short loc_100243e7
dec     dword ptr [edi+0ch]
jnz     short loc_100243e7
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_100243e3
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
pop     edi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
test    byte ptr [eax+1ch], 2
jz      short loc_1002440b
movzx   edx, byte ptr [eax+1fh]
cmp     edx, ecx
jz      short loc_1002440b
push    ecx
push    eax
call    sub_1000b360
add     esp, 8
pop     ecx
retn
xor     eax, eax
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, eax
push    esi
cmp     ebx, 20h
jge     short loc_10024422
mov     ebx, 20h
mov     eax, [edi]
mov     ecx, [edi+24h]
test    eax, eax
jz      short loc_10024448
test    ecx, ecx
jz      short loc_10024448
cmp     ecx, [eax+0fch]
jb      short loc_10024448
cmp     ecx, [eax+100h]
jnb     short loc_10024448
movzx   eax, word ptr [eax+0e0h]
jmp     short loc_10024452
push    ecx
call    dword_10080258
add     esp, 4
cmp     eax, ebx
jge     short loc_100244ab
cmp     [ebp+arg_0], 0
jz      short loc_10024495
mov     eax, [edi+4]
mov     [ebp+var_4], eax
cmp     eax, [edi+24h]
jnz     short loc_10024495
mov     esi, [edi]
push    ebx
mov     ebx, eax
mov     eax, esi
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_10024486
mov     eax, [ebp+var_4]
mov     ecx, esi
call    sub_10009810
mov     [edi+24h], ebx
mov     [edi+4], ebx
mov     [ebp+arg_0], 0
jmp     short loc_100244ab
mov     eax, [edi+24h]
mov     ecx, [edi]
call    sub_10009810
mov     esi, [edi]
mov     ecx, ebx
call    sub_10009a40
mov     [edi+24h], eax
mov     ecx, [edi+4]
test    ecx, ecx
jz      short loc_100244d1
cmp     [ebp+arg_0], 0
jz      short loc_100244d1
mov     eax, [edi+24h]
test    eax, eax
jz      short loc_100244d1
cmp     ecx, eax
jz      short loc_100244d1
mov     edx, [edi+18h]
push    edx
push    ecx
push    eax
call    memcpy
add     esp, 0ch
mov     eax, 400h
test    [edi+1ch], ax
jz      short loc_100244ec
mov     eax, [edi+20h]
test    eax, eax
jz      short loc_100244ec
mov     ecx, [edi+4]
push    ecx
call    eax
add     esp, 4
mov     eax, [edi+24h]
mov     [edi+4], eax
test    eax, eax
jnz     short loc_10024501
mov     edx, 1
mov     [edi+1ch], dx
jmp     short loc_1002450a
mov     ecx, 0e7ffh
and     [edi+1ch], cx
neg     eax
sbb     eax, eax
and     eax, 0fffffff9h
pop     esi
mov     dword ptr [edi+20h], 0
add     eax, 7
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    edi
mov     edi, eax
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_10024545
mov     eax, edi
call    sub_10024590
test    byte ptr [edi+1ch], 12h
jz      short loc_1002458c
mov     ecx, [edi+4]
cmp     ecx, [edi+24h]
jz      short loc_1002458c
mov     eax, [edi+18h]
push    1
add     eax, 2
call    sub_10024410
add     esp, 4
test    eax, eax
jz      short loc_1002456e
mov     eax, 7
pop     edi
retn
mov     edx, [edi+18h]
mov     eax, [edi+4]
mov     byte ptr [edx+eax], 0
mov     ecx, [edi+18h]
mov     edx, [edi+4]
mov     eax, 200h
mov     byte ptr [ecx+edx+1], 0
or      [edi+1ch], ax
xor     eax, eax
pop     edi
retn
push    edi
mov     edi, eax
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_100245e6
mov     eax, [edi+10h]
add     eax, [edi+18h]
test    eax, eax
jg      short loc_100245ad
mov     eax, 1
push    1
call    sub_10024410
add     esp, 4
test    eax, eax
jz      short loc_100245c2
mov     eax, 7
pop     edi
retn
mov     ecx, [edi+10h]
mov     edx, [edi+4]
add     edx, [edi+18h]
push    ecx
push    0
push    edx
call    memset
mov     eax, [edi+10h]
add     [edi+18h], eax
mov     ecx, 0bdffh
add     esp, 0ch
and     [edi+1ch], cx
xor     eax, eax
pop     edi
retn
push    edi
mov     edi, eax
movzx   eax, word ptr [edi+1ch]
test    eax, 200h
jnz     short loc_1002463b
test    al, 2
jz      short loc_1002463b
mov     eax, [edi+18h]
push    1
add     eax, 2
call    sub_10024410
add     esp, 4
test    eax, eax
jz      short loc_1002461d
mov     eax, 7
pop     edi
retn
mov     eax, [edi+18h]
mov     ecx, [edi+4]
mov     byte ptr [eax+ecx], 0
mov     edx, [edi+18h]
mov     eax, [edi+4]
mov     ecx, 200h
mov     byte ptr [edx+eax+1], 0
or      [edi+1ch], cx
xor     eax, eax
pop     edi
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 38h
push    ebx
push    edi
mov     edi, eax
movzx   ebx, word ptr [edi+1ch]
push    0
mov     eax, 20h
call    sub_10024410
add     esp, 4
test    eax, eax
jz      short loc_1002466f
mov     eax, 7
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    bl, 4
jz      short loc_10024687
mov     eax, [edi+14h]
mov     ecx, [edi+10h]
mov     edx, [edi+4]
push    eax
push    ecx
push    offset alld
push    edx
jmp     short loc_10024699
fld     qword ptr [edi+8]
mov     eax, [edi+4]
sub     esp, 8
fstp    [esp+48h+var_48]
push    offset a15g
push    eax
push    20h
call    sub_1000b050
mov     ecx, [edi+4]
add     esp, 14h
mov     eax, ecx
test    ecx, ecx
jz      short loc_100246be
cmp     byte ptr [ecx], 0
jz      short loc_100246b7
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100246b1
sub     eax, ecx
and     eax, 3fffffffh
mov     ecx, 202h
or      [edi+1ch], cx
test    byte ptr [edi+1ch], 2
mov     [edi+18h], eax
mov     byte ptr [edi+1fh], 1
jz      short loc_100246e3
cmp     esi, 1
jz      short loc_100246e3
push    esi
push    edi
call    sub_1000b360
add     esp, 8
pop     edi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 44h
push    ebx
push    esi
mov     esi, eax
xor     eax, eax
push    edi
mov     edi, ecx
test    esi, esi
jz      short loc_10024755
mov     ebx, [esi+14h]
test    ebx, ebx
jz      short loc_10024755
push    40h
push    eax
lea     eax, [esp+58h+var_40]
push    eax
call    memset
mov     edx, [edi]
lea     eax, [esp+5ch+var_40]
mov     ecx, 1
push    eax
mov     [esp+60h+var_1c], cx
mov     [esp+60h+var_38], edx
mov     [esp+60h+var_10], edi
mov     [esp+60h+var_40], esi
call    ebx
mov     eax, [edi+24h]
mov     ecx, [edi]
add     esp, 10h
call    sub_10009810
mov     eax, [esp+50h+var_8]
mov     ecx, 0ah
lea     esi, [esp+50h+var_38]
rep movsd
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
mov     esi, eax
movzx   ecx, word ptr [esi+1ch]
test    ecx, 2000h
jz      short loc_10024786
mov     eax, [esi+10h]
mov     ecx, esi
call    sub_100246f0
push    esi
call    sub_100247d0
add     esp, 4
pop     esi
pop     ebx
retn
test    ecx, 400h
jz      short loc_100247a8
mov     eax, [esi+20h]
test    eax, eax
jz      short loc_100247a8
mov     ecx, [esi+4]
push    ecx
call    eax
add     esp, 4
mov     dword ptr [esi+20h], 0
pop     esi
pop     ebx
retn
test    cl, 20h
jz      short loc_100247b8
mov     ebx, [esi+10h]
call    sub_100117b0
pop     esi
pop     ebx
retn
test    cl, 40h
jz      short loc_100247c2
call    sub_10024b20
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, 2460h
test    [esi+1ch], ax
jz      short loc_100247ed
mov     eax, esi
call    sub_10024760
mov     eax, [esi+24h]
mov     ecx, [esi]
call    sub_10009810
xor     eax, eax
mov     [esi+4], eax
mov     [esi+24h], eax
mov     [esi+20h], eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, 80000000h
mov     dword ptr [ebp+var_8], 0
mov     dword ptr [ebp+var_8+4], edx
fild    [ebp+var_8]
fld     [ebp+arg_0]
fcom    st(1)
fnstsw  ax
fstp    st(1)
test    ah, 5
jp      short loc_1002483e
fstp    st
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
mov     dword ptr [ebp+arg_0], 0ffffffffh
mov     dword ptr [ebp+arg_0+4], 7fffffffh
fild    [ebp+arg_0]
fcomp   st(1)
fnstsw  ax
test    ah, 5
jnp     short loc_10024836
call    __ftol2
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
movzx   eax, word ptr [ecx+1ch]
sub     esp, 40h
test    al, 4
jz      short loc_1002488b
mov     eax, [ecx+10h]
mov     edx, [ecx+14h]
mov     esp, ebp
pop     ebp
retn
test    al, 8
jz      short loc_100248a4
fld     qword ptr [ecx+8]
sub     esp, 8
fstp    [esp+48h+var_48]
call    sub_10024810
add     esp, 8
mov     esp, ebp
pop     ebp
retn
test    al, 12h
jz      short loc_100248d6
xor     eax, eax
mov     [esp+40h+var_8], eax
mov     [esp+40h+var_4], eax
mov     eax, [ecx+18h]
push    eax
mov     eax, [ecx+4]
lea     edx, [esp+44h+var_8]
push    edx
push    eax
mov     al, [ecx+1fh]
call    sub_1000c2a0
mov     eax, [esp+4ch+var_8]
mov     edx, [esp+4ch+var_4]
add     esp, 0ch
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
xor     edx, edx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
movzx   ecx, word ptr [eax+1ch]
sub     esp, 8
test    cl, 8
jz      short loc_100248f9
fld     qword ptr [eax+8]
mov     esp, ebp
pop     ebp
retn
test    cl, 4
jz      short loc_10024905
fild    qword ptr [eax+10h]
mov     esp, ebp
pop     ebp
retn
fldz
test    cl, 12h
jz      short loc_10024929
mov     edx, [eax+4]
fstp    [esp+8+var_8]
lea     ecx, [esp+8+var_8]
push    ecx
mov     ecx, [eax+18h]
push    edx
mov     dl, [eax+1fh]
call    sub_1000bd50
fld     [esp+10h+var_8]
add     esp, 8
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
fld     qword ptr [esi+8]
mov     dword ptr [ebp+var_8], 0
mov     dword ptr [ebp+var_8+4], 80000000h
fild    [ebp+var_8]
fcomp   st(1)
fnstsw  ax
test    ah, 41h
jnz     short loc_1002495e
fstp    st
xor     ecx, ecx
mov     edx, 80000000h
jmp     short loc_1002498a
mov     dword ptr [ebp+var_8], 0ffffffffh
mov     dword ptr [ebp+var_8+4], 7fffffffh
fild    [ebp+var_8]
fcomp   st(1)
fnstsw  ax
test    ah, 5
jp      short loc_10024983
fstp    st
xor     ecx, ecx
mov     edx, 80000000h
jmp     short loc_1002498a
call    __ftol2
mov     ecx, eax
mov     dword ptr [ebp+var_8], ecx
mov     dword ptr [ebp+var_8+4], edx
fild    [ebp+var_8]
mov     [esi+10h], ecx
fld     qword ptr [esi+8]
mov     [esi+14h], edx
fucompp
fnstsw  ax
test    ah, 44h
jp      short loc_100249c7
cmp     edx, 80000000h
jl      short loc_100249c7
jg      short loc_100249b3
test    ecx, ecx
jz      short loc_100249c7
cmp     edx, 7fffffffh
jg      short loc_100249c7
jl      short loc_100249c2
cmp     ecx, 0ffffffffh
jnb     short loc_100249c7
or      word ptr [esi+1ch], 4
mov     esp, ebp
pop     ebp
retn
mov     ecx, esi
call    sub_10024870
mov     [esi+10h], eax
mov     ax, [esi+1ch]
mov     ecx, 0bf04h
and     ax, cx
or      ax, 4
mov     [esi+1ch], ax
mov     [esi+14h], edx
xor     eax, eax
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
movzx   ebx, word ptr [esi+1ch]
test    bl, 8
jz      short loc_10024a18
fld     qword ptr [esi+8]
jmp     short loc_10024a48
test    bl, 4
jz      short loc_10024a22
fild    qword ptr [esi+10h]
jmp     short loc_10024a48
fldz
test    bl, 12h
jz      short loc_10024a48
mov     ecx, [esi+4]
fstp    [esp+10h+var_8]
mov     dl, [esi+1fh]
lea     eax, [esp+10h+var_8]
push    eax
push    ecx
mov     ecx, [esi+18h]
call    sub_1000bd50
fld     [esp+18h+var_8]
add     esp, 8
and     ebx, 0bf08h
fstp    qword ptr [esi+8]
or      ebx, 8
mov     [esi+1ch], bx
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, eax
test    byte ptr [esi+1ch], 0dh
push    edi
jnz     loc_10024b0b
mov     eax, [esi+18h]
mov     ecx, [esi+4]
push    eax
mov     al, [esi+1fh]
lea     edi, [esi+10h]
push    edi
push    ecx
call    sub_1000c2a0
add     esp, 0ch
test    eax, eax
jnz     short loc_10024ab9
mov     dx, [esi+1ch]
mov     eax, 0bf04h
and     dx, ax
or      dx, 4
mov     eax, 0ffedh
mov     [esi+1ch], dx
and     [esi+1ch], ax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   ebx, word ptr [esi+1ch]
test    bl, 8
jz      short loc_10024ac7
fld     qword ptr [esi+8]
jmp     short loc_10024af6
test    bl, 4
jz      short loc_10024ad0
fild    qword ptr [edi]
jmp     short loc_10024af6
fldz
test    bl, 12h
jz      short loc_10024af6
mov     edx, [esi+4]
fstp    [esp+18h+var_8]
lea     ecx, [esp+18h+var_8]
push    ecx
mov     ecx, [esi+18h]
push    edx
mov     dl, [esi+1fh]
call    sub_1000bd50
fld     [esp+20h+var_8]
add     esp, 8
and     ebx, 0bf08h
fstp    qword ptr [esi+8]
or      ebx, 8
mov     [esi+1ch], bx
call    sub_10024930
mov     eax, 0ffedh
and     [esi+1ch], ax
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    byte ptr [esi+1ch], 40h
jz      short loc_10024b3a
mov     eax, [esi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+1ch], 20h
jz      short loc_10024b4a
push    ebx
mov     ebx, [esi+10h]
call    sub_100117b0
pop     ebx
mov     ax, [esi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [esi+1ch], ax
mov     byte ptr [esi+1eh], 5
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, 2460h
test    [esi+1ch], ax
jz      short loc_10024b88
mov     eax, esi
call    sub_10024760
mov     eax, [esi+24h]
mov     ecx, [esi]
call    sub_10009810
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_4]
xor     eax, eax
mov     [esi+4], eax
mov     [esi+24h], eax
mov     [esi+20h], eax
mov     eax, 4
mov     [esi+10h], ecx
mov     [esi+14h], edx
mov     [esi+1ch], ax
mov     byte ptr [esi+1eh], 1
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
fld     [ebp+arg_0]
push    ebx
fstp    [esp+18h+var_10]
fld     [esp+18h+var_10]
fstp    [esp+18h+var_8]
fld     [esp+18h+var_10]
fld     [esp+18h+var_8]
fucompp
fnstsw  ax
test    ah, 44h
jnp     short loc_10024c2f
test    byte ptr [esi+1ch], 40h
jz      short loc_10024c04
mov     eax, [esi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+1ch], 20h
jz      short loc_10024c12
mov     ebx, [esi+10h]
call    sub_100117b0
mov     ax, [esi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     byte ptr [esi+1eh], 5
mov     [esi+1ch], ax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, 2460h
test    [esi+1ch], dx
jz      short loc_10024c41
mov     eax, esi
call    sub_10024760
mov     eax, [esi+24h]
mov     ecx, [esi]
call    sub_10009810
fld     [ebp+arg_0]
xor     eax, eax
fstp    qword ptr [esi+8]
mov     [esi+4], eax
mov     [esi+24h], eax
mov     [esi+20h], eax
mov     eax, 8
mov     byte ptr [esi+1eh], 2
mov     [esi+1ch], ax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ebx
mov     eax, 2460h
push    esi
mov     esi, [edi]
test    [edi+1ch], ax
jz      short loc_10024c8c
mov     eax, edi
call    sub_10024760
mov     eax, [edi+24h]
mov     ecx, [edi]
call    sub_10009810
xor     ebx, ebx
lea     ecx, [ebx+40h]
mov     [edi+4], ebx
mov     [edi+24h], ebx
mov     [edi+20h], ebx
call    sub_10009a40
mov     [edi+24h], eax
cmp     [esi+32h], bl
jz      short loc_10024cc0
mov     ecx, 1
mov     [edi+1ch], cx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     eax, ebx
jz      short loc_10024cdd
cmp     eax, [esi+0fch]
jb      short loc_10024cdd
cmp     eax, [esi+100h]
jnb     short loc_10024cdd
movzx   eax, word ptr [esi+0e0h]
jmp     short loc_10024ce7
push    eax
call    dword_10080258
add     esp, 4
mov     ecx, [edi+24h]
add     eax, 0ffffffe0h
shr     eax, 4
mov     [ecx+4], esi
mov     [ecx+18h], ax
mov     [ecx], ebx
mov     [ecx+8], ebx
mov     [ecx+0ch], ebx
mov     [ecx+14h], ebx
lea     edx, [ecx+20h]
mov     [ecx+10h], edx
mov     word ptr [ecx+1ah], 1
mov     eax, 20h
pop     esi
mov     [edi+10h], ecx
mov     [edi+1ch], ax
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   edx, word ptr [ecx+1ch]
test    dl, 12h
jz      short loc_10024d44
mov     eax, [ecx+18h]
test    edx, 4000h
jz      short loc_10024d37
add     eax, [ecx+10h]
mov     ecx, [ecx]
xor     edx, edx
cmp     eax, [ecx+48h]
setnle  dl
mov     eax, edx
retn
xor     eax, eax
retn
push    ebp
mov     ebp, esp
mov     eax, 2460h
push    esi
push    edi
test    [ebx+1ch], ax
jz      short loc_10024d67
mov     eax, ebx
call    sub_10024760
mov     eax, [ebp+arg_0]
mov     ecx, 9
mov     esi, eax
mov     edi, ebx
rep movsd
mov     ecx, 800h
mov     dword ptr [ebx+20h], 0
test    [eax+1ch], cx
jnz     short loc_10024d9b
mov     dx, [ebx+1ch]
mov     eax, 0e3ffh
and     dx, ax
or      dx, [ebp+arg_4]
mov     [ebx+1ch], dx
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, 2460h
push    esi
push    edi
test    [ebx+1ch], ax
jz      short loc_10024db8
mov     eax, ebx
call    sub_10024760
mov     edx, [ebp+arg_0]
mov     ecx, 9
mov     esi, edx
mov     edi, ebx
rep movsd
mov     ecx, 0fbffh
and     [ebx+1ch], cx
mov     ax, [ebx+1ch]
test    al, 12h
jz      short loc_10024dff
mov     dx, [edx+1ch]
mov     ecx, 800h
and     dx, cx
xor     ecx, ecx
cmp     cx, dx
jnz     short loc_10024dff
or      eax, 1000h
mov     [ebx+1ch], ax
mov     eax, ebx
call    sub_10024530
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
pop     edi
xor     eax, eax
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
push    edi
mov     edi, eax
mov     eax, 2460h
test    [edi+1ch], ax
jz      short loc_10024e2c
mov     eax, edi
call    sub_10024760
mov     eax, [edi+24h]
mov     ecx, [edi]
call    sub_10009810
xor     eax, eax
mov     [edi+4], eax
mov     [edi+24h], eax
mov     [edi+20h], eax
mov     ecx, 0ah
mov     esi, ebx
rep movsd
mov     ecx, 1
pop     edi
mov     [ebx+1ch], cx
mov     [ebx+20h], eax
mov     [ebx+24h], eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     ebx, ecx
mov     ecx, [ebp+src]
push    edi
mov     esi, eax
mov     edi, edx
test    ecx, ecx
jnz     short loc_10024ebf
test    byte ptr [edi+1ch], 40h
jz      short loc_10024e90
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_10024e9e
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi]
test    eax, eax
jz      short loc_10024ecd
mov     eax, [eax+48h]
mov     [ebp+var_8], eax
jmp     short loc_10024ed7
mov     [ebp+var_8], 3b9aca00h
mov     eax, [ebp+var_8]
movzx   edx, [ebp+arg_4]
neg     edx
sbb     edx, edx
and     edx, 0fffffff2h
add     edx, 10h
movzx   edx, dx
mov     [ebp+var_4], edx
test    ebx, ebx
jns     short loc_10024f28
xor     ebx, ebx
cmp     [ebp+arg_4], 1
jnz     short loc_10024f0d
test    eax, eax
js      short loc_10024f21
jmp     short loc_10024f00
cmp     byte ptr [ebx+ecx], 0
jz      short loc_10024f21
inc     ebx
cmp     ebx, eax
jle     short loc_10024f00
jmp     short loc_10024f21
test    eax, eax
js      short loc_10024f21
mov     dl, [ebx+ecx+1]
or      dl, [ebx+ecx]
jz      short loc_10024f21
add     ebx, 2
cmp     ebx, eax
jle     short loc_10024f11
or      [ebp+var_4], 200h
cmp     esi, 0ffffffffh
jnz     short loc_10024f85
test    [ebp+var_4], 200h
mov     esi, ebx
jz      short loc_10024f46
xor     ecx, ecx
cmp     [ebp+arg_4], 1
setnz   cl
inc     ecx
add     ecx, ebx
mov     esi, ecx
cmp     ebx, eax
jle     short loc_10024f56
mov     eax, 12h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    0
mov     eax, esi
call    sub_10024410
add     esp, 4
test    eax, eax
jz      short loc_10024f72
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+src]
mov     eax, [edi+4]
push    esi
push    edx
push    eax
call    memcpy
add     esp, 0ch
jmp     short loc_10024fc5
push    edi
call    sub_100247d0
add     esp, 4
cmp     esi, offset sub_10009760
jnz     short loc_10024fa8
mov     eax, [ebp+src]
mov     [edi+4], eax
mov     [edi+24h], eax
mov     dword ptr [edi+20h], 0
jmp     short loc_10024fc5
mov     ecx, [ebp+src]
mov     [edi+20h], esi
neg     esi
sbb     esi, esi
and     esi, 0fffffc00h
add     esi, 800h
or      word ptr [ebp+var_4], si
mov     [edi+4], ecx
mov     cl, [ebp+arg_4]
mov     dx, word ptr [ebp+var_4]
mov     [edi+18h], ebx
mov     [edi+1ch], dx
mov     eax, 1
test    cl, cl
jz      short loc_10024fdf
movzx   eax, cl
test    cl, cl
setz    cl
add     cl, 3
mov     [edi+1fh], al
mov     [edi+1eh], cl
cmp     al, 1
jz      short loc_10025000
mov     esi, edi
call    sub_1000b840
test    eax, eax
jnz     loc_10024f66
xor     eax, eax
cmp     ebx, [ebp+var_8]
pop     edi
setle   al
pop     esi
pop     ebx
dec     eax
and     eax, 12h
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 54h
push    ebx
movzx   ebx, word ptr [ecx+1ch]
push    esi
mov     esi, eax
movzx   eax, word ptr [esi+1ch]
mov     edx, eax
or      edx, ebx
push    edi
test    dl, 1
jz      short loc_1002504e
and     eax, 1
and     ebx, 1
sub     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    dl, 0ch
jz      loc_100250e3
test    bl, 0ch
jnz     short loc_10025068
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    al, 0ch
jz      short loc_1002509b
mov     edx, eax
and     edx, ebx
test    dl, 4
jnz     short loc_100250b7
test    bl, 8
jnz     short loc_1002507f
fild    qword ptr [ecx+10h]
jmp     short loc_10025082
fld     qword ptr [ecx+8]
test    al, 8
jnz     short loc_1002508b
fild    qword ptr [esi+10h]
jmp     short loc_1002508e
fld     qword ptr [esi+8]
fcom    st(1)
fnstsw  ax
test    ah, 41h
jnz     short loc_100250a5
fstp    st
fstp    st
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
fcompp
fnstsw  ax
test    ah, 5
jnp     short loc_1002505c
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ecx+10h]
mov     edx, [esi+10h]
mov     ecx, [ecx+14h]
mov     esi, [esi+14h]
cmp     ecx, esi
jg      short loc_1002505c
jl      short loc_1002509b
cmp     eax, edx
jb      short loc_1002509b
cmp     ecx, esi
jl      short loc_100250ae
jg      short loc_1002505c
cmp     eax, edx
jbe     short loc_100250ae
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    dl, 2
jz      loc_1002520a
test    bl, 2
jz      loc_1002505c
test    al, 2
jz      short loc_1002509b
mov     edi, [ebp+arg_0]
test    edi, edi
jz      loc_1002520a
mov     al, [ecx+1fh]
cmp     al, [edi+4]
jnz     short loc_1002512f
mov     edx, [esi+4]
mov     eax, [esi+18h]
push    edx
mov     edx, [ecx+4]
push    eax
mov     eax, [ecx+18h]
mov     ecx, [edi+8]
push    edx
mov     edx, [edi+0ch]
push    eax
push    ecx
call    edx
add     esp, 14h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
push    1000h
push    ecx
lea     ebx, [esp+68h+var_50]
mov     [esp+68h+var_50], eax
mov     [esp+68h+var_4c], eax
mov     [esp+68h+var_48], eax
mov     [esp+68h+var_44], eax
mov     [esp+68h+var_40], eax
mov     [esp+68h+var_3c], eax
mov     [esp+68h+var_38], eax
mov     [esp+68h+var_34], eax
mov     [esp+68h+var_30], eax
mov     [esp+68h+var_2c], eax
mov     [esp+68h+var_28], eax
mov     [esp+68h+var_24], eax
mov     [esp+68h+var_20], eax
mov     [esp+68h+var_1c], eax
mov     [esp+68h+var_18], eax
mov     [esp+68h+var_14], eax
mov     [esp+68h+var_10], eax
mov     [esp+68h+var_c], eax
mov     [esp+68h+var_8], eax
mov     [esp+68h+var_4], eax
call    sub_10024d50
push    1000h
push    esi
lea     ebx, [esp+70h+var_28]
call    sub_10024d50
mov     bl, [edi+4]
lea     edi, [esp+70h+var_50]
call    sub_100253e0
mov     [esp+70h+var_54], eax
neg     eax
sbb     esi, esi
mov     eax, [ebp+arg_0]
mov     bl, [eax+4]
and     esi, [esp+70h+var_38]
lea     edi, [esp+70h+var_28]
call    sub_100253e0
mov     ecx, eax
neg     ecx
push    eax
mov     eax, [ebp+arg_0]
mov     edx, [eax+8]
mov     eax, [eax+0ch]
sbb     ecx, ecx
and     ecx, [esp+74h+var_10]
push    ecx
mov     ecx, [esp+78h+var_54]
push    ecx
push    esi
push    edx
call    eax
lea     ecx, [esp+84h+var_50]
add     esp, 24h
push    ecx
mov     esi, eax
call    sub_100247d0
mov     edx, edi
add     esp, 4
push    edx
call    sub_100247d0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [esi+18h]
mov     edi, [ecx+18h]
mov     [esp+60h+var_54], ebx
mov     edx, ebx
cmp     edi, ebx
jg      short loc_1002521c
mov     edx, edi
mov     esi, [esi+4]
mov     ecx, [ecx+4]
cmp     edx, 4
jb      short loc_1002523b
mov     eax, [ecx]
cmp     eax, [esi]
jnz     short loc_1002523f
sub     edx, 4
add     esi, 4
add     ecx, 4
cmp     edx, 4
jnb     short loc_10025227
test    edx, edx
jz      short loc_1002528a
movzx   eax, byte ptr [ecx]
movzx   ebx, byte ptr [esi]
sub     eax, ebx
jnz     short loc_1002527a
cmp     edx, 1
jbe     short loc_10025286
movzx   eax, byte ptr [ecx+1]
movzx   ebx, byte ptr [esi+1]
sub     eax, ebx
jnz     short loc_1002527a
cmp     edx, 2
jbe     short loc_10025286
movzx   eax, byte ptr [ecx+2]
movzx   ebx, byte ptr [esi+2]
sub     eax, ebx
jnz     short loc_1002527a
cmp     edx, 3
jbe     short loc_10025286
movzx   eax, byte ptr [ecx+3]
movzx   ecx, byte ptr [esi+3]
sub     eax, ecx
mov     ebx, [esp+60h+var_54]
sar     eax, 1fh
or      eax, 1
jmp     short loc_1002528c
mov     ebx, [esp+60h+var_54]
xor     eax, eax
test    eax, eax
jnz     short loc_10025294
sub     edi, ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 8
cmp     [ebp+arg_4], 0
push    esi
push    edi
mov     edi, eax
mov     esi, ecx
mov     [esp+10h+var_8], 0
jz      short loc_100252c9
lea     eax, [esp+10h+var_8]
push    eax
call    sub_1001dac0
jmp     short loc_100252d5
lea     ecx, [esp+10h+var_8]
push    ecx
mov     eax, esi
call    sub_1001db20
mov     edx, [ebp+arg_0]
add     edx, ebx
add     esp, 4
mov     [esp+10h+var_4], eax
cmp     edx, [esp+10h+var_8]
jg      short loc_10025330
movzx   eax, word ptr [edi+1ch]
test    eax, 400h
jnz     short loc_10025330
test    eax, 2460h
jz      short loc_10025300
mov     eax, edi
call    sub_10024760
mov     eax, [edi+24h]
mov     ecx, [edi]
call    sub_10009810
xor     eax, eax
mov     [edi+24h], eax
mov     [edi+20h], eax
mov     eax, [esp+10h+var_4]
add     eax, [ebp+arg_0]
mov     edx, 1010h
mov     [edi+4], eax
mov     [edi+1ch], dx
xor     eax, eax
mov     [edi+18h], ebx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    0
lea     eax, [ebx+2]
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     loc_100253d3
cmp     [ebp+arg_4], 0
mov     eax, 610h
mov     dword ptr [edi+1ch], 40610h
jz      short loc_1002535c
mov     eax, [edi+4]
jmp     short loc_10025384
mov     al, [esi+53h]
mov     edx, [edi+4]
mov     [esp+10h+var_4], edx
test    al, al
jnz     short loc_10025371
mov     esi, 4
jmp     short loc_10025397
cmp     al, 2
jb      short loc_10025380
mov     eax, esi
call    sub_10019ad0
test    eax, eax
jnz     short loc_10025395
mov     eax, [esp+10h+var_4]
mov     ecx, [ebp+arg_0]
push    0
push    eax
push    ebx
push    ecx
push    esi
call    sub_1001d750
add     esp, 14h
mov     esi, eax
mov     edx, [edi+4]
mov     byte ptr [ebx+edx], 0
mov     eax, [edi+4]
mov     byte ptr [eax+ebx+1], 0
test    esi, esi
jz      short loc_100253d1
mov     ecx, 2460h
test    [edi+1ch], cx
jz      short loc_100253bc
mov     eax, edi
call    sub_10024760
mov     eax, [edi+24h]
mov     ecx, [edi]
call    sub_10009810
xor     eax, eax
mov     [edi+4], eax
mov     [edi+24h], eax
mov     [edi+20h], eax
mov     eax, esi
mov     [edi+18h], ebx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    esi
test    edi, edi
jz      loc_10025469
movzx   ecx, word ptr [edi+1ch]
test    cl, 1
jnz     short loc_10025469
mov     eax, ecx
shr     eax, 3
and     eax, 2
or      eax, ecx
mov     [edi+1ch], ax
test    eax, 4000h
jz      short loc_1002540e
mov     eax, edi
call    sub_10024590
test    byte ptr [edi+1ch], 2
movzx   esi, bl
jz      short loc_10025452
movzx   ecx, byte ptr [edi+1fh]
mov     eax, esi
and     eax, 0fffffff7h
cmp     ecx, eax
jz      short loc_1002542e
push    eax
push    edi
call    sub_1000b360
add     esp, 8
test    bl, 8
jz      short loc_10025449
mov     edx, [edi+4]
and     edx, 1
cmp     dl, 1
jnz     short loc_10025449
mov     eax, edi
call    sub_10024530
test    eax, eax
jnz     short loc_10025469
mov     eax, edi
call    sub_100245f0
jmp     short loc_10025459
mov     eax, edi
call    sub_10024640
movzx   eax, byte ptr [edi+1fh]
and     esi, 0fffffff7h
cmp     eax, esi
jnz     short loc_10025469
mov     eax, [edi+4]
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, eax
mov     ecx, 28h
call    sub_10009a40
test    eax, eax
jz      short loc_100254ad
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     [eax+1ch], ecx
mov     [eax+20h], ecx
mov     [eax+24h], ecx
mov     ecx, 1
mov     [eax+1ch], cx
mov     byte ptr [eax+1eh], 5
mov     [eax], esi
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
xor     eax, eax
push    edi
mov     edi, [ebp+arg_4]
mov     [ebp+var_14], eax
mov     [ebp+var_8], eax
mov     [ebp+var_c], 1
mov     [ebp+var_10], offset dword_100796bc
cmp     edi, eax
jz      loc_100257bb
movzx   ebx, byte ptr [edi]
cmp     ebx, 84h
jnz     short loc_100254e9
movzx   ebx, byte ptr [edi+23h]
cmp     ebx, 9ch
jnz     short loc_10025513
mov     edx, [edi+8]
mov     cl, [edx]
cmp     cl, 81h
jz      short loc_10025500
cmp     cl, 82h
jnz     short loc_10025540
mov     edi, edx
movzx   ebx, byte ptr [edi]
mov     [ebp+var_c], 0ffffffffh
mov     [ebp+var_10], offset asc_10079d50
cmp     ebx, 5eh
jz      loc_1002567b
cmp     ebx, 82h
jz      loc_1002567b
cmp     ebx, 81h
jz      loc_1002567b
cmp     ebx, 9ch
jnz     loc_100255cb
mov     ebx, [ebp+arg_c]
mov     esi, [ebp+arg_8]
mov     eax, [edi+8]
mov     ecx, [ebp+arg_0]
lea     edx, [ebp+var_8]
push    edx
push    ebx
push    esi
push    eax
push    ecx
call    sub_100254b0
add     esp, 14h
test    eax, eax
mov     eax, [ebp+var_8]
jnz     loc_100257ad
call    sub_10024a60
mov     ecx, [ebp+var_8]
cmp     dword ptr [ecx+10h], 0
lea     eax, [ecx+10h]
jnz     short loc_1002559c
cmp     dword ptr [eax+4], 80000000h
jnz     short loc_1002559c
and     word ptr [ecx+1ch], 4
fld     ds:dbl_1007cfb0
mov     eax, [ebp+var_8]
or      word ptr [eax+1ch], 8
mov     edx, [ebp+var_8]
fstp    qword ptr [edx+8]
jmp     short loc_100255ad
mov     ecx, [eax]
mov     edx, [eax+4]
neg     ecx
adc     edx, 0
neg     edx
mov     [eax], ecx
mov     [eax+4], edx
mov     eax, [ebp+var_8]
fld     qword ptr [eax+8]
push    esi
fchs
fstp    qword ptr [eax+8]
mov     edi, [ebp+var_8]
mov     al, bl
call    sub_1002bb90
add     esp, 4
jmp     loc_100257aa
cmp     ebx, 62h
jnz     short loc_10025623
mov     esi, [ebp+arg_0]
mov     eax, esi
call    sub_10025470
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_100257b1
mov     eax, [ebp+var_14]
mov     ecx, esi
mov     byte ptr [esi+32h], 1
call    sub_10009810
mov     eax, [ebp+var_8]
mov     esi, eax
test    eax, eax
jz      short loc_1002560e
push    eax
call    sub_100247d0
mov     ecx, [esi]
add     esp, 4
mov     eax, esi
call    sub_10009810
mov     eax, [ebp+arg_10]
mov     dword ptr [eax], 0
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 83h
jnz     loc_100257bb
mov     esi, [ebp+arg_0]
mov     eax, esi
call    sub_10025470
mov     [ebp+var_8], eax
test    eax, eax
jz      short loc_100255e5
mov     edi, [edi+4]
add     edi, 2
mov     ecx, edi
call    sub_1000ba20
lea     ecx, [eax-1]
mov     eax, ecx
push    0
cdq
push    ecx
sub     eax, edx
push    ecx
mov     ebx, eax
push    esi
sar     ebx, 1
call    sub_1000c8c0
mov     edx, [ebp+var_8]
add     esp, 0ch
push    eax
mov     eax, offset sub_10009760
mov     ecx, ebx
call    sub_10024e60
jmp     loc_100257a7
mov     esi, [ebp+arg_0]
mov     ecx, 28h
call    sub_10009a40
mov     ecx, eax
test    ecx, ecx
jz      short loc_100256ba
xor     eax, eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+14h], eax
mov     [ecx+18h], eax
mov     [ecx+1ch], eax
mov     [ecx+20h], eax
mov     [ecx+24h], eax
mov     eax, 1
mov     [ecx+1ch], ax
mov     byte ptr [ecx+1eh], 5
mov     [ecx], esi
mov     [ebp+var_8], ecx
test    ecx, ecx
jz      loc_100255e5
mov     dx, [edi+2]
mov     eax, 400h
and     dx, ax
cmp     dx, ax
jnz     short loc_10025717
mov     eax, [edi+4]
imul    [ebp+var_c]
push    edx
push    eax
mov     esi, ecx
call    sub_10024b70
mov     edx, [ebp+var_8]
add     esp, 8
cmp     ebx, 81h
jz      short loc_100256fb
cmp     ebx, 82h
jnz     short loc_10025763
cmp     byte ptr [ebp+arg_c], 62h
jnz     short loc_10025763
mov     esi, edx
mov     edi, edx
call    sub_1002bab0
test    byte ptr [edi+1ch], 8
jz      short loc_10025772
call    sub_10024930
jmp     short loc_10025772
mov     ecx, [edi+4]
mov     edx, [ebp+var_10]
push    ecx
push    edx
push    offset ass_3
push    esi
call    sub_1000ae80
add     esp, 10h
test    eax, eax
jz      loc_100255e8
mov     edx, [ebp+var_8]
test    edx, edx
jz      short loc_10025752
push    1
push    eax
mov     eax, offset sub_10009760
or      ecx, 0ffffffffh
call    sub_10024e60
mov     edx, [ebp+var_8]
add     esp, 8
cmp     ebx, 82h
jnz     short loc_100256eb
mov     byte ptr [edx+1eh], 2
mov     edx, [ebp+var_8]
jmp     short loc_100256fb
mov     al, byte ptr [ebp+arg_c]
push    1
mov     edi, edx
call    sub_1002bb90
add     esp, 4
mov     eax, [ebp+var_8]
test    byte ptr [eax+1ch], 0ch
jz      short loc_10025787
mov     ecx, 0fffdh
and     [eax+1ch], cx
mov     eax, [ebp+var_8]
mov     cl, byte ptr [ebp+arg_8]
cmp     cl, 1
jz      short loc_100257ad
test    byte ptr [eax+1ch], 2
movzx   ecx, cl
jz      short loc_100257ad
movzx   edx, byte ptr [eax+1fh]
cmp     edx, ecx
jz      short loc_100257ad
push    ecx
push    eax
call    sub_1000b360
add     esp, 8
mov     eax, [ebp+var_8]
test    eax, eax
jz      short loc_100257bb
mov     ecx, eax
call    sub_1002b960
mov     eax, [ebp+var_8]
mov     ecx, [ebp+arg_10]
pop     edi
pop     esi
mov     [ecx], eax
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jz      short locret_100257e6
push    esi
call    sub_100247d0
mov     ecx, [esi]
add     esp, 4
mov     eax, esi
jmp     sub_10009810
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10025808
cmp     byte ptr [eax+65h], 0
jz      short loc_10025808
mov     eax, [eax+9ch]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ecx
mov     eax, [edi+20h]
push    ebx
push    esi
test    eax, eax
jz      short loc_1002581e
add     eax, eax
jmp     short loc_10025823
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10025879
mov     eax, [edi]
test    eax, eax
jz      short loc_1002585d
cmp     esi, [eax+0fch]
jb      short loc_1002585d
cmp     esi, [eax+100h]
jnb     short loc_1002585d
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10025869
push    esi
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+20h], edx
mov     [edi+4], esi
mov     eax, esi
neg     eax
sbb     eax, eax
and     eax, 0fffffff9h
pop     esi
add     eax, 7
pop     ebx
pop     ecx
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_100258b1
call    sub_10025810
test    eax, eax
jz      short loc_100258b1
mov     eax, 1
pop     edi
pop     esi
pop     ebp
retn
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     dl, [ebp+arg_0]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax], dl
mov     edx, [ebp+arg_4]
mov     [eax+4], edx
mov     edx, [ebp+arg_8]
xor     ecx, ecx
mov     [eax+8], edx
mov     edx, [ebp+arg_c]
mov     [eax+3], cl
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     [eax+1], cl
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10025913
call    sub_10025810
test    eax, eax
jz      short loc_10025913
mov     eax, 1
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     dl, [ebp+arg_0]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     [eax], dl
mov     [eax+3], cl
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+1], cl
pop     edi
mov     eax, esi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10025961
call    sub_10025810
test    eax, eax
jz      short loc_10025961
mov     eax, 1
pop     edi
pop     esi
pop     ebp
retn
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     dl, [ebp+arg_0]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     [eax], dl
mov     edx, [ebp+arg_4]
mov     [eax+3], cl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+1], cl
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_100259b3
call    sub_10025810
test    eax, eax
jz      short loc_100259b3
mov     eax, 1
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     dl, [ebp+arg_0]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax], dl
mov     edx, [ebp+arg_4]
xor     ecx, ecx
mov     [eax+4], edx
mov     edx, [ebp+arg_8]
mov     [eax+3], cl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+1], cl
pop     edi
mov     eax, esi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10025a0f
call    sub_10025810
test    eax, eax
jz      short loc_10025a0f
mov     esi, 1
jmp     short loc_10025a3d
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     dl, [ebp+arg_0]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax], dl
mov     edx, [ebp+arg_4]
mov     [eax+4], edx
mov     edx, [ebp+arg_8]
xor     ecx, ecx
mov     [eax+8], edx
mov     edx, [ebp+arg_c]
mov     [eax+3], cl
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     [eax+1], cl
mov     eax, [ebp+src]
mov     ecx, [ebp+arg_14]
push    eax
push    edi
mov     eax, esi
call    sub_10025f90
add     esp, 8
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [esi+1ch]
push    edi
cmp     [esi+20h], ebx
jg      short loc_10025a81
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10025a81
mov     eax, 1
xor     ecx, ecx
jmp     short loc_10025aa9
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+arg_0]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 6ah
mov     eax, ebx
mov     ebx, [esi+4]
mov     edi, [esi]
cmp     ebx, ecx
jz      short loc_10025af0
cmp     byte ptr [edi+32h], 0
jnz     short loc_10025af0
cmp     eax, ecx
jge     short loc_10025ac0
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
call    sub_10025e50
mov     eax, [ebp+arg_4]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_10025ae7
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_10025afb
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0ffh
jmp     short loc_10025afb
mov     ecx, [ebp+arg_4]
or      eax, 0ffffffffh
call    sub_10025e50
mov     eax, [esi]
xor     ecx, ecx
cmp     [eax+14h], ecx
jle     short loc_10025b3e
mov     edx, [esi+6ch]
xor     edi, edi
lea     esp, [esp+0]
mov     eax, 1
shl     eax, cl
or      edx, eax
mov     [esi+6ch], edx
cmp     ecx, 1
jz      short loc_10025b33
mov     ebx, [esi]
mov     ebx, [ebx+10h]
mov     ebx, [ebx+edi+4]
cmp     byte ptr [ebx+9], 0
jz      short loc_10025b33
or      [esi+70h], eax
mov     eax, [esi]
inc     ecx
add     edi, 10h
cmp     ecx, [eax+14h]
jl      short loc_10025b10
pop     edi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, eax
mov     ebx, [esi+1ch]
push    edi
cmp     [esi+20h], ebx
jg      short loc_10025b72
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10025b72
mov     ebx, 1
jmp     short loc_10025ba4
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     dl, [ebp+arg_0]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_4]
mov     [eax], dl
mov     edx, [ebp+arg_8]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_c]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     byte ptr [eax+1], 0
mov     ecx, [esi+4]
mov     edi, [esi]
mov     eax, ebx
test    ecx, ecx
jz      short loc_10025be1
cmp     byte ptr [edi+32h], 0
jnz     short loc_10025be1
test    ebx, ebx
jns     short loc_10025bbd
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     esi, [ecx+edx*4]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     eax, [ebp+arg_10]
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0f2h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     ecx, [ebp+arg_10]
mov     eax, 0fffffff2h
call    sub_10025e50
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, eax
push    edi
mov     edi, [esi+24h]
lea     ecx, [edi-1]
lea     eax, [edi+1]
mov     [esi+24h], eax
test    edi, ecx
jnz     short loc_10025c4a
mov     eax, [esi]
mov     ebx, [esi+28h]
lea     edx, ds:4[edi*8]
push    edx
mov     [ebp+var_4], eax
call    sub_10009ac0
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jnz     short loc_10025c47
mov     ecx, [ebp+var_4]
mov     eax, ebx
call    sub_10009810
mov     eax, [ebp+var_8]
mov     [esi+28h], eax
mov     esi, [esi+28h]
test    esi, esi
jz      short loc_10025c58
mov     dword ptr [esi+edi*4], 0ffffffffh
or      eax, 0ffffffffh
sub     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ecx+28h]
test    eax, eax
jz      short locret_10025c85
mov     ecx, [ecx+1ch]
lea     edx, ds:4[edx*4]
sub     eax, edx
mov     [eax], ecx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
mov     edx, [edi+1ch]
dec     edx
mov     ecx, [edi+28h]
push    esi
mov     esi, [eax]
mov     eax, [edi+4]
mov     [ebp+var_4], ecx
mov     byte ptr [edi+64h], 1
js      loc_10025d52
push    ebx
mov     cl, [eax]
movzx   ebx, cl
mov     bl, ds:byte_10076240[ebx]
mov     [eax+2], bl
cmp     cl, 12h
jz      short loc_10025d1f
cmp     cl, 7bh
jz      short loc_10025d1f
cmp     cl, 23h
jnz     short loc_10025cd7
cmp     dword ptr [eax+8], 0
jnz     short loc_10025cdc
jmp     short loc_10025d29
cmp     cl, 7fh
jnz     short loc_10025ce2
mov     byte ptr [edi+64h], 0
jmp     short loc_10025d29
cmp     cl, 8ch
jnz     short loc_10025cec
mov     ecx, [eax+8]
jmp     short loc_10025d23
cmp     cl, 88h
jnz     short loc_10025cf6
mov     ecx, [eax-10h]
jmp     short loc_10025d23
cmp     cl, 5fh
jz      short loc_10025d12
cmp     cl, 51h
jz      short loc_10025d12
cmp     cl, 5ch
jnz     short loc_10025d29
mov     dword ptr [eax+10h], offset sub_1001e4e0
mov     byte ptr [eax+1], 0edh
jmp     short loc_10025d29
mov     dword ptr [eax+10h], offset sub_1001e350
mov     byte ptr [eax+1], 0edh
jmp     short loc_10025d29
movzx   ecx, byte ptr [eax+3]
cmp     ecx, esi
jle     short loc_10025d29
mov     esi, ecx
test    byte ptr [eax+2], 1
jz      short loc_10025d47
mov     ecx, [eax+8]
test    ecx, ecx
jns     short loc_10025d47
mov     ebx, [ebp+var_4]
lea     ecx, ds:4[ecx*4]
sub     ebx, ecx
mov     ecx, [ebx]
mov     [eax+8], ecx
add     eax, 14h
dec     edx
jns     loc_10025cb2
pop     ebx
mov     eax, [edi+28h]
mov     ecx, [edi]
call    sub_10009810
mov     edx, [ebp+arg_0]
mov     dword ptr [edi+28h], 0
mov     [edx], esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx+1ch]
push    esi
mov     esi, [ebp+arg_4]
add     eax, esi
push    edi
cmp     eax, [ebx+20h]
jle     short loc_10025d9d
mov     edi, ebx
call    sub_10025810
test    eax, eax
jz      short loc_10025d9d
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebx+1ch]
xor     eax, eax
mov     [ebp+var_8], ecx
cmp     esi, eax
jle     short loc_10025e16
mov     edx, [ebp+arg_8]
lea     esi, [ecx+ecx*4]
mov     ecx, [ebp+arg_4]
add     esi, esi
inc     edx
add     esi, esi
mov     [ebp+var_4], ecx
lea     ebx, [ebx+0]
mov     ecx, [ebx+4]
mov     bl, [edx-1]
movsx   edi, byte ptr [edx+1]
add     ecx, esi
mov     [ecx], bl
movsx   ebx, byte ptr [edx]
mov     [ecx+4], ebx
cmp     edi, eax
jge     short loc_10025def
movzx   ebx, byte ptr [ecx]
test    ds:byte_10076240[ebx], 1
jz      short loc_10025def
mov     ebx, [ebp+var_8]
sub     ebx, edi
dec     ebx
mov     [ecx+8], ebx
jmp     short loc_10025df2
mov     [ecx+8], edi
movsx   edi, byte ptr [edx+2]
mov     ebx, [ebp+arg_0]
add     esi, 14h
add     edx, 4
dec     [ebp+var_4]
mov     [ecx+0ch], edi
mov     [ecx+1], al
mov     [ecx+10h], eax
mov     [ecx+3], al
jnz     short loc_10025dc0
mov     ecx, [ebp+var_8]
mov     esi, [ebp+arg_4]
add     [ebx+1ch], esi
pop     edi
pop     esi
mov     eax, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    eax, eax
js      short locret_10025e45
mov     ecx, [edx+1ch]
cmp     ecx, eax
jbe     short locret_10025e45
mov     edx, [edx+4]
lea     eax, [eax+eax*4]
mov     [edx+eax*4+8], ecx
retn
push    ecx
push    ebx
push    esi
mov     esi, ecx
test    esi, esi
jz      def_10025e70
add     eax, 10h
cmp     eax, 0fh
ja      def_10025e70
movzx   eax, ds:byte_10025f40[eax]
jmp     ds:jpt_10025e70[eax*4]
mov     eax, esi
mov     ecx, edi
call    sub_10009810
pop     esi
pop     ebx
pop     ecx
retn
cmp     dword ptr [edi+1e8h], 0
jnz     def_10025e70
push    esi
call    sub_10009770
add     esp, 4
pop     esi
pop     ebx
pop     ecx
retn
mov     eax, [esi]
test    eax, eax
jz      short loc_10025eb1
test    byte ptr [eax+3], 4
jz      short loc_10025eb1
mov     ecx, edi
call    sub_10009810
cmp     dword ptr [edi+1e8h], 0
jnz     short loc_10025ec6
push    0
mov     ebx, esi
call    sub_10027ef0
add     esp, 4
mov     eax, esi
mov     ecx, edi
call    sub_10009810
pop     esi
pop     ebx
pop     ecx
retn
test    byte ptr [esi+3], 4
jz      short def_10025e70
mov     eax, esi
mov     ecx, edi
call    sub_10009810
pop     esi
pop     ebx
pop     ecx
retn
cmp     dword ptr [edi+1e8h], 0
jnz     short loc_10025ef8
call    sub_100257d0
pop     esi
pop     ebx
pop     ecx
retn
mov     eax, [esi+24h]
mov     ecx, edi
call    sub_10009810
mov     eax, esi
mov     ecx, edi
call    sub_10009810
pop     esi
pop     ebx
pop     ecx
retn
cmp     dword ptr [edi+1e8h], 0
jnz     short def_10025e70
call    sub_10062c70
pop     esi
pop     ebx
pop     ecx
retn
push    ecx
mov     eax, [edx+4]
push    esi
push    edi
test    eax, eax
jz      short loc_10025f81
mov     edi, [edx]
lea     ecx, [ecx+ecx*4]
lea     esi, [eax+ecx*4]
movsx   eax, byte ptr [esi+1]
mov     ecx, [esi+10h]
call    sub_10025e50
xor     eax, eax
mov     [esi], eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
mov     [esi+10h], eax
mov     byte ptr [esi], 95h
pop     edi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, ecx
mov     ecx, [ebp+arg_0]
push    esi
mov     esi, [ecx+4]
push    edi
mov     edi, [ecx]
test    esi, esi
jz      loc_100260c4
cmp     byte ptr [edi+32h], 0
jnz     loc_100260c4
test    eax, eax
jns     short loc_10025fbb
mov     eax, [ecx+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [esi+eax*4+10h]
lea     esi, [esi+eax*4]
movsx   eax, byte ptr [esi+1]
call    sub_10025e50
mov     ecx, [ebp+src]
xor     eax, eax
mov     [esi+10h], eax
cmp     ebx, 0fffffff2h
jnz     short loc_10025fe8
mov     [esi+10h], ecx
mov     [esi+1], bl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ecx, eax
jnz     short loc_10025ff9
mov     [esi+10h], eax
mov     [esi+1], al
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 0fffffffah
jnz     short loc_10026066
movzx   ebx, word ptr [ecx+6]
lea     eax, [ebx+ebx*4+0ch]
push    eax
mov     [ebp+var_4], eax
call    sub_100094a0
mov     edi, eax
add     esp, 4
mov     [esi+10h], edi
test    edi, edi
jz      short loc_10026052
mov     eax, [ebp+var_4]
mov     edx, [ebp+src]
sub     eax, ebx
push    eax
push    edx
push    edi
call    memcpy
mov     eax, [edi+8]
add     esp, 0ch
test    eax, eax
jz      short loc_10026047
push    ebx
lea     ecx, [edi+ebx*4+0ch]
push    eax
push    ecx
mov     [edi+8], ecx
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+1], 0fah
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     byte ptr [ecx+32h], 1
mov     byte ptr [esi+1], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 0fffffff0h
jnz     short loc_10026079
mov     [esi+10h], ecx
mov     byte ptr [esi+1], 0fah
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 0fffffff6h
jnz     short loc_1002608e
mov     [esi+10h], ecx
mov     [esi+1], bl
inc     dword ptr [ecx+0ch]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, eax
jge     short loc_1002609f
mov     [esi+10h], ecx
mov     [esi+1], bl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
jnz     short loc_100260a8
call    sub_1000ba20
mov     ebx, eax
mov     edx, [ebp+arg_0]
mov     edx, [edx]
mov     edi, ebx
mov     ebx, ecx
call    sub_10009bc0
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0ffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 0fffffffah
jz      short loc_100260d8
cmp     ebx, 0fffffff6h
jz      short loc_100260d8
mov     ecx, [ebp+src]
mov     eax, ebx
call    sub_10025e50
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jns     short loc_100260e8
mov     eax, [ecx+1ch]
dec     eax
mov     edx, [ecx]
cmp     byte ptr [edx+32h], 0
jz      short loc_100260f6
mov     eax, offset dword_10081398
retn
mov     ecx, [ecx+4]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
movsx   ecx, byte ptr [eax+1]
add     ecx, 13h
push    ebx
push    esi
mov     [ebp+var_4], edi
cmp     ecx, 0fh
ja      def_1002611b
jmp     ds:jpt_1002611b[ecx*4]
mov     ebx, [eax+10h]
movzx   eax, word ptr [ebx+6]
push    eax
push    offset akeyinfod
push    edi
push    20h
mov     [ebp+var_10], ebx
call    sub_1000b050
add     esp, 10h
mov     ecx, edi
call    sub_1000ba20
xor     ecx, ecx
mov     esi, eax
mov     [ebp+var_8], 0
cmp     cx, [ebx+6]
jnb     loc_1002620c
lea     edx, [ebx+0ch]
mov     [ebp+var_c], edx
mov     eax, [ebp+var_c]
mov     edx, [eax]
test    edx, edx
jz      short loc_100261ce
mov     ecx, [edx]
mov     eax, ecx
test    ecx, ecx
jnz     short loc_10026174
xor     ebx, ebx
jmp     short loc_1002618f
cmp     byte ptr [ecx], 0
jz      short loc_10026186
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10026180
sub     eax, ecx
and     eax, 3fffffffh
mov     ebx, eax
lea     ecx, [ebx+esi]
cmp     ecx, 1ah
jg      short loc_10026205
mov     eax, [ebp+var_10]
mov     byte ptr [esi+edi], 2ch
mov     eax, [eax+8]
inc     esi
test    eax, eax
jz      short loc_100261b4
mov     ecx, [ebp+var_8]
cmp     byte ptr [eax+ecx], 0
jz      short loc_100261b4
mov     byte ptr [esi+edi], 2dh
inc     esi
mov     ecx, [edx]
lea     eax, [ebx+1]
push    eax
push    ecx
lea     edx, [esi+edi]
push    edx
call    memcpy
add     esp, 0ch
add     esi, ebx
mov     ebx, [ebp+var_10]
jmp     short loc_100261df
lea     eax, [esi+4]
cmp     eax, 1ah
jge     short loc_100261df
mov     dword ptr [esi+edi], 6c696e2ch
mov     esi, eax
mov     eax, [ebp+var_8]
movzx   ecx, word ptr [ebx+6]
add     [ebp+var_c], 4
inc     eax
mov     [ebp+var_8], eax
cmp     eax, ecx
jl      loc_1002615f
mov     word ptr [esi+edi], 29h
mov     eax, [ebp+var_4]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dword ptr [esi+edi], 2e2e2e2ch
mov     word ptr [esi+edi], 29h
mov     eax, [ebp+var_4]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [eax+10h]
mov     eax, [edx]
push    eax
push    offset acollseq20s
push    edi
push    20h
call    sub_1000b050
mov     eax, [ebp+var_4]
add     esp, 10h
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [eax+10h]
movsx   ecx, word ptr [eax]
mov     edx, [eax+18h]
push    ecx
push    edx
push    offset asd
push    edi
push    20h
call    sub_1000b050
mov     eax, [ebp+var_4]
add     esp, 14h
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [eax+10h]
mov     ecx, [eax+4]
mov     edx, [eax]
push    ecx
push    edx
push    offset alld
push    edi
push    20h
call    sub_1000b050
mov     eax, [ebp+var_4]
add     esp, 14h
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [eax+10h]
push    eax
push    offset ad
push    edi
push    20h
call    sub_1000b050
mov     eax, [ebp+var_4]
add     esp, 10h
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [eax+10h]
fld     qword ptr [ecx]
sub     esp, 8
fstp    [esp+20h+var_20]
push    offset a16g
push    edi
push    20h
call    sub_1000b050
mov     eax, [ebp+var_4]
add     esp, 14h
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [eax+10h]
movzx   ecx, word ptr [eax+1ch]
test    cl, 2
jz      short loc_100262dc
mov     edx, [eax+4]
mov     [ebp+var_4], edx
mov     eax, edx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    cl, 4
jz      short loc_100262ec
mov     ecx, [eax+14h]
mov     edx, [eax+10h]
jmp     loc_10026266
test    cl, 8
jz      short loc_100262f6
fld     qword ptr [eax+8]
jmp     short loc_100262a3
test    cl, 1
jz      short loc_10026314
push    offset anull_0
push    edi
push    20h
call    sub_1000b050
mov     eax, [ebp+var_4]
add     esp, 0ch
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_4], offset ablob_0
mov     eax, [ebp+var_4]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [eax+10h]
mov     eax, [eax+8]
mov     ecx, [eax]
push    ecx
push    eax
push    offset avtabpp
push    edi
push    20h
call    sub_1000b050
mov     eax, [ebp+var_4]
add     esp, 14h
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset aintarray
push    edi
push    20h
call    sub_1000b050
mov     eax, [ebp+var_4]
add     esp, 0ch
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset aprogram
push    edi
push    20h
call    sub_1000b050
mov     eax, [ebp+var_4]
add     esp, 0ch
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [eax+10h]
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_10026389
mov     [ebp+var_4], edi
mov     byte ptr [edi], 0
mov     eax, [ebp+var_4]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, 1
shl     edx, cl
or      [eax+6ch], edx
cmp     ecx, 1
jz      short locret_10026405
push    esi
mov     esi, [eax]
mov     esi, [esi+10h]
add     ecx, ecx
mov     ecx, [esi+ecx*8+4]
cmp     byte ptr [ecx+9], 0
pop     esi
jz      short locret_10026405
or      [eax+70h], edx
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
sub     esp, 8
cmp     dword ptr [edx+70h], 0
jz      short loc_1002646e
mov     eax, [edx]
mov     ecx, [eax+10h]
mov     eax, [eax+14h]
push    ebx
push    esi
xor     esi, esi
mov     [ebp+var_8], eax
lea     ebx, [esi+1]
test    eax, eax
jle     short loc_1002646c
add     ecx, 4
mov     [ebp+var_4], ecx
push    edi
lea     esp, [esp+0]
cmp     esi, 1
jz      short loc_1002645b
test    [edx+70h], ebx
jz      short loc_1002645b
mov     edi, [ecx]
test    edi, edi
jz      short loc_1002645b
call    sub_10019320
mov     edx, [ebp+arg_0]
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
inc     esi
add     ecx, 10h
add     ebx, ebx
mov     [ebp+var_4], ecx
cmp     esi, eax
jl      short loc_10026440
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
sub     esp, 8
cmp     dword ptr [edx+70h], 0
jz      short loc_100264fc
mov     eax, [edx]
mov     ecx, [eax+10h]
mov     eax, [eax+14h]
push    ebx
push    edi
xor     edi, edi
mov     [ebp+var_8], eax
lea     ebx, [edi+1]
test    eax, eax
jle     short loc_100264fa
add     ecx, 4
mov     [ebp+var_4], ecx
push    esi
lea     esp, [esp+0]
cmp     edi, 1
jz      short loc_100264e9
test    [edx+70h], ebx
jz      short loc_100264e9
mov     esi, [ecx]
test    esi, esi
jz      short loc_100264e9
cmp     byte ptr [esi+9], 0
jz      short loc_100264e9
dec     dword ptr [esi+0ch]
jnz     short loc_100264e9
mov     ecx, [esi+4]
mov     ecx, [ecx+38h]
test    ecx, ecx
jz      short loc_100264e5
push    ecx
call    dword_10080284
mov     eax, [ebp+var_8]
mov     edx, [ebp+arg_0]
add     esp, 4
mov     byte ptr [esi+0ah], 0
mov     ecx, [ebp+var_4]
inc     edi
add     ecx, 10h
add     ebx, ebx
mov     [ebp+var_4], ecx
cmp     edi, eax
jl      short loc_100264b0
pop     esi
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
push    edi
test    esi, esi
jz      loc_100265b1
test    eax, eax
jz      loc_100265b1
mov     ebx, [esi]
cmp     dword ptr [ebx+1e8h], 0
mov     cl, [ebx+32h]
mov     [ebp+var_1], cl
jz      short loc_1002654c
lea     edx, [eax+eax*4]
lea     edi, [esi+edx*8]
cmp     esi, edi
jnb     short loc_100265b1
mov     eax, [esi+24h]
mov     ecx, ebx
call    sub_10009810
add     esi, 28h
cmp     esi, edi
jb      short loc_10026534
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     eax, [eax+eax*4]
lea     ecx, [esi+eax*8]
cmp     esi, ecx
jnb     short loc_100265ab
sub     ecx, esi
dec     ecx
mov     eax, 0cccccccdh
mul     ecx
lea     edi, [esi+24h]
mov     esi, edx
shr     esi, 5
inc     esi
lea     esp, [esp+0]
mov     ecx, 2460h
test    [edi-8], cx
jz      short loc_10026589
lea     edx, [edi-24h]
push    edx
call    sub_100247d0
add     esp, 4
jmp     short loc_1002659c
mov     eax, [edi]
test    eax, eax
jz      short loc_1002659c
mov     ecx, ebx
call    sub_10009810
mov     dword ptr [edi], 0
mov     eax, 80h
mov     [edi-8], ax
add     edi, 28h
dec     esi
jnz     short loc_10026570
mov     cl, [ebp+var_1]
mov     [ebx+32h], cl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx+38h]
lea     eax, [eax+eax*4]
lea     ecx, [ebx+eax*8+48h]
xor     eax, eax
push    esi
push    edi
mov     [ebp+var_8], ecx
mov     [ebp+var_4], eax
cmp     [ebx+3ch], eax
jle     short loc_10026647
mov     edx, [ebp+var_8]
mov     edi, [edx+eax*4]
mov     esi, [ebx]
mov     [ebp+var_c], esi
test    edi, edi
jz      short loc_1002663b
mov     eax, [esi]
push    edi
call    sub_10032f40
mov     eax, [edi+4]
add     esp, 4
test    eax, eax
jz      short loc_1002660d
mov     ebx, eax
call    sub_1001b4a0
jmp     short loc_1002661d
mov     eax, [edi]
test    eax, eax
jz      short loc_10026620
mov     esi, eax
call    sub_1001d2b0
mov     esi, [ebp+var_c]
mov     ebx, [ebp+arg_0]
mov     eax, [edi+24h]
test    eax, eax
jz      short loc_1002663b
mov     edi, [edi+28h]
mov     byte ptr [esi+62h], 1
push    eax
mov     eax, [edi+1ch]
call    eax
add     esp, 4
mov     byte ptr [esi+62h], 0
mov     eax, [ebp+var_4]
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [ebx+3ch]
jl      short loc_100265e3
mov     eax, [ebx+38h]
lea     ecx, [ebx+48h]
call    sub_10026500
mov     ecx, [ebx]
mov     ecx, [ecx]
mov     eax, ebx
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, [edi+8]
mov     esi, [edi]
xor     eax, eax
mov     [ebp+var_8], eax
mov     [ebp+var_4], eax
mov     [ebp+var_10], eax
add     ebx, 28h
mov     eax, 8
mov     ecx, ebx
mov     [ebp+var_14], esi
call    sub_10026500
cmp     dword ptr [edi+58h], 7
mov     dword ptr [edi+14h], 0
jnz     short loc_100266ba
mov     eax, 1
mov     [esi+32h], al
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+5dh], 1
mov     esi, [edi+1ch]
mov     [ebp+var_c], esi
jnz     short loc_1002672a
mov     eax, [edi+8]
add     eax, 168h
test    byte ptr [eax+1ch], 10h
mov     [ebp+var_10], eax
jz      short loc_100266e6
mov     ecx, [eax+18h]
mov     eax, [eax+4]
shr     ecx, 2
mov     [ebp+var_8], ecx
mov     [ebp+var_4], eax
xor     ecx, ecx
xor     edx, edx
xor     eax, eax
cmp     [ebp+var_8], 2
jl      short loc_10026710
mov     esi, [ebp+var_4]
mov     esi, [esi+eax*4]
add     ecx, [esi+4]
mov     esi, [ebp+var_4]
mov     esi, [esi+eax*4+4]
add     edx, [esi+4]
mov     esi, [ebp+var_8]
add     eax, 2
dec     esi
cmp     eax, esi
jl      short loc_100266f2
cmp     eax, [ebp+var_8]
jge     short loc_10026723
mov     esi, [ebp+var_4]
mov     eax, [esi+eax*4]
mov     esi, [ebp+var_c]
add     esi, [eax+4]
jmp     short loc_10026726
mov     esi, [ebp+var_c]
add     edx, ecx
add     esi, edx
mov     eax, [edi+54h]
lea     ecx, [eax+1]
mov     [edi+54h], ecx
cmp     eax, esi
jge     short loc_10026792
cmp     byte ptr [edi+5dh], 2
jnz     short loc_10026749
mov     ecx, [edi+4]
lea     edx, [eax+eax*4]
cmp     byte ptr [ecx+edx*4], 96h
jnz     short loc_1002672a
mov     edx, [ebp+var_14]
mov     ecx, [edx+0d8h]
test    ecx, ecx
jz      short loc_100267aa
mov     dword ptr [edi+58h], 9
mov     ecx, ds:off_100794c4
mov     [ebp+arg_0], 1
mov     eax, offset aunknownerror
test    ecx, ecx
jz      short loc_10026775
mov     eax, ecx
push    eax
push    offset as
lea     ebx, [edi+34h]
mov     esi, edx
call    sub_10009bf0
mov     eax, [ebp+arg_0]
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+arg_0], 65h
mov     eax, [ebp+arg_0]
mov     dword ptr [edi+58h], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edi+1ch]
cmp     eax, ecx
jge     short loc_100267bf
mov     ecx, [edi+4]
lea     edx, [eax+eax*4]
lea     esi, [ecx+edx*4]
mov     [ebp+var_c], esi
jmp     short loc_100267f0
mov     esi, [ebp+var_4]
sub     eax, ecx
mov     ecx, [ebp+var_4]
mov     ecx, [ecx]
mov     ecx, [ecx+4]
xor     edx, edx
cmp     eax, ecx
jl      short loc_100267e0
sub     eax, ecx
mov     ecx, [esi+edx*4+4]
mov     ecx, [ecx+4]
inc     edx
cmp     eax, ecx
jge     short loc_100267d2
mov     edx, [esi+edx*4]
mov     edx, [edx]
lea     ecx, [eax+eax*4]
lea     ecx, [edx+ecx*4]
mov     [ebp+var_c], ecx
mov     esi, ecx
cmp     byte ptr [edi+5dh], 1
jnz     loc_100268b2
mov     edx, 4
mov     [ebx+1ch], dx
cdq
mov     [ebx+10h], eax
mov     byte ptr [ebx+1eh], 1
mov     [ebx+14h], edx
mov     eax, 0a02h
mov     [ebx+44h], ax
movzx   ecx, byte ptr [esi]
mov     eax, ds:off_100764a8[ecx*4]
mov     [ebx+2ch], eax
mov     ecx, eax
test    eax, eax
jz      short loc_1002683e
cmp     byte ptr [eax], 0
jz      short loc_10026836
nop
inc     ecx
cmp     byte ptr [ecx], 0
jnz     short loc_10026830
sub     ecx, eax
and     ecx, 3fffffffh
mov     [ebx+40h], ecx
mov     word ptr [ebx+46h], 103h
add     ebx, 50h
cmp     byte ptr [esi+1], 0eeh
jnz     short loc_100268b2
mov     ecx, [ebp+var_8]
lea     edx, ds:4[ecx*4]
xor     eax, eax
mov     [ebp+var_14], edx
test    ecx, ecx
jle     short loc_1002687a
mov     edx, [esi+10h]
mov     edi, [ebp+var_4]
lea     esp, [esp+0]
cmp     [edi+eax*4], edx
jz      short loc_1002687a
inc     eax
cmp     eax, ecx
jl      short loc_10026870
cmp     eax, ecx
jnz     short loc_100268b2
mov     edi, [ebp+var_10]
xor     eax, eax
cmp     [ebp+var_8], eax
setnz   al
push    eax
mov     eax, [ebp+var_14]
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_100268b2
mov     edx, [esi+10h]
mov     eax, edi
mov     ecx, [eax+4]
mov     edi, [ebp+var_8]
mov     [ecx+edi*4], edx
mov     ecx, [ebp+var_14]
or      word ptr [eax+1ch], 10h
mov     [eax+18h], ecx
mov     edx, 4
mov     [ebx+1ch], dx
mov     eax, [esi+4]
cdq
mov     [ebx+10h], eax
mov     [ebx+14h], edx
mov     byte ptr [ebx+1eh], 1
mov     eax, 4
mov     [ebx+44h], ax
mov     eax, [esi+8]
cdq
mov     [ebx+38h], eax
mov     [ebx+3ch], edx
mov     byte ptr [ebx+46h], 1
mov     ecx, 4
mov     [ebx+6ch], cx
mov     eax, [esi+0ch]
cdq
mov     [ebx+60h], eax
mov     [ebx+64h], edx
mov     byte ptr [ebx+6eh], 1
mov     eax, [ebx+78h]
mov     ecx, [ebx+9ch]
add     ebx, 78h
mov     [ebp+var_14], ebx
test    eax, eax
jz      short loc_10026927
test    ecx, ecx
jz      short loc_10026927
cmp     ecx, [eax+0fch]
jb      short loc_10026927
cmp     ecx, [eax+100h]
jnb     short loc_10026927
movzx   eax, word ptr [eax+0e0h]
jmp     short loc_10026931
push    ecx
call    dword_10080258
add     esp, 4
cmp     eax, 20h
jge     short loc_10026952
mov     eax, [ebx+24h]
mov     ecx, [ebx]
call    sub_10009810
mov     esi, [ebx]
mov     ecx, 20h
call    sub_10009a40
mov     esi, [ebp+var_c]
mov     [ebx+24h], eax
mov     edx, 400h
test    [ebx+1ch], dx
jz      short loc_1002696d
mov     eax, [ebx+20h]
test    eax, eax
jz      short loc_1002696d
mov     ecx, [ebx+4]
push    ecx
call    eax
add     esp, 4
mov     edi, [ebx+24h]
mov     [ebx+4], edi
test    edi, edi
jnz     short loc_10026982
mov     edx, 1
mov     [ebx+1ch], dx
jmp     short loc_1002698b
mov     eax, 0e7ffh
and     [ebx+1ch], ax
mov     dword ptr [ebx+20h], 0
test    edi, edi
jnz     short loc_100269a2
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, 602h
mov     eax, esi
mov     [ebx+1ch], cx
call    sub_10026100
mov     ecx, [ebx+4]
mov     edi, eax
cmp     edi, ecx
jz      loc_10026a74
test    edi, edi
jnz     short loc_10026a0b
test    byte ptr [ebx+1ch], 40h
jz      short loc_100269dd
mov     eax, [ebx+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [ebx+1ch], 20h
jz      short loc_100269ee
mov     ebx, [ebx+10h]
call    sub_100117b0
mov     ebx, [ebp+var_14]
mov     ax, [ebx+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [ebx+1ch], ax
mov     byte ptr [ebx+1eh], 5
jmp     loc_10026a94
mov     eax, [ebx]
test    eax, eax
jz      short loc_10026a16
mov     eax, [eax+48h]
jmp     short loc_10026a1b
mov     eax, 3b9aca00h
xor     esi, esi
test    eax, eax
js      short loc_10026a2c
cmp     byte ptr [esi+edi], 0
jz      short loc_10026a2c
inc     esi
cmp     esi, eax
jle     short loc_10026a21
xor     edx, edx
mov     [ebp+var_14], 202h
push    ebx
cmp     edx, offset sub_10009760
jnz     short loc_10026a48
call    sub_100247d0
mov     [ebx+24h], edi
jmp     short loc_10026a54
call    sub_100247d0
mov     [ebp+var_14], 0a02h
mov     ax, word ptr [ebp+var_14]
mov     dword ptr [ebx+20h], 0
mov     [ebx+4], edi
add     esp, 4
mov     [ebx+18h], esi
mov     [ebx+1ch], ax
mov     word ptr [ebx+1eh], 103h
jmp     short loc_10026a94
mov     eax, ecx
test    ecx, ecx
jz      short loc_10026a8d
cmp     byte ptr [ecx], 0
jz      short loc_10026a86
nop
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10026a80
sub     eax, ecx
and     eax, 3fffffffh
mov     [ebx+18h], eax
mov     byte ptr [ebx+1fh], 1
mov     esi, [ebp+arg_0]
mov     byte ptr [ebx+1eh], 3
cmp     byte ptr [esi+5dh], 1
jnz     short loc_10026af9
push    0
mov     eax, 4
lea     edi, [ebx+28h]
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     loc_10026996
mov     edx, [ebp+var_c]
mov     ecx, 602h
mov     [ebx+44h], cx
mov     ecx, [ebx+2ch]
mov     dword ptr [ebx+40h], 2
movzx   eax, byte ptr [edx+3]
push    eax
push    offset a2x
push    ecx
push    3
call    sub_1000b050
mov     word ptr [ebx+46h], 103h
mov     edx, 1
add     esp, 10h
mov     [ebx+6ch], dx
mov     byte ptr [ebx+6eh], 5
movzx   eax, byte ptr [esi+5dh]
mov     edx, [esi+8]
dec     ax
mov     ecx, 2
sub     cx, ax
add     cx, cx
add     cx, cx
add     edx, 28h
pop     edi
mov     [esi+2ch], cx
mov     [esi+14h], edx
mov     dword ptr [esi+58h], 0
mov     [ebp+arg_0], 64h
mov     eax, [ebp+arg_0]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
push    esi
push    edi
mov     edi, eax
mov     eax, [edi]
mov     [ebp+var_c], eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax+1cch]
mov     edx, [eax+48h]
mov     esi, [eax+198h]
mov     [ebp+var_14], ecx
mov     ecx, [eax+4ch]
mov     eax, [eax+54h]
mov     [ebp+var_1c], edx
mov     [ebp+var_18], esi
mov     [ebp+var_10], eax
test    eax, eax
jnz     short loc_10026b7f
mov     [ebp+var_10], 1
mov     eax, [edi+1ch]
mov     ebx, [edi+4]
add     ecx, edx
lea     edx, [eax+eax*4]
mov     eax, [edi+20h]
mov     [ebp+var_8], ecx
lea     ecx, [ebp+var_18]
lea     eax, [eax+eax*4]
lea     esi, [ebx+edx*4]
push    ecx
lea     ebx, [ebx+eax*4]
call    sub_10025c90
mov     eax, [ebp+arg_0]
add     esp, 4
cmp     byte ptr [eax+17h], 0
jz      short loc_10026bb8
cmp     byte ptr [eax+18h], 0
jz      short loc_10026bb8
mov     cl, 1
jmp     short loc_10026bba
xor     cl, cl
mov     [edi+63h], cl
cmp     byte ptr [eax+1d4h], 0
jz      short loc_10026bd3
mov     eax, 0ah
cmp     [ebp+var_8], eax
jge     short loc_10026bd3
mov     [ebp+var_8], eax
mov     edx, ebx
sub     edx, esi
push    edx
push    0
push    esi
call    memset
mov     eax, esi
and     eax, 7
add     esp, 0ch
add     esi, eax
mov     byte ptr [edi+5fh], 0
mov     edi, edi
mov     ecx, [edi+8]
mov     [ebp+size], 0
test    ecx, ecx
jnz     short loc_10026c1e
mov     eax, [ebp+var_8]
lea     eax, [eax+eax*4]
lea     eax, ds:7[eax*8]
and     eax, 0fffffff8h
lea     edx, [eax+esi]
cmp     edx, ebx
ja      short loc_10026c1b
mov     ecx, esi
mov     esi, edx
jmp     short loc_10026c1e
mov     [ebp+size], eax
mov     [edi+8], ecx
mov     ecx, [edi+44h]
test    ecx, ecx
jnz     short loc_10026c48
mov     eax, [ebp+var_14]
lea     eax, [eax+eax*4]
lea     eax, ds:7[eax*8]
and     eax, 0fffffff8h
lea     edx, [eax+esi]
cmp     edx, ebx
ja      short loc_10026c45
mov     ecx, esi
mov     esi, edx
jmp     short loc_10026c48
add     [ebp+size], eax
mov     [edi+44h], ecx
mov     ecx, [edi+0ch]
test    ecx, ecx
jnz     short loc_10026c6f
mov     eax, [ebp+var_18]
lea     eax, ds:7[eax*4]
and     eax, 0fffffff8h
lea     edx, [eax+esi]
cmp     edx, ebx
ja      short loc_10026c6c
mov     ecx, esi
mov     esi, edx
jmp     short loc_10026c6f
add     [ebp+size], eax
mov     [edi+0ch], ecx
mov     ecx, [edi+48h]
test    ecx, ecx
jnz     short loc_10026c96
mov     eax, [ebp+var_14]
lea     eax, ds:7[eax*4]
and     eax, 0fffffff8h
lea     edx, [eax+esi]
cmp     edx, ebx
ja      short loc_10026c93
mov     ecx, esi
mov     esi, edx
jmp     short loc_10026c96
add     [ebp+size], eax
mov     [edi+48h], ecx
mov     ecx, [edi+40h]
test    ecx, ecx
jnz     short loc_10026cbd
mov     eax, [ebp+var_1c]
lea     eax, ds:7[eax*4]
and     eax, 0fffffff8h
lea     edx, [eax+esi]
cmp     edx, ebx
ja      short loc_10026cba
mov     ecx, esi
mov     esi, edx
jmp     short loc_10026cbd
add     [ebp+size], eax
mov     [edi+40h], ecx
mov     ecx, [edi+0bch]
test    ecx, ecx
jnz     short loc_10026ce1
mov     eax, [ebp+var_10]
add     eax, 7
and     eax, 0fffffff8h
lea     edx, [eax+esi]
cmp     edx, ebx
ja      short loc_10026cde
mov     ecx, esi
jmp     short loc_10026ce1
add     [ebp+size], eax
mov     [edi+0bch], ecx
mov     ecx, [ebp+size]
test    ecx, ecx
jz      short loc_10026d11
mov     esi, [ebp+var_c]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10026d0b
mov     eax, [ebp+size]
push    eax
push    0
push    esi
call    memset
add     esp, 0ch
mov     [edi+0a0h], esi
mov     eax, [ebp+size]
mov     esi, [edi+0a0h]
lea     ebx, [eax+esi]
test    eax, eax
jz      short loc_10026d2e
mov     ecx, [ebp+var_c]
cmp     byte ptr [ecx+32h], 0
jz      loc_10026bf0
cmp     dword ptr [edi+44h], 0
mov     dx, word ptr [ebp+var_1c]
mov     eax, [ebp+var_10]
mov     [edi+2eh], dx
mov     [edi+0b8h], eax
jz      short loc_10026d6e
mov     ecx, [ebp+var_14]
mov     [edi+4ch], cx
test    ecx, ecx
jle     short loc_10026d6e
xor     eax, eax
mov     edx, [edi+44h]
mov     esi, 1
mov     [eax+edx+1ch], si
mov     edx, [edi+44h]
mov     esi, [ebp+var_c]
mov     [eax+edx], esi
add     eax, 28h
dec     ecx
jnz     short loc_10026d52
mov     ecx, [edi+48h]
mov     esi, [ebp+arg_0]
test    ecx, ecx
jz      short loc_10026db5
movzx   eax, word ptr [esi+1d0h]
mov     [edi+4eh], ax
mov     edx, [esi+1ech]
cwde
add     eax, eax
add     eax, eax
push    eax
push    edx
push    ecx
call    memcpy
mov     eax, [esi+1d0h]
mov     ecx, [esi+1ech]
add     eax, eax
add     esp, 0ch
add     eax, eax
push    eax
push    0
push    ecx
call    memset
add     esp, 0ch
mov     eax, [edi+8]
test    eax, eax
jz      short loc_10026dee
mov     ecx, [ebp+var_8]
add     eax, 0ffffffd8h
mov     [edi+8], eax
mov     [edi+18h], ecx
cmp     ecx, 1
jl      short loc_10026dee
mov     eax, 28h
mov     edx, [edi+8]
mov     ebx, 80h
mov     [eax+edx+1ch], bx
mov     edx, [edi+8]
mov     ebx, [ebp+var_c]
mov     [eax+edx], ebx
add     eax, 28h
dec     ecx
jnz     short loc_10026dd2
mov     al, [esi+1d4h]
mov     [edi+5dh], al
xor     eax, eax
mov     dword ptr [edi+54h], 0ffffffffh
mov     [edi+58h], eax
mov     byte ptr [edi+5ch], 2
mov     dword ptr [edi+30h], 0bdf20da3h
mov     [edi+68h], eax
mov     dword ptr [edi+50h], 1
mov     byte ptr [edi+61h], 0ffh
mov     [edi+74h], eax
mov     [edi+8ch], eax
mov     [edi+90h], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, eax
test    edi, edi
jz      short loc_10026e93
mov     esi, [ebp+arg_0]
mov     eax, [esi]
push    edi
call    sub_10032f40
mov     ebx, [edi+4]
add     esp, 4
test    ebx, ebx
jz      short loc_10026e68
call    sub_1001b4a0
jmp     short loc_10026e78
mov     eax, [edi]
test    eax, eax
jz      short loc_10026e78
mov     esi, eax
call    sub_1001d2b0
mov     esi, [ebp+arg_0]
mov     eax, [edi+24h]
test    eax, eax
jz      short loc_10026e93
mov     edi, [edi+28h]
mov     byte ptr [esi+62h], 1
push    eax
mov     eax, [edi+1ch]
call    eax
add     esp, 4
mov     byte ptr [esi+62h], 0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [edi+0a4h]
sub     esp, 8
push    ebx
xor     ebx, ebx
push    esi
cmp     eax, ebx
jz      short loc_10026f17
mov     ecx, [eax+4]
cmp     ecx, ebx
jz      short loc_10026ec9
jmp     short loc_10026ec0
mov     eax, ecx
mov     ecx, [eax+4]
cmp     ecx, ebx
jnz     short loc_10026ec0
mov     ecx, [eax]
mov     edx, [eax+10h]
mov     [ecx+0bch], edx
mov     edx, [eax+34h]
mov     [ecx+0b8h], edx
mov     edx, [eax+8]
mov     [ecx+4], edx
mov     edx, [eax+2ch]
mov     [ecx+1ch], edx
mov     edx, [eax+0ch]
mov     [ecx+8], edx
mov     edx, [eax+30h]
mov     [ecx+18h], edx
mov     edx, [eax+14h]
mov     [ecx+40h], edx
mov     dx, [eax+24h]
mov     [ecx+2eh], dx
mov     esi, [eax+1ch]
mov     edx, [ecx]
mov     [edx+1ch], esi
mov     esi, [eax+20h]
mov     [edx+20h], esi
mov     eax, [eax+40h]
mov     [ecx+68h], eax
mov     [edi+0a4h], ebx
mov     [edi+0ach], ebx
cmp     [edi+40h], ebx
jz      short loc_10026f9f
xor     ecx, ecx
mov     [ebp+var_4], ebx
cmp     cx, [edi+2eh]
jnb     short loc_10026f9f
mov     edx, [edi+40h]
mov     esi, [edx+ebx*4]
mov     [ebp+var_8], esi
test    esi, esi
jz      short loc_10026f93
mov     eax, [edi]
push    esi
call    sub_10032f40
mov     eax, [esi+4]
add     esp, 4
test    eax, eax
jz      short loc_10026f5b
mov     ebx, eax
call    sub_1001b4a0
jmp     short loc_10026f6b
mov     eax, [esi]
test    eax, eax
jz      short loc_10026f6e
mov     esi, eax
call    sub_1001d2b0
mov     esi, [ebp+var_8]
mov     ebx, [ebp+var_4]
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_10026f89
mov     esi, [esi+28h]
mov     byte ptr [edi+62h], 1
push    eax
mov     eax, [esi+1ch]
call    eax
add     esp, 4
mov     byte ptr [edi+62h], 0
mov     ecx, [edi+40h]
mov     dword ptr [ecx+ebx*4], 0
movzx   edx, word ptr [edi+2eh]
inc     ebx
mov     [ebp+var_4], ebx
cmp     ebx, edx
jl      short loc_10026f33
mov     eax, [edi+8]
test    eax, eax
jz      short loc_10026fb1
lea     ecx, [eax+28h]
mov     eax, [edi+18h]
call    sub_10026500
cmp     dword ptr [edi+0a8h], 0
jz      short loc_10026fe1
lea     ebx, [ebx+0]
mov     eax, [edi+0a8h]
mov     ecx, [eax+4]
push    eax
mov     [edi+0a8h], ecx
call    sub_100265c0
add     esp, 4
cmp     dword ptr [edi+0a8h], 0
jnz     short loc_10026fc0
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     ecx, [edi+10h]
push    ebx
mov     ebx, [edi]
push    esi
mov     esi, eax
movzx   eax, word ptr [edi+2ch]
lea     eax, [eax+eax*4]
mov     [ebp+var_4], ebx
call    sub_10026500
mov     eax, [edi+10h]
mov     ecx, ebx
call    sub_10009810
lea     ebx, [esi+esi*4]
lea     ecx, [ebx+ebx*4]
add     ecx, ecx
add     ecx, ecx
mov     [edi+2ch], si
mov     esi, [ebp+var_4]
add     ecx, ecx
mov     [ebp+size], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10027048
mov     eax, [ebp+size]
push    eax
push    0
push    esi
call    memset
add     esp, 0ch
mov     eax, esi
mov     [edi+10h], esi
test    esi, esi
jz      short loc_1002706a
test    ebx, ebx
jle     short loc_1002706a
mov     ecx, 1
mov     [eax+1ch], cx
mov     edx, [edi]
dec     ebx
mov     [eax], edx
add     eax, 28h
test    ebx, ebx
jg      short loc_10027055
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ecx]
cmp     byte ptr [eax+32h], 0
jz      short loc_10027082
mov     eax, 7
pop     ebp
retn
movzx   eax, word ptr [ecx+2ch]
imul    eax, [ebp+arg_4]
add     eax, [ebp+arg_0]
push    1
lea     edx, [eax+eax*4]
mov     eax, [ecx+10h]
mov     ecx, [ebp+src]
lea     edx, [eax+edx*8]
mov     eax, [ebp+arg_c]
push    ecx
or      ecx, 0ffffffffh
call    sub_10024e60
add     esp, 8
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 2ch
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
add     eax, 34h
push    eax
xor     edi, edi
push    ebx
mov     [esp+40h+var_28], edi
mov     [esp+40h+var_1c], edi
call    sub_10063a70
mov     esi, eax
xor     ecx, ecx
add     esp, 8
mov     [esp+38h+var_2c], ecx
cmp     esi, edi
jnz     loc_100277e5
mov     [esp+38h+var_24], edi
cmp     ecx, [ebx+14h]
jge     short loc_1002714e
mov     edx, [ebx+10h]
mov     eax, [esp+38h+var_24]
mov     eax, [edx+eax+4]
cmp     eax, edi
jz      short loc_10027137
cmp     byte ptr [eax+8], 2
jnz     short loc_10027137
mov     edx, 1
mov     [esp+38h+var_1c], edx
cmp     ecx, edx
jz      short loc_10027115
add     [esp+38h+var_28], edx
mov     edx, [eax+4]
mov     edi, [edx]
xor     eax, eax
cmp     [edi+0b8h], eax
jnz     short loc_10027133
lea     ebx, [eax+4]
call    sub_10014160
mov     ecx, [esp+38h+var_2c]
mov     ebx, [ebp+arg_0]
mov     esi, eax
xor     edi, edi
add     [esp+38h+var_24], 10h
inc     ecx
mov     [esp+38h+var_2c], ecx
cmp     esi, edi
jz      short loc_100270ea
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     esi, edi
jnz     loc_100277e5
cmp     [esp+38h+var_1c], edi
jz      short loc_10027184
mov     eax, [ebx+0a4h]
cmp     eax, edi
jz      short loc_10027184
mov     ecx, [ebx+0a0h]
push    ecx
call    eax
mov     esi, eax
add     esp, 4
cmp     esi, edi
jz      short loc_10027184
mov     eax, 13h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebx+10h]
mov     eax, [edx+4]
mov     ecx, [eax+4]
mov     eax, [ecx]
cmp     byte ptr [eax+0eh], 0
mov     ecx, offset dword_100796bc
jnz     short loc_100271a0
mov     ecx, [eax+90h]
mov     eax, ecx
cmp     ecx, edi
jz      loc_10027693
cmp     byte ptr [ecx], 0
jz      short loc_100271b6
nop
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100271b0
sub     eax, ecx
and     eax, 3fffffffh
jz      loc_10027693
cmp     [esp+38h+var_28], 1
jle     loc_10027693
mov     ecx, [edx+4]
mov     eax, [ebx]
mov     edx, [ecx+4]
mov     [esp+38h+var_28], eax
mov     eax, [edx]
cmp     byte ptr [eax+0eh], 0
mov     [esp+38h+var_1c], edi
mov     ecx, offset dword_100796bc
jnz     short loc_100271f1
mov     ecx, [eax+90h]
xor     ebx, ebx
mov     [esp+38h+var_14], ebx
mov     [esp+38h+var_8], ebx
mov     [esp+38h+var_4], ebx
mov     [esp+38h+var_20], ebx
mov     eax, ecx
cmp     ecx, ebx
jnz     short loc_1002720f
mov     [esp+38h+var_18], ebx
jmp     short loc_10027223
cmp     [ecx], bl
jz      short loc_10027218
inc     eax
cmp     [eax], bl
jnz     short loc_10027213
sub     eax, ecx
and     eax, 3fffffffh
mov     [esp+38h+var_18], eax
mov     eax, [ebp+arg_0]
push    ecx
push    offset asmjxxxxxx9xxz
push    eax
call    sub_1000ae80
mov     edi, eax
add     esp, 0ch
mov     [esp+38h+var_24], edi
test    edi, edi
jnz     short loc_10027250
lea     eax, [edi+7]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    ebx, ebx
jz      short loc_10027272
cmp     ebx, 64h
jg      loc_1002731e
cmp     ebx, 1
jnz     short loc_10027272
push    edi
push    offset amjcollides
push    0dh
call    sub_1000b150
add     esp, 0ch
inc     [esp+38h+var_20]
cmp     dword_10080234, 0
mov     esi, 4
lea     ebx, [esp+38h+var_10]
jnz     short loc_10027292
mov     [esp+38h+var_2c], 0
jmp     short loc_100272b1
push    5
call    dword_10080274
add     esp, 4
mov     [esp+38h+var_2c], eax
test    eax, eax
jz      short loc_100272b1
mov     ecx, eax
push    ecx
call    dword_1008027c
add     esp, 4
call    sub_1000b190
mov     [ebx], al
inc     ebx
dec     esi
jnz     short loc_100272b1
mov     eax, [esp+38h+var_2c]
test    eax, eax
jz      short loc_100272ce
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esp+38h+var_10]
movzx   edx, al
push    edx
shr     eax, 8
push    eax
mov     eax, [esp+40h+var_18]
push    offset amj06x902x
add     eax, edi
push    eax
push    0dh
call    sub_1000b050
mov     eax, [esp+4ch+var_28]
mov     edx, [eax+20h]
add     esp, 14h
lea     ecx, [esp+38h+var_c]
push    ecx
push    0
push    edi
push    eax
call    edx
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     loc_100274e7
cmp     [esp+38h+var_c], eax
jz      short loc_10027346
mov     ebx, [esp+38h+var_20]
jmp     loc_10027250
push    edi
push    offset amjdeletes
push    0dh
call    sub_1000b150
mov     eax, [esp+44h+var_28]
add     esp, 0ch
push    0
push    edi
push    eax
mov     eax, [eax+1ch]
call    eax
add     esp, 0ch
test    esi, esi
jnz     loc_100274e7
mov     ebx, [esp+38h+var_28]
push    0
push    4016h
lea     ecx, [esp+40h+var_14]
push    ecx
push    edi
call    sub_10008a40
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     loc_100274e7
mov     edx, [ebp+arg_0]
mov     ebx, [esp+38h+var_14]
mov     [esp+38h+var_2c], eax
cmp     [edx+14h], eax
jle     loc_100274fe
mov     [esp+38h+var_20], eax
mov     edi, edx
mov     eax, [edi+10h]
mov     ecx, [esp+38h+var_20]
mov     eax, [eax+ecx+4]
test    eax, eax
jz      loc_1002741f
cmp     byte ptr [eax+8], 2
jnz     loc_1002741f
mov     edx, [eax+4]
mov     ecx, [edx]
mov     edi, [ecx+94h]
test    edi, edi
jz      short loc_1002741f
cmp     [esp+38h+var_1c], 0
jnz     short loc_100273c7
call    sub_1001b680
test    eax, eax
jnz     short loc_100273c7
mov     [esp+38h+var_1c], 1
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_100273d6
mov     edi, edi
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100273d0
mov     ecx, [esp+38h+var_4]
mov     edx, [ebx]
mov     edx, [edx+0ch]
push    ecx
mov     ecx, [esp+3ch+var_8]
sub     eax, edi
and     eax, 3fffffffh
push    ecx
inc     eax
push    eax
push    edi
push    ebx
call    edx
add     esp, 14h
cmp     byte ptr [edi], 0
mov     esi, eax
mov     eax, edi
jz      short loc_10027406
mov     edi, edi
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10027400
sub     eax, edi
and     eax, 3fffffffh
inc     eax
cdq
add     [esp+38h+var_8], eax
adc     [esp+38h+var_4], edx
test    esi, esi
jnz     loc_100274b5
mov     eax, [esp+38h+var_2c]
mov     edi, [ebp+arg_0]
add     [esp+38h+var_20], 10h
inc     eax
mov     [esp+38h+var_2c], eax
cmp     eax, [edi+14h]
jl      loc_10027383
cmp     [esp+38h+var_1c], 0
jz      loc_100274fa
mov     edx, [ebx]
mov     eax, [edx+30h]
push    ebx
call    eax
add     esp, 4
test    eax, 400h
jnz     loc_100274fa
mov     ecx, [ebx]
mov     edx, [ecx+14h]
push    2
push    ebx
call    edx
mov     esi, eax
add     esp, 8
test    esi, esi
jz      loc_100274fa
mov     eax, [ebx]
test    eax, eax
jz      short loc_10027486
mov     eax, [eax+4]
push    ebx
call    eax
add     esp, 4
mov     dword ptr [ebx], 0
push    ebx
call    sub_10009770
mov     ebx, [esp+3ch+var_24]
mov     eax, [esp+3ch+var_28]
mov     ecx, [eax+1ch]
add     esp, 4
push    0
push    ebx
push    eax
call    ecx
add     esp, 0ch
mov     eax, ebx
mov     ecx, edi
call    sub_10009810
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebx]
test    eax, eax
jz      short loc_100274ca
mov     eax, [eax+4]
push    ebx
call    eax
add     esp, 4
mov     dword ptr [ebx], 0
push    ebx
call    sub_10009770
mov     edi, [esp+3ch+var_24]
mov     eax, [esp+3ch+var_28]
mov     ecx, [eax+1ch]
add     esp, 4
push    0
push    edi
push    eax
call    ecx
add     esp, 0ch
mov     ecx, [ebp+arg_0]
mov     eax, edi
call    sub_10009810
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [esp+38h+var_24]
mov     [esp+38h+var_2c], 0
test    esi, esi
jnz     short loc_10027544
mov     ecx, [ebp+arg_0]
mov     [esp+38h+var_1c], esi
mov     edx, [esp+38h+var_2c]
cmp     edx, [ecx+14h]
jge     short loc_10027544
mov     eax, [ecx+10h]
mov     edx, [esp+38h+var_1c]
mov     eax, [eax+edx+4]
test    eax, eax
jz      short loc_10027537
push    edi
call    sub_1001cc50
mov     ecx, [ebp+arg_0]
add     esp, 4
mov     esi, eax
inc     [esp+38h+var_2c]
add     [esp+38h+var_1c], 10h
test    esi, esi
jz      short loc_10027511
mov     eax, [ebx]
test    eax, eax
jz      short loc_10027559
mov     eax, [eax+4]
push    ebx
call    eax
add     esp, 4
mov     dword ptr [ebx], 0
push    ebx
call    sub_10009770
add     esp, 4
test    esi, esi
jnz     short loc_100274e7
mov     eax, [esp+38h+var_28]
mov     ecx, [eax+1ch]
push    1
push    edi
push    eax
call    ecx
mov     esi, eax
mov     eax, edi
mov     edi, [ebp+arg_0]
add     esp, 0ch
mov     ecx, edi
call    sub_10009810
test    esi, esi
jnz     loc_100277e5
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_10027597
call    eax
cmp     dword ptr [edi+14h], 0
mov     [esp+38h+var_2c], 0
jle     loc_10027672
mov     [esp+38h+var_1c], 0
mov     ecx, edi
mov     edx, [ecx+10h]
mov     eax, [esp+38h+var_1c]
mov     edi, [edx+eax+4]
test    edi, edi
jz      loc_10027658
cmp     byte ptr [edi+8], 0
jz      loc_10027658
call    sub_10019320
cmp     byte ptr [edi+8], 2
jnz     short loc_10027630
mov     eax, [edi+4]
mov     ebx, [eax]
cmp     dword ptr [ebx+28h], 0
mov     [esp+38h+var_10], eax
jnz     short loc_10027628
cmp     byte ptr [ebx+0fh], 2
jnz     short loc_10027602
cmp     byte ptr [ebx+4], 0
jz      short loc_10027602
cmp     byte ptr [ebx+5], 1
jnz     short loc_10027602
mov     byte ptr [ebx+0fh], 1
jmp     short loc_10027628
movzx   ecx, byte ptr [ebx+12h]
push    ecx
call    sub_10012b90
mov     ecx, eax
and     ecx, 0ffh
add     esp, 4
cmp     ecx, 0dh
jz      short loc_10027621
cmp     ecx, 0ah
jnz     short loc_10027628
mov     [ebx+28h], eax
mov     byte ptr [ebx+0fh], 6
mov     edx, [esp+38h+var_10]
mov     byte ptr [edx+13h], 1
call    sub_1001ccf0
cmp     byte ptr [edi+9], 0
jz      short loc_10027658
dec     dword ptr [edi+0ch]
jnz     short loc_10027658
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_10027654
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, [esp+38h+var_2c]
mov     ecx, [ebp+arg_0]
add     [esp+38h+var_1c], 10h
inc     eax
mov     [esp+38h+var_2c], eax
cmp     eax, [ecx+14h]
jl      loc_100275b3
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_1002767d
call    eax
mov     edi, [ebp+arg_0]
push    40h
call    sub_100639d0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     ebx, ebx
test    esi, esi
jnz     short loc_100276c7
mov     ecx, [ebp+arg_0]
xor     edi, edi
mov     edi, edi
cmp     ebx, [ecx+14h]
jge     short loc_100276c7
mov     edx, [ecx+10h]
mov     eax, [edx+edi+4]
test    eax, eax
jz      short loc_100276bf
push    0
call    sub_1001cc50
mov     ecx, [ebp+arg_0]
add     esp, 4
mov     esi, eax
inc     ebx
add     edi, 10h
test    esi, esi
jz      short loc_100276a0
mov     [esp+38h+var_2c], 0
test    esi, esi
jnz     loc_100277e5
mov     [esp+38h+var_1c], esi
mov     eax, [ebp+arg_0]
mov     ecx, [esp+38h+var_2c]
cmp     ecx, [eax+14h]
jge     loc_100277d5
mov     ecx, [esp+38h+var_1c]
mov     edx, eax
mov     eax, [edx+10h]
mov     edi, [eax+ecx+4]
test    edi, edi
jz      short loc_10027764
cmp     byte ptr [edi+8], 0
jz      short loc_10027762
call    sub_10019320
mov     dl, 2
cmp     [edi+8], dl
jnz     short loc_1002773a
mov     ecx, [edi+4]
mov     esi, [ecx]
mov     eax, [esi+28h]
mov     [esp+38h+var_c], ecx
test    eax, eax
jnz     loc_100277aa
cmp     [esi+0fh], dl
jnz     short loc_1002777e
cmp     [esi+4], al
jz      short loc_1002777e
cmp     byte ptr [esi+5], 1
jnz     short loc_1002777e
mov     byte ptr [esi+0fh], 1
mov     byte ptr [ecx+13h], 1
call    sub_1001ccf0
cmp     byte ptr [edi+9], 0
jz      short loc_10027762
dec     dword ptr [edi+0ch]
jnz     short loc_10027762
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_1002775e
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
xor     esi, esi
inc     [esp+38h+var_2c]
add     [esp+38h+var_1c], 10h
test    esi, esi
jz      loc_100276db
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   edx, byte ptr [esi+12h]
push    edx
mov     ebx, esi
call    sub_10012b90
mov     ecx, eax
and     ecx, 0ffh
add     esp, 4
cmp     ecx, 0dh
jz      short loc_1002779f
cmp     ecx, 0ah
jnz     short loc_100277a6
mov     [esi+28h], eax
mov     byte ptr [esi+0fh], 6
mov     ecx, [esp+38h+var_c]
mov     esi, eax
test    esi, esi
jz      short loc_10027736
cmp     byte ptr [edi+9], 0
jz      short loc_10027764
dec     dword ptr [edi+0ch]
jnz     short loc_10027764
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_100277cf
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
jmp     short loc_10027764
test    esi, esi
jnz     short loc_100277e5
mov     edi, eax
push    40h
call    sub_100639d0
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ecx]
xor     eax, eax
push    edi
mov     [esp+18h+var_c], eax
cmp     [esi+1dch], eax
jz      loc_100278e4
mov     ebx, [ecx+74h]
cmp     ebx, eax
jz      loc_100278e4
dec     ebx
mov     [esp+18h+var_4], eax
cmp     [esi+14h], eax
jle     short loc_10027884
mov     [esp+18h+var_8], eax
mov     eax, [esi+10h]
mov     ecx, [esp+18h+var_8]
mov     edi, [ecx+eax+4]
test    edi, edi
jz      short loc_1002786a
cmp     [ebp+arg_4], 2
jnz     short loc_10027852
push    ebx
push    2
mov     eax, edi
call    sub_1001d140
add     esp, 8
test    eax, eax
jnz     short loc_1002785f
push    ebx
push    1
mov     eax, edi
call    sub_1001d140
add     esp, 8
cmp     [esp+18h+var_c], 0
jnz     short loc_1002786a
mov     [esp+18h+var_c], eax
mov     eax, [esp+18h+var_4]
add     [esp+18h+var_8], 10h
inc     eax
mov     [esp+18h+var_4], eax
cmp     eax, [esi+14h]
jl      short loc_1002782c
mov     eax, [esp+18h+var_c]
mov     ecx, [ebp+arg_0]
dec     dword ptr [esi+1dch]
mov     dword ptr [ecx+74h], 0
test    eax, eax
jnz     short loc_100278bf
cmp     [ebp+arg_4], 2
jnz     short loc_100278af
push    ebx
push    2
push    esi
call    sub_10063c40
add     esp, 0ch
mov     [esp+18h+var_c], eax
test    eax, eax
jnz     short loc_100278c5
push    ebx
push    1
push    esi
call    sub_10063c40
add     esp, 0ch
mov     [esp+18h+var_c], eax
cmp     [ebp+arg_4], 2
jnz     short loc_100278e0
mov     eax, [ebp+arg_0]
mov     edx, [eax+94h]
mov     [esi+1e0h], edx
mov     eax, [eax+98h]
mov     [esi+1e4h], eax
mov     eax, [esp+18h+var_c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
cmp     [ebp+arg_0], 0
push    ebx
push    esi
mov     esi, [eax]
jz      short loc_10027919
cmp     dword ptr [esi+1e4h], 0
jg      short loc_1002792d
jl      short loc_10027912
cmp     dword ptr [esi+1e0h], 0
ja      short loc_1002792d
xor     eax, eax
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
cmp     dword ptr [eax+90h], 0
jl      short loc_10027912
jg      short loc_1002792d
cmp     dword ptr [eax+8ch], 0
jbe     short loc_10027912
push    offset aforeignkeycons
lea     ebx, [eax+34h]
mov     dword ptr [eax+58h], 13h
mov     byte ptr [eax+5ch], 2
call    sub_10009bf0
add     esp, 4
pop     esi
mov     eax, 1
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, eax
mov     esi, [edi]
xor     ebx, ebx
mov     [ebp+var_c], esi
cmp     [esi+32h], bl
jz      short loc_1002797e
mov     dword ptr [edi+58h], 7
mov     eax, [edi+0bch]
cmp     eax, ebx
jz      short loc_10027999
mov     ecx, [edi+0b8h]
push    ecx
push    ebx
push    eax
call    memset
add     esp, 0ch
call    sub_10026ea0
cmp     dword ptr [edi+30h], 0bdf20da3h
jz      short loc_100279b0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [edi+54h], ebx
jl      loc_10027bf6
push    edi
mov     [ebp+var_4], ebx
call    sub_10026410
mov     eax, [edi+58h]
and     eax, 0ffh
add     esp, 4
cmp     eax, 7
jz      short loc_100279e6
cmp     eax, 0ah
jz      short loc_100279e6
cmp     eax, 9
jz      short loc_100279e6
cmp     eax, 0dh
jz      short loc_100279e6
mov     [ebp+var_8], ebx
jmp     short loc_10027a27
mov     [ebp+var_8], 1
cmp     [edi+64h], bl
jz      short loc_100279f7
cmp     eax, 9
jz      short loc_10027a27
cmp     eax, 7
jz      short loc_10027a01
cmp     eax, 0dh
jnz     short loc_10027a0f
cmp     [edi+63h], bl
jz      short loc_10027a0f
mov     [ebp+var_4], 2
jmp     short loc_10027a27
push    204h
mov     eax, esi
call    sub_1006fdb0
add     esp, 4
call    sub_1006f5a0
mov     byte ptr [esi+30h], 1
cmp     [edi+58h], ebx
jnz     short loc_10027a60
cmp     [edi+90h], ebx
jl      short loc_10027a60
jg      short loc_10027a3e
cmp     [edi+8ch], ebx
jbe     short loc_10027a60
mov     esi, [edi]
push    offset aforeignkeycons
lea     ebx, [edi+34h]
mov     dword ptr [edi+58h], 13h
mov     byte ptr [edi+5ch], 2
call    sub_10009bf0
mov     esi, [ebp+var_c]
add     esp, 4
xor     ebx, ebx
cmp     [esi+118h], ebx
jle     short loc_10027a74
cmp     [esi+130h], ebx
jz      loc_10027ba7
cmp     [esi+30h], bl
jz      loc_10027ba7
xor     edx, edx
cmp     [edi+64h], bl
setz    dl
cmp     [esi+80h], edx
jnz     loc_10027ba7
cmp     [edi+58h], ebx
jz      short loc_10027ab1
cmp     byte ptr [edi+5ch], 3
jnz     short loc_10027aa1
cmp     [ebp+var_8], ebx
jz      short loc_10027ab1
push    ebx
mov     eax, esi
call    sub_1006fdb0
add     esp, 4
jmp     loc_10027b41
push    1
mov     eax, edi
call    sub_100278f0
add     esp, 4
test    eax, eax
jz      short loc_10027af0
cmp     [edi+64h], bl
jz      short loc_10027adb
push    edi
call    sub_10026480
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 13h
mov     [edi+58h], eax
push    ebx
mov     eax, esi
call    sub_1006fdb0
add     esp, 4
jmp     short loc_10027b41
push    esi
mov     eax, edi
call    sub_100270b0
add     esp, 4
cmp     eax, 5
jnz     short loc_10027b1a
cmp     [edi+64h], bl
jz      short loc_10027b1e
push    edi
call    sub_10026480
add     esp, 4
mov     eax, 5
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     eax, ebx
jz      short loc_10027b2e
mov     [edi+58h], eax
push    ebx
mov     eax, esi
call    sub_1006fdb0
add     esp, 4
jmp     short loc_10027b41
and     dword ptr [esi+18h], 0fffffdffh
mov     [esi+1e0h], ebx
mov     [esi+1e4h], ebx
mov     [esi+1dch], ebx
cmp     [ebp+var_4], ebx
jz      short loc_10027b91
mov     eax, [ebp+var_4]
push    eax
push    edi
call    sub_100277f0
add     esp, 8
cmp     eax, ebx
jz      short loc_10027b91
mov     ecx, [edi+58h]
cmp     ecx, ebx
jz      short loc_10027b69
cmp     ecx, 13h
jnz     short loc_10027b79
mov     [edi+58h], eax
mov     eax, [edi+34h]
mov     ecx, esi
call    sub_10009810
mov     [edi+34h], ebx
push    204h
mov     eax, esi
call    sub_1006fdb0
add     esp, 4
call    sub_1006f5a0
mov     byte ptr [esi+30h], 1
cmp     [edi+5eh], bl
jz      short loc_10027bd7
cmp     [ebp+var_4], 2
jz      short loc_10027bd1
mov     eax, [edi+68h]
add     [esi+44h], eax
mov     [esi+40h], eax
jmp     short loc_10027bd4
cmp     [ebp+var_4], ebx
jnz     short loc_10027b4c
cmp     [edi+58h], ebx
jz      short loc_10027bc5
mov     al, [edi+5ch]
cmp     al, 3
jz      short loc_10027bc5
cmp     al, 2
jnz     short loc_10027b79
mov     [ebp+var_4], 2
jmp     short loc_10027b4c
mov     [ebp+var_4], 1
jmp     loc_10027b4c
mov     [esi+40h], ebx
mov     [edi+68h], ebx
push    edi
call    sub_10026480
add     esp, 4
cmp     [edi+54h], ebx
jl      short loc_10027bf6
or      eax, 0ffffffffh
add     [esi+7ch], eax
cmp     [edi+64h], bl
jnz     short loc_10027bf6
add     [esi+80h], eax
mov     ecx, [edi]
mov     dword ptr [edi+30h], 519c2973h
cmp     [ecx+32h], bl
jz      short loc_10027c0b
mov     dword ptr [edi+58h], 7
xor     eax, eax
cmp     dword ptr [edi+58h], 5
pop     edi
setnz   al
pop     esi
pop     ebx
dec     eax
and     eax, 5
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, eax
cmp     dword ptr [edi+34h], 0
mov     esi, [edi]
mov     ebx, [edi+58h]
mov     [ebp+var_c], esi
mov     [ebp+var_8], ebx
jz      loc_10027d24
mov     al, [esi+32h]
mov     [ebp+var_1], al
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_10027c51
call    eax
mov     ecx, [edi+34h]
mov     edi, [esi+0cch]
mov     [ebp+src], ecx
test    edi, edi
jz      loc_10027d07
test    ecx, ecx
jnz     short loc_10027cae
test    byte ptr [edi+1ch], 40h
jz      short loc_10027c83
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_10027c94
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ebx, [ebp+var_8]
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
jmp     short loc_10027d07
mov     eax, [edi]
test    eax, eax
jz      short loc_10027cb9
mov     eax, [eax+48h]
jmp     short loc_10027cbe
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_10027ccf
cmp     byte ptr [ebx+ecx], 0
jz      short loc_10027ccf
inc     ebx
cmp     ebx, eax
jle     short loc_10027cc4
lea     esi, [ebx+1]
cmp     ebx, eax
jg      short loc_10027d01
push    0
mov     eax, esi
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10027d01
mov     edx, [ebp+src]
mov     eax, [edi+4]
push    esi
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
mov     ebx, [ebp+var_8]
mov     esi, [ebp+var_c]
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_10027d12
call    eax
mov     dl, [ebp+var_1]
mov     [esi+32h], dl
mov     [esi+28h], ebx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    0
push    ebx
mov     eax, esi
call    sub_1000ba40
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [esi]
push    edi
mov     eax, esi
mov     [ebp+var_4], ebx
call    sub_10027960
xor     edi, edi
cmp     [esi+54h], edi
jl      short loc_10027d82
mov     eax, esi
call    sub_10027c20
mov     eax, [esi+34h]
mov     ecx, ebx
call    sub_10009810
cmp     byte ptr [esi+60h], 0
mov     [esi+34h], edi
jz      loc_10027e6a
mov     byte ptr [esi+5fh], 1
jmp     loc_10027e6a
mov     eax, [esi+58h]
cmp     eax, edi
jz      loc_10027e6a
cmp     byte ptr [esi+5fh], 0
jz      loc_10027e6a
push    edi
push    eax
mov     eax, ebx
call    sub_1000ba40
mov     edi, [ebx+0cch]
mov     edx, [esi+34h]
add     esp, 8
mov     [ebp+src], edx
test    edi, edi
jz      loc_10027e57
test    edx, edx
jnz     short loc_10027e00
test    byte ptr [edi+1ch], 40h
jz      short loc_10027dd5
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_10027de6
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ebx, [ebp+var_4]
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
jmp     short loc_10027e57
mov     eax, [edi]
test    eax, eax
jz      short loc_10027e0b
mov     ecx, [eax+48h]
jmp     short loc_10027e10
mov     ecx, 3b9aca00h
xor     ebx, ebx
test    ecx, ecx
js      short loc_10027e21
cmp     byte ptr [ebx+edx], 0
jz      short loc_10027e21
inc     ebx
cmp     ebx, ecx
jle     short loc_10027e16
lea     eax, [ebx+1]
cmp     ebx, ecx
jg      short loc_10027e54
push    0
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10027e54
mov     edx, [ebp+src]
lea     eax, [ebx+1]
push    eax
mov     eax, [edi+4]
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
mov     ebx, [ebp+var_4]
mov     eax, [esi+34h]
mov     ecx, ebx
call    sub_10009810
mov     dword ptr [esi+34h], 0
xor     edi, edi
mov     eax, [esi+34h]
mov     ecx, [esi]
call    sub_10009810
mov     eax, [esi+58h]
mov     [esi+34h], edi
mov     [esi+14h], edi
mov     dword ptr [esi+30h], 26bceaa5h
and     eax, [ebx+2ch]
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
push    esi
mov     esi, eax
mov     eax, [esi+30h]
push    edi
xor     edi, edi
cmp     eax, 0bdf20da3h
jz      short loc_10027ea8
cmp     eax, 519c2973h
jnz     short loc_10027eaf
call    sub_10027d40
mov     edi, eax
mov     ecx, [esi+38h]
mov     eax, [esi]
test    ecx, ecx
jz      short loc_10027ec0
mov     edx, [esi+3ch]
mov     [ecx+3ch], edx
jmp     short loc_10027ec6
mov     ecx, [esi+3ch]
mov     [eax+4], ecx
mov     ecx, [esi+3ch]
test    ecx, ecx
jz      short loc_10027ed3
mov     edx, [esi+38h]
mov     [ecx+38h], edx
push    esi
mov     dword ptr [esi+30h], 0b606c3c8h
mov     dword ptr [esi], 0
call    sub_10027f40
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    esi
xor     esi, esi
cmp     [ebx+4], esi
jle     short loc_10027f36
push    edi
lea     edi, [ebx+8]
nop
cmp     esi, 1fh
jg      short loc_10027f13
mov     eax, 1
mov     ecx, esi
shl     eax, cl
test    [ebp+arg_0], eax
jnz     short loc_10027f2c
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_10027f2c
mov     eax, [edi+4]
test    eax, eax
jz      short loc_10027f26
push    ecx
call    eax
add     esp, 4
mov     dword ptr [edi], 0
inc     esi
add     edi, 8
cmp     esi, [ebx+4]
jl      short loc_10027f00
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ecx, [esi+44h]
push    edi
mov     edi, eax
movsx   eax, word ptr [esi+4ch]
call    sub_10026500
movzx   eax, word ptr [esi+2ch]
mov     ecx, [esi+10h]
lea     eax, [eax+eax*4]
call    sub_10026500
mov     esi, [esi+0b4h]
mov     [ebp+var_4], esi
test    esi, esi
jz      loc_10028054
lea     ebx, [ebx+0]
mov     ecx, [ebp+var_4]
mov     eax, [ecx+18h]
mov     esi, [ecx]
mov     [ebp+var_c], eax
mov     eax, [ecx+4]
test    esi, esi
jz      short loc_10027fc3
lea     ecx, [eax+eax*4]
lea     ecx, [esi+ecx*4]
cmp     esi, ecx
jnb     short loc_10027fc3
sub     ecx, esi
dec     ecx
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
inc     edx
lea     ebx, [esi+1]
mov     [ebp+var_8], edx
movsx   eax, byte ptr [ebx]
mov     ecx, [ebx+0fh]
call    sub_10025e50
add     ebx, 14h
dec     [ebp+var_8]
jnz     short loc_10027fb0
test    edi, edi
jz      short loc_10028033
cmp     dword ptr [edi+1e8h], 0
jz      short loc_10028009
test    esi, esi
jz      short loc_10027ff5
cmp     esi, [edi+0fch]
jb      short loc_10027ff5
cmp     esi, [edi+100h]
jnb     short loc_10027ff5
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_1002803c
push    esi
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1002803c
test    esi, esi
jz      short loc_10028033
cmp     esi, [edi+0fch]
jb      short loc_10028033
cmp     esi, [edi+100h]
jnb     short loc_10028033
mov     edx, [edi+0f8h]
mov     [esi], edx
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], esi
jmp     short loc_1002803c
push    esi
call    sub_10009770
add     esp, 4
mov     eax, [ebp+var_4]
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+var_c]
mov     [ebp+var_4], eax
test    eax, eax
jnz     loc_10027f80
mov     ebx, [ebp+arg_0]
movsx   esi, word ptr [ebx+4eh]
dec     esi
js      loc_100280e8
mov     eax, [ebx+48h]
mov     eax, [eax+esi*4]
test    edi, edi
jz      short loc_100280d8
cmp     dword ptr [edi+1e8h], 0
jz      short loc_100280ae
test    eax, eax
jz      short loc_1002809a
cmp     eax, [edi+0fch]
jb      short loc_1002809a
cmp     eax, [edi+100h]
jnb     short loc_1002809a
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_100280e1
push    eax
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_100280e1
test    eax, eax
jz      short loc_100280d8
cmp     eax, [edi+0fch]
jb      short loc_100280d8
cmp     eax, [edi+100h]
jnb     short loc_100280d8
mov     ecx, [edi+0f8h]
mov     [eax], ecx
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], eax
jmp     short loc_100280e1
push    eax
call    sub_10009770
add     esp, 4
dec     esi
jns     loc_10028062
mov     esi, [ebx+4]
mov     eax, [ebx+1ch]
test    esi, esi
jz      short loc_10028123
lea     edx, [eax+eax*4]
lea     ecx, [esi+edx*4]
cmp     esi, ecx
jnb     short loc_10028123
sub     ecx, esi
dec     ecx
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
inc     edx
lea     ebx, [esi+1]
mov     [ebp+var_8], edx
movsx   eax, byte ptr [ebx]
mov     ecx, [ebx+0fh]
call    sub_10025e50
add     ebx, 14h
dec     [ebp+var_8]
jnz     short loc_10028110
test    edi, edi
jz      short loc_10028196
cmp     dword ptr [edi+1e8h], 0
jz      short loc_10028169
test    esi, esi
jz      short loc_10028155
cmp     esi, [edi+0fch]
jb      short loc_10028155
cmp     esi, [edi+100h]
jnb     short loc_10028155
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_1002819f
push    esi
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1002819f
test    esi, esi
jz      short loc_10028196
cmp     esi, [edi+0fch]
jb      short loc_10028196
cmp     esi, [edi+100h]
jnb     short loc_10028196
mov     eax, [edi+0f8h]
mov     [esi], eax
or      ebx, 0ffffffffh
add     [edi+0e4h], ebx
mov     [edi+0f8h], esi
jmp     short loc_100281a2
push    esi
call    sub_10009770
add     esp, 4
or      ebx, 0ffffffffh
mov     esi, [ebp+arg_0]
mov     eax, [esi+28h]
test    edi, edi
jz      short loc_10028218
cmp     dword ptr [edi+1e8h], 0
jz      short loc_100281ee
test    eax, eax
jz      short loc_100281da
cmp     eax, [edi+0fch]
jb      short loc_100281da
cmp     eax, [edi+100h]
jnb     short loc_100281da
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_10028221
push    eax
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_10028221
test    eax, eax
jz      short loc_10028218
cmp     eax, [edi+0fch]
jb      short loc_10028218
cmp     eax, [edi+100h]
jnb     short loc_10028218
mov     ecx, [edi+0f8h]
mov     [eax], ecx
add     [edi+0e4h], ebx
mov     [edi+0f8h], eax
jmp     short loc_10028221
push    eax
call    sub_10009770
add     esp, 4
mov     eax, [esi+10h]
test    edi, edi
jz      short loc_10028294
cmp     dword ptr [edi+1e8h], 0
jz      short loc_1002826a
test    eax, eax
jz      short loc_10028256
cmp     eax, [edi+0fch]
jb      short loc_10028256
cmp     eax, [edi+100h]
jnb     short loc_10028256
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_1002829d
push    eax
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1002829d
test    eax, eax
jz      short loc_10028294
cmp     eax, [edi+0fch]
jb      short loc_10028294
cmp     eax, [edi+100h]
jnb     short loc_10028294
mov     edx, [edi+0f8h]
mov     [eax], edx
add     [edi+0e4h], ebx
mov     [edi+0f8h], eax
jmp     short loc_1002829d
push    eax
call    sub_10009770
add     esp, 4
mov     eax, [esi+9ch]
test    edi, edi
jz      short loc_10028313
cmp     dword ptr [edi+1e8h], 0
jz      short loc_100282e9
test    eax, eax
jz      short loc_100282d5
cmp     eax, [edi+0fch]
jb      short loc_100282d5
cmp     eax, [edi+100h]
jnb     short loc_100282d5
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_1002831c
push    eax
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1002831c
test    eax, eax
jz      short loc_10028313
cmp     eax, [edi+0fch]
jb      short loc_10028313
cmp     eax, [edi+100h]
jnb     short loc_10028313
mov     ecx, [edi+0f8h]
mov     [eax], ecx
add     [edi+0e4h], ebx
mov     [edi+0f8h], eax
jmp     short loc_1002831c
push    eax
call    sub_10009770
add     esp, 4
mov     eax, [esi+0a0h]
test    edi, edi
jz      short loc_10028392
cmp     dword ptr [edi+1e8h], 0
jz      short loc_10028368
test    eax, eax
jz      short loc_10028354
cmp     eax, [edi+0fch]
jb      short loc_10028354
cmp     eax, [edi+100h]
jnb     short loc_10028354
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_1002839b
push    eax
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1002839b
test    eax, eax
jz      short loc_10028392
cmp     eax, [edi+0fch]
jb      short loc_10028392
cmp     eax, [edi+100h]
jnb     short loc_10028392
mov     edx, [edi+0f8h]
mov     [eax], edx
add     [edi+0e4h], ebx
mov     [edi+0f8h], eax
jmp     short loc_1002839b
push    eax
call    sub_10009770
add     esp, 4
test    edi, edi
jz      loc_10028416
cmp     dword ptr [edi+1e8h], 0
jz      short loc_100283eb
cmp     esi, [edi+0fch]
jb      short loc_100283d2
cmp     esi, [edi+100h]
jnb     short loc_100283d2
movzx   eax, word ptr [edi+0e0h]
mov     edi, [edi+1e8h]
add     [edi], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
call    dword_10080258
mov     edi, [edi+1e8h]
add     esp, 4
add     [edi], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     esi, [edi+0fch]
jb      short loc_10028416
cmp     esi, [edi+100h]
jnb     short loc_10028416
mov     eax, [edi+0f8h]
mov     [esi], eax
add     [edi+0e4h], ebx
mov     [edi+0f8h], esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
test    ecx, ecx
jz      short loc_1002846f
mov     edx, [ecx+38h]
mov     eax, [ecx]
test    edx, edx
jz      short loc_10028446
mov     esi, [ecx+3ch]
mov     [edx+3ch], esi
jmp     short loc_1002844c
mov     edx, [ecx+3ch]
mov     [eax+4], edx
mov     edx, [ecx+3ch]
test    edx, edx
jz      short loc_10028459
mov     esi, [ecx+38h]
mov     [edx+38h], esi
push    ecx
mov     dword ptr [ecx+30h], 0b606c3c8h
mov     dword ptr [ecx], 0
call    sub_10027f40
add     esp, 4
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
cmp     byte ptr [esi+1dh], 0
jz      short loc_100284f3
mov     ecx, [esi+38h]
mov     edx, [esi+34h]
lea     eax, [ebp+var_4]
push    eax
mov     eax, [esi]
push    0
push    ecx
push    edx
push    0
push    eax
call    sub_1001df80
add     esp, 18h
test    eax, eax
jnz     short loc_10028517
mov     ecx, [esi+34h]
mov     edx, [esi+38h]
mov     [esi+3ch], ecx
mov     [esi+40h], edx
cmp     [ebp+var_4], eax
jz      short loc_100284de
push    offset ac0d89d4a975292
push    0ecd3h
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [esi+19h], 1
mov     byte ptr [esi+1dh], 0
mov     dword ptr [esi+4ch], 0
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi]
test    eax, eax
jz      short loc_10028515
lea     ecx, [ebp+var_4]
push    ecx
call    sub_10019b30
add     esp, 4
test    eax, eax
jnz     short loc_10028517
cmp     [ebp+var_4], eax
jz      short loc_10028515
mov     byte ptr [esi+1ch], 1
mov     [esi+4ch], eax
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
movzx   eax, word ptr [ecx+1ch]
push    esi
test    al, 1
jz      short loc_10028531
xor     eax, eax
pop     esi
pop     ebp
retn
test    al, 4
jz      loc_100285eb
cmp     [ebp+arg_0], 4
mov     eax, [ecx+10h]
mov     ecx, [ecx+14h]
jl      short loc_1002855a
mov     edx, eax
and     edx, 1
xor     esi, esi
cmp     edx, eax
jnz     short loc_1002855a
cmp     esi, ecx
jnz     short loc_1002855a
add     eax, 8
pop     esi
pop     ebp
retn
test    ecx, ecx
jg      short loc_10028584
jl      short loc_10028564
test    eax, eax
jnb     short loc_10028582
cmp     ecx, 0ffff8000h
jg      short loc_1002857b
jl      short loc_10028573
cmp     eax, 1
jnb     short loc_1002857b
mov     eax, 6
pop     esi
pop     ebp
retn
neg     eax
adc     ecx, 0
neg     ecx
test    ecx, ecx
ja      short loc_10028595
jb      short loc_1002858d
cmp     eax, 7fh
ja      short loc_10028595
mov     eax, 1
pop     esi
pop     ebp
retn
test    ecx, ecx
ja      short loc_100285d4
jb      short loc_100285a2
cmp     eax, 7fffh
ja      short loc_100285aa
mov     eax, 2
pop     esi
pop     ebp
retn
test    ecx, ecx
ja      short loc_100285d4
jb      short loc_100285b7
cmp     eax, 7fffffh
ja      short loc_100285bf
mov     eax, 3
pop     esi
pop     ebp
retn
test    ecx, ecx
ja      short loc_100285d4
jb      short loc_100285cc
cmp     eax, 7fffffffh
ja      short loc_100285d4
mov     eax, 4
pop     esi
pop     ebp
retn
cmp     ecx, 7fffh
ja      short loc_10028573
jb      short loc_100285e3
cmp     eax, 0ffffffffh
ja      short loc_10028573
mov     eax, 5
pop     esi
pop     ebp
retn
test    al, 8
jz      short loc_100285f7
mov     eax, 7
pop     esi
pop     ebp
retn
mov     edx, [ecx+18h]
test    eax, 4000h
jz      short loc_10028604
add     edx, [ecx+10h]
shr     eax, 1
and     eax, 1
lea     eax, [eax+edx*2+0ch]
pop     esi
pop     ebp
retn
cmp     eax, 0ch
jb      short loc_1002861b
add     eax, 0fffffff4h
shr     eax, 1
retn
movzx   eax, ds:byte_10076764[eax]
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
push    eax
mov     esi, ecx
call    sub_10028520
lea     ecx, [eax-1]
add     esp, 4
cmp     ecx, 6
ja      short loc_10028687
cmp     eax, 7
jnz     short loc_10028675
mov     edx, [esi+8]
mov     esi, [esi+0ch]
movzx   ecx, ds:byte_10076764[eax]
mov     eax, ecx
test    ecx, ecx
jz      short loc_100286d2
dec     ecx
mov     [ecx+ebx], dl
shrd    edx, esi, 8
shr     esi, 8
test    ecx, ecx
jnz     short loc_10028661
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
mov     edx, [esi+10h]
mov     esi, [esi+14h]
cmp     eax, 0ch
jb      short loc_10028654
lea     ecx, [eax-0ch]
shr     ecx, 1
jmp     short loc_1002865b
cmp     eax, 0ch
jb      short loc_100286d0
mov     edi, [esi+18h]
mov     edx, [esi+4]
push    edi
push    edx
push    ebx
call    memcpy
mov     eax, 4000h
add     esp, 0ch
test    [esi+1ch], ax
jz      short loc_100286c9
add     edi, [esi+10h]
mov     eax, [ebp+arg_0]
cmp     edi, eax
jbe     short loc_100286b4
mov     edi, eax
mov     esi, [esi+18h]
mov     ecx, edi
sub     ecx, esi
push    ecx
push    0
add     esi, ebx
push    esi
call    memset
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
xor     eax, eax
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ebp+arg_0]
push    ebx
push    edi
cmp     edx, 0bh
ja      def_100286f2
jmp     ds:jpt_100286f2[edx*4]
mov     eax, 1
mov     [esi+1ch], ax
xor     eax, eax
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
movsx   eax, byte ptr [ecx]
cdq
mov     ecx, 4
mov     [esi+10h], eax
mov     [esi+14h], edx
mov     [esi+1ch], cx
lea     eax, [ecx-3]
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
movsx   eax, byte ptr [ecx]
movzx   edx, byte ptr [ecx+1]
shl     eax, 8
or      eax, edx
cdq
mov     [esi+10h], eax
mov     eax, 4
mov     [esi+1ch], ax
mov     [esi+14h], edx
mov     eax, 2
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
movsx   eax, byte ptr [ecx]
movzx   edx, byte ptr [ecx+1]
movzx   ecx, byte ptr [ecx+2]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
cdq
mov     [esi+14h], edx
mov     edx, 4
mov     [esi+10h], eax
lea     eax, [edx-1]
mov     [esi+1ch], dx
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
movzx   eax, byte ptr [ecx]
movzx   edx, byte ptr [ecx+1]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
movzx   ecx, byte ptr [ecx+3]
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, ecx
cdq
mov     [esi+14h], edx
mov     edx, 4
mov     [esi+10h], eax
mov     eax, edx
mov     [esi+1ch], dx
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
movzx   edi, byte ptr [ecx+2]
movzx   edx, byte ptr [ecx+3]
movsx   eax, byte ptr [ecx]
shl     edi, 8
or      edi, edx
movzx   edx, byte ptr [ecx+4]
shl     edi, 8
or      edi, edx
movzx   edx, byte ptr [ecx+5]
movzx   ecx, byte ptr [ecx+1]
shl     eax, 8
shl     edi, 8
or      eax, ecx
or      edi, edx
cdq
xor     edx, edx
xor     ebx, ebx
or      edi, edx
or      ebx, eax
mov     eax, 4
mov     [esi+1ch], ax
mov     [esi+10h], edi
mov     [esi+14h], ebx
lea     eax, [edx+6]
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
movzx   eax, byte ptr [ecx]
movzx   edx, byte ptr [ecx+1]
movzx   edi, byte ptr [ecx+4]
movzx   ebx, byte ptr [ecx+5]
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+2]
shl     edi, 8
shl     eax, 8
or      eax, edx
movzx   edx, byte ptr [ecx+3]
or      edi, ebx
movzx   ebx, byte ptr [ecx+6]
movzx   ecx, byte ptr [ecx+7]
shl     edi, 8
shl     eax, 8
or      eax, edx
or      edi, ebx
shl     edi, 8
or      edi, ecx
cdq
xor     edx, edx
xor     ecx, ecx
or      edx, edi
or      eax, ecx
cmp     [ebp+arg_0], 6
jnz     short loc_1002885a
mov     [esi+10h], edx
mov     edx, 4
mov     [esi+14h], eax
mov     [esi+1ch], dx
lea     eax, [ecx+8]
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
mov     [esi+8], edx
mov     [esi+0ch], eax
fld     qword ptr [esi+8]
sub     esp, 8
fstp    [esp+14h+var_14]
call    sub_1000b9f0
add     esp, 8
neg     eax
sbb     eax, eax
and     eax, 0fffffff9h
add     eax, 8
mov     [esi+1ch], ax
mov     eax, 8
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, 4
add     edx, 0fffffff8h
mov     [esi+1ch], ax
mov     [esi+10h], edx
mov     dword ptr [esi+14h], 0
xor     eax, eax
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
lea     eax, [edx-0ch]
shr     eax, 1
mov     [esi+4], ecx
mov     [esi+18h], eax
mov     dword ptr [esi+20h], 0
test    dl, 1
jz      short loc_100288cb
mov     ecx, 1002h
mov     [esi+1ch], cx
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
mov     edx, 1010h
pop     edi
mov     [esi+1ch], dx
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
movzx   ecx, word ptr [edi+6]
mov     eax, edx
neg     eax
push    esi
mov     esi, [ebp+arg_0]
and     eax, 7
lea     ecx, [ecx+ecx*4]
lea     ecx, ds:40h[ecx*8]
add     esi, eax
cmp     ecx, esi
jle     short loc_10028942
mov     esi, [edi]
call    sub_10009a40
mov     [ebx], eax
test    eax, eax
jnz     short loc_1002894a
pop     esi
pop     ebp
retn
add     eax, edx
mov     dword ptr [ebx], 0
lea     ecx, [eax+18h]
mov     [eax+10h], ecx
mov     [eax], edi
mov     dx, [edi+6]
inc     dx
mov     [eax+4], dx
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
sub     esp, 1ch
push    ebx
mov     ebx, [eax+10h]
mov     byte ptr [eax+6], 0
mov     al, [ecx]
push    esi
push    edi
cmp     al, 80h
jnb     short loc_10028989
movzx   eax, al
mov     [ebp+var_10], eax
mov     ecx, 1
jmp     short loc_10028997
lea     esi, [ebp+var_10]
call    sub_1000c800
movzx   ecx, al
mov     eax, [ebp+var_10]
movzx   edi, cl
xor     ecx, ecx
mov     [ebp+var_c], edi
mov     [ebp+var_4], eax
mov     [ebp+var_8], ecx
cmp     edi, eax
jb      short loc_100289c3
mov     edx, [ebp+arg_c]
mov     [edx+4], cx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
jmp     short loc_100289c0
mov     ecx, [ebp+var_8]
mov     eax, [ebp+arg_c]
cmp     cx, [eax+4]
jnb     loc_10028a9b
mov     edx, [ebp+var_4]
cmp     edx, [ebp+arg_4]
jg      loc_10028a9b
mov     eax, [ebp+arg_8]
lea     edx, [edi+eax]
mov     al, [edx]
cmp     al, 80h
jnb     short loc_100289f2
movzx   ecx, al
mov     eax, 1
jmp     short loc_10028a4a
movzx   ecx, byte ptr [edx+1]
movzx   eax, byte ptr [edx]
test    cl, cl
js      short loc_10028a0b
and     eax, 7fh
shl     eax, 7
or      eax, ecx
mov     ecx, eax
mov     al, 2
jmp     short loc_10028a47
movzx   esi, byte ptr [edx+2]
shl     eax, 0eh
or      eax, esi
test    al, al
js      short loc_10028a29
and     ecx, 7fh
and     eax, 1fc07fh
shl     ecx, 7
or      ecx, eax
mov     al, 3
jmp     short loc_10028a44
mov     eax, edx
lea     edi, [ebp+var_18]
call    sub_1000c680
mov     ecx, [ebp+var_18]
xor     edx, edx
cmp     ecx, ecx
jnz     short loc_10028a41
cmp     edx, [ebp+var_14]
jz      short loc_10028a44
or      ecx, 0ffffffffh
mov     edi, [ebp+var_c]
movzx   eax, al
mov     esi, [ebp+arg_0]
movzx   edx, al
mov     al, [esi+4]
push    ecx
mov     ecx, [ebp+arg_8]
add     ecx, [ebp+var_4]
add     edi, edx
mov     [ebx+1fh], al
mov     edx, [esi]
mov     esi, ebx
mov     [ebp+var_c], edi
mov     [ebx], edx
mov     dword ptr [ebx+24h], 0
call    sub_100286e0
add     [ebp+var_4], eax
inc     [ebp+var_8]
add     esp, 4
add     ebx, 28h
cmp     edi, [ebp+var_10]
jb      loc_100289c0
mov     dx, word ptr [ebp+var_8]
mov     eax, [ebp+arg_c]
mov     [eax+4], dx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     [eax+4], cx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 58h
mov     eax, [ebp+arg_8]
mov     eax, [eax]
mov     cl, [eax+4]
mov     edx, [eax]
push    ebx
mov     [ebp+var_35], cl
mov     ecx, [ebp+arg_4]
push    esi
mov     [ebp+var_20], eax
mov     al, [ecx]
push    edi
xor     edi, edi
mov     [ebp+var_1c], edi
mov     [ebp+var_8], edi
mov     [ebp+var_54], edx
cmp     al, 80h
jnb     short loc_10028ae8
movzx   eax, al
mov     [ebp+var_c], eax
lea     eax, [edi+1]
jmp     short loc_10028af3
lea     esi, [ebp+var_c]
call    sub_1000c800
movzx   eax, al
mov     ecx, [ebp+var_c]
movzx   ebx, al
mov     eax, [ebp+var_20]
movzx   edx, word ptr [eax+6]
mov     [ebp+var_10], ecx
mov     [ebp+var_24], edx
cmp     ebx, ecx
jnb     loc_10028c0d
add     eax, 0ch
mov     [ebp+var_18], edi
mov     [ebp+var_14], eax
mov     eax, [ebp+arg_8]
movzx   ecx, word ptr [eax+4]
cmp     edi, ecx
jge     loc_10028c0d
mov     edx, [ebp+arg_4]
mov     al, [edx+ebx]
add     edx, ebx
cmp     al, 80h
jnb     short loc_10028b3c
movzx   ecx, al
mov     eax, 1
jmp     short loc_10028b94
movzx   ecx, byte ptr [edx+1]
movzx   eax, byte ptr [edx]
test    cl, cl
js      short loc_10028b55
and     eax, 7fh
shl     eax, 7
or      eax, ecx
mov     ecx, eax
mov     al, 2
jmp     short loc_10028b91
movzx   esi, byte ptr [edx+2]
shl     eax, 0eh
or      eax, esi
test    al, al
js      short loc_10028b73
and     ecx, 7fh
and     eax, 1fc07fh
shl     ecx, 7
or      ecx, eax
mov     al, 3
jmp     short loc_10028b91
mov     eax, edx
lea     edi, [ebp+var_2c]
call    sub_1000c680
mov     ecx, [ebp+var_2c]
xor     edx, edx
cmp     ecx, ecx
jnz     short loc_10028b8b
cmp     edx, [ebp+var_28]
jz      short loc_10028b8e
or      ecx, 0ffffffffh
mov     edi, [ebp+var_1c]
movzx   eax, al
mov     edx, [ebp+var_10]
movzx   eax, al
add     ebx, eax
cmp     edx, [ebp+arg_0]
jl      short loc_10028bb8
cmp     ecx, 0ch
jb      short loc_10028bad
lea     eax, [ecx-0ch]
shr     eax, 1
jmp     short loc_10028bb4
movzx   eax, ds:byte_10076764[ecx]
test    eax, eax
jnz     short loc_10028c0d
push    ecx
mov     ecx, [ebp+arg_4]
add     ecx, edx
lea     esi, [ebp+var_54]
call    sub_100286e0
add     [ebp+var_10], eax
add     esp, 4
cmp     edi, [ebp+var_24]
jge     short loc_10028bd8
mov     edx, [ebp+var_14]
mov     eax, [edx]
jmp     short loc_10028bda
xor     eax, eax
mov     esi, [ebp+arg_8]
push    eax
mov     eax, [esi+10h]
add     eax, [ebp+var_18]
lea     ecx, [ebp+var_54]
call    sub_10025020
mov     ecx, eax
add     esp, 4
mov     [ebp+var_8], ecx
test    ecx, ecx
jnz     short loc_10028c28
add     [ebp+var_14], 4
add     [ebp+var_18], 28h
inc     edi
mov     [ebp+var_1c], edi
cmp     ebx, [ebp+var_c]
jb      loc_10028b17
mov     eax, [ebp+arg_8]
mov     al, [eax+6]
test    al, 1
jz      short loc_10028c6c
mov     [ebp+var_8], 0ffffffffh
mov     eax, [ebp+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_20]
mov     eax, [eax+8]
test    eax, eax
jz      short loc_10028c42
cmp     edi, [ebp+var_24]
jge     short loc_10028c42
cmp     byte ptr [eax+edi], 0
jz      short loc_10028c42
neg     ecx
mov     [ebp+var_8], ecx
mov     al, [esi+6]
test    al, 4
jz      short loc_10028c63
movzx   edx, word ptr [esi+4]
dec     edx
cmp     edi, edx
jnz     short loc_10028c63
mov     edx, [ebp+var_40]
and     al, 0fbh
mov     [esi+6], al
mov     eax, [ebp+var_44]
mov     [esi+8], eax
mov     [esi+0ch], edx
mov     eax, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    al, 2
jnz     short loc_10028c7c
cmp     ebx, [ebp+var_c]
jnb     short loc_10028c7c
mov     [ebp+var_8], 1
mov     eax, [ebp+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 5ch
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, eax
lea     edi, [esp+68h+var_58]
mov     [esp+68h+var_58], ebx
mov     [esp+68h+var_54], ebx
call    sub_1001d3b0
xor     eax, eax
push    1
mov     [esp+6ch+var_50], eax
mov     [esp+6ch+var_4c], eax
mov     [esp+6ch+var_48], eax
mov     [esp+6ch+var_44], eax
mov     [esp+6ch+var_40], eax
mov     [esp+6ch+var_3c], eax
mov     [esp+6ch+var_38], eax
mov     [esp+6ch+var_34], eax
mov     [esp+6ch+var_30], eax
mov     [esp+6ch+var_2c], eax
push    ebx
mov     ebx, [esp+70h+var_58]
lea     eax, [esp+70h+var_50]
mov     ecx, esi
call    sub_100252a0
add     esp, 8
test    eax, eax
jnz     loc_10028de5
mov     ebx, [esp+68h+var_4c]
mov     al, [ebx]
cmp     al, 80h
jnb     short loc_10028d07
movzx   edi, al
jmp     short loc_10028d16
lea     esi, [esp+68h+var_58]
mov     ecx, ebx
call    sub_1000c800
mov     edi, [esp+68h+var_58]
cmp     edi, 3
jb      short loc_10028d99
mov     edx, [esp+68h+var_38]
cmp     edi, edx
jg      short loc_10028d99
mov     al, [edi+ebx-1]
lea     ecx, [edi+ebx-1]
cmp     al, 80h
jnb     short loc_10028d34
movzx   ecx, al
jmp     short loc_10028d45
lea     esi, [esp+68h+var_58]
call    sub_1000c800
mov     ecx, [esp+68h+var_58]
mov     edx, [esp+68h+var_38]
lea     eax, [ecx-1]
cmp     eax, 8
ja      short loc_10028d99
cmp     ecx, 7
jz      short loc_10028d99
mov     eax, ecx
call    sub_10028610
lea     esi, [eax+edi]
cmp     edx, esi
jb      short loc_10028d99
push    ecx
mov     ecx, edx
sub     ecx, eax
add     ecx, ebx
lea     esi, [esp+6ch+var_28]
call    sub_100286e0
mov     eax, [ebp+arg_0]
mov     ecx, [esp+6ch+var_18]
mov     edx, [esp+6ch+var_14]
mov     [eax], ecx
mov     [eax+4], edx
lea     eax, [esp+6ch+var_50]
add     esp, 4
push    eax
call    sub_100247d0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    [esp+68h+var_34], 2460h
jz      short loc_10028dac
lea     eax, [esp+68h+var_50]
call    sub_10024760
mov     eax, [esp+68h+var_2c]
mov     ecx, [esp+68h+var_50]
call    sub_10009810
push    offset ac0d89d4a975292
push    0ef2fh
xor     eax, eax
push    offset adatabasecorrup
push    0bh
mov     [esp+78h+var_4c], eax
mov     [esp+78h+var_2c], eax
mov     [esp+78h+var_30], eax
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 34h
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [eax]
push    edi
xor     ebx, ebx
lea     edi, [esp+40h+var_30]
mov     [esp+40h+var_30], ebx
mov     [esp+40h+var_2c], ebx
call    sub_1001d3b0
mov     edx, [esp+40h+var_30]
mov     eax, [esp+40h+var_2c]
mov     ecx, edx
add     ecx, 0ffffffffh
adc     eax, 0ffffffffh
cmp     eax, ebx
ja      loc_10028ec2
jb      short loc_10028e3a
cmp     ecx, 7ffffffeh
ja      loc_10028ec2
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx]
xor     eax, eax
push    1
mov     [esp+44h+var_28], eax
mov     [esp+44h+var_24], eax
mov     [esp+44h+var_20], eax
mov     [esp+44h+var_1c], eax
mov     [esp+44h+var_18], eax
mov     [esp+44h+var_14], eax
mov     [esp+44h+var_10], eax
mov     [esp+44h+var_c], eax
mov     [esp+44h+var_8], eax
mov     [esp+44h+var_4], eax
push    ebx
lea     eax, [esp+48h+var_28]
mov     ebx, edx
call    sub_100252a0
add     esp, 8
test    eax, eax
jnz     short loc_10028ee5
mov     edx, [ebp+arg_4]
mov     eax, [esp+40h+var_24]
mov     ecx, [esp+40h+var_10]
push    edx
push    eax
push    ecx
call    sub_10028ab0
mov     edx, [ebp+arg_8]
add     esp, 0ch
test    [esp+40h+var_c], 2460h
mov     [edx], eax
jz      short loc_10028eac
lea     eax, [esp+40h+var_28]
call    sub_10024760
mov     eax, [esp+40h+var_4]
mov     ecx, [esp+40h+var_28]
call    sub_10009810
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
push    offset ac0d89d4a975292
push    0ef4eh
push    offset adatabasecorrup
push    0bh
mov     [eax], ebx
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [eax+4]
test    eax, eax
jz      short locret_10028f0a
mov     cl, 1
lea     esp, [esp+0]
mov     [eax+5fh], cl
mov     eax, [eax+3ch]
test    eax, eax
jnz     short loc_10028f00
retn
push    ebx
push    esi
push    edi
test    eax, eax
jz      loc_10028fc4
mov     edx, [eax+44h]
lea     ecx, [ecx+ecx*4]
test    byte ptr [edx+ecx*8-0ch], 1
lea     ebx, [edx+ecx*8-28h]
jnz     loc_10028fc4
mov     esi, [eax]
mov     ecx, 28h
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10028fbe
xor     eax, eax
mov     [edi+4], eax
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     [edi+10h], eax
mov     [edi+14h], eax
mov     [edi+18h], eax
mov     [edi+1ch], eax
mov     [edi+20h], eax
mov     [edi+24h], eax
mov     eax, 1
push    ebx
mov     ebx, edi
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
mov     [edi], esi
call    sub_10024da0
add     esp, 4
push    1
mov     al, 62h
call    sub_1002bb90
movzx   eax, word ptr [edi+1ch]
add     esp, 4
test    al, 1
jz      short loc_10028f97
mov     byte ptr [edi+1eh], 5
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
test    al, 4
jz      short loc_10028fa5
mov     byte ptr [edi+1eh], 1
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
test    al, 8
jz      short loc_10028fb3
mov     byte ptr [edi+1eh], 2
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
and     al, 2
neg     al
sbb     al, al
add     al, 4
mov     [edi+1eh], al
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
retn
cmp     ecx, 20h
jle     short loc_10028fe0
mov     dword ptr [eax+0b0h], 0ffffffffh
retn
dec     ecx
mov     edx, 1
shl     edx, cl
or      [eax+0b0h], edx
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10029004
cmp     byte ptr [eax+5fh], 0
jnz     short loc_10029004
xor     eax, eax
pop     ebp
retn
mov     eax, 1
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, [ebp+arg_0]
test    edi, edi
jnz     short loc_10029024
mov     eax, edi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
mov     esi, [edi]
test    esi, esi
jnz     short loc_10029057
push    offset aapicalledwithf
push    15h
call    sub_1000b150
push    offset ac0d89d4a975292
push    0eff5h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 18h
lea     eax, [esi+15h]
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10029068
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, edi
call    sub_10027e90
cmp     byte ptr [esi+32h], 0
jnz     short loc_1002907c
cmp     eax, 0c0ah
jnz     short loc_10029093
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
and     edi, eax
mov     eax, esi
call    sub_1006f8f0
mov     eax, edi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
xor     ebx, ebx
push    edi
cmp     esi, ebx
jnz     short loc_100290c6
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [esi]
mov     eax, [eax+0ch]
cmp     eax, ebx
jz      short loc_100290d9
push    eax
call    dword_1008027c
add     esp, 4
call    sub_10027d40
mov     edi, [esi]
mov     dword ptr [esi+54h], 0ffffffffh
mov     [esi+58h], ebx
mov     byte ptr [esi+5ch], 2
mov     dword ptr [esi+30h], 0bdf20da3h
mov     [esi+68h], ebx
mov     dword ptr [esi+50h], 1
mov     byte ptr [esi+61h], 0ffh
mov     [esi+74h], ebx
mov     [esi+8ch], ebx
mov     [esi+90h], ebx
cmp     edi, ebx
jz      short loc_1002913c
cmp     [edi+32h], bl
jnz     short loc_10029122
cmp     eax, 0c0ah
jnz     short loc_10029137
push    ebx
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     [edi+32h], bl
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_10029141
mov     edi, 0ffh
mov     ecx, [esi]
and     edi, eax
mov     eax, [ecx+0ch]
cmp     eax, ebx
jz      short loc_10029156
push    eax
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 54h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [edi]
mov     ebx, [eax+0ch]
xor     esi, esi
mov     [esp+60h+var_44], ebx
cmp     ebx, esi
jz      short loc_10029188
push    ebx
call    dword_1008027c
add     esp, 4
xor     ecx, ecx
mov     [esp+60h+var_4c], esi
cmp     cx, [edi+4ch]
jge     loc_100292a2
mov     [esp+60h+var_50], esi
mov     ebx, [edi+44h]
add     ebx, [esp+60h+var_50]
movzx   eax, word ptr [ebx+1ch]
mov     [esp+60h+var_48], ebx
test    eax, 2460h
jz      loc_1002925e
test    eax, 2000h
jz      short loc_10029220
mov     esi, [ebx+10h]
test    esi, esi
jz      short loc_10029215
mov     edi, [esi+14h]
test    edi, edi
jz      short loc_10029212
push    40h
lea     edx, [esp+64h+var_40]
push    0
push    edx
call    memset
mov     ecx, [ebx]
lea     edx, [esp+6ch+var_40]
mov     eax, 1
push    edx
mov     [esp+70h+var_1c], ax
mov     [esp+70h+var_38], ecx
mov     [esp+70h+var_10], ebx
mov     [esp+70h+var_40], esi
call    edi
mov     eax, [ebx+24h]
mov     ecx, [ebx]
add     esp, 10h
call    sub_10009810
mov     ecx, 0ah
lea     esi, [esp+60h+var_38]
mov     edi, ebx
rep movsd
mov     edi, [ebp+arg_0]
push    ebx
call    sub_100247d0
add     esp, 4
jmp     short loc_1002925c
test    eax, 400h
jz      short loc_1002923c
mov     ecx, [ebx+20h]
cmp     ecx, esi
jz      short loc_1002923c
mov     eax, [ebx+4]
push    eax
call    ecx
add     esp, 4
mov     [ebx+20h], esi
jmp     short loc_1002925e
test    al, 20h
jz      short loc_10029251
mov     ebx, [ebx+10h]
call    sub_100117b0
mov     ebx, [esp+60h+var_48]
mov     edi, [ebp+arg_0]
jmp     short loc_1002925c
test    al, 40h
jz      short loc_1002925e
mov     esi, ebx
call    sub_10024b20
xor     esi, esi
mov     eax, [ebx+24h]
mov     ecx, [ebx]
call    sub_10009810
mov     ecx, [esp+60h+var_50]
mov     [ebx+4], esi
mov     [ebx+24h], esi
mov     [ebx+20h], esi
mov     edx, [edi+44h]
mov     eax, 1
mov     [ecx+edx+1ch], ax
mov     eax, [esp+60h+var_4c]
add     ecx, 28h
mov     [esp+60h+var_50], ecx
movsx   ecx, word ptr [edi+4ch]
inc     eax
mov     [esp+60h+var_4c], eax
cmp     eax, ecx
jl      loc_1002919c
mov     ebx, [esp+60h+var_44]
cmp     byte ptr [edi+65h], 0
jz      short loc_100292b4
cmp     [edi+0b0h], esi
jz      short loc_100292b4
mov     byte ptr [edi+5fh], 1
cmp     ebx, esi
jz      short loc_100292c2
push    ebx
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    edi
mov     edi, [ebp+arg_0]
test    byte ptr [edi+1ch], 12h
jz      short loc_1002930f
mov     eax, edi
call    sub_10024590
mov     ax, [edi+1ch]
mov     ecx, 0fffdh
and     ax, cx
or      ax, 10h
cmp     dword ptr [edi+18h], 0
mov     [edi+1ch], ax
jz      short loc_10029308
mov     eax, [edi+4]
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
xor     eax, eax
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
mov     bl, 1
call    sub_100253e0
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    edi
mov     edi, [ebp+arg_0]
test    byte ptr [edi+1ch], 10h
jnz     short loc_1002933f
mov     bl, 1
call    sub_100253e0
test    eax, eax
jnz     short loc_1002933f
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, 4000h
test    [edi+1ch], ax
mov     eax, [edi+18h]
jz      short loc_10029350
add     eax, [edi+10h]
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_0]
test    byte ptr [edi+1ch], 10h
jnz     short loc_1002937d
push    ebx
mov     bl, 2
call    sub_100253e0
pop     ebx
test    eax, eax
jnz     short loc_1002937d
pop     edi
pop     ebp
retn
mov     eax, 4000h
test    [edi+1ch], ax
mov     eax, [edi+18h]
jz      short loc_1002938e
add     eax, [edi+10h]
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+arg_0]
movzx   ecx, word ptr [eax+1ch]
sub     esp, 8
test    cl, 8
jz      short loc_100293bc
fld     qword ptr [eax+8]
mov     esp, ebp
pop     ebp
retn
test    cl, 4
jz      short loc_100293c8
fild    qword ptr [eax+10h]
mov     esp, ebp
pop     ebp
retn
fldz
test    cl, 12h
jz      short loc_100293ec
mov     edx, [eax+4]
fstp    [esp+8+var_8]
lea     ecx, [esp+8+var_8]
push    ecx
mov     ecx, [eax+18h]
push    edx
mov     dl, [eax+1fh]
call    sub_1000bd50
fld     [esp+10h+var_8]
add     esp, 8
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
pop     ebp
jmp     sub_10024870
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    edi
mov     edi, [ebp+arg_0]
mov     bl, 1
call    sub_100253e0
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    edi
mov     edi, [ebp+arg_0]
mov     bl, 3
call    sub_100253e0
pop     edi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    edi
mov     edi, [ebp+arg_0]
mov     bl, 2
call    sub_100253e0
pop     edi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
movzx   eax, byte ptr [eax+1eh]
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+src]
mov     ecx, [ebp+size]
push    esi
mov     esi, [ebp+arg_0]
push    0
push    eax
mov     eax, [ebp+arg_c]
lea     edx, [esi+8]
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short loc_1002949d
push    esi
call    sub_100298c0
add     esp, 4
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
fld     [ebp+arg_4]
sub     esp, 3ch
push    esi
mov     esi, [ebp+arg_0]
sub     esp, 8
add     esi, 8
fstp    [esp+48h+var_48]
call    sub_10024bc0
add     esp, 8
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+src]
push    1
mov     dword ptr [eax+38h], 1
push    ecx
mov     ecx, [ebp+size]
lea     edx, [eax+8]
or      eax, 0ffffffffh
call    sub_10024e60
add     esp, 8
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+src]
push    2
mov     dword ptr [eax+38h], 1
push    ecx
mov     ecx, [ebp+size]
lea     edx, [eax+8]
or      eax, 0ffffffffh
call    sub_10024e60
add     esp, 8
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, 2460h
test    [esi+24h], ax
jz      short loc_1002955e
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
xor     eax, eax
mov     [esi+0ch], eax
mov     [esi+2ch], eax
mov     [esi+28h], eax
mov     eax, [ebp+arg_4]
cdq
mov     ecx, 4
mov     [esi+18h], eax
mov     [esi+1ch], edx
mov     [esi+24h], cx
mov     byte ptr [esi+26h], 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, 2460h
test    [esi+24h], ax
jz      short loc_100295ae
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_8]
xor     eax, eax
mov     [esi+0ch], eax
mov     [esi+2ch], eax
mov     [esi+28h], eax
mov     eax, 4
mov     [esi+18h], ecx
mov     [esi+1ch], edx
mov     [esi+24h], ax
mov     byte ptr [esi+26h], 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
test    byte ptr [esi+24h], 40h
jz      short loc_10029611
mov     eax, [esi+18h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+24h], 20h
jz      short loc_10029621
push    ebx
mov     ebx, [esi+18h]
call    sub_100117b0
pop     ebx
mov     ax, [esi+24h]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [esi+24h], ax
mov     byte ptr [esi+26h], 5
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+src]
mov     ecx, [ebp+size]
push    esi
mov     esi, [ebp+arg_0]
push    1
push    eax
mov     eax, [ebp+arg_c]
lea     edx, [esi+8]
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short loc_1002966d
push    esi
call    sub_100298c0
add     esp, 4
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+src]
mov     ecx, [ebp+size]
push    esi
mov     esi, [ebp+arg_0]
push    2
push    eax
mov     eax, [ebp+arg_c]
lea     edx, [esi+8]
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short loc_100296ac
push    esi
call    sub_100298c0
add     esp, 4
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+src]
mov     ecx, [ebp+size]
push    esi
mov     esi, [ebp+arg_0]
push    3
push    eax
mov     eax, [ebp+arg_c]
lea     edx, [esi+8]
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short loc_100296dc
push    esi
call    sub_100298c0
add     esp, 4
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
add     ebx, 8
mov     eax, 2460h
push    esi
push    edi
test    [ebx+1ch], ax
jz      short loc_100296ff
mov     eax, ebx
call    sub_10024760
mov     edx, [ebp+arg_4]
mov     ecx, 9
mov     esi, edx
mov     edi, ebx
rep movsd
mov     ecx, 0fbffh
and     [ebx+1ch], cx
mov     ax, [ebx+1ch]
test    al, 12h
jz      short loc_10029741
mov     dx, [edx+1ch]
mov     ecx, 800h
and     dx, cx
xor     ecx, ecx
cmp     cx, dx
jnz     short loc_10029741
or      eax, 1000h
mov     [ebx+1ch], ax
mov     eax, ebx
call    sub_10024530
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
mov     esi, [ebp+arg_0]
mov     eax, 2460h
push    edi
mov     edi, [ebp+arg_4]
test    [esi+24h], ax
jz      short loc_10029771
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
xor     eax, eax
mov     ecx, 4010h
mov     [esi+0ch], eax
mov     [esi+2ch], eax
mov     [esi+28h], eax
mov     [esi+24h], cx
mov     byte ptr [esi+26h], 4
mov     [esi+20h], eax
mov     byte ptr [esi+27h], 1
cmp     edi, eax
jge     short loc_100297a8
mov     [esi+18h], eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     [esi+18h], edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_4]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
test    byte ptr [esi+24h], 1
push    edi
mov     [esi+38h], eax
jz      loc_100298b5
mov     ebx, offset aunknownerror
cmp     eax, 204h
jz      short loc_100297ff
and     eax, 0ffh
cmp     eax, 1ah
ja      short loc_10029804
mov     eax, ds:off_100794a0[eax*4]
test    eax, eax
jz      short loc_10029804
mov     ebx, eax
jmp     short loc_10029804
mov     ebx, offset aabortduetoroll
add     esi, 8
test    ebx, ebx
jnz     short loc_10029851
test    byte ptr [esi+1ch], 40h
jz      short loc_10029825
mov     eax, [esi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+1ch], 20h
jz      short loc_10029833
mov     ebx, [esi+10h]
call    sub_100117b0
mov     ax, [esi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     byte ptr [esi+1eh], 5
mov     [esi+1ch], ax
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, [esi]
test    eax, eax
jz      short loc_1002985c
mov     eax, [eax+48h]
jmp     short loc_10029861
mov     eax, 3b9aca00h
xor     edi, edi
test    eax, eax
js      short loc_10029872
cmp     byte ptr [edi+ebx], 0
jz      short loc_10029872
inc     edi
cmp     edi, eax
jle     short loc_10029867
xor     edx, edx
mov     [ebp+arg_4], 202h
push    esi
cmp     edx, offset sub_10009760
jnz     short loc_10029891
call    sub_100247d0
mov     eax, [ebp+arg_4]
mov     [esi+24h], ebx
jmp     short loc_1002989b
call    sub_100247d0
mov     eax, 0a02h
mov     dword ptr [esi+20h], 0
mov     [esi+4], ebx
add     esp, 4
mov     [esi+18h], edi
mov     word ptr [esi+1eh], 103h
mov     [esi+1ch], ax
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
push    esi
lea     esi, [eax+8]
mov     dword ptr [eax+38h], 12h
mov     eax, [esi]
push    edi
test    eax, eax
jz      short loc_100298de
mov     eax, [eax+48h]
jmp     short loc_100298e3
mov     eax, 3b9aca00h
xor     edi, edi
test    eax, eax
js      short loc_100298fe
lea     esp, [esp+0]
cmp     ds:byte_10079e6c[edi], 0
jz      short loc_100298fe
inc     edi
cmp     edi, eax
jle     short loc_100298f0
xor     eax, eax
mov     ebx, 202h
push    esi
cmp     eax, offset sub_10009760
jnz     short loc_1002991f
call    sub_100247d0
mov     eax, offset byte_10079e6c
mov     [esi+4], eax
mov     [esi+24h], eax
jmp     short loc_10029930
call    sub_100247d0
mov     dword ptr [esi+4], offset byte_10079e6c
mov     ebx, 0a02h
add     esp, 4
mov     [esi+18h], edi
pop     edi
mov     [esi+1ch], bx
mov     dword ptr [esi+20h], 0
mov     word ptr [esi+1eh], 103h
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
test    byte ptr [esi+24h], 40h
jz      short loc_10029971
mov     eax, [esi+18h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+24h], 20h
jz      short loc_10029981
push    ebx
mov     ebx, [esi+18h]
call    sub_100117b0
pop     ebx
mov     ax, [esi+24h]
mov     ecx, 0bf01h
and     ax, cx
mov     byte ptr [esi+26h], 5
or      ax, 1
mov     [esi+24h], ax
mov     edx, [esi+8]
mov     dword ptr [esi+38h], 7
mov     byte ptr [edx+32h], 1
pop     esi
pop     ebp
retn
push    ebx
xor     eax, eax
xor     ebx, ebx
cmp     [esi+14h], eax
jle     short loc_10029a17
push    edi
xor     edi, edi
lea     ecx, [ecx+0]
mov     ecx, [esi+10h]
mov     ecx, [ecx+edi+4]
test    ecx, ecx
jz      short loc_10029a0d
mov     edx, [ecx+4]
mov     ecx, [edx]
mov     ecx, [ecx+0b8h]
xor     edx, edx
test    ecx, ecx
jz      short loc_100299e6
mov     edx, [ecx+0ch]
mov     dword ptr [ecx+0ch], 0
mov     ecx, [esi+0b8h]
test    ecx, ecx
jz      short loc_10029a0d
test    edx, edx
jle     short loc_10029a0d
test    eax, eax
jnz     short loc_10029a0d
push    edx
mov     edx, [esi+10h]
mov     eax, [edx+edi]
mov     edx, [esi+0bch]
push    eax
push    esi
push    edx
call    ecx
add     esp, 10h
inc     ebx
add     edi, 10h
cmp     ebx, [esi+14h]
jl      short loc_100299c0
pop     edi
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
cmp     dword ptr [edi+30h], 0bdf20da3h
push    ebx
push    esi
jz      short loc_10029a3a
push    edi
call    sub_100290b0
add     esp, 4
mov     ebx, [edi]
cmp     byte ptr [ebx+32h], 0
jz      short loc_10029a50
mov     eax, 7
mov     [edi+58h], eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+54h]
test    eax, eax
jg      short loc_10029a70
cmp     byte ptr [edi+5fh], 0
jz      short loc_10029a6e
mov     dword ptr [edi+58h], 11h
mov     ecx, 1
jmp     loc_10029bae
test    eax, eax
jns     short loc_10029abb
cmp     dword ptr [ebx+7ch], 0
jnz     short loc_10029a82
mov     dword ptr [ebx+0d8h], 0
cmp     dword ptr [ebx+98h], 0
jz      short loc_10029a9e
cmp     byte ptr [ebx+79h], 0
jnz     short loc_10029a9e
mov     eax, [ebx]
lea     esi, [edi+84h]
call    sub_100089f0
mov     eax, 1
add     [ebx+7ch], eax
cmp     byte ptr [edi+64h], 0
jnz     short loc_10029ab2
add     [ebx+80h], eax
mov     dword ptr [edi+54h], 0
jmp     short loc_10029ac0
mov     eax, 1
cmp     byte ptr [edi+5dh], 0
jz      short loc_10029ad1
push    edi
call    sub_10026670
add     esp, 4
jmp     short loc_10029ae4
add     [ebx+84h], eax
mov     ecx, edi
call    sub_1002bc60
dec     dword ptr [ebx+84h]
mov     [ebp+var_4], eax
cmp     eax, 64h
jz      short loc_10029b49
cmp     dword ptr [ebx+98h], 0
jz      short loc_10029b49
cmp     byte ptr [ebx+79h], 0
jnz     short loc_10029b49
cmp     dword ptr [edi+9ch], 0
jz      short loc_10029b49
mov     eax, [ebx]
lea     esi, [ebp+var_10]
call    sub_100089f0
mov     eax, [ebp+var_10]
sub     eax, [edi+84h]
mov     ecx, [ebp+var_c]
sbb     ecx, [edi+88h]
push    0
push    0f4240h
push    ecx
push    eax
call    __allmul
mov     ecx, [ebx+98h]
push    edx
mov     edx, [edi+9ch]
push    eax
mov     eax, [ebx+9ch]
push    edx
push    eax
call    ecx
add     esp, 10h
cmp     [ebp+var_4], 65h
jnz     short loc_10029b64
mov     esi, ebx
call    sub_100299b0
mov     [edi+58h], eax
test    eax, eax
jz      short loc_10029b64
mov     [ebp+var_4], 1
mov     edx, [ebp+var_4]
mov     [ebx+28h], edx
mov     esi, [edi]
mov     eax, [edi+58h]
test    esi, esi
jz      short loc_10029b9c
cmp     byte ptr [esi+32h], 0
jnz     short loc_10029b80
cmp     eax, 0c0ah
jnz     short loc_10029b97
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     esi, [esi+2ch]
jmp     short loc_10029ba1
mov     esi, 0ffh
mov     ecx, [ebp+var_4]
and     esi, eax
cmp     esi, 7
jnz     short loc_10029bae
mov     [edi+58h], esi
cmp     byte ptr [edi+65h], 0
jz      short loc_10029bca
cmp     ecx, 64h
jz      short loc_10029bca
cmp     ecx, 65h
jz      short loc_10029bca
mov     eax, edi
call    sub_10027c20
mov     [ebp+var_4], eax
mov     ecx, eax
mov     eax, [ebx+2ch]
pop     esi
and     eax, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0d4h
push    ebx
push    esi
xor     ecx, ecx
push    edi
mov     edi, [ebp+arg_0]
mov     [esp+0e0h+var_cc], ecx
mov     [esp+0e0h+var_c4], ecx
cmp     edi, ecx
jnz     short loc_10029c07
push    offset aapicalledwithn
jmp     short loc_10029c16
mov     ebx, [edi]
mov     [esp+0e0h+var_d0], ebx
cmp     ebx, ecx
jnz     short loc_10029c45
push    offset aapicalledwithf
push    15h
call    sub_1000b150
add     esp, 8
push    offset ac0d89d4a975292
push    0f188h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     eax, 15h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebx+0ch]
cmp     eax, ecx
jz      short loc_10029c56
push    eax
call    dword_1008027c
add     esp, 4
call    sub_10029a20
mov     esi, eax
cmp     esi, 11h
jnz     loc_10029e12
mov     eax, [esp+0e0h+var_c4]
mov     ecx, eax
inc     eax
mov     [esp+0e0h+var_c4], eax
cmp     ecx, 5
jge     loc_10029da7
cmp     byte ptr [edi+65h], 0
jz      short loc_10029c88
mov     eax, [edi+9ch]
jmp     short loc_10029c8a
xor     eax, eax
mov     ebx, [edi]
push    0
push    edi
push    0
push    0ffffffffh
push    eax
lea     esi, [esp+0f4h+var_c8]
mov     eax, ebx
call    sub_10054100
add     esp, 14h
test    eax, eax
jz      short loc_10029cb6
cmp     eax, 7
jnz     short loc_10029caf
mov     byte ptr [ebx+32h], 1
mov     esi, eax
jmp     loc_10029d80
mov     ebx, [esp+0e0h+var_c8]
mov     eax, [ebp+arg_0]
mov     ecx, 30h
mov     esi, ebx
lea     edi, [esp+0e0h+var_c0]
rep movsd
mov     esi, eax
mov     ecx, 30h
mov     edi, ebx
rep movsd
mov     edi, eax
mov     ecx, 30h
lea     esi, [esp+0e0h+var_c0]
rep movsd
mov     ecx, [ebx+3ch]
mov     edx, [eax+3ch]
mov     [ebx+3ch], edx
mov     edx, [eax+38h]
mov     [eax+3ch], ecx
mov     ecx, [ebx+38h]
mov     [ebx+38h], edx
mov     edx, [eax+9ch]
mov     [eax+38h], ecx
mov     ecx, [ebx+9ch]
mov     [ebx+9ch], edx
mov     [eax+9ch], ecx
mov     cl, [ebx+65h]
push    eax
push    ebx
mov     [eax+65h], cl
call    sub_1002b330
mov     dword ptr [ebx+58h], 0
mov     eax, [ebx+30h]
add     esp, 8
cmp     eax, 0bdf20da3h
jz      short loc_10029d3a
cmp     eax, 519c2973h
jnz     short loc_10029d41
mov     esi, ebx
call    sub_10027d40
mov     ecx, [ebx+38h]
mov     eax, [ebx]
test    ecx, ecx
jz      short loc_10029d52
mov     edx, [ebx+3ch]
mov     [ecx+3ch], edx
jmp     short loc_10029d58
mov     ecx, [ebx+3ch]
mov     [eax+4], ecx
mov     ecx, [ebx+3ch]
test    ecx, ecx
jz      short loc_10029d65
mov     edx, [ebx+38h]
mov     [ecx+38h], edx
push    ebx
mov     dword ptr [ebx+30h], 0b606c3c8h
mov     dword ptr [ebx], 0
call    sub_10027f40
mov     edi, [ebp+arg_0]
add     esp, 4
xor     esi, esi
mov     [esp+0e0h+var_cc], esi
test    esi, esi
jnz     short loc_10029db0
push    edi
call    sub_100290b0
add     esp, 4
call    sub_10029a20
mov     ebx, [esp+0e0h+var_d0]
mov     esi, eax
cmp     esi, 11h
jz      loc_10029c66
jmp     short loc_10029e12
cmp     [esp+0e0h+var_cc], 0
jz      short loc_10029e12
jmp     short loc_10029db4
mov     ebx, [esp+0e0h+var_d0]
cmp     byte ptr [edi+65h], 0
jz      short loc_10029e12
mov     edi, [ebx+0cch]
test    edi, edi
jz      short loc_10029e12
mov     bl, 1
call    sub_100253e0
mov     edi, [ebp+arg_0]
mov     ebx, [esp+0e0h+var_d0]
mov     [esp+0e0h+var_c8], eax
mov     eax, [edi+34h]
mov     ecx, ebx
call    sub_10009810
cmp     byte ptr [ebx+32h], 0
jnz     short loc_10029e03
push    ebx
mov     ebx, [esp+0e4h+var_c8]
call    sub_10009b70
mov     ebx, [esp+0e4h+var_d0]
mov     [edi+34h], eax
mov     eax, [esp+0e4h+var_cc]
add     esp, 4
mov     [edi+58h], eax
jmp     short loc_10029e12
mov     esi, 7
mov     dword ptr [edi+34h], 0
mov     [edi+58h], esi
cmp     byte ptr [ebx+32h], 0
jnz     short loc_10029e20
cmp     esi, 0c0ah
jnz     short loc_10029e37
push    0
push    7
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
mov     byte ptr [ebx+32h], 0
mov     esi, 7
mov     edi, [ebx+2ch]
mov     ebx, [ebx+0ch]
and     edi, esi
test    ebx, ebx
jz      short loc_10029e4d
push    ebx
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     eax, [ecx+4]
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax+8]
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+src]
mov     eax, [edi]
mov     eax, [eax+18h]
push    eax
push    offset aunabletousefun
call    sub_1000b020
mov     esi, eax
mov     dword ptr [edi+38h], 1
add     esp, 8
add     edi, 8
mov     [ebp+src], esi
test    esi, esi
jnz     short loc_10029efd
test    byte ptr [edi+1ch], 40h
jz      short loc_10029ec9
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_10029ed7
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
push    esi
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [edi]
test    eax, eax
jz      short loc_10029f08
mov     eax, [eax+48h]
jmp     short loc_10029f0d
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_10029f1e
cmp     byte ptr [ebx+esi], 0
jz      short loc_10029f1e
inc     ebx
cmp     ebx, eax
jle     short loc_10029f13
lea     esi, [ebx+1]
cmp     ebx, eax
jg      short loc_10029f50
push    0
mov     eax, esi
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10029f50
mov     edx, [ebp+src]
mov     eax, [edi+4]
push    esi
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
mov     esi, [ebp+src]
push    esi
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, [ebx+30h]
mov     eax, 2000h
test    [edi+1ch], ax
jnz     short loc_10029fdc
mov     esi, [ebp+size]
test    esi, esi
jg      short loc_10029faf
mov     eax, edi
call    sub_10024760
mov     ecx, 1
mov     dword ptr [edi+4], 0
mov     eax, [edi+4]
mov     [edi+1ch], cx
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    0
mov     eax, esi
call    sub_10024410
mov     edx, 2000h
mov     [edi+1ch], dx
mov     eax, [ebx]
mov     [edi+10h], eax
mov     eax, [edi+4]
add     esp, 4
test    eax, eax
jz      short loc_10029fdf
push    esi
push    0
push    eax
call    memset
add     esp, 0ch
mov     eax, [edi+4]
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
test    eax, eax
jz      short loc_1002a00f
mov     ecx, [ebp+arg_4]
cmp     ecx, [eax+4]
jge     short loc_1002a00f
test    ecx, ecx
js      short loc_1002a00f
mov     eax, [eax+ecx*8+8]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
test    esi, esi
js      short loc_1002a063
mov     edi, [ebp+arg_0]
mov     ebx, [edi+4]
test    ebx, ebx
jz      short loc_1002a043
mov     eax, [ebx+4]
cmp     eax, esi
jg      short loc_1002a0a3
mov     [ebp+arg_4], eax
jmp     short loc_1002a04a
mov     [ebp+arg_4], 0
lea     eax, ds:10h[esi*8]
push    eax
mov     eax, [edi+8]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1002a078
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_1002a0c7
mov     ecx, [ebp+arg_8]
push    ecx
call    eax
add     esp, 4
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     edx, esi
sub     edx, eax
lea     ecx, ds:8[edx*8]
push    ecx
lea     edx, [ebx+eax*8+8]
push    0
push    edx
mov     [edi+4], ebx
call    memset
lea     eax, [esi+1]
mov     [ebx+4], eax
mov     ecx, [edi]
add     esp, 0ch
mov     [ebx], ecx
mov     ecx, [ebx+esi*8+8]
test    ecx, ecx
jz      short loc_1002a0b9
mov     eax, [ebx+esi*8+0ch]
test    eax, eax
jz      short loc_1002a0b9
push    ecx
call    eax
add     esp, 4
mov     edx, [ebp+arg_8]
mov     eax, [ebp+arg_c]
mov     [ebx+esi*8+8], edx
mov     [ebx+esi*8+0ch], eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+30h]
mov     eax, [ecx+18h]
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_1002a0f0
movzx   eax, word ptr [eax+2ch]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_1002a116
cmp     dword ptr [eax+14h], 0
jz      short loc_1002a116
movzx   eax, word ptr [eax+2ch]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ecx
test    esi, esi
jz      short loc_1002a17a
cmp     dword ptr [esi+14h], 0
jz      short loc_1002a155
movzx   eax, word ptr [esi+2ch]
cmp     edi, eax
jge     short loc_1002a155
test    edi, edi
js      short loc_1002a155
mov     ecx, [esi]
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_1002a14a
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [esi+14h]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*8]
pop     ecx
retn
mov     eax, [esi]
test    eax, eax
jz      short loc_1002a17a
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002a16c
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [esi]
push    0
push    19h
call    sub_1000ba40
add     esp, 8
mov     eax, offset dword_100767a8
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
mov     edi, eax
test    byte ptr [edi+1ch], 12h
jz      short loc_1002a1d2
call    sub_10024590
mov     ax, [edi+1ch]
mov     ecx, 0fffdh
and     ax, cx
or      ax, 10h
cmp     dword ptr [edi+18h], 0
mov     [edi+1ch], ax
jz      short loc_1002a1ce
mov     ebx, [edi+4]
jmp     short loc_1002a1db
xor     ebx, ebx
jmp     short loc_1002a1db
mov     bl, 1
call    sub_100253e0
mov     ebx, eax
test    esi, esi
jz      short loc_1002a22e
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a211
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a1f5
cmp     eax, 0c0ah
jnz     short loc_1002a20c
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a216
mov     edi, 0ffh
mov     edx, [esi]
and     edi, eax
mov     [esi+58h], edi
mov     eax, [edx+0ch]
test    eax, eax
jz      short loc_1002a22e
push    eax
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
mov     edi, eax
test    byte ptr [edi+1ch], 10h
jnz     short loc_1002a269
mov     bl, 1
call    sub_100253e0
test    eax, eax
jnz     short loc_1002a269
xor     ebx, ebx
jmp     short loc_1002a27a
mov     ebx, [edi+18h]
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_1002a27a
add     ebx, [edi+10h]
test    esi, esi
jz      short loc_1002a2cd
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a2b0
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a294
cmp     eax, 0c0ah
jnz     short loc_1002a2ab
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a2b5
mov     edi, 0ffh
mov     ecx, [esi]
and     edi, eax
mov     [esi+58h], edi
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_1002a2cd
push    eax
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
mov     edi, eax
test    byte ptr [edi+1ch], 10h
jnz     short loc_1002a308
mov     bl, 2
call    sub_100253e0
test    eax, eax
jnz     short loc_1002a308
xor     ebx, ebx
jmp     short loc_1002a319
mov     ebx, [edi+18h]
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_1002a319
add     ebx, [edi+10h]
test    esi, esi
jz      short loc_1002a36c
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a34f
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a333
cmp     eax, 0c0ah
jnz     short loc_1002a34a
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a354
mov     edi, 0ffh
mov     ecx, [esi]
and     edi, eax
mov     [esi+58h], edi
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_1002a36c
push    eax
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 8
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
movzx   ecx, word ptr [eax+1ch]
test    cl, 8
jz      short loc_1002a3a4
fld     qword ptr [eax+8]
jmp     short loc_1002a3d4
test    cl, 4
jz      short loc_1002a3ae
fild    qword ptr [eax+10h]
jmp     short loc_1002a3d4
fldz
test    cl, 12h
jz      short loc_1002a3d4
mov     edx, [eax+4]
fstp    [esp+10h+var_8]
lea     ecx, [esp+10h+var_8]
push    ecx
mov     ecx, [eax+18h]
push    edx
mov     dl, [eax+1fh]
call    sub_1000bd50
fld     [esp+18h+var_8]
add     esp, 8
fst     [esp+10h+var_8]
test    esi, esi
jz      short loc_1002a437
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a414
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a3f2
cmp     eax, 0c0ah
jnz     short loc_1002a40f
push    0
fstp    st
push    7
mov     eax, edi
call    sub_1000ba40
fld     [esp+18h+var_8]
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a419
mov     edi, 0ffh
and     edi, eax
mov     eax, [esi]
mov     [esi+58h], edi
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002a437
push    eax
fstp    st
call    dword_10080284
fld     [esp+14h+var_8]
add     esp, 4
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
mov     ecx, eax
call    sub_10024870
mov     ebx, eax
test    esi, esi
jz      short loc_1002a4b0
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a491
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a475
cmp     eax, 0c0ah
jnz     short loc_1002a48c
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a496
mov     edi, 0ffh
and     edi, eax
mov     eax, [esi]
mov     [esi+58h], edi
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002a4ae
push    eax
call    dword_10080284
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
mov     ecx, eax
call    sub_10024870
mov     ebx, eax
mov     [esp+18h+var_4], edx
test    esi, esi
jz      short loc_1002a541
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a51e
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a4fe
cmp     eax, 0c0ah
jnz     short loc_1002a519
push    0
push    7
mov     eax, edi
call    sub_1000ba40
mov     edx, [esp+20h+var_4]
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a523
mov     edi, 0ffh
and     edi, eax
mov     eax, [esi]
mov     [esi+58h], edi
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002a53f
push    eax
call    dword_10080284
mov     edx, [esp+1ch+var_4]
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
mov     bl, 1
mov     edi, eax
call    sub_100253e0
mov     ebx, eax
test    esi, esi
jz      short loc_1002a5c2
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a5a3
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a587
cmp     eax, 0c0ah
jnz     short loc_1002a59e
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a5a8
mov     edi, 0ffh
and     edi, eax
mov     eax, [esi]
mov     [esi+58h], edi
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002a5c0
push    eax
call    dword_10080284
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
mov     ebx, eax
movzx   eax, word ptr [ebx+1ch]
test    eax, 800h
jz      short loc_1002a5fc
and     eax, 0f7ffh
or      eax, 1000h
mov     [ebx+1ch], ax
test    esi, esi
jz      short loc_1002a64f
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a632
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a616
cmp     eax, 0c0ah
jnz     short loc_1002a62d
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a637
mov     edi, 0ffh
and     edi, eax
mov     eax, [esi]
mov     [esi+58h], edi
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002a64f
push    eax
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
mov     bl, 2
mov     edi, eax
call    sub_100253e0
mov     ebx, eax
test    esi, esi
jz      short loc_1002a6d1
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a6b2
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a696
cmp     eax, 0c0ah
jnz     short loc_1002a6ad
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a6b7
mov     edi, 0ffh
and     edi, eax
mov     eax, [esi]
mov     [esi+58h], edi
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002a6cf
push    eax
call    dword_10080284
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
call    sub_1002a120
movzx   ebx, byte ptr [eax+1eh]
test    esi, esi
jz      short loc_1002a749
mov     edi, [esi]
mov     eax, [esi+58h]
test    edi, edi
jz      short loc_1002a72c
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002a710
cmp     eax, 0c0ah
jnz     short loc_1002a727
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     edi, [edi+2ch]
jmp     short loc_1002a731
mov     edi, 0ffh
and     edi, eax
mov     eax, [esi]
mov     [esi+58h], edi
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002a749
push    eax
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
push    esi
mov     esi, [ebx]
push    edi
mov     edi, [ebp+arg_4]
xor     eax, eax
cmp     edi, ecx
jge     short loc_1002a7be
test    edi, edi
js      short loc_1002a7be
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_1002a78d
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 1
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002a7ab
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002a7bc
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
push    esi
mov     esi, [ebx]
push    edi
mov     edi, [ebp+arg_4]
xor     eax, eax
cmp     edi, ecx
jge     short loc_1002a82e
test    edi, edi
js      short loc_1002a82e
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_1002a7fd
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 2
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002a81b
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002a82c
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
xor     eax, eax
push    esi
mov     esi, [ebx]
cmp     edx, ecx
jge     short loc_1002a8a2
test    edx, edx
js      short loc_1002a8a2
mov     eax, [esi+0ch]
push    edi
lea     edi, [ecx+edx]
test    eax, eax
jz      short loc_1002a870
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 1
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002a88e
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002a89f
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
xor     eax, eax
push    esi
mov     esi, [ebx]
cmp     edx, ecx
jge     short loc_1002a912
test    edx, edx
js      short loc_1002a912
mov     eax, [esi+0ch]
push    edi
lea     edi, [ecx+edx]
test    eax, eax
jz      short loc_1002a8e0
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 2
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002a8fe
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002a90f
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
xor     eax, eax
push    esi
mov     esi, [ebx]
cmp     edx, ecx
jge     short loc_1002a982
test    edx, edx
js      short loc_1002a982
mov     eax, [esi+0ch]
push    edi
lea     edi, [edx+ecx*2]
test    eax, eax
jz      short loc_1002a950
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 1
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002a96e
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002a97f
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
xor     eax, eax
push    esi
mov     esi, [ebx]
cmp     edx, ecx
jge     short loc_1002a9f2
test    edx, edx
js      short loc_1002a9f2
mov     eax, [esi+0ch]
push    edi
lea     edi, [edx+ecx*2]
test    eax, eax
jz      short loc_1002a9c0
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 2
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002a9de
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002a9ef
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
xor     eax, eax
push    esi
mov     esi, [ebx]
cmp     edx, ecx
jge     short loc_1002aa64
test    edx, edx
js      short loc_1002aa64
mov     eax, [esi+0ch]
push    edi
lea     edi, [edx+ecx*2]
add     edi, ecx
test    eax, eax
jz      short loc_1002aa32
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 1
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002aa50
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002aa61
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
xor     eax, eax
push    esi
mov     esi, [ebx]
cmp     edx, ecx
jge     short loc_1002aad4
test    edx, edx
js      short loc_1002aad4
mov     eax, [esi+0ch]
push    edi
lea     edi, [edx+ecx*2]
add     edi, ecx
test    eax, eax
jz      short loc_1002aaa2
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 2
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002aac0
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002aad1
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
xor     eax, eax
push    esi
mov     esi, [ebx]
cmp     edx, ecx
jge     short loc_1002ab42
test    edx, edx
js      short loc_1002ab42
mov     eax, [esi+0ch]
push    edi
lea     edi, [edx+ecx*4]
test    eax, eax
jz      short loc_1002ab10
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 1
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002ab2e
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002ab3f
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
movzx   ecx, word ptr [ebx+2ch]
xor     eax, eax
push    esi
mov     esi, [ebx]
cmp     edx, ecx
jge     short loc_1002abb2
test    edx, edx
js      short loc_1002abb2
mov     eax, [esi+0ch]
push    edi
lea     edi, [edx+ecx*4]
test    eax, eax
jz      short loc_1002ab80
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebx+10h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8]
mov     bl, 2
call    sub_100253e0
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_1002ab9e
mov     byte ptr [esi+32h], 0
xor     edi, edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1002abaf
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ecx
push    ebx
push    edi
mov     edi, eax
test    esi, esi
jnz     short loc_1002abd0
push    offset aapicalledwithn
jmp     short loc_1002abdb
mov     eax, [esi]
test    eax, eax
jnz     short loc_1002abf4
push    offset aapicalledwithf
push    15h
call    sub_1000b150
add     esp, 8
push    offset ac0d89d4a975292
push    0f384h
jmp     loc_1002aced
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002ac05
push    eax
call    dword_1008027c
add     esp, 4
cmp     dword ptr [esi+30h], 0bdf20da3h
jnz     loc_1002acac
cmp     dword ptr [esi+54h], 0
jge     loc_1002acac
cmp     edi, 1
jl      short loc_1002ac82
movsx   eax, word ptr [esi+4ch]
cmp     edi, eax
jg      short loc_1002ac82
mov     edx, [esi+44h]
dec     edi
lea     ecx, [edi+edi*4]
lea     ebx, [edx+ecx*8]
push    ebx
call    sub_100247d0
add     esp, 4
mov     eax, 1
mov     [ebx+1ch], ax
mov     eax, [esi]
push    0
push    0
call    sub_1000ba40
add     esp, 8
cmp     byte ptr [esi+65h], 0
jz      short loc_1002ac7c
cmp     edi, 20h
jge     short loc_1002ac6f
mov     edx, 1
mov     ecx, edi
shl     edx, cl
test    [esi+0b0h], edx
jnz     short loc_1002ac78
cmp     dword ptr [esi+0b0h], 0ffffffffh
jnz     short loc_1002ac7c
mov     byte ptr [esi+5fh], 1
xor     eax, eax
pop     edi
pop     ebx
pop     ecx
retn
mov     eax, [esi]
push    0
push    19h
call    sub_1000ba40
mov     eax, [esi]
mov     eax, [eax+0ch]
add     esp, 8
test    eax, eax
jz      short loc_1002aca3
push    eax
call    dword_10080284
add     esp, 4
mov     eax, 19h
pop     edi
pop     ebx
pop     ecx
retn
mov     eax, [esi]
push    0
push    15h
call    sub_1000ba40
mov     ecx, [esi]
mov     eax, [ecx+0ch]
add     esp, 8
test    eax, eax
jz      short loc_1002accd
push    eax
call    dword_10080284
add     esp, 4
mov     edx, [esi+9ch]
push    edx
push    offset abindonabusypre
push    15h
call    sub_1000b150
add     esp, 0ch
push    offset ac0d89d4a975292
push    0f38ch
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
pop     edi
mov     eax, 15h
pop     ebx
pop     ecx
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     esi, ebx
mov     edi, eax
call    sub_1002abc0
mov     esi, eax
test    esi, esi
jnz     loc_1002ade4
mov     eax, [ebp+src]
test    eax, eax
jz      loc_1002adcb
mov     edx, [ebx+44h]
lea     ecx, [edi+edi*4]
lea     esi, [edx+ecx*8-28h]
mov     ecx, dword ptr [ebp+arg_c]
push    ecx
mov     ecx, [ebp+size]
push    eax
mov     eax, [ebp+arg_8]
mov     edx, esi
call    sub_10024e60
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     short loc_1002ad87
cmp     [ebp+arg_c], al
jz      short loc_1002ad87
test    byte ptr [esi+1ch], 2
mov     edx, [ebx]
mov     eax, [edx+10h]
mov     ecx, [eax+0ch]
movzx   eax, byte ptr [ecx+4dh]
jz      short loc_1002ad85
movzx   edx, byte ptr [esi+1fh]
cmp     edx, eax
jz      short loc_1002ad85
push    eax
push    esi
call    sub_1000b360
add     esp, 8
mov     edi, eax
jmp     short loc_1002ad87
xor     edi, edi
mov     eax, [ebx]
push    0
push    edi
call    sub_1000ba40
mov     esi, [ebx]
add     esp, 8
test    esi, esi
jz      short loc_1002adc4
cmp     byte ptr [esi+32h], 0
jnz     short loc_1002ada8
cmp     edi, 0c0ah
jnz     short loc_1002adbf
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     edi, 7
mov     esi, [esi+2ch]
jmp     short loc_1002adc9
mov     esi, 0ffh
and     esi, edi
mov     eax, [ebx]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002adf9
push    eax
call    dword_10080284
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebp
retn
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_1002adf9
cmp     eax, 0ffffffffh
jz      short loc_1002adf9
mov     ecx, [ebp+src]
push    ecx
call    eax
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+size]
mov     edx, [ebp+src]
push    ebx
mov     ebx, [ebp+arg_0]
push    0
push    eax
mov     eax, [ebp+arg_4]
push    ecx
push    edx
call    sub_1002ad10
add     esp, 10h
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 34h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, [ebp+arg_4]
mov     eax, edi
mov     esi, ebx
call    sub_1002abc0
mov     [esp+40h+var_4], eax
test    eax, eax
jnz     short loc_1002ae85
mov     ecx, [ebx+44h]
fld     [ebp+arg_8]
lea     eax, [edi+edi*4]
sub     esp, 8
lea     esi, [ecx+eax*8-28h]
fstp    [esp+48h+var_48]
call    sub_10024bc0
mov     edx, [ebx]
mov     eax, [edx+0ch]
add     esp, 8
test    eax, eax
jz      short loc_1002ae81
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esp+40h+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
cdq
push    edx
push    eax
mov     eax, [ebp+arg_4]
push    eax
push    ecx
call    sub_1002aeb0
add     esp, 10h
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
mov     eax, edi
call    sub_1002abc0
mov     ebx, eax
test    ebx, ebx
jnz     short loc_1002af2c
mov     ecx, [esi+44h]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8-28h]
mov     edx, 2460h
test    [edi+1ch], dx
jz      short loc_1002aee9
mov     eax, edi
call    sub_10024760
mov     eax, [edi+24h]
mov     ecx, [edi]
call    sub_10009810
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_c]
xor     ecx, ecx
mov     [edi+10h], eax
mov     eax, 4
mov     [edi+4], ecx
mov     [edi+24h], ecx
mov     [edi+20h], ecx
mov     [edi+14h], edx
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 1
mov     edx, [esi]
mov     eax, [edx+0ch]
cmp     eax, ecx
jz      short loc_1002af2a
push    eax
call    dword_10080284
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
push    edi
call    sub_1002abc0
mov     edi, eax
test    edi, edi
jnz     short loc_1002af6b
mov     eax, [esi]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002af69
push    eax
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+size]
mov     edx, [ebp+src]
push    ebx
mov     ebx, [ebp+arg_0]
push    1
push    eax
mov     eax, [ebp+arg_4]
push    ecx
push    edx
call    sub_1002ad10
add     esp, 10h
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+size]
mov     edx, [ebp+src]
push    ebx
mov     ebx, [ebp+arg_0]
push    2
push    eax
mov     eax, [ebp+arg_4]
push    ecx
push    edx
call    sub_1002ad10
add     esp, 10h
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
mov     eax, [ebp+arg_8]
movzx   ecx, byte ptr [eax+1eh]
sub     esp, 34h
push    ebx
dec     ecx
push    esi
push    edi
cmp     ecx, 3
ja      def_1002afed
jmp     ds:jpt_1002afed[ecx*4]
mov     ecx, [eax+14h]
mov     edx, [eax+10h]
mov     eax, [ebp+arg_4]
push    ecx
mov     ecx, [ebp+arg_0]
push    edx
push    eax
push    ecx
call    sub_1002aeb0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
fld     qword ptr [eax+8]
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
sub     esp, 8
fstp    [esp+48h+var_48]
push    edx
push    eax
call    sub_1002ae30
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, 4000h
test    [eax+1ch], cx
jz      short loc_1002b059
mov     edx, [eax+10h]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    edx
push    eax
push    ecx
call    sub_1002b160
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [eax+18h]
mov     ebx, [eax+4]
mov     edi, [ebp+arg_4]
mov     esi, [ebp+arg_0]
mov     eax, edi
mov     [esp+40h+size], edx
call    sub_1002abc0
mov     [esp+40h+var_8], eax
test    eax, eax
jnz     short loc_1002b0f2
test    ebx, ebx
jz      short loc_1002b0df
mov     ecx, [esi+44h]
lea     eax, [edi+edi*4]
lea     edx, [ecx+eax*8-28h]
mov     ecx, [esp+40h+size]
push    0
push    ebx
or      eax, 0ffffffffh
call    sub_10024e60
mov     ebx, eax
mov     eax, [esi]
push    0
push    ebx
call    sub_1000ba40
mov     edi, [esi]
add     esp, 10h
test    edi, edi
jz      short loc_1002b0d4
cmp     byte ptr [edi+32h], 0
jnz     short loc_1002b0b8
cmp     ebx, 0c0ah
jnz     short loc_1002b0cf
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     ebx, 7
mov     edi, [edi+2ch]
jmp     short loc_1002b0d9
mov     edi, 0ffh
and     edi, ebx
mov     [esp+40h+var_8], edi
mov     edx, [esi]
mov     eax, [edx+0ch]
test    eax, eax
jz      short loc_1002b0f2
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esp+40h+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   ecx, byte ptr [eax+1fh]
mov     edx, [eax+18h]
mov     eax, [eax+4]
mov     ebx, [ebp+arg_0]
push    ecx
push    0ffffffffh
push    edx
push    eax
mov     eax, [ebp+arg_4]
call    sub_1002ad10
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     esi, [ebp+arg_0]
call    sub_1002abc0
mov     edi, eax
test    edi, edi
jnz     short loc_1002b145
mov     ecx, [esi]
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_1002b145
push    eax
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
mov     eax, edi
call    sub_1002abc0
mov     [esp+10h+var_4], eax
test    eax, eax
jnz     short loc_1002b1e7
mov     ecx, [esi+44h]
mov     ebx, [ebp+arg_8]
lea     eax, [edi+edi*4]
lea     edi, [ecx+eax*8-28h]
mov     edx, 2460h
test    [edi+1ch], dx
jz      short loc_1002b19e
mov     eax, edi
call    sub_10024760
mov     eax, [edi+24h]
mov     ecx, [edi]
call    sub_10009810
xor     ecx, ecx
mov     eax, 4010h
mov     [edi+4], ecx
mov     [edi+24h], ecx
mov     [edi+20h], ecx
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 4
mov     [edi+18h], ecx
cmp     ebx, ecx
jge     short loc_1002b1c9
xor     ebx, ebx
mov     [edi+10h], ebx
mov     byte ptr [edi+1fh], 1
mov     edx, [esi]
mov     eax, [edx+0ch]
cmp     eax, ecx
jz      short loc_1002b1e3
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esp+10h+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_1002b200
movsx   eax, word ptr [eax+4ch]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
test    ecx, ecx
jz      short loc_1002b233
mov     eax, [ebp+arg_4]
cmp     eax, 1
jl      short loc_1002b233
movsx   edx, word ptr [ecx+4eh]
cmp     eax, edx
jg      short loc_1002b233
mov     ecx, [ecx+48h]
mov     eax, [ecx+eax*4-4]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
test    eax, eax
jnz     short loc_1002b24e
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_0], 0
push    ebx
push    esi
push    edi
jz      short loc_1002b2d3
movsx   ecx, word ptr [eax+4eh]
mov     [ebp+var_8], 0
mov     [ebp+var_c], ecx
test    ecx, ecx
jle     short loc_1002b2d3
mov     eax, [eax+48h]
mov     [ebp+var_4], eax
nop
mov     ecx, [ebp+var_4]
mov     edi, [ecx]
test    edi, edi
jz      short loc_1002b2c3
mov     ecx, [ebp+arg_0]
mov     eax, edx
mov     esi, edi
cmp     edx, 4
jb      short loc_1002b299
mov     ebx, [esi]
cmp     ebx, [ecx]
jnz     short loc_1002b2c3
sub     eax, 4
add     ecx, 4
add     esi, 4
cmp     eax, 4
jnb     short loc_1002b285
test    eax, eax
jz      short loc_1002b2bd
mov     bl, [ecx]
cmp     bl, [esi]
jnz     short loc_1002b2c3
cmp     eax, 1
jbe     short loc_1002b2bd
mov     bl, [ecx+1]
cmp     bl, [esi+1]
jnz     short loc_1002b2c3
cmp     eax, 2
jbe     short loc_1002b2bd
mov     al, [ecx+2]
cmp     al, [esi+2]
jnz     short loc_1002b2c3
cmp     byte ptr [edi+edx], 0
jz      short loc_1002b2dc
mov     eax, [ebp+var_8]
add     [ebp+var_4], 4
inc     eax
mov     [ebp+var_8], eax
cmp     eax, [ebp+var_c]
jl      short loc_1002b270
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_8]
pop     edi
pop     esi
inc     eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
mov     eax, ecx
test    ecx, ecx
jnz     short loc_1002b30c
mov     edx, eax
mov     eax, [ebp+arg_0]
push    ecx
call    sub_1002b240
add     esp, 4
pop     ebp
retn
cmp     byte ptr [ecx], 0
jz      short loc_1002b317
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1002b311
sub     eax, ecx
and     eax, 3fffffffh
mov     edx, eax
mov     eax, [ebp+arg_0]
push    ecx
call    sub_1002b240
add     esp, 4
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+arg_4]
mov     ecx, [eax]
mov     eax, [ecx+0ch]
sub     esp, 54h
push    ebx
push    esi
push    edi
test    eax, eax
jz      short loc_1002b352
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_0]
xor     edx, edx
mov     [esp+60h+var_48], 0
cmp     dx, [eax+4ch]
jge     loc_1002b4a3
xor     eax, eax
mov     [esp+60h+var_4c], eax
jmp     short loc_1002b375
mov     eax, [esp+60h+var_4c]
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
mov     ebx, [edx+44h]
mov     edi, [ecx+44h]
add     ebx, eax
add     edi, eax
movzx   eax, word ptr [ebx+1ch]
mov     [esp+60h+var_50], edi
mov     [esp+60h+var_44], ebx
test    eax, 2460h
jz      loc_1002b451
test    eax, 2000h
jz      short loc_1002b410
mov     esi, [ebx+10h]
test    esi, esi
jz      short loc_1002b405
mov     eax, [esi+14h]
mov     [esp+60h+var_44], eax
test    eax, eax
jz      short loc_1002b405
push    40h
lea     eax, [esp+64h+var_40]
push    0
push    eax
call    memset
mov     edx, [ebx]
lea     eax, [esp+6ch+var_40]
add     esp, 0ch
mov     ecx, 1
push    eax
mov     [esp+64h+var_1c], cx
mov     [esp+64h+var_38], edx
mov     [esp+64h+var_10], ebx
mov     [esp+64h+var_40], esi
call    [esp+64h+var_44]
mov     eax, [ebx+24h]
mov     ecx, [ebx]
add     esp, 4
call    sub_10009810
mov     ecx, 0ah
lea     esi, [esp+60h+var_38]
mov     edi, ebx
rep movsd
mov     edi, [esp+60h+var_50]
push    ebx
call    sub_100247d0
add     esp, 4
jmp     short loc_1002b451
test    eax, 400h
jz      short loc_1002b430
mov     ecx, [ebx+20h]
test    ecx, ecx
jz      short loc_1002b430
mov     edx, [ebx+4]
push    edx
call    ecx
add     esp, 4
mov     dword ptr [ebx+20h], 0
jmp     short loc_1002b451
test    al, 20h
jz      short loc_1002b446
mov     ebx, [ebx+10h]
call    sub_100117b0
mov     ebx, [esp+60h+var_44]
mov     edi, [esp+60h+var_50]
jmp     short loc_1002b451
test    al, 40h
jz      short loc_1002b451
mov     esi, ebx
call    sub_10024b20
mov     eax, [ebx+24h]
mov     ecx, [ebx]
call    sub_10009810
mov     edx, [ebp+arg_0]
add     [esp+60h+var_4c], 28h
xor     eax, eax
mov     [ebx+4], eax
mov     [ebx+24h], eax
mov     [ebx+20h], eax
mov     eax, [esp+60h+var_50]
mov     esi, edi
mov     ecx, 0ah
mov     edi, ebx
rep movsd
mov     ecx, 1
mov     [eax+1ch], cx
xor     ecx, ecx
mov     [eax+20h], ecx
mov     [eax+24h], ecx
mov     eax, [esp+60h+var_48]
movsx   ecx, word ptr [edx+4ch]
inc     eax
mov     [esp+60h+var_48], eax
cmp     eax, ecx
jl      loc_1002b371
mov     edx, [ebp+arg_4]
mov     eax, [edx]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1002b4b9
push    eax
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     dx, [ecx+4ch]
mov     eax, [ebp+arg_4]
cmp     dx, [eax+4ch]
jz      short loc_1002b4ea
mov     eax, 1
pop     ebp
retn
cmp     byte ptr [eax+65h], 0
mov     dl, 1
jz      short loc_1002b4fe
cmp     dword ptr [eax+0b0h], 0
jz      short loc_1002b4fe
mov     [eax+5fh], dl
cmp     byte ptr [ecx+65h], 0
jz      short loc_1002b510
cmp     dword ptr [ecx+0b0h], 0
jz      short loc_1002b510
mov     [ecx+5fh], dl
push    eax
push    ecx
call    sub_1002b330
add     esp, 8
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_1002b52e
mov     eax, [eax]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [edi+0ch]
test    eax, eax
jz      short loc_1002b559
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
test    eax, eax
jnz     short loc_1002b565
mov     esi, [edi+4]
jmp     short loc_1002b568
mov     esi, [eax+3ch]
mov     eax, [edi+0ch]
test    eax, eax
jz      short loc_1002b579
push    eax
call    dword_10080284
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     [ebp+arg_8], 0
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     eax, [ecx+edx*4+74h]
jz      short loc_1002b59b
mov     dword ptr [ecx+edx*4+74h], 0
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0d8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     [ebp+var_a0], eax
mov     edi, ecx
mov     ecx, [eax]
lea     eax, [ebp+var_74]
mov     esi, eax
xor     edx, edx
cmp     dword ptr [ecx+84h], 1
mov     [ebp+src], eax
mov     eax, [ecx+48h]
mov     [ebp+var_ac], ecx
mov     [ebp+var_80], eax
mov     [ebp+var_94], ecx
mov     cl, [edi]
mov     [ebp+var_78], edx
mov     [ebp+var_98], 1
mov     [ebp+var_8c], esi
mov     [ebp+var_88], edx
mov     [ebp+var_84], 64h
mov     al, 1
mov     [ebp+var_7b], 1
mov     [ebp+var_7c], dl
jle     short loc_1002b662
test    cl, cl
jz      loc_1002b904
mov     esi, edi
inc     edi
cmp     cl, 0ah
jz      short loc_1002b631
mov     cl, [edi]
test    cl, cl
jnz     short loc_1002b625
push    3
push    offset asc_10079ee0
lea     eax, [ebp+var_94]
call    sub_1000ac50
mov     ecx, edi
sub     ecx, esi
push    ecx
push    esi
lea     eax, [ebp+var_94]
call    sub_1000ac50
mov     cl, [edi]
add     esp, 10h
test    cl, cl
jnz     short loc_1002b623
jmp     loc_1002b8f1
test    cl, cl
jz      loc_1002b904
xor     ebx, ebx
mov     esi, edi
mov     [ebp+var_9c], ebx
test    cl, cl
jz      short loc_1002b6ae
jmp     short loc_1002b680
lea     edx, [ebp+var_a4]
push    edx
mov     ecx, esi
call    sub_1006dd20
add     esp, 4
cmp     [ebp+var_a4], 85h
jz      short loc_1002b6a8
add     esi, eax
add     ebx, eax
cmp     byte ptr [esi], 0
jnz     short loc_1002b680
jmp     short loc_1002b6ae
mov     [ebp+var_9c], eax
push    ebx
push    edi
lea     eax, [ebp+var_94]
call    sub_1000ac50
mov     esi, [ebp+var_9c]
add     esp, 8
add     edi, ebx
test    esi, esi
jz      loc_1002b8f1
cmp     byte ptr [edi], 3fh
jnz     short loc_1002b6f5
cmp     esi, 1
jle     short loc_1002b6ed
lea     eax, [ebp+var_78]
push    eax
lea     ecx, [edi+1]
push    ecx
call    sub_1000c450
mov     eax, [ebp+var_78]
add     esp, 8
jmp     short loc_1002b709
mov     eax, [ebp+var_98]
jmp     short loc_1002b706
mov     eax, [ebp+var_a0]
push    edi
mov     edx, esi
call    sub_1002b240
add     esp, 4
mov     [ebp+var_78], eax
mov     ecx, [ebp+var_a0]
lea     edx, [eax+1]
mov     [ebp+var_98], edx
mov     edx, [ecx+44h]
lea     eax, [eax+eax*4]
add     edi, esi
lea     esi, [edx+eax*8-28h]
movzx   eax, word ptr [esi+1ch]
test    al, 1
jz      short loc_1002b738
push    4
push    offset anull_0
jmp     loc_1002b8d9
test    al, 4
jz      short loc_1002b75d
mov     eax, [esi+14h]
mov     ecx, [esi+10h]
push    eax
push    ecx
lea     edx, [ebp+var_94]
push    offset alld
push    edx
call    sub_1000b170
add     esp, 10h
jmp     loc_1002b8e7
test    al, 8
jz      short loc_1002b783
fld     qword ptr [esi+8]
sub     esp, 8
fstp    [esp+0ech+var_ec]
lea     eax, [ebp+var_94]
push    offset a15g
push    eax
call    sub_1000b170
add     esp, 10h
jmp     loc_1002b8e7
test    al, 2
jz      loc_1002b879
mov     ecx, [ebp+var_ac]
mov     edx, [ecx+10h]
mov     eax, [edx+0ch]
mov     al, [eax+4dh]
mov     edx, [esi+4]
mov     [ebp+var_a8], al
cmp     al, 1
jz      loc_1002b85e
xor     eax, eax
mov     [ebp+var_d4], eax
mov     [ebp+var_d4], ecx
mov     ecx, dword ptr [ebp+var_a8]
push    ecx
mov     ecx, [esi+18h]
push    edx
lea     edx, [ebp+var_d4]
mov     [ebp+var_d0], eax
mov     [ebp+var_cc], eax
mov     [ebp+var_c8], eax
mov     [ebp+var_c4], eax
mov     [ebp+var_c0], eax
mov     [ebp+var_bc], eax
mov     [ebp+var_b8], eax
mov     [ebp+var_b4], eax
mov     [ebp+var_b0], eax
call    sub_10024e60
add     esp, 8
test    byte ptr [ebp+var_b8], 2
jz      short loc_1002b82b
cmp     byte ptr [ebp+var_b8+3], 1
jz      short loc_1002b82b
lea     eax, [ebp+var_d4]
push    1
push    eax
call    sub_1000b360
add     esp, 8
mov     ecx, [ebp+var_d0]
mov     edx, [ebp+var_bc]
push    ecx
push    edx
lea     eax, [ebp+var_94]
push    offset aq
push    eax
call    sub_1000b170
lea     ecx, [ebp+var_d4]
push    ecx
call    sub_100247d0
add     esp, 14h
jmp     loc_1002b8e7
mov     eax, [esi+18h]
push    edx
push    eax
lea     ecx, [ebp+var_94]
push    offset aq
push    ecx
call    sub_1000b170
add     esp, 10h
jmp     short loc_1002b8e7
test    eax, 4000h
lea     eax, [ebp+var_94]
jz      short loc_1002b89a
mov     edx, [esi+10h]
push    edx
push    offset azeroblobd
push    eax
call    sub_1000b170
add     esp, 0ch
jmp     short loc_1002b8e7
push    2
push    offset asc_10079efc
call    sub_1000ac50
xor     ebx, ebx
add     esp, 8
cmp     [esi+18h], ebx
jle     short loc_1002b8d2
mov     ecx, [esi+4]
movzx   edx, byte ptr [ebx+ecx]
push    edx
lea     eax, [ebp+var_94]
push    offset a02x
push    eax
call    sub_1000b170
inc     ebx
add     esp, 0ch
cmp     ebx, [esi+18h]
jl      short loc_1002b8b0
push    1
push    offset asc_10079f08
lea     eax, [ebp+var_94]
call    sub_1000ac50
add     esp, 8
mov     cl, [edi]
test    cl, cl
jnz     loc_1002b66a
mov     esi, [ebp+var_8c]
test    esi, esi
jz      short loc_1002b946
mov     al, byte ptr [ebp+var_7b]
mov     edx, [ebp+var_88]
mov     byte ptr [edx+esi], 0
test    al, al
jz      short loc_1002b946
mov     ebx, [ebp+src]
cmp     esi, ebx
jnz     short loc_1002b946
lea     edi, [edx+1]
cmp     al, 1
jnz     short loc_1002b92c
mov     esi, [ebp+var_94]
mov     ecx, edi
call    sub_10009a40
jmp     short loc_1002b935
push    edi
call    sub_10009510
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_1002b946
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     ecx, [ebp+var_8]
pop     edi
mov     eax, esi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
movzx   eax, word ptr [ecx+1ch]
test    al, 1
jz      short loc_1002b96d
mov     byte ptr [ecx+1eh], 5
retn
test    al, 4
jz      short loc_1002b976
mov     byte ptr [ecx+1eh], 1
retn
test    al, 8
jz      short loc_1002b97f
mov     byte ptr [ecx+1eh], 2
retn
and     al, 2
neg     al
sbb     al, al
add     al, 4
mov     [ecx+1eh], al
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     ecx, [ebp+arg_4]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+18h]
mov     edx, [esi+8]
sub     eax, ecx
lea     eax, [eax+eax*4]
lea     ebx, [edx+eax*8]
mov     eax, [ebp+arg_10]
mov     edx, [ebp+arg_8]
neg     eax
sbb     eax, eax
and     eax, 0d0h
lea     eax, [eax+edx*8+60h]
mov     edx, [esi+40h]
cmp     dword ptr [edx+ecx*4], 0
mov     [ebp+var_8], eax
lea     eax, [edx+ecx*4]
push    edi
mov     [ebp+var_4], ebx
mov     [ebp+var_c], 0
jz      short loc_1002ba35
mov     edi, [eax]
test    edi, edi
jz      short loc_1002ba28
mov     eax, [esi]
push    edi
call    sub_10032f40
mov     eax, [edi+4]
add     esp, 4
test    eax, eax
jz      short loc_1002b9fd
mov     ebx, eax
call    sub_1001b4a0
mov     ebx, [ebp+var_4]
jmp     short loc_1002ba0d
mov     eax, [edi]
test    eax, eax
jz      short loc_1002ba0d
mov     esi, eax
call    sub_1001d2b0
mov     esi, [ebp+arg_0]
mov     eax, [edi+24h]
test    eax, eax
jz      short loc_1002ba28
mov     edi, [edi+28h]
mov     byte ptr [esi+62h], 1
push    eax
mov     eax, [edi+1ch]
call    eax
add     esp, 4
mov     byte ptr [esi+62h], 0
mov     ecx, [esi+40h]
mov     edx, [ebp+arg_4]
mov     dword ptr [ecx+edx*4], 0
mov     eax, [ebp+var_8]
push    0
mov     edi, ebx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_1002baa5
mov     ebx, [ebx+4]
mov     eax, [esi+40h]
mov     ecx, [ebp+arg_4]
push    60h
push    0
push    ebx
mov     [eax+ecx*4], ebx
call    memset
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_c]
add     esp, 0ch
mov     [ebx+0ch], edx
mov     [ebx+14h], eax
test    eax, eax
jz      short loc_1002ba7d
mov     ecx, [ebp+var_4]
mov     edx, [ecx+4]
add     edx, 60h
mov     [ebx+54h], edx
cmp     [ebp+arg_10], 0
jz      short loc_1002ba9c
mov     ecx, [ebp+var_4]
mov     edx, [ecx+4]
push    56h
lea     eax, [edx+eax*8+60h]
push    0
push    eax
mov     [ebx], eax
call    memset
add     esp, 0ch
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
movzx   eax, word ptr [esi+1ch]
sub     esp, 10h
push    ebx
push    edi
test    al, 0ch
jnz     short loc_1002bb1f
mov     dl, [esi+1fh]
test    al, 2
jz      short loc_1002bb1f
mov     edi, [esi+18h]
mov     ebx, [esi+4]
lea     eax, [esp+18h+var_8]
push    eax
push    ebx
mov     ecx, edi
call    sub_1000bd50
add     esp, 8
test    eax, eax
jz      short loc_1002bb1f
mov     al, [esi+1fh]
push    edi
lea     ecx, [esp+1ch+var_10]
push    ecx
push    ebx
call    sub_1000c2a0
add     esp, 0ch
test    eax, eax
jnz     short loc_1002bb13
mov     edx, [esp+18h+var_10]
mov     eax, [esp+18h+var_c]
or      word ptr [esi+1ch], 4
mov     [esi+10h], edx
mov     [esi+14h], eax
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
fld     [esp+18h+var_8]
or      word ptr [esi+1ch], 8
fstp    qword ptr [esi+8]
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+1eh], 3
jnz     short loc_1002bb7e
call    sub_1002bab0
movzx   eax, word ptr [esi+1ch]
test    al, 1
jz      short loc_1002bb55
mov     byte ptr [esi+1eh], 5
movzx   eax, byte ptr [esi+1eh]
pop     esi
pop     ebp
retn
test    al, 4
jz      short loc_1002bb64
mov     byte ptr [esi+1eh], 1
movzx   eax, byte ptr [esi+1eh]
pop     esi
pop     ebp
retn
test    al, 8
jz      short loc_1002bb73
mov     byte ptr [esi+1eh], 2
movzx   eax, byte ptr [esi+1eh]
pop     esi
pop     ebp
retn
and     al, 2
neg     al
sbb     al, al
add     al, 4
mov     [esi+1eh], al
movzx   eax, byte ptr [esi+1eh]
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
cmp     al, 61h
jnz     short loc_1002bbbb
movzx   eax, word ptr [edi+1ch]
test    al, 2
jnz     short loc_1002bbaf
test    al, 0ch
jz      short loc_1002bbaf
movzx   esi, [ebp+arg_0]
mov     eax, edi
call    sub_10024640
mov     eax, 0fff3h
and     [edi+1ch], ax
pop     esi
pop     ebp
retn
cmp     al, 62h
jz      short loc_1002bbd1
mov     esi, edi
call    sub_1002bab0
test    byte ptr [edi+1ch], 8
jz      short loc_1002bbd1
call    sub_10024930
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
mov     ecx, [ebx]
mov     eax, [ebx+34h]
push    esi
push    edi
mov     [ebp+var_4], ecx
call    sub_10009810
mov     esi, [ebp+arg_4]
mov     edi, [esi+8]
test    edi, edi
jnz     short loc_1002bc05
xor     eax, eax
jmp     short loc_1002bc43
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_1002bc16
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1002bc10
mov     esi, [ebp+var_4]
sub     eax, edi
and     eax, 3fffffffh
lea     ebx, [eax+1]
mov     ecx, ebx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1002bc3b
push    ebx
push    edi
push    esi
call    memcpy
add     esp, 0ch
mov     ebx, [ebp+arg_0]
mov     eax, esi
mov     esi, [ebp+arg_4]
mov     [ebx+34h], eax
mov     eax, [esi+8]
push    eax
call    sub_10009770
add     esp, 4
pop     edi
mov     dword ptr [esi+8], 0
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 12ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [esi+4]
mov     ebx, [esi+8]
xor     eax, eax
push    edi
mov     edi, [esi]
mov     edx, [edi+10h]
mov     [ebp+var_10c], ecx
mov     ecx, [edx+0ch]
mov     dl, [ecx+4dh]
mov     ecx, [edi+20h]
mov     [ebp+var_d8], eax
mov     [ebp+var_cc], eax
mov     [ebp+var_ed], al
mov     [ebp+var_104], eax
mov     [ebp+var_d4], eax
mov     [ebp+var_100], eax
mov     [ebp+var_108], eax
mov     eax, [edi+1ch]
push    esi
mov     [ebp+var_dc], esi
mov     [ebp+var_d0], edi
mov     byte ptr [ebp+var_ec], dl
mov     [ebp+var_e4], ebx
mov     [ebp+var_f8], eax
mov     [ebp+var_f4], ecx
call    sub_10026410
add     esp, 4
cmp     dword ptr [esi+58h], 7
jz      loc_1002c2f4
xor     eax, eax
mov     [esi+58h], eax
mov     [esi+14h], eax
mov     edx, [edi+0d8h]
mov     [edi+1ach], eax
test    edx, edx
jnz     loc_10031802
mov     edx, [esi+54h]
mov     ecx, edi
cmp     [ecx+10ch], eax
mov     [ebp+var_d8], edx
setnz   al
mov     [ebp+var_110], eax
mov     edi, edi
mov     eax, [ebp+var_d0]
cmp     byte ptr [eax+32h], 0
jnz     loc_1002c2f4
cmp     [ebp+var_110], 0
mov     eax, [ebp+var_d8]
mov     edx, [ebp+var_10c]
lea     ecx, [eax+eax*4]
lea     edi, [edx+ecx*4]
mov     [ebp+var_e8], edi
jz      short loc_1002bd9b
mov     eax, [ebp+var_d0]
mov     ecx, [eax+114h]
cmp     ecx, [ebp+var_104]
jnz     short loc_1002bd95
mov     edx, [eax+110h]
mov     eax, [eax+10ch]
push    edx
call    eax
add     esp, 4
test    eax, eax
jnz     loc_100315ce
mov     [ebp+var_104], eax
inc     [ebp+var_104]
test    byte ptr [edi+2], 2
jz      short loc_1002bdcf
mov     eax, [edi+8]
lea     ecx, [eax+eax*4]
lea     eax, [ebx+ecx*8]
mov     edx, 2460h
mov     [ebp+var_d4], eax
test    [eax+1ch], dx
jz      short loc_1002bdc6
call    sub_10024760
mov     eax, [ebp+var_d4]
mov     ecx, 4
mov     [eax+1ch], cx
movzx   eax, byte ptr [edi]
dec     eax
cmp     eax, 93h
ja      def_1002bdde
jmp     ds:jpt_1002bdde[eax*4]
mov     edx, [ebp+var_d0]
mov     eax, [edx+0d8h]
test    eax, eax
jnz     loc_10031802
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [ebp+var_d8]
lea     ecx, [ebx+ecx*8]
mov     edx, 4
mov     [ecx+1ch], dx
cdq
mov     [ecx+10h], eax
mov     [ecx+14h], edx
mov     eax, [edi+8]
dec     eax
mov     [ebp+var_d8], eax
jmp     def_1002bdde
mov     edi, [edi+4]
lea     ecx, [edi+edi*4]
mov     edx, [ebx+ecx*8+10h]
mov     [ebp+var_d8], edx
jmp     def_1002bdde
mov     edi, [edi+4]
lea     eax, [edi+edi*4]
lea     ecx, [ebx+eax*8]
mov     eax, [ecx+10h]
mov     edx, 4
mov     [ecx+1ch], dx
mov     [ebp+var_c8], eax
mov     eax, [ebp+var_d8]
cdq
mov     [ecx+10h], eax
mov     [ecx+14h], edx
mov     ecx, [ebp+var_c8]
mov     [ebp+var_d8], ecx
jmp     def_1002bdde
mov     eax, [edi+0ch]
lea     edx, [eax+eax*4]
test    byte ptr [ebx+edx*8+1ch], 1
jz      def_1002bdde
cmp     dword ptr [edi+4], 0
jnz     loc_100315dd
mov     eax, [esi+0a4h]
test    eax, eax
jz      loc_100315dd
mov     ecx, [eax+4]
dec     dword ptr [esi+0ach]
mov     edx, [ebp+var_d0]
mov     [esi+0a4h], ecx
mov     ecx, [esi+68h]
add     [edx+44h], ecx
mov     [edx+40h], ecx
mov     ecx, [eax]
mov     edx, [eax+10h]
mov     [ecx+0bch], edx
mov     edx, [eax+34h]
mov     [ecx+0b8h], edx
mov     edx, [eax+8]
mov     [ecx+4], edx
mov     edx, [eax+2ch]
mov     [ecx+1ch], edx
mov     edx, [eax+0ch]
mov     [ecx+8], edx
mov     edx, [eax+30h]
mov     [ecx+18h], edx
mov     edx, [eax+14h]
mov     [ecx+40h], edx
mov     dx, [eax+24h]
mov     [ecx+2eh], dx
mov     edx, [ecx]
mov     ebx, [eax+1ch]
mov     [edx+1ch], ebx
mov     ebx, [eax+20h]
mov     [edx+20h], ebx
mov     edx, [eax+40h]
mov     [ecx+68h], edx
cmp     dword ptr [edi+8], 4
mov     ecx, [ebp+var_d0]
mov     edx, [ecx+1ch]
mov     eax, [eax+28h]
mov     ecx, [ecx+20h]
mov     [ebp+var_d8], eax
mov     [ebp+var_f8], edx
mov     [ebp+var_f4], ecx
jnz     short loc_1002bf51
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     ecx, [eax+edx*4+8]
dec     ecx
mov     [ebp+var_d8], ecx
mov     edx, [esi+4]
mov     eax, [esi+8]
mov     [ebp+var_10c], edx
mov     [ebp+var_e4], eax
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [ebp+var_d4]
cdq
mov     [ecx+10h], eax
mov     [ecx+14h], edx
jmp     def_1002bdde
mov     edi, [edi+10h]
mov     ecx, [edi]
mov     eax, [ebp+var_d4]
mov     [eax+10h], ecx
mov     edx, [edi+4]
mov     [eax+14h], edx
jmp     def_1002bdde
mov     eax, [ebp+var_d4]
mov     ecx, 8
mov     [eax+1ch], cx
mov     edx, [edi+10h]
fld     qword ptr [edx]
fstp    qword ptr [eax+8]
jmp     def_1002bdde
mov     ecx, [edi+10h]
mov     byte ptr [edi], 9
mov     [ebp+var_e0], ecx
call    sub_1000ba20
cmp     byte ptr [ebp+var_ec], 1
mov     [edi+4], eax
jz      loc_1002c12a
mov     esi, [ebp+var_d4]
test    ecx, ecx
jnz     short loc_1002c02e
test    byte ptr [esi+1ch], 40h
jz      short loc_1002bff7
mov     eax, [esi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+1ch], 20h
jz      short loc_1002c011
mov     eax, [ebp+var_d4]
mov     ebx, [eax+10h]
call    sub_100117b0
mov     esi, [ebp+var_d4]
mov     cx, [esi+1ch]
mov     edx, 0bf01h
and     cx, dx
or      cx, 1
mov     [esi+1ch], cx
mov     byte ptr [esi+1eh], 5
jmp     loc_1002c0ca
mov     eax, [esi]
test    eax, eax
jz      short loc_1002c039
mov     eax, [eax+48h]
jmp     short loc_1002c03e
mov     eax, 3b9aca00h
xor     ebx, ebx
mov     [ebp+var_cc], eax
test    eax, eax
js      short loc_1002c05b
lea     ebx, [ebx+0]
cmp     byte ptr [ebx+ecx], 0
jz      short loc_1002c05b
inc     ebx
cmp     ebx, eax
jle     short loc_1002c050
xor     eax, eax
mov     [ebp+var_e8], 202h
push    esi
cmp     eax, offset sub_10009760
jnz     short loc_1002c082
call    sub_100247d0
mov     eax, [ebp+var_e0]
mov     [esi+4], eax
mov     [esi+24h], eax
jmp     short loc_1002c09a
call    sub_100247d0
mov     ecx, [ebp+var_e0]
mov     [esi+4], ecx
mov     [ebp+var_e8], 0a02h
mov     dx, word ptr [ebp+var_e8]
add     esp, 4
mov     dword ptr [esi+20h], 0
mov     [esi+18h], ebx
mov     [esi+1ch], dx
mov     word ptr [esi+1eh], 103h
cmp     ebx, [ebp+var_cc]
jg      loc_1002caea
mov     esi, [ebp+var_d4]
movzx   ecx, byte ptr [ebp+var_ec]
mov     eax, esi
mov     [ebp+var_cc], 0
call    sub_100243f0
test    eax, eax
jnz     loc_1002c2f4
mov     [esi+24h], eax
mov     ax, [esi+1ch]
mov     ecx, 0fbffh
and     ax, cx
mov     edx, 800h
or      ax, dx
or      bl, 0ffh
mov     [esi+1ch], ax
cmp     [edi+1], bl
jnz     short loc_1002c11b
mov     eax, [edi+10h]
mov     ecx, [ebp+var_d0]
call    sub_10009810
mov     [edi+1], bl
mov     eax, [esi+4]
mov     [edi+10h], eax
mov     ecx, [esi+18h]
mov     [edi+4], ecx
mov     edx, [edi+4]
mov     eax, [ebp+var_d0]
cmp     edx, [eax+48h]
jg      loc_1002caea
mov     eax, [ebp+var_d4]
mov     ecx, 0a02h
mov     [eax+1ch], cx
mov     edx, [edi+10h]
mov     [eax+4], edx
mov     ecx, [edi+4]
mov     dl, byte ptr [ebp+var_ec]
mov     [eax+18h], ecx
mov     [eax+1fh], dl
jmp     def_1002bdde
mov     eax, [edi+0ch]
sub     eax, [edi+8]
mov     edx, [ebp+var_d4]
mov     [ebp+var_c8], eax
mov     ecx, 1
mov     [edx+1ch], cx
cmp     [ebp+var_c8], 0
jle     def_1002bdde
mov     eax, edx
nop
add     eax, 28h
mov     ecx, 2460h
mov     [ebp+var_d4], eax
test    [eax+1ch], cx
jz      short loc_1002c1af
call    sub_10024760
mov     eax, [ebp+var_d4]
mov     edx, 1
mov     [eax+1ch], dx
mov     ecx, [ebp+var_c8]
dec     ecx
mov     [ebp+var_c8], ecx
test    ecx, ecx
jg      short loc_1002c190
jmp     def_1002bdde
mov     eax, [edi+10h]
mov     esi, [ebp+var_d4]
mov     ecx, [edi+4]
push    0
push    eax
xor     eax, eax
mov     edx, esi
call    sub_10024e60
mov     cl, byte ptr [ebp+var_ec]
add     esp, 8
mov     [esi+1fh], cl
jmp     def_1002bdde
mov     edi, [edi+4]
mov     eax, [esi+44h]
lea     edx, [edi+edi*4]
lea     esi, [eax+edx*8-28h]
mov     ecx, esi
mov     [ebp+var_c8], esi
call    sub_10024d20
test    eax, eax
jnz     loc_1002caea
mov     ebx, [ebp+var_d4]
push    800h
push    esi
call    sub_10024d50
add     esp, 8
jmp     def_1002bdde
mov     eax, [edi+0ch]
mov     [ebp+src], eax
mov     ecx, [edi+4]
mov     [ebp+size], ecx
mov     edx, [edi+8]
mov     [ebp+var_bc], edx
lea     edx, [edx+edx*4]
lea     ecx, [ecx+ecx*4]
lea     esi, [ebx+edx*8]
lea     edi, [ebx+ecx*8]
mov     [ebp+var_d4], esi
test    eax, eax
jz      short loc_1002c2a2
dec     eax
mov     [ebp+src], eax
mov     eax, [esi+24h]
mov     [ebp+var_c8], eax
mov     ebx, edi
mov     eax, esi
mov     dword ptr [esi+24h], 0
call    sub_10024e10
mov     ecx, [ebp+var_c8]
mov     [edi+24h], ecx
mov     eax, [ebp+src]
add     edi, 28h
add     esi, 28h
test    eax, eax
jnz     short loc_1002c263
mov     [ebp+var_d4], esi
dec     eax
mov     [ebp+src], eax
jmp     def_1002bdde
mov     eax, [edi+8]
mov     edi, [edi+4]
lea     edx, [eax+eax*4]
lea     eax, [edi+edi*4]
lea     esi, [ebx+edx*8]
lea     ecx, [ebx+eax*8]
push    1000h
push    ecx
mov     ebx, esi
mov     [ebp+var_d4], esi
call    sub_10024d50
mov     edx, 1000h
add     esp, 8
test    [esi+1ch], dx
jz      def_1002bdde
mov     eax, esi
call    sub_10024530
test    eax, eax
jz      def_1002bdde
mov     esi, [ebp+var_d0]
mov     ebx, [ebp+var_dc]
push    offset aoutofmemory
add     ebx, 34h
mov     byte ptr [esi+32h], 1
call    sub_10009bf0
mov     [ebp+var_cc], 7
jmp     loc_1002cb0d
mov     eax, [edi+8]
mov     edi, [edi+4]
lea     eax, [eax+eax*4]
lea     ecx, [edi+edi*4]
lea     eax, [ebx+eax*8]
lea     edx, [ebx+ecx*8]
push    1000h
push    edx
mov     ebx, eax
mov     [ebp+var_d4], eax
call    sub_10024d50
add     esp, 8
jmp     def_1002bdde
push    0
mov     eax, esi
call    sub_100278f0
add     esp, 4
mov     [ebp+var_cc], eax
test    eax, eax
jnz     def_1002bdde
push    1
push    esi
call    sub_100277f0
add     esp, 8
mov     [ebp+var_cc], eax
test    eax, eax
jnz     def_1002bdde
mov     edx, [esi+50h]
add     edx, 2
or      edx, 1
mov     [esi+50h], edx
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
lea     ebx, [ebx+eax*8]
xor     ecx, ecx
mov     [esi+14h], ebx
mov     [ebp+var_c8], ebx
mov     [ebp+src], ecx
cmp     [edi+8], ecx
jle     short loc_1002c40f
mov     eax, [ebp+var_c8]
lea     edx, [ecx+ecx*4]
lea     eax, [eax+edx*8]
mov     edx, 1000h
test    [eax+1ch], dx
jz      short loc_1002c3d5
call    sub_10024530
test    eax, eax
jnz     loc_1002c2f4
mov     ecx, [ebp+src]
lea     eax, [ecx+ecx*4]
mov     ecx, [ebp+var_c8]
lea     eax, [ecx+eax*8]
call    sub_100245f0
mov     eax, [ebp+src]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_c8]
lea     ecx, [eax+edx*8]
call    sub_1002b960
mov     ecx, [ebp+src]
inc     ecx
mov     [ebp+src], ecx
cmp     ecx, [edi+8]
jl      short loc_1002c3ab
mov     ecx, [ebp+var_d0]
cmp     byte ptr [ecx+32h], 0
jnz     loc_1002c2f4
mov     edx, [ebp+var_d8]
mov     eax, [ebp+var_dc]
inc     edx
mov     [eax+54h], edx
mov     edi, 64h
jmp     loc_1002cb9e
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
lea     ecx, [ebx+eax*8]
mov     eax, [edi+8]
mov     edi, [edi+0ch]
lea     edx, [eax+eax*4]
lea     eax, [edi+edi*4]
lea     edi, [ebx+eax*8]
movzx   eax, word ptr [ecx+1ch]
lea     edx, [ebx+edx*8]
mov     [ebp+var_e0], ecx
mov     cl, [edx+1ch]
or      cl, al
mov     [ebp+var_e8], edx
mov     [ebp+var_d4], edi
test    cl, 1
jz      short loc_1002c480
mov     esi, edi
call    sub_10024b20
jmp     def_1002bdde
test    eax, 4000h
jz      short loc_1002c49a
mov     eax, [ebp+var_e0]
call    sub_10024590
test    eax, eax
jnz     loc_1002c2f4
mov     eax, [ebp+var_e8]
mov     edx, 4000h
test    [eax+1ch], dx
jz      short loc_1002c4b8
call    sub_10024590
test    eax, eax
jnz     loc_1002c2f4
mov     ecx, [ebp+var_e0]
mov     bl, 12h
test    [ecx+1ch], bl
jnz     short loc_1002c4db
movzx   esi, byte ptr [ebp+var_ec]
mov     eax, ecx
call    sub_10024640
test    eax, eax
jnz     loc_1002c2f4
mov     edx, [ebp+var_e8]
test    [edx+1ch], bl
jnz     short loc_1002c4fc
movzx   esi, byte ptr [ebp+var_ec]
mov     eax, edx
call    sub_10024640
test    eax, eax
jnz     loc_1002c2f4
mov     eax, [ebp+var_e0]
mov     eax, [eax+18h]
mov     ecx, [ebp+var_e8]
add     eax, [ecx+18h]
cdq
mov     ecx, edx
mov     edx, [ebp+var_d0]
mov     esi, eax
mov     [ebp+var_c8], esi
mov     [ebp+src], ecx
mov     eax, [edx+48h]
cdq
cmp     ecx, edx
jg      loc_1002caea
jl      short loc_1002c53b
cmp     esi, eax
ja      loc_1002caea
mov     ax, [edi+1ch]
mov     esi, [ebp+var_e8]
mov     ecx, 0bf02h
and     ax, cx
or      ax, 2
xor     edx, edx
cmp     edi, esi
setz    dl
mov     [edi+1ch], ax
mov     eax, [ebp+var_c8]
add     eax, 2
push    edx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     loc_1002c2f4
cmp     edi, esi
jz      short loc_1002c58e
mov     eax, [esi+18h]
mov     ecx, [esi+4]
mov     edx, [edi+4]
push    eax
push    ecx
push    edx
call    memcpy
add     esp, 0ch
mov     eax, [ebp+var_e0]
mov     ecx, [eax+18h]
mov     edx, [eax+4]
mov     eax, [edi+4]
add     eax, [esi+18h]
push    ecx
push    edx
push    eax
call    memcpy
mov     edx, [ebp+var_c8]
mov     ecx, [edi+4]
mov     byte ptr [edx+ecx], 0
mov     ecx, [ebp+var_c8]
mov     eax, [edi+4]
mov     byte ptr [eax+ecx+1], 0
mov     cl, byte ptr [ebp+var_ec]
mov     edx, 200h
add     esp, 0ch
or      [edi+1ch], dx
mov     eax, [ebp+var_c8]
mov     [edi+18h], eax
mov     [edi+1fh], cl
jmp     def_1002bdde
mov     eax, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_e4]
lea     ebx, [eax+edx*8]
mov     esi, ebx
call    sub_1002bab0
mov     eax, [edi+8]
mov     edx, [ebp+var_e4]
lea     ecx, [eax+eax*4]
lea     esi, [edx+ecx*8]
call    sub_1002bab0
mov     eax, [edi+0ch]
mov     ecx, [ebp+var_e4]
lea     eax, [eax+eax*4]
lea     edx, [ecx+eax*8]
movzx   eax, word ptr [ebx+1ch]
movzx   ecx, word ptr [esi+1ch]
or      eax, ecx
mov     [ebp+var_d4], edx
mov     [ebp+var_c8], eax
test    al, 1
jnz     loc_1002c8ba
mov     dl, [ebx+1ch]
and     dl, [esi+1ch]
test    dl, 4
jz      short loc_1002c69b
mov     eax, [ebx+10h]
mov     [ebp+src], eax
mov     ecx, [ebx+14h]
mov     [ebp+size], ecx
mov     edx, [esi+10h]
mov     [ebp+var_bc], edx
mov     edx, [esi+14h]
mov     [ebp+var_b8], edx
movzx   edx, byte ptr [edi]
add     edx, 0ffffffaah
cmp     edx, 3
ja      def_1002c67b
jmp     ds:jpt_1002c67b[edx*4]
push    ecx
push    eax
lea     eax, [ebp+var_bc]
push    eax
call    sub_1000c9c0
add     esp, 0ch
test    eax, eax
jz      loc_1002c788
mov     eax, ebx
call    sub_100248e0
fstp    [ebp+var_b4]
mov     eax, esi
call    sub_100248e0
fst     qword ptr [ebp+var_ac]
movzx   eax, byte ptr [edi]
add     eax, 0ffffffaah
cmp     eax, 3
ja      def_1002c6c4
jmp     ds:jpt_1002c6c4[eax*4]
push    ecx
push    eax
lea     edx, [ebp+var_bc]
call    sub_1000ca50
add     esp, 8
test    eax, eax
jnz     short loc_1002c69b
jmp     loc_1002c788
push    ecx
push    eax
lea     ecx, [ebp+var_bc]
push    ecx
call    sub_1000caa0
add     esp, 0ch
test    eax, eax
jnz     short loc_1002c69b
jmp     loc_1002c788
mov     edx, eax
or      edx, ecx
jz      loc_1002c8ba
mov     edx, eax
and     edx, ecx
cmp     edx, 0ffffffffh
jnz     short loc_1002c72a
cmp     [ebp+var_bc], 0
jnz     short loc_1002c72a
cmp     [ebp+var_b8], 80000000h
jz      loc_1002c69b
push    ecx
mov     ecx, [ebp+var_bc]
push    eax
mov     eax, [ebp+var_b8]
push    eax
push    ecx
call    __alldiv
jmp     short loc_1002c77c
mov     edx, eax
or      edx, ecx
jz      loc_1002c8ba
mov     edx, eax
and     edx, ecx
cmp     edx, 0ffffffffh
jnz     short loc_1002c767
mov     eax, 1
xor     ecx, ecx
mov     [ebp+src], eax
mov     [ebp+size], ecx
push    ecx
mov     ecx, [ebp+var_bc]
push    eax
mov     eax, [ebp+var_b8]
push    eax
push    ecx
call    __allrem
mov     [ebp+var_b8], edx
mov     [ebp+var_bc], eax
mov     eax, [ebp+var_d4]
mov     edx, [ebp+var_bc]
mov     [eax+10h], edx
mov     ecx, [ebp+var_b8]
mov     dx, [eax+1ch]
mov     [eax+14h], ecx
mov     ecx, 0bf04h
and     dx, cx
or      dx, 4
mov     [eax+1ch], dx
jmp     def_1002bdde
fadd    [ebp+var_b4]
jmp     loc_1002c862
fsub    [ebp+var_b4]
jmp     loc_1002c862
fmul    [ebp+var_b4]
jmp     loc_1002c862
fld     [ebp+var_b4]
fld     st
fldz
fucompp
fnstsw  ax
test    ah, 44h
jnp     loc_1002c8b6
fdivp   st(1), st
jmp     short loc_1002c862
fld     [ebp+var_b4]
call    __ftol2
mov     esi, eax
mov     edi, edx
mov     [ebp+src], esi
mov     [ebp+size], edi
call    __ftol2
mov     ecx, esi
or      ecx, edi
mov     [ebp+var_bc], eax
mov     [ebp+var_b8], edx
jz      loc_1002c8ba
mov     ecx, esi
and     ecx, edi
cmp     ecx, 0ffffffffh
jnz     short loc_1002c847
mov     esi, 1
xor     edi, edi
mov     [ebp+src], esi
mov     [ebp+size], edi
push    edi
push    esi
push    edx
push    eax
call    __allrem
mov     dword ptr [ebp+var_120], eax
mov     dword ptr [ebp+var_120+4], edx
fild    [ebp+var_120]
sub     esp, 8
fst     qword ptr [ebp+var_ac]
fstp    [esp+140h+var_140]
call    sub_1000b9f0
add     esp, 8
test    eax, eax
jnz     short loc_1002c8ba
mov     eax, [ebp+var_d4]
fld     qword ptr [ebp+var_ac]
mov     dx, [eax+1ch]
fstp    qword ptr [eax+8]
mov     ecx, 0bf08h
and     dx, cx
or      dx, 8
mov     [eax+1ch], dx
test    byte ptr [ebp+var_c8], 8
jnz     def_1002bdde
mov     esi, eax
call    sub_10024930
jmp     def_1002bdde
fstp    st
fstp    st
mov     esi, [ebp+var_d4]
call    sub_10024b20
jmp     def_1002bdde
mov     edi, [edi+4]
test    edi, edi
jz      def_1002bdde
mov     eax, [ebp+var_e4]
lea     edx, [edi+edi*4]
push    0
push    0
lea     esi, [eax+edx*8]
call    sub_10024b70
add     esp, 8
jmp     def_1002bdde
movzx   ecx, byte ptr [edi+3]
mov     edx, [esi+0ch]
mov     [ebp+var_80], edx
mov     [ebp+var_7c], ecx
mov     eax, [edi+0ch]
lea     eax, [eax+eax*4]
lea     edx, [ebx+eax*8]
mov     eax, [edi+8]
lea     eax, [eax+eax*4]
lea     ebx, [ebx+eax*8]
xor     eax, eax
mov     [ebp+var_d4], edx
mov     [ebp+src], ebx
mov     [ebp+var_c8], eax
test    ecx, ecx
jle     short loc_1002c97b
mov     ecx, [ebp+var_80]
mov     [ecx+eax*4], ebx
mov     eax, [ebp+src]
mov     edx, 1000h
test    [eax+1ch], dx
jz      short loc_1002c953
call    sub_10024530
test    eax, eax
jnz     loc_1002c2f4
mov     eax, [ebp+src]
mov     ecx, eax
call    sub_1002b960
mov     eax, [ebp+var_c8]
mov     ebx, [ebp+src]
inc     eax
add     ebx, 28h
mov     [ebp+var_c8], eax
mov     [ebp+src], ebx
cmp     eax, [ebp+var_7c]
jl      short loc_1002c929
cmp     byte ptr [edi+1], 0fbh
mov     eax, [edi+10h]
jnz     short loc_1002c996
mov     [ebp+size], eax
mov     [ebp+var_bc], 0
jmp     short loc_1002c9a4
mov     [ebp+var_bc], eax
mov     ecx, [eax]
mov     [ebp+size], ecx
mov     esi, [ebp+var_d0]
mov     ebx, [ebp+var_d4]
xor     eax, eax
mov     edx, 1
mov     [ebp+var_98], eax
mov     [ebp+var_94], eax
lea     eax, [ebp+var_b8]
mov     word ptr [ebp+var_9c], dx
mov     [ebp+var_b8], esi
call    sub_10024e10
mov     eax, [ebp+var_9c]
mov     ecx, [ebp+size]
and     eax, 0bf01h
or      eax, 1
mov     word ptr [ebp+var_9c], ax
mov     [ebp+var_88], 0
test    byte ptr [ecx+3], 8
jz      short loc_1002ca0f
mov     edx, [edi-4]
mov     [ebp+var_8c], edx
mov     eax, [ebp+var_f8]
mov     ecx, [ebp+var_f4]
mov     [esi+20h], ecx
mov     [esi+1ch], eax
mov     edx, [ebp+var_80]
mov     eax, [ebp+var_7c]
push    edx
mov     edx, [ebp+size]
push    eax
mov     eax, [edx+0ch]
lea     ecx, [ebp+size]
push    ecx
call    eax
mov     ebx, [ebp+var_bc]
mov     ecx, [esi+1ch]
mov     edx, [esi+20h]
add     esp, 0ch
mov     [ebp+var_f8], ecx
mov     [ebp+var_f4], edx
test    ebx, ebx
jz      short loc_1002ca73
mov     eax, [edi+4]
push    eax
call    sub_10027ef0
mov     ecx, [ebp+var_bc]
add     esp, 4
mov     [edi+10h], ecx
mov     byte ptr [edi+1], 0f9h
cmp     byte ptr [esi+32h], 0
jnz     loc_1003168b
cmp     [ebp+var_88], 0
jz      short loc_1002cab6
mov     bl, 1
lea     edi, [ebp+var_b8]
call    sub_100253e0
mov     ebx, [ebp+var_dc]
push    eax
push    offset as
add     ebx, 34h
call    sub_10009bf0
mov     edx, [ebp+var_88]
add     esp, 8
mov     [ebp+var_cc], edx
movzx   ecx, byte ptr [ebp+var_ec]
lea     eax, [ebp+var_b8]
call    sub_100243f0
mov     esi, [ebp+var_d4]
lea     ebx, [ebp+var_b8]
mov     eax, esi
call    sub_10024e10
mov     ecx, esi
call    sub_10024d20
test    eax, eax
jz      def_1002bdde
mov     ebx, [ebp+var_dc]
mov     esi, [ebp+var_d0]
push    offset byte_10079e6c
add     ebx, 34h
call    sub_10009bf0
mov     [ebp+var_cc], 12h
add     esp, 4
mov     esi, [ebp+var_dc]
mov     eax, [esi+34h]
mov     ecx, [esi+9ch]
mov     edx, [ebp+var_d8]
mov     edi, [ebp+var_cc]
push    eax
push    ecx
push    edx
push    offset astatementabort
push    edi
mov     [esi+58h], edi
call    sub_1000b150
add     esp, 14h
mov     eax, esi
call    sub_10027960
cmp     edi, 0c0ah
jnz     short loc_1002cb58
mov     eax, [ebp+var_d0]
mov     byte ptr [eax+32h], 1
mov     al, [ebp+var_ed]
mov     edi, 1
test    al, al
jz      short loc_1002cb9e
mov     edx, [ebp+var_d0]
movzx   esi, al
mov     eax, [edx+10h]
dec     esi
mov     ecx, esi
add     ecx, ecx
mov     ecx, [eax+ecx*8+0ch]
push    ecx
call    sub_100449b0
add     esp, 4
cmp     esi, edi
jz      short loc_1002cb9e
mov     edx, [ebp+var_d0]
mov     eax, [edx+10h]
mov     ecx, [eax+1ch]
push    ecx
call    sub_100449b0
add     esp, 4
mov     eax, [ebp+var_d0]
mov     edx, [ebp+var_f8]
mov     ecx, [ebp+var_f4]
mov     [eax+1ch], edx
mov     edx, [ebp+var_dc]
push    edx
mov     [eax+20h], ecx
call    sub_10026480
mov     ecx, [ebp+var_4]
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
lea     esi, [ebx+eax*8]
mov     eax, [edi+8]
lea     ecx, [eax+eax*4]
mov     eax, [edi+0ch]
lea     ecx, [ebx+ecx*8]
lea     edx, [eax+eax*4]
mov     al, [ecx+1ch]
or      al, [esi+1ch]
lea     ebx, [ebx+edx*8]
mov     [ebp+var_d4], ebx
test    al, 1
jz      short loc_1002cc0f
mov     esi, ebx
call    sub_10024b20
jmp     def_1002bdde
call    sub_10024870
mov     ecx, esi
mov     [ebp+var_c8], eax
mov     [ebp+src], edx
call    sub_10024870
mov     ebx, eax
mov     esi, edx
mov     [ebp+var_b8], ebx
mov     dword ptr [ebp+var_b4], esi
mov     al, [edi]
mov     byte ptr [ebp+var_b4+4], al
cmp     al, 52h
jnz     short loc_1002cc54
and     [ebp+var_c8], ebx
and     [ebp+src], esi
jmp     loc_1002cd7b
cmp     al, 53h
jnz     short loc_1002cc69
or      [ebp+var_c8], ebx
or      [ebp+src], esi
jmp     loc_1002cd7b
mov     ecx, ebx
or      ecx, esi
jz      loc_1002cd7b
test    esi, esi
jg      short loc_1002ccb3
jl      short loc_1002cc7d
test    ebx, ebx
jnb     short loc_1002cca8
mov     dl, 0a9h
sub     dl, al
mov     al, dl
mov     byte ptr [ebp+var_b4+4], al
cmp     esi, 0ffffffffh
jl      short loc_1002cce0
jg      short loc_1002cc95
cmp     ebx, 0ffffffc0h
jbe     short loc_1002cce0
neg     ebx
adc     esi, 0
neg     esi
mov     [ebp+var_b8], ebx
mov     dword ptr [ebp+var_b4], esi
test    esi, esi
jl      short loc_1002cd07
jg      short loc_1002ccb3
cmp     ebx, 40h
jb      short loc_1002cd07
cmp     [ebp+src], 0
jg      short loc_1002ccf6
jl      short loc_1002ccc7
cmp     [ebp+var_c8], 0
jnb     short loc_1002ccf6
cmp     al, 54h
jz      short loc_1002ccf6
or      eax, 0ffffffffh
cdq
mov     [ebp+var_c8], eax
mov     [ebp+src], edx
jmp     loc_1002cd7b
mov     [ebp+var_b8], 40h
mov     dword ptr [ebp+var_b4], 0
jmp     short loc_1002ccb3
xor     eax, eax
cdq
mov     [ebp+var_c8], eax
mov     [ebp+src], edx
jmp     short loc_1002cd7b
mov     edx, [ebp+src]
cmp     al, 54h
mov     eax, [ebp+var_c8]
mov     ecx, ebx
jnz     short loc_1002cd24
call    __allshl
mov     esi, eax
mov     edi, edx
jmp     short loc_1002cd63
call    __aullshr
cmp     [ebp+src], 0
mov     esi, eax
mov     edi, edx
mov     [ebp+size], esi
mov     [ebp+var_bc], edi
jg      short loc_1002cd6f
jl      short loc_1002cd4d
cmp     [ebp+var_c8], 0
jnb     short loc_1002cd6f
mov     ecx, 40h
sub     ecx, ebx
or      eax, 0ffffffffh
or      edx, 0ffffffffh
call    __allshl
or      esi, eax
or      edi, edx
mov     [ebp+var_bc], edi
mov     [ebp+size], esi
mov     [ebp+var_c8], esi
mov     [ebp+src], edi
mov     eax, [ebp+var_d4]
mov     ecx, [ebp+var_c8]
mov     [eax+10h], ecx
mov     edx, [ebp+src]
mov     cx, [eax+1ch]
mov     [eax+14h], edx
mov     edx, 0bf04h
and     cx, dx
or      cx, 4
mov     [eax+1ch], cx
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [ebp+var_e4]
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*8]
call    sub_100249d0
mov     eax, [edi+8]
cdq
add     [esi+10h], eax
adc     [esi+14h], edx
jmp     def_1002bdde
mov     eax, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_e4]
lea     esi, [eax+edx*8]
call    sub_1002bab0
test    byte ptr [esi+1ch], 8
jz      short loc_1002cdee
call    sub_10024930
movzx   eax, word ptr [esi+1ch]
test    al, 4
jnz     short loc_1002ce0d
mov     edi, [edi+8]
test    edi, edi
jz      loc_1003169f
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
and     eax, 0bf04h
or      eax, 4
mov     [esi+1ch], ax
jmp     def_1002bdde
mov     edi, [edi+4]
lea     ecx, [edi+edi*4]
test    byte ptr [ebx+ecx*8+1ch], 4
lea     esi, [ebx+ecx*8]
jz      def_1002bdde
call    sub_10024a00
jmp     def_1002bdde
mov     edi, [edi+4]
lea     edx, [edi+edi*4]
movzx   eax, word ptr [ebx+edx*8+1ch]
lea     edi, [ebx+edx*8]
test    al, 1
jnz     def_1002bdde
mov     ecx, eax
shr     ecx, 3
and     ecx, 2
or      ecx, eax
mov     [edi+1ch], cx
test    cl, 2
jnz     short loc_1002ce78
test    cl, 0ch
jz      short loc_1002ce78
movzx   esi, byte ptr [ebp+var_ec]
mov     eax, edi
call    sub_10024640
mov     edx, 0fff3h
and     [edi+1ch], dx
movzx   eax, word ptr [edi+1ch]
test    eax, 4000h
jz      short loc_1002cea7
mov     eax, edi
call    sub_10024590
mov     [ebp+var_cc], eax
mov     eax, 0bfe3h
and     [edi+1ch], ax
jmp     def_1002bdde
mov     eax, 0bfe3h
and     [edi+1ch], ax
mov     [ebp+var_cc], 0
jmp     def_1002bdde
mov     edi, [edi+4]
lea     ecx, [edi+edi*4]
movzx   eax, word ptr [ebx+ecx*8+1ch]
lea     edi, [ebx+ecx*8]
test    al, 1
jnz     def_1002bdde
test    al, 10h
jnz     short loc_1002cf08
test    al, 2
jnz     short loc_1002ceef
test    al, 0ch
jz      short loc_1002ceef
movzx   esi, byte ptr [ebp+var_ec]
mov     eax, edi
call    sub_10024640
mov     dx, [edi+1ch]
mov     eax, 0bf10h
and     dx, ax
or      dx, 10h
mov     [edi+1ch], dx
jmp     def_1002bdde
and     eax, 0ff10h
mov     [edi+1ch], ax
jmp     def_1002bdde
mov     edi, [edi+4]
lea     ecx, [edi+edi*4]
lea     eax, [ebx+ecx*8]
call    sub_10024a60
jmp     def_1002bdde
mov     edi, [edi+4]
lea     edx, [edi+edi*4]
test    byte ptr [ebx+edx*8+1ch], 1
lea     esi, [ebx+edx*8]
jnz     def_1002bdde
call    sub_100249d0
jmp     def_1002bdde
mov     edi, [edi+4]
lea     eax, [edi+edi*4]
test    byte ptr [ebx+eax*8+1ch], 1
lea     esi, [ebx+eax*8]
jnz     def_1002bdde
call    sub_10024a00
jmp     def_1002bdde
mov     eax, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi+0ch]
lea     esi, [ebx+ecx*8]
mov     cx, [esi+1ch]
lea     edx, [eax+eax*4]
lea     eax, [ebx+edx*8]
mov     word ptr [ebp+src+2], cx
mov     dx, [eax+1ch]
mov     [ebp+var_e0], eax
mov     al, dl
mov     word ptr [ebp+size], dx
mov     dl, byte ptr [ebp+src+2]
mov     cl, al
or      cl, dl
test    cl, 1
jz      short loc_1002d002
mov     cl, [edi+3]
test    cl, cl
jns     short loc_1002cfbc
and     al, dl
test    al, 1
mov     eax, 0
setz    al
jmp     loc_1002d08f
test    cl, 10h
jz      short loc_1002cfea
mov     edi, [edi+8]
lea     edx, [edi+edi*4]
mov     cx, [ebx+edx*8+1ch]
lea     eax, [ebx+edx*8]
mov     edx, 0bf01h
and     cx, dx
or      cx, 1
mov     [ebp+var_d4], eax
mov     [eax+1ch], cx
jmp     def_1002bdde
test    cl, 8
jz      def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     al, [edi+3]
and     al, 67h
mov     byte ptr [ebp+src], al
jz      short loc_1002d04f
mov     ebx, [ebp+var_ec]
push    ebx
mov     edi, esi
call    sub_1002bb90
mov     al, byte ptr [ebp+src]
add     esp, 4
push    ebx
mov     ebx, [ebp+var_e0]
mov     edi, ebx
call    sub_1002bb90
mov     eax, [ebp+var_d0]
add     esp, 4
cmp     byte ptr [eax+32h], 0
jnz     loc_1002c2f4
mov     edi, [ebp+var_e8]
jmp     short loc_1002d055
mov     ebx, [ebp+var_e0]
mov     ecx, 4000h
test    [esi+1ch], cx
jz      short loc_1002d067
mov     eax, esi
call    sub_10024590
mov     edx, 4000h
test    [ebx+1ch], dx
jz      short loc_1002d079
mov     eax, ebx
call    sub_10024590
mov     eax, [edi+10h]
push    eax
mov     eax, esi
mov     ecx, ebx
call    sub_10025020
mov     ebx, [ebp+var_e4]
add     esp, 4
mov     [ebp+var_c8], eax
movzx   ecx, byte ptr [edi]
add     ecx, 0ffffffb5h
cmp     ecx, 4
ja      short def_1002d0a0
jmp     ds:jpt_1002d0a0[ecx*4]
xor     ecx, ecx
test    eax, eax
setz    cl
mov     eax, ecx
jmp     short loc_1002d0e3
xor     edx, edx
test    eax, eax
setnz   dl
jmp     short loc_1002d0e1
xor     ecx, ecx
test    eax, eax
sets    cl
mov     eax, ecx
jmp     short loc_1002d0e3
xor     edx, edx
test    eax, eax
setle   dl
jmp     short loc_1002d0e1
xor     ecx, ecx
test    eax, eax
setnle  cl
mov     eax, ecx
jmp     short loc_1002d0e3
xor     edx, edx
test    eax, eax
setns   dl
mov     eax, edx
mov     [ebp+var_c8], eax
test    byte ptr [edi+3], 10h
jz      short loc_1002d13d
mov     edi, [edi+8]
lea     eax, [edi+edi*4]
mov     cx, [ebx+eax*8+1ch]
lea     ebx, [ebx+eax*8]
mov     edx, 0bf04h
and     cx, dx
or      cx, 4
mov     [ebx+1ch], cx
mov     eax, [ebp+var_c8]
cdq
mov     [ebx+14h], edx
mov     edx, [ebp+var_e0]
mov     [ebx+10h], eax
mov     al, byte ptr [ebp+src+2]
mov     [esi+1ch], al
mov     cl, byte ptr [ebp+size]
mov     [ebp+var_d4], ebx
mov     [edx+1ch], cl
jmp     def_1002bdde
test    eax, eax
jz      short loc_1002d14b
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
mov     al, byte ptr [ebp+src+2]
mov     edx, [ebp+var_e0]
mov     [esi+1ch], al
mov     cl, byte ptr [ebp+size]
mov     [edx+1ch], cl
jmp     def_1002bdde
mov     eax, [edi+10h]
mov     [ebp+var_108], eax
jmp     def_1002bdde
mov     ecx, [edi+0ch]
mov     [ebp+var_c8], ecx
mov     esi, [edi+10h]
mov     [ebp+var_b8], esi
mov     edx, [edi+4]
mov     [ebp+size], edx
mov     eax, [edi+8]
mov     [ebp+var_bc], eax
xor     eax, eax
mov     [ebp+src], eax
test    ecx, ecx
jle     loc_1002d257
mov     ebx, [ebp+var_108]
mov     edi, [ebp+var_e4]
jmp     short loc_1002d1c6
jmp     short loc_1002d1c0
mov     esi, [ebp+var_b8]
test    ebx, ebx
jz      short loc_1002d1cf
mov     ecx, [ebx+eax*4]
jmp     short loc_1002d1d1
mov     ecx, eax
mov     dword ptr [ebp+var_b4], ecx
mov     edx, [esi+eax*4+0ch]
mov     dword ptr [ebp+var_b4+4], edx
mov     esi, [esi+8]
movzx   eax, byte ptr [esi+eax]
mov     [ebp+var_ac], eax
push    edx
mov     edx, [ebp+var_bc]
lea     eax, [ecx+edx]
add     ecx, [ebp+size]
lea     eax, [eax+eax*4]
lea     ecx, [ecx+ecx*4]
lea     eax, [edi+eax*8]
lea     ecx, [edi+ecx*8]
call    sub_10025020
add     esp, 4
mov     [ebp+var_100], eax
test    eax, eax
jnz     short loc_1002d240
mov     eax, [ebp+src]
inc     eax
mov     [ebp+src], eax
cmp     eax, [ebp+var_c8]
jl      short loc_1002d1c0
mov     [ebp+var_108], 0
jmp     def_1002bdde
cmp     [ebp+var_ac], 0
jz      short loc_1002d257
mov     edx, [ebp+var_100]
neg     edx
mov     [ebp+var_100], edx
mov     [ebp+var_108], 0
jmp     def_1002bdde
mov     eax, [ebp+var_100]
test    eax, eax
jns     short loc_1002d27f
mov     edi, [edi+4]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
jnz     short loc_1002d290
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     edi, [edi+0ch]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
test    byte ptr [ebx+eax*8+1ch], 1
lea     ecx, [ebx+eax*8]
jz      short loc_1002d2b6
mov     edx, 2
jmp     short loc_1002d2c8
call    sub_10024870
or      eax, edx
jz      short loc_1002d2c6
mov     edx, 1
jmp     short loc_1002d2c8
xor     edx, edx
mov     [ebp+var_c8], edx
mov     eax, [edi+8]
lea     ecx, [eax+eax*4]
test    byte ptr [ebx+ecx*8+1ch], 1
lea     ecx, [ebx+ecx*8]
jz      short loc_1002d2e5
mov     eax, 2
jmp     short loc_1002d2fd
call    sub_10024870
or      eax, edx
mov     edx, [ebp+var_c8]
jz      short loc_1002d2fb
mov     eax, 1
jmp     short loc_1002d2fd
xor     eax, eax
mov     [ebp+src], eax
cmp     byte ptr [edi], 45h
jnz     short loc_1002d315
lea     eax, [eax+edx*2]
movzx   eax, ds:byte_100767d0[edx+eax]
jmp     short loc_1002d320
lea     ecx, [eax+edx*2]
movzx   eax, ds:byte_100767dc[edx+ecx]
mov     [ebp+var_c8], eax
mov     edi, [edi+0ch]
lea     edx, [edi+edi*4]
lea     ebx, [ebx+edx*8]
mov     [ebp+var_d4], ebx
cmp     eax, 2
jnz     short loc_1002d353
mov     ax, [ebx+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [ebx+1ch], ax
jmp     def_1002bdde
cdq
mov     [ebx+14h], edx
mov     dx, [ebx+1ch]
mov     [ebx+10h], eax
mov     eax, 0bf04h
and     dx, ax
or      dx, 4
mov     [ebx+1ch], dx
jmp     def_1002bdde
mov     eax, [edi+4]
mov     edi, [edi+8]
lea     ecx, [eax+eax*4]
test    byte ptr [ebx+ecx*8+1ch], 1
lea     edx, [edi+edi*4]
lea     ecx, [ebx+ecx*8]
lea     esi, [ebx+edx*8]
mov     [ebp+var_d4], esi
jz      short loc_1002d39c
call    sub_10024b20
jmp     def_1002bdde
call    sub_10024870
or      eax, edx
jnz     short loc_1002d3ba
mov     eax, 1
cdq
push    edx
push    eax
call    sub_10024b70
add     esp, 8
jmp     def_1002bdde
xor     eax, eax
cdq
push    edx
push    eax
call    sub_10024b70
add     esp, 8
jmp     def_1002bdde
mov     eax, [edi+4]
mov     edi, [edi+8]
lea     eax, [eax+eax*4]
test    byte ptr [ebx+eax*8+1ch], 1
lea     edx, [edi+edi*4]
lea     ecx, [ebx+eax*8]
lea     esi, [ebx+edx*8]
mov     [ebp+var_d4], esi
jz      short loc_1002d3f5
call    sub_10024b20
jmp     def_1002bdde
call    sub_10024870
not     edx
not     eax
push    edx
push    eax
call    sub_10024b70
add     esp, 8
jmp     def_1002bdde
mov     eax, [esi+0bch]
mov     ecx, [edi+4]
cmp     byte ptr [eax+ecx], 0
jz      short loc_1002d42b
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     byte ptr [eax+ecx], 1
jmp     def_1002bdde
mov     eax, [edi+4]
lea     edx, [eax+eax*4]
test    byte ptr [ebx+edx*8+1ch], 1
lea     eax, [ebx+edx*8]
jz      short loc_1002d449
mov     eax, [edi+0ch]
jmp     short loc_1002d476
call    sub_100248e0
fldz
fucompp
fnstsw  ax
test    ah, 44h
jnp     short loc_1002d460
mov     eax, 1
jmp     short loc_1002d462
xor     eax, eax
mov     [ebp+var_c8], eax
cmp     byte ptr [edi], 1ch
jnz     short loc_1002d47c
xor     ecx, ecx
test    eax, eax
setz    cl
mov     eax, ecx
mov     [ebp+var_c8], eax
test    eax, eax
jz      def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+4]
lea     edx, [eax+eax*4]
test    byte ptr [ebx+edx*8+1ch], 1
jz      def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
test    byte ptr [ebx+eax*8+1ch], 1
jnz     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     ecx, [edi+4]
xor     eax, eax
mov     [ebp+var_bc], ecx
mov     edx, [edi+8]
mov     [ebp+var_b8], edx
mov     [ebp+var_8c], eax
mov     [ebp+var_88], eax
mov     [ebp+var_84], eax
mov     [ebp+var_80], eax
mov     [ebp+var_7c], eax
mov     [ebp+var_78], eax
mov     [ebp+var_74], eax
mov     [ebp+var_70], eax
mov     [ebp+var_6c], eax
mov     [ebp+var_68], eax
xor     edx, edx
mov     dword ptr [ebp+var_b4], edx
mov     eax, [edi+0ch]
lea     eax, [eax+eax*4]
lea     eax, [ebx+eax*8]
mov     [ebp+var_90], eax
mov     eax, [esi+40h]
mov     dword ptr [ebp+var_b4+4], edx
mov     eax, [eax+ecx*4]
mov     dword ptr [ebp+var_b4], eax
mov     ecx, [eax]
mov     [ebp+var_ac], ecx
cmp     ecx, edx
jz      loc_1002d5ff
mov     esi, eax
call    sub_10028480
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
mov     eax, dword ptr [ebp+var_b4]
cmp     byte ptr [eax+1ch], 0
jz      short loc_1002d574
mov     [ebp+var_c8], 0
jmp     short loc_1002d5cf
mov     ecx, [eax+4ch]
mov     edx, [ebp+var_dc]
cmp     ecx, [edx+50h]
jnz     short loc_1002d596
mov     ecx, [eax+50h]
mov     [ebp+var_c8], ecx
mov     edx, [eax+5ch]
mov     dword ptr [ebp+var_b4+4], edx
jmp     short loc_1002d5c5
cmp     byte ptr [eax+1fh], 0
mov     esi, [ebp+var_ac]
jz      short loc_1002d5ee
lea     edi, [ebp+src]
call    sub_1001d3b0
mov     eax, [ebp+src]
mov     edi, [ebp+var_e8]
mov     [ebp+var_c8], eax
mov     eax, dword ptr [ebp+var_b4]
mov     ecx, [ebp+var_c8]
test    ecx, ecx
jnz     short loc_1002d63e
mov     eax, [ebp+var_90]
mov     dx, [eax+1ch]
mov     ecx, 0bf01h
and     dx, cx
or      dx, 1
mov     [eax+1ch], dx
jmp     def_1002bdde
lea     ecx, [ebp+var_c8]
push    ecx
call    sub_1001d420
add     esp, 4
jmp     short loc_1002d5bf
mov     ecx, [eax+10h]
cmp     ecx, edx
jle     short loc_1002d636
lea     ecx, [ecx+ecx*4]
lea     ebx, [ebx+ecx*8]
mov     [ebp+var_48], ebx
mov     ecx, [ebx+18h]
mov     [ebp+var_c8], ecx
mov     ecx, [ebx+4]
mov     dword ptr [ebp+var_b4+4], ecx
test    byte ptr [edi+3], 20h
jz      short loc_1002d62e
xor     esi, esi
mov     [eax+4ch], esi
jmp     short loc_1002d5bf
mov     esi, [esi+50h]
mov     [eax+4ch], esi
jmp     short loc_1002d5bf
mov     [ebp+var_c8], edx
jmp     short loc_1002d5cf
mov     edx, [ebp+var_d0]
cmp     ecx, [edx+48h]
ja      loc_1002caea
mov     edx, [eax+14h]
mov     esi, [ebp+var_dc]
mov     dword ptr [ebp+var_a4+4], edx
mov     ecx, [eax+54h]
mov     [ebp+var_ac+4], ecx
mov     ebx, [eax+4ch]
cmp     ebx, [esi+50h]
jnz     short loc_1002d67b
mov     eax, [eax+58h]
mov     dword ptr [ebp+var_a4], eax
jmp     loc_1002d8b6
lea     ecx, [ecx+edx*4]
mov     dword ptr [ebp+var_a4], ecx
mov     [ebp+var_50], 0
mov     [eax+58h], ecx
mov     ecx, dword ptr [ebp+var_b4]
mov     edx, [ebp+var_c8]
mov     [ecx+50h], edx
mov     ecx, dword ptr [ebp+var_b4]
mov     eax, [esi+50h]
mov     [ecx+4ch], eax
mov     ecx, dword ptr [ebp+var_b4+4]
test    ecx, ecx
jz      short loc_1002d6bb
mov     [ebp+var_94], ecx
jmp     short loc_1002d71f
mov     edx, dword ptr [ebp+var_b4]
cmp     byte ptr [edx+1fh], 0
jz      short loc_1002d6d8
mov     esi, [ebp+var_ac]
lea     eax, [ebp+var_50]
push    eax
call    sub_1001dac0
jmp     short loc_1002d6e7
mov     eax, [ebp+var_ac]
lea     ecx, [ebp+var_50]
push    ecx
call    sub_1001db20
mov     edx, [ebp+var_c8]
add     esp, 4
mov     [ebp+var_94], eax
cmp     edx, [ebp+var_50]
ja      short loc_1002d70c
mov     ecx, dword ptr [ebp+var_b4]
mov     dword ptr [ebp+var_b4+4], eax
mov     [ecx+5ch], eax
jmp     short loc_1002d719
mov     edx, dword ptr [ebp+var_b4]
mov     dword ptr [edx+5ch], 0
mov     ecx, [ebp+var_94]
mov     al, [ecx]
cmp     al, 80h
jnb     short loc_1002d732
movzx   edx, al
mov     [ebp+var_5c], edx
mov     eax, 1
jmp     short loc_1002d746
lea     esi, [ebp+var_5c]
call    sub_1000c800
mov     edx, [ebp+var_5c]
mov     ecx, [ebp+var_94]
movzx   eax, al
movzx   eax, al
mov     [ebp+var_54], eax
cmp     edx, 18003h
jbe     short loc_1002d769
mov     eax, 100e5h
call    sub_10071c60
mov     [ebp+var_cc], eax
jmp     def_1002bdde
mov     esi, dword ptr [ebp+var_a4+4]
lea     ebx, [esi+esi*4+3]
mov     [ebp+var_9c], ebx
cmp     ebx, edx
jle     short loc_1002d785
mov     ebx, edx
mov     [ebp+var_9c], ebx
cmp     dword ptr [ebp+var_b4+4], 0
jnz     short loc_1002d7e8
cmp     [ebp+var_50], ebx
jge     short loc_1002d7e8
mov     edx, dword ptr [ebp+var_b4]
xor     ecx, ecx
mov     word ptr [ebp+var_70], cx
mov     [ebp+var_8c], ecx
movzx   eax, byte ptr [edx+1fh]
push    eax
push    ecx
mov     ecx, [ebp+var_ac]
lea     eax, [ebp+var_8c]
call    sub_100252a0
add     esp, 8
mov     [ebp+var_cc], eax
test    eax, eax
jnz     def_1002bdde
mov     ecx, [ebp+var_88]
mov     edx, [ebp+var_5c]
mov     ebx, [ebp+var_9c]
mov     esi, dword ptr [ebp+var_a4+4]
mov     [ebp+var_94], ecx
mov     eax, [ebp+var_54]
add     eax, ecx
add     ebx, ecx
mov     [ebp+var_64], eax
xor     eax, eax
mov     [ebp+var_60], ebx
mov     [ebp+var_98], eax
test    esi, esi
jle     short loc_1002d86d
mov     ecx, [ebp+var_60]
cmp     [ebp+var_64], ecx
mov     ecx, dword ptr [ebp+var_a4]
jnb     loc_1002d917
mov     [ecx+eax*4], edx
mov     ecx, [ebp+var_64]
mov     al, [ecx]
cmp     al, 80h
jnb     short loc_1002d82b
movzx   edx, al
inc     ecx
mov     [ebp+var_4c], edx
mov     [ebp+var_64], ecx
jmp     short loc_1002d839
lea     esi, [ebp+var_4c]
call    sub_1000c800
movzx   eax, al
add     [ebp+var_64], eax
mov     eax, [ebp+var_4c]
mov     ecx, [ebp+var_98]
mov     edx, [ebp+var_ac+4]
mov     [edx+ecx*4], eax
mov     eax, [ebp+var_4c]
call    sub_10028610
mov     edx, [ebp+var_5c]
add     edx, eax
mov     [ebp+var_58], eax
mov     [ebp+var_5c], edx
cmp     edx, eax
jnb     loc_1002d921
mov     edx, [ebp+var_60]
inc     edx
mov     [ebp+var_64], edx
lea     eax, [ebp+var_8c]
push    eax
call    sub_100247d0
mov     eax, [ebp+var_64]
mov     ecx, 1
mov     word ptr [ebp+var_70], cx
mov     ecx, [ebp+var_60]
add     esp, 4
cmp     eax, ecx
ja      loc_1002da85
mov     edx, [ebp+var_5c]
mov     esi, [ebp+var_c8]
cmp     edx, esi
ja      loc_1002da85
cmp     eax, ecx
jnz     short loc_1002d8b0
cmp     edx, esi
jnz     loc_1002da85
mov     ecx, [ebp+var_ac+4]
mov     edx, [ebp+var_b8]
mov     eax, dword ptr [ebp+var_a4]
cmp     dword ptr [eax+edx*4], 0
jz      loc_1002d9f7
cmp     dword ptr [ebp+var_b4+4], 0
jz      short loc_1002d93f
mov     eax, [ebp+var_90]
mov     esi, 2460h
test    [eax+1ch], si
jz      short loc_1002d8fd
call    sub_10024760
mov     eax, [ebp+var_90]
mov     ecx, [ebp+var_ac+4]
mov     edx, [ebp+var_b8]
mov     ecx, [ecx+edx*4]
push    ecx
mov     ecx, dword ptr [ebp+var_a4]
mov     ecx, [ecx+edx*4]
add     ecx, dword ptr [ebp+var_b4+4]
mov     esi, eax
jmp     loc_1002d9de
mov     dword ptr [ecx+eax*4], 0
mov     edx, [ebp+var_5c]
mov     eax, [ebp+var_98]
inc     eax
mov     [ebp+var_98], eax
cmp     eax, dword ptr [ebp+var_a4+4]
jl      loc_1002d801
jmp     loc_1002d86d
mov     eax, [ecx+edx*4]
mov     [ebp+var_4c], eax
mov     cl, [edi+3]
test    cl, 0c0h
jz      short loc_1002d969
cmp     eax, 0ch
jb      short loc_1002d956
test    al, 1
jz      short loc_1002d95a
test    cl, cl
jns     short loc_1002d969
cmp     eax, 0ch
sbb     ecx, ecx
lea     edx, [ebp+src]
and     ecx, edx
jmp     short loc_1002d9d1
call    sub_10028610
mov     ebx, [ebp+var_90]
mov     [ebp+var_9c], eax
lea     eax, [ebp+var_8c]
call    sub_10024e10
mov     eax, dword ptr [ebp+var_b4]
movzx   ecx, byte ptr [eax+1fh]
mov     eax, [ebp+var_b8]
mov     edx, dword ptr [ebp+var_a4]
mov     ebx, [ebp+var_9c]
push    ecx
mov     ecx, [edx+eax*4]
push    ecx
mov     ecx, [ebp+var_ac]
lea     eax, [ebp+var_8c]
call    sub_100252a0
add     esp, 8
mov     [ebp+var_cc], eax
test    eax, eax
jnz     def_1002bdde
mov     ecx, [ebp+var_88]
mov     eax, [ebp+var_4c]
mov     esi, [ebp+var_90]
mov     [ebp+var_94], ecx
push    eax
call    sub_100286e0
mov     edx, [ebp+var_90]
mov     al, byte ptr [ebp+var_ec]
add     esp, 4
mov     [edx+1fh], al
jmp     short loc_1002da30
cmp     byte ptr [edi+1], 0f8h
jnz     short loc_1002da16
mov     ecx, [edi+10h]
mov     ebx, [ebp+var_90]
push    800h
push    ecx
call    sub_10024d50
add     esp, 8
jmp     short loc_1002da30
mov     eax, [ebp+var_90]
mov     dx, [eax+1ch]
mov     ecx, 0bf01h
and     dx, cx
or      dx, 1
mov     [eax+1ch], dx
cmp     [ebp+var_68], 0
jz      short loc_1002da6f
mov     eax, [ebp+var_90]
mov     edx, 0e7ffh
and     [eax+1ch], dx
mov     eax, [ebp+var_90]
mov     ecx, 200h
or      [eax+1ch], cx
mov     edx, [ebp+var_90]
mov     eax, [ebp+var_88]
mov     [edx+4], eax
mov     ecx, [ebp+var_68]
mov     edx, [ebp+var_90]
mov     [edx+24h], ecx
mov     eax, [ebp+var_90]
call    sub_10024530
mov     [ebp+var_cc], eax
jmp     def_1002bdde
mov     eax, 10135h
call    sub_10071c60
mov     [ebp+var_cc], eax
jmp     def_1002bdde
mov     ecx, [edi+10h]
mov     [ebp+var_c8], ecx
mov     edi, [edi+4]
lea     eax, [edi+edi*4]
lea     edi, [ebx+eax*8]
mov     al, [ecx]
mov     byte ptr [ebp+src], al
test    al, al
jz      short loc_1002db03
jmp     short loc_1002dac0
inc     ecx
mov     [ebp+var_c8], ecx
mov     ecx, 4000h
test    [edi+1ch], cx
jz      short loc_1002dadf
mov     eax, edi
call    sub_10024590
mov     al, byte ptr [ebp+src]
mov     edx, [ebp+var_ec]
push    edx
call    sub_1002bb90
mov     ecx, [ebp+var_c8]
mov     al, [ecx]
add     esp, 4
add     edi, 28h
mov     byte ptr [ebp+src], al
test    al, al
jnz     short loc_1002dac0
inc     ecx
mov     [ebp+var_c8], ecx
jmp     def_1002bdde
xor     eax, eax
mov     [ebp+size], eax
mov     [ebp+var_bc], eax
mov     [ebp+var_b8], eax
mov     [ebp+var_ac], eax
mov     eax, [edi+4]
mov     [ebp+var_98], eax
mov     ecx, [edi+10h]
lea     edx, [eax+eax*4]
lea     eax, [ebx+edx*8]
movzx   edx, byte ptr [esi+61h]
mov     [ebp+var_94], ecx
mov     dword ptr [ebp+var_a4+4], eax
mov     ecx, [edi+8]
mov     [ebp+var_98], ecx
lea     ecx, [ecx+ecx*4]
lea     ecx, [eax+ecx*8-28h]
mov     [ebp+var_90], edx
mov     [ebp+var_9c], ecx
mov     edi, [edi+0ch]
lea     edx, [edi+edi*4]
lea     esi, [ebx+edx*8]
mov     edi, eax
mov     [ebp+var_d4], esi
mov     [ebp+src], edi
cmp     eax, ecx
ja      loc_1002dc67
cmp     [ebp+var_94], 0
jz      short loc_1002dbc6
mov     eax, [ebp+var_ec]
push    eax
mov     ecx, edi
sub     ecx, dword ptr [ebp+var_a4+4]
mov     eax, 66666667h
imul    ecx
sar     edx, 4
mov     ecx, edx
shr     ecx, 1fh
add     ecx, edx
mov     edx, [ebp+var_94]
mov     al, [ecx+edx]
call    sub_1002bb90
mov     edi, [ebp+src]
add     esp, 4
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_1002dbe4
cmp     dword ptr [edi+18h], 0
jle     short loc_1002dbe4
mov     eax, edi
call    sub_10024590
mov     edi, [ebp+src]
mov     ecx, [ebp+var_90]
push    ecx
mov     ecx, edi
call    sub_10028520
mov     ecx, eax
add     esp, 4
mov     dword ptr [ebp+var_a4], ecx
call    sub_10028610
mov     ebx, eax
cdq
add     [ebp+size], eax
push    0
push    ecx
adc     [ebp+var_bc], edx
mov     [ebp+var_88], ebx
call    sub_1000c870
add     [ebp+var_b8], eax
mov     edx, 4000h
add     esp, 8
test    [edi+1ch], dx
jz      short loc_1002dc3e
mov     eax, [edi+10h]
add     [ebp+var_ac], eax
jmp     short loc_1002dc4c
test    ebx, ebx
jz      short loc_1002dc4c
mov     [ebp+var_ac], 0
add     edi, 28h
mov     [ebp+src], edi
cmp     edi, [ebp+var_9c]
jbe     loc_1002db86
mov     esi, [ebp+var_d4]
mov     edi, [ebp+var_b8]
mov     eax, edi
cdq
push    edx
push    eax
call    sub_1000c870
mov     ebx, eax
add     edi, ebx
mov     eax, edi
cdq
push    edx
push    eax
mov     [ebp+var_ac+4], ebx
mov     [ebp+var_b8], edi
call    sub_1000c870
add     esp, 10h
cmp     ebx, eax
jge     short loc_1002dc9f
inc     edi
mov     [ebp+var_b8], edi
mov     eax, [ebp+var_ac]
cdq
mov     ebx, eax
mov     eax, edi
mov     [ebp+var_e0], edx
cdq
mov     edi, eax
mov     ecx, edx
mov     edx, [ebp+var_d0]
sub     edi, ebx
sbb     ecx, [ebp+var_e0]
add     edi, [ebp+size]
adc     ecx, [ebp+var_bc]
mov     dword ptr [ebp+var_b4], edi
mov     dword ptr [ebp+var_b4+4], ecx
mov     eax, [edx+48h]
cdq
cmp     ecx, edx
jg      loc_1002caea
jl      short loc_1002dcf1
cmp     edi, eax
ja      loc_1002caea
mov     eax, edi
push    0
mov     edi, esi
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     loc_1002c2f4
mov     eax, [ebp+var_b8]
mov     ecx, [esi+4]
mov     [ebp+var_c8], ecx
cmp     eax, 80h
jnb     short loc_1002dd26
mov     [ecx], al
mov     eax, 1
jmp     short loc_1002dd2b
call    sub_1000c650
mov     ecx, dword ptr [ebp+var_a4+4]
movzx   edi, al
mov     eax, [ebp+var_9c]
mov     [ebp+var_8c], edi
mov     [ebp+src], ecx
cmp     ecx, eax
ja      short loc_1002ddba
lea     ebx, [ebx+0]
mov     edx, [ebp+var_90]
push    edx
call    sub_10028520
add     esp, 4
mov     dword ptr [ebp+var_a4], eax
cmp     eax, 80h
jnb     short loc_1002dd7c
mov     ecx, [ebp+var_c8]
mov     [edi+ecx], al
mov     eax, 1
jmp     short loc_1002dd8a
mov     edx, [ebp+var_c8]
lea     ecx, [edi+edx]
call    sub_1000c650
mov     edi, [ebp+var_8c]
mov     ecx, [ebp+src]
movzx   eax, al
add     edi, eax
mov     eax, [ebp+var_9c]
add     ecx, 28h
mov     [ebp+var_8c], edi
mov     [ebp+src], ecx
cmp     ecx, eax
jbe     short loc_1002dd50
mov     ecx, dword ptr [ebp+var_a4+4]
mov     [ebp+src], ecx
cmp     ecx, eax
ja      short loc_1002de15
jmp     short loc_1002ddd0
mov     edx, dword ptr [ebp+var_b4]
mov     eax, [ebp+var_c8]
sub     edx, edi
lea     ebx, [edi+eax]
mov     eax, [ebp+var_90]
push    edx
call    sub_10028630
mov     ecx, [ebp+src]
mov     edi, [ebp+var_8c]
add     ecx, 28h
add     edi, eax
add     esp, 4
mov     [ebp+var_8c], edi
mov     [ebp+src], ecx
cmp     ecx, [ebp+var_9c]
jbe     short loc_1002ddd0
mov     ecx, dword ptr [ebp+var_b4]
mov     edx, 410h
mov     [esi+18h], ecx
mov     [esi+1ch], dx
mov     dword ptr [esi+20h], 0
mov     eax, [ebp+var_ac]
test    eax, eax
jz      short loc_1002de44
mov     [esi+10h], eax
mov     eax, 4410h
mov     [esi+1ch], ax
mov     byte ptr [esi+1fh], 1
jmp     def_1002bdde
mov     ecx, [edi+4]
mov     edx, [esi+40h]
mov     eax, [edx+ecx*4]
mov     eax, [eax]
xor     ecx, ecx
mov     [ebp+size], eax
cmp     eax, ecx
jz      short loc_1002de96
lea     ecx, [ebp+var_c8]
push    ecx
call    sub_100219e0
mov     edx, [ebp+var_c8]
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_d4]
mov     [eax+10h], edx
mov     ecx, [ebp+src]
add     esp, 4
mov     [eax+14h], ecx
jmp     def_1002bdde
mov     eax, [ebp+var_d4]
mov     [ebp+var_c8], ecx
mov     [ebp+src], ecx
mov     edx, ecx
mov     [eax+10h], edx
mov     ecx, [ebp+src]
mov     [eax+14h], ecx
jmp     def_1002bdde
mov     eax, [edi+4]
mov     [ebp+var_c8], eax
mov     ebx, [edi+10h]
mov     [ebp+src], ebx
test    eax, eax
jnz     loc_1002dfdc
mov     edx, [ebp+var_d0]
cmp     [edx+80h], eax
jle     short loc_1002df0a
mov     ebx, [ebp+var_dc]
push    offset acannotopensave
add     ebx, 34h
mov     esi, edx
call    sub_10009bf0
add     esp, 4
mov     [ebp+var_cc], 5
jmp     def_1002bdde
mov     ecx, ebx
call    sub_1000ba20
mov     [ebp+size], eax
mov     eax, edx
mov     ecx, [eax+1dch]
add     ecx, [eax+1d8h]
push    ecx
push    0
push    eax
call    sub_10063c40
add     esp, 0ch
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
mov     ecx, [ebp+size]
mov     esi, [ebp+var_d0]
add     ecx, 11h
call    sub_10009a40
mov     [ebp+var_bc], eax
test    eax, eax
jz      def_1002bdde
lea     edx, [eax+10h]
mov     [eax], edx
mov     eax, [ebp+size]
mov     ecx, [ebp+src]
mov     edx, [ebp+var_bc]
inc     eax
push    eax
mov     eax, [edx]
push    ecx
push    eax
call    memcpy
mov     eax, esi
add     esp, 0ch
cmp     byte ptr [eax+30h], 0
jz      short loc_1002df98
mov     byte ptr [eax+30h], 0
mov     byte ptr [eax+37h], 1
jmp     short loc_1002df9e
inc     dword ptr [eax+1d8h]
mov     ecx, [eax+1d0h]
mov     edx, [ebp+var_bc]
mov     [edx+0ch], ecx
mov     ecx, [ebp+var_bc]
mov     edx, [eax+1e0h]
mov     [eax+1d0h], ecx
mov     ecx, [ebp+var_bc]
mov     [ecx+4], edx
mov     edx, [eax+1e4h]
mov     eax, [ebp+var_bc]
mov     [eax+8], edx
jmp     def_1002bdde
mov     ecx, [ebp+var_d0]
mov     dword ptr [ebp+var_b4+4], 0
mov     edi, [ecx+1d0h]
mov     [ebp+var_b8], edi
test    edi, edi
jz      short loc_1002e020
lea     esp, [esp+0]
mov     ecx, [edi]
mov     edx, ebx
call    sub_1000bca0
test    eax, eax
jz      short loc_1002e04c
inc     dword ptr [ebp+var_b4+4]
mov     edi, [edi+0ch]
mov     [ebp+var_b8], edi
test    edi, edi
jnz     short loc_1002e000
mov     esi, [ebp+var_d0]
push    ebx
mov     ebx, [ebp+var_dc]
push    offset anosuchsavepoin
add     ebx, 34h
call    sub_10009bf0
add     esp, 8
mov     [ebp+var_cc], 1
jmp     def_1002bdde
mov     ebx, [ebp+var_d0]
cmp     dword ptr [ebx+80h], 0
mov     eax, [ebp+var_c8]
jle     short loc_1002e091
cmp     eax, 1
jnz     short loc_1002e091
mov     ebx, [ebp+var_dc]
mov     esi, [ebp+var_d0]
push    offset acannotreleases
add     ebx, 34h
call    sub_10009bf0
add     esp, 4
mov     [ebp+var_cc], 5
jmp     def_1002bdde
cmp     dword ptr [edi+0ch], 0
jnz     loc_1002e177
cmp     byte ptr [ebx+37h], 0
jz      loc_1002e177
mov     [ebp+var_e0], 1
cmp     eax, 1
jnz     loc_1002e181
push    eax
mov     eax, esi
call    sub_100278f0
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     loc_1002cb9e
mov     eax, esi
mov     byte ptr [ebx+30h], 1
call    sub_10027960
cmp     eax, 5
jz      loc_100316ae
mov     byte ptr [ebx+37h], 0
mov     edx, [esi+58h]
mov     edi, [ebp+var_b8]
mov     [ebp+var_cc], edx
mov     esi, ebx
cmp     [esi+1d0h], edi
jz      short loc_1002e136
mov     edi, edi
mov     eax, [esi+1d0h]
mov     dword ptr [ebp+var_b4], eax
mov     eax, [eax+0ch]
mov     [esi+1d0h], eax
mov     eax, dword ptr [ebp+var_b4]
mov     ecx, esi
call    sub_10009810
dec     dword ptr [esi+1d8h]
mov     edi, [ebp+var_b8]
cmp     [esi+1d0h], edi
jnz     short loc_1002e100
cmp     [ebp+var_c8], 1
jnz     loc_1002e274
mov     ecx, [edi+0ch]
mov     [esi+1d0h], ecx
mov     eax, [ebp+var_b8]
mov     ecx, esi
call    sub_10009810
cmp     [ebp+var_e0], 0
jnz     def_1002bdde
mov     eax, [ebp+var_d0]
dec     dword ptr [eax+1d8h]
jmp     loc_1002e299
mov     [ebp+var_e0], 0
mov     ecx, [ebx+1d8h]
sub     ecx, dword ptr [ebp+var_b4+4]
dec     ecx
mov     dword ptr [ebp+var_b4+4], ecx
cmp     eax, 2
jnz     short loc_1002e1d8
xor     eax, eax
mov     [ebp+var_ac], eax
cmp     [ebx+14h], eax
jle     short loc_1002e1d8
mov     ecx, [ebx+10h]
add     eax, eax
mov     edx, [ecx+eax*8+4]
push    4
push    edx
call    sub_1001ce20
mov     eax, [ebp+var_ac]
inc     eax
add     esp, 8
mov     [ebp+var_ac], eax
cmp     eax, [ebx+14h]
jl      short loc_1002e1a6
mov     ecx, dword ptr [ebp+var_b4+4]
mov     edi, [ebp+var_b8]
xor     eax, eax
mov     [ebp+var_ac], eax
cmp     [ebx+14h], eax
jle     short loc_1002e237
mov     edx, ebx
jmp     short loc_1002e1f6
mov     ecx, dword ptr [ebp+var_b4+4]
mov     edx, [edx+10h]
push    ecx
mov     ecx, [ebp+var_c8]
add     eax, eax
mov     eax, [edx+eax*8+4]
push    ecx
call    sub_1001d140
add     esp, 8
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
mov     eax, [ebp+var_ac]
inc     eax
mov     edx, ebx
mov     [ebp+var_ac], eax
cmp     eax, [edx+14h]
jl      short loc_1002e1f0
mov     edi, [ebp+var_b8]
cmp     [ebp+var_c8], 2
jnz     loc_1002e0f4
mov     esi, [ebp+var_d0]
mov     ebx, 200h
test    [esi+18h], ebx
jz      loc_1002e0f6
mov     eax, esi
call    sub_10028ef0
mov     eax, esi
call    sub_1003fad0
or      [esi+18h], ebx
mov     edi, [ebp+var_b8]
jmp     loc_1002e0f6
cmp     [ebp+var_e0], 0
mov     edx, [edi+4]
mov     [esi+1e0h], edx
mov     eax, [edi+8]
mov     [esi+1e4h], eax
jnz     def_1002bdde
mov     eax, [ebp+var_d0]
mov     ecx, dword ptr [ebp+var_b4+4]
mov     edx, [ebp+var_c8]
push    ecx
push    edx
push    eax
call    sub_10063c40
add     esp, 0ch
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [ebp+var_d0]
mov     [ebp+var_c8], eax
mov     edi, [edi+8]
mov     [ebp+src], edi
test    eax, eax
jz      short loc_1002e322
cmp     byte ptr [ecx+30h], 0
jnz     short loc_1002e322
mov     [ebp+size], 1
test    edi, edi
jnz     short loc_1002e32c
cmp     [ecx+80h], edi
jle     short loc_1002e32c
mov     ebx, [ebp+var_dc]
push    offset acannotcommittr
add     ebx, 34h
mov     esi, ecx
call    sub_10009bf0
add     esp, 4
mov     [ebp+var_cc], 5
jmp     def_1002bdde
mov     [ebp+size], 0
movzx   ecx, byte ptr [ecx+30h]
cmp     eax, ecx
jnz     loc_100316c8
test    eax, eax
jnz     short loc_1002e343
mov     eax, offset acannotstartatr
jmp     short loc_1002e351
mov     eax, offset acannotrollback
test    edi, edi
jnz     short loc_1002e351
mov     eax, offset acannotcommitno
mov     ebx, [ebp+var_dc]
mov     esi, [ebp+var_d0]
push    eax
add     ebx, 34h
call    sub_10009bf0
add     esp, 4
mov     [ebp+var_cc], 1
jmp     def_1002bdde
mov     edx, [edi+4]
mov     eax, [ebp+var_d0]
mov     ecx, [eax+10h]
add     edx, edx
mov     eax, [ecx+edx*8+4]
mov     [ebp+var_c8], eax
test    eax, eax
jz      def_1002bdde
mov     edx, [edi+8]
push    edx
push    eax
call    sub_1001be00
add     esp, 8
mov     [ebp+var_cc], eax
cmp     eax, 5
jz      loc_10031757
test    eax, eax
jnz     loc_10031789
cmp     [edi+8], eax
jz      def_1002bdde
mov     eax, [ebp+var_dc]
cmp     byte ptr [eax+63h], 0
jz      def_1002bdde
mov     esi, [ebp+var_d0]
cmp     byte ptr [esi+30h], 0
jz      short loc_1002e3eb
cmp     dword ptr [esi+7ch], 1
jle     def_1002bdde
mov     edi, eax
cmp     dword ptr [edi+74h], 0
jnz     short loc_1002e408
mov     ecx, [esi+1d8h]
inc     dword ptr [esi+1dch]
add     ecx, [esi+1dch]
mov     [edi+74h], ecx
mov     edx, [edi+74h]
dec     edx
push    edx
push    0
push    esi
call    sub_10063c40
add     esp, 0ch
mov     [ebp+var_cc], eax
test    eax, eax
jnz     short loc_1002e43a
mov     eax, [edi+74h]
push    eax
mov     eax, [ebp+var_c8]
call    sub_1001d0f0
add     esp, 4
mov     [ebp+var_cc], eax
mov     ecx, [esi+1e0h]
mov     [edi+94h], ecx
mov     edx, [esi+1e4h]
mov     [edi+98h], edx
jmp     def_1002bdde
mov     eax, [edi+4]
mov     edx, [ebp+var_d0]
mov     [ebp+src], eax
mov     edi, [edi+0ch]
lea     ecx, [ebp+var_c8]
mov     [ebp+size], edi
push    ecx
mov     ecx, [edx+10h]
add     eax, eax
mov     eax, [ecx+eax*8+4]
push    edi
call    sub_100218e0
mov     eax, [ebp+var_c8]
mov     ecx, [ebp+var_d4]
cdq
add     esp, 8
mov     [ecx+10h], eax
mov     [ecx+14h], edx
jmp     def_1002bdde
mov     edx, [edi+4]
mov     ebx, [ebp+var_d0]
mov     ecx, [ebp+var_e4]
shl     edx, 4
add     edx, [ebx+10h]
mov     [ebp+var_c8], edx
mov     eax, [edi+0ch]
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*8]
call    sub_100249d0
mov     edx, [esi+10h]
mov     eax, [edi+8]
mov     ecx, [ebp+var_c8]
push    edx
push    eax
mov     eax, [ecx+4]
call    sub_10021950
mov     [ebp+var_cc], eax
mov     eax, [edi+8]
add     esp, 8
cmp     eax, 1
jnz     short loc_1002e507
mov     edx, [ebp+var_c8]
mov     eax, [edx+0ch]
mov     ecx, [esi+10h]
mov     [eax], ecx
or      dword ptr [ebx+18h], 200h
jmp     short loc_1002e51b
cmp     eax, 2
jnz     short loc_1002e51b
mov     edx, [ebp+var_c8]
mov     eax, [edx+0ch]
mov     cl, [esi+10h]
mov     [eax+4ch], cl
cmp     dword ptr [edi+4], 1
jnz     def_1002bdde
mov     eax, ebx
call    sub_10028ef0
mov     edx, [ebp+var_dc]
mov     byte ptr [edx+5fh], 0
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [ebp+var_d0]
mov     edx, [ecx+10h]
add     eax, eax
mov     eax, [edx+eax*8+4]
mov     [ebp+size], eax
test    eax, eax
jz      short loc_1002e57f
lea     ecx, [ebp+var_c8]
push    ecx
push    1
call    sub_100218e0
mov     eax, [ebp+var_d0]
mov     edx, [edi+4]
mov     ecx, [eax+10h]
add     esp, 8
add     edx, edx
mov     edx, [ecx+edx*8+0ch]
mov     eax, [edx+4]
jmp     short loc_1002e58b
mov     [ebp+var_c8], 0
xor     eax, eax
mov     ecx, [ebp+var_c8]
mov     [ebp+src], eax
cmp     ecx, [edi+8]
jnz     short loc_1002e5a5
cmp     eax, [edi+0ch]
jz      def_1002bdde
mov     ebx, [ebp+var_d0]
mov     eax, [esi+34h]
mov     ecx, ebx
call    sub_10009810
push    ebx
mov     ebx, offset adatabaseschema
call    sub_10009b70
mov     [esi+34h], eax
mov     edi, [edi+4]
mov     eax, [ebp+var_d0]
mov     ecx, [eax+10h]
mov     edx, edi
add     edx, edx
mov     edx, [ecx+edx*8+0ch]
mov     eax, [edx]
add     esp, 4
cmp     eax, [ebp+var_c8]
jz      short loc_1002e5f7
mov     esi, edi
mov     edi, [ebp+var_d0]
call    sub_1003faa0
mov     esi, [ebp+var_dc]
mov     byte ptr [esi+5fh], 1
mov     [ebp+var_cc], 11h
jmp     def_1002bdde
cmp     byte ptr [esi+5fh], 0
jz      short loc_1002e61f
mov     [ebp+var_cc], 4
jmp     def_1002bdde
mov     ebx, [ebp+var_d0]
xor     ecx, ecx
mov     [ebp+var_c8], ecx
mov     [ebp+src], ecx
mov     edx, [edi+8]
mov     [ebp+size], edx
mov     eax, [edi+0ch]
mov     [ebp+var_bc], eax
shl     eax, 4
add     eax, [ebx+10h]
mov     [ebp+var_ac], eax
mov     ebx, [eax+4]
mov     dword ptr [ebp+var_b4], ebx
cmp     byte ptr [edi], 28h
jnz     short loc_1002e679
mov     [ebp+var_b8], 1
mov     eax, [eax+0ch]
mov     al, [eax+4ch]
cmp     al, [esi+61h]
jnb     short loc_1002e67f
mov     [esi+61h], al
jmp     short loc_1002e67f
mov     [ebp+var_b8], ecx
test    byte ptr [edi+3], 2
jz      short loc_1002e6ae
lea     ecx, [edx+edx*4]
mov     edx, [ebp+var_e4]
lea     esi, [edx+ecx*8]
call    sub_100249d0
mov     esi, [esi+10h]
mov     [ebp+size], esi
cmp     esi, 2
jl      loc_1003176d
mov     ecx, [ebp+var_c8]
mov     al, [edi+1]
cmp     al, 0fah
jnz     short loc_1002e6df
mov     ecx, [ebp+var_dc]
mov     edx, [ecx]
mov     eax, [edi+10h]
mov     [ebp+src], eax
mov     ecx, [edx+10h]
mov     edx, [ecx+0ch]
mov     cl, [edx+4dh]
mov     [eax+4], cl
mov     edx, [ebp+src]
movzx   ecx, word ptr [edx+6]
inc     ecx
jmp     short loc_1002e6e6
cmp     al, 0f2h
jnz     short loc_1002e6ec
mov     ecx, [edi+10h]
mov     [ebp+var_c8], ecx
mov     eax, [ebp+var_bc]
mov     edx, [ebp+var_dc]
push    1
push    eax
push    ecx
mov     ecx, [edi+4]
push    ecx
push    edx
call    sub_1002b990
add     esp, 14h
mov     dword ptr [ebp+var_b4+4], eax
test    eax, eax
jz      loc_1002c2f4
mov     byte ptr [eax+1ch], 1
mov     eax, dword ptr [ebp+var_b4+4]
mov     byte ptr [eax+20h], 1
mov     ecx, [ebp+src]
mov     edx, [ebp+size]
mov     eax, dword ptr [ebp+var_b4+4]
mov     eax, [eax]
mov     ebx, [ebp+var_b8]
push    ecx
mov     ecx, dword ptr [ebp+var_b4]
push    edx
call    sub_1001d1f0
mov     ecx, dword ptr [ebp+var_b4+4]
mov     edx, [ebp+src]
mov     [ecx+8], edx
mov     ecx, dword ptr [ebp+var_b4+4]
mov     edx, [ecx]
mov     [ebp+var_cc], eax
mov     al, [edi+3]
and     al, 1
mov     [edx+55h], al
mov     ecx, dword ptr [ebp+var_b4+4]
add     esp, 8
cmp     byte ptr [edi+1], 0fah
setnz   al
mov     [ecx+1eh], al
mov     eax, dword ptr [ebp+var_b4+4]
cmp     byte ptr [eax+1eh], 0
setz    dl
mov     [eax+1fh], dl
jmp     def_1002bdde
mov     eax, [edi+8]
mov     ecx, [edi+4]
push    1
push    0ffffffffh
push    eax
push    ecx
push    esi
call    sub_1002b990
add     esp, 14h
mov     [ebp+var_c8], eax
test    eax, eax
jz      loc_1002c2f4
mov     byte ptr [eax+1ch], 1
movzx   edx, byte ptr [edi+3]
mov     ecx, [ebp+var_c8]
push    41eh
or      edx, 5
push    edx
mov     edx, [ebp+var_d0]
mov     eax, [edx]
push    0
add     ecx, 4
push    eax
call    sub_1001adc0
add     esp, 10h
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_1002e8cf
mov     ecx, [ebp+var_c8]
mov     edx, [ecx+4]
push    1
push    edx
call    sub_1001be00
add     esp, 8
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_1002e8cf
cmp     [edi+10h], eax
jz      loc_1002e8a4
movzx   eax, byte ptr [edi+3]
mov     edx, [ebp+var_c8]
or      eax, 2
push    eax
mov     eax, [edx+4]
lea     ecx, [ebp+var_114]
push    ecx
call    sub_10021280
add     esp, 8
mov     [ebp+var_cc], eax
test    eax, eax
jnz     short loc_1002e898
mov     eax, [edi+10h]
mov     ecx, [ebp+var_114]
push    eax
push    ecx
mov     ecx, [ebp+var_c8]
mov     eax, [ecx]
mov     ecx, [ecx+4]
mov     ebx, 1
call    sub_1001d1f0
mov     edx, [edi+10h]
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_c8]
mov     [eax+8], edx
mov     ecx, [esi]
mov     edx, [ecx+10h]
mov     eax, [edx+0ch]
mov     ecx, [ebp+var_c8]
mov     edx, [ecx+8]
mov     al, [eax+4dh]
add     esp, 8
mov     [edx+4], al
mov     ecx, [ebp+var_c8]
mov     byte ptr [ecx+1eh], 0
jmp     short loc_1002e8cf
mov     ecx, [ebp+var_c8]
mov     eax, [ecx]
mov     ecx, [ecx+4]
push    0
push    1
mov     ebx, 1
call    sub_1001d1f0
mov     edx, [ebp+var_c8]
add     esp, 8
mov     [ebp+var_cc], eax
mov     [edx+1eh], bl
cmp     byte ptr [edi+3], 8
mov     ecx, [ebp+var_c8]
setnz   al
mov     [ecx+20h], al
mov     eax, [ebp+var_c8]
cmp     byte ptr [eax+1eh], 0
setz    dl
mov     [eax+1fh], dl
jmp     def_1002bdde
mov     eax, [edi+8]
mov     ecx, [edi+4]
push    1
push    0ffffffffh
push    eax
push    ecx
push    esi
call    sub_1002b990
add     esp, 14h
mov     [ebp+var_c8], eax
test    eax, eax
jz      loc_1002c2f4
mov     edx, [edi+10h]
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+10h]
mov     edx, [ecx+0ch]
mov     eax, [ebp+var_c8]
mov     ecx, [eax+8]
mov     dl, [edx+4dh]
mov     [ecx+4], dl
mov     eax, [ebp+var_c8]
mov     ecx, [ebp+var_d0]
mov     byte ptr [eax+21h], 1
mov     eax, [ebp+var_c8]
push    ecx
call    sub_10032df0
add     esp, 4
mov     [ebp+var_cc], eax
jmp     def_1002bdde
mov     edx, [edi+0ch]
mov     eax, [edi+4]
push    0
push    0ffffffffh
push    edx
push    eax
push    esi
call    sub_1002b990
add     esp, 14h
mov     [ebp+var_c8], eax
test    eax, eax
jz      loc_1002c2f4
mov     byte ptr [eax+1ch], 1
mov     ecx, [edi+8]
mov     edx, [ebp+var_c8]
mov     [edx+10h], ecx
mov     eax, [ebp+var_c8]
mov     byte ptr [eax+1eh], 1
mov     ecx, [ebp+var_c8]
mov     byte ptr [ecx+1fh], 0
jmp     def_1002bdde
mov     edx, [edi+4]
mov     eax, [esi+40h]
mov     eax, [eax+edx*4]
push    esi
call    sub_10026e40
mov     ecx, [edi+4]
mov     edx, [esi+40h]
add     esp, 4
mov     dword ptr [edx+ecx*4], 0
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [esi+40h]
mov     eax, [ecx+eax*4]
mov     [ebp+size], eax
cmp     dword ptr [eax], 0
jz      loc_1002bdf9
movzx   edx, byte ptr [edi]
mov     [ebp+src], edx
mov     byte ptr [eax+1ch], 0
mov     ecx, [ebp+size]
cmp     byte ptr [ecx+1eh], 0
jz      loc_1002ebda
mov     eax, [edi+0ch]
mov     ecx, [ebp+var_e4]
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*8]
call    sub_1002bab0
mov     ecx, esi
call    sub_10024870
mov     dword ptr [ebp+var_a4+4], edx
mov     edx, [ebp+size]
mov     dword ptr [ebp+var_a4], eax
mov     byte ptr [edx+19h], 0
movzx   eax, word ptr [esi+1ch]
test    al, 4
jnz     loc_1002eb69
test    al, 8
jnz     short loc_1002ea53
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
xor     ebx, ebx
cmp     dword ptr [ebp+var_a4], ebx
jnz     loc_1002eb19
mov     eax, 80000000h
cmp     dword ptr [ebp+var_a4+4], eax
jnz     loc_1002eb19
mov     dword ptr [ebp+var_128+4], eax
mov     dword ptr [ebp+var_128], ebx
fild    [ebp+var_128]
fcomp   qword ptr [esi+8]
fnstsw  ax
test    ah, 41h
jz      short loc_1002ea9a
fldz
fcomp   qword ptr [esi+8]
fnstsw  ax
test    ah, 5
jp      short loc_1002eb19
fldz
mov     [ebp+var_c8], 1
fcomp   qword ptr [esi+8]
fnstsw  ax
test    ah, 41h
jnz     short loc_1002eace
cmp     [ebp+src], 30h
jl      short loc_1002eb0a
mov     eax, [ebp+size]
mov     esi, [eax]
lea     edi, [ebp+var_c8]
call    sub_1001df10
jmp     short loc_1002eaea
cmp     [ebp+src], 2fh
jg      short loc_1002eb0a
mov     ecx, [ebp+size]
mov     esi, [ecx]
lea     edi, [ebp+var_c8]
call    sub_1001df40
mov     [ebp+var_cc], eax
cmp     eax, ebx
jnz     loc_10031789
cmp     [ebp+var_c8], ebx
jz      def_1002bdde
mov     edi, [ebp+var_e8]
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [ebp+src]
cmp     eax, 2eh
jz      short loc_1002eb4a
cmp     eax, 30h
jz      short loc_1002eb4a
fild    [ebp+var_a4]
fcomp   qword ptr [esi+8]
fnstsw  ax
test    ah, 41h
jnz     short loc_1002eb6b
or      eax, 0ffffffffh
add     dword ptr [ebp+var_a4], eax
adc     dword ptr [ebp+var_a4+4], eax
jmp     short loc_1002eb6b
fild    [ebp+var_a4]
fcomp   qword ptr [esi+8]
fnstsw  ax
test    ah, 5
jp      short loc_1002eb6b
add     dword ptr [ebp+var_a4], 1
adc     dword ptr [ebp+var_a4+4], ebx
jmp     short loc_1002eb6b
xor     ebx, ebx
mov     eax, dword ptr [ebp+var_a4+4]
mov     ecx, dword ptr [ebp+var_a4]
lea     edx, [ebp+var_c8]
push    edx
mov     edx, [ebp+size]
push    ebx
push    eax
mov     eax, [edx]
push    ecx
push    ebx
push    eax
call    sub_1001df80
add     esp, 18h
mov     [ebp+var_cc], eax
cmp     eax, ebx
jnz     loc_10031789
cmp     [ebp+var_c8], ebx
jnz     loc_1002ec5f
mov     ecx, [ebp+size]
mov     byte ptr [ecx+19h], 1
mov     edx, dword ptr [ebp+var_a4]
mov     eax, [ebp+size]
mov     [eax+3ch], edx
mov     ecx, dword ptr [ebp+var_a4+4]
mov     edx, [ebp+size]
mov     [edx+40h], ecx
jmp     loc_1002ec5f
mov     eax, [edi+10h]
mov     [ebp+var_ac+4], eax
mov     edx, [ecx+8]
mov     [ebp+var_bc], edx
mov     dl, byte ptr [ebp+src]
and     dl, 1
mov     word ptr [ebp+var_b8], ax
mov     byte ptr [ebp+var_b8+2], dl
mov     eax, [edi+0ch]
lea     eax, [eax+eax*4]
lea     eax, [ebx+eax*8]
mov     edx, 4000h
mov     [ebp+var_ac], eax
test    [eax+1ch], dx
jz      short loc_1002ec27
call    sub_10024590
mov     ecx, [ebp+size]
lea     eax, [ebp+var_c8]
push    eax
mov     eax, [ecx]
push    0
push    0
push    0
lea     edx, [ebp+var_bc]
push    edx
push    eax
call    sub_1001df80
add     esp, 18h
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
mov     ecx, [ebp+size]
mov     [ecx+19h], al
xor     ebx, ebx
mov     edx, [ebp+size]
mov     byte ptr [edx+1dh], 0
mov     eax, [ebp+size]
mov     [eax+4ch], ebx
mov     ecx, [ebp+src]
mov     eax, [ebp+var_c8]
cmp     ecx, 30h
jl      short loc_1002eccb
cmp     eax, ebx
jl      short loc_1002ec99
jnz     short loc_1002ec8e
cmp     ecx, 31h
jz      short loc_1002ec99
mov     [ebp+var_c8], ebx
jmp     def_1002bdde
mov     edx, [ebp+size]
mov     eax, [edx]
lea     ecx, [ebp+var_c8]
push    ecx
push    eax
call    sub_1001e350
add     esp, 8
mov     [ebp+var_cc], eax
cmp     eax, ebx
jnz     loc_10031789
mov     ecx, [ebp+size]
mov     byte ptr [ecx+19h], 0
jmp     short loc_1002ed1f
cmp     eax, ebx
jg      short loc_1002ecef
jnz     short loc_1002ecd6
cmp     ecx, 2eh
jz      short loc_1002ecef
mov     edx, [ebp+size]
mov     eax, [edx]
xor     ecx, ecx
cmp     byte ptr [eax+53h], 1
setnz   cl
mov     [ebp+var_c8], ecx
jmp     short loc_1002ed1f
mov     eax, [ebp+size]
mov     ecx, [eax]
lea     edx, [ebp+var_c8]
push    edx
push    ecx
call    sub_1001e4e0
add     esp, 8
mov     [ebp+var_cc], eax
cmp     eax, ebx
jnz     loc_10031789
mov     edx, [ebp+size]
mov     byte ptr [edx+19h], 0
cmp     [ebp+var_c8], ebx
jz      def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [esi+40h]
mov     eax, [ecx+eax*4]
mov     [ebp+var_c8], eax
cmp     dword ptr [eax], 0
jz      def_1002bdde
mov     byte ptr [eax+1ch], 0
mov     edi, [edi+8]
lea     edx, [edi+edi*4]
lea     ecx, [ebx+edx*8]
call    sub_10024870
mov     ecx, [ebp+var_c8]
mov     [ecx+34h], eax
mov     eax, [ebp+var_c8]
mov     [eax+38h], edx
mov     ecx, [ebp+var_c8]
mov     byte ptr [ecx+19h], 0
mov     edx, [ebp+var_c8]
mov     byte ptr [edx+1dh], 1
jmp     def_1002bdde
mov     ecx, [esi+40h]
xor     edx, edx
mov     [ebp+var_c8], edx
mov     eax, [edi+4]
mov     eax, [ecx+eax*4]
mov     [ebp+src], eax
mov     ecx, [edi+0ch]
lea     ecx, [ecx+ecx*4]
lea     esi, [ebx+ecx*8]
cmp     [eax], edx
jz      loc_1002eeb6
cmp     [edi+10h], edx
jle     short loc_1002edeb
mov     edx, [eax+8]
mov     dword ptr [ebp+var_b4], edx
mov     cx, [edi+10h]
lea     edx, [ebp+var_b4]
mov     word ptr [ebp+var_b4+4], cx
mov     dword ptr [ebp+var_a4], esi
mov     byte ptr [ebp+var_b4+6], 2
mov     [ebp+var_b8], edx
jmp     short loc_1002ee46
mov     edi, [eax+8]
push    97h
lea     ebx, [ebp+var_bc]
lea     edx, [ebp+var_a4+4]
call    sub_10028910
add     esp, 4
mov     [ebp+var_b8], eax
test    eax, eax
jz      loc_1002c2f4
mov     ecx, [esi+18h]
mov     edx, [ebp+src]
push    eax
mov     eax, [esi+4]
push    eax
mov     eax, [edx+8]
push    ecx
push    eax
call    sub_10028960
mov     eax, [ebp+var_b8]
mov     edi, [ebp+var_e8]
add     esp, 10h
or      byte ptr [eax+6], 2
mov     eax, [ebp+src]
mov     edx, [ebp+var_b8]
mov     eax, [eax]
lea     ecx, [ebp+size]
push    ecx
push    0
push    0
push    0
push    edx
push    eax
call    sub_1001df80
add     esp, 18h
cmp     dword ptr [edi+10h], 0
mov     esi, eax
mov     [ebp+var_cc], esi
jnz     short loc_1002ee84
mov     eax, [ebp+var_bc]
mov     ecx, [ebp+var_d0]
call    sub_10009810
test    esi, esi
jnz     def_1002bdde
mov     edx, [ebp+src]
xor     ecx, ecx
cmp     [ebp+size], ecx
setz    cl
mov     [ebp+var_c8], ecx
mov     byte ptr [edx+1dh], 0
mov     eax, [ebp+src]
mov     [eax+4ch], esi
mov     edx, [ebp+var_c8]
cmp     byte ptr [edi], 34h
jnz     short loc_1002eed2
test    edx, edx
jz      def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
test    edx, edx
jnz     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+0ch]
lea     ecx, [eax+eax*4]
mov     eax, [edi+10h]
lea     edx, [ebx+ecx*8]
lea     eax, [eax+eax*4]
lea     ecx, [ebx+eax*8]
mov     eax, [esi+40h]
mov     [ebp+var_b8], ecx
mov     [ebp+var_e0], edx
mov     edx, [edi+4]
mov     eax, [eax+edx*4]
mov     [ebp+src], eax
xor     ecx, ecx
mov     [eax+48h], ecx
mov     edx, [ebp+src]
mov     [edx+4ch], ecx
mov     edx, [ebp+src]
mov     eax, [edx]
mov     ebx, [ebp+var_b8]
mov     [ebp+size], eax
mov     ecx, [edx+8]
mov     cx, [ecx+6]
xor     eax, eax
xor     esi, esi
mov     word ptr [ebp+var_bc], cx
mov     word ptr [ebp+var_c8], ax
cmp     si, cx
jnb     short loc_1002ef7f
jmp     short loc_1002ef60
movzx   esi, ax
lea     esi, [esi+esi*4]
test    byte ptr [ebx+esi*8+1ch], 1
jnz     loc_1002f037
inc     ax
mov     word ptr [ebp+var_c8], ax
cmp     ax, cx
jb      short loc_1002ef60
cmp     [ebp+size], 0
jz      def_1002bdde
mov     edx, [edx+8]
mov     eax, [ebp+var_bc]
mov     esi, [ebp+var_e0]
inc     eax
mov     dword ptr [ebp+var_b4], edx
mov     word ptr [ebp+var_b4+4], ax
mov     byte ptr [ebp+var_b4+6], 4
mov     dword ptr [ebp+var_a4], ebx
call    sub_100249d0
mov     eax, [ebp+src]
mov     ecx, [esi+10h]
add     eax, 48h
push    eax
push    0
mov     dword ptr [ebp+var_a4+4], ecx
mov     edx, [esi+14h]
push    0
push    0
lea     ecx, [ebp+var_b4]
mov     [ebp+var_9c], edx
mov     edx, [ebp+size]
push    ecx
push    edx
call    sub_1001df80
add     esp, 18h
test    byte ptr [ebp+var_b4+6], 4
mov     [ebp+var_cc], eax
jnz     loc_1002bdf9
mov     eax, [ebp+var_ac]
cmp     eax, dword ptr [ebp+var_a4+4]
jnz     short loc_1002f026
mov     ecx, [ebp+var_ac+4]
cmp     ecx, [ebp+var_9c]
jz      loc_1002bdf9
mov     [esi+10h], eax
mov     edx, [ebp+var_ac+4]
mov     [esi+14h], edx
jmp     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
mov     [ebp+size], 0
jmp     def_1002bdde
mov     eax, [edi+0ch]
mov     ecx, [edi+4]
mov     edx, [esi+40h]
mov     ecx, [edx+ecx*4]
lea     eax, [eax+eax*4]
lea     ebx, [ebx+eax*8]
mov     [ebp+var_c8], ecx
mov     eax, [ecx]
mov     [ebp+src], eax
test    eax, eax
jz      loc_1002f11e
mov     [ebp+size], 0
mov     ecx, [ebx+10h]
lea     esi, [ebp+size]
push    esi
push    0
mov     [ebp+var_bc], ecx
mov     edx, [ebx+14h]
push    edx
push    ecx
push    0
push    eax
mov     [ebp+var_b8], edx
call    sub_1001df80
mov     ecx, [ebp+var_c8]
mov     [ebp+var_cc], eax
mov     eax, [ebx+10h]
mov     [ecx+3ch], eax
mov     edx, [ebx+14h]
mov     eax, [ebp+var_c8]
mov     [eax+40h], edx
mov     edx, [ebp+var_c8]
add     esp, 18h
cmp     [ebp+size], 0
setz    cl
mov     [edx+19h], cl
mov     eax, [ebp+var_c8]
mov     byte ptr [eax+1ch], 0
mov     ecx, [ebp+var_c8]
mov     dword ptr [ecx+4ch], 0
mov     edx, [ebp+var_c8]
mov     byte ptr [edx+1dh], 0
mov     eax, [ebp+size]
test    eax, eax
jz      short loc_1002f110
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
mov     ecx, [ebp+var_c8]
mov     [ecx+48h], eax
jmp     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
mov     dword ptr [ecx+48h], 0
jmp     def_1002bdde
mov     edx, [edi+4]
mov     eax, [esi+40h]
mov     eax, [eax+edx*4]
mov     edx, [eax+2ch]
mov     ecx, [ebp+var_d4]
mov     [ecx+10h], edx
mov     eax, [eax+30h]
mov     [ecx+14h], eax
mov     ecx, [edi+4]
mov     edx, [esi+40h]
mov     eax, [edx+ecx*4]
add     dword ptr [eax+2ch], 1
adc     dword ptr [eax+30h], 0
jmp     def_1002bdde
mov     edx, [esi+40h]
xor     ecx, ecx
mov     [ebp+var_c8], ecx
mov     [ebp+src], ecx
mov     [ebp+var_bc], ecx
mov     eax, [edi+4]
mov     edx, [edx+eax*4]
mov     [ebp+size], edx
mov     eax, [edx]
cmp     eax, ecx
jz      loc_1002f473
cmp     [edx+1bh], cl
jnz     loc_1002f34f
mov     ecx, [eax+1ch]
mov     [ebp+var_c8], ecx
mov     eax, [eax+20h]
mov     edx, ecx
or      edx, eax
mov     [ebp+src], eax
jnz     loc_1002f254
mov     eax, [ebp+size]
mov     esi, [eax]
lea     edi, [ebp+var_bc]
call    sub_1001df40
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
cmp     [ebp+var_bc], eax
jz      short loc_1002f1e5
lea     ecx, [eax+1]
jmp     short loc_1002f236
mov     ecx, [ebp+size]
mov     esi, [ecx]
lea     edi, [ebp+var_c8]
call    sub_1001d3b0
mov     ecx, [ebp+var_c8]
mov     [ebp+var_cc], eax
mov     eax, [ebp+src]
cmp     eax, 7fffffffh
jl      short loc_1002f230
jg      short loc_1002f218
cmp     ecx, 0ffffffffh
jb      short loc_1002f230
mov     edx, [ebp+size]
mov     byte ptr [edx+1bh], 1
mov     eax, [ebp+src]
mov     ecx, [ebp+var_c8]
jmp     short loc_1002f242
add     ecx, 1
adc     eax, 0
mov     [ebp+src], eax
mov     [ebp+var_c8], ecx
mov     edi, [ebp+var_e8]
mov     esi, [ebp+var_dc]
mov     ebx, [ebp+var_e4]
mov     edx, [edi+0ch]
test    edx, edx
jz      loc_1002f31d
mov     esi, [esi+0a4h]
test    esi, esi
jz      short loc_1002f29d
mov     ecx, esi
mov     dword ptr [ebp+var_b4+4], ecx
mov     eax, [ecx+4]
test    eax, eax
jz      short loc_1002f28f
jmp     short loc_1002f280
mov     ecx, eax
mov     dword ptr [ebp+var_b4+4], ecx
mov     eax, [ecx+4]
test    eax, eax
jnz     short loc_1002f280
mov     edi, [edi+0ch]
mov     ecx, [ecx+0ch]
lea     eax, [edi+edi*4]
lea     esi, [ecx+eax*8]
jmp     short loc_1002f2a3
lea     edx, [edx+edx*4]
lea     esi, [ebx+edx*8]
mov     dword ptr [ebp+var_b4], esi
call    sub_100249d0
mov     edx, dword ptr [ebp+var_b4]
mov     eax, [edx+10h]
mov     ecx, [edx+14h]
cmp     eax, 0ffffffffh
jnz     short loc_1002f2cb
cmp     ecx, 7fffffffh
jz      loc_1003177f
mov     esi, [ebp+size]
cmp     byte ptr [esi+1bh], 0
jnz     loc_1003177f
add     eax, 1
adc     ecx, 0
cmp     [ebp+src], ecx
jg      short loc_1002f2ff
jl      short loc_1002f2f3
cmp     [ebp+var_c8], eax
jnb     short loc_1002f2ff
mov     [ebp+var_c8], eax
mov     [ebp+src], ecx
mov     eax, [ebp+var_c8]
mov     [edx+10h], eax
mov     ecx, [ebp+src]
mov     [edx+14h], ecx
mov     eax, [ebp+src]
mov     ecx, [ebp+var_c8]
cmp     eax, 7fffffffh
jg      short loc_1002f333
jl      short loc_1002f32b
cmp     ecx, 0ffffffffh
jnb     short loc_1002f333
add     ecx, 1
adc     eax, 0
jmp     short loc_1002f337
xor     ecx, ecx
xor     eax, eax
mov     edx, [ebp+size]
mov     esi, [edx]
push    eax
push    ecx
call    sub_1001d280
mov     edx, [ebp+size]
add     esp, 8
cmp     byte ptr [edx+1bh], 0
jz      loc_1002f458
mov     eax, [ebp+var_f4]
mov     ecx, [ebp+var_f8]
and     eax, 3fffffffh
add     ecx, 1
lea     esi, [ebp+var_bc]
push    esi
adc     eax, 0
push    0
push    eax
push    ecx
mov     [ebp+var_c8], ecx
mov     [ebp+src], eax
mov     [ebp+var_b8], 0
mov     eax, [edx]
push    0
push    eax
call    sub_1001df80
add     esp, 18h
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_1002f452
mov     ecx, [ebp+var_bc]
test    ecx, ecx
jnz     loc_1002f441
mov     eax, [ebp+var_b8]
inc     eax
mov     [ebp+var_b8], eax
cmp     eax, 64h
jge     short loc_1002f441
lea     ecx, [ebp+var_c8]
push    ecx
push    8
call    sub_1000b290
mov     eax, [ebp+var_c8]
add     esp, 8
cmp     [ebp+var_b8], 5
jge     short loc_1002f3f5
and     eax, 0ffffffh
xor     ecx, ecx
jmp     short loc_1002f401
mov     ecx, [ebp+src]
and     ecx, 3fffffffh
add     eax, 1
lea     edx, [ebp+var_bc]
push    edx
adc     ecx, 0
push    0
push    ecx
push    eax
mov     [ebp+var_c8], eax
mov     eax, [ebp+size]
mov     [ebp+src], ecx
mov     ecx, [eax]
push    0
push    ecx
call    sub_1001df80
add     esp, 18h
mov     [ebp+var_cc], eax
test    eax, eax
jz      loc_1002f3ac
jmp     short loc_1002f452
cmp     [ebp+var_cc], 0
jnz     short loc_1002f452
test    ecx, ecx
jz      loc_1003177f
mov     edx, [ebp+size]
mov     byte ptr [edx+19h], 0
mov     edx, [ebp+size]
mov     byte ptr [edx+1dh], 0
mov     eax, [ebp+size]
mov     dword ptr [eax+4ch], 0
mov     eax, [ebp+var_d4]
mov     ecx, [ebp+var_c8]
mov     [eax+10h], ecx
mov     edx, [ebp+src]
mov     [eax+14h], edx
jmp     def_1002bdde
mov     eax, [edi+8]
lea     eax, [eax+eax*4]
lea     ecx, [ebx+eax*8]
mov     eax, [esi+40h]
mov     [ebp+var_c8], ecx
mov     edx, [edi+4]
mov     edx, [eax+edx*4]
mov     [ebp+var_b8], edx
cmp     byte ptr [edi], 39h
mov     eax, [edi+0ch]
jnz     short loc_1002f4d0
lea     eax, [eax+eax*4]
lea     edx, [ebx+eax*8]
mov     [ebp+src], edx
mov     eax, [edx+10h]
mov     [ebp+size], eax
mov     edx, [edx+14h]
jmp     short loc_1002f4d7
cdq
mov     [ebp+size], eax
mov     [ebp+var_bc], edx
test    byte ptr [edi+3], 1
jz      short loc_1002f4e6
inc     dword ptr [esi+68h]
test    byte ptr [edi+3], 2
jz      short loc_1002f510
mov     ecx, [ebp+var_d0]
mov     [ecx+1ch], eax
mov     [ebp+var_f4], edx
mov     edx, [ebp+var_bc]
mov     [ecx+20h], edx
mov     ecx, [ebp+var_c8]
mov     [ebp+var_f8], eax
xor     eax, eax
test    byte ptr [ecx+1ch], 1
jz      short loc_1002f52a
mov     [ecx+4], eax
mov     ecx, [ebp+var_c8]
mov     [ecx+18h], eax
mov     ecx, [ebp+var_c8]
test    byte ptr [edi+3], 10h
jz      short loc_1002f541
mov     edx, [ebp+var_b8]
mov     edx, [edx+48h]
mov     dword ptr [ebp+var_b4+4], edx
jmp     short loc_1002f547
mov     dword ptr [ebp+var_b4+4], eax
mov     edx, 4000h
test    [ecx+1ch], dx
jz      short loc_1002f555
mov     eax, [ecx+10h]
mov     ecx, [ebp+var_b8]
mov     dword ptr [ebp+var_b4], eax
mov     esi, [ecx]
push    0
push    0
call    sub_1001d280
movzx   eax, byte ptr [edi+3]
mov     edx, dword ptr [ebp+var_b4+4]
mov     ecx, dword ptr [ebp+var_b4]
push    edx
and     eax, 8
push    eax
mov     eax, [ebp+var_c8]
mov     edx, [eax+18h]
mov     eax, [eax+4]
push    ecx
mov     ecx, [ebp+var_bc]
push    edx
mov     edx, [ebp+size]
push    eax
mov     eax, [ebp+var_b8]
mov     eax, [eax]
push    ecx
push    edx
push    0
call    sub_10020b30
mov     ecx, [ebp+var_b8]
mov     byte ptr [ecx+19h], 0
mov     edx, [ebp+var_b8]
mov     byte ptr [edx+1dh], 0
mov     ecx, [ebp+var_b8]
add     esp, 28h
mov     [ebp+var_cc], eax
mov     dword ptr [ecx+4ch], 0
test    eax, eax
jnz     def_1002bdde
mov     edx, [ebp+var_d0]
cmp     [edx+0b4h], eax
jz      def_1002bdde
cmp     [edi+10h], eax
jz      def_1002bdde
mov     eax, [ebp+var_b8]
mov     edx, [eax+0ch]
mov     ecx, [ebp+var_d0]
mov     eax, [ecx+10h]
add     edx, edx
mov     edx, [eax+edx*8]
mov     [ebp+var_ac], edx
mov     esi, [edi+10h]
mov     [ebp+var_ac+4], esi
mov     al, [edi+3]
mov     edi, [ebp+var_bc]
and     al, 4
movzx   eax, al
push    edi
mov     edi, [ebp+size]
neg     eax
sbb     eax, eax
push    edi
and     eax, 5
add     eax, 12h
push    esi
push    edx
mov     dword ptr [ebp+var_a4], eax
mov     edx, [ecx+0b0h]
push    eax
mov     eax, [ecx+0b4h]
push    edx
call    eax
add     esp, 18h
jmp     def_1002bdde
mov     edx, [esi+40h]
xor     eax, eax
mov     [ebp+var_c8], eax
mov     [ebp+src], eax
mov     ecx, [edi+4]
mov     esi, [edx+ecx*4]
mov     ecx, [ebp+var_d0]
mov     [ebp+size], esi
cmp     [ecx+0b4h], eax
jz      short loc_1002f6a2
cmp     [edi+10h], eax
jz      short loc_1002f6a2
mov     edx, [esi+3ch]
mov     [ebp+var_c8], edx
mov     eax, [esi+40h]
mov     [ebp+src], eax
call    sub_10028480
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
mov     ecx, [ebp+size]
mov     esi, [ecx]
push    eax
push    eax
call    sub_1001d280
mov     edx, [ebp+size]
mov     esi, [edx]
add     esp, 8
call    sub_10020d60
mov     ecx, [ebp+size]
mov     [ebp+var_cc], eax
mov     dword ptr [ecx+4ch], 0
test    eax, eax
jnz     short loc_1002f731
mov     edx, [ebp+var_d0]
mov     ecx, [edx+0b4h]
test    ecx, ecx
jz      short loc_1002f731
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_1002f731
mov     esi, [ebp+src]
push    esi
mov     esi, [ebp+var_c8]
push    esi
mov     esi, [edx+10h]
mov     edx, [edx+0b0h]
push    eax
mov     eax, [ebp+size]
mov     eax, [eax+0ch]
add     eax, eax
mov     eax, [esi+eax*8]
push    eax
push    9
push    edx
call    ecx
add     esp, 18h
test    byte ptr [edi+8], 1
jz      def_1002bdde
mov     eax, [ebp+var_dc]
inc     dword ptr [eax+68h]
jmp     def_1002bdde
mov     eax, [esi+68h]
mov     ecx, [ebp+var_d0]
add     [ecx+44h], eax
mov     [ecx+40h], eax
mov     dword ptr [esi+68h], 0
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [esi+40h]
mov     eax, [ecx+eax*4]
mov     [ebp+var_c8], eax
mov     ecx, [edi+0ch]
lea     edx, [ecx+ecx*4]
lea     ecx, [ebp+src]
lea     edx, [ebx+edx*8]
push    ecx
call    sub_10033a10
add     esp, 4
cmp     [ebp+src], 0
mov     [ebp+var_cc], eax
jz      def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+8]
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
lea     ecx, [ebx+edx*8]
mov     edx, [esi+40h]
mov     eax, [edx+eax*4]
mov     [ebp+var_d4], ecx
mov     [ebp+var_c8], eax
call    sub_100339a0
mov     [ebp+var_cc], eax
jmp     def_1002bdde
mov     eax, [edi+8]
mov     ecx, [ebp+var_e4]
mov     edx, [edi+4]
lea     eax, [eax+eax*4]
lea     ebx, [ecx+eax*8]
mov     eax, [ebp+var_dc]
mov     ecx, [eax+40h]
mov     esi, [ecx+edx*4]
mov     [ebp+var_c8], esi
mov     edx, [esi]
mov     [ebp+var_d4], ebx
mov     [ebp+src], edx
call    sub_10028480
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
mov     eax, [ebp+var_c8]
cmp     byte ptr [eax+1fh], 0
mov     esi, [ebp+src]
jz      short loc_1002f86d
lea     edi, [ebp+var_bc]
call    sub_1001d3b0
mov     ecx, [ebp+var_d0]
mov     eax, [ecx+48h]
cdq
cmp     [ebp+var_b8], edx
jg      loc_1002caea
mov     ecx, [ebp+var_bc]
jl      short loc_1002f863
cmp     ecx, eax
ja      loc_1002caea
mov     eax, ecx
mov     [ebp+size], eax
jmp     short loc_1002f891
lea     edx, [ebp+size]
push    edx
call    sub_1001d420
mov     eax, [ebp+size]
mov     ecx, [ebp+var_d0]
add     esp, 4
cmp     eax, [ecx+48h]
ja      loc_1002caea
push    0
mov     edi, ebx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     loc_1002c2f4
mov     ax, [ebx+1ch]
mov     edx, [ebp+size]
mov     ecx, 0bf10h
and     ax, cx
or      ax, 10h
mov     [ebx+18h], edx
mov     [ebx+1ch], ax
mov     edx, [ebp+var_c8]
cmp     byte ptr [edx+1fh], 0
mov     ecx, [ebp+src]
jz      short loc_1002f8fb
mov     eax, [ebx+4]
push    0
push    eax
mov     eax, [ebp+size]
push    eax
push    0
push    ecx
call    sub_1001d750
add     esp, 14h
mov     [ebp+var_cc], eax
mov     byte ptr [ebx+1fh], 1
jmp     def_1002bdde
mov     edx, [ebx+4]
mov     eax, [ebp+size]
push    edx
push    eax
push    0
push    ecx
call    sub_1001da70
add     esp, 10h
mov     [ebp+var_cc], eax
mov     byte ptr [ebx+1fh], 1
jmp     def_1002bdde
mov     edx, [edi+4]
mov     eax, [esi+40h]
mov     eax, [eax+edx*4]
mov     [ebp+var_c8], eax
cmp     byte ptr [eax+1ch], 0
jz      short loc_1002f949
mov     edx, [ebp+var_d4]
mov     ecx, 1
mov     [edx+1ch], cx
jmp     def_1002bdde
cmp     byte ptr [eax+1dh], 0
jz      short loc_1002f978
mov     ecx, [eax+34h]
mov     [ebp+src], ecx
mov     edx, [eax+38h]
mov     eax, [ebp+var_d4]
mov     [ebp+size], edx
mov     [eax+10h], ecx
mov     edx, [ebp+size]
mov     [eax+14h], edx
jmp     def_1002bdde
cmp     dword ptr [eax+24h], 0
jz      short loc_1002f9d4
mov     ecx, [eax+24h]
mov     ecx, [ecx]
mov     [ebp+var_bc], ecx
mov     ecx, [ecx]
mov     [ebp+var_b8], ecx
mov     eax, [eax+24h]
mov     ecx, [ecx+30h]
lea     edx, [ebp+src]
push    edx
push    eax
call    ecx
mov     edx, [ebp+var_bc]
push    edx
push    esi
mov     [ebp+var_cc], eax
call    sub_1002bbe0
mov     ecx, [ebp+src]
mov     eax, [ebp+var_d4]
mov     [eax+10h], ecx
mov     edx, [ebp+size]
add     esp, 10h
mov     [eax+14h], edx
jmp     def_1002bdde
mov     esi, eax
call    sub_10028480
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
mov     eax, [ebp+var_c8]
cmp     byte ptr [eax+19h], 0
jz      short loc_1002fa1e
mov     ecx, [eax+3ch]
mov     [ebp+src], ecx
mov     edx, [eax+40h]
mov     eax, [ebp+var_d4]
mov     [ebp+size], edx
mov     [eax+10h], ecx
mov     edx, [ebp+size]
mov     [eax+14h], edx
jmp     def_1002bdde
mov     esi, [eax]
lea     edi, [ebp+src]
call    sub_1001d3b0
mov     ecx, [ebp+src]
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_d4]
mov     [eax+10h], ecx
mov     edx, [ebp+size]
mov     [eax+14h], edx
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [esi+40h]
mov     eax, [ecx+eax*4]
mov     [ebp+var_c8], eax
mov     byte ptr [eax+1ch], 1
mov     edx, [ebp+var_c8]
mov     byte ptr [edx+19h], 0
mov     eax, [ebp+var_c8]
mov     esi, [eax]
test    esi, esi
jz      def_1002bdde
call    sub_100199b0
jmp     def_1002bdde
mov     ecx, [edi+4]
mov     edx, [esi+40h]
mov     eax, [edx+ecx*4]
mov     [ebp+var_c8], eax
mov     esi, [eax]
mov     [ebp+src], esi
mov     [ebp+size], 0
test    esi, esi
jz      short loc_1002fac7
lea     edi, [ebp+size]
call    sub_1001df40
mov     edi, [ebp+var_e8]
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_c8]
mov     cl, byte ptr [ebp+size]
mov     [eax+1ch], cl
mov     edx, [ebp+var_c8]
mov     byte ptr [edx+1dh], 0
mov     eax, [ebp+var_c8]
mov     byte ptr [eax+19h], 0
mov     ecx, [ebp+var_c8]
mov     dword ptr [ecx+4ch], 0
mov     edi, [edi+8]
test    edi, edi
jle     def_1002bdde
cmp     [ebp+size], 0
jz      def_1002bdde
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
inc     dword ptr [esi+7ch]
mov     edx, [edi+4]
mov     eax, [esi+40h]
mov     ecx, [eax+edx*4]
mov     [ebp+var_c8], ecx
mov     [ebp+size], 1
cmp     dword ptr [ecx+44h], 0
jz      short loc_1002fb54
lea     edx, [ebp+size]
push    edx
mov     edx, [ebp+var_d0]
call    sub_10033640
add     esp, 4
mov     [ebp+var_cc], eax
jmp     short loc_1002fba9
mov     ecx, [ecx]
lea     edi, [ebp+size]
mov     esi, ecx
mov     [ebp+src], ecx
call    sub_1001df10
cmp     [ebp+size], 0
mov     ecx, [ebp+var_c8]
mov     edi, [ebp+var_e8]
mov     [ebp+var_cc], eax
setz    al
mov     [ecx+1ah], al
mov     edx, [ebp+var_c8]
mov     byte ptr [edx+1dh], 0
mov     eax, [ebp+var_c8]
mov     dword ptr [eax+4ch], 0
mov     ecx, [ebp+var_c8]
mov     byte ptr [ecx+19h], 0
mov     dl, byte ptr [ebp+size]
mov     eax, [ebp+var_c8]
mov     [eax+1ch], dl
cmp     [ebp+size], 0
jz      def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     ecx, [ebp+var_d0]
mov     edx, [ecx+0d8h]
test    edx, edx
jnz     loc_10031802
mov     eax, [edi+4]
mov     ecx, [esi+40h]
mov     eax, [ecx+eax*4]
mov     [ebp+var_c8], eax
test    eax, eax
jz      def_1002bdde
cmp     [eax+44h], edx
jz      short loc_1002fc19
lea     edx, [ebp+src]
push    edx
push    eax
mov     eax, [ebp+var_d0]
call    sub_100338f0
jmp     short loc_1002fc32
mov     [ebp+src], 1
mov     edx, [eax]
mov     eax, [edi+10h]
lea     ecx, [ebp+src]
push    ecx
push    edx
call    eax
mov     ecx, [ebp+var_c8]
mov     dl, byte ptr [ebp+src]
mov     [ecx+1ch], dl
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_c8]
add     esp, 8
mov     dword ptr [eax+4ch], 0
cmp     [ebp+src], 0
jnz     short loc_1002fc7c
mov     eax, [edi+8]
dec     eax
mov     [ebp+var_d8], eax
mov     al, [edi+3]
test    al, al
jz      short loc_1002fc7c
movzx   ecx, al
inc     dword ptr [esi+ecx*4+74h]
lea     esi, [esi+ecx*4+74h]
mov     edx, [ebp+var_c8]
mov     byte ptr [edx+19h], 0
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [esi+40h]
mov     ecx, [ecx+eax*4]
mov     [ebp+var_c8], ecx
mov     eax, [edi+8]
mov     esi, [ecx]
lea     edx, [eax+eax*4]
lea     ebx, [ebx+edx*8]
mov     [ebp+src], esi
test    esi, esi
jz      def_1002bdde
mov     eax, 4000h
test    [ebx+1ch], ax
jz      short loc_1002fcdf
mov     eax, ebx
call    sub_10024590
mov     [ebp+var_cc], eax
test    eax, eax
jnz     def_1002bdde
mov     esi, [ebp+src]
mov     ecx, [ebp+var_c8]
cmp     dword ptr [ecx+44h], 0
jz      short loc_1002fd00
push    ecx
mov     ecx, [ebp+var_d0]
push    ecx
call    sub_10033500
add     esp, 8
mov     [ebp+var_cc], eax
jmp     def_1002bdde
mov     eax, [ebx+18h]
mov     [ebp+size], eax
mov     ebx, [ebx+4]
mov     [ebp+var_bc], ebx
test    byte ptr [edi+3], 10h
jz      short loc_1002fd1d
mov     ecx, [ecx+48h]
jmp     short loc_1002fd1f
xor     ecx, ecx
mov     edx, [edi+0ch]
push    ecx
push    edx
push    0
push    0
cdq
push    offset dword_100796bc
push    edx
push    eax
push    ebx
mov     eax, esi
call    sub_10020b30
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_c8]
add     esp, 20h
mov     dword ptr [eax+4ch], 0
jmp     def_1002bdde
mov     ecx, [edi+4]
mov     edx, [esi+40h]
mov     eax, [edx+ecx*4]
mov     [ebp+var_c8], eax
mov     ecx, [eax]
mov     [ebp+src], ecx
test    ecx, ecx
jz      def_1002bdde
mov     eax, [eax+8]
mov     [ebp+var_bc], eax
mov     dx, [edi+0ch]
mov     word ptr [ebp+var_b8], dx
mov     byte ptr [ebp+var_b8+2], 0
mov     edi, [edi+8]
lea     eax, [edi+edi*4]
lea     edx, [ebx+eax*8]
lea     eax, [ebp+size]
push    eax
push    0
push    0
mov     [ebp+var_ac], edx
push    0
lea     edx, [ebp+var_bc]
push    edx
push    ecx
call    sub_1001df80
add     esp, 18h
mov     [ebp+var_cc], eax
test    eax, eax
jnz     short loc_1002fddc
cmp     [ebp+size], eax
jnz     short loc_1002fddc
mov     esi, [ebp+src]
call    sub_10020d60
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_c8]
mov     dword ptr [eax+4ch], 0
jmp     def_1002bdde
mov     ecx, [edi+4]
mov     edx, [esi+40h]
mov     eax, [edx+ecx*4]
mov     edx, [ebp+var_d4]
mov     [ebp+src], eax
mov     eax, [eax]
mov     [ebp+var_c8], eax
mov     ecx, 1
mov     [edx+1ch], cx
cmp     [ebp+var_c8], 0
jz      def_1002bdde
mov     esi, [ebp+src]
call    sub_10028480
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
mov     eax, [ebp+src]
cmp     byte ptr [eax+1ch], 0
jnz     def_1002bdde
mov     eax, [ebp+var_c8]
lea     ecx, [ebp+size]
push    ecx
call    sub_10028c90
add     esp, 4
mov     [ebp+var_cc], eax
test    eax, eax
jnz     loc_10031789
mov     edx, [ebp+size]
mov     eax, [ebp+var_d4]
mov     [eax+10h], edx
mov     ecx, [ebp+var_bc]
mov     edx, 4
mov     [eax+14h], ecx
mov     [eax+1ch], dx
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ecx, [esi+40h]
mov     ecx, [ecx+eax*4]
mov     [ebp+var_c8], ecx
cmp     dword ptr [ecx], 0
jz      def_1002bdde
mov     edx, [ecx+8]
mov     [ebp+size], edx
mov     ax, [edi+10h]
mov     word ptr [ebp+var_bc], ax
cmp     byte ptr [edi+3], 0
setnz   dl
add     dl, 2
mov     byte ptr [ebp+var_bc+2], dl
mov     eax, [edi+0ch]
lea     eax, [eax+eax*4]
lea     edx, [ebx+eax*8]
lea     eax, [ebp+src]
mov     dword ptr [ebp+var_b4+4], edx
push    eax
lea     edx, [ebp+size]
push    edx
push    ecx
call    sub_10028df0
add     esp, 0ch
cmp     byte ptr [edi], 64h
mov     [ebp+var_cc], eax
mov     eax, [ebp+src]
jnz     short loc_1002ff0a
neg     eax
jmp     short loc_1002ff0b
inc     eax
mov     [ebp+src], eax
test    eax, eax
jle     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [ebp+var_d0]
mov     [ebp+src], 0
mov     eax, [eax+4]
mov     [ebp+size], eax
mov     ecx, 1
test    eax, eax
jz      short loc_1002ff78
lea     ebx, [ebx+0]
cmp     dword ptr [eax+30h], 0bdf20da3h
jnz     short loc_1002ff6b
cmp     byte ptr [eax+62h], 2
jnb     short loc_1002ff6b
cmp     dword ptr [eax+54h], 0
jl      short loc_1002ff6b
add     [ebp+src], ecx
mov     eax, [eax+3ch]
mov     [ebp+size], eax
test    eax, eax
jnz     short loc_1002ff50
mov     eax, [ebp+var_d4]
mov     edx, ecx
mov     [eax+1ch], dx
cmp     [ebp+src], ecx
jle     short loc_1002ff9f
mov     [ebp+var_cc], 6
mov     byte ptr [esi+5ch], 2
jmp     def_1002bdde
mov     eax, [edi+0ch]
mov     [ebp+var_bc], eax
mov     edx, [edi+4]
lea     ecx, [ebp+var_c8]
push    ecx
mov     ecx, [ebp+var_d0]
push    edx
mov     edx, [ecx+10h]
add     eax, eax
mov     eax, [edx+eax*8+4]
call    sub_10021890
mov     esi, [ebp+var_d4]
mov     ecx, eax
mov     eax, 4
mov     [esi+1ch], ax
mov     eax, [ebp+var_c8]
cdq
add     esp, 8
mov     [ebp+var_cc], ecx
mov     [esi+10h], eax
mov     [esi+14h], edx
test    ecx, ecx
jnz     def_1002bdde
mov     esi, [ebp+var_c8]
test    esi, esi
jz      def_1002bdde
mov     edi, [edi+4]
mov     eax, [ebp+var_bc]
mov     ecx, [ebp+var_d0]
call    sub_100417c0
mov     al, byte ptr [ebp+var_bc]
inc     al
mov     [ebp+var_ed], al
jmp     def_1002bdde
mov     [ebp+var_c8], 0
mov     ecx, [edi+0ch]
mov     eax, [edi+4]
neg     ecx
sbb     ecx, ecx
lea     edx, [ebp+var_c8]
and     ecx, edx
mov     edx, [ebp+var_d0]
push    ecx
mov     ecx, [edi+8]
push    eax
mov     eax, [edx+10h]
add     ecx, ecx
mov     eax, [eax+ecx*8+4]
call    sub_10021460
add     esp, 8
cmp     dword ptr [edi+0ch], 0
mov     [ebp+var_cc], eax
jz      def_1002bdde
mov     eax, [ebp+var_c8]
add     [esi+68h], eax
mov     edi, [edi+0ch]
test    edi, edi
jle     def_1002bdde
lea     ecx, [edi+edi*4]
cdq
add     [ebx+ecx*8+10h], eax
lea     ecx, [ebx+ecx*8+10h]
adc     [ecx+4], edx
jmp     def_1002bdde
mov     edx, [ebp+var_d0]
mov     [ebp+var_c8], 0
mov     eax, [edi+4]
shl     eax, 4
add     eax, [edx+10h]
xor     ecx, ecx
mov     [ebp+size], eax
cmp     byte ptr [edi], 69h
setnz   cl
inc     ecx
mov     [ebp+src], ecx
mov     eax, [eax+4]
push    ecx
lea     ecx, [ebp+var_c8]
push    ecx
call    sub_10021280
mov     ecx, [ebp+var_d4]
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_c8]
cdq
add     esp, 8
mov     [ecx+10h], eax
mov     [ecx+14h], edx
jmp     def_1002bdde
mov     eax, [edi+4]
mov     [ebp+var_c8], eax
mov     ecx, offset asqlitetempmast
cmp     eax, 1
jz      short loc_10030112
mov     ecx, offset asqlitemaster
mov     ebx, [ebp+var_d0]
mov     [ebp+src], ecx
mov     [ebp+var_bc], ebx
mov     edx, [edi+4]
mov     dword ptr [ebp+var_b4], edx
add     esi, 34h
mov     [ebp+var_b8], esi
mov     edx, [edi+10h]
push    edx
push    ecx
mov     ecx, [ebx+10h]
add     eax, eax
mov     edx, [ecx+eax*8]
push    edx
push    offset aselectnameroot
push    ebx
call    sub_1000ae80
add     esp, 14h
mov     [ebp+size], eax
test    eax, eax
jnz     short loc_10030168
mov     [ebp+var_cc], 7
jmp     short loc_100301c3
push    0
lea     eax, [ebp+var_bc]
push    eax
mov     byte ptr [ebx+79h], 1
mov     ecx, [ebp+size]
push    offset sub_100530f0
push    ecx
push    ebx
mov     dword ptr [ebp+var_b4+4], 0
call    sub_1004ff10
mov     esi, eax
add     esp, 14h
mov     [ebp+var_cc], esi
test    esi, esi
jnz     short loc_100301ae
mov     edx, dword ptr [ebp+var_b4+4]
mov     [ebp+var_cc], edx
mov     esi, edx
mov     eax, [ebp+size]
mov     ecx, ebx
call    sub_10009810
mov     byte ptr [ebx+79h], 0
test    esi, esi
jz      short loc_100301ca
mov     eax, ebx
call    sub_1003fad0
cmp     [ebp+var_cc], 7
jz      loc_1002c2f4
jmp     def_1002bdde
mov     eax, [edi+4]
mov     ebx, [ebp+var_d0]
call    sub_1003dcd0
mov     [ebp+var_cc], eax
jmp     def_1002bdde
mov     eax, [ebp+var_d0]
mov     ecx, [edi+10h]
push    eax
mov     eax, [edi+4]
call    sub_1003fd50
add     esp, 4
jmp     def_1002bdde
mov     ecx, [ebp+var_d0]
mov     eax, [edi+4]
push    ecx
mov     ecx, [edi+10h]
call    sub_1003f820
add     esp, 4
jmp     def_1002bdde
mov     edx, [ebp+var_d0]
mov     ecx, [edi+10h]
mov     eax, [edi+4]
push    edx
call    sub_1005ee20
add     esp, 4
jmp     def_1002bdde
mov     eax, [edi+8]
mov     ebx, [ebp+var_d0]
lea     ecx, ds:4[eax*4]
mov     esi, ebx
mov     [ebp+var_c8], eax
call    sub_10009a40
mov     [ebp+src], eax
test    eax, eax
jz      loc_1002c2f4
mov     ecx, [edi+0ch]
mov     edx, [ebp+var_e4]
lea     ecx, [ecx+ecx*4]
lea     ecx, [edx+ecx*8]
mov     dword ptr [ebp+var_b4], ecx
mov     ecx, [edi+4]
lea     ecx, [ecx+ecx*4]
lea     esi, [edx+ecx*8]
xor     ecx, ecx
mov     [ebp+size], ecx
cmp     [ebp+var_c8], ecx
jle     short loc_100302d5
lea     esp, [esp+0]
lea     edx, [ecx+ecx*4]
lea     ecx, [esi+edx*8]
call    sub_10024870
mov     ecx, [ebp+size]
mov     edx, [ebp+src]
mov     [edx+ecx*4], eax
mov     ecx, [ebp+size]
inc     ecx
mov     [ebp+size], ecx
cmp     ecx, [ebp+var_c8]
jl      short loc_100302a0
mov     eax, [ebp+src]
mov     dword ptr [eax+ecx*4], 0
mov     eax, dword ptr [ebp+var_b4]
mov     ecx, [eax+10h]
mov     edx, [ebp+var_c8]
mov     eax, [ebp+src]
push    ecx
movzx   ecx, byte ptr [edi+3]
push    edx
push    eax
mov     eax, [ebx+10h]
add     ecx, ecx
mov     ecx, [eax+ecx*8+4]
lea     edx, [ebp+var_bc]
call    sub_10022900
mov     [ebp+var_b8], eax
mov     eax, [ebp+src]
add     esp, 0ch
mov     ecx, ebx
call    sub_10009810
mov     eax, [ebp+var_bc]
mov     ecx, dword ptr [ebp+var_b4]
cdq
sub     [ecx+10h], eax
sbb     [ecx+14h], edx
call    sub_10024b20
cmp     [ebp+var_bc], 0
jz      short loc_10030366
mov     eax, [ebp+var_b8]
test    eax, eax
jz      loc_1002c2f4
push    1
push    eax
mov     eax, offset sub_10009770
or      ecx, 0ffffffffh
mov     edx, esi
call    sub_10024e60
add     esp, 8
movzx   ecx, byte ptr [ebp+var_ec]
mov     eax, esi
call    sub_100243f0
jmp     def_1002bdde
mov     eax, [edi+4]
mov     edi, [edi+8]
lea     ecx, [eax+eax*4]
test    byte ptr [ebx+ecx*8+1ch], 20h
lea     esi, [ebx+ecx*8]
lea     edx, [edi+edi*4]
lea     ebx, [ebx+edx*8]
jnz     short loc_100303a3
mov     edi, esi
call    sub_10024c70
test    byte ptr [esi+1ch], 20h
jz      loc_1002c2f4
mov     eax, [ebx+14h]
mov     ecx, [ebx+10h]
mov     edi, [esi+10h]
push    eax
push    ecx
call    sub_10011860
add     esp, 8
jmp     def_1002bdde
mov     edx, [ebp+var_d0]
mov     eax, [edx+0d8h]
test    eax, eax
jnz     loc_10031802
mov     eax, [edi+4]
lea     ecx, [eax+eax*4]
test    byte ptr [ebx+ecx*8+1ch], 20h
lea     ebx, [ebx+ecx*8]
jz      short loc_1003041b
mov     eax, [ebx+10h]
lea     esi, [ebp+var_c8]
call    sub_10011bf0
test    eax, eax
jz      short loc_1003041b
mov     edx, [ebp+src]
mov     edi, [edi+0ch]
mov     eax, [ebp+var_c8]
push    edx
mov     edx, [ebp+var_e4]
lea     ecx, [edi+edi*4]
push    eax
lea     esi, [edx+ecx*8]
call    sub_10024b70
add     esp, 8
jmp     def_1002bdde
mov     esi, ebx
call    sub_10024b20
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
lea     esi, [ebx+eax*8]
mov     eax, [edi+0ch]
lea     ecx, [eax+eax*4]
mov     eax, [edi+10h]
mov     [ebp+var_c8], eax
test    byte ptr [esi+1ch], 20h
lea     ebx, [ebx+ecx*8]
jnz     short loc_1003046f
mov     edi, esi
call    sub_10024c70
test    byte ptr [esi+1ch], 20h
jz      loc_1002c2f4
mov     eax, [ebp+var_c8]
mov     edi, [ebp+var_e8]
test    eax, eax
jz      short loc_100304b4
js      short loc_1003047a
and     eax, 0fh
jmp     short loc_1003047f
mov     eax, 0ffh
mov     edx, [ebx+14h]
mov     ecx, [ebx+10h]
push    edx
push    ecx
push    eax
mov     eax, [esi+10h]
call    sub_10011c40
add     esp, 0ch
mov     [ebp+src], eax
test    eax, eax
jz      short loc_100304ac
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [ebp+var_c8]
test    eax, eax
js      def_1002bdde
mov     edx, [ebx+14h]
mov     eax, [ebx+10h]
mov     edi, [esi+10h]
push    edx
push    eax
call    sub_10011860
add     esp, 8
jmp     def_1002bdde
mov     ecx, [edi+10h]
mov     dword ptr [ebp+var_b4+4], ecx
mov     eax, [edi+0ch]
lea     edx, [eax+eax*4]
lea     ebx, [ebx+edx*8]
mov     [ebp+size], ebx
cmp     byte ptr [edi+3], 0
jz      short loc_10030526
mov     eax, [esi+0a4h]
mov     edx, [ecx+14h]
mov     [ebp+var_ac], edx
mov     dword ptr [ebp+var_b4], eax
test    eax, eax
jz      short loc_10030526
lea     esp, [esp+0]
cmp     [eax+18h], edx
jz      def_1002bdde
mov     eax, [eax+4]
mov     dword ptr [ebp+var_b4], eax
test    eax, eax
jnz     short loc_10030510
mov     eax, [esi+0ach]
mov     edx, [ebp+var_d0]
cmp     eax, [edx+70h]
jl      short loc_1003055e
mov     ebx, [ebp+var_dc]
push    offset atoomanylevelso
add     ebx, 34h
mov     esi, edx
mov     [ebp+var_cc], 1
call    sub_10009bf0
add     esp, 4
jmp     def_1002bdde
test    byte ptr [ebx+1ch], 40h
jnz     loc_100306e6
mov     eax, [ecx+8]
add     eax, [ecx+0ch]
mov     [ebp+var_c8], eax
mov     edx, [ecx+0ch]
mov     ecx, [ecx+10h]
lea     eax, [eax+eax*4]
lea     eax, [edx+eax*2]
lea     edi, [ecx+eax*4+48h]
mov     eax, [ebp+var_d0]
mov     [ebp+src], edi
call    sub_10009a20
mov     dword ptr [ebp+var_b4], eax
test    eax, eax
jz      loc_1002c2f4
mov     edx, [ebp+size]
push    edx
call    sub_100247d0
mov     ecx, [ebp+size]
mov     eax, 40h
mov     [ecx+1ch], ax
mov     edx, dword ptr [ebp+var_b4]
mov     eax, [ebp+size]
mov     [eax+10h], edx
mov     ecx, dword ptr [ebp+var_b4]
mov     eax, [ebp+var_dc]
mov     [ecx], eax
mov     edx, dword ptr [ebp+var_b4]
mov     ecx, [ebp+var_c8]
mov     [edx+38h], ecx
mov     edx, dword ptr [ebp+var_b4+4]
mov     ecx, [edx+0ch]
mov     edx, dword ptr [ebp+var_b4]
mov     [edx+3ch], ecx
mov     ecx, dword ptr [ebp+var_b4]
mov     edx, [ebp+var_d8]
mov     [ecx+28h], edx
mov     ecx, [eax+8]
mov     edx, dword ptr [ebp+var_b4]
mov     [edx+0ch], ecx
mov     ecx, [eax+18h]
mov     edx, dword ptr [ebp+var_b4]
mov     [edx+30h], ecx
mov     ecx, [eax+40h]
mov     edx, dword ptr [ebp+var_b4]
mov     [edx+14h], ecx
mov     cx, [eax+2eh]
mov     edx, dword ptr [ebp+var_b4]
mov     [edx+24h], cx
mov     ecx, [eax+4]
mov     edx, dword ptr [ebp+var_b4]
mov     [edx+8], ecx
mov     ecx, [eax+1ch]
mov     edx, dword ptr [ebp+var_b4]
mov     [edx+2ch], ecx
mov     ecx, dword ptr [ebp+var_b4+4]
mov     edx, [ecx+14h]
mov     ecx, dword ptr [ebp+var_b4]
mov     [ecx+18h], edx
mov     edx, [eax+0bch]
mov     ecx, dword ptr [ebp+var_b4]
mov     [ecx+10h], edx
mov     edx, [eax+0b8h]
mov     eax, dword ptr [ebp+var_b4]
mov     [eax+34h], edx
mov     ecx, dword ptr [ebp+var_b4]
mov     eax, [ecx+38h]
lea     edx, [eax+eax*4]
lea     edx, [ecx+edx*8+48h]
lea     eax, [ecx+48h]
add     esp, 4
mov     [ebp+var_b8], edx
mov     [ebp+var_bc], eax
cmp     eax, edx
jz      short loc_100306ef
jmp     short loc_100306b0
mov     ecx, 80h
mov     [eax+1ch], cx
mov     edx, [ebp+var_bc]
mov     eax, [ebp+var_d0]
mov     [edx], eax
mov     eax, [ebp+var_bc]
add     eax, 28h
mov     [ebp+var_bc], eax
cmp     eax, [ebp+var_b8]
jnz     short loc_100306b0
mov     ecx, dword ptr [ebp+var_b4]
jmp     short loc_100306ef
mov     ecx, [ebx+10h]
mov     dword ptr [ebp+var_b4], ecx
mov     eax, [ebp+var_dc]
inc     dword ptr [eax+0ach]
mov     edx, [eax+0a4h]
mov     [ecx+4], edx
mov     ecx, dword ptr [ebp+var_b4]
mov     edx, [ebp+var_f8]
mov     [ecx+1ch], edx
mov     ecx, dword ptr [ebp+var_b4]
mov     edx, [ebp+var_f4]
mov     [ecx+20h], edx
mov     ecx, [eax+68h]
mov     edx, dword ptr [ebp+var_b4]
mov     [edx+40h], ecx
mov     ecx, dword ptr [ebp+var_b4]
lea     edx, [ecx+20h]
mov     [eax+0a4h], ecx
mov     [eax+8], edx
mov     dword ptr [eax+68h], 0
mov     esi, [ecx+38h]
mov     [eax+18h], esi
mov     cx, [ecx+3ch]
mov     [eax+2eh], cx
mov     ecx, esi
lea     ecx, [ecx+ecx*4+5]
lea     ecx, [edx+ecx*8]
mov     [ebp+var_e4], edx
mov     edx, dword ptr [ebp+var_b4+4]
mov     [eax+40h], ecx
mov     esi, [edx]
mov     [eax+4], esi
mov     [ebp+var_10c], esi
mov     esi, [edx+4]
mov     [eax+1ch], esi
movzx   esi, word ptr [eax+2eh]
lea     ecx, [ecx+esi*4]
mov     [eax+0bch], ecx
mov     edx, [edx+10h]
push    edx
push    0
push    ecx
mov     [eax+0b8h], edx
mov     [ebp+var_d8], 0ffffffffh
call    memset
add     esp, 0ch
jmp     def_1002bdde
mov     esi, [esi+0a4h]
mov     ebx, [ebp+var_d4]
mov     [ebp+var_c8], esi
mov     eax, [esi+28h]
lea     edx, [eax+eax*4]
mov     eax, [esi+8]
mov     eax, [eax+edx*4+4]
add     eax, [edi+4]
mov     edx, [esi+0ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*8]
push    1000h
push    eax
mov     [ebp+src], eax
call    sub_10024d50
add     esp, 8
jmp     def_1002bdde
cmp     dword ptr [edi+4], 0
mov     eax, [edi+8]
cdq
jz      short loc_10030814
mov     ecx, [ebp+var_d0]
add     [ecx+1e0h], eax
adc     [ecx+1e4h], edx
jmp     def_1002bdde
add     [esi+8ch], eax
adc     [esi+90h], edx
jmp     def_1002bdde
cmp     dword ptr [edi+4], 0
jz      short loc_10030852
mov     eax, [ebp+var_d0]
mov     ecx, [eax+1e0h]
or      ecx, [eax+1e4h]
jnz     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     edx, [esi+8ch]
or      edx, [esi+90h]
jnz     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     esi, [esi+0a4h]
test    esi, esi
jz      short loc_100308ad
mov     ecx, esi
mov     [ebp+src], ecx
mov     eax, [ecx+4]
test    eax, eax
jz      short loc_1003089f
lea     esp, [esp+0]
mov     ecx, eax
mov     [ebp+src], ecx
mov     eax, [ecx+4]
test    eax, eax
jnz     short loc_10030890
mov     eax, [edi+4]
mov     ecx, [ecx+0ch]
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*8]
jmp     short loc_100308b6
mov     eax, [edi+4]
lea     edx, [eax+eax*4]
lea     esi, [ebx+edx*8]
mov     [ebp+var_c8], esi
call    sub_100249d0
mov     edi, [edi+8]
mov     ecx, [ebp+var_e4]
lea     eax, [edi+edi*4]
lea     esi, [ecx+eax*8]
call    sub_100249d0
mov     ecx, [esi+10h]
mov     eax, [ebp+var_c8]
mov     esi, [esi+14h]
cmp     [eax+14h], esi
jg      def_1002bdde
jl      short loc_100308f5
cmp     [eax+10h], ecx
jnb     def_1002bdde
mov     [eax+10h], ecx
mov     [eax+14h], esi
jmp     def_1002bdde
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
cmp     dword ptr [ebx+eax*8+14h], 0
jl      def_1002bdde
jg      short loc_1003091e
cmp     dword ptr [ebx+eax*8+10h], 0
jbe     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
cmp     dword ptr [ebx+eax*8+14h], 0
jg      def_1002bdde
jl      short loc_1003094b
cmp     dword ptr [ebx+eax*8+10h], 0
jnb     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     eax, [edi+4]
lea     eax, [eax+eax*4]
lea     ecx, [ebx+eax*8]
mov     eax, [edi+0ch]
cdq
add     [ecx+10h], eax
adc     [ecx+14h], edx
mov     edx, [ecx+10h]
or      edx, [ecx+14h]
jnz     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
movzx   ecx, byte ptr [edi+3]
mov     edx, [esi+0ch]
mov     [ebp+var_c8], ecx
mov     eax, [edi+8]
lea     eax, [eax+eax*4]
lea     ebx, [ebx+eax*8]
xor     eax, eax
mov     [ebp+var_bc], ebx
mov     [ebp+var_78], edx
mov     [ebp+src], eax
test    ecx, ecx
jle     short loc_100309e8
mov     ecx, [ebp+var_78]
mov     [ecx+eax*4], ebx
mov     ecx, [ebp+var_bc]
call    sub_1002b960
mov     eax, [ebp+src]
mov     ebx, [ebp+var_bc]
inc     eax
add     ebx, 28h
mov     [ebp+src], eax
mov     [ebp+var_bc], ebx
cmp     eax, [ebp+var_c8]
jl      short loc_100309b3
mov     edx, [edi+10h]
mov     ecx, [ebp+var_e4]
mov     [ebp+var_b8], edx
mov     eax, [edi+0ch]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*8]
mov     [ebp+size], eax
mov     [ebp+var_88], eax
inc     dword ptr [eax+18h]
mov     eax, [ebp+var_d0]
xor     esi, esi
mov     dword ptr [ebp+var_b4+4], eax
mov     eax, [ebp+var_b8]
mov     edx, 1
mov     word ptr [ebp+var_94], dx
mov     [ebp+var_ac], esi
mov     [ebp+var_8c], esi
mov     [ebp+var_90], esi
mov     [ebp+var_80], esi
mov     [ebp+var_84], esi
mov     [ebp+var_7c], esi
test    byte ptr [eax+3], 8
jz      short loc_10030a5c
mov     ecx, [edi-4]
mov     [ebp+var_84], ecx
mov     edx, [ebp+var_78]
mov     ecx, [ebp+var_c8]
mov     eax, [eax+10h]
push    edx
push    ecx
lea     edx, [ebp+var_b8]
push    edx
call    eax
add     esp, 0ch
cmp     [ebp+var_80], esi
jz      short loc_10030ab6
mov     bl, 1
lea     edi, [ebp+var_b4+4]
call    sub_100253e0
mov     ebx, [ebp+var_dc]
mov     esi, [ebp+var_d0]
push    eax
push    offset as
add     ebx, 34h
call    sub_10009bf0
mov     ecx, [ebp+var_80]
mov     edi, [ebp+var_e8]
add     esp, 8
mov     [ebp+var_cc], ecx
xor     esi, esi
cmp     [ebp+var_7c], esi
jz      short loc_10030adf
mov     edi, [edi-10h]
mov     [ebp+src], edi
cmp     edi, esi
jz      short loc_10030adf
mov     eax, [ebp+var_e4]
push    esi
lea     edx, [edi+edi*4]
push    1
lea     esi, [eax+edx*8]
call    sub_10024b70
add     esp, 8
lea     ecx, [ebp+var_b4+4]
push    ecx
call    sub_100247d0
add     esp, 4
jmp     def_1002bdde
mov     eax, [edi+4]
lea     edx, [eax+eax*4]
lea     ecx, [ebx+edx*8]
mov     [ebp+var_c8], ecx
mov     eax, [edi+10h]
call    sub_100246f0
mov     [ebp+var_cc], eax
test    eax, eax
jz      short loc_10030b3e
mov     edi, [ebp+var_c8]
mov     bl, 1
call    sub_100253e0
mov     ebx, [ebp+var_dc]
mov     esi, [ebp+var_d0]
push    eax
push    offset as
add     ebx, 34h
call    sub_10009bf0
add     esp, 8
movzx   ecx, byte ptr [ebp+var_ec]
mov     eax, [ebp+var_c8]
call    sub_100243f0
mov     ecx, [ebp+var_c8]
call    sub_10024d20
test    eax, eax
jnz     loc_1002caea
jmp     def_1002bdde
or      eax, 0ffffffffh
mov     [ebp+var_bc], eax
mov     [ebp+size], eax
xor     esi, esi
mov     [ebp+src], esi
mov     ecx, [edi+8]
mov     edx, [edi+4]
lea     eax, [ebp+var_bc]
push    eax
mov     eax, [ebp+var_d0]
push    ecx
push    edx
push    eax
lea     eax, [ebp+size]
call    sub_100707e0
add     esp, 10h
mov     [ebp+var_cc], eax
cmp     eax, 5
jnz     short loc_10030bbe
mov     [ebp+var_cc], esi
mov     [ebp+src], 1
xor     eax, eax
mov     [ebp+var_c8], eax
mov     edi, [edi+0ch]
lea     ecx, [edi+edi*4]
lea     ebx, [ebx+ecx*8]
mov     [ebp+var_b8], ebx
mov     eax, [ebp+eax*4+src]
cdq
push    edx
push    eax
mov     esi, ebx
call    sub_10024b70
mov     eax, [ebp+var_c8]
mov     ebx, [ebp+var_b8]
inc     eax
add     ebx, 28h
add     esp, 8
mov     [ebp+var_c8], eax
mov     [ebp+var_b8], ebx
cmp     eax, 3
jl      short loc_10030bd5
jmp     def_1002bdde
mov     edx, [edi+0ch]
mov     ecx, [ebp+var_d0]
mov     [ebp+size], edx
mov     eax, [edi+4]
mov     ecx, [ecx+10h]
add     eax, eax
mov     eax, [ecx+eax*8+4]
mov     [ebp+var_c8], eax
mov     eax, [eax+4]
mov     esi, [eax]
mov     [ebp+src], esi
movzx   eax, byte ptr [esi+5]
mov     [ebp+var_bc], eax
cmp     edx, 0ffffffffh
jnz     short loc_10030c52
mov     edx, eax
mov     [ebp+size], edx
cmp     byte ptr [esi+0fh], 3
jnb     short loc_10030c6e
mov     ecx, [esi+40h]
cmp     dword ptr [ecx], 0
jz      short loc_10030c76
cmp     dword ptr [esi+4ch], 0
jl      short loc_10030c76
jg      short loc_10030c6e
cmp     dword ptr [esi+48h], 0
jbe     short loc_10030c76
mov     edx, eax
mov     [ebp+size], edx
cmp     byte ptr [esi+0eh], 0
mov     ecx, offset dword_100796bc
jnz     short loc_10030c87
mov     ecx, [esi+90h]
mov     [ebp+var_b8], ecx
cmp     edx, 5
jnz     short loc_10030cbd
call    sub_1000ba20
test    eax, eax
jz      short loc_10030ca6
mov     eax, esi
call    sub_10016770
test    eax, eax
jnz     short loc_10030cb7
mov     edx, [ebp+var_bc]
mov     [ebp+size], edx
jmp     loc_10030d92
mov     eax, [ebp+var_bc]
cmp     edx, eax
jz      loc_10030d92
cmp     eax, 5
jz      short loc_10030cd3
cmp     edx, 5
jnz     loc_10030d92
mov     ecx, [ebp+var_d0]
cmp     byte ptr [ecx+30h], 0
jz      short loc_10030d4f
cmp     dword ptr [ecx+7ch], 1
jg      short loc_10030d4f
cmp     eax, 5
jnz     short loc_10030d09
mov     eax, esi
call    sub_100168b0
mov     [ebp+var_cc], eax
test    eax, eax
jnz     short loc_10030d41
mov     ecx, [ebp+size]
mov     eax, [ebp+src]
jmp     short loc_10030d13
cmp     eax, 4
jnz     short loc_10030d1e
lea     ecx, [eax-2]
mov     eax, esi
call    sub_10016610
mov     edx, [ebp+size]
mov     ecx, [ebp+var_c8]
xor     eax, eax
cmp     edx, 5
setz    al
inc     eax
push    eax
push    ecx
call    sub_10022fc0
add     esp, 8
mov     [ebp+var_cc], eax
test    eax, eax
jz      short loc_10030d86
mov     edx, [ebp+var_bc]
mov     [ebp+size], edx
jmp     short loc_10030d8c
mov     [ebp+var_cc], 1
mov     eax, offset ainto
cmp     edx, 5
jz      short loc_10030d68
mov     eax, offset aoutof
mov     ebx, [ebp+var_dc]
push    eax
push    offset acannotchangesw
add     ebx, 34h
mov     esi, ecx
call    sub_10009bf0
add     esp, 8
jmp     def_1002bdde
mov     edx, [ebp+size]
mov     esi, [ebp+src]
mov     ecx, edx
mov     eax, esi
call    sub_10016610
mov     [ebp+size], eax
mov     edi, [edi+8]
lea     edx, [edi+edi*4]
lea     edx, [ebx+edx*8]
mov     eax, 0a02h
mov     [edx+1ch], ax
mov     eax, [ebp+size]
mov     [ebp+var_d4], edx
cmp     eax, 6
jnz     short loc_10030dc8
xor     ecx, ecx
jmp     short loc_10030dcf
mov     ecx, ds:off_10076bf4[eax*4]
mov     [edx+4], ecx
call    sub_1000ba20
movzx   ecx, byte ptr [ebp+var_ec]
mov     [edx+18h], eax
mov     eax, edx
mov     byte ptr [edx+1fh], 1
call    sub_100243f0
jmp     def_1002bdde
mov     eax, [ebp+var_d0]
lea     ecx, [esi+34h]
call    sub_100627b0
mov     [ebp+var_cc], eax
jmp     def_1002bdde
mov     ecx, [edi+4]
mov     edx, [ebp+var_d0]
mov     eax, [edx+10h]
add     ecx, ecx
mov     ebx, [eax+ecx*8+4]
mov     [ebp+var_c8], ebx
call    sub_1001c980
mov     [ebp+var_cc], eax
cmp     eax, 65h
jnz     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
mov     [ebp+var_cc], 0
jmp     def_1002bdde
cmp     dword ptr [edi+4], 0
jnz     short loc_10030e65
mov     eax, [ebp+var_d0]
call    sub_10028ef0
jmp     def_1002bdde
mov     byte ptr [esi+5fh], 1
jmp     def_1002bdde
mov     cl, [edi+0ch]
test    cl, cl
jnz     short loc_10030e88
mov     edx, [ebp+var_d0]
test    dword ptr [edx+18h], 80000h
jnz     def_1002bdde
mov     edx, [edi+8]
mov     eax, [edi+4]
push    edx
mov     edx, [ebp+var_d0]
mov     edx, [edx+10h]
add     eax, eax
mov     esi, [edx+eax*8+4]
call    sub_10022eb0
add     esp, 4
mov     [ebp+var_cc], eax
cmp     al, 6
jnz     def_1002bdde
mov     eax, [edi+10h]
mov     ebx, [ebp+var_dc]
mov     esi, [ebp+var_d0]
push    eax
push    offset adatabasetablei
add     ebx, 34h
call    sub_10009bf0
add     esp, 8
jmp     def_1002bdde
mov     edi, [edi+10h]
mov     esi, [ebp+var_d0]
mov     [ebp+var_c8], edi
call    sub_10063b50
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_c8]
test    eax, eax
jz      def_1002bdde
mov     ecx, [eax+8]
mov     edx, [ebp+var_dc]
push    ecx
push    edx
call    sub_1002bbe0
add     esp, 8
jmp     def_1002bdde
mov     eax, [edi+10h]
add     esi, 34h
push    esi
push    eax
mov     eax, [edi+4]
mov     edi, [ebp+var_d0]
call    sub_10063690
add     esp, 8
mov     [ebp+var_cc], eax
jmp     def_1002bdde
mov     byte ptr [esi+62h], 2
mov     ecx, [edi+10h]
mov     eax, [edi+4]
push    ecx
mov     ecx, [ebp+var_d0]
call    sub_10063950
add     esp, 4
mov     [ebp+var_cc], eax
mov     byte ptr [esi+62h], 0
jmp     def_1002bdde
xor     eax, eax
mov     [ebp+var_c8], eax
mov     [ebp+src], eax
mov     edx, [edi+10h]
mov     eax, [edx+8]
mov     [ebp+size], eax
mov     ecx, [eax]
lea     edx, [ebp+src]
push    edx
mov     [ebp+var_bc], ecx
push    eax
mov     eax, [ecx+18h]
call    eax
mov     ecx, [ebp+size]
push    ecx
mov     ebx, eax
push    esi
mov     [ebp+var_cc], ebx
call    sub_1002bbe0
add     esp, 10h
test    ebx, ebx
jnz     def_1002bdde
mov     edx, [ebp+size]
mov     eax, [ebp+src]
push    ebx
push    0ffffffffh
mov     [eax], edx
mov     ecx, [edi+4]
push    ebx
push    ecx
push    esi
call    sub_1002b990
add     esp, 14h
mov     [ebp+var_c8], eax
test    eax, eax
jz      short loc_10030ffe
mov     edx, [ebp+src]
mov     [eax+24h], edx
mov     eax, [ebp+src]
mov     ecx, [eax]
mov     edx, [ecx]
mov     eax, [ebp+var_c8]
mov     [eax+28h], edx
jmp     def_1002bdde
mov     ecx, [ebp+var_d0]
mov     byte ptr [ecx+32h], 1
mov     edx, [ebp+src]
mov     eax, [ebp+var_bc]
mov     ecx, [eax+1ch]
push    edx
call    ecx
add     esp, 4
jmp     def_1002bdde
mov     eax, [edi+0ch]
lea     edx, [eax+eax*4]
lea     ebx, [ebx+edx*8]
mov     edx, [esi+40h]
mov     esi, [esi+0ch]
mov     [ebp+var_bc], ebx
lea     eax, [ebx+28h]
mov     [ebp+var_b8], eax
mov     ecx, [edi+4]
mov     ecx, [edx+ecx*4]
mov     [ebp+var_ac], ecx
mov     edx, [ecx+24h]
mov     dword ptr [ebp+var_b4], edx
mov     ecx, [edx]
mov     dword ptr [ebp+var_b4+4], ecx
mov     ecx, [ecx]
mov     [ebp+size], ecx
mov     ecx, [eax+10h]
mov     [ebp+var_c8], ecx
mov     eax, [ebx+10h]
mov     [ebp+src], eax
xor     eax, eax
mov     [ebp+var_ac+4], eax
mov     dword ptr [ebp+var_a4+4], esi
mov     dword ptr [ebp+var_a4], eax
cmp     ecx, eax
jle     short loc_100310d6
mov     edx, [ebp+var_b8]
lea     ecx, [eax+eax*4+5]
lea     ecx, [edx+ecx*8]
mov     edx, dword ptr [ebp+var_a4+4]
mov     [edx+eax*4], ecx
mov     eax, dword ptr [ebp+var_a4]
mov     ecx, dword ptr [ebp+var_a4+4]
mov     ecx, [ecx+eax*4]
call    sub_1002b960
mov     eax, dword ptr [ebp+var_a4]
mov     ecx, [ebp+var_c8]
inc     eax
mov     dword ptr [ebp+var_a4], eax
cmp     eax, ecx
jl      short loc_1003108f
mov     edx, dword ptr [ebp+var_b4]
mov     eax, dword ptr [ebp+var_a4+4]
mov     esi, [ebp+var_dc]
push    eax
mov     eax, [ebp+src]
push    ecx
mov     byte ptr [esi+62h], 1
mov     ecx, [edi+10h]
push    ecx
mov     ecx, [ebp+size]
push    eax
push    edx
mov     edx, [ecx+20h]
call    edx
mov     ebx, eax
mov     eax, dword ptr [ebp+var_b4+4]
add     esp, 14h
push    eax
push    esi
mov     [ebp+var_cc], ebx
mov     byte ptr [esi+62h], 0
call    sub_1002bbe0
add     esp, 8
test    ebx, ebx
jnz     short loc_1003113d
mov     ecx, dword ptr [ebp+var_b4]
mov     edx, [ebp+size]
mov     eax, [edx+28h]
push    ecx
call    eax
add     esp, 4
mov     [ebp+var_ac+4], eax
cmp     [ebp+var_ac+4], 0
jz      short loc_10031150
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
mov     ecx, [ebp+var_ac]
mov     byte ptr [ecx+1ch], 0
jmp     def_1002bdde
mov     edx, [edi+4]
mov     eax, [esi+40h]
mov     ecx, [eax+edx*4]
mov     eax, [edi+0ch]
lea     edx, [eax+eax*4]
lea     eax, [ebx+edx*8]
mov     [ebp+size], eax
cmp     byte ptr [ecx+1ch], 0
mov     [ebp+var_e0], ecx
jz      short loc_1003118f
mov     esi, eax
call    sub_10024b20
jmp     def_1002bdde
mov     eax, [ebp+var_e0]
mov     ecx, [eax+24h]
mov     eax, [ecx]
mov     [ebp+var_c8], eax
mov     edx, [eax]
push    40h
lea     eax, [ebp+var_bc]
push    0
push    eax
mov     [ebp+src], edx
call    memset
mov     ebx, [ebp+size]
add     esp, 0ch
lea     eax, [ebp+var_b4]
call    sub_10024e10
mov     ecx, [ebp+var_98]
and     ecx, 0bf01h
or      ecx, 1
mov     word ptr [ebp+var_98], cx
mov     edx, [edi+8]
mov     ecx, [ebp+var_e0]
push    edx
mov     edx, [ecx+24h]
lea     eax, [ebp+var_bc]
push    eax
mov     eax, [ebp+src]
mov     ecx, [eax+2ch]
push    edx
call    ecx
mov     edx, [ebp+var_c8]
add     esp, 0ch
push    edx
push    esi
mov     [ebp+var_cc], eax
call    sub_1002bbe0
mov     eax, [ebp+var_84]
add     esp, 8
test    eax, eax
jz      short loc_1003122b
mov     [ebp+var_cc], eax
movzx   ecx, byte ptr [ebp+var_ec]
lea     eax, [ebp+var_b4]
call    sub_100243f0
mov     eax, [ebp+size]
lea     ebx, [ebp+var_b4]
call    sub_10024e10
mov     ecx, [ebp+size]
call    sub_10024d20
test    eax, eax
jnz     loc_1002caea
jmp     def_1002bdde
mov     ecx, [esi+40h]
mov     [ebp+size], 0
mov     eax, [edi+4]
mov     eax, [ecx+eax*4]
mov     [ebp+var_bc], eax
cmp     byte ptr [eax+1ch], 0
jnz     def_1002bdde
mov     edx, [eax+24h]
mov     ecx, [edx]
mov     [ebp+var_c8], ecx
mov     ecx, [ecx]
mov     [ebp+src], ecx
mov     byte ptr [esi+62h], 1
mov     eax, [eax+24h]
mov     ecx, [ecx+24h]
push    eax
call    ecx
mov     edx, [ebp+var_c8]
add     esp, 4
push    edx
mov     ebx, eax
push    esi
mov     [ebp+var_cc], ebx
mov     byte ptr [esi+62h], 0
call    sub_1002bbe0
add     esp, 8
test    ebx, ebx
jnz     short loc_100312ea
mov     eax, [ebp+var_bc]
mov     ecx, [eax+24h]
mov     edx, [ebp+src]
mov     eax, [edx+28h]
push    ecx
call    eax
add     esp, 4
mov     [ebp+size], eax
cmp     [ebp+size], 0
jnz     def_1002bdde
mov     edi, [edi+8]
dec     edi
mov     [ebp+var_d8], edi
jmp     def_1002bdde
mov     ecx, [edi+10h]
mov     edx, [ecx+8]
mov     [ebp+var_c8], edx
mov     edi, [edi+4]
lea     eax, [edi+edi*4]
lea     eax, [ebx+eax*8]
mov     ecx, 1
mov     [ebp+src], eax
call    sub_100243f0
mov     [ebp+var_cc], eax
test    eax, eax
jnz     def_1002bdde
mov     edx, [ebp+src]
mov     eax, [ebp+var_c8]
mov     edx, [edx+4]
mov     ecx, [eax]
push    edx
push    eax
mov     eax, [ecx+4ch]
call    eax
mov     ecx, [ebp+var_c8]
push    ecx
push    esi
mov     [ebp+var_cc], eax
call    sub_1002bbe0
add     esp, 10h
mov     byte ptr [esi+5fh], 0
jmp     def_1002bdde
mov     edx, [edi+10h]
mov     eax, [edx+8]
mov     [ebp+var_c8], eax
mov     eax, [eax]
mov     [ebp+src], eax
mov     ecx, [edi+8]
mov     [ebp+size], ecx
cmp     dword ptr [eax+34h], 0
jz      def_1002bdde
mov     eax, [ebp+var_d0]
mov     dl, [eax+36h]
mov     eax, [esi+0ch]
mov     dword ptr [ebp+var_b4+4], eax
mov     eax, [edi+0ch]
mov     [ebp+var_f9], dl
lea     edx, [eax+eax*4]
lea     ebx, [ebx+edx*8]
mov     [ebp+var_ac], ebx
mov     [ebp+var_bc], 0
test    ecx, ecx
jle     short loc_10031410
lea     esp, [esp+0]
mov     ecx, ebx
call    sub_1002b960
mov     eax, [ebp+var_ac]
mov     ecx, [ebp+var_bc]
mov     edx, dword ptr [ebp+var_b4+4]
mov     [edx+ecx*4], eax
mov     eax, [ebp+var_bc]
mov     ebx, [ebp+var_ac]
inc     eax
add     ebx, 28h
mov     [ebp+var_ac], ebx
mov     [ebp+var_bc], eax
cmp     eax, [ebp+size]
jl      short loc_100313d0
mov     al, [edi+3]
mov     ecx, [ebp+var_d0]
mov     [ecx+36h], al
mov     eax, dword ptr [ebp+var_b4+4]
mov     ecx, [ebp+size]
lea     edx, [ebp+var_b8]
push    edx
mov     edx, [ebp+var_c8]
push    eax
mov     eax, [ebp+src]
push    ecx
mov     ecx, [eax+34h]
push    edx
call    ecx
mov     dl, [ebp+var_f9]
mov     ebx, eax
mov     eax, [ebp+var_d0]
mov     [eax+36h], dl
mov     ecx, [ebp+var_c8]
push    ecx
push    esi
mov     [ebp+var_cc], ebx
call    sub_1002bbe0
add     esp, 18h
test    ebx, ebx
jnz     short loc_100314a5
cmp     [edi+4], ebx
jz      short loc_1003149d
mov     eax, [ebp+var_b8]
mov     edx, dword ptr [ebp+var_b4]
mov     ecx, [ebp+var_d0]
mov     [ebp+var_f8], eax
mov     [ecx+1ch], eax
mov     eax, dword ptr [ebp+var_b4]
mov     [ebp+var_f4], edx
mov     [ecx+20h], eax
inc     dword ptr [esi+68h]
jmp     def_1002bdde
cmp     ebx, 13h
jnz     short loc_1003149d
mov     ecx, [edi+10h]
cmp     byte ptr [ecx+10h], 0
jz      short loc_1003149d
mov     al, [edi+3]
cmp     al, 4
jnz     short loc_100314c9
mov     [ebp+var_cc], 0
jmp     def_1002bdde
cmp     al, 5
jnz     short loc_100314da
mov     eax, 2
mov     [esi+5ch], al
jmp     def_1002bdde
movzx   eax, al
mov     [esi+5ch], al
jmp     def_1002bdde
mov     edx, [edi+4]
mov     eax, [ebp+var_d0]
mov     ecx, [eax+10h]
add     edx, edx
mov     edx, [ecx+edx*8+4]
mov     eax, [edx+4]
mov     ecx, [eax+2ch]
mov     eax, [ebp+var_d4]
mov     [eax+10h], ecx
mov     dword ptr [eax+14h], 0
jmp     def_1002bdde
mov     eax, [ebp+var_d0]
mov     edx, [edi+4]
mov     ecx, [eax+10h]
mov     edi, [edi+0ch]
add     edx, edx
mov     ecx, [ecx+edx*8+4]
xor     eax, eax
test    edi, edi
jz      short loc_10031539
mov     edx, [ecx+4]
mov     eax, [edx+2ch]
cmp     eax, edi
jnb     short loc_10031539
mov     eax, edi
call    sub_1001b7e0
mov     ecx, [ebp+var_d4]
cdq
mov     [ecx+10h], eax
mov     [ecx+14h], edx
jmp     short def_1002bdde
mov     eax, [ebp+var_d0]
cmp     dword ptr [eax+90h], 0
jz      short def_1002bdde
mov     edi, [edi+10h]
mov     ecx, edi
test    edi, edi
jnz     short loc_1003156b
mov     ecx, [esi+9ch]
mov     [ebp+var_c8], ecx
test    ecx, ecx
jz      short def_1002bdde
push    esi
call    sub_1002b5a0
mov     esi, [ebp+var_d0]
add     esp, 4
mov     [ebp+src], eax
mov     ecx, [esi+94h]
mov     edx, [esi+90h]
push    eax
push    ecx
call    edx
mov     eax, [ebp+src]
add     esp, 8
mov     ecx, esi
call    sub_10009810
inc     [ebp+var_d8]
cmp     [ebp+var_cc], 0
jnz     loc_1002cb10
mov     esi, [ebp+var_dc]
mov     ebx, [ebp+var_e4]
jmp     loc_1002bd30
mov     [ebp+var_cc], 9
jmp     loc_1002cb10
mov     eax, [edi+4]
mov     edx, [ebp+var_d8]
mov     [esi+58h], eax
mov     cl, [edi+8]
mov     [esi+5ch], cl
mov     [esi+54h], edx
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_10031644
mov     ebx, [ebp+var_dc]
mov     esi, [ebp+var_d0]
push    eax
push    offset as
add     ebx, 34h
call    sub_10009bf0
mov     eax, [edi+10h]
mov     ecx, [ebp+var_dc]
mov     edx, [ecx+9ch]
mov     ecx, [edi+4]
push    eax
mov     eax, [ebp+var_d8]
push    edx
push    eax
push    offset aabortatdinss
push    ecx
call    sub_1000b150
mov     esi, [ebp+var_dc]
add     esp, 1ch
jmp     short loc_10031669
cmp     dword ptr [esi+58h], 0
jz      short loc_10031669
mov     edx, [esi+9ch]
mov     eax, [ebp+var_d8]
mov     ecx, [edi+4]
push    edx
push    eax
push    offset aconstraintfail
push    ecx
call    sub_1000b150
add     esp, 10h
mov     eax, esi
call    sub_10027960
mov     edi, 5
cmp     eax, edi
jz      short loc_100316c0
mov     edi, [esi+58h]
neg     edi
sbb     edi, edi
and     edi, 0ffffff9ch
add     edi, 65h
jmp     loc_1002cb9e
lea     ecx, [ebp+var_b8]
push    ecx
call    sub_100247d0
add     esp, 4
jmp     loc_1002c2f4
mov     [ebp+var_cc], 14h
jmp     loc_10031789
mov     edx, [ebp+var_d8]
mov     [esi+54h], edx
mov     byte ptr [ebx+30h], 0
mov     edi, 5
mov     [esi+58h], edi
jmp     loc_1002cb9e
test    edi, edi
jz      short loc_10031708
mov     esi, [ebp+var_d0]
push    204h
mov     eax, esi
call    sub_1006fdb0
add     esp, 4
mov     byte ptr [esi+30h], 1
mov     esi, [ebp+var_d0]
call    sub_1006f5a0
mov     eax, [ebp+var_dc]
mov     edi, [eax+58h]
neg     edi
sbb     edi, edi
and     edi, 0ffffff9ch
add     edi, 65h
jmp     loc_1002cb9e
push    1
mov     eax, esi
call    sub_100278f0
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     loc_1002cb9e
mov     al, byte ptr [ebp+var_c8]
mov     edi, [ebp+var_d0]
mov     [edi+30h], al
mov     eax, esi
call    sub_10027960
cmp     eax, 5
jnz     short loc_100316e5
mov     ecx, [ebp+var_d8]
mov     dl, 1
sub     dl, byte ptr [ebp+var_c8]
mov     [esi+54h], ecx
mov     [edi+30h], dl
mov     edi, eax
mov     [esi+58h], edi
jmp     loc_1002cb9e
mov     ecx, [ebp+var_d8]
mov     edi, 5
mov     [esi+54h], ecx
mov     [esi+58h], edi
jmp     loc_1002cb9e
mov     eax, 10461h
call    sub_10071c60
mov     [ebp+var_cc], eax
jmp     short loc_10031789
mov     [ebp+var_cc], 0dh
mov     edx, [ebp+var_d0]
cmp     byte ptr [edx+32h], 0
jz      short loc_100317b1
mov     [ebp+var_cc], 7
mov     ecx, [ebp+var_cc]
mov     eax, offset aunknownerror
call    sub_1006fe80
jmp     short loc_100317e4
cmp     [ebp+var_cc], 0c0ah
jz      loc_1002cb10
cmp     [ebp+var_cc], 204h
jz      short loc_100317df
mov     ecx, [ebp+var_cc]
mov     eax, offset aunknownerror
call    sub_1006fe80
jmp     short loc_100317e4
mov     eax, offset aabortduetoroll
mov     ebx, [ebp+var_dc]
push    eax
push    offset as
add     ebx, 34h
mov     esi, edx
call    sub_10009bf0
add     esp, 8
jmp     loc_1002cb10
mov     eax, 9
mov     [esi+58h], eax
mov     ecx, ds:off_100794c4
mov     [ebp+var_cc], eax
mov     eax, offset aunknownerror
test    ecx, ecx
jz      short loc_10031821
mov     eax, ecx
mov     ebx, [ebp+var_dc]
mov     esi, [ebp+var_d0]
push    eax
push    offset as
add     ebx, 34h
call    sub_10009bf0
add     esp, 8
jmp     loc_1002cb10
push    ebp
mov     ebp, esp
sub     esp, 8
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_4]
push    ebx
push    esi
mov     esi, eax
push    edi
mov     edi, [esi+14h]
mov     eax, [edi+44h]
mov     [eax+10h], ecx
mov     [eax+14h], edx
mov     eax, [esi+14h]
push    eax
mov     [ebp+var_4], 0
call    sub_10029be0
mov     ebx, eax
add     esp, 4
cmp     ebx, 64h
jnz     loc_10031bde
mov     ecx, [edi+40h]
mov     eax, [esi+0ch]
mov     edx, [ecx]
mov     ecx, [edx+54h]
add     eax, eax
add     eax, eax
mov     ecx, [eax+ecx]
cmp     ecx, 0ch
jnb     short loc_10031b6a
test    ecx, ecx
jnz     short loc_10031b2d
mov     eax, offset anull_2
jmp     short loc_10031b3c
mov     eax, offset areal_0
cmp     ecx, 7
jz      short loc_10031b3c
mov     eax, offset ainteger_0
mov     edx, [esi+18h]
push    eax
push    offset acannotopenvalu
push    edx
call    sub_1000ae80
mov     edi, eax
mov     eax, [esi+14h]
add     esp, 0ch
push    eax
mov     ebx, 1
call    sub_10029010
add     esp, 4
mov     dword ptr [esi+14h], 0
jmp     short loc_10031be1
mov     edx, [edx+58h]
mov     eax, [eax+edx]
mov     [esi+8], eax
lea     eax, [ecx-0ch]
shr     eax, 1
mov     [esi+4], eax
mov     ecx, [edi+40h]
mov     edx, [ecx]
mov     eax, [edx]
mov     [esi+10h], eax
mov     edi, [eax]
call    sub_10019320
mov     edi, [esi+10h]
mov     eax, [edi+14h]
push    eax
call    sub_10009770
mov     dword ptr [edi+14h], 0
mov     byte ptr [edi+54h], 1
mov     ecx, [esi+10h]
mov     esi, [ecx]
add     esp, 4
cmp     byte ptr [esi+9], 0
jz      short loc_10031bce
dec     dword ptr [esi+0ch]
jnz     short loc_10031bce
mov     edx, [esi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_10031bca
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
mov     edx, [ebp+arg_8]
xor     eax, eax
mov     ecx, eax
mov     [edx], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+var_4]
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_10031c56
push    eax
call    sub_10029010
mov     edi, eax
add     esp, 4
mov     dword ptr [esi+14h], 0
test    edi, edi
jnz     short loc_10031c2a
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
mov     edx, [esi+18h]
push    eax
push    ecx
push    offset anosuchrowidlld
push    edx
call    sub_1000ae80
mov     edx, [ebp+arg_8]
mov     ecx, 1
mov     [edx], eax
add     esp, 10h
mov     eax, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+18h]
push    eax
call    sub_10070900
mov     ecx, [esi+18h]
add     esp, 4
push    eax
push    offset as
push    ecx
call    sub_1000ae80
mov     edx, [ebp+arg_8]
mov     [edx], eax
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
mov     [eax], edi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 6ch
mov     ecx, [ebp+arg_1c]
push    ebx
xor     ebx, ebx
xor     eax, eax
cmp     [ebp+arg_18], ebx
push    esi
setnz   al
push    edi
mov     edi, [ebp+arg_0]
mov     [ecx], ebx
mov     [esp+78h+var_44], ebx
mov     [esp+78h+var_58], ebx
mov     [esp+78h+var_54], ebx
mov     [ebp+arg_18], eax
mov     eax, [edi+0ch]
cmp     eax, ebx
jz      short loc_10031cae
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, 1ch
mov     esi, edi
call    sub_10009a40
mov     [esp+78h+var_68], eax
test    eax, eax
jz      loc_100324ac
mov     ecx, [esp+78h+var_68]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+14h], eax
mov     [ecx+18h], eax
mov     ecx, 22ch
call    sub_10009a40
mov     [esp+78h+var_54], eax
test    eax, eax
jz      loc_100324ac
jmp     short loc_10031d00
mov     esi, [esp+78h+var_54]
push    22ch
push    0
push    esi
call    memset
add     esp, 0ch
mov     eax, ebx
mov     ecx, edi
mov     [esi], edi
call    sub_10009810
push    edi
mov     [esp+7ch+var_64], 0
call    sub_10019440
mov     eax, [esi]
add     esp, 4
cmp     byte ptr [eax+79h], 0
jnz     short loc_10031d4d
lea     edx, [esi+4]
push    edx
push    eax
call    sub_100537d0
add     esp, 8
test    eax, eax
jnz     loc_10032392
mov     eax, [ebp+arg_4]
mov     ebx, [ebp+arg_8]
mov     ecx, [esi]
push    eax
push    ebx
push    ecx
call    sub_1003f510
add     esp, 0ch
mov     [esp+78h+var_60], eax
test    eax, eax
jz      loc_10032355
test    byte ptr [eax+22h], 10h
jnz     loc_1003239a
cmp     dword ptr [eax+1ch], 0
jnz     loc_100323a2
mov     ebx, [eax+8]
mov     [esp+78h+var_5c], 0
mov     [esp+78h+var_4c], ebx
test    ebx, ebx
jle     short loc_10031dea
mov     esi, [eax+0ch]
mov     ecx, [esi]
mov     al, [ecx]
mov     edx, [ebp+arg_c]
test    al, al
jz      short loc_10031dc2
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_10031dbe
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10031da1
mov     ebx, [esp+78h+var_4c]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_10031dea
mov     eax, [esp+78h+var_5c]
inc     eax
add     esi, 18h
mov     [esp+78h+var_5c], eax
cmp     eax, ebx
jl      short loc_10031d96
cmp     [esp+78h+var_5c], ebx
jz      loc_10032426
cmp     [ebp+arg_18], 0
jz      short loc_10031e72
xor     esi, esi
test    dword ptr [edi+18h], 4000000h
jz      short loc_10031e3a
mov     eax, [esp+78h+var_60]
mov     edx, [eax+24h]
test    edx, edx
jz      short loc_10031e3a
mov     ecx, [edx+14h]
test    ecx, ecx
jle     short loc_10031e33
lea     eax, [edx+24h]
lea     ebx, [ebx+0]
mov     ebx, [esp+78h+var_5c]
cmp     [eax], ebx
jnz     short loc_10031e2d
mov     esi, offset aforeignkey
add     eax, 8
dec     ecx
jnz     short loc_10031e20
mov     edx, [edx+4]
test    edx, edx
jnz     short loc_10031e10
mov     ecx, [esp+78h+var_60]
mov     edx, [ecx+10h]
test    edx, edx
jz      short loc_10031e6a
mov     ecx, [edx+24h]
test    ecx, ecx
jle     short loc_10031e63
mov     eax, [edx+4]
nop
mov     ebx, [esp+78h+var_5c]
cmp     [eax], ebx
jnz     short loc_10031e5d
mov     esi, offset aindexed
add     eax, 4
dec     ecx
jnz     short loc_10031e50
mov     edx, [edx+14h]
test    edx, edx
jnz     short loc_10031e45
test    esi, esi
jnz     loc_10032447
cmp     byte ptr [edi+32h], 0
jnz     loc_10032005
cmp     byte ptr [edi+0e2h], 0
jz      short loc_10031e99
mov     edx, 0c0h
cmp     dx, [edi+0e0h]
jbe     short loc_10031ed5
inc     dword ptr [edi+0f0h]
cmp     dword_10080230, 0
jz      short loc_10031f16
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10031eb5
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [esp+78h+var_48]
mov     eax, 0c0h
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10031f28
push    eax
call    dword_10080284
jmp     short loc_10031f25
mov     esi, [edi+0f8h]
test    esi, esi
jnz     short loc_10031ee7
inc     dword ptr [edi+0f4h]
jmp     short loc_10031e99
mov     eax, [esi]
mov     ecx, 1
add     [edi+0e4h], ecx
add     [edi+0ech], ecx
mov     [edi+0f8h], eax
mov     eax, [edi+0e4h]
cmp     eax, [edi+0e8h]
jle     short loc_10031f34
mov     [edi+0e8h], eax
jmp     short loc_10031f34
push    0c0h
call    dword_1008024c
mov     [esp+7ch+var_48], eax
add     esp, 4
mov     esi, [esp+78h+var_48]
test    esi, esi
jnz     short loc_10031f3c
mov     byte ptr [edi+32h], 1
test    esi, esi
jz      loc_10032005
push    0c0h
push    0
push    esi
call    memset
mov     [esi], edi
mov     eax, [edi+4]
add     esp, 0ch
test    eax, eax
jz      short loc_10031f58
mov     [eax+38h], esi
mov     ecx, [edi+4]
mov     [esi+3ch], ecx
mov     dword ptr [esi+38h], 0
mov     [edi+4], esi
mov     dword ptr [esi+30h], 26bceaa5h
mov     edx, [esp+78h+var_68]
mov     [edx+14h], esi
test    esi, esi
jz      loc_100321c8
mov     eax, [esp+78h+var_60]
mov     ecx, [eax+44h]
mov     ebx, 0fff0bdc0h
mov     [esp+78h+var_50], ebx
test    ecx, ecx
jz      short loc_10031fb4
xor     ebx, ebx
mov     [esp+78h+var_50], ebx
cmp     [edi+14h], ebx
jle     short loc_10031fb4
mov     eax, [edi+10h]
add     eax, 0ch
cmp     [eax], ecx
jz      short loc_10031fb0
inc     ebx
add     eax, 10h
cmp     ebx, [edi+14h]
jl      short loc_10031fa3
mov     [esp+78h+var_50], ebx
push    offset dword_100767ec
push    0ch
push    esi
call    sub_10025d70
add     esp, 0ch
cmp     dword ptr [esi+1ch], 0
jbe     short loc_10031fdf
mov     ecx, [esi+4]
mov     [ecx+4], ebx
cmp     dword ptr [esi+1ch], 0
jbe     short loc_10031fdf
mov     edx, [esi+4]
mov     eax, [ebp+arg_18]
mov     [edx+8], eax
mov     edi, 1
cmp     [esi+1ch], edi
jbe     short loc_1003200c
mov     ecx, [esi+4]
mov     [ecx+18h], ebx
cmp     [esi+1ch], edi
jbe     short loc_1003200c
mov     edx, [esp+78h+var_60]
mov     eax, [edx+44h]
mov     ecx, [esi+4]
mov     eax, [eax]
mov     [ecx+1ch], eax
jmp     short loc_10032010
xor     esi, esi
jmp     loc_10031f6f
mov     edx, [esp+78h+var_60]
cmp     [esi+1ch], edi
jbe     short loc_10032021
mov     ecx, [edx+44h]
mov     eax, [esi+4]
mov     ecx, [ecx+4]
mov     [eax+20h], ecx
mov     eax, edi
mov     ecx, ebx
shl     eax, cl
or      [esi+6ch], eax
cmp     ebx, edi
jz      short loc_10032042
mov     edi, [esi]
mov     edi, [edi+10h]
add     ecx, ecx
mov     ecx, [edi+ecx*8+4]
cmp     byte ptr [ecx+9], 0
jz      short loc_10032042
or      [esi+70h], eax
mov     eax, 2
cmp     [esi+1ch], eax
jbe     short loc_1003206e
mov     ecx, [esi+4]
mov     [ecx+2ch], ebx
cmp     [esi+1ch], eax
jbe     short loc_1003206e
mov     ecx, [esi+4]
mov     edi, [edx+14h]
mov     [ecx+30h], edi
cmp     [esi+1ch], eax
jbe     short loc_1003206e
mov     eax, [esi+4]
mov     ecx, [ebp+arg_18]
mov     [eax+34h], ecx
mov     eax, [esi+4]
mov     ebx, [edx]
mov     edi, [esi]
mov     [esp+78h+var_4c], eax
test    eax, eax
jz      short loc_100320c3
cmp     byte ptr [edi+32h], 0
jnz     short loc_100320c3
mov     ecx, eax
movsx   eax, byte ptr [ecx+29h]
mov     ecx, [ecx+38h]
call    sub_10025e50
mov     eax, [esp+78h+var_4c]
xor     ecx, ecx
mov     [eax+38h], ecx
cmp     ebx, ecx
jnz     short loc_100320a6
mov     [eax+38h], ecx
mov     [eax+29h], cl
jmp     short loc_100320cc
mov     ecx, ebx
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
call    sub_10009bc0
mov     ecx, [esp+78h+var_4c]
mov     [ecx+38h], eax
mov     byte ptr [ecx+29h], 0ffh
jmp     short loc_100320cc
mov     ecx, ebx
xor     eax, eax
call    sub_10025e50
mov     ebx, [esi+4]
test    ebx, ebx
jz      short loc_10032104
mov     edi, [esi]
mov     eax, 4
sub     eax, [ebp+arg_18]
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ebx+edx*4+1]
mov     ecx, [ebx+edx*4+10h]
lea     ebx, [ebx+edx*4]
call    sub_10025e50
xor     eax, eax
mov     [ebx], eax
mov     [ebx+4], eax
mov     [ebx+8], eax
mov     [ebx+0ch], eax
mov     [ebx+10h], eax
mov     byte ptr [ebx], 95h
mov     eax, [ebp+arg_18]
add     eax, 3
cmp     [esi+1ch], eax
jbe     short loc_10032133
mov     edi, [esp+78h+var_60]
mov     edx, [esi+4]
mov     edi, [edi+14h]
lea     ecx, [eax+eax*4]
mov     [edx+ecx*4+8], edi
cmp     [esi+1ch], eax
jbe     short loc_10032133
mov     edx, [esi+4]
mov     edi, [esp+78h+var_50]
lea     ecx, [eax+eax*4]
mov     [edx+ecx*4+0ch], edi
mov     ecx, [esp+78h+var_60]
mov     ebx, [ecx+8]
mov     ecx, [esi+4]
mov     edi, [esi]
inc     ebx
test    ecx, ecx
jz      short loc_10032176
cmp     byte ptr [edi+32h], 0
jnz     short loc_10032176
test    eax, eax
jns     short loc_10032152
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ecx, [ecx+edx*4]
mov     [esp+78h+var_4c], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     eax, [esp+78h+var_4c]
mov     [eax+10h], ebx
mov     byte ptr [eax+1], 0f2h
jmp     short loc_10032182
mov     ecx, ebx
mov     eax, 0fffffff2h
call    sub_10025e50
cmp     dword ptr [esi+1ch], 7
jbe     short loc_10032198
mov     ecx, [esp+78h+var_60]
mov     eax, [esi+4]
mov     edx, [ecx+8]
mov     [eax+94h], edx
mov     eax, [ebp+arg_0]
cmp     byte ptr [eax+32h], 0
jnz     short loc_100321c6
mov     eax, [esp+78h+var_54]
mov     ecx, 1
mov     [eax+1cch], ecx
mov     [eax+4ch], ecx
mov     [eax+48h], ecx
push    eax
mov     eax, esi
call    sub_10026b40
mov     edi, [ebp+arg_0]
add     esp, 4
jmp     short loc_100321c8
mov     edi, eax
mov     esi, [esp+78h+var_68]
mov     ecx, [ebp+arg_18]
mov     edx, [esp+78h+var_5c]
mov     ebx, edi
mov     [esi], ecx
mov     [esi+0ch], edx
mov     [esi+18h], edi
call    sub_10019550
cmp     byte ptr [edi+32h], 0
jnz     loc_10032489
mov     eax, esi
mov     esi, [eax+14h]
mov     eax, 1
mov     [esp+78h+var_4c], esi
call    sub_1002abc0
test    eax, eax
jnz     loc_10032314
mov     ecx, esi
mov     ebx, [ecx+44h]
movzx   eax, word ptr [ebx+1ch]
mov     [esp+78h+var_50], ebx
test    eax, 2460h
jz      loc_100322cf
test    eax, 2000h
jz      short loc_10032292
mov     esi, [ebx+10h]
test    esi, esi
jz      short loc_10032287
mov     eax, [esi+14h]
mov     [esp+78h+var_50], eax
test    eax, eax
jz      short loc_10032287
push    40h
lea     edx, [esp+7ch+var_40]
push    0
push    edx
call    memset
mov     ecx, [ebx]
lea     edx, [esp+84h+var_40]
add     esp, 0ch
mov     eax, 1
push    edx
mov     [esp+7ch+var_1c], ax
mov     [esp+7ch+var_38], ecx
mov     [esp+7ch+var_10], ebx
mov     [esp+7ch+var_40], esi
call    [esp+7ch+var_50]
mov     eax, [ebx+24h]
mov     ecx, [ebx]
add     esp, 4
call    sub_10009810
mov     ecx, 0ah
lea     esi, [esp+78h+var_38]
mov     edi, ebx
rep movsd
mov     edi, [ebp+arg_0]
push    ebx
call    sub_100247d0
add     esp, 4
jmp     short loc_100322cf
test    eax, 400h
jz      short loc_100322b2
mov     ecx, [ebx+20h]
test    ecx, ecx
jz      short loc_100322b2
mov     eax, [ebx+4]
push    eax
call    ecx
add     esp, 4
mov     dword ptr [ebx+20h], 0
jmp     short loc_100322cf
test    al, 20h
jz      short loc_100322c4
mov     ebx, [ebx+10h]
call    sub_100117b0
mov     ebx, [esp+78h+var_50]
jmp     short loc_100322cf
test    al, 40h
jz      short loc_100322cf
mov     esi, ebx
call    sub_10024b20
mov     eax, [ebx+24h]
mov     ecx, [ebx]
call    sub_10009810
mov     edx, [ebp+arg_10]
mov     eax, [ebp+arg_14]
xor     ecx, ecx
mov     [ebx+10h], edx
mov     [ebx+14h], eax
mov     eax, [esp+78h+var_4c]
mov     edx, 4
mov     [ebx+4], ecx
mov     [ebx+24h], ecx
mov     [ebx+20h], ecx
mov     [ebx+1ch], dx
mov     byte ptr [ebx+1eh], 1
mov     edx, [eax]
mov     eax, [edx+0ch]
cmp     eax, ecx
jz      short loc_10032314
push    eax
call    dword_10080284
add     esp, 4
mov     ecx, [ebp+arg_14]
mov     edx, [ebp+arg_10]
lea     eax, [esp+78h+var_64]
push    eax
mov     eax, [esp+7ch+var_68]
push    ecx
push    edx
call    sub_10031ad0
mov     ecx, [esp+84h+var_44]
inc     ecx
add     esp, 0ch
mov     [esp+78h+var_58], eax
mov     [esp+78h+var_44], ecx
cmp     ecx, 5
jge     loc_10032485
cmp     eax, 11h
jnz     loc_10032485
mov     ebx, [esp+78h+var_64]
jmp     loc_10031d00
cmp     [ebp+arg_4], 0
push    ebx
jz      short loc_10032379
mov     eax, [ebp+arg_4]
push    eax
push    offset anosuchtable
push    offset asss
push    esi
call    sub_1000bb30
add     esp, 14h
mov     byte ptr [esi+11h], 1
jmp     short loc_100323b1
push    offset anosuchtable
push    offset ass_4
push    esi
call    sub_1000bb30
add     esp, 10h
mov     byte ptr [esi+11h], 1
jmp     short loc_100323b1
inc     dword ptr [esi+44h]
mov     [esi+0ch], eax
jmp     short loc_100323b1
push    ebx
push    offset acannotopenvirt
jmp     short loc_100323a8
push    ebx
push    offset acannotopenview
push    esi
call    sub_1000bb30
add     esp, 0ch
cmp     dword ptr [esi+4], 0
jz      short loc_100323ce
xor     eax, eax
mov     ecx, edi
call    sub_10009810
mov     ecx, [esi+4]
mov     [esp+78h+var_64], ecx
mov     dword ptr [esi+4], 0
mov     ebx, edi
mov     [esp+78h+var_58], 1
call    sub_10019550
mov     esi, [esp+78h+var_68]
mov     ebx, [esp+78h+var_64]
test    esi, esi
jz      loc_100324df
mov     esi, [esi+14h]
test    esi, esi
jz      loc_100324db
mov     eax, [esi+30h]
cmp     eax, 0bdf20da3h
jz      short loc_10032409
cmp     eax, 519c2973h
jnz     short loc_1003240e
call    sub_10027d40
mov     ecx, [esi+38h]
mov     eax, [esi]
test    ecx, ecx
jz      loc_100324b2
mov     edx, [esi+3ch]
mov     [ecx+3ch], edx
jmp     loc_100324b8
xor     eax, eax
mov     ecx, edi
call    sub_10009810
mov     edx, [ebp+arg_c]
push    edx
push    offset anosuchcolumns
push    edi
call    sub_1000ae80
add     esp, 0ch
mov     [esp+78h+var_64], eax
jmp     short loc_100323ce
cmp     dword ptr [edi+1e8h], 0
push    0
jz      short loc_10032465
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1003246d
call    sub_10009770
add     esp, 4
push    esi
push    offset acannotopenscol
push    edi
call    sub_1000ae80
add     esp, 0ch
mov     [esp+78h+var_64], eax
jmp     loc_100323ce
mov     esi, [esp+78h+var_68]
cmp     [esp+78h+var_58], 0
jnz     loc_100323e1
mov     ebx, [esp+78h+var_64]
cmp     byte ptr [edi+32h], 0
jnz     loc_100323e5
mov     eax, [ebp+arg_1c]
mov     [eax], esi
jmp     loc_10032554
mov     esi, [esp+78h+var_68]
jmp     short loc_10032498
mov     ecx, [esi+3ch]
mov     [eax+4], ecx
mov     ecx, [esi+3ch]
test    ecx, ecx
jz      short loc_100324c5
mov     edx, [esi+38h]
mov     [ecx+38h], edx
push    esi
mov     dword ptr [esi+30h], 0b606c3c8h
mov     dword ptr [esi], 0
call    sub_10027f40
add     esp, 4
mov     esi, [esp+78h+var_68]
cmp     dword ptr [edi+1e8h], 0
jz      short loc_10032521
test    esi, esi
jz      short loc_1003250d
cmp     esi, [edi+0fch]
jb      short loc_1003250d
cmp     esi, [edi+100h]
jnb     short loc_1003250d
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_10032554
push    esi
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_10032554
test    esi, esi
jz      short loc_1003254b
cmp     esi, [edi+0fch]
jb      short loc_1003254b
cmp     esi, [edi+100h]
jnb     short loc_1003254b
mov     eax, [edi+0f8h]
mov     [esi], eax
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], esi
jmp     short loc_10032554
push    esi
call    sub_10009770
add     esp, 4
mov     esi, [esp+78h+var_58]
mov     ecx, ebx
neg     ecx
sbb     ecx, ecx
push    ebx
and     ecx, offset as
push    ecx
push    esi
mov     eax, edi
call    sub_1000ba40
add     esp, 0ch
cmp     dword ptr [edi+1e8h], 0
jz      short loc_100325b3
test    ebx, ebx
jz      short loc_1003259f
cmp     ebx, [edi+0fch]
jb      short loc_1003259f
cmp     ebx, [edi+100h]
jnb     short loc_1003259f
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_100325e6
push    ebx
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_100325e6
test    ebx, ebx
jz      short loc_100325dd
cmp     ebx, [edi+0fch]
jb      short loc_100325dd
cmp     ebx, [edi+100h]
jnb     short loc_100325dd
mov     edx, [edi+0f8h]
mov     [ebx], edx
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], ebx
jmp     short loc_100325e6
push    ebx
call    sub_10009770
add     esp, 4
cmp     dword ptr [edi+1e8h], 0
mov     eax, [esp+78h+var_54]
jz      short loc_1003262c
test    eax, eax
jz      short loc_10032618
cmp     eax, [edi+0fch]
jb      short loc_10032618
cmp     eax, [edi+100h]
jnb     short loc_10032618
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     short loc_1003265f
push    eax
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1003265f
test    eax, eax
jz      short loc_10032656
cmp     eax, [edi+0fch]
jb      short loc_10032656
cmp     eax, [edi+100h]
jnb     short loc_10032656
mov     ecx, [edi+0f8h]
mov     [eax], ecx
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], eax
jmp     short loc_1003265f
push    eax
call    sub_10009770
add     esp, 4
cmp     byte ptr [edi+32h], 0
mov     eax, esi
jnz     short loc_1003266f
cmp     esi, 0c0ah
jnz     short loc_10032686
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     esi, [edi+2ch]
mov     edi, [edi+0ch]
and     esi, eax
test    edi, edi
jz      short loc_1003269c
push    edi
call    dword_10080284
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_10032700
push    esi
mov     esi, [edi+18h]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_100326d0
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [edi+14h]
push    ebx
push    eax
call    sub_10029010
mov     ebx, eax
add     esp, 4
mov     eax, edi
mov     ecx, esi
call    sub_10009810
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_100326f9
push    esi
call    dword_10080284
add     esp, 4
mov     eax, ebx
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
xor     eax, eax
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, eax
test    esi, esi
jnz     short loc_1003273c
push    offset ac0d89d4a975292
push    1121ah
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
lea     eax, [esi+15h]
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, [esi+18h]
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_10032751
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
mov     edx, [esi+14h]
push    edi
mov     [ebp+var_4], edx
test    eax, eax
js      short loc_100327c4
mov     ecx, [ebp+arg_8]
test    ecx, ecx
js      short loc_100327c4
add     eax, ecx
cmp     eax, [esi+4]
jg      short loc_100327c4
test    edx, edx
jnz     short loc_10032776
lea     edi, [edx+4]
jmp     short loc_100327d6
mov     eax, [esi+10h]
mov     edi, [eax]
call    sub_10019320
mov     ecx, [ebp+arg_0]
mov     eax, [esi+8]
mov     edx, [ebp+arg_4]
add     eax, [ebp+arg_8]
push    ecx
mov     ecx, [esi+10h]
push    edx
push    eax
push    ecx
call    [ebp+arg_c]
mov     edi, eax
mov     eax, [esi+10h]
add     esp, 10h
call    sub_10019410
cmp     edi, 4
jnz     short loc_100327b9
mov     eax, [ebp+var_4]
call    sub_10027e90
mov     dword ptr [esi+14h], 0
jmp     short loc_100327d6
mov     edx, [ebp+var_4]
mov     [ebx+28h], edi
mov     [edx+58h], edi
jmp     short loc_100327d6
mov     edi, 1
push    0
push    edi
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
cmp     byte ptr [ebx+32h], 0
jnz     short loc_100327e4
cmp     edi, 0c0ah
jnz     short loc_100327fb
push    0
push    7
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
mov     byte ptr [ebx+32h], 0
mov     edi, 7
mov     esi, [ebx+2ch]
mov     ebx, [ebx+0ch]
and     esi, edi
pop     edi
test    ebx, ebx
jz      short loc_10032812
push    ebx
call    dword_10080284
add     esp, 4
pop     ebx
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    offset sub_1001da70
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
call    sub_10032710
add     esp, 10h
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    offset sub_10022f20
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
call    sub_10032710
add     esp, 10h
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10032895
cmp     dword ptr [eax+14h], 0
jz      short loc_10032895
mov     eax, [eax+4]
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
test    edi, edi
jnz     short loc_100328d4
push    offset ac0d89d4a975292
push    11265h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
lea     eax, [edi+15h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [edi+18h]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_100328e8
push    eax
call    dword_1008027c
add     esp, 4
cmp     dword ptr [edi+14h], 0
jnz     short loc_100328f5
mov     edi, 4
jmp     short loc_10032937
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
lea     eax, [esp+10h+var_4]
push    eax
push    ecx
push    edx
mov     eax, edi
call    sub_10031ad0
mov     edi, eax
add     esp, 0ch
test    edi, edi
jz      short loc_10032937
mov     ebx, [esp+10h+var_4]
mov     eax, ebx
neg     eax
sbb     eax, eax
and     eax, offset as
push    ebx
push    eax
push    edi
mov     eax, esi
call    sub_1000ba40
add     esp, 0ch
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
cmp     byte ptr [esi+32h], 0
mov     eax, edi
jnz     short loc_10032947
cmp     edi, 0c0ah
jnz     short loc_1003295e
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
test    esi, esi
jz      short loc_10032974
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
push    esi
mov     esi, [ebp+arg_4]
mov     eax, [esi+28h]
mov     ebx, [esi+4]
push    edi
mov     edi, [esi]
cdq
push    edx
push    eax
push    ebx
push    edi
call    __allrem
mov     [esp+20h+var_10], eax
test    eax, eax
jnz     short loc_100329e1
mov     ecx, [esi+8]
mov     eax, [esi+28h]
sub     ecx, edi
cmp     ecx, eax
jle     short loc_100329b7
mov     ecx, eax
mov     eax, [esi+18h]
mov     [esp+20h+var_4], ebx
push    [esp+20h+var_4]
mov     ebx, [eax]
mov     edx, edi
mov     edi, [esi+24h]
push    edx
push    ecx
push    edi
push    eax
mov     eax, [ebx+8]
call    eax
add     esp, 14h
test    eax, eax
jnz     loc_10032ad9
mov     eax, [esp+20h+var_10]
mov     edi, [esi+28h]
mov     ebx, [ebp+arg_8]
sub     edi, eax
mov     [esp+20h+var_c], edi
cmp     ebx, edi
jg      short loc_10032a0c
mov     ecx, [esi+24h]
mov     edx, [ebp+arg_c]
add     ecx, eax
mov     [edx], ecx
mov     eax, ebx
cdq
add     [esi], eax
adc     [esi+4], edx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esi+10h]
cmp     ecx, ebx
jge     short loc_10032a6a
lea     edi, [ecx+ecx]
cmp     ebx, edi
jle     short loc_10032a26
lea     ebx, [ebx+0]
add     edi, edi
cmp     ebx, edi
jg      short loc_10032a20
mov     ebx, [esi+1ch]
mov     eax, [ebp+arg_0]
push    edi
mov     [esp+24h+src], ebx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_10032a4b
mov     eax, [esp+20h+src]
mov     ecx, [ebp+arg_0]
call    sub_10009810
mov     [esi+1ch], ebx
test    ebx, ebx
jnz     short loc_10032a5c
lea     eax, [ebx+7]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [ebp+arg_8]
mov     eax, [esp+20h+var_10]
mov     [esi+10h], edi
mov     edi, [esp+20h+var_c]
mov     ecx, [esi+24h]
mov     edx, [esi+1ch]
push    edi
add     ecx, eax
push    ecx
push    edx
call    memcpy
mov     eax, edi
cdq
add     esp, 0ch
add     [esi], eax
adc     [esi+4], edx
sub     ebx, [esp+20h+var_c]
test    ebx, ebx
jle     short loc_10032acf
lea     ecx, [ecx+0]
mov     eax, [esi+28h]
mov     edi, ebx
cmp     ebx, eax
jle     short loc_10032a9b
mov     edi, eax
mov     ecx, [ebp+arg_0]
lea     eax, [esp+20h+src]
push    eax
push    edi
push    esi
push    ecx
call    sub_10032980
add     esp, 10h
test    eax, eax
jnz     short loc_10032ad9
mov     eax, [esi+1ch]
mov     edx, [esp+20h+src]
sub     eax, ebx
add     eax, [ebp+arg_8]
push    edi
push    edx
push    eax
call    memcpy
sub     ebx, edi
add     esp, 0ch
test    ebx, ebx
jg      short loc_10032a90
mov     ecx, [esi+1ch]
mov     edx, [ebp+arg_c]
mov     [edx], ecx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [esi+28h]
mov     [ebp+var_1c], eax
push    edi
mov     eax, ebx
cdq
push    edx
mov     edx, [esi]
mov     edi, ecx
mov     ecx, [esi+4]
push    eax
push    ecx
push    edx
call    __allrem
mov     ecx, eax
test    ecx, ecx
jz      short loc_10032b43
sub     ebx, ecx
cmp     ebx, 9
jl      short loc_10032b43
mov     eax, [esi+24h]
mov     edi, [ebp+var_1c]
add     eax, ecx
call    sub_1000c680
movzx   eax, al
cdq
add     [esi], eax
adc     [esi+4], edx
xor     eax, eax
pop     edi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
xor     ebx, ebx
lea     eax, [ebp+var_20]
push    eax
push    1
push    esi
push    edi
call    sub_10032980
add     esp, 10h
test    eax, eax
jnz     short loc_10032b79
mov     ecx, [ebp+var_20]
mov     al, [ecx]
mov     edx, ebx
and     edx, 0fh
inc     ebx
mov     [ebp+edx+var_18], al
test    al, al
js      short loc_10032b45
mov     edi, [ebp+var_1c]
lea     eax, [ebp+var_18]
call    sub_1000c680
xor     eax, eax
mov     ecx, [ebp+var_8]
pop     edi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
mov     esi, eax
mov     eax, [esi+4]
mov     [ebp+var_8], 0
mov     [ebp+var_4], 0
cmp     eax, [esi+0ch]
jl      short loc_10032be0
jg      short loc_10032bb8
mov     ecx, [esi]
cmp     ecx, [esi+8]
jb      short loc_10032be0
mov     eax, [esi+1ch]
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+24h]
mov     ecx, edi
call    sub_10009810
push    2ch
push    0
push    esi
call    memset
add     esp, 0ch
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
lea     edx, [ebp+var_8]
push    edx
mov     ecx, edi
call    sub_10032ae0
add     esp, 4
test    eax, eax
jnz     short loc_10032c07
mov     eax, [ebp+var_8]
lea     ecx, [esi+20h]
push    ecx
push    eax
push    esi
push    edi
mov     [esi+14h], eax
call    sub_10032980
add     esp, 10h
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 8
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+10h]
mov     ecx, [eax+4]
mov     edx, [ecx+4]
mov     eax, [ebp+arg_4]
mov     ecx, [eax+2ch]
mov     eax, [ebp+arg_c]
push    edi
mov     edi, [edx+20h]
mov     edx, [ebp+arg_8]
mov     [ebx+18h], ecx
mov     ecx, 80h
mov     [ebx], edx
mov     [ebx+4], eax
mov     [ebx+10h], ecx
call    sub_10009a40
mov     ecx, edi
mov     [ebx+1ch], eax
mov     [ebx+28h], edi
call    sub_10009a40
mov     esi, eax
mov     [ebx+24h], esi
test    esi, esi
jnz     short loc_10032c6a
lea     eax, [esi+7]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_c]
mov     eax, edi
cdq
push    edx
mov     edx, [ebp+arg_8]
push    eax
push    ecx
push    edx
call    __allrem
mov     [esp+10h+var_8], eax
test    eax, eax
jz      short loc_10032cce
sub     edi, eax
mov     ecx, edi
mov     edi, [ebp+arg_4]
mov     eax, ecx
cdq
add     eax, [ebp+arg_8]
adc     edx, [ebp+arg_c]
cmp     edx, [edi+4]
jl      short loc_10032ca4
jg      short loc_10032c9f
cmp     eax, [edi]
jbe     short loc_10032ca4
mov     ecx, [edi]
sub     ecx, [ebp+arg_8]
add     esi, [esp+10h+var_8]
mov     edx, [edi+2ch]
mov     eax, [edx]
mov     [esp+10h+var_8], esi
mov     esi, [ebp+arg_c]
push    esi
mov     esi, [ebp+arg_8]
push    esi
push    ecx
mov     ecx, [esp+1ch+var_8]
push    ecx
push    edx
mov     edx, [eax+8]
call    edx
add     esp, 14h
test    eax, eax
jnz     short loc_10032d1c
jmp     short loc_10032cd1
mov     edi, [ebp+arg_4]
mov     eax, [edi]
mov     [ebx+8], eax
mov     ecx, [edi+4]
mov     edi, [ebp+arg_0]
lea     edx, [esp+10h+var_8]
mov     [ebx+0ch], ecx
push    edx
mov     esi, ebx
mov     ecx, edi
call    sub_10032ae0
mov     edx, [esp+14h+var_8]
mov     ecx, [ebx]
mov     esi, [ebx+4]
add     esp, 4
add     ecx, edx
adc     esi, [esp+10h+var_4]
mov     [ebx+8], ecx
mov     ecx, [ebp+arg_10]
add     [ecx], edx
mov     edx, [esp+10h+var_4]
mov     [ebx+0ch], esi
adc     [ecx+4], edx
test    eax, eax
jnz     short loc_10032d1c
mov     eax, ebx
call    sub_10032b90
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [eax+44h]
mov     eax, [edi+14h]
cdq
sub     eax, edx
sar     eax, 1
cmp     esi, eax
jl      short loc_10032d57
sub     esi, eax
add     esi, esi
lea     ebx, [esi+1]
jmp     short loc_10032d63
mov     ecx, [edi+28h]
mov     ebx, [ecx+esi*8+4]
lea     eax, [ecx+esi*8]
mov     esi, [eax]
mov     edx, [edi+24h]
mov     eax, esi
imul    eax, 2ch
mov     ecx, ebx
imul    ecx, 2ch
add     eax, edx
add     ecx, edx
cmp     dword ptr [eax+18h], 0
mov     [ebp+var_4], ebx
jnz     short loc_10032d91
mov     eax, [edi+28h]
mov     ecx, [ebp+arg_4]
mov     esi, ebx
mov     [eax+ecx*4], esi
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword ptr [ecx+18h], 0
jz      short loc_10032dda
mov     ebx, [eax+14h]
mov     edx, [ecx+20h]
mov     eax, [eax+20h]
mov     [ebp+var_c], ebx
mov     ebx, [edi+34h]
mov     [ebp+var_8], eax
test    edx, edx
jz      short loc_10032dc2
mov     ecx, [ecx+14h]
push    ebx
push    edx
mov     edx, [ebp+arg_0]
mov     eax, [edx+8]
push    ecx
push    eax
call    sub_10028960
add     esp, 10h
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_c]
push    ebx
push    ecx
push    edx
call    sub_10028ab0
add     esp, 0ch
test    eax, eax
jle     short loc_10032dda
mov     esi, [ebp+var_4]
mov     eax, [edi+28h]
mov     ecx, [ebp+arg_4]
pop     edi
mov     [eax+ecx*4], esi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     ecx, 38h
mov     ebx, eax
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10032e18
push    38h
push    0
push    edi
call    memset
add     esp, 0ch
mov     [ebx+44h], edi
test    edi, edi
jnz     short loc_10032e29
mov     eax, 7
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     ebx, [ebx+8]
movzx   eax, word ptr [ebx+6]
lea     ecx, [eax+eax*4]
lea     ecx, ds:40h[ecx*8]
test    ecx, ecx
jle     short loc_10032e4b
mov     esi, [ebx]
call    sub_10009a40
test    eax, eax
jnz     short loc_10032e4d
jmp     short loc_10032e5f
xor     eax, eax
lea     ecx, [eax+18h]
mov     [eax+10h], ecx
mov     [eax], ebx
mov     dx, [ebx+6]
inc     dx
mov     [eax+4], dx
mov     [edi+34h], eax
test    eax, eax
jz      short loc_10032e1f
mov     eax, [ebp+arg_0]
cmp     byte ptr [eax+31h], 2
jz      short loc_10032e9c
mov     ecx, [eax+10h]
mov     edx, [ecx+4]
mov     ecx, [edx+4]
mov     ecx, [ecx+20h]
lea     edx, [ecx+ecx*4]
add     edx, edx
mov     [edi+1ch], edx
mov     eax, [eax+10h]
mov     edx, [eax+0ch]
mov     eax, [edx+50h]
cmp     eax, 0ah
jge     short loc_10032e96
mov     eax, 0ah
imul    eax, ecx
mov     [edi+20h], eax
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
test    eax, eax
jz      short locret_10032f30
push    edi
mov     edi, [eax+8]
test    esi, esi
jz      short loc_10032f20
cmp     dword ptr [esi+1e8h], 0
jz      short loc_10032efa
cmp     eax, [esi+0fch]
jb      short loc_10032ee6
cmp     eax, [esi+100h]
jnb     short loc_10032ee6
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_10032f29
push    eax
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_10032f29
cmp     eax, [esi+0fch]
jb      short loc_10032f20
cmp     eax, [esi+100h]
jnb     short loc_10032f20
mov     ecx, [esi+0f8h]
mov     [eax], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
jmp     short loc_10032f29
push    eax
call    sub_10009770
add     esp, 4
mov     eax, edi
test    edi, edi
jnz     short loc_10032eb5
pop     edi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, eax
mov     eax, [ebp+arg_0]
mov     ebx, [eax+44h]
xor     eax, eax
cmp     ebx, eax
jz      loc_10032ffc
push    edi
cmp     [ebx+24h], eax
jz      short loc_10032fb1
mov     [ebp+var_8], eax
cmp     [ebx+14h], eax
jle     short loc_10032fa7
mov     [ebp+var_4], eax
jmp     short loc_10032f70
mov     edi, [ebx+24h]
add     edi, [ebp+var_4]
mov     ecx, esi
mov     eax, [edi+1ch]
call    sub_10009810
mov     eax, [edi+24h]
mov     ecx, esi
call    sub_10009810
push    2ch
push    0
push    edi
call    memset
mov     eax, [ebp+var_8]
add     [ebp+var_4], 2ch
inc     eax
add     esp, 0ch
mov     [ebp+var_8], eax
cmp     eax, [ebx+14h]
jl      short loc_10032f70
mov     eax, [ebx+24h]
mov     ecx, esi
call    sub_10009810
mov     edi, [ebx+2ch]
test    edi, edi
jz      short loc_10032fd6
mov     eax, [edi]
test    eax, eax
jz      short loc_10032fcd
mov     ecx, [eax+4]
push    edi
call    ecx
add     esp, 4
mov     dword ptr [edi], 0
push    edi
call    sub_10009770
add     esp, 4
mov     eax, [ebx+30h]
call    sub_10032eb0
mov     eax, [ebx+34h]
mov     ecx, esi
call    sub_10009810
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
mov     edx, [ebp+arg_0]
mov     dword ptr [edx+44h], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, [eax]
mov     ebx, [edi+4]
push    ebx
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_10033074
push    ebx
push    0
push    esi
call    memset
mov     edx, [edi+18h]
add     esp, 0ch
lea     ecx, [ebp+var_4]
push    ecx
push    101eh
push    esi
push    0
push    edi
call    edx
mov     edi, eax
add     esp, 14h
test    edi, edi
jz      short loc_10033066
push    esi
call    sub_10009770
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
mov     [eax], esi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 7
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, eax
mov     esi, ecx
mov     [ebp+var_4], 0
lea     ebx, [ebp+var_4]
test    edi, edi
jz      short loc_1003309f
mov     eax, [edi]
jmp     short loc_100330a1
xor     eax, eax
test    esi, esi
jz      short loc_1003310a
test    edi, edi
jz      short loc_1003311b
mov     edx, [esi]
mov     ecx, [esi+4]
mov     [ebp+var_c], edx
mov     edx, [ebp+arg_0]
mov     [ebp+var_10], ecx
mov     ecx, [edx+44h]
mov     ecx, [ecx+34h]
mov     [ebp+var_8], ecx
test    eax, eax
jz      short loc_100330d9
push    ecx
mov     ecx, [edx+8]
push    eax
mov     eax, [edi+4]
push    eax
push    ecx
call    sub_10028960
mov     ecx, [ebp+var_8]
add     esp, 10h
mov     edx, [ebp+var_c]
mov     eax, [ebp+var_10]
push    ecx
push    edx
push    eax
call    sub_10028ab0
add     esp, 0ch
test    eax, eax
jg      short loc_100330f9
mov     [ebx], esi
lea     ebx, [esi+8]
mov     esi, [ebx]
xor     eax, eax
jmp     short loc_10033106
mov     [ebx], edi
lea     ebx, [edi+8]
mov     edi, [ebx]
test    edi, edi
jz      short loc_1003311b
mov     eax, [edi]
test    esi, esi
jnz     short loc_100330a5
mov     ecx, [ebp+arg_4]
mov     [ebx], edi
mov     eax, [ebp+var_4]
mov     [ecx], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jz      short loc_1003310a
mov     edx, [ebp+arg_4]
mov     [ebx], esi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
mov     [edx], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi+44h]
push    100h
mov     [ebp+var_c], esi
call    sub_100094a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_100331f5
push    100h
push    0
push    ebx
call    memset
mov     ecx, [esi+30h]
xor     esi, esi
add     esp, 0ch
mov     [ebp+var_4], ecx
cmp     ecx, esi
jz      short loc_100331be
mov     eax, [ecx+8]
mov     [ecx+8], esi
xor     edi, edi
mov     [ebp+var_8], eax
cmp     [ebx], esi
jz      short loc_100331ad
mov     esi, ebx
mov     edx, [ebp+arg_0]
lea     eax, [ebp+var_4]
push    eax
mov     eax, [esi]
push    edx
call    sub_10033080
mov     ecx, [ebp+var_4]
inc     edi
mov     dword ptr [esi], 0
lea     esi, [ebx+edi*4]
add     esp, 8
cmp     dword ptr [esi], 0
jnz     short loc_10033186
mov     eax, [ebp+var_8]
mov     [ebx+edi*4], ecx
xor     esi, esi
mov     ecx, eax
mov     [ebp+var_4], ecx
cmp     eax, esi
jnz     short loc_10033175
mov     edi, [ebp+arg_0]
mov     [ebp+var_4], esi
mov     ecx, [ebp+var_4]
lea     eax, [ebp+var_4]
push    eax
mov     eax, [ebx+esi*4]
push    edi
call    sub_10033080
inc     esi
add     esp, 8
cmp     esi, 40h
jl      short loc_100331c1
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_c]
push    ebx
mov     [edx+30h], ecx
call    sub_10009770
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 7
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+10h]
mov     ecx, [eax+4]
mov     edx, [ecx+4]
mov     ebx, [edx+20h]
xor     eax, eax
mov     [edi], eax
mov     [edi+4], eax
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     [edi+10h], eax
mov     [edi+14h], eax
mov     [edi+18h], eax
mov     ecx, ebx
mov     [edi+1ch], eax
call    sub_10009a40
mov     [edi+4], eax
test    eax, eax
jnz     short loc_10033256
mov     dword ptr [edi], 7
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     esi, [ebp+arg_8]
mov     eax, ebx
cdq
push    edx
push    eax
mov     eax, [ebp+arg_4]
push    esi
push    eax
call    __allrem
mov     ecx, [ebp+arg_4]
mov     [edi+0ch], eax
mov     [edi+10h], eax
cdq
sub     ecx, eax
sbb     esi, edx
mov     [edi+14h], ecx
mov     ecx, [ebp+arg_0]
mov     [edi+18h], esi
pop     esi
mov     [edi+8], ebx
mov     [edi+1ch], ecx
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     edx, [ebp+arg_4]
push    ebx
mov     ecx, edx
push    edi
mov     [ebp+var_8], ecx
test    edx, edx
jle     loc_10033348
jmp     short loc_100332b6
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+var_8]
cmp     dword ptr [esi], 0
jnz     loc_10033348
mov     eax, [esi+8]
sub     eax, [esi+10h]
mov     [ebp+size], ecx
cmp     ecx, eax
jle     short loc_100332cf
mov     [ebp+size], eax
mov     eax, [ebp+size]
mov     edi, [esi+10h]
mov     ebx, [esi+4]
push    eax
mov     eax, [ebp+arg_0]
sub     eax, ecx
add     eax, edx
push    eax
lea     ecx, [ebx+edi]
push    ecx
call    memcpy
mov     edx, [ebp+size]
lea     ecx, [edi+edx]
add     esp, 0ch
mov     [esi+10h], ecx
cmp     ecx, [esi+8]
jnz     short loc_10033337
mov     edi, [esi+0ch]
mov     eax, edi
cdq
add     eax, [esi+14h]
adc     edx, [esi+18h]
sub     ecx, edi
push    edx
add     edi, ebx
push    eax
mov     [ebp+var_c], edi
mov     edi, [esi+1ch]
mov     eax, [ebp+var_c]
mov     ebx, [edi]
push    ecx
mov     ecx, [ebx+0ch]
push    eax
push    edi
call    ecx
mov     [esi], eax
xor     eax, eax
mov     [esi+10h], eax
mov     [esi+0ch], eax
mov     eax, [esi+8]
cdq
add     esp, 14h
add     [esi+14h], eax
adc     [esi+18h], edx
mov     eax, [ebp+var_8]
sub     eax, [ebp+size]
mov     [ebp+var_8], eax
test    eax, eax
jg      loc_100332b0
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
cmp     dword ptr [esi], 0
push    ebx
push    edi
jnz     short loc_10033395
mov     ebx, [esi+4]
test    ebx, ebx
jz      short loc_10033395
mov     ecx, [esi+10h]
mov     edi, [esi+0ch]
cmp     ecx, edi
jle     short loc_10033395
mov     eax, edi
cdq
add     eax, [esi+14h]
adc     edx, [esi+18h]
sub     ecx, edi
push    edx
add     edi, ebx
push    eax
mov     [ebp+var_4], edi
mov     edi, [esi+1ch]
mov     eax, [ebp+var_4]
mov     ebx, [edi]
push    ecx
mov     ecx, [ebx+0ch]
push    eax
push    edi
call    ecx
add     esp, 14h
mov     [esi], eax
mov     eax, [esi+10h]
cdq
mov     ecx, eax
add     ecx, [esi+14h]
mov     eax, [ebp+arg_4]
adc     edx, [esi+18h]
mov     [eax], ecx
mov     ecx, [ebp+arg_0]
mov     [eax+4], edx
mov     eax, [esi+4]
call    sub_10009810
mov     eax, [esi]
xor     ecx, ecx
mov     [esi], ecx
mov     [esi+4], ecx
mov     [esi+8], ecx
mov     [esi+0ch], ecx
mov     [esi+10h], ecx
mov     [esi+14h], ecx
pop     edi
mov     [esi+18h], ecx
mov     [esi+1ch], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 3ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
xor     eax, eax
push    ebx
mov     ebx, [ecx+44h]
push    esi
mov     esi, edx
push    edi
mov     [ebp+var_14], esi
mov     [ebp+var_38], eax
mov     [ebp+var_34], eax
mov     [ebp+var_30], eax
mov     [ebp+var_2c], eax
mov     [ebp+var_28], eax
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
mov     [ebp+var_1c], eax
cmp     [ebx+10h], eax
jnz     short loc_1003342b
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ecx
call    sub_10033130
add     esp, 4
test    eax, eax
jnz     loc_100334e9
cmp     [ebx+2ch], eax
lea     edi, [ebx+2ch]
jnz     short loc_10033457
push    edi
mov     eax, esi
call    sub_10033010
add     esp, 4
test    eax, eax
jnz     loc_100334e9
mov     eax, [ebx+4]
mov     ecx, [ebx]
mov     edx, [edi]
push    eax
push    ecx
push    edx
lea     edi, [ebp+var_38]
mov     eax, esi
call    sub_10033210
mov     eax, [ebx+10h]
inc     dword ptr [ebx+18h]
cdq
add     esp, 0ch
push    edx
push    eax
lea     ecx, [ebp+var_10]
call    sub_1000c550
push    eax
lea     eax, [ebp+var_10]
push    eax
mov     esi, edi
call    sub_10033290
mov     edi, [ebx+30h]
add     esp, 10h
test    edi, edi
jz      short loc_100334d6
mov     eax, [edi+4]
mov     ecx, [edi+8]
cdq
push    edx
mov     [ebp+var_18], ecx
push    eax
lea     ecx, [ebp+var_10]
call    sub_1000c550
push    eax
lea     edx, [ebp+var_10]
push    edx
lea     esi, [ebp+var_38]
call    sub_10033290
mov     eax, [edi+4]
mov     ecx, [edi]
push    eax
push    ecx
call    sub_10033290
mov     ecx, [ebp+var_14]
add     esp, 18h
mov     eax, edi
call    sub_10009810
mov     edi, [ebp+var_18]
test    edi, edi
jnz     short loc_10033495
mov     edx, [ebp+var_14]
push    ebx
push    edx
lea     esi, [ebp+var_38]
mov     [ebx+30h], edi
call    sub_10033350
add     esp, 8
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    esi
push    edi
mov     edi, [eax+44h]
mov     eax, [ebx+18h]
cdq
xor     ecx, ecx
shrd    eax, edx, 7
shr     edx, 7
mov     esi, eax
inc     ecx
or      esi, edx
jz      short loc_10033524
cmp     ecx, 9
jl      short loc_10033511
mov     eax, [ebx+18h]
mov     esi, [ebp+arg_0]
add     eax, ecx
add     [edi+10h], eax
mov     ecx, [ebx+18h]
add     ecx, 0ch
call    sub_10009a40
mov     esi, eax
test    esi, esi
jnz     short loc_10033547
lea     eax, [esi+7]
pop     edi
pop     esi
pop     ebp
retn
lea     eax, [esi+0ch]
mov     [esi], eax
mov     ecx, [ebx+18h]
mov     edx, [ebx+4]
push    ecx
push    edx
push    eax
call    memcpy
mov     eax, [ebx+18h]
mov     [esi+4], eax
mov     ecx, [edi+30h]
mov     [esi+8], ecx
mov     eax, [edi+20h]
add     esp, 0ch
mov     [edi+30h], esi
test    eax, eax
jle     short loc_1003359e
mov     ecx, [edi+10h]
cmp     ecx, eax
jg      short loc_10033588
cmp     ecx, [edi+1ch]
jle     short loc_1003359e
cmp     dword_10081794, 0
jz      short loc_1003359e
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
call    sub_100333e0
mov     dword ptr [edi+10h], 0
pop     edi
pop     esi
pop     ebp
retn
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_4]
push    ebx
push    esi
mov     esi, [eax+44h]
push    edi
xor     edi, edi
mov     [ebp+var_8], edi
mov     [ebp+var_4], edi
mov     edx, [esi+0ch]
mov     eax, [esi+8]
mov     ebx, [esi+24h]
lea     ecx, [ebp+var_8]
push    ecx
mov     ecx, [ebp+arg_0]
push    edx
push    eax
push    esi
add     ebx, edi
push    ecx
call    sub_10032c10
mov     edx, [ebx+8]
mov     [esi+8], edx
mov     ecx, [ebx+0ch]
add     esp, 14h
mov     [esi+0ch], ecx
test    eax, eax
jnz     short loc_1003360b
cmp     ecx, [esi+4]
jg      short loc_1003360b
jl      short loc_10033600
cmp     edx, [esi]
jnb     short loc_1003360b
add     edi, 2ch
cmp     edi, 2c0h
jl      short loc_100335c7
mov     esi, [esi+14h]
dec     esi
test    eax, eax
jnz     short loc_10033629
test    esi, esi
jle     short loc_10033629
mov     edx, [ebp+arg_4]
push    esi
push    edx
call    sub_10032d30
add     esp, 8
dec     esi
test    eax, eax
jz      short loc_10033613
mov     edx, [ebp+var_8]
mov     ecx, [ebp+arg_8]
pop     edi
mov     [ecx], edx
mov     edx, [ebp+var_4]
pop     esi
mov     [ecx+4], edx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 78h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, [ecx+44h]
mov     esi, 2
mov     [ebp+var_2c], edx
mov     [ebp+var_48], ecx
mov     [ebp+var_4c], eax
mov     [ebp+var_44], edi
mov     [ebp+var_28], ebx
mov     [ebp+var_3c], ebx
mov     [ebp+var_38], ebx
mov     [ebp+var_24], esi
cmp     [edi+18h], ebx
jnz     short loc_100336a1
xor     edx, edx
cmp     [edi+30h], ebx
push    ecx
setz    dl
mov     [eax], edx
call    sub_10033130
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
call    sub_100333e0
mov     ebx, eax
test    ebx, ebx
jnz     loc_100338d4
mov     eax, [edi+18h]
cmp     eax, 10h
jle     short loc_100336bd
lea     eax, [ebx+10h]
jmp     short loc_100336c2
cmp     eax, 2
jle     short loc_100336ce
lea     ecx, [esi+esi]
mov     [ebp+var_24], ecx
mov     esi, ecx
cmp     ecx, eax
jl      short loc_100336c2
lea     ecx, [esi+esi*2]
mov     esi, [ebp+var_2c]
shl     ecx, 4
mov     [ebp+size], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_100336f4
mov     eax, [ebp+size]
push    eax
push    0
push    esi
call    memset
add     esp, 0ch
xor     ecx, ecx
mov     [edi+24h], esi
cmp     esi, ecx
jnz     short loc_10033711
lea     eax, [ecx+7]
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_24]
mov     edx, eax
imul    edx, 2ch
add     edx, esi
mov     [edi+28h], edx
mov     [edi+14h], eax
mov     [ebp+var_40], ecx
cmp     ebx, ecx
jnz     loc_1003385a
mov     [ebp+var_24], ecx
mov     eax, [ebp+var_24]
cmp     eax, [edi+18h]
jge     loc_1003385a
mov     edx, [ebp+var_48]
mov     esi, [ebp+var_2c]
xor     eax, eax
lea     ecx, [ebp+var_74]
push    ecx
push    edx
push    esi
mov     [ebp+var_6c], eax
mov     [ebp+var_68], eax
mov     [ebp+var_64], eax
mov     [ebp+var_60], eax
mov     [ebp+var_5c], eax
mov     [ebp+var_58], eax
mov     [ebp+var_54], eax
mov     [ebp+var_50], eax
call    sub_100335b0
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     loc_1003385a
cmp     dword ptr [edi+18h], 10h
jle     loc_10033893
cmp     [ebp+var_28], eax
jnz     short loc_1003379a
lea     eax, [ebp+var_28]
push    eax
mov     eax, esi
call    sub_10033010
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     loc_1003384b
mov     ecx, [ebp+var_38]
mov     edx, [ebp+var_3c]
mov     eax, [ebp+var_28]
push    ecx
push    edx
push    eax
lea     edi, [ebp+var_6c]
mov     eax, esi
mov     [ebp+size], 0
call    sub_10033210
mov     ecx, [ebp+var_70]
mov     edx, [ebp+var_74]
add     esp, 0ch
push    ecx
push    edx
lea     ecx, [ebp+var_20]
call    sub_1000c550
push    eax
lea     eax, [ebp+var_20]
push    eax
mov     esi, edi
call    sub_10033290
add     esp, 10h
cmp     [ebp+size], 0
jnz     short loc_1003382f
mov     eax, [ebp+var_44]
mov     ecx, [eax+28h]
mov     edi, [ecx+4]
imul    edi, 2ch
add     edi, [eax+24h]
lea     ecx, [ebp+var_14]
mov     eax, [edi+14h]
cdq
push    edx
push    eax
call    sub_1000c550
push    eax
lea     edx, [ebp+var_14]
push    edx
lea     esi, [ebp+var_6c]
call    sub_10033290
mov     eax, [edi+14h]
mov     ecx, [edi+20h]
push    eax
push    ecx
call    sub_10033290
mov     eax, [ebp+var_48]
lea     edx, [ebp+size]
push    edx
push    eax
mov     eax, [ebp+var_2c]
call    sub_100338f0
mov     ebx, eax
add     esp, 20h
test    ebx, ebx
jz      short loc_100337d9
mov     edx, [ebp+var_2c]
lea     ecx, [ebp+var_3c]
push    ecx
push    edx
lea     esi, [ebp+var_6c]
call    sub_10033350
mov     edi, [ebp+var_44]
add     esp, 8
test    ebx, ebx
jnz     short loc_1003384b
mov     ebx, eax
inc     [ebp+var_40]
add     [ebp+var_24], 10h
test    ebx, ebx
jz      loc_1003372f
cmp     dword ptr [edi+18h], 10h
jle     short loc_10033893
mov     ecx, [ebp+var_40]
mov     eax, [edi+2ch]
mov     edx, [ebp+var_28]
mov     [edi+18h], ecx
mov     ecx, [ebp+var_38]
mov     [edi+4], ecx
xor     ecx, ecx
mov     [ebp+var_28], eax
mov     eax, [ebp+var_3c]
mov     [edi+2ch], edx
mov     [edi], eax
mov     [edi+8], ecx
mov     [edi+0ch], ecx
mov     [ebp+var_3c], ecx
mov     [ebp+var_38], ecx
cmp     ebx, ecx
jz      loc_10033721
mov     esi, [ebp+var_28]
test    esi, esi
jz      short loc_100338b8
mov     eax, [esi]
test    eax, eax
jz      short loc_100338af
mov     edx, [eax+4]
push    esi
call    edx
add     esp, 4
mov     dword ptr [esi], 0
push    esi
call    sub_10009770
add     esp, 4
mov     eax, [edi+28h]
mov     ecx, [eax+4]
mov     edx, [edi+24h]
imul    ecx, 2ch
xor     eax, eax
cmp     [ecx+edx+18h], eax
mov     ecx, [ebp+var_4c]
setz    al
mov     [ecx], eax
mov     eax, ebx
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, eax
mov     eax, [ebp+arg_0]
mov     ebx, [eax+44h]
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_1003396a
mov     esi, [eax+4]
mov     eax, esi
imul    eax, 2ch
add     eax, [ebx+24h]
call    sub_10032b90
mov     ecx, eax
mov     eax, [ebx+14h]
add     eax, esi
cdq
sub     eax, edx
mov     esi, eax
sar     esi, 1
test    ecx, ecx
jnz     short loc_10033948
test    esi, esi
jle     short loc_10033948
mov     ecx, [ebp+arg_0]
push    esi
push    ecx
call    sub_10032d30
mov     ecx, eax
mov     eax, esi
cdq
sub     eax, edx
sar     eax, 1
add     esp, 8
mov     esi, eax
test    ecx, ecx
jz      short loc_10033928
mov     edx, [ebx+28h]
mov     eax, [edx+4]
mov     edx, [ebx+24h]
imul    eax, 2ch
xor     ebx, ebx
cmp     [eax+edx+18h], ebx
mov     eax, [ebp+arg_4]
setz    bl
mov     [eax], ebx
mov     eax, ecx
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, [ebx+30h]
mov     ecx, [eax+8]
mov     [ebx+30h], ecx
mov     esi, edi
mov     dword ptr [eax+8], 0
call    sub_10032eb0
mov     eax, [ebp+arg_4]
xor     edx, edx
cmp     [ebx+30h], edx
pop     edi
setz    dl
pop     esi
pop     ebx
mov     [eax], edx
xor     eax, eax
pop     ecx
pop     ebp
retn
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ecx, [eax+44h]
mov     eax, [ecx+28h]
test    eax, eax
jz      short loc_100339c0
mov     eax, [eax+4]
imul    eax, 2ch
add     eax, [ecx+24h]
mov     esi, [eax+14h]
mov     ebx, [eax+20h]
jmp     short loc_100339c8
mov     ecx, [ecx+30h]
mov     esi, [ecx+4]
mov     ebx, [ecx]
push    0
mov     eax, esi
call    sub_10024410
add     esp, 4
test    eax, eax
jz      short loc_100339e1
mov     eax, 7
pop     edi
pop     esi
pop     ebx
retn
mov     cx, [edi+1ch]
mov     eax, [edi+4]
mov     edx, 0bf10h
push    esi
and     cx, dx
or      cx, 10h
push    ebx
push    eax
mov     [edi+18h], esi
mov     [edi+1ch], cx
call    memcpy
add     esp, 0ch
pop     edi
pop     esi
xor     eax, eax
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, eax
mov     ecx, [esi+44h]
mov     eax, [ecx+28h]
push    edi
test    eax, eax
jz      short loc_10033a36
mov     eax, [eax+4]
imul    eax, 2ch
add     eax, [ecx+24h]
mov     ebx, [eax+14h]
mov     eax, [eax+20h]
jmp     short loc_10033a3e
mov     eax, [ecx+30h]
mov     ebx, [eax+4]
mov     eax, [eax]
mov     edi, [edx+18h]
mov     edx, [edx+4]
mov     [ebp+var_8], edi
mov     edi, [esi+8]
mov     esi, [ecx+34h]
mov     [ebp+var_4], edx
test    eax, eax
jz      short loc_10033a60
push    esi
push    eax
push    ebx
push    edi
call    sub_10028960
add     esp, 10h
movzx   ecx, word ptr [edi+6]
xor     edx, edx
xor     eax, eax
mov     [esi+4], cx
cmp     dx, cx
jnb     short loc_10033a88
mov     ecx, [esi+10h]
add     ecx, 1ch
test    byte ptr [ecx], 1
jnz     short loc_10033aab
movzx   edx, word ptr [esi+4]
inc     eax
add     ecx, 28h
cmp     eax, edx
jl      short loc_10033a77
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
or      byte ptr [esi+6], 2
push    esi
push    ecx
push    edx
call    sub_10028ab0
mov     ecx, [ebp+arg_0]
add     esp, 0ch
mov     [ecx], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     dword ptr [eax], 0ffffffffh
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
mov     edx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_c]
push    esi
push    edi
mov     edi, [ebp+arg_10]
mov     [esp+18h+var_4], eax
mov     [esp+18h+size], ecx
cmp     [edx+14h], ebx
jnz     short loc_10033af8
cmp     [edx+18h], edi
jnz     short loc_10033af8
mov     eax, ebx
or      eax, edi
jz      short loc_10033af8
mov     esi, [edx+1ch]
jmp     short loc_10033b1b
mov     esi, [edx+4]
xor     eax, eax
xor     ecx, ecx
test    esi, esi
jz      short loc_10033b1b
add     eax, 3fch
adc     ecx, 0
cmp     ecx, edi
jg      short loc_10033b1b
jl      short loc_10033b15
cmp     eax, ebx
ja      short loc_10033b1b
mov     esi, [esi]
test    esi, esi
jnz     short loc_10033b03
push    0
push    3fch
push    edi
push    ebx
call    __alldiv
mov     ecx, eax
imul    ecx, 3fch
mov     eax, ebx
sub     eax, ecx
mov     ebx, [esp+18h+size]
mov     edi, 3fch
sub     edi, eax
cmp     ebx, edi
jl      short loc_10033b46
mov     ebx, edi
lea     edx, [eax+esi+4]
mov     eax, [esp+18h+var_4]
push    ebx
push    edx
push    eax
call    memcpy
add     [esp+24h+var_4], ebx
add     esp, 0ch
sub     [esp+18h+size], edi
mov     eax, 0
js      short loc_10033b74
mov     esi, [esi]
test    esi, esi
jz      short loc_10033b74
cmp     [esp+18h+size], eax
jg      short loc_10033b35
mov     eax, [ebp+arg_8]
cdq
mov     ecx, eax
add     ecx, [ebp+arg_c]
mov     eax, [ebp+arg_0]
adc     edx, [ebp+arg_10]
pop     edi
mov     [eax+1ch], esi
pop     esi
mov     [eax+14h], ecx
mov     [eax+18h], edx
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
mov     eax, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+size]
push    esi
push    edi
mov     [esp+20h+var_c], ebx
mov     [esp+20h+src], eax
test    ebx, ebx
jle     loc_10033cb3
mov     esi, [ebp+arg_0]
mov     edx, [esi+0ch]
mov     eax, [esi+8]
mov     ecx, [esi+10h]
push    0
push    3fch
push    edx
push    eax
mov     [esp+30h+var_8], ecx
call    __allrem
mov     ecx, eax
mov     eax, 3fch
sub     eax, ecx
mov     [esp+20h+var_4], ecx
mov     edi, ebx
cmp     ebx, eax
jl      short loc_10033bf5
mov     edi, eax
test    ecx, ecx
jnz     loc_10033c82
call    sub_1006edd0
test    eax, eax
jnz     loc_10033cbc
cmp     dword_10080230, eax
jz      short loc_10033c64
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10033c25
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [esp+20h+var_14]
mov     eax, 400h
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10033c46
push    eax
call    dword_10080284
add     esp, 4
mov     ebx, [esp+20h+var_c]
mov     eax, [esp+20h+var_14]
test    eax, eax
jz      short loc_10033cbc
mov     ecx, [esp+20h+var_8]
mov     dword ptr [eax], 0
test    ecx, ecx
jz      short loc_10033c78
mov     [ecx], eax
jmp     short loc_10033c7b
push    400h
call    dword_1008024c
add     esp, 4
mov     [esp+20h+var_14], eax
jmp     short loc_10033c4e
mov     [esi+4], eax
mov     ecx, [esp+20h+var_4]
mov     [esi+10h], eax
mov     edx, [esp+20h+src]
mov     eax, [esi+10h]
push    edi
push    edx
lea     ecx, [eax+ecx+4]
push    ecx
call    memcpy
add     [esp+2ch+src], edi
mov     eax, edi
cdq
sub     ebx, edi
add     esp, 0ch
add     [esi+8], eax
mov     [esp+20h+var_c], ebx
adc     [esi+0ch], edx
test    ebx, ebx
jg      loc_10033bc5
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 0c0ah
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    edi
mov     edi, [ebx+4]
test    edi, edi
jz      loc_10033d7f
mov     eax, dword_10081774
push    esi
lea     esp, [esp+0]
cmp     dword_10080230, 0
mov     esi, edi
mov     edi, [edi]
jz      short loc_10033d67
test    eax, eax
jz      short loc_10033d0b
push    eax
call    dword_1008027c
add     esp, 4
push    esi
call    dword_10080258
mov     ecx, dword_10081668
neg     eax
add     ecx, eax
add     esp, 4
mov     dword_10081668, ecx
cmp     ecx, dword_10081690
jle     short loc_10033d33
mov     dword_10081690, ecx
mov     eax, dword_1008168c
dec     eax
mov     dword_1008168c, eax
cmp     eax, dword_100816b4
jle     short loc_10033d4b
mov     dword_100816b4, eax
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
test    eax, eax
jz      short loc_10033d76
push    eax
call    dword_10080284
jmp     short loc_10033d6e
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
test    edi, edi
jnz     loc_10033cf0
pop     esi
xor     eax, eax
mov     [ebx+4], eax
mov     [ebx+8], eax
mov     [ebx+0ch], eax
mov     [ebx+10h], eax
mov     [ebx+14h], eax
mov     [ebx+18h], eax
mov     [ebx+1ch], eax
pop     edi
mov     dword ptr [ebx], offset dword_10076840
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    0
push    0
push    eax
call    sub_10033cd0
add     esp, 0ch
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     edx, [eax+8]
mov     ecx, [ebp+arg_4]
mov     [ecx], edx
mov     eax, [eax+0ch]
mov     [ecx+4], eax
xor     eax, eax
pop     ebp
retn
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     [eax+1ch], ecx
mov     dword ptr [eax], offset dword_10076840
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
test    esi, esi
jnz     short loc_10033e10
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx]
push    edi
push    esi
push    ebx
call    eax
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     short loc_10033e93
mov     ecx, 4000h
test    [esi+2], cx
jnz     short loc_10033e93
mov     edx, [esi+8]
push    edx
push    ebx
call    sub_10033e00
add     esp, 8
test    eax, eax
jnz     short loc_10033e89
mov     eax, [esi+0ch]
push    eax
push    ebx
call    sub_10033e00
add     esp, 8
test    eax, eax
jnz     short loc_10033e89
mov     cx, [esi+2]
mov     edx, 800h
and     cx, dx
mov     eax, edx
cmp     cx, ax
jnz     short loc_10033e7d
mov     ecx, [esi+10h]
push    ecx
push    ebx
call    sub_10033f90
add     esp, 8
test    eax, eax
jz      short loc_10033e93
lea     eax, [edi+2]
pop     edi
pop     ebx
pop     esi
pop     ebp
retn
mov     eax, [esi+10h]
call    sub_10033ea0
test    eax, eax
jz      short loc_10033e93
pop     edi
pop     ebx
mov     eax, 2
pop     esi
pop     ebp
retn
mov     eax, edi
pop     edi
pop     ebx
and     eax, 2
pop     esi
pop     ebp
retn
push    esi
push    edi
test    eax, eax
jz      short loc_10033ec8
mov     esi, [eax]
mov     edi, [eax+8]
test    esi, esi
jle     short loc_10033ec8
nop
mov     eax, [edi]
push    eax
push    ebx
call    sub_10033e00
add     esp, 8
test    eax, eax
jnz     short loc_10033ecd
dec     esi
add     edi, 14h
test    esi, esi
jg      short loc_10033eb0
pop     edi
xor     eax, eax
pop     esi
retn
pop     edi
mov     eax, 2
pop     esi
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
push    ebx
push    esi
test    eax, eax
jz      short loc_10033f0f
mov     esi, [eax]
mov     ebx, [eax+8]
test    esi, esi
jle     short loc_10033f0f
mov     ecx, [ebx]
push    ecx
push    edi
call    sub_10033e00
add     esp, 8
test    eax, eax
jnz     short loc_10033f7a
dec     esi
add     ebx, 14h
test    esi, esi
jg      short loc_10033ef7
mov     edx, [ebp+arg_0]
mov     eax, [edx+28h]
push    eax
push    edi
call    sub_10033e00
add     esp, 8
test    eax, eax
jnz     short loc_10033f7a
mov     esi, [ebp+arg_0]
mov     eax, [esi+2ch]
mov     ebx, edi
call    sub_10033ea0
test    eax, eax
jnz     short loc_10033f7a
mov     ecx, [esi+30h]
push    ecx
push    edi
call    sub_10033e00
add     esp, 8
test    eax, eax
jnz     short loc_10033f7a
mov     eax, [esi+34h]
call    sub_10033ea0
test    eax, eax
jnz     short loc_10033f7a
mov     edx, [esi+44h]
push    edx
push    edi
call    sub_10033e00
add     esp, 8
test    eax, eax
jnz     short loc_10033f7a
mov     eax, [esi+48h]
push    eax
push    edi
call    sub_10033e00
add     esp, 8
neg     eax
sbb     eax, eax
pop     esi
and     eax, 2
pop     ebx
pop     ebp
retn
pop     esi
mov     eax, 2
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_4]
test    esi, esi
jz      loc_10034029
mov     ebx, [ebp+arg_0]
cmp     dword ptr [ebx+4], 0
jz      loc_10034029
inc     dword ptr [ebx+0ch]
push    edi
mov     eax, [ebx+4]
push    esi
push    ebx
call    eax
add     esp, 8
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_1003401c
push    esi
mov     edi, ebx
call    sub_10033ee0
add     esp, 4
test    eax, eax
jnz     short loc_1003400a
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_10033ffe
movsx   esi, word ptr [eax]
test    esi, esi
jle     short loc_10033ffb
lea     edi, [eax+14h]
mov     ecx, [edi]
push    ecx
push    ebx
call    sub_10033f90
add     esp, 8
test    eax, eax
jnz     short loc_1003400a
dec     esi
add     edi, 3ch
test    esi, esi
jg      short loc_10033fe3
mov     esi, [ebp+arg_4]
mov     esi, [esi+38h]
mov     [ebp+arg_4], esi
test    esi, esi
jz      short loc_10034019
jmp     short loc_10033fb2
dec     dword ptr [ebx+0ch]
pop     edi
pop     esi
mov     eax, 2
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
dec     dword ptr [ebx+0ch]
pop     edi
pop     esi
and     eax, 2
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
cmp     byte ptr [eax], 99h
jnz     short loc_10034054
mov     ecx, [ebp+arg_0]
mov     dl, [ecx+10h]
add     [eax+23h], dl
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
mov     edx, [ebp+arg_0]
push    ebx
mov     ebx, [edx]
push    esi
push    edi
mov     edi, eax
mov     eax, [ebp+arg_4]
mov     ecx, [eax+8]
lea     edi, [edi+edi*4]
add     edi, edi
add     edi, edi
mov     esi, [edi+ecx]
cmp     byte ptr [esi], 98h
mov     [esp+30h+var_1c], ebx
jz      loc_100341c1
mov     eax, [ebp+arg_c]
cmp     byte ptr [eax], 47h
jz      loc_100341c1
push    0
push    0
push    esi
push    ebx
call    sub_100365c0
mov     edx, [ebp+arg_10]
add     esp, 10h
mov     [esp+30h+var_20], eax
test    edx, edx
jle     short loc_100340e5
xor     ecx, ecx
mov     [esp+30h+var_14], ecx
mov     [esp+30h+var_4], ecx
mov     [esp+30h+var_10], ecx
mov     [esp+30h+var_c], ecx
mov     [esp+30h+var_8], ecx
push    eax
lea     ecx, [esp+34h+var_14]
push    ecx
mov     [esp+38h+var_14], offset sub_10034040
mov     [esp+38h+var_4], edx
call    sub_10033e00
add     esp, 8
mov     edx, [ebp+arg_0]
mov     esi, [edx]
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_10034118
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      eax, 0ffffffffh
mov     byte ptr [ebx], 18h
mov     [ebx+1eh], ax
mov     dword ptr [ebx+2ch], 1
mov     esi, [ebp+arg_0]
mov     eax, [esi]
mov     [esp+30h+var_18], eax
test    ebx, ebx
jnz     short loc_10034140
mov     ecx, [esp+30h+var_20]
push    ecx
push    eax
call    sub_10036430
mov     edx, [esp+38h+var_18]
push    ebx
push    edx
call    sub_10036430
add     esp, 10h
jmp     short loc_10034180
mov     eax, [esp+30h+var_20]
test    eax, eax
jz      short loc_10034162
mov     ecx, 100h
mov     [ebx+8], eax
test    [eax+2], cx
jz      short loc_10034162
mov     edx, ecx
or      [ebx+2], dx
mov     eax, [eax+14h]
mov     [ebx+14h], eax
call    sub_10035cf0
mov     ecx, [esi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_10034180
push    eax
push    offset aexpressiontree
push    esi
call    sub_1000bb30
add     esp, 0ch
mov     ecx, ebx
mov     [esp+30h+var_20], ecx
test    ebx, ebx
jz      loc_1003427a
mov     eax, [ebp+arg_4]
mov     edx, [eax+8]
cmp     word ptr [edi+edx+10h], 0
jnz     short loc_100341b0
inc     dword ptr [esi+1dch]
mov     esi, [esi+1dch]
mov     edx, [eax+8]
mov     [edi+edx+10h], si
mov     eax, [eax+8]
movzx   edx, word ptr [edi+eax+10h]
mov     [ebx+18h], edx
mov     ebx, [esp+30h+var_1c]
jmp     short loc_10034237
mov     ax, [esi+2]
mov     ecx, 400h
and     ax, cx
mov     edx, ecx
cmp     ax, dx
jz      short loc_1003421f
mov     eax, [esi+4]
mov     [esp+30h+var_18], eax
test    eax, eax
jz      short loc_1003421f
push    0
push    0
push    esi
push    ebx
mov     dword ptr [esi+4], 0
call    sub_100365c0
mov     edi, eax
mov     eax, [esp+40h+var_18]
add     esp, 10h
mov     [esp+30h+var_20], edi
mov     [esi+4], eax
test    edi, edi
jz      short loc_1003427a
or      byte ptr [edi+22h], 1
push    ebx
mov     ebx, eax
call    sub_10009b70
mov     ebx, [esp+34h+var_1c]
add     esp, 4
mov     [edi+4], eax
mov     ecx, edi
jmp     short loc_10034237
push    0
push    0
push    esi
push    ebx
call    sub_100365c0
add     esp, 10h
mov     [esp+30h+var_20], eax
test    eax, eax
jz      short loc_1003427a
mov     ecx, eax
mov     edi, [ebp+arg_8]
mov     eax, 100h
test    [edi+2], ax
jz      short loc_1003424f
mov     edx, [edi+14h]
or      [ecx+2], ax
mov     [ecx+14h], edx
mov     ecx, 8000h
or      [edi+2], cx
push    edi
push    ebx
call    sub_10036430
mov     esi, [esp+38h+var_20]
mov     eax, [esp+38h+var_20]
mov     ecx, 0ch
rep movsd
mov     ecx, [esp+38h+var_1c]
add     esp, 8
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
test    eax, eax
jz      short loc_100342fe
mov     ecx, [eax+4]
xor     edi, edi
mov     [ebp+var_4], ecx
test    ecx, ecx
jle     short loc_100342fe
mov     esi, [eax]
lea     esp, [esp+0]
mov     ecx, [esi]
mov     al, [ecx]
mov     edx, [ebp+arg_0]
test    al, al
jz      short loc_100342dd
jmp     short loc_100342c0
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_100342dd
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_100342c0
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_10034307
inc     edi
add     esi, 8
cmp     edi, [ebp+var_4]
jl      short loc_100342b0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 34h
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_14]
xor     edx, edx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     esi, [esi]
push    edi
mov     [ebp+var_4], edx
mov     [ebp+var_c], edx
mov     [ebp+var_18], edx
mov     [ebp+var_10], esi
mov     [ebp+var_1c], edx
mov     [ebp+var_2c], eax
mov     [ebp+var_14], edx
mov     [ebp+var_28], edx
mov     dword ptr [ecx+18h], 0ffffffffh
mov     [ecx+28h], edx
cmp     eax, edx
jz      loc_1003479d
cmp     [ebp+var_4], 0
jnz     loc_10034830
mov     eax, [ebp+arg_10]
mov     eax, [eax+4]
mov     [ebp+var_34], eax
test    eax, eax
jz      loc_10034542
xor     ecx, ecx
lea     esi, [eax+4]
mov     [ebp+var_24], 0
mov     [ebp+var_8], esi
cmp     cx, [eax]
jge     loc_10034542
mov     ebx, [esi+0ch]
mov     edx, [ebx+44h]
mov     [ebp+var_20], ebx
mov     edi, 0fff0bdc0h
test    edx, edx
jz      short loc_100343c3
mov     eax, [ebp+var_10]
mov     ecx, [eax+14h]
xor     edi, edi
test    ecx, ecx
jle     short loc_100343c3
mov     eax, [eax+10h]
add     eax, 0ch
cmp     [eax], edx
jz      short loc_100343c3
inc     edi
add     eax, 10h
cmp     edi, ecx
jl      short loc_100343b7
cmp     [ebp+arg_8], 0
jz      loc_10034451
mov     ecx, [esi+8]
test    ecx, ecx
jz      short loc_10034418
mov     al, [ecx]
mov     edx, [ebp+arg_8]
test    al, al
jz      short loc_10034400
lea     ecx, [ecx+0]
movzx   esi, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[esi]
jnz     short loc_100343fd
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_100343e0
mov     esi, [ebp+var_8]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[ecx]
movzx   ecx, byte ptr [edx]
movzx   edx, ds:byte_10076030[ecx]
sub     eax, edx
jmp     short loc_1003444b
mov     ecx, [ebx]
test    ecx, ecx
jz      loc_10034524
mov     edx, [ebp+arg_8]
call    sub_1000bca0
test    eax, eax
jnz     loc_10034524
mov     edx, [ebp+arg_4]
test    edx, edx
jz      short loc_10034451
mov     eax, [ebp+var_10]
mov     ecx, [eax+10h]
add     edi, edi
mov     ecx, [ecx+edi*8]
call    sub_1000bca0
test    eax, eax
jnz     loc_10034524
mov     eax, [ebp+var_c]
mov     edx, eax
inc     eax
mov     [ebp+var_c], eax
test    edx, edx
jnz     short loc_10034473
mov     ecx, [esi+20h]
mov     eax, [ebp+arg_14]
mov     [eax+18h], ecx
mov     [eax+28h], ebx
mov     edx, [ebx+44h]
mov     [ebp+var_14], edx
mov     [ebp+var_1c], esi
mov     eax, [ebx+8]
mov     esi, [ebx+0ch]
xor     edi, edi
mov     [ebp+var_30], eax
test    eax, eax
jle     loc_10034524
mov     ecx, [esi]
mov     al, [ecx]
mov     edx, [ebp+arg_c]
test    al, al
jz      short loc_100344b1
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_100344ae
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10034491
mov     ebx, [ebp+var_20]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jnz     short loc_100344ed
cmp     [ebp+var_4], 1
jnz     short loc_100344f8
mov     eax, [ebp+var_8]
test    byte ptr [eax+1ch], 4
jnz     short loc_100344ed
mov     ecx, [ebp+arg_c]
mov     edx, eax
mov     eax, [edx+28h]
push    ecx
call    sub_10034290
add     esp, 4
test    eax, eax
jz      short loc_100344f8
inc     edi
add     esi, 18h
cmp     edi, [ebp+var_30]
jl      short loc_10034486
jmp     short loc_10034524
mov     eax, [ebp+var_8]
mov     edx, [eax+20h]
mov     ecx, [ebp+arg_14]
inc     [ebp+var_4]
mov     [ecx+18h], edx
mov     [ecx+28h], ebx
mov     [ebp+var_1c], eax
mov     eax, [ebx+44h]
mov     [ebp+var_14], eax
cmp     edi, [ebx+4]
jnz     short loc_1003451d
or      eax, 0ffffffffh
jmp     short loc_10034520
movsx   eax, di
mov     [ecx+1ch], ax
mov     edx, [ebp+var_34]
mov     eax, [ebp+var_24]
mov     esi, [ebp+var_8]
movsx   ecx, word ptr [edx]
inc     eax
add     esi, 3ch
mov     [ebp+var_24], eax
mov     [ebp+var_8], esi
cmp     eax, ecx
jl      loc_10034393
cmp     [ebp+arg_4], 0
jnz     loc_100346c8
cmp     [ebp+arg_8], 0
jz      loc_100346c8
cmp     [ebp+var_4], 0
jnz     loc_10034789
mov     edi, [ebp+arg_0]
cmp     dword ptr [edi+1b4h], 0
jz      loc_100346d2
movzx   esi, byte ptr [edi+1c8h]
cmp     esi, 6ah
jz      short loc_10034599
mov     edx, [ebp+arg_8]
mov     ecx, offset anew
call    sub_1000bca0
test    eax, eax
jnz     short loc_10034599
mov     edx, [ebp+arg_14]
mov     dword ptr [edx+18h], 1
jmp     short loc_100345c1
cmp     esi, 69h
jz      loc_100346d2
mov     edx, [ebp+arg_8]
mov     ecx, offset aold
call    sub_1000bca0
test    eax, eax
jnz     loc_100346d2
mov     eax, [ebp+arg_14]
mov     dword ptr [eax+18h], 0
mov     eax, [edi+1b4h]
mov     [ebp+var_8], eax
test    eax, eax
jz      loc_100346d2
mov     ebx, [eax+8]
mov     ecx, [eax+44h]
inc     [ebp+var_c]
xor     edi, edi
mov     [ebp+var_14], ecx
test    ebx, ebx
jle     short loc_10034613
mov     edx, eax
mov     esi, [edx+0ch]
lea     esp, [esp+0]
mov     edx, [ebp+arg_c]
mov     ecx, [esi]
call    sub_1000bca0
test    eax, eax
jz      short loc_10034608
inc     edi
add     esi, 18h
cmp     edi, ebx
jl      short loc_100345f0
jmp     short loc_10034613
mov     eax, [ebp+var_8]
cmp     edi, [eax+4]
jnz     short loc_10034613
or      edi, 0ffffffffh
cmp     edi, ebx
jl      short loc_1003462e
mov     esi, [ebp+arg_c]
call    sub_10037370
test    eax, eax
jz      short loc_10034626
or      edi, 0ffffffffh
cmp     edi, ebx
jge     loc_100346d2
mov     eax, [ebp+arg_14]
mov     esi, 1
mov     [ebp+var_4], esi
test    edi, edi
jns     short loc_10034653
mov     ecx, [ebp+var_8]
mov     byte ptr [eax+1], 64h
mov     [eax+1ch], di
mov     [eax+28h], ecx
mov     [ebp+var_28], esi
jmp     loc_10034789
cmp     dword ptr [eax+18h], 0
jnz     short loc_1003469d
cmp     edi, 20h
jl      short loc_1003467c
mov     ecx, [ebp+arg_0]
or      edx, 0ffffffffh
or      [ecx+1c0h], edx
mov     ecx, [ebp+var_8]
mov     [eax+1ch], di
mov     [eax+28h], ecx
mov     [ebp+var_28], esi
jmp     loc_10034789
mov     ecx, edi
mov     edx, esi
shl     edx, cl
mov     ecx, [ebp+arg_0]
mov     [ebp+var_28], esi
or      [ecx+1c0h], edx
mov     ecx, [ebp+var_8]
mov     [eax+1ch], di
mov     [eax+28h], ecx
jmp     loc_10034789
cmp     edi, 20h
jl      short loc_100346a7
or      edx, 0ffffffffh
jmp     short loc_100346ad
mov     edx, esi
mov     ecx, edi
shl     edx, cl
mov     ecx, [ebp+arg_0]
or      [ecx+1c4h], edx
mov     ecx, [ebp+var_8]
mov     [eax+1ch], di
mov     [eax+28h], ecx
mov     [ebp+var_28], esi
jmp     loc_10034789
cmp     [ebp+var_4], 0
jnz     loc_10034789
cmp     [ebp+var_c], 1
jnz     short loc_100346fe
mov     esi, [ebp+arg_c]
call    sub_10037370
test    eax, eax
jz      short loc_100346fe
mov     eax, [ebp+arg_14]
or      edx, 0ffffffffh
mov     [ebp+var_4], 1
mov     [eax+1ch], dx
mov     byte ptr [eax+1], 64h
jmp     loc_10034789
mov     eax, [ebp+arg_10]
mov     ecx, [eax+8]
test    ecx, ecx
jz      short loc_1003477d
cmp     [ebp+arg_8], 0
jnz     short loc_1003477d
mov     edx, [ecx]
xor     eax, eax
mov     [ebp+var_24], eax
mov     [ebp+var_34], edx
test    edx, edx
jle     short loc_1003477d
mov     esi, [ecx+8]
add     esi, 4
mov     ebx, [esi]
test    ebx, ebx
jz      short loc_1003476b
mov     cl, [ebx]
mov     edi, [ebp+arg_c]
mov     edx, ebx
test    cl, cl
jz      short loc_10034753
movzx   eax, byte ptr [edi]
movzx   ecx, cl
mov     cl, ds:byte_10076030[ecx]
cmp     cl, ds:byte_10076030[eax]
jnz     short loc_10034750
mov     cl, [edx+1]
inc     edx
inc     edi
test    cl, cl
jnz     short loc_10034733
mov     eax, [ebp+var_24]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [edi]
movzx   ecx, ds:byte_10076030[ecx]
movzx   edx, ds:byte_10076030[edx]
sub     edx, ecx
jz      short loc_100347ca
inc     eax
add     esi, 14h
mov     [ebp+var_24], eax
cmp     eax, [ebp+var_34]
jl      short loc_10034722
cmp     [ebp+var_4], 0
jnz     short loc_10034789
mov     eax, [ebp+arg_10]
mov     ecx, [eax+10h]
inc     [ebp+var_18]
mov     [ebp+arg_10], ecx
cmp     [ebp+arg_10], 0
jnz     loc_10034360
cmp     [ebp+var_4], 0
jnz     loc_10034830
cmp     [ebp+arg_8], 0
jnz     loc_1003483c
mov     eax, [ebp+arg_14]
test    byte ptr [eax+2], 40h
jz      loc_1003483c
mov     byte ptr [eax], 5eh
mov     dword ptr [eax+28h], 0
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_10]
test    byte ptr [ecx+1ch], 1
jnz     short loc_10034803
mov     ecx, [ecx+8]
mov     ecx, [ecx+8]
lea     edx, [eax+eax*4]
mov     edx, [ecx+edx*4]
test    byte ptr [edx+2], 2
jz      short loc_10034803
mov     eax, [ebp+arg_0]
push    ebx
push    offset amisuseofaliase
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     eax, 2
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_18]
mov     edx, [ebp+arg_14]
push    ecx
mov     ecx, [ebp+arg_10]
mov     ecx, [ecx+8]
push    offset dword_100796bc
push    edx
mov     edx, [ebp+arg_0]
push    ecx
push    edx
call    sub_10034060
mov     edi, [ebp+arg_14]
add     esp, 14h
mov     ebx, 1
jmp     loc_10034915
mov     eax, [ebp+var_4]
cmp     eax, 1
jz      short loc_100348a6
test    eax, eax
jnz     short loc_10034843
mov     eax, offset anosuchcolumn
jmp     short loc_10034848
mov     eax, offset aambiguouscolum
mov     ecx, [ebp+arg_4]
mov     esi, [ebp+arg_0]
test    ecx, ecx
jz      short loc_1003486c
mov     edx, [ebp+arg_c]
push    edx
mov     edx, [ebp+arg_8]
push    edx
push    ecx
push    eax
push    offset assss
push    esi
call    sub_1000bb30
add     esp, 18h
jmp     short loc_1003489c
mov     ecx, [ebp+arg_8]
test    ecx, ecx
jz      short loc_10034889
mov     edx, [ebp+arg_c]
push    edx
push    ecx
push    eax
push    offset asss
push    esi
call    sub_1000bb30
add     esp, 14h
jmp     short loc_1003489c
mov     ecx, [ebp+arg_c]
push    ecx
push    eax
push    offset ass_4
push    esi
call    sub_1000bb30
add     esp, 10h
mov     eax, [ebp+var_2c]
mov     byte ptr [esi+11h], 1
inc     dword ptr [eax+18h]
mov     edi, [ebp+arg_14]
movzx   eax, word ptr [edi+1ch]
xor     ebx, ebx
cmp     ax, bx
jl      short loc_100348d8
mov     esi, [ebp+var_1c]
cmp     esi, ebx
jz      short loc_100348d8
movsx   ecx, ax
cmp     ecx, 40h
jl      short loc_100348c6
lea     ecx, [ebx+3fh]
mov     eax, 1
xor     edx, edx
call    __allshl
or      [esi+2ch], eax
or      [esi+30h], edx
mov     edx, [edi+8]
mov     esi, [ebp+var_10]
push    edx
push    esi
call    sub_10036430
mov     eax, [edi+0ch]
push    eax
push    esi
mov     [edi+8], ebx
call    sub_10036430
mov     ecx, [ebp+var_28]
add     esp, 10h
neg     ecx
sbb     cl, cl
and     cl, 0a4h
mov     [edi+0ch], ebx
add     cl, 98h
mov     ebx, 1
mov     [edi], cl
cmp     [ebp+var_4], ebx
jnz     loc_100347f7
mov     esi, [ebp+arg_10]
mov     edx, [esi+4]
mov     eax, [ebp+arg_0]
push    edx
mov     edx, [ebp+var_14]
push    edi
push    eax
call    sub_1003ed90
mov     eax, [ebp+var_2c]
add     [eax+14h], ebx
add     esp, 0ch
cmp     eax, esi
jz      short loc_10034940
mov     eax, [eax+10h]
add     [eax+14h], ebx
cmp     eax, esi
jnz     short loc_10034936
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     ecx, 30h
mov     esi, edx
mov     edi, eax
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_100349df
push    30h
push    0
push    esi
call    memset
mov     edx, [ebp+arg_0]
mov     ecx, edi
or      eax, 0ffffffffh
shl     ecx, 4
mov     [esi+1eh], ax
sub     ecx, edi
lea     edi, [edx+ecx*4+4]
mov     byte ptr [esi], 98h
mov     eax, 1
mov     [esi+2ch], eax
mov     ecx, [edi+0ch]
mov     [esi+28h], ecx
mov     edx, [edi+20h]
add     esp, 0ch
mov     [esi+18h], edx
cmp     [ecx+4], ebx
jnz     short loc_100349bb
or      edx, 0ffffffffh
or      word ptr [esi+2], 4
mov     [esi+1ch], dx
mov     eax, esi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
mov     [esi+1ch], bx
mov     ecx, 3fh
cmp     ebx, 40h
jge     short loc_100349cb
mov     ecx, ebx
xor     edx, edx
call    __allshl
or      [edi+2ch], eax
or      [edi+30h], edx
or      word ptr [esi+2], 4
mov     eax, esi
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [eax+10h]
movzx   eax, word ptr [esi+2]
mov     ebx, [edi]
mov     edx, 4
mov     [ebp+var_8], edi
mov     [ebp+var_4], ebx
test    dl, al
jnz     loc_10034b50
movzx   ecx, byte ptr [esi]
or      eax, edx
add     ecx, 0ffffffech
mov     [esi+2], ax
cmp     ecx, 87h
ja      def_10034a3a
movzx   ecx, ds:byte_10034cb8[ecx]
jmp     ds:jpt_10034a3a[ecx*4]
mov     edx, [esi+4]
push    esi
push    edi
push    edx
push    0
push    0
push    ebx
call    sub_10034320
add     esp, 18h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+0ch]
cmp     byte ptr [eax], 1ah
jnz     short loc_10034a6a
mov     edx, [esi+8]
xor     ecx, ecx
jmp     short loc_10034a76
mov     ecx, [esi+8]
mov     edx, [eax+8]
mov     ecx, [ecx+4]
mov     eax, [eax+0ch]
mov     eax, [eax+4]
mov     edx, [edx+4]
push    esi
push    edi
push    eax
push    edx
push    ecx
push    ebx
call    sub_10034320
add     esp, 18h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+10h]
xor     ecx, ecx
mov     [ebp+var_18], eax
cmp     eax, ecx
jz      short loc_10034aa1
mov     edi, [eax]
jmp     short loc_10034aa3
xor     edi, edi
mov     edx, [ebx]
mov     ebx, [esi+4]
mov     [ebp+var_14], ecx
mov     [ebp+arg_4], ecx
mov     ecx, [edx+10h]
mov     eax, [ecx+0ch]
mov     cl, [eax+4dh]
mov     byte ptr [ebp+var_10], cl
mov     ecx, ebx
call    sub_1000ba20
mov     ecx, [ebp+var_10]
push    0
push    ecx
push    edi
push    ebx
push    edx
mov     edi, eax
mov     [ebp+var_c], eax
call    sub_100447c0
mov     edi, eax
add     esp, 14h
test    edi, edi
jnz     short loc_10034b09
mov     edx, [ebp+var_10]
mov     edi, [ebp+var_c]
push    eax
mov     eax, [ebp+var_4]
mov     ecx, [eax]
push    edx
push    0fffffffeh
push    ebx
push    ecx
call    sub_100447c0
mov     edi, eax
add     esp, 14h
test    edi, edi
jz      loc_10034b8d
mov     [ebp+var_14], 1
jmp     short loc_10034b14
xor     edx, edx
cmp     [edi+0ch], edx
setz    dl
mov     [ebp+arg_4], edx
mov     eax, [edi+18h]
push    0
push    eax
mov     eax, [ebp+var_4]
push    0
push    1fh
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jz      short loc_10034b5c
cmp     eax, 1
jnz     short loc_10034b4d
mov     ecx, [edi+18h]
mov     edx, [ebp+var_4]
push    ecx
push    offset anotauthorizedt
push    edx
call    sub_1000bb30
mov     eax, [ebp+var_8]
add     esp, 0ch
inc     dword ptr [eax+18h]
mov     byte ptr [esi], 62h
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_4], 0
mov     edi, [ebp+var_8]
jz      short loc_10034bab
test    byte ptr [edi+1ch], 1
jnz     short loc_10034bab
mov     eax, [ebp+var_c]
mov     ecx, [ebp+var_4]
push    ebx
push    eax
push    offset amisuseofaggreg
push    ecx
call    sub_1000bb30
add     esp, 10h
inc     dword ptr [edi+18h]
mov     [ebp+arg_4], 0
jmp     short loc_10034bd4
mov     edx, [ebp+var_c]
mov     eax, [ebp+var_4]
push    ebx
push    edx
push    offset anosuchfunction
push    eax
call    sub_1000bb30
mov     eax, [ebp+var_8]
add     esp, 10h
inc     dword ptr [eax+18h]
jmp     short loc_10034bd4
cmp     [ebp+var_14], 0
jz      short loc_10034bca
mov     ecx, [ebp+var_c]
mov     edx, [ebp+var_4]
push    ebx
push    ecx
push    offset awrongnumberofa
push    edx
call    sub_1000bb30
add     esp, 10h
inc     dword ptr [edi+18h]
cmp     [ebp+arg_4], 0
jz      short loc_10034bd4
and     byte ptr [edi+1ch], 0feh
mov     eax, [ebp+var_18]
mov     ebx, [ebp+arg_0]
call    sub_10033ea0
cmp     [ebp+arg_4], 0
jz      short loc_10034c1f
mov     ebx, [ebp+var_8]
mov     edi, ebx
mov     byte ptr [esi], 99h
mov     byte ptr [esi+23h], 0
mov     ecx, [edi+4]
mov     edx, esi
call    sub_1003a780
test    eax, eax
jnz     short loc_10034c17
inc     byte ptr [esi+23h]
mov     edi, [edi+10h]
test    edi, edi
jnz     short loc_10034bf1
or      byte ptr [ebx+1ch], 1
lea     eax, [edi+1]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
or      byte ptr [edi+1ch], 2
or      byte ptr [ebx+1ch], 1
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    eax, 800h
jz      short def_10034a3a
mov     eax, [edi+14h]
mov     [ebp+arg_4], eax
test    [edi+1ch], dl
jz      short loc_10034c4b
push    offset asubqueriesproh
push    ebx
call    sub_1000bb30
add     esp, 8
mov     ecx, [esi+10h]
mov     edx, [ebp+arg_0]
push    ecx
push    edx
call    sub_10033f90
mov     eax, [ebp+arg_4]
add     esp, 8
cmp     eax, [edi+14h]
jz      short def_10034a3a
or      word ptr [esi+2], 20h
jmp     short def_10034a3a
test    [edi+1ch], dl
jz      short def_10034a3a
push    offset aparametersproh
push    ebx
call    sub_1000bb30
add     esp, 8
cmp     dword ptr [ebx+44h], 0
jnz     short loc_10034c94
mov     ecx, [ebx]
cmp     byte ptr [ecx+32h], 0
jnz     short loc_10034c94
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 2
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, [ecx+4]
mov     ecx, [eax]
push    ebx
push    esi
push    edi
xor     edi, edi
mov     [ebp+var_4], edx
mov     [ebp+var_8], ecx
test    ecx, ecx
jle     short loc_10034db1
mov     ebx, [eax+8]
add     ebx, 4
mov     esi, [ebx]
test    esi, esi
jz      short loc_10034da9
mov     al, [esi]
mov     edx, [ebp+var_4]
mov     ecx, esi
test    al, al
jz      short loc_10034d8e
movzx   esi, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[esi]
jnz     short loc_10034d8e
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10034d71
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_10034dba
mov     ecx, [ebp+var_8]
inc     edi
add     ebx, 14h
cmp     edi, ecx
jl      short loc_10034d60
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     eax, [edi+1]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 30h
xor     eax, eax
push    ebx
mov     ebx, [edx]
push    esi
mov     esi, [ecx]
mov     ecx, [ecx+24h]
mov     [ebp+var_2c], eax
mov     [ebp+var_28], eax
mov     [ebp+var_24], eax
mov     [ebp+var_14], eax
mov     [ebp+var_10], eax
mov     [ebp+var_24], esi
mov     [ebp+var_20], eax
mov     [ebp+var_1c], eax
mov     [ebp+var_18], eax
mov     [ebp+var_2c], edx
mov     [ebp+var_28], ecx
mov     byte ptr [ebp+var_10], 1
mov     [ebp+var_14], eax
mov     dl, [ebx+35h]
push    edi
mov     edi, [ebp+arg_0]
mov     [ebp+var_c], esi
lea     esi, [ebp+var_2c]
mov     [ebp+var_5], dl
mov     byte ptr [ebx+35h], 1
call    sub_10035700
mov     cl, [ebp+var_5]
mov     [ebx+35h], cl
test    eax, eax
jnz     short loc_10034e57
mov     edi, [ebp+var_c]
xor     ebx, ebx
cmp     [edi], ebx
jle     short loc_10034e57
xor     esi, esi
mov     edx, [ebp+arg_0]
mov     eax, [edi+8]
mov     ecx, [eax+esi]
push    edx
push    ecx
call    sub_1003a510
add     esp, 8
cmp     eax, 2
jl      short loc_10034e60
inc     ebx
add     esi, 14h
cmp     ebx, [edi]
jl      short loc_10034e37
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
lea     eax, [ebx+1]
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 2ch
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
mov     esi, [edi+34h]
mov     edx, 1
mov     [esp+38h+var_4], esi
test    esi, esi
jz      loc_1003518d
mov     ebx, [ebp+arg_0]
mov     eax, [ebx]
mov     ecx, [esi]
mov     [esp+38h+var_20], eax
cmp     ecx, [eax+50h]
jle     short loc_10034ebd
push    offset atoomanytermsin
push    ebx
call    sub_1000bb30
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
test    ecx, ecx
jle     short loc_10034ed5
xor     ecx, ecx
mov     ebx, [esi+8]
mov     byte ptr [ecx+ebx+0dh], 0
inc     eax
add     ecx, 14h
cmp     eax, [esi]
jl      short loc_10034ec5
xor     ebx, ebx
mov     [edi+3ch], ebx
cmp     [edi+38h], ebx
jz      short loc_10034ef9
mov     eax, [ebp+arg_4]
mov     ecx, [eax+38h]
mov     [ecx+3ch], eax
mov     eax, [eax+38h]
mov     [ebp+arg_4], eax
cmp     [eax+38h], ebx
jnz     short loc_10034edf
jmp     short loc_10034f03
mov     edx, [esp+38h+var_18]
xor     ebx, ebx
cmp     edx, ebx
jz      loc_1003516e
cmp     dword ptr [esi], 0
mov     edx, [ebp+arg_4]
mov     edi, [edx]
mov     eax, [esi+8]
mov     [esp+38h+var_18], ebx
mov     [esp+38h+var_10], edi
mov     [esp+38h+var_14], ebx
mov     [esp+38h+var_1c], eax
jle     loc_1003515d
jmp     short loc_10034f34
jmp     short loc_10034f30
mov     edi, [esp+38h+var_10]
cmp     byte ptr [eax+0dh], 0
mov     [esp+38h+var_28], 0ffffffffh
jnz     loc_1003513d
mov     esi, [eax]
mov     eax, 400h
test    [esi+2], ax
jz      short loc_10034f5c
mov     eax, [esi+4]
mov     [esp+38h+var_28], eax
jmp     short loc_10034f82
movzx   eax, byte ptr [esi]
sub     eax, 9ch
jz      short loc_10034fb5
dec     eax
jnz     short loc_10034fd6
mov     edx, [esi+8]
lea     ecx, [esp+38h+var_28]
push    ecx
push    edx
call    sub_100371f0
add     esp, 8
test    eax, eax
jz      short loc_10034fd6
mov     eax, [esp+38h+var_28]
test    eax, eax
jle     short loc_10034f8e
cmp     eax, [edi]
jle     loc_10035098
mov     eax, [edi]
mov     ecx, [ebp+arg_0]
push    eax
push    offset aorder
inc     ebx
push    ebx
push    offset arsbytermoutofr
push    ecx
call    sub_1000bb30
add     esp, 14h
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esi+8]
lea     eax, [esp+38h+var_c]
push    eax
push    ecx
call    sub_100371f0
add     esp, 8
test    eax, eax
jz      short loc_10034fd6
mov     eax, [esp+38h+var_c]
neg     eax
mov     [esp+38h+var_28], eax
jmp     short loc_10034f82
cmp     byte ptr [esi], 1ah
jnz     short loc_10035051
mov     eax, [edi]
mov     [esp+38h+var_24], 0
mov     [esp+38h+var_8], eax
test    eax, eax
jle     short loc_10035051
mov     ebx, [edi+8]
add     ebx, 4
mov     edi, [ebx]
test    edi, edi
jz      short loc_10035041
mov     al, [edi]
mov     edx, [esi+4]
mov     ecx, edi
test    al, al
jz      short loc_10035021
movzx   edi, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[edi]
jnz     short loc_10035021
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10035004
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      loc_1003512b
mov     eax, [esp+38h+var_8]
mov     ecx, [esp+38h+var_24]
inc     ecx
add     ebx, 14h
mov     [esp+38h+var_24], ecx
cmp     ecx, eax
jl      short loc_10034ff3
xor     eax, eax
mov     [esp+38h+var_28], eax
test    eax, eax
jnz     short loc_1003509a
push    eax
push    eax
mov     eax, [esp+40h+var_20]
push    esi
push    eax
call    sub_100365c0
mov     ebx, [esp+48h+var_20]
add     esp, 10h
cmp     byte ptr [ebx+32h], 0
mov     edi, eax
jnz     short loc_1003508a
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    edi
call    sub_10034dd0
add     esp, 4
mov     [esp+38h+var_28], eax
push    edi
push    ebx
call    sub_10036430
mov     eax, [esp+40h+var_28]
add     esp, 8
test    eax, eax
jle     loc_10035135
mov     ecx, [esi+14h]
movzx   ebx, word ptr [esi+2]
push    esi
mov     esi, [esp+3ch+var_20]
push    esi
mov     [esp+40h+var_8], ecx
and     ebx, 100h
call    sub_10036430
add     esp, 8
mov     ecx, 31h
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_100350f6
push    31h
push    0
push    edi
call    memset
add     esp, 0ch
lea     eax, [edi+30h]
or      edx, 0ffffffffh
mov     byte ptr [edi], 81h
mov     [edi+1eh], dx
mov     [edi+4], eax
mov     byte ptr [eax], 0
mov     dword ptr [edi+2ch], 1
mov     eax, [esp+38h+var_1c]
mov     [eax], edi
test    edi, edi
jz      loc_10034eb1
mov     ecx, [esp+38h+var_8]
mov     [edi+14h], ecx
or      ebx, 400h
or      [edi+2], bx
mov     edx, [esp+38h+var_28]
mov     [edi+4], edx
mov     cx, word ptr [esp+38h+var_28]
mov     [eax+0eh], cx
mov     byte ptr [eax+0dh], 1
jmp     short loc_1003513d
mov     eax, [esp+38h+var_24]
inc     eax
jmp     loc_10035053
mov     [esp+38h+var_18], 1
mov     ebx, [esp+38h+var_14]
mov     eax, [esp+38h+var_1c]
mov     esi, [esp+38h+var_4]
inc     ebx
add     eax, 14h
mov     [esp+38h+var_14], ebx
mov     [esp+38h+var_1c], eax
cmp     ebx, [esi]
jl      loc_10034f30
mov     edx, [ebp+arg_4]
mov     eax, [edx+3ch]
mov     [ebp+arg_4], eax
test    eax, eax
jnz     loc_10034ef5
mov     edx, [esi]
xor     eax, eax
test    edx, edx
jle     short loc_1003518d
mov     ecx, [esi+8]
add     ecx, 0dh
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [ecx], 0
jz      short loc_10035196
add     ecx, 14h
cmp     eax, edx
jl      short loc_10035180
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_0]
push    eax
push    offset arorderbytermdo
push    edx
call    sub_1000bb30
add     esp, 0ch
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_8]
push    ebx
push    esi
push    edi
test    ecx, ecx
jz      short loc_1003523a
mov     esi, [ebp+arg_0]
mov     edx, [esi]
cmp     byte ptr [edx+32h], 0
jnz     short loc_1003523a
mov     eax, [ecx]
cmp     eax, [edx+50h]
jle     short loc_100351fd
mov     eax, [ebp+arg_c]
push    eax
push    offset atoomanytermsin_0
push    esi
call    sub_1000bb30
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     edx, [ebp+arg_4]
mov     edi, [edx]
mov     esi, [ecx+8]
xor     ebx, ebx
test    eax, eax
jle     short loc_1003523a
movzx   eax, word ptr [esi+0eh]
test    ax, ax
jz      short loc_10035232
cmp     eax, [edi]
jg      short loc_10035242
mov     ecx, [ebp+arg_c]
mov     edx, [esi]
push    0
push    ecx
mov     ecx, [ebp+arg_0]
push    edx
push    edi
dec     eax
push    ecx
call    sub_10034060
mov     ecx, [ebp+arg_8]
add     esp, 14h
inc     ebx
add     esi, 14h
cmp     ebx, [ecx]
jl      short loc_1003520b
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     edx, [edi]
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_0]
push    edx
push    eax
inc     ebx
push    ebx
push    offset arsbytermoutofr
push    ecx
call    sub_1000bb30
add     esp, 14h
pop     edi
pop     esi
mov     eax, 1
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
sub     esp, 1ch
push    esi
push    edi
test    eax, eax
jnz     short loc_10035285
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     dword ptr [eax], 0
mov     ecx, [ebx]
mov     edx, [ecx]
mov     ecx, [ebp+arg_0]
mov     esi, [eax+8]
mov     [ebp+var_18], edx
mov     edx, [ecx]
mov     [ebp+var_10], edx
mov     [ebp+var_8], 0
mov     [ebp+var_4], esi
jle     loc_10035359
mov     edi, [esi]
cmp     byte ptr [edi], 1ah
mov     [ebp+var_14], edi
jnz     short loc_100352bf
mov     eax, [ebx]
mov     ecx, edi
call    sub_10034d40
jmp     short loc_100352c1
xor     eax, eax
mov     [ebp+var_c], eax
test    eax, eax
jle     short loc_100352ce
mov     [esi+0eh], ax
jmp     short loc_1003533f
lea     eax, [ebp+var_c]
push    eax
push    edi
call    sub_100371f0
add     esp, 8
test    eax, eax
jz      short loc_100352f1
mov     eax, [ebp+var_c]
cmp     eax, 1
jl      loc_10035371
mov     [esi+0eh], ax
jmp     short loc_1003533f
xor     ecx, ecx
mov     [esi+0eh], cx
mov     esi, [ebp+arg_0]
call    sub_10035700
test    eax, eax
jnz     loc_1003538f
mov     eax, [ebx]
xor     esi, esi
cmp     [eax], esi
jle     short loc_1003533c
xor     edi, edi
mov     edx, [eax+8]
mov     eax, [edx+edi]
mov     ecx, [ebp+var_14]
push    eax
push    ecx
call    sub_1003a510
add     esp, 8
test    eax, eax
jnz     short loc_10035332
mov     eax, [ebp+var_4]
lea     edx, [esi+1]
mov     [eax+0eh], dx
mov     eax, [ebx]
inc     esi
add     edi, 14h
cmp     esi, [eax]
jl      short loc_10035311
mov     esi, [ebp+var_4]
mov     eax, [ebp+var_8]
mov     ecx, [ebp+arg_4]
inc     eax
add     esi, 14h
mov     [ebp+var_8], eax
mov     [ebp+var_4], esi
cmp     eax, [ecx]
jl      loc_100352aa
mov     eax, ecx
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+var_10]
push    ecx
push    eax
push    ebx
push    edx
call    sub_100351c0
add     esp, 10h
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_18]
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+var_8]
push    edx
mov     edx, [ebp+var_10]
push    eax
inc     ecx
push    ecx
push    offset arsbytermoutofr
push    edx
call    sub_1000bb30
add     esp, 14h
pop     edi
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 5ch
push    ebx
mov     ebx, [ebp+arg_4]
movzx   eax, word ptr [ebx+6]
push    esi
push    edi
test    al, 2
jnz     loc_100356b0
mov     ecx, [ebp+arg_0]
mov     esi, [ecx+8]
mov     edx, [ecx+10h]
mov     edi, [esi]
mov     [esp+68h+var_48], edx
mov     [esp+68h+var_54], esi
mov     [esp+68h+var_4c], edi
test    al, 10h
jnz     short loc_10035402
push    edx
push    ebx
push    esi
call    sub_1005acf0
add     esp, 0ch
cmp     dword ptr [esi+44h], 0
jnz     short loc_100353f6
cmp     byte ptr [edi+32h], 0
mov     eax, 1
jz      loc_100356b5
mov     eax, 2
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
cmp     [ebx+38h], eax
mov     [esp+68h+var_38], ebx
setnz   al
mov     [esp+68h+var_44], eax
jmp     short loc_1003541b
mov     esi, [esp+68h+var_54]
mov     ebx, [ebp+arg_4]
or      word ptr [ebx+6], 2
xor     eax, eax
mov     [esp+68h+var_20], eax
mov     [esp+68h+var_20], esi
mov     [esp+68h+var_1c], eax
mov     [esp+68h+var_18], eax
mov     [esp+68h+var_14], eax
mov     [esp+68h+var_10], eax
mov     [esp+68h+var_c], eax
mov     [esp+68h+var_8], eax
mov     [esp+68h+var_4], eax
mov     edi, [ebx+44h]
lea     esi, [esp+68h+var_20]
call    sub_10035700
test    eax, eax
jnz     short loc_100353f6
mov     edi, [ebx+48h]
call    sub_10035700
test    eax, eax
jnz     short loc_100353f6
mov     edx, [esp+68h+var_48]
mov     byte ptr [esp+68h+var_4], 1
mov     ecx, [ebx+24h]
mov     [esp+68h+var_1c], ecx
mov     [esp+68h+var_10], edx
mov     ebx, [ebx]
mov     [esp+68h+var_58], eax
cmp     [ebx], eax
jle     short loc_100354b1
mov     [esp+68h+var_50], eax
mov     eax, [ebx+8]
mov     ecx, [esp+68h+var_50]
mov     edi, [ecx+eax]
lea     esi, [esp+68h+var_20]
call    sub_10035700
test    eax, eax
jnz     loc_100353f6
mov     eax, [esp+68h+var_58]
add     [esp+68h+var_50], 14h
inc     eax
mov     [esp+68h+var_58], eax
cmp     eax, [ebx]
jl      short loc_10035484
mov     ebx, [ebp+arg_4]
mov     edx, [ebx+24h]
xor     eax, eax
xor     ecx, ecx
mov     [esp+68h+var_58], eax
cmp     cx, [edx]
jge     loc_1003559d
mov     [esp+68h+var_50], eax
mov     edx, [ebx+24h]
mov     eax, [esp+68h+var_50]
cmp     dword ptr [edx+eax+14h], 0
lea     ecx, [edx+eax+4]
mov     [esp+68h+var_3c], ecx
jz      loc_10035581
mov     edi, [esp+68h+var_54]
mov     ebx, [esp+68h+var_48]
mov     edx, [edi+204h]
xor     esi, esi
mov     [esp+68h+var_40], edx
mov     eax, ebx
test    ebx, ebx
jz      short loc_1003550a
add     esi, [eax+14h]
mov     eax, [eax+10h]
test    eax, eax
jnz     short loc_10035500
mov     eax, [ecx+4]
test    eax, eax
jz      short loc_10035517
mov     [edi+204h], eax
mov     eax, [ecx+10h]
push    eax
lea     ecx, [esp+6ch+var_34]
push    ecx
mov     [esp+70h+var_34], offset sub_100349f0
mov     [esp+70h+var_30], offset sub_100353a0
mov     [esp+70h+var_2c], edi
mov     [esp+70h+var_24], ebx
call    sub_10033f90
mov     edx, [esp+70h+var_40]
add     esp, 8
cmp     dword ptr [edi+44h], 0
mov     [edi+204h], edx
jnz     loc_100353f6
mov     eax, [esp+68h+var_4c]
cmp     byte ptr [eax+32h], 0
jnz     loc_100353f6
mov     eax, ebx
test    ebx, ebx
jz      short loc_10035572
sub     esi, [eax+14h]
mov     eax, [eax+10h]
test    eax, eax
jnz     short loc_10035568
mov     edx, [esp+68h+var_3c]
mov     ebx, [ebp+arg_4]
test    esi, esi
setnz   cl
mov     [edx+1eh], cl
mov     ecx, [ebx+24h]
mov     eax, [esp+68h+var_58]
movsx   edx, word ptr [ecx]
add     [esp+68h+var_50], 3ch
inc     eax
mov     [esp+68h+var_58], eax
cmp     eax, edx
jl      loc_100354cc
mov     eax, [ebx+2ch]
mov     [esp+68h+var_50], eax
test    eax, eax
jnz     short loc_100355b6
test    byte ptr [esp+68h+var_4], 2
jnz     short loc_100355b6
and     byte ptr [esp+68h+var_4], 0feh
jmp     short loc_100355bb
or      word ptr [ebx+6], 4
cmp     dword ptr [ebx+30h], 0
jz      short loc_100355c9
test    eax, eax
jz      loc_100356bc
mov     eax, [ebx]
mov     [esp+68h+var_18], eax
mov     edi, [ebx+28h]
lea     esi, [esp+68h+var_20]
call    sub_10035700
test    eax, eax
jnz     loc_100353f6
mov     edi, [ebx+30h]
call    sub_10035700
test    eax, eax
jnz     loc_100353f6
or      byte ptr [esp+68h+var_4], 1
mov     [esp+68h+var_10], eax
cmp     [esp+68h+var_44], eax
jnz     short loc_10035621
mov     ecx, [ebx+34h]
push    offset aorder
push    ecx
mov     edx, esi
push    edx
call    sub_10035270
add     esp, 0ch
test    eax, eax
jnz     loc_100353f6
mov     ebx, [ebp+arg_4]
mov     eax, [esp+68h+var_4c]
cmp     byte ptr [eax+32h], 0
jnz     loc_100353f6
mov     eax, [esp+68h+var_50]
test    eax, eax
jz      short loc_10035683
push    offset agroup
push    eax
lea     ecx, [esp+70h+var_20]
push    ecx
call    sub_10035270
add     esp, 0ch
test    eax, eax
jnz     loc_100353f6
mov     edx, [esp+68h+var_4c]
cmp     [edx+32h], al
jnz     loc_100353f6
mov     edx, [esp+68h+var_50]
mov     ecx, [edx+8]
mov     edx, [edx]
test    edx, edx
jle     short loc_10035680
lea     esp, [esp+0]
mov     esi, [ecx]
test    byte ptr [esi+2], 2
jnz     short loc_100356da
inc     eax
add     ecx, 14h
cmp     eax, edx
jl      short loc_10035670
mov     ebx, [ebp+arg_4]
mov     ebx, [ebx+38h]
mov     [ebp+arg_4], ebx
test    ebx, ebx
jnz     loc_10035414
cmp     [esp+68h+var_44], ebx
jz      short loc_100356b0
mov     edx, [esp+68h+var_38]
mov     eax, [esp+68h+var_54]
push    edx
push    eax
call    sub_10034e70
add     esp, 8
test    eax, eax
lea     eax, [ebx+2]
jnz     short loc_100356b5
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+68h+var_54]
push    offset aagroupbyclause
push    eax
call    sub_1000bb30
add     esp, 8
mov     eax, 2
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esp+68h+var_54]
push    offset aaggregatefunct
push    ecx
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
mov     eax, 2
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
test    edi, edi
jnz     short loc_10035712
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi]
mov     ecx, [eax]
mov     edx, [ecx+54h]
mov     ecx, [edi+2ch]
mov     ebx, [eax+1e0h]
add     ebx, ecx
cmp     ebx, edx
jle     short loc_10035741
push    edx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
add     [eax+1e0h], ecx
mov     al, [esi+1ch]
mov     edx, [esi]
mov     bl, al
and     al, 0fdh
mov     [esi+1ch], al
lea     eax, [ebp+var_14]
push    edi
push    eax
and     bl, 2
mov     [ebp+var_14], offset sub_100349f0
mov     [ebp+var_10], offset sub_100353a0
mov     [ebp+var_c], edx
mov     [ebp+var_4], esi
call    sub_10033e00
mov     eax, [esi]
mov     ecx, [edi+2ch]
sub     [eax+1e0h], ecx
add     esp, 8
cmp     dword ptr [esi+18h], 0
jg      short loc_10035791
mov     edx, [ebp+var_c]
cmp     dword ptr [edx+44h], 0
jle     short loc_10035796
or      word ptr [edi+2], 8
mov     al, [esi+1ch]
test    al, 2
jz      short loc_100357b5
or      word ptr [edi+2], 2
mov     al, [edi+2]
and     al, 8
xor     ecx, ecx
cmp     al, 8
setz    cl
mov     eax, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    bl, bl
jz      short loc_100357be
or      al, 2
mov     [esi+1ch], al
mov     al, [edi+2]
and     al, 8
xor     ecx, ecx
cmp     al, 8
setz    cl
pop     ebx
mov     eax, ecx
mov     esp, ebp
pop     ebp
retn
movzx   ecx, byte ptr [eax]
cmp     ecx, 74h
jnz     short loc_100357fa
mov     eax, [eax+10h]
mov     ecx, [eax]
mov     edx, [ecx+8]
mov     eax, [edx]
movzx   ecx, byte ptr [eax]
cmp     ecx, 74h
jz      short loc_100357e8
cmp     ecx, 25h
jnz     short loc_10035807
mov     eax, [eax+4]
jmp     sub_10040670
cmp     ecx, 9ah
jz      short loc_1003581f
cmp     ecx, 98h
jz      short loc_1003581f
cmp     ecx, 84h
jnz     short loc_1003583c
mov     ecx, [eax+28h]
test    ecx, ecx
jz      short loc_1003583c
movsx   eax, word ptr [eax+1ch]
test    eax, eax
jns     short loc_10035831
mov     al, 64h
retn
mov     ecx, [ecx+0ch]
lea     eax, [eax+eax*2]
mov     al, [ecx+eax*8+16h]
retn
mov     al, [eax+1]
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ecx]
push    edi
test    eax, eax
jz      short loc_1003588c
mov     ebx, [eax+4]
mov     eax, [eax]
mov     [ebp+src], eax
test    eax, eax
jnz     short loc_10035865
xor     edi, edi
call    sub_1000bbf0
jmp     short loc_1003588e
lea     ecx, [ebx+1]
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10035885
mov     edx, [ebp+src]
push    ebx
push    edx
push    edi
call    memcpy
add     esp, 0ch
mov     byte ptr [edi+ebx], 0
call    sub_1000bbf0
jmp     short loc_1003588e
xor     edi, edi
mov     eax, [ebp+arg_0]
push    eax
mov     eax, edi
call    sub_10040bb0
mov     ebx, [ebp+arg_4]
add     esp, 4
test    ebx, ebx
jz      short loc_100358b3
test    eax, eax
jz      short loc_100358b3
mov     ecx, 100h
or      [ebx+2], cx
mov     [ebx+14h], eax
mov     eax, edi
mov     ecx, esi
call    sub_10009810
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, eax
xor     eax, eax
mov     ecx, edi
test    edi, edi
jz      short loc_10035922
mov     esi, [ecx+14h]
test    esi, esi
jnz     loc_10035990
movzx   eax, byte ptr [ecx]
cmp     [ecx+28h], esi
jz      short loc_1003590d
cmp     eax, 9ah
jz      short loc_10035927
cmp     eax, 98h
jz      short loc_10035927
cmp     eax, 84h
jz      short loc_10035927
cmp     eax, 3ch
jz      short loc_10035927
cmp     eax, 25h
jz      short loc_10035919
cmp     eax, 9dh
jnz     short loc_10035920
mov     ecx, [ecx+8]
test    ecx, ecx
jnz     short loc_100358e0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
movsx   eax, word ptr [ecx+1ch]
test    eax, eax
js      short loc_10035920
mov     ecx, [ecx+28h]
mov     edx, [ebp+arg_0]
mov     ecx, [ecx+0ch]
mov     edx, [edx]
lea     eax, [eax+eax*2]
mov     ecx, [ecx+eax*8+10h]
mov     eax, [edx+10h]
mov     eax, [eax+0ch]
mov     bl, [eax+4dh]
test    ecx, ecx
jz      short loc_10035976
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_1003595b
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10035955
sub     eax, ecx
and     eax, 3fffffffh
push    ecx
add     edx, 194h
push    edx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
jmp     short loc_10035979
mov     eax, [edx+8]
test    eax, eax
jz      short loc_10035987
movzx   ecx, bl
lea     ecx, [ecx+ecx*4]
lea     eax, [eax+ecx*4-14h]
mov     esi, eax
mov     [edi+14h], eax
test    eax, eax
jz      short loc_10035920
mov     ebx, [ebp+arg_0]
mov     eax, [ebx]
mov     edx, [eax+10h]
mov     ecx, [edx+0ch]
mov     edi, [esi]
mov     cl, [ecx+4dh]
push    eax
mov     eax, esi
call    sub_10044510
add     esp, 4
test    eax, eax
jnz     loc_10035920
push    edi
push    offset anosuchcollatio
push    ebx
call    sub_1000bb30
inc     dword ptr [ebx+44h]
add     esp, 0ch
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
call    sub_100357e0
test    al, al
jz      short loc_100359ec
test    bl, bl
jz      short loc_100359f0
cmp     al, 63h
jge     short loc_100359e9
cmp     bl, 63h
jge     short loc_100359e9
mov     al, 62h
retn
mov     al, 63h
retn
test    bl, bl
jz      short loc_100359e6
movsx   eax, al
movsx   ecx, bl
add     eax, ecx
retn
mov     eax, [esi+8]
push    ebx
call    sub_100357e0
mov     bl, al
mov     eax, [esi+0ch]
test    eax, eax
jnz     short loc_10035a2f
mov     ax, [esi+2]
mov     ecx, 800h
and     ax, cx
mov     edx, ecx
cmp     ax, dx
jnz     short loc_10035a55
mov     eax, [esi+10h]
mov     ecx, [eax]
mov     edx, [ecx+8]
mov     eax, [edx]
call    sub_100357e0
test    al, al
jz      short loc_10035a4b
test    bl, bl
jz      short loc_10035a4f
cmp     al, 63h
jge     short loc_10035a45
cmp     bl, 63h
jl      short loc_10035a59
mov     bl, 63h
mov     al, bl
pop     ebx
retn
test    bl, bl
jz      short loc_10035a59
add     bl, al
mov     al, bl
pop     ebx
retn
test    bl, bl
jnz     short loc_10035a5b
mov     bl, 62h
mov     al, bl
pop     ebx
retn
push    ecx
mov     ecx, 100h
test    [eax+2], cx
jz      short loc_10035a71
mov     eax, [eax+14h]
pop     ecx
retn
test    esi, esi
jz      short loc_10035a82
mov     edx, ecx
test    [esi+2], dx
jz      short loc_10035a82
mov     eax, [esi+14h]
pop     ecx
retn
push    edi
call    sub_100358d0
add     esp, 4
test    eax, eax
jnz     short loc_10035a9a
push    edi
mov     eax, esi
call    sub_100358d0
add     esp, 4
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, eax
mov     esi, ecx
mov     eax, 100h
test    [esi+2], ax
jz      short loc_10035abe
mov     ecx, [esi+14h]
mov     [ebp+var_4], ecx
jmp     short loc_10035af2
test    edi, edi
jz      short loc_10035acf
mov     edx, eax
test    [edi+2], dx
jz      short loc_10035acf
mov     eax, [edi+14h]
jmp     short loc_10035aef
mov     ebx, [ebp+arg_0]
push    ebx
mov     eax, esi
call    sub_100358d0
add     esp, 4
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_10035af2
push    ebx
mov     eax, edi
call    sub_100358d0
add     esp, 4
mov     [ebp+var_4], eax
mov     eax, edi
call    sub_100357e0
mov     bl, al
mov     eax, esi
call    sub_100357e0
test    al, al
jz      short loc_10035b1b
test    bl, bl
jz      short loc_10035b23
cmp     al, 63h
jge     short loc_10035b17
cmp     bl, 63h
jge     short loc_10035b17
mov     al, 62h
jmp     short loc_10035b25
mov     al, 63h
jmp     short loc_10035b25
test    bl, bl
jnz     short loc_10035b23
mov     al, 62h
jmp     short loc_10035b25
add     al, bl
movzx   ecx, byte ptr [ebp+arg_14]
movzx   edx, al
mov     eax, [ebp+arg_0]
mov     esi, [eax+8]
mov     ebx, [esi+1ch]
or      ecx, edx
mov     [ebp+arg_14], ecx
cmp     [esi+20h], ebx
jg      short loc_10035b51
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10035b51
mov     ebx, 1
jmp     short loc_10035b83
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     cl, [ebp+arg_4]
mov     edx, [ebp+arg_c]
mov     [eax], cl
mov     ecx, [ebp+arg_10]
mov     [eax+4], edx
mov     edx, [ebp+arg_8]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     byte ptr [eax+1], 0
mov     ecx, [esi+4]
mov     edi, [esi]
mov     eax, ebx
test    ecx, ecx
jz      short loc_10035bcb
cmp     byte ptr [edi+32h], 0
jnz     short loc_10035bcb
test    ebx, ebx
jns     short loc_10035b9c
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*4]
movsx   eax, byte ptr [esi+1]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     eax, [ebp+var_4]
xor     ecx, ecx
mov     [esi+10h], ecx
cmp     eax, ecx
jnz     short loc_10035bc2
mov     [esi+10h], ecx
mov     [esi+1], cl
jmp     short loc_10035bd8
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0fch
jmp     short loc_10035bd8
mov     ecx, [ebp+var_4]
mov     eax, 0fffffffch
call    sub_10025e50
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+8]
mov     ecx, [eax+4]
test    ecx, ecx
jz      short loc_10035bf2
mov     eax, [eax+1ch]
lea     edx, [eax+eax*4]
mov     al, byte ptr [ebp+arg_14]
mov     [ecx+edx*4-11h], al
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, eax
test    ebx, ebx
jz      loc_10035ce7
push    esi
lea     esp, [esp+0]
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_10035c20
mov     eax, [eax+2ch]
cmp     eax, [edi]
jle     short loc_10035c20
mov     [edi], eax
mov     eax, [ebx+30h]
test    eax, eax
jz      short loc_10035c30
mov     eax, [eax+2ch]
cmp     eax, [edi]
jle     short loc_10035c30
mov     [edi], eax
mov     eax, [ebx+44h]
test    eax, eax
jz      short loc_10035c40
mov     eax, [eax+2ch]
cmp     eax, [edi]
jle     short loc_10035c40
mov     [edi], eax
mov     eax, [ebx+48h]
test    eax, eax
jz      short loc_10035c50
mov     eax, [eax+2ch]
cmp     eax, [edi]
jle     short loc_10035c50
mov     [edi], eax
mov     ecx, [ebx]
test    ecx, ecx
jz      short loc_10035c7b
xor     esi, esi
cmp     [ecx], esi
jle     short loc_10035c7b
xor     edx, edx
mov     edi, edi
mov     eax, [ecx+8]
mov     eax, [edx+eax]
test    eax, eax
jz      short loc_10035c73
mov     eax, [eax+2ch]
cmp     eax, [edi]
jle     short loc_10035c73
mov     [edi], eax
inc     esi
add     edx, 14h
cmp     esi, [ecx]
jl      short loc_10035c60
mov     ecx, [ebx+2ch]
test    ecx, ecx
jz      short loc_10035cab
xor     esi, esi
cmp     [ecx], esi
jle     short loc_10035cab
xor     edx, edx
lea     ebx, [ebx+0]
mov     eax, [ecx+8]
mov     eax, [edx+eax]
test    eax, eax
jz      short loc_10035ca3
mov     eax, [eax+2ch]
cmp     eax, [edi]
jle     short loc_10035ca3
mov     [edi], eax
inc     esi
add     edx, 14h
cmp     esi, [ecx]
jl      short loc_10035c90
mov     ecx, [ebx+34h]
test    ecx, ecx
jz      short loc_10035cdb
xor     esi, esi
cmp     [ecx], esi
jle     short loc_10035cdb
xor     edx, edx
lea     ebx, [ebx+0]
mov     eax, [ecx+8]
mov     eax, [edx+eax]
test    eax, eax
jz      short loc_10035cd3
mov     eax, [eax+2ch]
cmp     eax, [edi]
jle     short loc_10035cd3
mov     [edi], eax
inc     esi
add     edx, 14h
cmp     esi, [ecx]
jl      short loc_10035cc0
mov     ebx, [ebx+38h]
test    ebx, ebx
jnz     loc_10035c10
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebx+8]
push    edi
xor     edi, edi
mov     [ebp+var_4], edi
test    eax, eax
jz      short loc_10035d0d
mov     eax, [eax+2ch]
test    eax, eax
jle     short loc_10035d0d
mov     edi, eax
mov     [ebp+var_4], edi
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_10035d20
mov     eax, [eax+2ch]
cmp     eax, edi
jle     short loc_10035d20
mov     edi, eax
mov     [ebp+var_4], edi
mov     ax, [ebx+2]
mov     ecx, 800h
and     ax, cx
mov     edx, ecx
cmp     ax, dx
jnz     short loc_10035d4a
mov     eax, [ebx+10h]
lea     edi, [ebp+var_4]
call    sub_10035c00
mov     eax, [ebp+var_4]
inc     eax
mov     [ebx+2ch], eax
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebx+10h]
test    ecx, ecx
jz      short loc_10035d88
push    esi
xor     esi, esi
cmp     [ecx], esi
jle     short loc_10035d7e
xor     edx, edx
lea     ebx, [ebx+0]
mov     eax, [ecx+8]
mov     eax, [edx+eax]
test    eax, eax
jz      short loc_10035d76
mov     eax, [eax+2ch]
cmp     eax, edi
jle     short loc_10035d76
mov     edi, eax
mov     [ebp+var_4], edi
inc     esi
add     edx, 14h
cmp     esi, [ecx]
jl      short loc_10035d60
inc     edi
pop     esi
mov     [ebx+2ch], edi
pop     edi
mov     esp, ebp
pop     ebp
retn
inc     edi
mov     [ebx+2ch], edi
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, eax
call    sub_10035cf0
mov     eax, [esi]
mov     eax, [eax+54h]
cmp     [ebx+2ch], eax
jle     short loc_10035dc1
push    eax
push    offset aexpressiontree
push    esi
call    sub_1000bb30
add     esp, 0ch
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
xor     ecx, ecx
push    edi
mov     edi, eax
mov     [ebp+var_4], ecx
mov     [ebp+var_8], ecx
cmp     edi, ecx
jz      short loc_10035e0e
cmp     [ebp+arg_4], 81h
jnz     short loc_10035e07
mov     eax, [edi]
cmp     eax, ecx
jz      short loc_10035e07
lea     ecx, [ebp+var_8]
push    ecx
push    eax
call    sub_1000c450
add     esp, 8
test    eax, eax
jnz     short loc_10035e0e
mov     eax, [edi+4]
inc     eax
mov     [ebp+var_4], eax
mov     ebx, [ebp+var_4]
mov     esi, [ebp+arg_0]
add     ebx, 30h
mov     ecx, ebx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      loc_10035ecf
push    ebx
push    0
push    esi
call    memset
mov     dl, byte ptr [ebp+arg_4]
or      eax, 0ffffffffh
add     esp, 0ch
mov     [esi], dl
mov     [esi+1eh], ax
test    edi, edi
jz      loc_10035ec8
mov     ebx, [ebp+var_4]
test    ebx, ebx
jnz     short loc_10035e6e
mov     edx, [ebp+var_8]
mov     ecx, 400h
or      [esi+2], cx
mov     [esi+4], edx
mov     dword ptr [esi+2ch], 1
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     eax, [esi+30h]
mov     [esi+4], eax
mov     ecx, [edi+4]
test    ecx, ecx
jz      short loc_10035e88
push    ecx
mov     ecx, [edi]
push    ecx
push    eax
call    memcpy
add     esp, 0ch
cmp     [ebp+arg_8], 0
mov     edx, [edi+4]
mov     eax, [esi+4]
mov     byte ptr [edx+eax], 0
jz      short loc_10035ec8
cmp     ebx, 3
jl      short loc_10035ec8
mov     ecx, [edi]
movsx   ebx, byte ptr [ecx]
cmp     ebx, 27h
jz      short loc_10035eb6
cmp     ebx, 22h
jz      short loc_10035eb6
cmp     ebx, 5bh
jz      short loc_10035eb6
cmp     ebx, 60h
jnz     short loc_10035ec8
mov     edi, [esi+4]
call    sub_1000bbf0
cmp     ebx, 22h
jnz     short loc_10035ec8
or      word ptr [esi+2], 40h
mov     dword ptr [esi+2ch], 1
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     [ebp+var_8], ecx
test    ecx, ecx
jz      short loc_10035f03
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_10035efa
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10035ef4
sub     eax, ecx
and     eax, 3fffffffh
jmp     short loc_10035f05
xor     eax, eax
mov     ecx, [ebp+arg_0]
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    0
push    eax
push    ecx
lea     eax, [ebp+var_8]
call    sub_10035dd0
add     esp, 0ch
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, ecx
test    ebx, ebx
jnz     short loc_10035f4a
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
pop     ebx
retn
test    esi, esi
jz      short loc_10035f68
mov     ecx, 100h
mov     [ebx+0ch], esi
test    [esi+2], cx
jz      short loc_10035f68
mov     edx, ecx
or      [ebx+2], dx
mov     ecx, [esi+14h]
mov     [ebx+14h], ecx
test    eax, eax
jz      short loc_10035f86
mov     edx, 100h
mov     [ebx+8], eax
test    [eax+2], dx
jz      short loc_10035f86
mov     ecx, edx
or      [ebx+2], cx
mov     edx, [eax+14h]
mov     [ebx+14h], edx
call    sub_10035cf0
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     esi, ecx
cmp     eax, 45h
jnz     short loc_10035fbb
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jz      short loc_10035fbb
test    esi, esi
jz      short loc_10035fbb
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi]
push    ecx
call    sub_10036060
add     esp, 8
mov     ebx, eax
jmp     short loc_10036039
mov     edi, [ebp+arg_0]
push    1
push    eax
mov     eax, [edi]
push    eax
mov     eax, [ebp+arg_8]
call    sub_10035dd0
mov     edi, [edi]
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_10035ff2
mov     ecx, [ebp+arg_4]
push    ecx
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
test    esi, esi
jz      short loc_10036010
mov     edx, 100h
mov     [ebx+0ch], esi
test    [esi+2], dx
jz      short loc_10036010
mov     eax, edx
or      [ebx+2], ax
mov     ecx, [esi+14h]
mov     [ebx+14h], ecx
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_10036031
mov     edx, 100h
mov     [ebx+8], eax
test    [eax+2], dx
jz      short loc_10036031
mov     ecx, edx
or      [ebx+2], cx
mov     edx, [eax+14h]
mov     [ebx+14h], edx
call    sub_10035cf0
mov     esi, [ebp+arg_0]
test    ebx, ebx
jz      short loc_10036056
mov     eax, [esi]
mov     eax, [eax+54h]
cmp     [ebx+2ch], eax
jle     short loc_10036056
push    eax
push    offset aexpressiontree
push    esi
call    sub_1000bb30
add     esp, 0ch
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, eax
test    esi, esi
jnz     short loc_1003607a
mov     eax, [ebp+arg_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [ebp+arg_4]
test    ebx, ebx
jnz     short loc_1003608a
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    byte ptr [esi+2], 1
mov     [ebp+var_4], 0
jnz     short loc_100360b4
lea     eax, [ebp+var_4]
push    eax
push    esi
call    sub_100371f0
add     esp, 8
test    eax, eax
jz      short loc_100360b4
xor     eax, eax
cmp     [ebp+var_4], eax
setz    al
test    eax, eax
jnz     short loc_10036124
test    byte ptr [ebx+2], 1
mov     [ebp+var_4], 0
jnz     short loc_100360de
lea     ecx, [ebp+var_4]
push    ecx
push    ebx
call    sub_100371f0
add     esp, 8
test    eax, eax
jz      short loc_100360de
xor     eax, eax
cmp     [ebp+var_4], eax
setz    al
test    eax, eax
jnz     short loc_10036124
mov     ecx, 30h
mov     esi, edi
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1003610e
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [ebx], 45h
mov     [ebx+1eh], dx
mov     dword ptr [ebx+2ch], 1
mov     esi, [ebp+arg_4]
mov     eax, [ebp+arg_0]
mov     ecx, ebx
call    sub_10035f30
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
push    edi
call    sub_10036430
push    ebx
push    edi
call    sub_10036430
push    0
push    81h
push    edi
mov     eax, offset off_10076230
call    sub_10035dd0
add     esp, 1ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [edi]
push    1
push    97h
push    esi
call    sub_10035dd0
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_10036182
mov     eax, [ebp+arg_0]
push    eax
push    esi
call    sub_10037020
add     esp, 8
xor     eax, eax
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     ecx, [ebp+arg_0]
mov     [ebx+10h], ecx
call    sub_10035cf0
mov     edx, [edi]
mov     eax, [edx+54h]
cmp     [ebx+2ch], eax
jle     short loc_100361a6
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
pop     esi
mov     eax, ebx
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi]
push    edi
mov     edi, [ebp+arg_4]
mov     [ebp+var_8], eax
test    edi, edi
jz      loc_10036427
mov     ebx, [edi+4]
cmp     byte ptr [ebx+1], 0
lea     edx, [ebx+1]
mov     [ebp+src], ebx
jnz     short loc_100361f0
inc     dword ptr [esi+1cch]
mov     eax, [esi+1cch]
mov     [edi+1ch], ax
jmp     loc_10036405
mov     cl, [ebx]
mov     eax, ebx
test    cl, cl
jz      short loc_100361fe
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100361f8
sub     eax, ebx
and     eax, 3fffffffh
mov     [ebp+size], eax
cmp     cl, 3fh
jnz     loc_10036297
dec     eax
push    eax
lea     ecx, [ebp+var_10]
push    ecx
push    edx
mov     al, 1
call    sub_1000c2a0
mov     edi, [ebp+var_10]
mov     edx, [ebp+arg_4]
add     esp, 0ch
neg     eax
sbb     eax, eax
inc     eax
movzx   ecx, di
mov     [edx+1ch], di
jz      short loc_10036258
cmp     [ebp+var_c], 0
jl      short loc_10036258
jg      short loc_10036243
cmp     edi, 1
jb      short loc_10036258
mov     eax, [ebp+var_8]
mov     eax, [eax+6ch]
cdq
mov     [ebp+var_20], eax
cmp     [ebp+var_c], edx
jl      short loc_1003626f
jg      short loc_10036258
cmp     edi, eax
jbe     short loc_1003626f
mov     ecx, [ebp+var_8]
mov     edx, [ecx+6ch]
push    edx
push    offset avariablenumber
push    esi
call    sub_1000bb30
add     esp, 0ch
xor     ecx, ecx
mov     eax, [esi+1cch]
cdq
mov     [ebp+var_20], eax
cmp     [ebp+var_c], edx
jl      loc_1003634b
jg      short loc_1003628c
cmp     edi, eax
jbe     loc_1003634b
mov     [esi+1cch], edi
jmp     loc_1003634b
cmp     dword ptr [esi+1d0h], 0
mov     [ebp+var_c], 0
jle     loc_10036337
mov     edi, [esi+1ech]
xor     edx, edx
cmp     dword ptr [edi+edx*4], 0
jz      short loc_10036305
mov     esi, [edi+edx*4]
inc     eax
mov     ecx, ebx
cmp     eax, 4
jb      short loc_100362d8
mov     edx, [esi]
cmp     edx, [ecx]
jnz     short loc_100362fc
sub     eax, 4
add     ecx, 4
add     esi, 4
cmp     eax, 4
jnb     short loc_100362c4
test    eax, eax
jz      short loc_1003631c
mov     dl, [ecx]
cmp     dl, [esi]
jnz     short loc_100362fc
cmp     eax, 1
jbe     short loc_1003631c
mov     dl, [ecx+1]
cmp     dl, [esi+1]
jnz     short loc_100362fc
cmp     eax, 2
jbe     short loc_1003631c
mov     al, [ecx+2]
cmp     al, [esi+2]
jz      short loc_1003631c
mov     esi, [ebp+arg_0]
mov     ebx, [ebp+src]
mov     eax, [ebp+size]
mov     ecx, [ebp+var_c]
inc     ecx
movsx   edx, cx
mov     [ebp+var_c], ecx
cmp     edx, [esi+1d0h]
jl      short loc_100362b3
mov     edi, [ebp+arg_4]
jmp     short loc_10036337
mov     ecx, [ebp+var_c]
mov     edx, [ebp+arg_4]
mov     esi, [ebp+arg_0]
mov     ebx, [ebp+src]
inc     ecx
movzx   ecx, cx
mov     [edx+1ch], cx
test    cx, cx
jnz     short loc_1003634e
mov     edi, edx
mov     eax, [esi+1cch]
inc     eax
mov     [esi+1cch], eax
mov     [edi+1ch], ax
movzx   ecx, ax
test    cx, cx
jle     loc_10036405
movsx   edi, cx
cmp     edi, [esi+1d0h]
jle     short loc_100363ac
mov     ebx, [esi+1ech]
lea     eax, ds:0[edi*4]
push    eax
mov     eax, [ebp+var_8]
call    sub_10009ac0
add     esp, 4
test    eax, eax
jz      loc_10036427
mov     ecx, [esi+1d0h]
mov     edx, edi
sub     edx, ecx
add     edx, edx
add     edx, edx
push    edx
mov     [esi+1ech], eax
lea     eax, [eax+ecx*4]
push    0
push    eax
call    memset
mov     ebx, [ebp+src]
add     esp, 0ch
mov     [esi+1d0h], edi
cmp     byte ptr [ebx], 3fh
jnz     short loc_100363be
mov     ecx, [esi+1ech]
cmp     dword ptr [ecx+edi*4-4], 0
jnz     short loc_10036405
mov     edx, [esi+1ech]
mov     esi, [ebp+var_8]
mov     eax, [edx+edi*4-4]
mov     ecx, esi
call    sub_10009810
mov     ecx, [ebp+size]
inc     ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_100363f6
mov     ebx, [ebp+size]
mov     eax, [ebp+src]
push    ebx
push    eax
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+ebx], 0
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+1ech]
mov     [edx+edi*4-4], esi
mov     esi, ecx
cmp     dword ptr [esi+44h], 0
jnz     short loc_10036427
mov     eax, [esi+1cch]
mov     ecx, [ebp+var_8]
cmp     eax, [ecx+6ch]
jle     short loc_10036427
push    offset atoomanysqlvari
push    esi
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
test    esi, esi
jz      loc_100364e7
push    ebx
mov     eax, 4000h
push    edi
mov     edi, [ebp+arg_0]
test    [esi+2], ax
jnz     short loc_100364c5
mov     ecx, [esi+8]
push    ecx
push    edi
call    sub_10036430
mov     edx, [esi+0ch]
push    edx
push    edi
call    sub_10036430
mov     ax, [esi+2]
mov     ecx, 2000h
and     ax, cx
mov     edx, ecx
add     esp, 10h
cmp     ax, dx
jz      short loc_10036489
test    byte ptr [esi+22h], 1
jz      short loc_10036489
mov     eax, [esi+4]
mov     ecx, edi
call    sub_10009810
mov     ax, [esi+2]
mov     ecx, 800h
and     ax, cx
mov     edx, ecx
cmp     ax, dx
jnz     short loc_100364b8
mov     ebx, [esi+10h]
test    ebx, ebx
jz      short loc_100364c5
push    ebx
push    edi
call    sub_10054390
add     esp, 8
mov     eax, ebx
mov     ecx, edi
call    sub_10009810
jmp     short loc_100364c5
mov     eax, [esi+10h]
push    eax
push    edi
call    sub_10037020
add     esp, 8
mov     cx, [esi+2]
mov     edx, 8000h
and     cx, dx
mov     eax, edx
cmp     cx, ax
jz      short loc_100364e5
mov     ecx, edi
pop     edi
pop     ebx
mov     eax, esi
pop     esi
pop     ebp
jmp     sub_10009810
pop     edi
pop     ebx
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
jnz     short loc_10036503
mov     eax, 30h
jmp     short loc_10036525
cmp     dword ptr [ecx+8], 0
jnz     short loc_10036520
cmp     dword ptr [ecx+0ch], 0
jnz     short loc_10036520
cmp     dword ptr [ecx+14h], 0
jnz     short loc_10036520
cmp     dword ptr [ecx+10h], 0
mov     eax, 4008h
jz      short loc_10036525
mov     eax, 2018h
and     eax, 0fffh
push    esi
mov     edx, eax
mov     ax, [ecx+2]
mov     esi, 400h
and     ax, si
cmp     ax, si
pop     esi
jz      short loc_10036561
mov     ecx, [ecx+4]
test    ecx, ecx
jz      short loc_10036561
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_10036556
lea     ecx, [ecx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10036550
sub     eax, ecx
and     eax, 3fffffffh
lea     edx, [edx+eax+1]
lea     eax, [edx+7]
and     eax, 0fffffff8h
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
xor     eax, eax
test    esi, esi
jz      short loc_100365b5
push    ebx
mov     ebx, [ebp+arg_4]
push    edi
push    ebx
mov     ecx, esi
call    sub_100364f0
add     esp, 4
mov     edi, eax
test    bl, 1
jz      short loc_100365b3
mov     eax, [esi+0ch]
push    ebx
push    eax
call    sub_10036570
mov     ecx, [esi+8]
push    ebx
push    ecx
mov     [ebp+arg_0], eax
call    sub_10036570
add     eax, edi
add     esp, 10h
add     eax, [ebp+arg_0]
pop     edi
pop     ebx
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     edi, [ebp+src]
xor     eax, eax
test    edi, edi
jz      loc_1003682e
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_c]
mov     ebx, eax
and     ebx, 1
mov     [esp+28h+var_c], ebx
mov     [esp+28h+var_8], 0
test    ecx, ecx
jz      short loc_10036600
mov     esi, [ecx]
mov     [esp+28h+var_8], 8000h
jmp     short loc_10036616
push    eax
push    edi
call    sub_10036570
mov     esi, [ebp+arg_0]
add     esp, 8
mov     ecx, eax
call    sub_10009a40
mov     esi, eax
mov     [esp+28h+var_18], esi
test    esi, esi
jz      loc_1003682c
test    ebx, ebx
jnz     short loc_10036630
mov     [esp+28h+var_14], 30h
jmp     short loc_10036658
cmp     dword ptr [edi+8], 0
jnz     short loc_10036650
cmp     dword ptr [edi+0ch], 0
jnz     short loc_10036650
cmp     dword ptr [edi+14h], 0
jnz     short loc_10036650
cmp     dword ptr [edi+10h], 0
mov     [esp+28h+var_14], 4008h
jz      short loc_10036658
mov     [esp+28h+var_14], 2018h
movzx   edx, word ptr [edi+2]
mov     eax, [esp+28h+var_14]
and     eax, 0fffh
mov     [esp+28h+size], eax
test    edx, 400h
jnz     short loc_1003668a
mov     ecx, [edi+4]
test    ecx, ecx
jz      short loc_1003668a
call    sub_1000ba20
lea     ebx, [eax+1]
mov     eax, [esp+28h+size]
mov     [esp+28h+var_10], ebx
jmp     short loc_10036696
mov     [esp+28h+var_10], 0
mov     ebx, [esp+28h+var_10]
cmp     [esp+28h+var_c], 0
jz      short loc_100366a7
push    eax
push    edi
push    esi
call    memcpy
jmp     short loc_100366ef
test    edx, 4000h
jz      short loc_100366b6
mov     ebx, 8
jmp     short loc_100366cc
and     edx, 2000h
sub     edx, 2000h
neg     edx
sbb     edx, edx
and     edx, 18h
lea     ebx, [edx+18h]
push    ebx
push    edi
push    esi
call    memcpy
add     esp, 0ch
mov     eax, 30h
sub     eax, ebx
add     ebx, [esp+28h+var_18]
push    eax
push    0
push    ebx
call    memset
mov     ebx, [esp+34h+var_10]
mov     ax, [esi+2]
mov     edx, [esp+34h+var_14]
and     edx, 6000h
mov     ecx, 1fffh
and     ax, cx
or      dx, ax
or      dx, word ptr [esp+34h+var_8]
add     esp, 0ch
mov     [esi+2], dx
test    ebx, ebx
jz      short loc_10036731
mov     eax, [esp+28h+size]
add     eax, [esp+28h+var_18]
push    ebx
mov     [esi+4], eax
mov     ecx, [edi+4]
push    ecx
push    eax
call    memcpy
add     esp, 0ch
movzx   eax, word ptr [edi+2]
mov     dx, [esi+2]
or      dx, ax
mov     ecx, 4000h
and     dx, cx
xor     ecx, ecx
cmp     cx, dx
jnz     short loc_10036784
test    eax, 800h
jz      short loc_1003676c
mov     edx, [esp+28h+var_c]
mov     eax, [edi+10h]
mov     ebx, [ebp+arg_0]
push    edx
push    eax
push    ebx
call    sub_10036d20
add     esp, 0ch
mov     [esi+10h], eax
jmp     short loc_10036787
mov     ecx, [esp+28h+var_c]
mov     edx, [edi+10h]
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    eax
call    sub_10036840
add     esp, 0ch
mov     [esi+10h], eax
mov     ebx, [ebp+arg_0]
mov     ecx, 6000h
test    [esi+2], cx
jz      short loc_100367f8
mov     edx, [ebp+arg_8]
push    edx
mov     ecx, edi
call    sub_100364f0
add     [esp+2ch+var_18], eax
mov     ax, [esi+2]
mov     ecx, 2000h
and     ax, cx
mov     edx, ecx
add     esp, 4
cmp     ax, dx
jnz     short loc_100367e2
mov     ecx, [edi+8]
lea     eax, [esp+28h+var_18]
push    eax
push    1
push    ecx
push    ebx
call    sub_100365c0
lea     edx, [esp+38h+var_18]
push    edx
mov     [esi+8], eax
mov     eax, [edi+0ch]
push    1
push    eax
push    ebx
call    sub_100365c0
add     esp, 20h
mov     [esi+0ch], eax
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_1003682c
mov     ecx, [esp+28h+var_18]
mov     [eax], ecx
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, 4000h
mov     byte ptr [esi+22h], 0
test    [edi+2], dx
jnz     short loc_1003682c
mov     eax, [edi+8]
push    0
push    0
push    eax
push    ebx
call    sub_100365c0
push    0
mov     [esi+8], eax
mov     edi, [edi+0ch]
push    0
push    edi
push    ebx
call    sub_100365c0
add     esp, 20h
mov     [esi+0ch], eax
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
test    edi, edi
jz      short loc_100368a8
mov     esi, [ebp+arg_0]
mov     ecx, 0ch
call    sub_10009a40
mov     ebx, eax
mov     [esp+20h+var_4], ebx
test    ebx, ebx
jz      short loc_100368a8
test    byte ptr [ebp+arg_8], 1
mov     dword ptr [ebx+4], 0
mov     eax, [edi]
mov     [ebx], eax
jnz     short loc_1003688c
mov     ecx, [edi]
mov     eax, 1
cmp     ecx, eax
jle     short loc_1003688c
add     eax, eax
cmp     eax, ecx
jl      short loc_10036886
lea     ecx, [eax+eax*4]
add     ecx, ecx
add     ecx, ecx
call    sub_10009a40
mov     [ebx+8], eax
test    eax, eax
jnz     short loc_100368b1
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_4]
cmp     dword ptr [ecx], 0
mov     edi, [edi+8]
mov     [esp+20h+var_10], 0
jle     loc_100369c8
lea     esi, [eax+8]
sub     eax, edi
add     eax, 0fffffff8h
mov     [esp+20h+var_14], esi
mov     [esp+20h+var_c], eax
mov     edx, [ebp+arg_8]
mov     eax, [edi]
push    0
push    edx
push    eax
mov     eax, [ebp+arg_0]
push    eax
call    sub_100365c0
mov     ecx, [esp+30h+var_c]
mov     [ecx+edi+8], eax
mov     ebx, [edi+4]
add     esp, 10h
test    ebx, ebx
jnz     short loc_10036900
xor     eax, eax
jmp     short loc_1003693e
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_1003690d
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10036907
mov     esi, [ebp+arg_0]
sub     eax, ebx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [esp+20h+size], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10036938
mov     edx, [esp+20h+size]
push    edx
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     eax, esi
mov     esi, [esp+20h+var_14]
mov     [esi-4], eax
mov     ebx, [edi+8]
test    ebx, ebx
jnz     short loc_1003694c
xor     eax, eax
jmp     short loc_1003698a
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_10036959
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10036953
mov     esi, [ebp+arg_0]
sub     eax, ebx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [esp+20h+size], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10036984
mov     eax, [esp+20h+size]
push    eax
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     eax, esi
mov     esi, [esp+20h+var_14]
mov     [esi], eax
mov     cl, [edi+0ch]
mov     [esi+4], cl
mov     ecx, [ebp+arg_4]
mov     byte ptr [esi+5], 0
mov     dx, [edi+0eh]
mov     [esi+6], dx
mov     ax, [edi+10h]
mov     [esi+8], ax
mov     eax, [esp+20h+var_10]
inc     eax
add     esi, 14h
add     edi, 14h
mov     [esp+20h+var_10], eax
mov     [esp+20h+var_14], esi
cmp     eax, [ecx]
jl      loc_100368d8
mov     ebx, [esp+20h+var_4]
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
test    edi, edi
jnz     short loc_100369fc
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   eax, word ptr [edi]
test    ax, ax
jle     short loc_10036a15
movsx   ecx, ax
dec     ecx
mov     eax, ecx
shl     eax, 4
sub     eax, ecx
add     eax, eax
add     eax, eax
jmp     short loc_10036a17
xor     eax, eax
mov     esi, [ebp+arg_0]
lea     ecx, [eax+40h]
call    sub_10009a40
mov     [esp+20h+var_4], eax
test    eax, eax
jz      short loc_100369f3
movzx   ecx, word ptr [edi]
mov     [eax+2], cx
mov     [eax], cx
xor     ecx, ecx
mov     [esp+20h+var_10], 0
cmp     cx, [edi]
jge     loc_10036c33
mov     ebx, eax
add     edi, 4
sub     ebx, [ebp+arg_4]
nop
mov     ecx, [edi]
mov     [esp+20h+src], ecx
test    ecx, ecx
jnz     short loc_10036a5e
xor     esi, esi
jmp     short loc_10036a9a
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_10036a6b
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10036a65
mov     esi, [ebp+arg_0]
sub     eax, ecx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [esp+20h+size], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10036a9a
mov     edx, [esp+20h+size]
mov     eax, [esp+20h+src]
push    edx
push    eax
push    esi
call    memcpy
add     esp, 0ch
mov     [ebx+edi], esi
mov     ecx, [edi+4]
mov     [esp+20h+size], ecx
test    ecx, ecx
jnz     short loc_10036aac
xor     esi, esi
jmp     short loc_10036ae8
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_10036ab9
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10036ab3
mov     esi, [ebp+arg_0]
sub     eax, ecx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [esp+20h+src], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10036ae8
mov     ecx, [esp+20h+src]
mov     edx, [esp+20h+size]
push    ecx
push    edx
push    esi
call    memcpy
add     esp, 0ch
mov     [ebx+edi+4], esi
mov     ecx, [edi+8]
mov     [esp+20h+size], ecx
test    ecx, ecx
jnz     short loc_10036afb
xor     esi, esi
jmp     short loc_10036b37
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_10036b08
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10036b02
mov     esi, [ebp+arg_0]
sub     eax, ecx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [esp+20h+src], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10036b37
mov     eax, [esp+20h+src]
mov     ecx, [esp+20h+size]
push    eax
push    ecx
push    esi
call    memcpy
add     esp, 0ch
mov     [ebx+edi+8], esi
mov     dl, [edi+1ch]
mov     [ebx+edi+1ch], dl
mov     eax, [edi+20h]
mov     [ebx+edi+20h], eax
mov     ecx, [edi+14h]
mov     [ebx+edi+14h], ecx
mov     edx, [edi+18h]
mov     [ebx+edi+18h], edx
mov     al, [edi+1eh]
mov     [ebx+edi+1eh], al
mov     ecx, [edi+34h]
mov     [esp+20h+size], ecx
test    ecx, ecx
jnz     short loc_10036b6d
xor     esi, esi
jmp     short loc_10036ba9
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_10036b7a
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10036b74
mov     esi, [ebp+arg_0]
sub     eax, ecx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [esp+20h+src], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10036ba9
mov     ecx, [esp+20h+src]
mov     edx, [esp+20h+size]
push    ecx
push    edx
push    esi
call    memcpy
add     esp, 0ch
mov     [ebx+edi+34h], esi
mov     al, [edi+1dh]
mov     [ebx+edi+1dh], al
mov     ecx, [edi+38h]
mov     [ebx+edi+38h], ecx
mov     eax, [edi+0ch]
mov     [ebx+edi+0ch], eax
test    eax, eax
jz      short loc_10036bca
inc     word ptr [eax+20h]
mov     edx, [ebp+arg_8]
mov     eax, [edi+10h]
mov     esi, [ebp+arg_0]
push    edx
push    eax
push    esi
call    sub_10036d20
mov     ecx, [ebp+arg_8]
add     esp, 0ch
push    0
mov     [ebx+edi+10h], eax
mov     eax, [edi+24h]
push    ecx
push    eax
push    esi
call    sub_100365c0
mov     [ebx+edi+24h], eax
mov     edx, [edi+28h]
push    edx
push    esi
call    sub_10036c40
mov     edx, [ebp+arg_4]
mov     [ebx+edi+28h], eax
mov     eax, [edi+2ch]
mov     [ebx+edi+2ch], eax
mov     ecx, [edi+30h]
mov     eax, [esp+38h+var_10]
mov     [ebx+edi+30h], ecx
movsx   ecx, word ptr [edx]
inc     eax
add     esp, 18h
add     edi, 3ch
mov     [esp+20h+var_10], eax
cmp     eax, ecx
jl      loc_10036a50
mov     eax, [esp+20h+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
test    ebx, ebx
jz      short loc_10036c89
mov     esi, [ebp+arg_0]
mov     ecx, 8
call    sub_10009a40
mov     edi, eax
mov     [ebp+var_8], edi
test    edi, edi
jz      short loc_10036c89
mov     eax, [ebx+4]
mov     [edi+4], eax
mov     ecx, [ebx+4]
add     ecx, ecx
add     ecx, ecx
add     ecx, ecx
call    sub_10009a40
mov     [edi], eax
test    eax, eax
jnz     short loc_10036c92
mov     eax, edi
mov     ecx, esi
call    sub_10009810
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     edx, edx
mov     [ebp+var_4], edx
cmp     [ebx+4], edx
jle     short loc_10036d12
jmp     short loc_10036ca2
mov     ebx, eax
mov     ebx, [ebx]
mov     eax, [edi]
lea     ecx, ds:0[edx*8]
mov     edi, [ebx+ecx]
add     ebx, ecx
add     eax, ecx
mov     [ebp+var_10], eax
test    edi, edi
jnz     short loc_10036cbf
xor     esi, esi
jmp     short loc_10036cfb
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_10036ccc
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10036cc6
mov     esi, [ebp+arg_0]
sub     eax, edi
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [ebp+size], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10036cf5
mov     ecx, [ebp+size]
push    ecx
push    edi
push    esi
call    memcpy
add     esp, 0ch
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_10]
mov     edi, [ebp+var_8]
mov     [eax], esi
mov     ecx, [ebx+4]
mov     [eax+4], ecx
mov     eax, [ebp+arg_4]
inc     edx
mov     [ebp+var_4], edx
cmp     edx, [eax+4]
jl      short loc_10036ca0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
test    ebx, ebx
jnz     short loc_10036d3a
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+arg_0]
mov     ecx, 4ch
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10036d31
mov     eax, [ebp+arg_8]
mov     ecx, [ebx]
push    eax
push    ecx
push    esi
call    sub_10036840
mov     edx, [ebp+arg_8]
add     esp, 0ch
mov     [edi], eax
mov     eax, [ebx+24h]
push    edx
push    eax
push    esi
call    sub_100369e0
mov     ecx, [ebp+arg_8]
add     esp, 0ch
push    0
mov     [edi+24h], eax
mov     eax, [ebx+28h]
push    ecx
push    eax
push    esi
call    sub_100365c0
mov     edx, [ebp+arg_8]
mov     [edi+28h], eax
mov     eax, [ebx+2ch]
push    edx
push    eax
push    esi
call    sub_10036840
mov     ecx, [ebp+arg_8]
add     esp, 1ch
push    0
mov     [edi+2ch], eax
mov     eax, [ebx+30h]
push    ecx
push    eax
push    esi
call    sub_100365c0
mov     edx, [ebp+arg_8]
mov     [edi+30h], eax
mov     eax, [ebx+34h]
push    edx
push    eax
push    esi
call    sub_10036840
mov     edx, [ebp+arg_8]
mov     [edi+34h], eax
mov     cl, [ebx+4]
add     esp, 1ch
mov     [edi+4], cl
mov     eax, [ebx+38h]
push    edx
push    eax
push    esi
call    sub_10036d20
add     esp, 0ch
mov     [edi+38h], eax
test    eax, eax
jz      short loc_10036de2
mov     [eax+3ch], edi
mov     ecx, [ebp+arg_8]
push    0
mov     dword ptr [edi+3ch], 0
mov     eax, [ebx+44h]
push    ecx
push    eax
push    esi
call    sub_100365c0
mov     edx, [ebp+arg_8]
push    0
mov     [edi+44h], eax
mov     eax, [ebx+48h]
push    edx
push    eax
push    esi
call    sub_100365c0
mov     [edi+48h], eax
xor     eax, eax
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     cx, [ebx+6]
add     esp, 20h
mov     edx, 0fff7h
mov     [edi+40h], eax
and     cx, dx
or      eax, 0ffffffffh
mov     [edi+10h], eax
mov     [edi+14h], eax
mov     [edi+18h], eax
mov     [edi+6], cx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [eax]
push    edi
mov     edi, ecx
test    edi, edi
jnz     short loc_10036e8b
lea     ecx, [edi+0ch]
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10036eaf
xor     eax, eax
mov     [edi], eax
mov     [edi+4], eax
mov     [edi+8], eax
test    edi, edi
jz      short loc_10036eaf
lea     ecx, [eax+14h]
call    sub_10009a40
mov     [edi+8], eax
test    eax, eax
jz      short loc_10036eaf
jmp     short loc_10036ecd
mov     eax, [edi]
lea     ecx, [eax-1]
test    eax, ecx
jnz     short loc_10036ecd
mov     ebx, [edi+8]
lea     edx, [eax+eax*4]
add     edx, edx
add     edx, edx
add     edx, edx
push    edx
mov     eax, esi
call    sub_10009ac0
add     esp, 4
test    eax, eax
jnz     short loc_10036eca
mov     eax, [ebp+arg_0]
push    eax
push    esi
call    sub_10036430
push    edi
push    esi
call    sub_10037020
add     esp, 10h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     [edi+8], eax
mov     ecx, [edi]
mov     eax, [edi+8]
lea     edx, [ecx+ecx*4]
lea     eax, [eax+edx*4]
inc     ecx
mov     [edi], ecx
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     ecx, [ebp+arg_0]
mov     [eax], ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
test    ecx, ecx
jz      short loc_10036f60
mov     eax, [ecx]
mov     ecx, [ecx+8]
mov     ebx, [edx]
mov     edi, [edx+4]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4-14h]
mov     ecx, [ebp+arg_0]
mov     esi, [ecx]
mov     [ebp+var_4], eax
test    ebx, ebx
jnz     short loc_10036f2c
xor     esi, esi
jmp     short loc_10036f49
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10036f49
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
cmp     [ebp+arg_4], 0
mov     edx, [ebp+var_4]
mov     [edx+4], esi
jz      short loc_10036f60
test    esi, esi
jz      short loc_10036f60
mov     edi, esi
call    sub_1000bbf0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, edx
mov     edx, [eax]
mov     [ebp+var_4], edx
test    ecx, ecx
jz      short loc_10036fdd
mov     eax, [ecx]
mov     ecx, [ecx+8]
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*4-14h]
mov     eax, [esi+8]
mov     ecx, edx
mov     [ebp+var_8], esi
call    sub_10009810
mov     ebx, [edi+4]
mov     edi, [edi+8]
sub     edi, ebx
test    ebx, ebx
jnz     short loc_10036fb5
xor     eax, eax
mov     [esi+8], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+var_4]
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10036fd5
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     eax, esi
mov     esi, [ebp+var_8]
mov     [esi+8], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
test    eax, eax
jz      short loc_10037013
mov     edx, [ecx]
mov     eax, [eax]
cmp     eax, [edx+50h]
jle     short loc_10037013
mov     edx, [ebp+arg_0]
push    edx
push    offset atoomanycolumns
push    ecx
call    sub_1000bb30
add     esp, 0ch
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_10037085
push    ebx
push    esi
mov     esi, [eax+8]
xor     ebx, ebx
push    edi
mov     edi, [ebp+arg_0]
cmp     [eax], ebx
jle     short loc_1003706d
lea     esp, [esp+0]
mov     eax, [esi]
push    eax
push    edi
call    sub_10036430
mov     eax, [esi+4]
add     esp, 8
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+8]
mov     ecx, edi
call    sub_10009810
mov     ecx, [ebp+arg_4]
inc     ebx
add     esi, 14h
cmp     ebx, [ecx]
jl      short loc_10037040
mov     eax, ecx
mov     eax, [eax+8]
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+arg_4]
mov     ecx, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
jmp     sub_10009810
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     ecx, [edx+10h]
mov     eax, [ebp+arg_4]
cmp     ecx, 3
jnz     short loc_100370b5
test    byte ptr [eax+2], 1
jz      short loc_100370b5
mov     dword ptr [edx+10h], 0
mov     eax, 2
pop     ebp
retn
movzx   eax, byte ptr [eax]
add     eax, 0ffffffe6h
cmp     eax, 80h
ja      short def_100370c9
movzx   eax, ds:byte_100370e8[eax]
jmp     ds:jpt_100370c9[eax*4]
cmp     ecx, 2
jnz     short loc_100370a7
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+10h], 0
mov     eax, 2
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    eax
lea     ecx, [ebp+var_14]
push    ecx
mov     [ebp+var_4], 1
mov     [ebp+var_14], offset sub_10037090
mov     [ebp+var_10], offset sub_10037170
call    sub_10033e00
mov     eax, [ebp+var_4]
add     esp, 8
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    eax
lea     ecx, [ebp+var_14]
push    ecx
mov     [ebp+var_4], 3
mov     [ebp+var_14], offset sub_10037090
mov     [ebp+var_10], offset sub_10037170
call    sub_10033e00
mov     eax, [ebp+var_4]
add     esp, 8
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     ecx, 400h
xor     esi, esi
test    [eax+2], cx
jz      short loc_10037214
mov     edx, [eax+4]
mov     eax, [ebp+arg_4]
mov     [eax], edx
mov     eax, 1
pop     esi
pop     ebp
retn
movzx   ecx, byte ptr [eax]
sub     ecx, 9ch
jz      short loc_10037237
dec     ecx
jnz     short loc_1003725a
mov     ecx, [ebp+arg_4]
mov     edx, [eax+8]
push    ecx
push    edx
call    sub_100371f0
add     esp, 8
mov     esi, eax
pop     esi
pop     ebp
retn
mov     edx, [eax+8]
lea     ecx, [ebp+arg_0]
push    ecx
push    edx
call    sub_100371f0
add     esp, 8
test    eax, eax
jz      short loc_1003725a
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
neg     eax
mov     [ecx], eax
mov     esi, 1
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10037278
call    sub_10025810
test    eax, eax
jnz     short loc_100372a0
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+arg_0]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     [eax+4], edx
mov     edx, [ebp+arg_4]
mov     [eax+3], cl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 49h
pop     edi
pop     esi
pop     ebp
retn
cmp     dl, 62h
jnz     short loc_100372c0
mov     eax, 1
retn
jmp     short loc_100372c0
mov     al, [ecx]
cmp     al, 9dh
jz      short loc_100372ca
cmp     al, 9ch
jnz     short loc_100372cf
mov     ecx, [ecx+8]
jmp     short loc_100372c0
mov     al, [ecx]
cmp     al, 84h
jnz     short loc_100372d8
mov     al, [ecx+23h]
movzx   eax, al
add     eax, 0ffffffa2h
cmp     eax, 3ah
ja      short def_100372ea
movzx   eax, ds:byte_1003732c[eax]
jmp     ds:jpt_100372ea[eax*4]
cmp     dl, 65h
jmp     short loc_10037309
xor     eax, eax
cmp     dl, 61h
setz    al
retn
cmp     word ptr [ecx+1ch], 0
jge     short def_100372ea
cmp     dl, 64h
jz      short loc_100372b5
cmp     dl, 63h
jz      short loc_100372b5
xor     eax, eax
retn
mov     edx, offset arowid
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_10037386
mov     eax, 1
retn
mov     edx, offset arowid_0
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jz      short loc_10037380
mov     edx, offset aoid
mov     ecx, esi
call    sub_1000bca0
neg     eax
sbb     eax, eax
inc     eax
retn
test    eax, eax
jnz     short loc_100373b7
xor     eax, eax
retn
cmp     dword ptr [eax+38h], 0
jnz     short loc_100373b4
test    byte ptr [eax+6], 5
jnz     short loc_100373b4
cmp     dword ptr [eax+44h], 0
jnz     short loc_100373b4
cmp     dword ptr [eax+28h], 0
jnz     short loc_100373b4
mov     ecx, [eax+24h]
cmp     word ptr [ecx], 1
jnz     short loc_100373b4
cmp     dword ptr [ecx+14h], 0
jnz     short loc_100373b4
mov     ecx, [ecx+10h]
test    ecx, ecx
jz      short loc_100373b4
test    byte ptr [ecx+22h], 10h
jnz     short loc_100373b4
mov     eax, [eax]
cmp     dword ptr [eax], 1
jnz     short loc_100373b4
mov     eax, [eax+8]
mov     ecx, [eax]
xor     eax, eax
cmp     byte ptr [ecx], 98h
setz    al
retn
push    ebx
push    esi
mov     esi, eax
push    edi
push    esi
call    sub_10056c90
mov     ebx, [esi+54h]
mov     edi, eax
lea     eax, [ebx+1]
mov     [esi+54h], eax
mov     esi, [edi+1ch]
add     esp, 4
cmp     [edi+20h], esi
jg      short loc_10037433
call    sub_10025810
test    eax, eax
jz      short loc_10037433
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
xor     ecx, ecx
mov     [eax+4], ebx
pop     edi
mov     [eax+3], cl
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1ah
mov     eax, esi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 38h
mov     eax, [ebx+48h]
mov     [ebp+var_1c], eax
inc     eax
push    esi
mov     [ebx+48h], eax
xor     eax, eax
xor     esi, esi
cmp     [ebp+arg_4], esi
push    edi
setz    al
push    ebx
mov     [ebp+var_8], esi
mov     [ebp+var_30], eax
call    sub_10056c90
mov     edx, [ebp+arg_0]
mov     cx, [edx+2]
mov     edi, eax
mov     eax, 800h
and     cx, ax
add     esp, 4
mov     [ebp+var_14], edi
cmp     cx, ax
jnz     short loc_100374a7
mov     esi, [edx+10h]
cmp     dword ptr [ebx+44h], 0
jnz     loc_10037714
mov     eax, esi
call    sub_100373b0
test    eax, eax
jz      loc_10037714
mov     ecx, [esi+24h]
mov     eax, [esi]
mov     edi, [ecx+10h]
mov     ecx, [eax+8]
mov     eax, [ecx]
mov     edx, [ebx]
mov     [ebp+var_20], eax
movsx   eax, word ptr [eax+1ch]
mov     [ebp+var_18], eax
mov     eax, [edi+44h]
mov     esi, 0fff0bdc0h
mov     [ebp+var_28], edx
mov     [ebp+var_24], edi
mov     [ebp+var_c], esi
test    eax, eax
jz      short loc_1003751a
mov     ecx, [edx+14h]
mov     [ebp+var_c], 0
test    ecx, ecx
jle     short loc_10037517
mov     eax, [edx+10h]
add     eax, 0ch
mov     edx, [edi+44h]
cmp     [eax], edx
jz      short loc_10037517
mov     edx, [ebp+var_c]
inc     edx
add     eax, 10h
mov     [ebp+var_c], edx
cmp     edx, ecx
jl      short loc_10037502
mov     esi, [ebp+var_c]
push    esi
mov     eax, ebx
call    sub_10043c40
mov     ecx, [edi]
mov     edx, [edi+14h]
add     esp, 4
push    ecx
push    0
push    edx
push    esi
mov     eax, ebx
call    sub_1003ef00
add     esp, 10h
cmp     [ebp+var_18], 0
jge     short loc_10037592
mov     eax, ebx
call    sub_10037400
push    27h
mov     [ebp+arg_4], eax
mov     eax, [ebp+var_1c]
push    edi
push    esi
push    eax
mov     eax, ebx
call    sub_1004b860
mov     ecx, [ebp+arg_4]
add     esp, 10h
mov     eax, 1
test    ecx, ecx
js      loc_100377cd
mov     esi, [ebp+var_14]
mov     edx, [esi+1ch]
cmp     edx, ecx
jbe     loc_100377cd
mov     esi, [esi+4]
lea     ecx, [ecx+ecx*4]
mov     [esi+ecx*4+8], edx
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+var_1c]
mov     [ecx+18h], edx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_0]
mov     esi, [ebp+var_20]
mov     eax, [edx+8]
mov     edi, ebx
call    sub_10035a60
mov     esi, [ebp+arg_0]
mov     [ebp+var_2c], eax
call    sub_10035a00
mov     esi, [ebp+var_18]
mov     edx, [ebp+var_24]
mov     edi, [edx+0ch]
lea     ecx, [esi+esi*2]
add     ecx, ecx
add     ecx, ecx
add     ecx, ecx
mov     [ebp+var_34], ecx
cmp     [ecx+edi+16h], al
jz      short loc_100375d3
mov     [ebp+var_20], 0
cmp     al, 62h
jnz     short loc_100375da
mov     [ebp+var_20], 1
mov     edi, [edx+10h]
mov     [ebp+var_10], edi
test    edi, edi
jz      loc_1003770e
jmp     short loc_100375f6
mov     edi, [ebp+var_10]
mov     esi, [ebp+var_18]
cmp     [ebp+var_8], 0
jnz     loc_100377ca
cmp     [ebp+var_20], 0
jz      loc_1003770e
mov     eax, [edi+4]
cmp     [eax], esi
jnz     loc_100376f7
mov     esi, [ebp+var_28]
mov     edx, [esi+10h]
mov     ecx, [edi+20h]
mov     eax, [edx+0ch]
mov     ecx, [ecx]
mov     dl, [eax+4dh]
mov     [ebp+var_4], dl
test    ecx, ecx
jz      short loc_10037655
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_1003763a
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10037634
sub     eax, ecx
push    ecx
add     esi, 194h
and     eax, 3fffffffh
push    esi
mov     esi, eax
call    sub_1000cf50
add     esp, 8
jmp     short loc_10037658
mov     eax, [esi+8]
test    eax, eax
jz      short loc_10037667
movzx   ecx, [ebp+var_4]
lea     ecx, [ecx+ecx*4]
lea     eax, [eax+ecx*4-14h]
cmp     eax, [ebp+var_2c]
jnz     loc_100376f7
cmp     [ebp+var_30], 0
jz      short loc_10037682
cmp     dword ptr [edi+24h], 1
jnz     short loc_100376f7
cmp     byte ptr [edi+2ch], 0
jz      short loc_100376f7
push    edi
push    ebx
call    sub_10044250
mov     esi, eax
mov     eax, ebx
call    sub_10037400
mov     edx, [ebp+var_c]
push    0fffffff0h
push    esi
mov     esi, [ebp+var_14]
mov     edi, eax
mov     eax, [ebp+var_10]
mov     ecx, [eax+28h]
push    edx
mov     edx, [ebp+var_1c]
push    ecx
push    edx
push    27h
mov     eax, esi
call    sub_100259f0
add     esp, 20h
mov     eax, edi
mov     edx, esi
mov     [ebp+var_8], 3
call    sub_10025e30
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jz      short loc_100376f4
mov     eax, [ebp+var_24]
mov     edx, [eax+0ch]
mov     eax, [ebp+var_34]
cmp     byte ptr [eax+edx+14h], 0
jnz     short loc_100376f4
mov     eax, [ebx+4ch]
inc     eax
push    eax
mov     [ebx+4ch], eax
mov     [ecx], eax
push    0
push    0ah
mov     eax, esi
call    sub_10025990
add     esp, 0ch
mov     edi, [ebp+var_10]
mov     edi, [edi+14h]
mov     [ebp+var_10], edi
test    edi, edi
jnz     loc_100375f0
cmp     [ebp+var_8], edi
jnz     loc_100377ca
mov     edx, [ebp+arg_0]
mov     edi, [ebp+var_14]
mov     eax, [ebp+arg_4]
fld     qword ptr [ebx+1b8h]
fstp    qword ptr [ebp-38h]
mov     [ebp+var_18], 0
mov     [ebp+var_8], 2
test    eax, eax
jz      short loc_1003777c
inc     dword ptr [ebx+4ch]
mov     ecx, [ebx+4ch]
mov     [eax], ecx
mov     esi, [edi+1ch]
mov     [ebp+var_18], ecx
cmp     [edi+20h], esi
jg      short loc_10037757
call    sub_10025810
mov     edx, [ebp+arg_0]
test    eax, eax
jnz     short loc_100377a0
mov     edi, [ebp+var_14]
mov     ecx, [ebp+var_18]
inc     dword ptr [edi+1ch]
lea     eax, [esi+esi*4]
mov     esi, [edi+4]
lea     eax, [esi+eax*4]
xor     esi, esi
mov     byte ptr [eax+3], 0
mov     [eax+4], esi
mov     [eax+8], ecx
mov     [eax+0ch], esi
mov     [eax+10h], esi
mov     word ptr [eax], 0ah
jmp     short loc_100377a0
fld1
fstp    qword ptr [ebx+1b8h]
mov     ecx, [edx+8]
cmp     word ptr [ecx+1ch], 0
jge     short loc_100377a0
mov     eax, 800h
test    [edx+2], ax
jnz     short loc_100377a0
mov     [ebp+var_8], 1
mov     eax, [ebp+var_18]
xor     ecx, ecx
cmp     [ebp+var_8], 1
setz    cl
push    ecx
push    eax
mov     ecx, ebx
call    sub_100377e0
fld     qword ptr [ebp-38h]
mov     eax, [ebp+var_8]
fstp    qword ptr [ebx+1b8h]
add     esp, 8
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_8]
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+var_1c]
pop     edi
mov     [ecx+18h], edx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 54h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     edi, edx
push    esi
mov     [ebp+var_30], esi
mov     [ebp+var_4c], edi
mov     [ebp+var_40], 0ffffffffh
mov     [ebp+var_48], 0
call    sub_10056c90
mov     ebx, eax
add     esp, 4
mov     [ebp+var_38], ebx
test    ebx, ebx
jnz     short loc_10037830
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
inc     dword ptr [esi+5ch]
test    byte ptr [edi+2], 20h
jnz     short loc_10037843
mov     eax, esi
call    sub_10037400
mov     [ebp+var_40], eax
cmp     byte ptr [esi+1d4h], 2
jnz     short loc_100378a1
cmp     byte ptr [edi], 48h
mov     ecx, offset alist
jz      short loc_1003785b
mov     ecx, offset ascalar
cmp     [ebp+var_40], 0
mov     eax, offset dword_100796bc
jge     short loc_1003786b
mov     eax, offset acorrelated
mov     edx, [esi+1e8h]
push    edx
push    ecx
push    eax
mov     eax, [esi]
push    offset aexecutesssubqu
push    eax
call    sub_1000ae80
mov     ecx, [esi+1e4h]
add     esp, 14h
push    0ffffffffh
push    eax
push    0
push    0
push    ecx
push    96h
mov     eax, ebx
call    sub_100259f0
add     esp, 18h
cmp     byte ptr [edi], 48h
jz      loc_1003797d
mov     eax, [esi+4ch]
mov     edx, [edi+10h]
inc     eax
xor     ecx, ecx
mov     [esi+4ch], eax
cmp     byte ptr [edi], 74h
push    eax
mov     [ebp+var_10], eax
mov     [ebp+var_30], edx
mov     byte ptr [ebp+src+1], 0
mov     [ebp+var_c], ecx
mov     [ebp+var_8], ecx
push    ecx
mov     eax, ebx
jnz     short loc_100378d7
mov     byte ptr [ebp+src], 6
push    0ah
jmp     short loc_100378dd
mov     byte ptr [ebp+src], 3
push    7
call    sub_10025990
mov     eax, [ebp+var_30]
mov     ecx, [eax+44h]
mov     edx, [esi]
add     esp, 0ch
push    ecx
push    edx
call    sub_10036430
mov     eax, [esi]
push    1
push    81h
push    eax
mov     eax, offset off_10076238
call    sub_10035dd0
mov     edi, eax
mov     eax, [esi]
add     esp, 14h
mov     [ebp+var_48], eax
test    edi, edi
jnz     short loc_1003792c
push    edi
push    eax
call    sub_10036430
mov     ecx, [ebp+var_48]
push    edi
push    ecx
call    sub_10036430
add     esp, 10h
jmp     short loc_1003794f
mov     ebx, edi
call    sub_10035cf0
mov     edx, [esi]
mov     eax, [edx+54h]
cmp     [edi+2ch], eax
jle     short loc_1003794c
push    eax
push    offset aexpressiontree
push    esi
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_38]
mov     eax, [ebp+var_30]
lea     ecx, [ebp+src]
push    ecx
push    eax
push    esi
mov     [eax+44h], edi
mov     dword ptr [eax+8], 0
call    sub_1005b870
add     esp, 0ch
test    eax, eax
jnz     loc_1003781d
mov     edx, [ebp+var_10]
mov     [ebp+var_48], edx
jmp     loc_10037cc6
mov     eax, [edi+8]
mov     [ebp+var_3c], eax
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10037999
push    eax
push    0
push    0ah
mov     eax, ebx
call    sub_10025990
add     esp, 0ch
mov     eax, [ebp+var_3c]
call    sub_100357e0
mov     ecx, [esi+48h]
mov     [edi+18h], ecx
inc     dword ptr [esi+48h]
mov     edx, [edi+18h]
mov     edi, [ebx+1ch]
mov     [ebp+var_29], al
mov     [ebp+var_44], edx
mov     [ebp+var_3c], edi
cmp     [ebx+20h], edi
jg      short loc_100379d5
mov     edi, ebx
call    sub_10025810
test    eax, eax
jz      short loc_100379d2
mov     [ebp+var_3c], 1
jmp     short loc_10037a06
mov     edi, [ebp+var_3c]
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_44]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
cmp     [ebp+arg_4], ecx
mov     byte ptr [eax+3], 0
setz    cl
mov     [eax+4], edx
mov     word ptr [eax], 2ah
mov     [ebp+var_3c], edi
mov     [eax+8], ecx
xor     ecx, ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
xor     edx, edx
cmp     [ebp+arg_0], edx
jnz     short loc_10037a1f
mov     ecx, [ebx+4]
cmp     ecx, edx
jz      short loc_10037a1f
mov     eax, [ebx+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [ecx+eax*4-11h], 8
mov     edi, [ebp+var_4c]
xor     eax, eax
mov     [ebp+var_10], eax
mov     ecx, 1
mov     [ebp+src], eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
mov     ax, [edi+2]
mov     word ptr [ebp+var_10+2], cx
mov     ecx, 800h
and     ax, cx
cmp     ax, cx
jnz     short loc_10037aaf
mov     eax, [edi+18h]
mov     cl, [ebp+var_29]
mov     [ebp+var_20], eax
mov     eax, [edi+10h]
mov     byte ptr [ebp+var_24+1], cl
mov     [ebp+var_1c], edx
mov     [ebp+var_18], edx
mov     byte ptr [ebp+var_24], 7
lea     ecx, [ebp+var_24]
mov     [eax+8], edx
mov     edx, [edi+10h]
push    ecx
push    edx
push    esi
call    sub_1005b870
add     esp, 0ch
test    eax, eax
jnz     loc_1003781d
mov     eax, [edi+10h]
mov     eax, [eax]
test    eax, eax
jz      loc_10037cab
cmp     dword ptr [eax], 0
jle     loc_10037cab
mov     ecx, [eax+8]
mov     eax, [edi+8]
mov     esi, [ecx]
mov     edi, [ebp+var_30]
call    sub_10035a60
mov     [ebp+var_8], eax
mov     esi, edi
jmp     loc_10037cab
mov     eax, [edi+10h]
mov     [ebp+var_44], eax
cmp     eax, edx
jz      loc_10037cab
cmp     [ebp+var_29], dl
jnz     short loc_10037ac6
mov     [ebp+var_29], 62h
mov     eax, [edi+8]
push    esi
call    sub_100358d0
mov     [ebp+var_8], eax
mov     al, [esi+13h]
add     esp, 4
test    al, al
jnz     short loc_10037ae7
inc     dword ptr [esi+4ch]
mov     edx, [esi+4ch]
mov     [ebp+var_38], edx
jmp     short loc_10037af6
dec     al
mov     [esi+13h], al
movzx   eax, al
mov     ecx, [esi+eax*4+1ch]
mov     [ebp+var_38], ecx
mov     al, [esi+13h]
test    al, al
jnz     short loc_10037b08
inc     dword ptr [esi+4ch]
mov     edi, [esi+4ch]
mov     [ebp+var_34], edi
jmp     short loc_10037b19
dec     al
movzx   edx, al
mov     [esi+13h], al
mov     eax, [esi+edx*4+1ch]
mov     [ebp+var_34], eax
mov     edi, eax
push    edi
push    0
push    0ah
mov     eax, ebx
call    sub_10025990
mov     ecx, [ebp+var_44]
mov     eax, [ecx]
mov     ecx, [ecx+8]
add     esp, 0ch
mov     [ebp+var_44], eax
mov     [ebp+var_30], ecx
test    eax, eax
jle     loc_10037c49
cmp     [ebp+var_40], 0
mov     edx, [ebp+var_30]
mov     edi, [edx]
jl      short loc_10037b82
lea     eax, [ebp+var_28]
push    edi
push    eax
mov     [ebp+var_18], 1
mov     [ebp+var_28], offset sub_10037090
mov     [ebp+var_24], offset sub_10037170
call    sub_10033e00
add     esp, 8
cmp     [ebp+var_18], 0
jnz     short loc_10037b82
mov     ecx, [ebp+var_40]
mov     edx, ebx
call    sub_10025f50
mov     [ebp+var_40], 0ffffffffh
cmp     [ebp+arg_4], 0
jz      short loc_10037bb6
lea     ecx, [ebp+var_50]
push    ecx
push    edi
call    sub_100371f0
add     esp, 8
test    eax, eax
jz      short loc_10037bb6
mov     edx, [ebp+var_50]
mov     eax, [ebp+var_34]
mov     ecx, [ebp+var_4c]
push    edx
mov     edx, [ecx+18h]
push    eax
push    edx
push    3ah
mov     eax, ebx
call    sub_10025890
add     esp, 10h
jmp     short loc_10037c33
mov     eax, [ebp+var_38]
push    eax
push    edi
push    esi
call    sub_10038b70
add     esp, 0ch
cmp     [ebp+arg_4], 0
mov     edi, eax
jz      short loc_10037bfa
mov     ecx, [ebx+1ch]
add     ecx, 2
push    ecx
push    edi
push    15h
mov     eax, ebx
call    sub_10025990
mov     edx, [ebp+var_34]
mov     eax, [ebp+var_4c]
mov     ecx, [eax+18h]
add     esp, 0ch
push    edi
push    edx
push    ecx
push    39h
mov     eax, ebx
call    sub_10025890
add     esp, 10h
jmp     short loc_10037c33
mov     eax, [ebp+var_34]
push    1
lea     edx, [ebp+var_29]
push    edx
push    eax
push    1
push    edi
push    1fh
mov     eax, ebx
call    sub_100259f0
mov     ecx, 1
mov     eax, esi
call    sub_100384f0
mov     ecx, [ebp+var_34]
mov     edx, [ebp+var_4c]
mov     eax, [edx+18h]
push    ecx
push    eax
push    61h
mov     eax, ebx
call    sub_10025990
add     esp, 24h
mov     eax, [ebp+var_44]
add     [ebp+var_30], 14h
dec     eax
mov     [ebp+var_44], eax
test    eax, eax
jg      loc_10037b3e
mov     edi, [ebp+var_34]
cmp     [ebp+var_38], 0
jz      short loc_10037c82
mov     dl, [esi+13h]
cmp     dl, 8
jnb     short loc_10037c82
xor     eax, eax
lea     ecx, [esi+64h]
lea     esp, [esp+0]
mov     edi, [ebp+var_38]
cmp     [ecx+10h], edi
jz      loc_10037cf9
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10037c60
movzx   ecx, dl
mov     [esi+ecx*4+1ch], edi
inc     byte ptr [esi+13h]
mov     edi, [ebp+var_34]
test    edi, edi
jz      short loc_10037cab
mov     dl, [esi+13h]
cmp     dl, 8
jnb     short loc_10037cab
xor     eax, eax
lea     ecx, [esi+64h]
cmp     [ecx+10h], edi
jz      short loc_10037cff
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10037c93
movzx   edx, dl
mov     [esi+edx*4+1ch], edi
inc     byte ptr [esi+13h]
cmp     [ebp+arg_4], 0
jnz     short loc_10037cc6
lea     eax, [ebp+src]
push    eax
mov     eax, [ebp+var_3c]
push    ebx
mov     ecx, 0fffffffah
call    sub_10025f90
add     esp, 8
mov     eax, [ebp+var_40]
test    eax, eax
js      short loc_10037cde
mov     ecx, [ebx+1ch]
cmp     ecx, eax
jbe     short loc_10037cde
lea     edx, [eax+eax*4]
mov     eax, [ebx+4]
mov     [eax+edx*4+8], ecx
mov     eax, esi
call    sub_100385f0
mov     ecx, [ebp+var_4]
mov     eax, [ebp+var_48]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
jmp     short loc_10037c7f
mov     byte ptr [ecx+8], 1
jmp     short loc_10037cab
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [ebx+8]
lea     eax, [ebp+var_14]
push    eax
push    esi
mov     [ebp+var_14], 0
mov     [ebp+var_8], edi
call    sub_10037460
add     esp, 8
mov     [ebp+var_1c], eax
call    sub_10035a00
mov     ecx, ebx
mov     [ebp+var_1], al
mov     al, [ecx+13h]
mov     edx, 1
add     [ecx+5ch], edx
xor     ebx, ebx
cmp     al, bl
jnz     short loc_10037d5f
add     [ecx+4ch], edx
mov     edx, [ecx+4ch]
jmp     short loc_10037d6b
dec     al
mov     [ecx+13h], al
movzx   eax, al
mov     edx, [ecx+eax*4+1ch]
mov     eax, [ebp+arg_4]
mov     eax, [eax+8]
mov     esi, edx
mov     [ebp+var_c], edx
call    sub_100399d0
mov     ecx, [ebp+arg_c]
mov     esi, [edi+1ch]
cmp     ecx, [ebp+arg_8]
jnz     short loc_10037dc3
cmp     [edi+20h], esi
jg      short loc_10037d98
call    sub_10025810
test    eax, eax
jnz     loc_10037e92
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_c]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_c]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 49h
jmp     loc_10037e92
cmp     [edi+20h], esi
jg      short loc_10037dda
call    sub_10025810
test    eax, eax
jz      short loc_10037dda
mov     [ebp+var_10], 1
jmp     short loc_10037e00
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4ah
mov     [ebp+var_10], esi
mov     eax, [ebp+arg_4]
mov     esi, [edi+1ch]
mov     ecx, [eax+18h]
mov     [ebp+var_18], ecx
cmp     [edi+20h], esi
jg      short loc_10037e1d
call    sub_10025810
mov     edi, [ebp+var_8]
test    eax, eax
jnz     short loc_10037e43
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_18]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_8]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 48h
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10037e57
call    sub_10025810
mov     edi, [ebp+var_8]
test    eax, eax
jnz     short loc_10037e7a
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+arg_c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
mov     ecx, [ebp+var_10]
cmp     ecx, ebx
jl      short loc_10037e92
mov     eax, [edi+1ch]
cmp     eax, ecx
jbe     short loc_10037e92
mov     edx, [edi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
cmp     [ebp+var_1c], 1
mov     esi, [edi+1ch]
jnz     loc_10037f25
cmp     [edi+20h], esi
jg      short loc_10037eb0
call    sub_10025810
mov     edi, [ebp+var_8]
test    eax, eax
jnz     short loc_10037ed6
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_8]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 15h
mov     edx, [ebp+arg_4]
mov     esi, [edi+1ch]
mov     eax, [edx+18h]
mov     [ebp+arg_4], eax
cmp     [edi+20h], esi
jg      short loc_10037ef7
call    sub_10025810
test    eax, eax
jnz     loc_100380cb
mov     edi, [ebp+var_8]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_8]
mov     [eax+4], ecx
mov     ecx, [ebp+var_c]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 36h
jmp     loc_100380cb
cmp     [edi+20h], esi
jg      short loc_10037f3d
call    sub_10025810
mov     edi, [ebp+var_8]
test    eax, eax
jz      short loc_10037f3d
mov     esi, 1
jmp     short loc_10037f65
mov     eax, [edi+4]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_c]
mov     ecx, 1
add     [edi+1ch], ecx
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1eh
mov     ecx, [edi+4]
mov     edx, [edi]
mov     eax, esi
cmp     ecx, ebx
jz      short loc_10037fb7
cmp     [edx+32h], bl
jnz     short loc_10037fb7
cmp     esi, ebx
jge     short loc_10037f7d
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*4]
movsx   eax, byte ptr [esi+1]
mov     ecx, [esi+10h]
mov     edi, edx
mov     [ebp+var_1c], esi
call    sub_10025e50
mov     [esi+10h], ebx
mov     esi, [ebp+var_8]
mov     edx, [esi]
mov     edi, 1
lea     ebx, [ebp+var_1]
call    sub_10009bc0
mov     ecx, [ebp+var_1c]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
xor     ebx, ebx
jmp     short loc_10037fc9
lea     ecx, [ebp+var_1]
mov     eax, 1
mov     edi, edx
call    sub_10025e50
mov     esi, [ebp+var_8]
mov     edi, [ebp+var_14]
cmp     edi, ebx
jz      loc_100380ae
mov     ecx, [ebp+arg_8]
cmp     ecx, [ebp+arg_c]
jz      loc_100380ae
mov     edx, [ebp+var_c]
mov     eax, [ebp+arg_4]
mov     ecx, [eax+18h]
push    1
push    edx
push    ebx
push    ecx
push    34h
mov     eax, esi
call    sub_10025b50
add     esp, 14h
mov     [ebp+var_18], eax
push    edi
push    4ah
mov     eax, esi
call    sub_10025940
mov     edx, [ebp+arg_4]
push    1
push    edi
mov     [ebp+var_1c], eax
mov     eax, [edx+18h]
push    ebx
push    eax
push    34h
mov     eax, esi
call    sub_10025b50
add     esp, 1ch
push    edi
mov     [ebp+arg_4], eax
push    0ffffffffh
push    7
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+arg_4]
add     esp, 0ch
cmp     eax, ebx
jl      short loc_1003804b
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_1003804b
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     [eax+edx*4+8], ecx
push    1
push    edi
push    14h
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_1c]
add     esp, 0ch
cmp     eax, ebx
jl      short loc_10038072
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_10038072
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     [eax+edx*4+8], ecx
mov     ecx, [ebp+arg_c]
push    ecx
push    edi
push    1bh
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+arg_8]
add     esp, 0ch
push    edx
push    ebx
push    1
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_18]
add     esp, 0ch
cmp     eax, ebx
jl      short loc_100380cb
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_100380cb
mov     edx, [esi+4]
lea     eax, [eax+eax*4]
mov     [edx+eax*4+8], ecx
jmp     short loc_100380cb
mov     eax, [ebp+var_c]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    1
push    eax
mov     eax, [edx+18h]
push    ecx
push    eax
push    33h
mov     eax, esi
call    sub_10025b50
add     esp, 14h
mov     eax, [ebp+arg_0]
cmp     [ebp+var_c], ebx
jz      short loc_100380fb
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_100380fb
lea     ecx, [eax+64h]
mov     edi, edi
mov     esi, [ebp+var_c]
cmp     [ecx+10h], esi
jz      short loc_10038107
inc     ebx
add     ecx, 18h
cmp     ebx, 0ah
jl      short loc_100380e0
movzx   ecx, dl
mov     [eax+ecx*4+1ch], esi
inc     byte ptr [eax+13h]
call    sub_100385f0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
call    sub_100385f0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, eax
cmp     edx, ebx
jz      loc_10038226
mov     eax, edx
cmp     [edx], bl
jz      short loc_10038145
jmp     short loc_10038140
inc     eax
cmp     [eax], bl
jnz     short loc_10038140
sub     eax, edx
lea     ecx, [ebp+var_10]
push    ecx
and     eax, 3fffffffh
push    edx
mov     dl, 1
mov     ecx, eax
call    sub_1000bd50
add     esp, 8
cmp     [ebp+arg_0], ebx
jz      short loc_1003816a
fld     [ebp+var_10]
fchs
fstp    [ebp+var_10]
mov     esi, [edi]
mov     ecx, 8
call    sub_10009a40
mov     ecx, eax
mov     [ebp+var_4], ecx
cmp     ecx, ebx
jz      short loc_1003818a
mov     edx, dword ptr [ebp+var_10]
mov     eax, dword ptr [ebp+var_10+4]
mov     [ecx], edx
mov     [ecx+4], eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_100381a5
call    sub_10025810
mov     ecx, [ebp+var_4]
test    eax, eax
jz      short loc_100381a5
mov     eax, 1
jmp     short loc_100381ca
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 82h
mov     eax, esi
mov     esi, [edi+4]
mov     edx, [edi]
cmp     esi, ebx
jz      short loc_1003821a
cmp     [edx+32h], bl
jnz     short loc_1003821a
cmp     eax, ebx
jge     short loc_100381e0
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [esi+eax*4+10h]
lea     esi, [esi+eax*4]
movsx   eax, byte ptr [esi+1]
mov     edi, edx
call    sub_10025e50
mov     eax, [ebp+var_4]
mov     [esi+10h], ebx
cmp     eax, ebx
jnz     short loc_1003820c
mov     [esi+10h], ebx
mov     [esi+1], bl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0f4h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 0fffffff4h
mov     edi, edx
call    sub_10025e50
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     edx, 400h
xor     ebx, ebx
push    edi
mov     edi, [ecx+8]
test    [eax+2], dx
jz      short loc_1003829b
mov     eax, [eax+4]
mov     [ebp+var_4], eax
cmp     [ebp+arg_0], ebx
jz      short loc_10038259
neg     eax
mov     [ebp+var_4], eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1003826e
call    sub_10025810
test    eax, eax
jnz     loc_100383d4
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_4]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [eax+4]
mov     eax, esi
cmp     esi, ebx
jnz     short loc_100382a8
xor     eax, eax
jmp     short loc_100382bc
cmp     [esi], bl
jz      short loc_100382b5
lea     esp, [esp+0]
inc     eax
cmp     [eax], bl
jnz     short loc_100382b0
sub     eax, esi
and     eax, 3fffffffh
push    eax
lea     edx, [ebp+var_10]
push    edx
push    esi
mov     al, 1
call    sub_1000c2a0
add     esp, 0ch
cmp     eax, ebx
jz      short loc_100382f5
cmp     eax, 2
jnz     short loc_100382da
cmp     [ebp+arg_0], ebx
jnz     short loc_10038347
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
mov     edx, esi
mov     eax, edi
call    sub_10038120
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_0], ebx
jz      short loc_1003830c
mov     eax, [ebp+var_10]
neg     eax
mov     [ebp+var_10], eax
mov     eax, [ebp+var_c]
adc     eax, ebx
neg     eax
mov     [ebp+var_c], eax
mov     esi, [edi]
mov     ecx, 8
call    sub_10009a40
mov     ecx, eax
mov     [ebp+var_4], ecx
cmp     ecx, ebx
jz      short loc_1003832c
mov     edx, [ebp+var_10]
mov     eax, [ebp+var_c]
mov     [ecx], edx
mov     [ecx+4], eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10038353
call    sub_10025810
mov     ecx, [ebp+var_4]
test    eax, eax
jz      short loc_10038353
mov     eax, 1
jmp     short loc_10038378
mov     [ebp+var_10], ebx
mov     [ebp+var_c], 80000000h
jmp     short loc_1003830c
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 8
mov     eax, esi
mov     esi, [edi+4]
mov     edx, [edi]
cmp     esi, ebx
jz      short loc_100383c8
cmp     [edx+32h], bl
jnz     short loc_100383c8
cmp     eax, ebx
jge     short loc_1003838e
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [esi+eax*4+10h]
lea     esi, [esi+eax*4]
movsx   eax, byte ptr [esi+1]
mov     edi, edx
call    sub_10025e50
mov     eax, [ebp+var_4]
mov     [esi+10h], ebx
cmp     eax, ebx
jnz     short loc_100383ba
mov     [esi+10h], ebx
mov     [esi+1], bl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0f3h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 0fffffff3h
mov     edi, edx
call    sub_10025e50
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [edx]
test    byte ptr [eax+18h], 2
jnz     loc_100384e4
push    esi
xor     ecx, ecx
lea     eax, [edx+64h]
cmp     dword ptr [eax+10h], 0
jz      loc_100384bf
inc     ecx
add     eax, 18h
cmp     ecx, 0ah
jl      short loc_100383f5
push    edi
mov     edi, [edx+78h]
mov     eax, 7fffffffh
or      ecx, 0ffffffffh
cmp     edi, eax
jge     short loc_1003841c
xor     ecx, ecx
mov     eax, edi
mov     edi, [edx+90h]
cmp     edi, eax
jge     short loc_1003842d
mov     ecx, 1
mov     eax, edi
mov     edi, [edx+0a8h]
cmp     edi, eax
jge     short loc_1003843e
mov     ecx, 2
mov     eax, edi
mov     edi, [edx+0c0h]
cmp     edi, eax
jge     short loc_1003844f
mov     ecx, 3
mov     eax, edi
mov     edi, [edx+0d8h]
cmp     edi, eax
jge     short loc_10038460
mov     ecx, 4
mov     eax, edi
mov     edi, [edx+0f0h]
cmp     edi, eax
jge     short loc_10038471
mov     ecx, 5
mov     eax, edi
mov     edi, [edx+108h]
cmp     edi, eax
jge     short loc_10038482
mov     ecx, 6
mov     eax, edi
mov     edi, [edx+120h]
cmp     edi, eax
jge     short loc_10038493
mov     ecx, 7
mov     eax, edi
mov     edi, [edx+138h]
cmp     edi, eax
jge     short loc_100384a4
mov     ecx, 8
mov     eax, edi
pop     edi
cmp     [edx+150h], eax
jge     short loc_100384b4
mov     ecx, 9
jmp     short loc_100384b8
test    ecx, ecx
js      short loc_100384e3
lea     eax, [ecx+ecx*2]
lea     eax, [edx+eax*8+64h]
mov     ecx, [edx+5ch]
mov     [eax+0ch], ecx
mov     ecx, [ebp+arg_0]
mov     [eax], ecx
mov     ecx, [ebp+arg_4]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_8]
mov     [eax+10h], ecx
mov     byte ptr [eax+8], 0
mov     ecx, [edx+60h]
mov     [eax+14h], ecx
inc     dword ptr [edx+60h]
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
lea     edx, [edi+ecx-1]
push    esi
mov     [ebp+var_4], edx
lea     ecx, [eax+74h]
mov     [ebp+var_8], 2
xor     ebx, ebx
jmp     short loc_10038510
mov     esi, [ecx]
cmp     esi, edi
jl      short loc_10038537
cmp     esi, [ebp+var_4]
jg      short loc_10038537
cmp     [ecx-8], bl
jz      short loc_10038535
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_10038532
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx-8], bl
mov     [ecx], ebx
mov     esi, [ecx+18h]
cmp     esi, edi
jl      short loc_10038560
cmp     esi, [ebp+var_4]
jg      short loc_10038560
cmp     [ecx+10h], bl
jz      short loc_1003855d
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_1003855a
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+10h], bl
mov     [ecx+18h], ebx
mov     esi, [ecx+30h]
cmp     esi, edi
jl      short loc_10038589
cmp     esi, [ebp+var_4]
jg      short loc_10038589
cmp     [ecx+28h], bl
jz      short loc_10038586
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_10038583
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+28h], bl
mov     [ecx+30h], ebx
mov     esi, [ecx+48h]
cmp     esi, edi
jl      short loc_100385b2
cmp     esi, [ebp+var_4]
jg      short loc_100385b2
cmp     [ecx+40h], bl
jz      short loc_100385af
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_100385ac
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+40h], bl
mov     [ecx+48h], ebx
mov     esi, [ecx+60h]
cmp     esi, edi
jl      short loc_100385db
cmp     esi, [ebp+var_4]
jg      short loc_100385db
cmp     [ecx+58h], bl
jz      short loc_100385d8
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_100385d5
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+58h], bl
mov     [ecx+60h], ebx
add     ecx, 78h
dec     [ebp+var_8]
jnz     loc_10038510
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
dec     dword ptr [eax+5ch]
push    ebx
push    esi
push    edi
lea     ecx, [eax+74h]
mov     edi, 2
xor     ebx, ebx
mov     esi, [ecx]
cmp     esi, ebx
jz      short loc_1003862a
mov     edx, [ecx-4]
cmp     edx, [eax+5ch]
jle     short loc_1003862a
cmp     [ecx-8], bl
jz      short loc_10038628
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_10038625
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx-8], bl
mov     [ecx], ebx
mov     esi, [ecx+18h]
cmp     esi, ebx
jz      short loc_10038656
mov     edx, [ecx+14h]
cmp     edx, [eax+5ch]
jle     short loc_10038656
cmp     [ecx+10h], bl
jz      short loc_10038653
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_10038650
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+10h], bl
mov     [ecx+18h], ebx
mov     esi, [ecx+30h]
cmp     esi, ebx
jz      short loc_10038682
mov     edx, [ecx+2ch]
cmp     edx, [eax+5ch]
jle     short loc_10038682
cmp     [ecx+28h], bl
jz      short loc_1003867f
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_1003867c
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+28h], bl
mov     [ecx+30h], ebx
mov     esi, [ecx+48h]
cmp     esi, ebx
jz      short loc_100386ae
mov     edx, [ecx+44h]
cmp     edx, [eax+5ch]
jle     short loc_100386ae
cmp     [ecx+40h], bl
jz      short loc_100386ab
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_100386a8
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+40h], bl
mov     [ecx+48h], ebx
mov     esi, [ecx+60h]
cmp     esi, ebx
jz      short loc_100386da
mov     edx, [ecx+5ch]
cmp     edx, [eax+5ch]
jle     short loc_100386da
cmp     [ecx+58h], bl
jz      short loc_100386d7
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_100386d4
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+58h], bl
mov     [ecx+60h], ebx
add     ecx, 78h
dec     edi
jnz     loc_10038600
pop     edi
pop     esi
pop     ebx
retn
xor     dl, dl
cmp     [eax+74h], ecx
jnz     short loc_100386fa
mov     [eax+6ch], dl
cmp     [eax+8ch], ecx
jnz     short loc_10038708
mov     [eax+84h], dl
cmp     [eax+0a4h], ecx
jnz     short loc_10038716
mov     [eax+9ch], dl
cmp     [eax+0bch], ecx
jnz     short loc_10038724
mov     [eax+0b4h], dl
cmp     [eax+0d4h], ecx
jnz     short loc_10038732
mov     [eax+0cch], dl
cmp     [eax+0ech], ecx
jnz     short loc_10038740
mov     [eax+0e4h], dl
cmp     [eax+104h], ecx
jnz     short loc_1003874e
mov     [eax+0fch], dl
cmp     [eax+11ch], ecx
jnz     short loc_1003875c
mov     [eax+114h], dl
cmp     [eax+134h], ecx
jnz     short loc_1003876a
mov     [eax+12ch], dl
cmp     [eax+14ch], ecx
jnz     short locret_10038778
mov     [eax+144h], dl
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, eax
test    ebx, ebx
js      short loc_100387bc
mov     eax, [ebp+arg_0]
cmp     ebx, [eax+4]
jz      short loc_100387bc
mov     al, [eax+22h]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    ecx
and     al, 10h
movzx   ecx, al
neg     ecx
sbb     ecx, ecx
push    ebx
and     ecx, 6ch
push    edx
add     ecx, 1dh
push    ecx
mov     eax, edi
call    sub_10025890
add     esp, 10h
jmp     short loc_100387f6
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_100387cd
call    sub_10025810
test    eax, eax
jnz     short loc_100387f6
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+arg_4]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_8]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 41h
test    ebx, ebx
js      short loc_1003880d
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
push    edi
mov     eax, ebx
call    sub_1005f980
add     esp, 0ch
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     ecx, [edi+8]
push    ebx
push    esi
mov     ebx, eax
mov     [ebp+var_4], ecx
xor     eax, eax
lea     esi, [edi+64h]
cmp     dword ptr [esi+10h], 0
jle     short loc_10038847
mov     edx, [ebp+arg_4]
cmp     [esi], edx
jnz     short loc_10038847
cmp     [esi+4], ebx
jz      short loc_1003888a
inc     eax
add     esi, 18h
cmp     eax, 0ah
jl      short loc_10038835
mov     edx, [ebp+arg_8]
mov     esi, [ebp+arg_4]
mov     eax, [ebp+arg_0]
push    edx
push    esi
push    eax
mov     eax, ecx
call    sub_10038780
mov     dl, [ebp+arg_c]
add     esp, 0ch
test    dl, dl
jz      short loc_100388a6
mov     eax, [ebp+var_4]
mov     ecx, [eax+4]
test    ecx, ecx
jz      short loc_100388b6
mov     eax, [eax+1ch]
lea     eax, [eax+eax*4]
mov     [ecx+eax*4-11h], dl
mov     eax, [ebp+arg_8]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+60h]
mov     [esi+14h], eax
inc     dword ptr [edi+60h]
mov     ecx, [esi+10h]
mov     eax, edi
call    sub_100386f0
mov     eax, [esi+10h]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_8]
push    ecx
push    ebx
push    esi
mov     edx, edi
call    sub_100383e0
add     esp, 0ch
mov     eax, [ebp+arg_8]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
lea     ecx, [eax+74h]
mov     edi, 2
xor     ebx, ebx
lea     ecx, [ecx+0]
mov     esi, [ecx]
cmp     esi, ebx
jz      short loc_100388f2
cmp     [ecx-8], bl
jz      short loc_100388f0
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_100388ed
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx-8], bl
mov     [ecx], ebx
mov     esi, [ecx+18h]
cmp     esi, ebx
jz      short loc_10038916
cmp     [ecx+10h], bl
jz      short loc_10038913
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_10038910
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+10h], bl
mov     [ecx+18h], ebx
mov     esi, [ecx+30h]
cmp     esi, ebx
jz      short loc_1003893a
cmp     [ecx+28h], bl
jz      short loc_10038937
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_10038934
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+28h], bl
mov     [ecx+30h], ebx
mov     esi, [ecx+48h]
cmp     esi, ebx
jz      short loc_1003895e
cmp     [ecx+40h], bl
jz      short loc_1003895b
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_10038958
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+40h], bl
mov     [ecx+48h], ebx
mov     esi, [ecx+60h]
cmp     esi, ebx
jz      short loc_10038982
cmp     [ecx+58h], bl
jz      short loc_1003897f
mov     dl, [eax+13h]
cmp     dl, 8
jnb     short loc_1003897c
movzx   edx, dl
mov     [eax+edx*4+1ch], esi
inc     byte ptr [eax+13h]
mov     [ecx+58h], bl
mov     [ecx+60h], ebx
add     ecx, 78h
dec     edi
jnz     loc_100388d0
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
push    edi
cmp     esi, ecx
jz      loc_10038aef
mov     edi, [ebx+8]
mov     eax, [edi+1ch]
mov     [ebp+var_4], eax
cmp     [edi+20h], eax
jg      short loc_100389bd
call    sub_10025810
mov     ecx, [ebp+arg_0]
test    eax, eax
jnz     short loc_100389e4
mov     eax, [ebp+var_4]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edi, [ebp+arg_4]
lea     eax, [eax+eax*4]
lea     eax, [edx+eax*4]
xor     edx, edx
mov     [eax+3], dl
mov     [eax+4], esi
mov     [eax+8], ecx
mov     [eax+0ch], edi
mov     [eax+10h], edx
mov     word ptr [eax], 0dh
jmp     short loc_100389e7
mov     edi, [ebp+arg_4]
mov     eax, [ebx+74h]
cmp     eax, esi
jl      short loc_100389fc
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_100389fc
sub     eax, esi
add     eax, ecx
mov     [ebx+74h], eax
mov     eax, [ebx+8ch]
cmp     eax, esi
jl      short loc_10038a17
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_10038a17
sub     eax, esi
add     eax, ecx
mov     [ebx+8ch], eax
mov     eax, [ebx+0a4h]
cmp     eax, esi
jl      short loc_10038a32
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_10038a32
sub     eax, esi
add     eax, ecx
mov     [ebx+0a4h], eax
mov     eax, [ebx+0bch]
cmp     eax, esi
jl      short loc_10038a4d
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_10038a4d
sub     eax, esi
add     eax, ecx
mov     [ebx+0bch], eax
mov     eax, [ebx+0d4h]
cmp     eax, esi
jl      short loc_10038a68
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_10038a68
sub     eax, esi
add     eax, ecx
mov     [ebx+0d4h], eax
mov     eax, [ebx+0ech]
cmp     eax, esi
jl      short loc_10038a83
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_10038a83
sub     eax, esi
add     eax, ecx
mov     [ebx+0ech], eax
mov     eax, [ebx+104h]
cmp     eax, esi
jl      short loc_10038a9e
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_10038a9e
sub     eax, esi
add     eax, ecx
mov     [ebx+104h], eax
mov     eax, [ebx+11ch]
cmp     eax, esi
jl      short loc_10038ab9
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_10038ab9
sub     eax, esi
add     eax, ecx
mov     [ebx+11ch], eax
mov     eax, [ebx+134h]
cmp     eax, esi
jl      short loc_10038ad4
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_10038ad4
sub     eax, esi
add     eax, ecx
mov     [ebx+134h], eax
mov     eax, [ebx+14ch]
cmp     eax, esi
jl      short loc_10038aef
lea     edx, [esi+edi]
cmp     eax, edx
jge     short loc_10038aef
sub     eax, esi
add     eax, ecx
mov     [ebx+14ch], eax
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, edx
push    esi
push    edi
cmp     eax, ebx
jz      short loc_10038b65
test    ecx, ecx
jle     short loc_10038b65
sub     eax, ebx
mov     [ebp+var_8], eax
mov     [ebp+var_4], ecx
jmp     short loc_10038b20
mov     eax, [ebp+arg_0]
mov     edi, [eax+8]
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10038b37
call    sub_10025810
test    eax, eax
jnz     short loc_10038b5f
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_8]
add     ecx, ebx
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0eh
inc     ebx
dec     [ebp+var_4]
jnz     short loc_10038b20
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 8ch
mov     eax, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_0]
mov     edx, [ebx]
push    esi
mov     esi, [ebx+8]
xor     ecx, ecx
push    edi
mov     [esp+98h+var_88], esi
mov     [esp+98h+var_78], eax
mov     [esp+98h+var_80], ecx
mov     [esp+98h+var_84], ecx
mov     [esp+98h+var_68], edx
cmp     esi, ecx
jz      loc_100395b1
mov     edi, [ebp+arg_4]
lea     eax, [ecx+62h]
cmp     edi, ecx
jz      short loc_10038bb5
movzx   eax, byte ptr [edi]
mov     [esp+98h+var_74], eax
add     eax, 0ffffffedh
cmp     eax, 8ah
ja      def_10038bce
movzx   eax, ds:byte_100398c4[eax]
jmp     ds:jpt_10038bce[eax*4]
movsx   ecx, word ptr [edi+1eh]
mov     eax, [edi+24h]
cmp     byte ptr [eax], 0
mov     edx, [eax+14h]
lea     ecx, [ecx+ecx*2]
lea     ecx, [edx+ecx*8]
jnz     short loc_10038bf8
mov     eax, [ecx+10h]
mov     [esp+98h+var_78], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [eax+1], 0
jz      short loc_10038c21
mov     edx, [ebp+arg_8]
mov     ecx, [ecx+0ch]
push    edx
mov     edx, [eax+8]
push    ecx
push    edx
push    1dh
mov     eax, esi
call    sub_10025890
mov     eax, [esp+0a8h+var_78]
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     ecx, ecx
mov     eax, [edi+18h]
cmp     eax, ecx
jge     short loc_10038c3c
movsx   eax, word ptr [edi+1ch]
add     eax, [ebx+58h]
mov     [esp+98h+var_78], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   ecx, byte ptr [edi+23h]
mov     edx, [ebp+arg_8]
push    ecx
mov     ecx, [edi+28h]
push    edx
push    eax
movsx   eax, word ptr [edi+1ch]
push    ecx
mov     edi, ebx
call    sub_10038820
add     esp, 10h
mov     [esp+98h+var_78], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_8]
push    edx
push    0
mov     eax, edi
mov     ecx, ebx
call    sub_10038230
mov     eax, [esp+0a0h+var_78]
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
mov     edx, [edi+4]
push    eax
push    0
mov     eax, esi
call    sub_10038120
mov     eax, [esp+0a0h+var_78]
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edi+4]
mov     edx, [ebp+arg_8]
push    0
push    ecx
push    0
push    edx
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
mov     eax, [esp+0b0h+var_78]
add     esp, 18h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
push    eax
push    0
push    0ah
mov     eax, esi
call    sub_10025990
mov     eax, [esp+0a4h+var_78]
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [edi+4]
add     edi, 2
mov     ecx, edi
call    sub_1000ba20
lea     ebx, [eax-1]
mov     eax, [esi]
push    ebx
push    eax
call    sub_1000c8c0
mov     ecx, [ebp+arg_8]
push    0ffffffffh
push    eax
mov     eax, ebx
cdq
push    0
sub     eax, edx
push    ecx
sar     eax, 1
push    eax
push    0bh
mov     eax, esi
call    sub_100259f0
mov     eax, [esp+0b8h+var_78]
add     esp, 20h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movsx   eax, word ptr [edi+1ch]
mov     edx, [ebp+arg_8]
push    edx
push    eax
push    0ch
mov     eax, esi
call    sub_10025990
mov     ecx, [edi+4]
add     esp, 0ch
cmp     byte ptr [ecx+1], 0
jz      loc_10038f00
mov     ecx, [ebx+1ech]
mov     edx, edi
movsx   eax, word ptr [edx+1ch]
mov     ebx, [ecx+eax*4-4]
mov     eax, esi
mov     ecx, [eax+4]
mov     edi, [eax]
test    ecx, ecx
jz      short loc_10038da7
cmp     byte ptr [edi+32h], 0
jnz     short loc_10038da7
mov     eax, [eax+1ch]
lea     edx, [eax+eax*4-5]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     esi, [ecx+edx*4]
mov     ecx, [esi+10h]
call    sub_10025e50
xor     eax, eax
mov     [esi+10h], eax
cmp     ebx, eax
jnz     short loc_10038d95
mov     [esi+10h], eax
mov     [esi+1], al
mov     eax, [esp+98h+var_78]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+98h+var_78]
mov     [esi+10h], ebx
mov     byte ptr [esi+1], 0feh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, ebx
mov     eax, 0fffffffeh
call    sub_10025e50
mov     eax, [esp+98h+var_78]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+18h]
mov     [esp+98h+var_78], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_8]
mov     edx, [edi+8]
push    ecx
push    edx
push    ebx
call    sub_10038b70
add     esp, 0ch
mov     [esp+98h+var_78], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
mov     ecx, [edi+8]
push    eax
push    ecx
push    ebx
call    sub_10038b70
mov     [esp+0a4h+var_78], eax
mov     eax, [edi+4]
add     esp, 0ch
call    sub_10040670
mov     edx, [ebp+arg_8]
movsx   edi, al
add     edi, 2ch
cmp     [esp+98h+var_78], edx
jz      short loc_10038e2f
mov     ecx, [esp+98h+var_78]
mov     eax, edx
push    eax
push    ecx
push    0fh
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+arg_8]
add     esp, 0ch
mov     [esp+98h+var_78], edx
mov     eax, [esp+98h+var_78]
push    eax
push    edi
mov     eax, esi
call    sub_10025940
mov     edi, [esp+0a0h+var_78]
add     esp, 8
mov     ecx, 1
mov     eax, ebx
call    sub_100384f0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [esp+98h+var_80]
push    ecx
mov     ecx, [edi+8]
mov     esi, ebx
call    sub_10039950
mov     ecx, [edi+0ch]
lea     edx, [esp+9ch+var_84]
add     esp, 4
push    edx
mov     [esp+9ch+var_64], eax
call    sub_10039950
mov     ecx, [ebp+arg_8]
add     esp, 4
push    10h
push    ecx
push    eax
mov     eax, [esp+0a4h+var_74]
mov     edx, [esp+0a4h+var_64]
mov     ecx, [edi+8]
push    edx
push    eax
mov     eax, [edi+0ch]
push    ebx
call    sub_10035aa0
add     esp, 18h
mov     esi, [esp+98h+var_80]
test    esi, esi
jz      short loc_10038ecf
mov     dl, [ebx+13h]
cmp     dl, 8
jnb     short loc_10038ecf
xor     eax, eax
lea     ecx, [ebx+64h]
cmp     [ecx+10h], esi
jz      loc_10039847
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10038eb3
movzx   eax, dl
mov     [ebx+eax*4+1ch], esi
inc     byte ptr [ebx+13h]
mov     esi, [esp+98h+var_84]
test    esi, esi
jz      short loc_10038f00
mov     dl, [ebx+13h]
cmp     dl, 8
jnb     short loc_10038f00
xor     eax, eax
lea     ecx, [ebx+64h]
cmp     [ecx+10h], esi
jz      loc_10039850
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10038ee4
movzx   ecx, dl
mov     [ebx+ecx*4+1ch], esi
inc     byte ptr [ebx+13h]
mov     eax, [esp+98h+var_78]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [esp+98h+var_80]
push    ecx
mov     ecx, [edi+8]
mov     esi, ebx
call    sub_10039950
mov     ecx, [edi+0ch]
lea     edx, [esp+9ch+var_84]
add     esp, 4
push    edx
mov     [esp+9ch+var_64], eax
call    sub_10039950
mov     ecx, [ebp+arg_8]
add     esp, 4
push    90h
push    ecx
push    eax
xor     eax, eax
cmp     [esp+0a4h+var_74], 46h
setz    al
add     eax, 4bh
jmp     loc_10038e89
lea     ecx, [esp+98h+var_80]
mov     edx, edi
push    ecx
mov     ecx, [edx+8]
mov     esi, ebx
call    sub_10039950
mov     ecx, [ebp+arg_4]
mov     ecx, [ecx+0ch]
mov     edi, eax
lea     eax, [esp+9ch+var_84]
add     esp, 4
push    eax
call    sub_10039950
mov     edx, [ebp+arg_8]
add     esp, 4
push    edx
push    edi
push    eax
mov     eax, [esp+0a4h+var_74]
push    eax
mov     eax, [esp+0a8h+var_88]
call    sub_10025890
add     esp, 10h
jmp     loc_10038e9e
mov     eax, [edi+8]
mov     cl, [eax]
cmp     cl, 81h
jnz     short loc_10038fb8
mov     ecx, [ebp+arg_8]
push    ecx
push    1
mov     ecx, ebx
call    sub_10038230
mov     eax, [ebp+arg_8]
add     esp, 8
mov     [esp+98h+var_78], eax
jmp     loc_10038e9e
cmp     cl, 82h
jnz     short loc_10038fdc
mov     edx, [ebp+arg_8]
push    edx
mov     edx, [eax+4]
push    1
mov     eax, esi
call    sub_10038120
mov     eax, [ebp+arg_8]
add     esp, 8
mov     [esp+98h+var_78], eax
jmp     loc_10038e9e
mov     ecx, ebx
call    sub_1003abf0
mov     edi, eax
push    edi
push    0
push    7
mov     eax, esi
mov     [esp+0a4h+var_80], edi
call    sub_10025990
mov     ecx, [ebp+arg_4]
mov     ecx, [ecx+8]
lea     eax, [esp+0a4h+var_84]
add     esp, 0ch
push    eax
mov     esi, ebx
call    sub_10039950
mov     edx, [ebp+arg_8]
add     esp, 4
push    edx
push    edi
push    eax
mov     eax, [esp+0a4h+var_88]
push    57h
call    sub_10025890
mov     eax, [ebp+arg_8]
add     esp, 10h
mov     [esp+98h+var_78], eax
jmp     loc_10038e9e
lea     ecx, [esp+98h+var_80]
mov     edx, edi
push    ecx
mov     ecx, [edx+8]
mov     esi, ebx
call    sub_10039950
mov     ecx, [ebp+arg_8]
add     esp, 4
push    ecx
push    eax
mov     eax, [esp+0a0h+var_74]
push    eax
mov     eax, [esp+0a4h+var_88]
mov     [esp+0a4h+var_78], ecx
call    sub_10025990
add     esp, 0ch
jmp     loc_10038e9e
mov     ecx, [ebp+arg_8]
push    ecx
push    1
mov     edi, esi
push    7
mov     eax, edi
call    sub_10025990
mov     eax, [ebp+arg_4]
mov     ecx, [eax+8]
lea     edx, [esp+0a4h+var_80]
add     esp, 0ch
push    edx
mov     esi, ebx
call    sub_10039950
mov     ecx, [esp+9ch+var_74]
add     esp, 4
push    eax
push    ecx
mov     eax, edi
call    sub_10025940
mov     edx, [ebp+arg_8]
push    0ffffffffh
push    edx
mov     esi, eax
push    14h
mov     eax, edi
call    sub_10025990
add     esp, 14h
mov     eax, esi
mov     edx, edi
call    sub_10025e30
jmp     loc_10038e9e
mov     eax, [edi+24h]
cmp     eax, ecx
jnz     short loc_100390dc
mov     eax, [edi+4]
push    eax
push    offset amisuseofaggreg_0
push    ebx
call    sub_1000bb30
mov     eax, [esp+0a4h+var_78]
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movsx   ecx, word ptr [edi+1eh]
mov     edx, [eax+20h]
add     ecx, ecx
mov     eax, [edx+ecx*8+8]
mov     [esp+98h+var_78], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edx+10h]
mov     eax, [eax+0ch]
mov     al, [eax+4dh]
mov     byte ptr [esp+98h+var_7c], al
mov     eax, 4000h
mov     [esp+98h+var_6c], ecx
mov     [esp+98h+var_70], ecx
test    [edi+2], ax
jz      short loc_10039161
mov     [esp+98h+var_74], ecx
mov     [esp+98h+var_80], ecx
mov     esi, [edi+4]
mov     ecx, esi
call    sub_1000ba20
mov     ecx, [esp+98h+var_7c]
push    0
push    ecx
mov     edi, eax
mov     eax, [esp+0a0h+var_80]
push    eax
push    esi
push    edx
call    sub_100447c0
add     esp, 14h
mov     [esp+98h+var_84], eax
test    eax, eax
jnz     short loc_10039176
push    esi
push    edi
push    offset aunknownfunctio
push    ebx
call    sub_1000bb30
mov     eax, [esp+0a8h+var_78]
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+10h]
mov     [esp+98h+var_74], eax
cmp     eax, ecx
jz      short loc_10039118
mov     ecx, eax
mov     eax, [ecx]
mov     [esp+98h+var_80], eax
jmp     short loc_1003911c
mov     edi, eax
test    byte ptr [edi+3], 20h
jz      loc_10039221
mov     eax, [esp+98h+var_88]
call    sub_10025c00
mov     ecx, [esp+98h+var_74]
mov     edx, [ecx+8]
mov     esi, [ebp+arg_8]
mov     [esp+98h+var_7c], eax
mov     eax, [edx]
mov     ecx, ebx
call    sub_100399d0
mov     eax, [esp+98h+var_80]
cmp     eax, 1
jle     short loc_10039209
dec     eax
mov     [esp+98h+var_6c], 14h
mov     [esp+98h+var_68], eax
mov     eax, [esp+98h+var_7c]
mov     esi, [ebp+arg_8]
push    eax
mov     eax, [esp+9ch+var_88]
push    esi
push    4ah
call    sub_10025990
add     esp, 0ch
mov     ecx, 1
mov     edi, esi
mov     eax, ebx
call    sub_100384f0
inc     dword ptr [ebx+5ch]
mov     ecx, [esp+98h+var_74]
mov     edx, [ecx+8]
mov     edi, [esp+98h+var_6c]
mov     eax, [edi+edx]
mov     ecx, ebx
call    sub_100399d0
mov     eax, ebx
call    sub_100385f0
add     edi, 14h
dec     [esp+98h+var_68]
mov     [esp+98h+var_6c], edi
jnz     short loc_100391b8
mov     edx, [esp+98h+var_7c]
mov     ecx, [esp+98h+var_88]
call    sub_10025c70
mov     eax, [esp+98h+var_78]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [esp+98h+var_74], 0
jz      short loc_10039276
mov     esi, [esp+98h+var_80]
mov     ecx, ebx
call    sub_1003ac40
mov     cl, [edi+3]
mov     esi, [esp+98h+var_74]
mov     [esp+98h+var_64], eax
test    cl, 0c0h
jz      short loc_1003925b
mov     edx, [esi+8]
mov     edi, [edx]
mov     dl, [edi]
cmp     dl, 98h
jz      short loc_10039254
cmp     dl, 9ah
jnz     short loc_10039257
mov     [edi+23h], cl
mov     edi, [esp+98h+var_84]
inc     dword ptr [ebx+5ch]
push    1
mov     edx, eax
push    ebx
mov     eax, esi
call    sub_10039ce0
add     esp, 8
mov     eax, ebx
call    sub_100385f0
jmp     short loc_10039282
mov     esi, [esp+98h+var_74]
mov     [esp+98h+var_64], 0
mov     eax, [esp+98h+var_80]
cmp     eax, 2
jl      short loc_100392a3
mov     ecx, [ebp+arg_4]
test    byte ptr [ecx+2], 80h
jz      short loc_100392a3
mov     edx, [esi+8]
push    eax
mov     eax, [esp+9ch+var_68]
push    edi
push    eax
mov     eax, [edx+14h]
jmp     short loc_100392b3
test    eax, eax
jle     short loc_100392bf
mov     ecx, [esi+8]
mov     edx, [esp+98h+var_68]
push    eax
mov     eax, [ecx]
push    edi
push    edx
call    sub_10063cd0
mov     [esp+0a4h+var_84], eax
add     esp, 0ch
xor     esi, esi
lea     edi, [esi+1]
cmp     [esp+98h+var_80], esi
jle     short loc_1003932a
mov     [esp+98h+var_7c], esi
mov     edi, edi
cmp     esi, 20h
jge     short loc_100392f0
mov     eax, [esp+98h+var_74]
mov     ecx, [eax+8]
mov     edx, [esp+98h+var_7c]
mov     eax, [ecx+edx]
call    sub_10037190
test    eax, eax
jz      short loc_100392f0
or      [esp+98h+var_6c], edi
mov     eax, [esp+98h+var_84]
test    byte ptr [eax+3], 8
jz      short loc_1003931c
cmp     [esp+98h+var_70], 0
jnz     short loc_1003931c
mov     ecx, [esp+98h+var_74]
mov     edx, [ecx+8]
mov     eax, [esp+98h+var_7c]
mov     eax, [edx+eax]
push    ebx
call    sub_100358d0
add     esp, 4
mov     [esp+98h+var_70], eax
add     [esp+98h+var_7c], 14h
inc     esi
rol     edi, 1
cmp     esi, [esp+98h+var_80]
jl      short loc_100392d0
mov     ecx, [esp+98h+var_84]
test    byte ptr [ecx+3], 8
jz      short loc_10039365
cmp     [esp+98h+var_70], 0
jnz     short loc_10039346
mov     edx, [esp+98h+var_68]
mov     eax, [edx+8]
mov     [esp+98h+var_70], eax
mov     ecx, [esp+98h+var_70]
mov     esi, [esp+98h+var_88]
push    0fffffffch
push    ecx
push    0
push    0
push    0
push    11h
mov     eax, esi
call    sub_100259f0
add     esp, 18h
jmp     short loc_10039369
mov     esi, [esp+98h+var_88]
mov     edx, [esp+98h+var_84]
mov     eax, [ebp+arg_8]
mov     edi, [esp+98h+var_64]
mov     ecx, [esp+98h+var_6c]
push    0fffffffbh
push    edx
push    eax
push    edi
push    ecx
push    12h
mov     eax, esi
call    sub_100259f0
mov     eax, [esi+4]
mov     ecx, [esp+0b0h+var_80]
add     esp, 18h
test    eax, eax
jz      short loc_1003939f
mov     esi, [esi+1ch]
lea     edx, [esi+esi*4]
mov     [eax+edx*4-11h], cl
test    ecx, ecx
jz      loc_10038f00
mov     eax, ebx
call    sub_100384f0
mov     eax, [esp+98h+var_80]
cmp     eax, [ebx+3ch]
jle     loc_10038f00
mov     [ebx+3ch], eax
mov     eax, [esp+98h+var_78]
mov     [ebx+40h], edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    0
push    0
mov     edx, edi
mov     ecx, ebx
call    sub_100377e0
add     esp, 8
mov     [esp+98h+var_78], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, esi
call    sub_10025c00
mov     [esp+98h+var_6c], eax
mov     eax, esi
call    sub_10025c00
mov     [esp+98h+var_68], eax
mov     eax, [ebp+arg_8]
push    eax
push    0
push    0ah
mov     eax, esi
call    sub_10025990
mov     ecx, [esp+0a4h+var_68]
mov     edx, [esp+0a4h+var_6c]
add     esp, 0ch
push    ecx
push    edx
push    edi
push    ebx
call    sub_10037d10
mov     edi, [ebp+arg_8]
push    edi
push    1
push    7
mov     eax, esi
call    sub_10025990
mov     edx, [esp+0b4h+var_6c]
add     esp, 1ch
mov     ecx, esi
call    sub_10025c70
push    0
push    edi
push    14h
mov     eax, esi
call    sub_10025990
mov     edx, [esp+0a4h+var_68]
add     esp, 0ch
mov     ecx, esi
call    sub_10025c70
mov     eax, [esp+98h+var_78]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
mov     edi, [eax+8]
mov     eax, [eax+10h]
mov     eax, [eax+8]
mov     ecx, [eax]
lea     edx, [esp+98h+var_80]
mov     [esp+98h+var_70], ecx
push    edx
mov     ecx, edi
mov     esi, ebx
mov     [esp+9ch+var_68], eax
call    sub_10039950
mov     ecx, [esp+9ch+var_70]
mov     [esp+9ch+var_64], eax
lea     eax, [esp+9ch+var_84]
add     esp, 4
push    eax
call    sub_10039950
add     esp, 4
mov     ecx, ebx
mov     edx, eax
call    sub_1003abf0
mov     esi, eax
mov     [esp+98h+var_7c], esi
call    sub_1003abf0
mov     ecx, [esp+98h+var_64]
push    10h
push    esi
push    edx
push    ecx
mov     [esp+0a8h+var_6c], eax
mov     eax, [esp+0a8h+var_70]
push    50h
push    ebx
mov     ecx, edi
call    sub_10035aa0
mov     edx, [esp+0b0h+var_68]
mov     eax, [edx+14h]
mov     esi, [esp+0b0h+var_84]
mov     edx, ebx
mov     [esp+0b0h+var_70], eax
call    sub_1003ac10
lea     ecx, [esp+0b0h+var_84]
push    ecx
mov     ecx, [esp+0b4h+var_70]
mov     esi, ebx
call    sub_10039950
mov     esi, [esp+0b4h+var_6c]
mov     edx, [esp+0b4h+var_64]
add     esp, 1ch
push    10h
push    esi
push    eax
mov     eax, [esp+0a4h+var_70]
push    edx
push    4eh
push    ebx
mov     ecx, edi
call    sub_10035aa0
mov     eax, [ebp+arg_8]
push    eax
mov     eax, [esp+0b4h+var_88]
push    esi
mov     esi, [esp+0b8h+var_7c]
push    esi
push    45h
call    sub_10025890
add     esp, 28h
mov     edx, ebx
call    sub_1003ac10
mov     esi, [esp+98h+var_6c]
call    sub_1003ac10
jmp     loc_10038e9e
mov     ebx, [edi+28h]
mov     ecx, [ebx+8]
movsx   edx, word ptr [edi+1ch]
mov     eax, [ebp+arg_8]
inc     ecx
imul    ecx, [edi+18h]
push    eax
lea     eax, [ecx+edx+1]
push    eax
push    74h
mov     eax, esi
call    sub_10025990
movzx   eax, word ptr [edi+1ch]
add     esp, 0ch
test    ax, ax
js      loc_10038f00
mov     edx, [ebx+0ch]
cwde
lea     ecx, [eax+eax*2]
cmp     byte ptr [edx+ecx*8+16h], 65h
jnz     loc_10038f00
mov     eax, [ebp+arg_8]
push    eax
push    16h
mov     eax, esi
call    sub_10025940
mov     eax, [esp+0a0h+var_78]
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebx+1b4h], ecx
jnz     short loc_100395ba
push    offset araisemayonlybe
push    ebx
call    sub_1000bb30
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+1], 2
jnz     short loc_100395c7
mov     ecx, ebx
call    sub_10043d90
mov     al, [edi+1]
push    0
cmp     al, 4
jnz     short loc_100395f1
mov     ecx, [edi+4]
push    ecx
push    0
push    4
push    0
push    6
mov     eax, esi
call    sub_100259f0
mov     eax, [esp+0b0h+var_78]
add     esp, 18h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [edi+4]
movsx   eax, al
push    edx
push    eax
mov     eax, ebx
call    sub_10043db0
mov     eax, [esp+0a4h+var_78]
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+10h]
mov     edx, [eax]
mov     [esp+98h+var_6c], ecx
mov     ecx, [eax+8]
mov     eax, esi
mov     [esp+98h+var_70], ecx
mov     [esp+98h+var_7c], edx
call    sub_10025c00
mov     [esp+98h+var_84], eax
mov     eax, [edi+8]
mov     [esp+98h+var_68], eax
test    eax, eax
jz      short loc_1003967b
mov     esi, eax
mov     ecx, 0ch
lea     edi, [esp+98h+var_60]
rep movsd
lea     ecx, [esp+98h+var_80]
push    ecx
mov     ecx, eax
mov     esi, ebx
call    sub_10039950
mov     edi, [ebp+arg_4]
mov     esi, [esp+9ch+var_88]
mov     [esp+9ch+var_48], eax
lea     edx, [esp+9ch+var_60]
lea     eax, [esp+9ch+var_30]
add     esp, 4
mov     [esp+98h+var_60], 84h
mov     [esp+98h+var_30], 4ch
mov     [esp+98h+var_28], edx
mov     [esp+98h+var_6c], eax
mov     eax, [esp+98h+var_7c]
test    eax, eax
jle     loc_100397b9
mov     edi, [esp+98h+var_70]
dec     eax
shr     eax, 1
inc     eax
mov     [esp+98h+var_7c], edi
mov     [esp+98h+var_70], eax
jmp     short loc_100396a4
mov     edi, [esp+98h+var_7c]
inc     dword ptr [ebx+5ch]
cmp     [esp+98h+var_68], 0
jz      short loc_100396b6
mov     ecx, [edi]
mov     [esp+98h+var_24], ecx
jmp     short loc_100396bc
mov     edx, [edi]
mov     [esp+98h+var_6c], edx
mov     eax, [esp+98h+var_88]
mov     esi, [eax+24h]
lea     edx, [esi-1]
lea     ecx, [esi+1]
mov     [eax+24h], ecx
test    esi, edx
jnz     short loc_1003970c
mov     ebx, [eax+28h]
mov     edi, [eax]
lea     eax, ds:4[esi*8]
push    eax
mov     eax, edi
call    sub_10009ac0
add     esp, 4
mov     [esp+98h+var_64], eax
test    eax, eax
jnz     short loc_100396fc
mov     eax, ebx
mov     ecx, edi
call    sub_10009810
mov     eax, [esp+98h+var_64]
mov     ecx, [esp+98h+var_88]
mov     ebx, [ebp+arg_0]
mov     edi, [esp+98h+var_7c]
mov     [ecx+28h], eax
mov     eax, ecx
mov     eax, [eax+28h]
test    eax, eax
jz      short loc_1003971a
mov     dword ptr [eax+esi*4], 0ffffffffh
mov     edx, [esp+98h+var_6c]
or      eax, 0ffffffffh
sub     eax, esi
push    8
push    eax
push    edx
push    ebx
mov     [esp+0a8h+var_64], eax
call    sub_1003a1c0
mov     esi, [ebp+arg_8]
mov     eax, [edi+14h]
add     esp, 10h
mov     ecx, ebx
call    sub_100399d0
mov     eax, [esp+98h+var_88]
mov     esi, [eax+1ch]
mov     edi, eax
cmp     [eax+20h], esi
jg      short loc_10039758
call    sub_10025810
test    eax, eax
jnz     short loc_10039781
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [esp+98h+var_84]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     esi, esi
mov     byte ptr [eax+3], 0
mov     [eax+4], esi
mov     [eax+8], edx
mov     [eax+0ch], esi
mov     [eax+10h], esi
mov     word ptr [eax], 1
jmp     short loc_10039783
xor     esi, esi
mov     eax, ebx
call    sub_100385f0
mov     eax, [edi+28h]
cmp     eax, esi
jz      short loc_100397a3
mov     ecx, [esp+98h+var_64]
lea     edx, ds:4[ecx*4]
mov     ecx, [edi+1ch]
sub     eax, edx
mov     [eax], ecx
add     [esp+98h+var_7c], 28h
dec     [esp+98h+var_70]
jnz     loc_100396a0
mov     edi, [ebp+arg_4]
mov     esi, [esp+98h+var_88]
cmp     dword ptr [edi+0ch], 0
jz      short loc_100397db
mov     edx, [ebp+arg_4]
inc     dword ptr [ebx+5ch]
mov     esi, [ebp+arg_8]
mov     eax, [edx+0ch]
mov     ecx, ebx
call    sub_100399d0
mov     eax, ebx
call    sub_100385f0
jmp     short loc_10039817
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_100397f2
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10039817
mov     esi, [esp+98h+var_88]
mov     edx, [esi+4]
xor     ecx, ecx
inc     dword ptr [esi+1ch]
lea     eax, [ebx+ebx*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+arg_8]
mov     [eax+3], cl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0ah
mov     eax, [esp+98h+var_88]
mov     eax, [eax+28h]
test    eax, eax
jz      loc_10038f00
mov     ecx, [esp+98h+var_84]
lea     edx, ds:4[ecx*4]
mov     ecx, [esp+98h+var_88]
sub     eax, edx
mov     edx, [ecx+1ch]
mov     [eax], edx
mov     eax, [esp+98h+var_78]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
jmp     loc_10038ecf
mov     eax, [esp+98h+var_78]
pop     edi
pop     esi
mov     byte ptr [ecx+8], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     al, [esi+13h]
push    edi
test    al, al
jnz     short loc_10039963
inc     dword ptr [esi+4ch]
mov     edi, [esi+4ch]
jmp     short loc_1003996f
dec     al
mov     [esi+13h], al
movzx   eax, al
mov     edi, [esi+eax*4+1ch]
push    edi
push    ecx
push    esi
call    sub_10038b70
add     esp, 0ch
cmp     eax, edi
jnz     short loc_10039986
mov     edx, [ebp+arg_0]
mov     [edx], edi
pop     edi
pop     ebp
retn
test    edi, edi
jz      short loc_100399b1
push    ebx
mov     bl, [esi+13h]
cmp     bl, 8
jnb     short loc_100399b0
xor     ecx, ecx
lea     edx, [esi+64h]
cmp     [edx+10h], edi
jz      short loc_100399bd
inc     ecx
add     edx, 18h
cmp     ecx, 0ah
jl      short loc_10039998
movzx   ecx, bl
mov     [esi+ecx*4+1ch], edi
inc     byte ptr [esi+13h]
pop     ebx
mov     edx, [ebp+arg_0]
mov     dword ptr [edx], 0
pop     edi
pop     ebp
retn
mov     byte ptr [edx+8], 1
mov     edx, [ebp+arg_0]
pop     ebx
mov     dword ptr [edx], 0
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    edi
mov     edi, ecx
test    eax, eax
jz      short loc_10039a2b
cmp     byte ptr [eax], 84h
jnz     short loc_10039a2b
mov     edi, [edi+8]
mov     ebx, [edi+1ch]
mov     eax, [eax+18h]
mov     [ebp+var_4], eax
cmp     [edi+20h], ebx
jg      short loc_100399fd
call    sub_10025810
test    eax, eax
jnz     short loc_10039a4f
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], esi
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0eh
mov     eax, esi
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
push    eax
push    edi
call    sub_10038b70
add     esp, 0ch
cmp     eax, esi
jz      short loc_10039a4f
mov     edi, [edi+8]
test    edi, edi
jz      short loc_10039a4f
push    esi
push    eax
push    0fh
mov     eax, edi
call    sub_10025990
add     esp, 0ch
pop     edi
mov     eax, esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, eax
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
push    edi
mov     edi, [ebx+8]
mov     ecx, ebx
call    sub_100399d0
mov     edx, eax
mov     eax, [ebp+arg_0]
cmp     byte ptr [eax], 84h
mov     [ebp+var_4], edx
jz      short loc_10039ad1
inc     dword ptr [ebx+4ch]
mov     esi, [ebx+4ch]
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_10039aa1
call    sub_10025810
mov     edx, [ebp+var_4]
test    eax, eax
jnz     short loc_10039ac3
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [eax+ecx*4]
xor     ecx, ecx
mov     [eax+3], cl
mov     [eax+4], edx
mov     [eax+8], esi
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0eh
mov     eax, [ebp+arg_0]
mov     cl, [eax]
mov     [eax+18h], esi
mov     [eax+23h], cl
mov     byte ptr [eax], 84h
pop     edi
pop     esi
mov     eax, edx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    esi
mov     esi, eax
lea     eax, [ebp+var_14]
push    esi
push    eax
mov     [ebp+var_4], 3
mov     [ebp+var_14], offset sub_10037090
mov     [ebp+var_10], offset sub_10037170
call    sub_10033e00
add     esp, 8
cmp     [ebp+var_4], 0
jz      short loc_10039b42
mov     ecx, 200h
test    [esi+2], cx
jz      short def_10039b3b
cmp     byte ptr [esi], 9dh
jnz     short loc_10039b29
mov     esi, [esi+8]
cmp     byte ptr [esi], 9dh
jz      short loc_10039b21
movzx   eax, byte ptr [esi]
add     eax, 0ffffffa2h
cmp     eax, 3eh
ja      short def_10039b3b
movzx   edx, ds:byte_10039b6c[eax]
jmp     ds:jpt_10039b3b[edx*4]
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+8]
mov     al, [eax]
cmp     al, 82h
jz      short loc_10039b42
cmp     al, 81h
jz      short loc_10039b42
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [eax+8]
movzx   eax, byte ptr [ebx]
add     eax, 0ffffffb8h
push    edi
cmp     eax, 53h
ja      short def_10039bd1
movzx   ecx, ds:byte_10039c8c[eax]
jmp     ds:jpt_10039bd1[ecx*4]
pop     edi
pop     esi
mov     eax, 1
pop     ebx
pop     ebp
retn
mov     ecx, [ebx+10h]
test    ecx, ecx
jz      short def_10039bd1
mov     eax, [ecx]
mov     edx, [ecx+8]
test    eax, eax
jle     short def_10039bd1
mov     ecx, [edx]
test    ecx, ecx
jz      short loc_10039c01
mov     edi, 200h
or      [ecx+2], di
dec     eax
add     edx, 14h
test    eax, eax
jg      short loc_10039bf2
mov     eax, ebx
call    sub_10039ae0
test    eax, eax
jz      short loc_10039c76
inc     dword ptr [esi+4ch]
mov     edi, [esi+4ch]
push    edi
push    ebx
push    esi
call    sub_10038b70
add     esp, 0ch
mov     [ebp+arg_0], eax
cmp     edi, eax
jz      short loc_10039c58
test    edi, edi
jz      short loc_10039c58
mov     al, [esi+13h]
cmp     al, 8
jnb     short loc_10039c58
xor     ecx, ecx
lea     edx, [esi+64h]
lea     esp, [esp+0]
cmp     [edx+10h], edi
jz      short loc_10039c70
inc     ecx
add     edx, 18h
cmp     ecx, 0ah
jl      short loc_10039c40
movzx   edx, al
mov     [esi+edx*4+1ch], edi
inc     byte ptr [esi+13h]
mov     al, [ebx]
mov     ecx, [ebp+arg_0]
pop     edi
mov     [ebx+23h], al
pop     esi
mov     byte ptr [ebx], 84h
mov     [ebx+18h], ecx
mov     eax, 1
pop     ebx
pop     ebp
retn
mov     byte ptr [edx+8], 1
jmp     short loc_10039c58
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     ecx, [eax]
mov     eax, [eax+8]
push    ebx
push    esi
push    edi
mov     [ebp+var_10], ecx
mov     [ebp+var_4], eax
test    ecx, ecx
jle     short loc_10039d76
mov     ebx, edx
mov     [ebp+var_8], ecx
lea     ecx, [ecx+0]
mov     eax, [eax]
mov     esi, [ebp+arg_0]
push    ebx
push    eax
push    esi
call    sub_10038b70
mov     ecx, eax
add     esp, 0ch
mov     [ebp+var_c], ecx
cmp     ecx, ebx
jz      short loc_10039d5d
mov     edi, [esi+8]
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10039d30
call    sub_10025810
test    eax, eax
jnz     short loc_10039d5d
mov     ecx, [ebp+var_c]
inc     dword ptr [edi+1ch]
mov     edx, [edi+4]
lea     eax, [esi+esi*4]
lea     eax, [edx+eax*4]
xor     esi, esi
cmp     [ebp+arg_4], esi
mov     byte ptr [eax+3], 0
setz    dl
add     dl, 0eh
mov     [eax], dl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], esi
mov     [eax+10h], esi
mov     byte ptr [eax+1], 0
mov     eax, [ebp+var_4]
add     eax, 14h
inc     ebx
dec     [ebp+var_8]
mov     [ebp+var_4], eax
jnz     short loc_10039d00
mov     eax, [ebp+var_10]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0cch
push    esi
mov     esi, [eax+8]
mov     eax, [eax+10h]
push    edi
mov     ecx, 0ch
lea     edi, [ebp+var_38]
rep movsd
lea     ecx, [ebp+var_98]
mov     [ebp+var_60], ecx
mov     [ebp+var_68], 45h
mov     [ebp+var_98], 50h
lea     edx, [ebp+var_c8]
mov     [ebp+var_5c], edx
lea     ecx, [ebp+var_38]
mov     [ebp+var_90], ecx
mov     edx, [eax+8]
mov     ecx, [edx]
mov     [ebp+var_8c], ecx
lea     edx, [ebp+var_38]
mov     [ebp+var_c0], edx
mov     [ebp+var_c8], 4eh
mov     eax, [eax+8]
mov     ecx, [eax+14h]
lea     edx, [ebp+var_8]
mov     [ebp+var_bc], ecx
push    edx
lea     ecx, [ebp+var_38]
mov     esi, ebx
mov     [ebp+var_8], 0
call    sub_10039950
mov     ecx, [ebp+arg_0]
add     esp, 4
cmp     [ebp+arg_4], 0
mov     [ebp+var_20], eax
mov     eax, [ebp+arg_8]
push    eax
push    ecx
lea     edx, [ebp+var_68]
push    edx
mov     [ebp+var_38], 84h
push    ebx
jz      short loc_10039e21
call    sub_10039e70
jmp     short loc_10039e26
call    sub_1003a1c0
mov     esi, [ebp+var_8]
add     esp, 10h
test    esi, esi
jz      short loc_10039e5a
cmp     byte ptr [ebx+13h], 8
jnb     short loc_10039e5a
xor     eax, eax
lea     ecx, [ebx+64h]
lea     edx, [eax+1]
mov     edi, edi
cmp     [ecx+10h], esi
jz      short loc_10039e60
add     eax, edx
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10039e40
movzx   eax, byte ptr [ebx+13h]
mov     [ebx+eax*4+1ch], esi
add     [ebx+13h], dl
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
pop     edi
mov     [ecx+8], dl
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, [esi+8]
xor     eax, eax
push    edi
mov     [esp+18h+var_c], eax
mov     [esp+18h+var_4], eax
cmp     ebx, eax
jz      loc_1003a0f8
mov     edi, [ebp+arg_4]
cmp     edi, eax
jz      loc_1003a0f8
movzx   eax, byte ptr [edi]
mov     [esp+18h+var_8], eax
add     eax, 0ffffffedh
cmp     eax, 7fh
ja      def_10039eb9
movzx   eax, ds:byte_1003a134[eax]
jmp     ds:jpt_10039eb9[eax*4]
mov     eax, ebx
call    sub_10025c00
mov     ecx, [ebp+arg_c]
inc     dword ptr [esi+5ch]
mov     edx, [edi+8]
xor     ecx, 8
push    ecx
push    eax
push    edx
push    esi
mov     [esp+28h+var_4], eax
call    sub_1003a1c0
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
mov     edx, [edi+0ch]
push    eax
push    ecx
push    edx
push    esi
call    sub_10039e70
mov     edx, [esp+38h+var_4]
add     esp, 20h
mov     ecx, ebx
call    sub_10025c70
mov     eax, esi
call    sub_100385f0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [ebp+arg_c]
mov     eax, [ebp+arg_8]
mov     ecx, [edi+8]
push    ebx
push    eax
push    ecx
push    esi
call    sub_10039e70
mov     edx, [ebp+arg_8]
mov     eax, [edi+0ch]
push    ebx
push    edx
push    eax
push    esi
call    sub_10039e70
add     esp, 20h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
mov     eax, [edi+8]
push    ecx
push    edx
push    eax
push    esi
call    sub_1003a1c0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [esp+18h+var_c]
push    ecx
mov     ecx, [edi+8]
call    sub_10039950
mov     ecx, [edi+0ch]
lea     edx, [esp+1ch+var_4]
add     esp, 4
push    edx
mov     ebx, eax
call    sub_10039950
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
add     esp, 4
push    ecx
mov     ecx, [edi+8]
push    edx
push    eax
mov     eax, [esp+24h+var_8]
push    ebx
push    eax
mov     eax, [edi+0ch]
push    esi
call    sub_10035aa0
add     esp, 18h
jmp     loc_1003a09b
lea     ecx, [esp+18h+var_c]
push    ecx
mov     ecx, [edi+8]
call    sub_10039950
mov     ecx, [edi+0ch]
lea     edx, [esp+1ch+var_4]
add     esp, 4
push    edx
mov     ebx, eax
call    sub_10039950
mov     ecx, [ebp+arg_8]
add     esp, 4
xor     edx, edx
cmp     [esp+18h+var_8], 46h
push    80h
push    ecx
mov     ecx, [edi+8]
setz    dl
push    eax
mov     eax, [edi+0ch]
push    ebx
add     edx, 4bh
push    edx
push    esi
call    sub_10035aa0
add     esp, 18h
jmp     loc_1003a09b
mov     ecx, [edi+8]
lea     eax, [esp+18h+var_c]
push    eax
call    sub_10039950
mov     ecx, [ebp+arg_8]
mov     edx, [esp+1ch+var_8]
add     esp, 4
push    ecx
push    eax
push    edx
mov     eax, ebx
call    sub_10025990
add     esp, 0ch
jmp     loc_1003a09b
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
push    eax
push    1
push    ecx
mov     eax, edi
mov     ebx, esi
call    sub_10039d80
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, ebx
call    sub_10025c00
cmp     [ebp+arg_c], 0
mov     ecx, [ebp+arg_8]
mov     [esp+18h+var_4], eax
jnz     short loc_1003a045
mov     ecx, eax
push    ecx
push    eax
push    edi
push    esi
call    sub_10037d10
mov     edx, [ebp+arg_8]
push    edx
push    0
push    1
mov     eax, ebx
call    sub_10025990
mov     edx, [esp+34h+var_4]
add     esp, 1ch
mov     ecx, ebx
call    sub_10025c70
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     eax, [esp+18h+var_c]
push    eax
mov     ecx, edi
call    sub_10039950
mov     edx, [ebp+arg_8]
add     esp, 4
xor     ecx, ecx
cmp     [ebp+arg_c], ecx
setnz   cl
push    ecx
push    edx
push    eax
push    1bh
mov     eax, ebx
call    sub_10025890
add     esp, 10h
mov     edx, [esp+18h+var_c]
test    edx, edx
jz      short loc_1003a0c8
mov     bl, [esi+13h]
cmp     bl, 8
jnb     short loc_1003a0c8
xor     eax, eax
lea     ecx, [esi+64h]
cmp     [ecx+10h], edx
jz      short loc_1003a0ff
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1003a0b0
movzx   eax, bl
mov     [esi+eax*4+1ch], edx
inc     byte ptr [esi+13h]
mov     edx, [esp+18h+var_4]
test    edx, edx
jz      short loc_1003a0f8
mov     bl, [esi+13h]
cmp     bl, 8
jnb     short loc_1003a0f8
xor     eax, eax
lea     ecx, [esi+64h]
lea     ecx, [ecx+0]
cmp     [ecx+10h], edx
jz      short loc_1003a105
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1003a0e0
movzx   ecx, bl
mov     [esi+ecx*4+1ch], edx
inc     byte ptr [esi+13h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
jmp     short loc_1003a0c8
pop     edi
pop     esi
mov     byte ptr [ecx+8], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, [esi+8]
xor     edx, edx
push    edi
mov     [esp+18h+var_c], edx
mov     [esp+18h+var_8], edx
cmp     ebx, edx
jz      loc_1003a44d
mov     edi, [ebp+arg_4]
cmp     edi, edx
jz      loc_1003a44d
movzx   ecx, byte ptr [edi]
lea     eax, [ecx+1]
xor     eax, 1
dec     eax
mov     [esp+18h+var_4], eax
lea     eax, [ecx-13h]
cmp     eax, 7fh
ja      def_1003a210
movzx   eax, ds:byte_1003a48c[eax]
jmp     ds:jpt_1003a210[eax*4]
mov     ebx, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
mov     edx, [edi+8]
push    ebx
push    ecx
push    edx
push    esi
call    sub_1003a1c0
mov     eax, [ebp+arg_8]
mov     ecx, [edi+0ch]
push    ebx
push    eax
push    ecx
push    esi
call    sub_1003a1c0
add     esp, 20h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, ebx
call    sub_10025c00
mov     edx, [ebp+arg_c]
inc     dword ptr [esi+5ch]
xor     edx, 8
push    edx
push    eax
mov     [esp+20h+var_4], eax
mov     eax, [edi+8]
push    eax
push    esi
call    sub_10039e70
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
mov     eax, [edi+0ch]
push    ecx
push    edx
push    eax
push    esi
call    sub_1003a1c0
mov     edx, [esp+38h+var_4]
add     esp, 20h
mov     ecx, ebx
call    sub_10025c70
mov     eax, esi
call    sub_100385f0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
mov     eax, [edi+8]
push    ecx
push    edx
push    eax
push    esi
call    sub_10039e70
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [esp+18h+var_c]
push    ecx
mov     ecx, [edi+8]
call    sub_10039950
mov     ecx, [edi+0ch]
lea     edx, [esp+1ch+var_8]
add     esp, 4
push    edx
mov     ebx, eax
call    sub_10039950
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
add     esp, 4
push    ecx
mov     ecx, [edi+8]
push    edx
push    eax
mov     eax, [esp+24h+var_4]
push    ebx
push    eax
mov     eax, [edi+0ch]
push    esi
call    sub_10035aa0
add     esp, 18h
jmp     loc_1003a3f3
lea     ecx, [esp+18h+var_c]
push    ecx
mov     ecx, [edi+8]
call    sub_10039950
mov     ecx, [edi+0ch]
lea     edx, [esp+1ch+var_8]
add     esp, 4
push    edx
mov     ebx, eax
call    sub_10039950
mov     ecx, [ebp+arg_8]
add     esp, 4
xor     edx, edx
cmp     byte ptr [edi], 46h
push    80h
push    ecx
mov     ecx, [edi+8]
setnz   dl
push    eax
mov     eax, [edi+0ch]
push    ebx
add     edx, 4bh
push    edx
push    esi
call    sub_10035aa0
add     esp, 18h
jmp     loc_1003a3f3
mov     ecx, [edi+8]
lea     eax, [esp+18h+var_c]
push    eax
call    sub_10039950
mov     ecx, [ebp+arg_8]
mov     edx, [esp+1ch+var_4]
add     esp, 4
push    ecx
push    eax
push    edx
mov     eax, ebx
call    sub_10025990
add     esp, 0ch
jmp     loc_1003a3f3
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
push    eax
push    edx
push    ecx
mov     eax, edi
mov     ebx, esi
call    sub_10039d80
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_c], edx
jz      short loc_1003a39e
mov     eax, [ebp+arg_8]
push    eax
push    eax
push    edi
push    esi
call    sub_10037d10
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, ebx
call    sub_10025c00
mov     edx, [ebp+arg_8]
push    eax
push    edx
push    edi
push    esi
mov     [esp+28h+var_4], eax
call    sub_10037d10
mov     edx, [esp+28h+var_4]
add     esp, 10h
mov     ecx, ebx
call    sub_10025c70
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     eax, [esp+18h+var_c]
push    eax
mov     ecx, edi
call    sub_10039950
mov     edx, [ebp+arg_8]
add     esp, 4
xor     ecx, ecx
cmp     [ebp+arg_c], ecx
setnz   cl
push    ecx
push    edx
push    eax
push    1ch
mov     eax, ebx
call    sub_10025890
add     esp, 10h
mov     edx, [esp+18h+var_c]
test    edx, edx
jz      short loc_1003a420
mov     bl, [esi+13h]
cmp     bl, 8
jnb     short loc_1003a420
xor     eax, eax
lea     ecx, [esi+64h]
cmp     [ecx+10h], edx
jz      short loc_1003a454
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1003a408
movzx   eax, bl
mov     [esi+eax*4+1ch], edx
inc     byte ptr [esi+13h]
mov     edx, [esp+18h+var_8]
test    edx, edx
jz      short loc_1003a44d
mov     bl, [esi+13h]
cmp     bl, 8
jnb     short loc_1003a44d
xor     eax, eax
lea     ecx, [esi+64h]
cmp     [ecx+10h], edx
jz      short loc_1003a45a
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1003a435
movzx   ecx, bl
mov     [esi+ecx*4+1ch], edx
inc     byte ptr [esi+13h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
jmp     short loc_1003a420
pop     edi
pop     esi
mov     byte ptr [ecx+8], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
test    ebx, ebx
jz      loc_1003a67c
test    esi, esi
jz      loc_1003a67c
movzx   ecx, word ptr [ebx+2]
test    ecx, 800h
jnz     loc_1003a673
movzx   eax, word ptr [esi+2]
test    eax, 800h
jnz     loc_1003a673
xor     al, cl
test    al, 10h
jnz     loc_1003a673
mov     al, [ebx]
cmp     al, [esi]
jnz     loc_1003a673
mov     ecx, [esi+8]
mov     edx, [ebx+8]
push    ecx
push    edx
call    sub_1003a510
add     esp, 8
test    eax, eax
jnz     loc_1003a673
mov     eax, [esi+0ch]
mov     ecx, [ebx+0ch]
push    eax
push    ecx
call    sub_1003a510
add     esp, 8
test    eax, eax
jnz     loc_1003a673
mov     edx, [esi+10h]
push    edi
mov     edi, [ebx+10h]
push    edx
call    sub_1003a690
add     esp, 4
test    eax, eax
jnz     short loc_1003a5db
mov     eax, [ebx+18h]
cmp     eax, [esi+18h]
jnz     short loc_1003a5db
mov     cx, [ebx+1ch]
cmp     cx, [esi+1ch]
jnz     short loc_1003a5db
movzx   edi, word ptr [ebx+2]
test    edi, 400h
jz      short loc_1003a5e5
mov     dx, [esi+2]
mov     eax, 400h
and     dx, ax
mov     ecx, eax
cmp     dx, cx
jnz     short loc_1003a5db
mov     edx, [ebx+4]
cmp     edx, [esi+4]
jz      short loc_1003a639
pop     edi
pop     esi
mov     eax, 2
pop     ebx
pop     ebp
retn
mov     al, [ebx]
cmp     al, 98h
jz      short loc_1003a639
cmp     al, 9ah
jz      short loc_1003a639
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_1003a639
mov     cx, [esi+2]
mov     edx, 400h
and     cx, dx
cmp     cx, dx
jz      short loc_1003a5db
mov     ecx, [esi+4]
test    ecx, ecx
jz      short loc_1003a5db
mov     edi, edi
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_1003a630
test    dl, dl
jz      short loc_1003a62c
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_1003a630
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_1003a610
xor     eax, eax
jmp     short loc_1003a635
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     short loc_1003a5db
mov     cx, [esi+2]
mov     eax, edi
mov     edx, 100h
and     eax, 100h
and     cx, dx
cmp     ax, cx
jz      short loc_1003a65b
pop     edi
pop     esi
mov     eax, 1
pop     ebx
pop     ebp
retn
test    ax, ax
jz      short loc_1003a66c
mov     eax, [ebx+14h]
cmp     eax, [esi+14h]
jnz     loc_1003a5db
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
pop     esi
mov     eax, 2
pop     ebx
pop     ebp
retn
mov     eax, esi
sub     eax, ebx
neg     eax
sbb     eax, eax
pop     esi
and     eax, 2
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
push    esi
xor     esi, esi
cmp     edi, esi
jnz     short loc_1003a6a9
cmp     ecx, esi
jnz     short loc_1003a6b3
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     ecx, esi
jz      short loc_1003a6b3
mov     eax, [edi]
cmp     eax, [ecx]
jz      short loc_1003a6bd
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     [ebp+var_4], esi
cmp     eax, esi
jg      short loc_1003a6d3
pop     ebx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_0]
mov     eax, [edi+8]
mov     edx, [eax+esi]
mov     ecx, [ecx+8]
mov     al, [eax+esi+0ch]
mov     ebx, [ecx+esi]
cmp     al, [ecx+esi+0ch]
jnz     short loc_1003a70d
push    ebx
push    edx
call    sub_1003a510
add     esp, 8
test    eax, eax
jnz     short loc_1003a70d
mov     eax, [ebp+var_4]
inc     eax
add     esi, 14h
mov     [ebp+var_4], eax
cmp     eax, [edi]
jl      short loc_1003a6d0
pop     ebx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
pop     ebx
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_4]
mov     al, [edi]
cmp     al, 98h
jz      short loc_1003a731
cmp     al, 9ah
jnz     short loc_1003a76d
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [eax+10h]
mov     edx, [esi]
movsx   ecx, word ptr [edx]
xor     eax, eax
test    ecx, ecx
jle     short loc_1003a75c
mov     edi, [edi+18h]
add     edx, 24h
lea     esp, [esp+0]
cmp     edi, [edx]
jz      short loc_1003a75c
inc     eax
add     edx, 3ch
cmp     eax, ecx
jl      short loc_1003a750
cmp     eax, ecx
jge     short loc_1003a769
inc     dword ptr [esi+4]
pop     esi
xor     eax, eax
pop     edi
pop     ebp
retn
inc     dword ptr [esi+8]
pop     esi
xor     eax, eax
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
xor     eax, eax
mov     [ebp+var_20], eax
mov     [ebp+var_10], eax
mov     [ebp+var_1c], eax
mov     [ebp+var_18], eax
mov     [ebp+var_14], eax
lea     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [edx+10h]
push    esi
push    edi
mov     [ebp+var_20], offset sub_1003a720
mov     [ebp+var_c], ecx
mov     [ebp+var_8], 0
mov     [ebp+var_4], 0
test    eax, eax
jz      short loc_1003a7f6
mov     esi, [eax]
mov     edi, [eax+8]
test    esi, esi
jle     short loc_1003a7f6
mov     eax, [edi]
push    eax
lea     ecx, [ebp+var_20]
push    ecx
call    sub_10033e00
add     esp, 8
test    eax, eax
jnz     short loc_1003a7e2
dec     esi
add     edi, 14h
test    esi, esi
jg      short loc_1003a7c7
cmp     [ebp+var_8], 0
jg      short loc_1003a7f6
cmp     [ebp+var_4], 0
jz      short loc_1003a7f6
pop     edi
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
pop     edi
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [edi+20h]
push    esi
mov     esi, [edi+24h]
lea     eax, [esi-1]
test    esi, eax
jnz     short loc_1003a84d
mov     eax, 1
test    esi, esi
jz      short loc_1003a82e
lea     eax, [esi+esi]
shl     eax, 4
push    eax
mov     eax, [ebp+arg_0]
call    sub_10009ac0
add     esp, 4
test    eax, eax
jnz     short loc_1003a84b
pop     esi
mov     [edi+20h], ebx
or      eax, 0ffffffffh
pop     ebx
pop     ebp
retn
mov     ebx, eax
mov     eax, esi
xor     ecx, ecx
shl     eax, 4
add     eax, ebx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
inc     dword ptr [edi+24h]
mov     eax, esi
pop     esi
mov     [edi+20h], ebx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx+10h]
mov     ecx, [eax]
mov     [ebp+arg_0], ecx
movzx   ecx, byte ptr [edx]
sub     ecx, 98h
push    esi
mov     esi, [eax+0ch]
push    edi
mov     edi, [eax+4]
jz      loc_1003a9e6
dec     ecx
jz      short loc_1003a8af
dec     ecx
jz      loc_1003a9e6
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    byte ptr [eax+1ch], 8
jnz     loc_1003ab41
movzx   eax, byte ptr [edx+23h]
cmp     [ebx+0ch], eax
jnz     loc_1003ab41
mov     ebx, [esi+20h]
xor     edi, edi
cmp     edi, [esi+24h]
jge     short loc_1003a8fa
jmp     short loc_1003a8d5
mov     edx, [ebp+arg_4]
mov     ecx, [ebx]
push    edx
push    ecx
call    sub_1003a510
add     esp, 8
test    eax, eax
jz      short loc_1003a8ee
inc     edi
add     ebx, 10h
cmp     edi, [esi+24h]
jl      short loc_1003a8d2
mov     edx, [ebp+arg_4]
cmp     edi, [esi+24h]
jl      loc_1003a9d3
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     ecx, [eax+10h]
mov     edx, [ecx+0ch]
mov     cl, [edx+4dh]
push    eax
mov     edi, esi
mov     byte ptr [ebp+var_c], cl
call    sub_1003a810
add     esp, 4
mov     [ebp+var_4], eax
test    eax, eax
js      loc_1003a9cd
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
mov     ebx, eax
shl     ebx, 4
add     ebx, [esi+20h]
mov     [ebx], ecx
inc     dword ptr [edx+4ch]
mov     eax, [edx+4ch]
mov     [ebx+8], eax
mov     eax, [ecx+10h]
test    eax, eax
jz      short loc_1003a948
mov     eax, [eax]
mov     [ebp+var_8], eax
jmp     short loc_1003a94f
mov     [ebp+var_8], 0
mov     ecx, [ecx+4]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1003a96d
cmp     byte ptr [ecx], 0
jz      short loc_1003a966
lea     ecx, [ecx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003a960
sub     eax, ecx
and     eax, 3fffffffh
mov     edi, [ebp+var_c]
push    0
push    edi
mov     edi, [ebp+var_8]
push    edi
push    ecx
mov     ecx, [edx]
push    ecx
mov     edi, eax
call    sub_100447c0
mov     edx, [ebp+arg_4]
mov     edi, [ebp+var_4]
add     esp, 14h
mov     [ebx+4], eax
test    byte ptr [edx+2], 10h
jz      short loc_1003a9b3
mov     eax, [ebp+arg_0]
mov     ecx, [eax+48h]
mov     [ebx+0ch], ecx
inc     dword ptr [eax+48h]
mov     [edx+1eh], di
pop     edi
mov     [edx+24h], esi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dword ptr [ebx+0ch], 0ffffffffh
mov     [edx+1eh], di
pop     edi
mov     [edx+24h], esi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+var_4]
mov     edx, [ebp+arg_4]
mov     [edx+1eh], di
pop     edi
mov     [edx+24h], esi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    edi, edi
jz      loc_1003ab41
movsx   ebx, word ptr [edi]
xor     eax, eax
test    ebx, ebx
jle     loc_1003ab41
lea     ecx, [edi+24h]
mov     edi, edi
mov     edi, [edx+18h]
cmp     edi, [ecx]
jz      short loc_1003aa1b
inc     eax
add     ecx, 3ch
cmp     eax, ebx
jl      short loc_1003aa00
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+14h]
xor     ecx, ecx
cmp     ecx, [esi+18h]
jge     short loc_1003aa47
add     eax, 8
cmp     [eax-4], edi
jnz     short loc_1003aa35
movsx   ebx, word ptr [edx+1ch]
cmp     [eax], ebx
jz      short loc_1003aa3e
inc     ecx
add     eax, 18h
cmp     ecx, [esi+18h]
jl      short loc_1003aa28
cmp     ecx, [esi+18h]
jl      loc_1003ab37
mov     edi, [esi+18h]
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     ebx, [esi+14h]
lea     ecx, [edi-1]
test    edi, ecx
jnz     short loc_1003aa82
mov     ecx, 1
test    edi, edi
jz      short loc_1003aa65
lea     ecx, [edi+edi]
lea     edx, [ecx+ecx*2]
add     edx, edx
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
add     esp, 4
test    eax, eax
jnz     short loc_1003aa80
or      edi, 0ffffffffh
jmp     short loc_1003aa9e
mov     ebx, eax
xor     eax, eax
lea     ecx, [edi+edi*2]
lea     ecx, [ebx+ecx*8]
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+14h], eax
inc     dword ptr [esi+18h]
mov     [esi+14h], ebx
mov     [ebp+var_8], edi
test    edi, edi
js      loc_1003ab31
mov     ecx, [ebp+arg_4]
lea     edx, [edi+edi*2]
lea     eax, [ebx+edx*8]
mov     edx, [ecx+28h]
mov     [eax], edx
mov     edx, [ecx+18h]
mov     [eax+4], edx
movsx   edx, word ptr [ecx+1ch]
mov     [eax+8], edx
mov     edx, [ebp+arg_0]
inc     dword ptr [edx+4ch]
mov     edx, [edx+4ch]
mov     [eax+10h], edx
mov     dword ptr [eax+0ch], 0ffffffffh
mov     [eax+14h], ecx
mov     edx, [esi+10h]
test    edx, edx
jz      short loc_1003ab22
mov     edi, [edx+8]
mov     [ebp+arg_0], edi
mov     edi, [edx]
xor     edx, edx
mov     [ebp+var_c], edi
test    edi, edi
jle     short loc_1003ab22
mov     ebx, [ebp+arg_0]
mov     ebx, [ebx]
cmp     byte ptr [ebx], 98h
jnz     short loc_1003ab14
mov     edi, [ebx+18h]
cmp     edi, [ecx+18h]
jnz     short loc_1003ab11
mov     di, [ebx+1ch]
cmp     di, [ecx+1ch]
jz      short loc_1003ab1f
mov     edi, [ebp+var_c]
add     [ebp+arg_0], 14h
inc     edx
cmp     edx, edi
jl      short loc_1003aaf5
jmp     short loc_1003ab22
mov     [eax+0ch], edx
cmp     dword ptr [eax+0ch], 0
jge     short loc_1003ab31
mov     ecx, [esi+0ch]
mov     [eax+0ch], ecx
inc     dword ptr [esi+0ch]
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+var_8]
mov     byte ptr [edx], 9ah
mov     [edx+1eh], cx
mov     [edx+24h], esi
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
xor     eax, eax
mov     [ebp+var_14], eax
mov     [ebp+var_10], eax
mov     [ebp+var_4], eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ecx
lea     edx, [ebp+var_14]
push    edx
mov     [ebp+var_14], offset sub_1003a870
mov     [ebp+var_10], offset sub_10008f30
mov     [ebp+var_4], eax
call    sub_10033e00
add     esp, 8
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
test    ebx, ebx
jz      short loc_1003abe3
push    esi
xor     esi, esi
push    edi
mov     edi, [ebx+8]
cmp     [ebx], esi
jle     short loc_1003abe1
mov     ecx, [edi]
xor     eax, eax
mov     [ebp+var_14], eax
mov     [ebp+var_10], eax
mov     [ebp+var_4], eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ecx
lea     edx, [ebp+var_14]
push    edx
mov     [ebp+var_14], offset sub_1003a870
mov     [ebp+var_10], offset sub_10008f30
mov     [ebp+var_4], eax
call    sub_10033e00
inc     esi
add     esp, 8
add     edi, 14h
cmp     esi, [ebx]
jl      short loc_1003aba5
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     al, [ecx+13h]
test    al, al
jnz     short loc_1003abff
mov     eax, [ecx+4ch]
inc     eax
mov     [ecx+4ch], eax
retn
dec     al
mov     [ecx+13h], al
movzx   eax, al
mov     eax, [ecx+eax*4+1ch]
retn
test    esi, esi
jz      short locret_1003ac39
cmp     byte ptr [edx+13h], 8
jnb     short locret_1003ac39
xor     eax, eax
lea     ecx, [edx+64h]
nop
cmp     [ecx+10h], esi
jz      short loc_1003ac3a
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1003ac20
movzx   eax, byte ptr [edx+13h]
mov     [edx+eax*4+1ch], esi
inc     byte ptr [edx+13h]
retn
mov     byte ptr [ecx+8], 1
retn
mov     edx, [ecx+3ch]
mov     eax, [ecx+40h]
cmp     esi, edx
jg      short loc_1003ac58
push    edi
lea     edi, [eax+esi]
sub     edx, esi
mov     [ecx+40h], edi
mov     [ecx+3ch], edx
pop     edi
retn
mov     edx, [ecx+4ch]
lea     eax, [edx+1]
add     edx, esi
mov     [ecx+4ch], edx
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_8]
push    ebx
push    esi
push    edi
mov     edi, [eax]
mov     bl, 1
call    sub_100253e0
mov     ecx, [ebp+arg_8]
mov     edi, [ecx+4]
mov     esi, eax
call    sub_100253e0
mov     [ebp+var_4], eax
xor     eax, eax
mov     edi, esi
test    esi, esi
jz      short loc_1003ad1a
lea     ecx, [ecx+0]
cmp     byte ptr [edi], 0
jz      short loc_1003ad1a
mov     ebx, edi
mov     [ebp+var_8], eax
lea     ebx, [ebx+0]
add     edi, eax
lea     edx, [ebp+arg_8]
push    edx
mov     ecx, edi
call    sub_1006dd20
mov     ecx, [ebp+arg_8]
add     esp, 4
cmp     ecx, 95h
jz      short loc_1003acb0
cmp     ecx, 16h
jz      short loc_1003acd5
cmp     ecx, 79h
jnz     short loc_1003aca0
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
add     eax, ebx
push    eax
push    ecx
push    esi
sub     ebx, esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
push    ebx
push    offset asws
push    eax
call    sub_1000ae80
push    1
push    eax
mov     eax, offset sub_10009760
or      ecx, 0ffffffffh
lea     edx, [esi+8]
call    sub_10024e60
add     esp, 20h
cmp     eax, 12h
jnz     short loc_1003ad1a
mov     edx, esi
push    edx
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, [ebp+arg_0]
push    ebx
add     eax, 8
push    esi
mov     esi, [eax]
mov     [ebp+var_18], eax
mov     eax, [ebp+size]
push    edi
mov     edi, [eax]
mov     bl, 1
mov     [ebp+var_4], 0
call    sub_100253e0
mov     ecx, [ebp+size]
mov     edi, [ecx+4]
mov     [ebp+var_8], eax
call    sub_100253e0
mov     edx, [ebp+size]
mov     edi, [edx+8]
mov     [ebp+var_10], eax
call    sub_100253e0
mov     ebx, [ebp+var_8]
cmp     byte ptr [ebx], 0
mov     [ebp+var_14], eax
jz      loc_1003ae66
lea     eax, [ebp+var_c]
push    eax
mov     ecx, ebx
call    sub_1006dd20
add     esp, 4
cmp     [ebp+var_c], 66h
jnz     loc_1003ae50
jmp     short loc_1003ada3
mov     eax, [ebp+size]
lea     ecx, [ebp+var_c]
add     ebx, eax
push    ecx
mov     ecx, ebx
call    sub_1006dd20
add     esp, 4
cmp     [ebp+var_c], 95h
mov     [ebp+size], eax
jz      short loc_1003ada0
test    ebx, ebx
jz      loc_1003ae5b
mov     ecx, eax
inc     ecx
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      loc_1003ae5b
mov     edx, [ebp+size]
push    edx
push    ebx
push    edi
call    memcpy
mov     eax, [ebp+size]
add     esp, 0ch
mov     byte ptr [edi+eax], 0
call    sub_1000bbf0
mov     ecx, [ebp+var_10]
mov     edx, edi
call    sub_1000bca0
test    eax, eax
jnz     short loc_1003ae44
mov     ecx, [ebp+var_4]
test    ecx, ecx
jnz     short loc_1003ae0d
mov     ecx, offset dword_100796bc
mov     edx, [ebp+var_14]
mov     eax, [ebp+var_8]
push    edx
push    eax
mov     edx, ebx
sub     edx, eax
push    edx
push    ecx
push    offset assw
push    esi
call    sub_1000ae80
mov     [ebp+var_8], eax
mov     eax, [ebp+var_4]
add     esp, 18h
mov     ecx, esi
call    sub_10009810
mov     ecx, [ebp+size]
mov     eax, [ebp+var_8]
add     ecx, ebx
mov     [ebp+var_4], eax
mov     [ebp+var_8], ecx
mov     eax, edi
mov     ecx, esi
call    sub_10009810
mov     eax, [ebp+size]
add     ebx, eax
cmp     byte ptr [ebx], 0
jnz     loc_1003ad82
mov     ebx, [ebp+var_4]
test    ebx, ebx
jz      short loc_1003ae69
mov     eax, ebx
jmp     short loc_1003ae6e
mov     ebx, [ebp+var_4]
mov     eax, offset dword_100796bc
mov     edx, [ebp+var_8]
push    edx
push    eax
push    offset ass_3
push    esi
call    sub_1000ae80
mov     edi, [ebp+var_18]
push    1
push    eax
mov     eax, offset sub_10009760
or      ecx, 0ffffffffh
mov     edx, edi
call    sub_10024e60
add     esp, 18h
cmp     eax, 12h
jnz     loc_1003af20
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+38h], 12h
mov     eax, [edi]
test    eax, eax
jz      short loc_1003aeb4
mov     eax, [eax+48h]
jmp     short loc_1003aeb9
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_1003aece
nop
cmp     ds:byte_10079e6c[ebx], 0
jz      short loc_1003aece
inc     ebx
cmp     ebx, eax
jle     short loc_1003aec0
xor     ecx, ecx
mov     [ebp+size], 202h
push    edi
cmp     ecx, offset sub_10009760
jnz     short loc_1003aef5
call    sub_100247d0
mov     eax, offset byte_10079e6c
mov     [edi+4], eax
mov     [edi+24h], eax
mov     eax, [ebp+size]
jmp     short loc_1003af06
call    sub_100247d0
mov     dword ptr [edi+4], offset byte_10079e6c
mov     eax, 0a02h
mov     [edi+18h], ebx
mov     ebx, [ebp+var_4]
mov     dword ptr [edi+20h], 0
add     esp, 4
mov     [edi+1ch], ax
mov     word ptr [edi+1eh], 103h
test    esi, esi
jz      short loc_1003af9f
cmp     dword ptr [esi+1e8h], 0
jz      short loc_1003af70
test    ebx, ebx
jz      short loc_1003af57
cmp     ebx, [esi+0fch]
jb      short loc_1003af57
cmp     ebx, [esi+100h]
jnb     short loc_1003af57
movzx   eax, word ptr [esi+0e0h]
mov     esi, [esi+1e8h]
add     [esi], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
call    dword_10080258
mov     esi, [esi+1e8h]
add     esp, 4
add     [esi], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    ebx, ebx
jz      short loc_1003af9f
cmp     ebx, [esi+0fch]
jb      short loc_1003af9f
cmp     ebx, [esi+100h]
jnb     short loc_1003af9f
mov     edx, [esi+0f8h]
mov     [ebx], edx
dec     dword ptr [esi+0e4h]
pop     edi
mov     [esi+0f8h], ebx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [esi]
mov     bl, 1
call    sub_100253e0
mov     edi, [esi+4]
mov     [ebp+var_4], eax
call    sub_100253e0
mov     esi, [ebp+var_4]
mov     [ebp+var_8], eax
xor     eax, eax
mov     [ebp+arg_8], 3
mov     edi, esi
test    esi, esi
jz      loc_1003b08e
lea     esp, [esp+0]
cmp     byte ptr [edi], 0
jz      loc_1003b08e
mov     ebx, edi
mov     [ebp+var_c], eax
mov     edi, edi
add     edi, eax
lea     eax, [ebp+var_4]
push    eax
mov     ecx, edi
call    sub_1006dd20
mov     ecx, [ebp+var_4]
add     esp, 4
cmp     ecx, 95h
jz      short loc_1003b000
inc     [ebp+arg_8]
cmp     ecx, 76h
jz      short loc_1003b028
cmp     ecx, 68h
jnz     short loc_1003b031
mov     [ebp+arg_8], 0
jmp     short loc_1003aff0
cmp     [ebp+arg_8], 2
jnz     short loc_1003aff0
cmp     ecx, 87h
jz      short loc_1003b049
cmp     ecx, 2dh
jz      short loc_1003b049
cmp     ecx, 5
jnz     short loc_1003aff0
mov     ecx, [ebp+var_c]
mov     edx, [ebp+var_8]
add     ecx, ebx
push    ecx
push    edx
push    esi
sub     ebx, esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
push    ebx
push    offset asws
push    eax
call    sub_1000ae80
push    1
push    eax
mov     eax, offset sub_10009760
or      ecx, 0ffffffffh
lea     edx, [esi+8]
call    sub_10024e60
add     esp, 20h
cmp     eax, 12h
jnz     short loc_1003b08e
mov     eax, esi
push    eax
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
mov     esi, offset dword_10080850
mov     ecx, [esi+18h]
mov     eax, ecx
test    ecx, ecx
jnz     short loc_1003b0b5
xor     ebx, ebx
jmp     short loc_1003b0cf
cmp     byte ptr [ecx], 0
jz      short loc_1003b0c6
lea     ebx, [ebx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003b0c0
sub     eax, ecx
and     eax, 3fffffffh
mov     ebx, eax
movzx   eax, byte ptr [ecx]
movzx   eax, ds:byte_10076030[eax]
add     eax, ebx
cdq
mov     edi, 17h
idiv    edi
push    ebx
push    ecx
mov     edi, edx
mov     eax, edi
mov     edx, offset dword_100814b8
call    sub_100446b0
add     esp, 8
test    eax, eax
jz      short loc_1003b105
mov     ecx, [eax+8]
mov     [esi+8], ecx
mov     [eax+8], esi
jmp     short loc_1003b11d
mov     edx, dword_100814b8[edi*4]
mov     dword ptr [esi+8], 0
mov     [esi+1ch], edx
mov     dword_100814b8[edi*4], esi
add     esi, 24h
cmp     esi, offset dword_100808bc
jl      short loc_1003b0a8
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
mov     ecx, [edx]
sub     esp, 8
push    ebx
push    esi
push    edi
xor     edi, edi
mov     eax, ecx
test    ecx, ecx
jz      short loc_1003b155
cmp     byte ptr [ecx], 0
jz      short loc_1003b14e
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003b148
sub     eax, ecx
and     eax, 3fffffffh
push    ecx
mov     ecx, [edx+44h]
add     ecx, 38h
push    ecx
mov     esi, eax
call    sub_1000cf50
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jz      short loc_1003b1b2
mov     edx, [ebx]
mov     eax, [edx]
mov     ecx, [ebp+arg_0]
mov     esi, [ecx]
push    eax
test    edi, edi
jnz     short loc_1003b18b
push    offset anameq
push    esi
call    sub_1000ae80
add     esp, 0ch
jmp     short loc_1003b1a9
push    edi
push    offset asornameq
push    esi
call    sub_1000ae80
mov     [ebp+var_4], eax
add     esp, 10h
mov     eax, edi
mov     ecx, esi
call    sub_10009810
mov     eax, [ebp+var_4]
mov     ebx, [ebx+0ch]
mov     edi, eax
test    ebx, ebx
jnz     short loc_1003b16d
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     edi, [ecx]
mov     edx, [edi+10h]
mov     ebx, [edx+1ch]
xor     esi, esi
mov     [ebp+var_8], ebx
cmp     [eax+44h], ebx
jz      short loc_1003b1f0
push    eax
mov     eax, ecx
call    sub_1005e0f0
add     esp, 4
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_1003b203
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
cmp     [eax+14h], ebx
jnz     short loc_1003b243
mov     eax, [eax]
push    eax
test    esi, esi
jnz     short loc_1003b221
push    offset anameq
push    edi
call    sub_1000ae80
add     esp, 0ch
mov     ebx, eax
jmp     short loc_1003b23b
push    esi
push    offset asornameq
push    edi
call    sub_1000ae80
mov     ebx, eax
add     esp, 10h
mov     eax, esi
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+var_4]
mov     esi, ebx
mov     ebx, [ebp+var_8]
mov     eax, [eax+20h]
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_1003b200
test    esi, esi
jz      short loc_1003b1f0
mov     ebx, [ebp+arg_0]
mov     eax, [ebx]
push    esi
push    offset atypetriggerand
push    eax
call    sub_1000ae80
mov     ecx, [ebx]
mov     edi, eax
add     esp, 0ch
mov     eax, esi
call    sub_10009810
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
push    ebx
call    sub_10056c90
mov     esi, eax
add     esp, 4
test    esi, esi
jz      loc_1003b4d3
mov     eax, [ebp+arg_4]
mov     ecx, [eax+44h]
mov     eax, [ebx]
mov     [ebp+var_4], 0fff0bdc0h
test    ecx, ecx
jz      short loc_1003b2d5
mov     edx, [eax+14h]
mov     [ebp+var_4], 0
test    edx, edx
jle     short loc_1003b2d5
mov     eax, [eax+10h]
add     eax, 0ch
cmp     [eax], ecx
jz      short loc_1003b2d5
inc     [ebp+var_4]
add     eax, 10h
cmp     [ebp+var_4], edx
jl      short loc_1003b2c6
mov     ecx, [ebp+arg_4]
push    ecx
mov     eax, ebx
call    sub_1005e0f0
mov     edi, eax
add     esp, 4
mov     [ebp+var_8], edi
test    edi, edi
jz      loc_1003b3e2
jmp     short loc_1003b2f8
mov     edi, [ebp+var_8]
mov     ebx, [ebp+arg_0]
mov     eax, [edi+14h]
mov     ecx, [ebx]
mov     ebx, 0fff0bdc0h
test    eax, eax
jz      short loc_1003b321
mov     edx, [ecx+14h]
xor     ebx, ebx
test    edx, edx
jle     short loc_1003b321
mov     ecx, [ecx+10h]
add     ecx, 0ch
cmp     [ecx], eax
jz      short loc_1003b321
inc     ebx
add     ecx, 10h
cmp     ebx, edx
jl      short loc_1003b315
mov     ecx, [esi+1ch]
mov     edx, [edi]
mov     [ebp+var_c], edx
mov     [ebp+var_10], ecx
cmp     [esi+20h], ecx
jg      short loc_1003b346
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1003b343
mov     eax, 1
jmp     short loc_1003b36b
mov     ecx, [ebp+var_10]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 6eh
mov     eax, ecx
mov     ecx, [esi+4]
mov     edi, [esi]
test    ecx, ecx
jz      short loc_1003b3c7
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003b3c7
test    eax, eax
jns     short loc_1003b382
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     ebx, [ecx+eax*4]
movsx   eax, byte ptr [ebx+1]
mov     ecx, [ebx+10h]
mov     [ebp+var_10], ebx
call    sub_10025e50
mov     ecx, [ebp+var_c]
xor     eax, eax
mov     [ebx+10h], eax
cmp     ecx, eax
jnz     short loc_1003b3ab
mov     [ebx+10h], eax
mov     [ebx+1], al
jmp     short loc_1003b3d1
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+var_10]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
jmp     short loc_1003b3d1
mov     ecx, [ebp+var_c]
xor     eax, eax
call    sub_10025e50
mov     ecx, [ebp+var_8]
mov     eax, [ecx+20h]
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1003b2f2
mov     edx, [ebp+arg_4]
mov     ebx, [esi+1ch]
mov     eax, [edx]
mov     [ebp+var_c], eax
cmp     [esi+20h], ebx
jg      short loc_1003b404
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1003b404
mov     ebx, 1
jmp     short loc_1003b42a
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 6ch
mov     ecx, [esi+4]
mov     edi, [esi]
mov     eax, ebx
test    ecx, ecx
jz      short loc_1003b489
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003b489
test    ebx, ebx
jns     short loc_1003b443
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ebx, [ecx+edx*4]
mov     ecx, [ebx+10h]
mov     [ebp+var_10], ebx
call    sub_10025e50
mov     ecx, [ebp+var_c]
xor     eax, eax
mov     [ebx+10h], eax
cmp     ecx, eax
jnz     short loc_1003b46d
mov     [ebx+10h], eax
mov     [ebx+1], al
jmp     short loc_1003b493
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+var_10]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
jmp     short loc_1003b493
mov     ecx, [ebp+var_c]
xor     eax, eax
call    sub_10025e50
mov     eax, [ebp+arg_8]
mov     edi, [ebp+arg_0]
mov     ecx, [edi]
push    eax
push    offset atblnameq
push    ecx
call    sub_1000ae80
add     esp, 0ch
test    eax, eax
jz      short loc_1003b4d3
mov     edx, [ebp+var_4]
push    eax
push    edx
call    sub_10025a60
mov     eax, [ebp+arg_4]
push    edi
call    sub_1003b1c0
add     esp, 0ch
test    eax, eax
jz      short loc_1003b4d3
push    eax
push    1
call    sub_10025a60
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     eax, edi
test    edi, edi
jz      short loc_1003b56b
cmp     byte ptr [edi], 0
jz      short loc_1003b4f7
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003b4f1
sub     eax, edi
and     eax, 3fffffffh
cmp     eax, 6
jle     short loc_1003b56b
mov     eax, 7
mov     edx, edi
mov     esi, offset asqlite_0
nop
mov     cl, [edx]
dec     eax
test    cl, cl
jz      short loc_1003b532
movzx   ebx, byte ptr [esi]
movzx   ecx, cl
mov     cl, ds:byte_10076030[ecx]
cmp     cl, ds:byte_10076030[ebx]
jnz     short loc_1003b532
inc     edx
inc     esi
test    eax, eax
jg      short loc_1003b510
dec     eax
test    eax, eax
js      short loc_1003b54e
movzx   eax, byte ptr [esi]
movzx   edx, byte ptr [edx]
movzx   ecx, ds:byte_10076030[eax]
movzx   eax, ds:byte_10076030[edx]
sub     eax, ecx
jnz     short loc_1003b56b
mov     ecx, [ebp+arg_0]
push    edi
push    offset atablesmaynotbe
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     eax, 1
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
push    ebx
push    esi
mov     esi, eax
push    edi
mov     edi, [esi]
mov     eax, [edi+18h]
xor     ebx, ebx
mov     [ebp+var_8], edi
mov     [ebp+var_10], ebx
mov     [ebp+var_20], eax
cmp     [edi+32h], bl
jnz     loc_1003b6ff
mov     eax, [ebp+arg_0]
mov     ecx, [eax+4]
mov     edx, [eax+8]
mov     [ebp+var_c], ecx
mov     [ebp+var_14], edx
cmp     [edi+79h], bl
jnz     short loc_1003b5d4
lea     eax, [esi+4]
push    eax
push    edi
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      short loc_1003b5d4
inc     dword ptr [esi+44h]
mov     [esi+0ch], eax
jmp     loc_1003b6ff
mov     ecx, [ebp+var_c]
mov     edx, [ebp+var_14]
mov     eax, [esi]
push    ecx
push    edx
push    eax
call    sub_1003f510
add     esp, 0ch
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_1003b636
mov     eax, [ebp+var_c]
test    eax, eax
jz      short loc_1003b616
mov     ecx, [ebp+var_14]
push    ecx
push    eax
push    offset anosuchtable
push    offset asss
push    esi
call    sub_1000bb30
add     esp, 14h
mov     byte ptr [esi+11h], 1
jmp     loc_1003b6ff
mov     edx, [ebp+var_14]
push    edx
push    offset anosuchtable
push    offset ass_4
push    esi
call    sub_1000bb30
add     esp, 10h
mov     byte ptr [esi+11h], 1
jmp     loc_1003b6ff
mov     ebx, [eax+44h]
mov     [ebp+var_c], 0fff0bdc0h
test    ebx, ebx
jz      short loc_1003b672
mov     eax, [esi]
mov     ecx, [eax+14h]
mov     [ebp+var_c], 0
test    ecx, ecx
jle     short loc_1003b672
mov     eax, [eax+10h]
add     eax, 0ch
lea     ebx, [ebx+0]
cmp     [eax], ebx
jz      short loc_1003b672
mov     edx, [ebp+var_c]
inc     edx
add     eax, 10h
mov     [ebp+var_c], edx
cmp     edx, ecx
jl      short loc_1003b660
mov     eax, [ebp+var_c]
mov     ecx, [edi+10h]
add     eax, eax
mov     edx, [ecx+eax*8]
mov     eax, [ebp+arg_4]
or      dword ptr [edi+18h], 10000000h
push    edi
mov     [ebp+var_14], edx
call    sub_1003fe10
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003b6ff
mov     eax, [ebp+var_14]
push    eax
push    ebx
push    edi
call    sub_1003f510
add     esp, 0ch
test    eax, eax
jnz     loc_1003b92b
mov     ecx, [ebp+var_14]
push    ecx
push    ebx
mov     edx, edi
call    sub_1003f6f0
add     esp, 8
test    eax, eax
jnz     loc_1003b92b
mov     edx, [ebp+var_4]
mov     edi, [edx]
push    esi
call    sub_1003b4e0
add     esp, 4
test    eax, eax
jnz     short loc_1003b6fc
mov     edi, ebx
call    sub_10040080
test    eax, eax
jnz     short loc_1003b6fc
mov     edi, [ebp+var_4]
cmp     [edi+1ch], eax
jz      short loc_1003b723
mov     eax, [edi]
push    eax
push    offset aviewsmaynotbea
push    esi
call    sub_1000bb30
add     esp, 0ch
mov     edi, [ebp+var_8]
mov     eax, [ebp+arg_0]
push    eax
mov     eax, edi
call    sub_10043720
add     esp, 4
mov     eax, ebx
mov     ecx, edi
call    sub_10009810
mov     ecx, [ebp+var_20]
mov     [edi+18h], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edi]
mov     edx, [ebp+var_14]
push    0
push    ecx
push    edx
push    1ah
mov     eax, esi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     short loc_1003b6fc
push    edi
push    esi
call    sub_10041590
add     esp, 8
test    eax, eax
jnz     short loc_1003b6fc
test    byte ptr [edi+22h], 10h
jz      short loc_1003b77a
mov     eax, [edi+34h]
test    eax, eax
jz      short loc_1003b765
mov     ecx, [ebp+var_8]
cmp     [eax], ecx
jz      short loc_1003b765
mov     eax, [eax+18h]
test    eax, eax
jnz     short loc_1003b757
mov     edx, [eax+8]
mov     [ebp+var_10], eax
mov     eax, [edx]
cmp     dword ptr [eax+4ch], 0
jnz     short loc_1003b77a
mov     [ebp+var_10], 0
push    esi
call    sub_10056c90
add     esp, 4
mov     [ebp+var_18], eax
test    eax, eax
jz      loc_1003b6fc
mov     edi, [ebp+var_c]
xor     ecx, ecx
cmp     [ebp+var_10], ecx
mov     eax, esi
setnz   cl
push    ecx
call    sub_10043d50
mov     edx, edi
add     esp, 4
push    edx
call    sub_10040c40
add     esp, 4
cmp     [ebp+var_10], 0
jz      short loc_1003b7ef
inc     dword ptr [esi+4ch]
mov     edi, [esi+4ch]
mov     eax, [ebp+var_18]
push    0
push    ebx
push    0
push    edi
push    0
push    5eh
call    sub_100259f0
mov     eax, [ebp+var_10]
push    0fffffff6h
push    eax
mov     eax, [ebp+var_18]
push    0
push    0
push    edi
push    8bh
call    sub_100259f0
add     esp, 30h
mov     ecx, esi
call    sub_10043d90
mov     ecx, [ebp+var_4]
mov     edi, [ecx]
or      edx, 0ffffffffh
mov     ecx, edi
mov     [ebp+var_10], edi
call    sub_1000b8c0
mov     edx, [ebp+var_8]
test    dword ptr [edx+18h], 4000000h
mov     [ebp+var_1c], eax
jz      short loc_1003b856
mov     edx, [ebp+var_4]
push    esi
call    sub_1003b130
add     esp, 4
mov     [ebp+var_18], eax
test    eax, eax
jz      short loc_1003b856
cmp     [ebp+var_c], 1
mov     ecx, offset asqlitetempmast
jz      short loc_1003b833
mov     ecx, offset asqlitemaster
push    eax
push    ebx
push    edi
mov     edi, [ebp+var_14]
push    ecx
push    edi
push    offset aupdatewssetsql
push    esi
call    sub_1003f410
mov     eax, [ebp+var_18]
mov     ecx, [ebp+var_8]
add     esp, 1ch
call    sub_10009810
jmp     short loc_1003b859
mov     edi, [ebp+var_14]
cmp     [ebp+var_c], 1
mov     eax, offset asqlitetempmast
jz      short loc_1003b869
mov     eax, offset asqlitemaster
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_1c]
push    ecx
push    edx
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    eax
push    edi
push    offset aupdateqssetsql
push    esi
call    sub_1003f410
mov     eax, [ebp+var_8]
add     esp, 2ch
push    edi
push    offset asqlitesequence
push    eax
call    sub_1003f510
add     esp, 0ch
test    eax, eax
jz      short loc_1003b8b2
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
push    edx
push    ebx
push    edi
push    offset aupdatewsqlites
push    esi
call    sub_1003f410
add     esp, 14h
mov     eax, [ebp+var_4]
push    esi
call    sub_1003b1c0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_1003b8df
push    edi
push    ebx
push    ebx
push    offset aupdatesqlitete
push    esi
call    sub_1003f410
mov     ecx, [ebp+var_8]
add     esp, 14h
mov     eax, edi
call    sub_10009810
mov     eax, [ebp+var_8]
test    dword ptr [eax+18h], 4000000h
jz      short loc_1003b91b
mov     edx, [ebp+var_4]
call    sub_10049e90
mov     edi, eax
test    edi, edi
jz      short loc_1003b91b
lea     esp, [esp+0]
mov     eax, [edi]
cmp     eax, [ebp+var_4]
jz      short loc_1003b914
mov     ecx, [eax]
push    ecx
push    eax
push    esi
call    sub_1003b280
add     esp, 0ch
mov     edi, [edi+0ch]
test    edi, edi
jnz     short loc_1003b900
mov     edx, [ebp+var_4]
push    ebx
push    edx
push    esi
call    sub_1003b280
jmp     loc_1003b6f9
push    ebx
push    offset athereisalready
push    esi
call    sub_1000bb30
add     esp, 0ch
jmp     loc_1003b6ff
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    edi
push    esi
call    sub_10056c90
mov     edi, eax
add     esp, 4
test    edi, edi
jz      loc_1003bb3b
mov     al, [esi+13h]
test    al, al
jnz     short loc_1003b96d
inc     dword ptr [esi+4ch]
mov     eax, [esi+4ch]
mov     [ebp+var_4], eax
jmp     short loc_1003b97c
dec     al
movzx   ecx, al
mov     [esi+13h], al
mov     edx, [esi+ecx*4+1ch]
mov     [ebp+var_4], edx
mov     al, [esi+13h]
test    al, al
jnz     short loc_1003b98e
inc     dword ptr [esi+4ch]
mov     eax, [esi+4ch]
mov     [ebp+var_8], eax
jmp     short loc_1003b99d
dec     al
movzx   ecx, al
mov     [esi+13h], al
mov     edx, [esi+ecx*4+1ch]
mov     [ebp+var_8], edx
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_1003b9ae
call    sub_10025810
test    eax, eax
jnz     short loc_1003b9df
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_4]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_0]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     dword ptr [eax+0ch], 2
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 24h
jmp     short loc_1003b9e2
mov     ecx, [ebp+arg_0]
mov     eax, 1
shl     eax, cl
or      [edi+6ch], eax
cmp     ecx, 1
jz      short loc_1003ba05
mov     edx, [edi]
mov     edx, [edx+10h]
add     ecx, ecx
mov     ecx, [edx+ecx*8+4]
cmp     byte ptr [ecx+9], 0
jz      short loc_1003ba05
or      [edi+70h], eax
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_1003ba16
call    sub_10025810
test    eax, eax
jnz     short loc_1003ba3f
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+arg_4]
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_8]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 7
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_1003ba5d
call    sub_10025810
test    eax, eax
jz      short loc_1003ba5d
mov     edx, [ebp+var_4]
mov     ecx, 1
mov     [ebp+var_c], ecx
jmp     short loc_1003ba8b
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_8]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     [eax+4], edx
mov     edx, [ebp+var_4]
mov     [eax+8], ecx
mov     [eax+10h], ecx
mov     byte ptr [eax+3], 0
mov     [eax+0ch], edx
mov     word ptr [eax], 50h
mov     [ebp+var_c], ebx
mov     ecx, ebx
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_1003baa2
call    sub_10025810
mov     edx, [ebp+var_4]
mov     ecx, [ebp+var_c]
test    eax, eax
jnz     short loc_1003bad1
inc     dword ptr [edi+1ch]
lea     eax, [ebx+ebx*4]
mov     ebx, [edi+4]
lea     eax, [ebx+eax*4]
mov     ebx, [ebp+arg_0]
mov     [eax+4], ebx
mov     ebx, [ebp+var_8]
mov     byte ptr [eax+3], 0
mov     dword ptr [eax+8], 2
mov     [eax+0ch], ebx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 25h
test    ecx, ecx
js      short loc_1003bae6
mov     eax, [edi+1ch]
cmp     eax, ecx
jbe     short loc_1003bae6
mov     edi, [edi+4]
lea     ecx, [ecx+ecx*4]
mov     [edi+ecx*4+8], eax
test    edx, edx
jz      short loc_1003bb0f
mov     bl, [esi+13h]
cmp     bl, 8
jnb     short loc_1003bb0f
xor     eax, eax
lea     ecx, [esi+64h]
cmp     [ecx+10h], edx
jz      short loc_1003bb41
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1003baf7
movzx   eax, bl
mov     [esi+eax*4+1ch], edx
inc     byte ptr [esi+13h]
mov     edi, [ebp+var_8]
test    edi, edi
jz      short loc_1003bb3b
mov     dl, [esi+13h]
cmp     dl, 8
jnb     short loc_1003bb3b
xor     eax, eax
lea     ecx, [esi+64h]
cmp     [ecx+10h], edi
jz      short loc_1003bb47
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1003bb23
movzx   ecx, dl
mov     [esi+ecx*4+1ch], edi
inc     byte ptr [esi+13h]
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
jmp     short loc_1003bb0f
pop     edi
mov     byte ptr [ecx+8], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     eax, [ebp+arg_0]
cmp     dword ptr [eax+44h], 0
push    ebx
push    esi
mov     esi, [eax]
push    edi
mov     [ebp+var_10], esi
jnz     loc_1003bdae
cmp     byte ptr [esi+32h], 0
jnz     loc_1003bdae
mov     edi, [eax+1fch]
mov     edx, [edi+44h]
mov     [ebp+var_14], edi
mov     [ebp+var_4], 0fff0bdc0h
test    edx, edx
jz      short loc_1003bbc3
cmp     dword ptr [esi+14h], 0
mov     [ebp+var_4], 0
jle     short loc_1003bbc3
mov     eax, [esi+10h]
add     eax, 0ch
nop
cmp     [eax], edx
jz      short loc_1003bbc3
mov     ecx, [ebp+var_4]
inc     ecx
add     eax, 10h
mov     [ebp+var_4], ecx
cmp     ecx, [esi+14h]
jl      short loc_1003bbb0
mov     eax, [ebp+var_4]
mov     ecx, [esi+10h]
add     eax, eax
mov     ebx, [ecx+eax*8]
mov     ecx, [edi+8]
mov     eax, [edi]
lea     edx, [ecx+ecx*2]
mov     ecx, [edi+0ch]
add     eax, 10h
lea     ecx, [ecx+edx*8-18h]
mov     edx, [ecx+4]
push    ebx
push    eax
push    esi
mov     [ebp+var_1c], ebx
mov     [ebp+var_18], eax
mov     [ebp+var_c], ecx
mov     [ebp+var_8], edx
call    sub_1003f510
add     esp, 0ch
mov     [ebp+var_20], eax
mov     eax, [eax]
push    0
push    eax
push    ebx
mov     ebx, [ebp+arg_0]
push    1ah
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1003bdae
mov     eax, [ebp+var_8]
test    eax, eax
jz      short loc_1003bc30
cmp     byte ptr [eax], 62h
jnz     short loc_1003bc30
mov     [ebp+var_8], 0
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_c]
cmp     byte ptr [ecx+15h], 0
jz      short loc_1003bc4e
push    offset acannotaddaprim
push    ebx
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword ptr [edi+10h], 0
jz      short loc_1003bc69
push    offset acannotaddauniq
push    ebx
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    dword ptr [esi+18h], 4000000h
jz      short loc_1003bc91
cmp     dword ptr [edi+24h], 0
jz      short loc_1003bc91
test    eax, eax
jz      short loc_1003bc91
push    offset acannotaddarefe
push    ebx
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [ecx+14h], 0
jz      short loc_1003bcb0
test    eax, eax
jnz     short loc_1003bcb4
push    offset acannotaddanotn
push    ebx
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jz      short loc_1003bcf9
lea     ecx, [ebp+var_c]
push    ecx
push    62h
push    1
push    eax
push    esi
call    sub_100254b0
add     esp, 14h
test    eax, eax
jz      short loc_1003bcd5
mov     byte ptr [esi+32h], 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+var_c]
test    esi, esi
jnz     short loc_1003bcf1
push    offset acannotaddacolu
push    ebx
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    sub_100257d0
mov     esi, [ebp+var_10]
mov     eax, [ebp+arg_4]
mov     edi, [eax+4]
mov     ebx, [eax]
mov     edx, esi
call    sub_10009bc0
mov     edi, eax
test    edi, edi
jz      short loc_1003bd84
mov     edx, [ebp+arg_4]
mov     eax, [edx+4]
mov     ebx, [esi+18h]
lea     eax, [edi+eax-1]
cmp     eax, edi
jbe     short loc_1003bd3b
nop
mov     cl, [eax]
cmp     cl, 3bh
jz      short loc_1003bd33
movzx   ecx, cl
test    ds:byte_10076130[ecx], 1
jz      short loc_1003bd3b
mov     byte ptr [eax], 0
dec     eax
cmp     eax, edi
ja      short loc_1003bd20
or      dword ptr [esi+18h], 10000000h
cmp     [ebp+var_4], 1
mov     ecx, offset asqlitetempmast
jz      short loc_1003bd52
mov     ecx, offset asqlitemaster
mov     edx, [ebp+var_14]
mov     eax, [edx+30h]
mov     edx, [ebp+var_18]
push    edx
lea     edx, [eax+1]
push    edx
push    edi
push    eax
mov     eax, [ebp+var_1c]
push    ecx
mov     ecx, [ebp+arg_0]
push    eax
push    offset aupdatewssetsql_0
push    ecx
call    sub_1003f410
add     esp, 20h
mov     eax, edi
mov     ecx, esi
call    sub_10009810
mov     [esi+18h], ebx
mov     eax, [ebp+var_4]
mov     esi, [ebp+arg_0]
xor     edx, edx
cmp     [ebp+var_8], edx
setnz   dl
add     edx, 2
push    edx
push    eax
call    sub_1003b940
mov     eax, [ebp+var_20]
mov     ecx, [eax]
push    ecx
push    eax
mov     edx, esi
push    edx
call    sub_1003b280
add     esp, 14h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ecx, [edi]
cmp     byte ptr [ecx+32h], 0
mov     [ebp+var_4], ecx
jnz     loc_1003bfe4
cmp     byte ptr [ecx+79h], 0
mov     eax, [ebp+arg_4]
mov     ebx, [eax+8]
mov     esi, [eax+4]
mov     [ebp+var_8], ebx
jnz     short loc_1003be09
lea     eax, [edi+4]
push    eax
push    ecx
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      short loc_1003be09
inc     dword ptr [edi+44h]
mov     [edi+0ch], eax
jmp     loc_1003bfe4
mov     ecx, [edi]
push    esi
push    ebx
push    ecx
call    sub_1003f510
mov     ebx, eax
add     esp, 0ch
mov     [ebp+var_14], ebx
test    ebx, ebx
jnz     short loc_1003be64
test    esi, esi
jz      short loc_1003be44
mov     edx, [ebp+var_8]
push    edx
push    esi
push    offset anosuchtable
push    offset asss
push    edi
call    sub_1000bb30
add     esp, 14h
mov     byte ptr [edi+11h], 1
jmp     loc_1003bfe4
mov     eax, [ebp+var_8]
push    eax
push    offset anosuchtable
push    offset ass_4
push    edi
call    sub_1000bb30
add     esp, 10h
mov     byte ptr [edi+11h], 1
jmp     loc_1003bfe4
test    byte ptr [ebx+22h], 10h
jz      short loc_1003be7d
push    offset avirtualtablesm
push    edi
call    sub_1000bb30
add     esp, 8
jmp     loc_1003bfe4
cmp     dword ptr [ebx+1ch], 0
jz      short loc_1003be96
push    offset acannotaddacolu_0
push    edi
call    sub_1000bb30
add     esp, 8
jmp     loc_1003bfe4
push    edi
mov     edi, [ebx]
call    sub_1003b4e0
add     esp, 4
test    eax, eax
jnz     loc_1003bfe4
mov     esi, [ebx+44h]
mov     ecx, [ebp+var_4]
call    sub_10053b80
mov     [ebp+var_10], eax
mov     eax, [ebp+var_4]
mov     edi, 4ch
call    sub_10009a20
mov     esi, eax
test    esi, esi
jz      loc_1003bfe4
mov     ecx, [ebp+arg_0]
mov     [ecx+1fch], esi
mov     edx, 1
mov     [esi+20h], dx
mov     eax, [ebx+8]
mov     [esi+8], eax
dec     eax
cdq
and     edx, 7
add     eax, edx
sar     eax, 3
lea     eax, ds:8[eax*8]
lea     edi, [eax+eax*2]
mov     eax, [ebp+var_4]
add     edi, edi
add     edi, edi
add     edi, edi
call    sub_10009a20
mov     edi, [ebp+var_4]
mov     [esi+0ch], eax
mov     eax, [ebx]
push    eax
push    offset asqlitealtertab
push    edi
call    sub_1000ae80
mov     ecx, [esi+0ch]
add     esp, 0ch
mov     [esi], eax
test    ecx, ecx
jz      loc_1003bfe0
test    eax, eax
jz      loc_1003bfe0
mov     eax, [esi+8]
lea     edx, [eax+eax*2]
mov     eax, [ebx+0ch]
add     edx, edx
add     edx, edx
add     edx, edx
push    edx
push    eax
push    ecx
call    memcpy
xor     eax, eax
add     esp, 0ch
mov     [ebp+var_c], eax
cmp     [esi+8], eax
jle     short loc_1003bf95
mov     [ebp+var_8], eax
mov     edi, [esi+0ch]
add     edi, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     ebx, [edi]
push    ecx
call    sub_10009b70
add     [ebp+var_8], 18h
mov     [edi], eax
xor     eax, eax
mov     [edi+10h], eax
mov     [edi+0ch], eax
mov     [edi+4], eax
mov     [edi+8], eax
mov     eax, [ebp+var_c]
inc     eax
add     esp, 4
mov     [ebp+var_c], eax
cmp     eax, [esi+8]
jl      short loc_1003bf5b
mov     ebx, [ebp+var_14]
mov     edi, [ebp+var_4]
mov     eax, [ebp+var_10]
mov     ecx, [edi+10h]
mov     edx, eax
add     edx, edx
mov     edx, [ecx+edx*8+0ch]
mov     [esi+44h], edx
mov     ecx, [ebx+30h]
mov     edx, 1
mov     [esi+30h], ecx
mov     [esi+20h], dx
mov     esi, [ebp+arg_0]
mov     edi, eax
push    0
mov     eax, esi
call    sub_10043d50
add     esp, 4
push    esi
call    sub_10056c90
add     esp, 4
test    eax, eax
jz      short loc_1003bfe4
mov     eax, edi
push    eax
call    sub_10040c40
add     esp, 4
jmp     short loc_1003bfe4
mov     byte ptr [edi+32h], 1
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+var_4]
push    ecx
call    sub_10043720
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     ebx, eax
mov     eax, [ebx]
push    edi
push    ebx
mov     [ebp+var_4], 0
mov     [ebp+var_8], eax
call    sub_10056c90
mov     esi, eax
add     esp, 4
test    esi, esi
jz      loc_1003c1e0
mov     edi, [ebp+arg_0]
mov     edx, [ebp+var_8]
mov     eax, ds:off_10076884
shl     edi, 4
add     edi, [edx+10h]
mov     [ebp+var_10], eax
mov     ecx, [edi]
push    ecx
push    eax
push    edx
call    sub_1003f510
mov     edx, ds:off_10076884
add     esp, 0ch
test    eax, eax
jnz     short loc_1003c07a
mov     ecx, ds:off_10076888
mov     eax, [edi]
push    ecx
push    edx
push    eax
push    offset acreatetableqss
push    ebx
call    sub_1003f410
mov     ecx, [ebx+194h]
add     esp, 14h
mov     [ebp+var_c], ecx
mov     [ebp+var_4], 2
jmp     short loc_1003c0f1
mov     eax, [eax+14h]
push    edx
push    1
push    eax
mov     [ebp+var_c], eax
mov     eax, [ebp+arg_0]
push    eax
mov     eax, ebx
call    sub_1003ef00
mov     eax, [ebp+arg_8]
add     esp, 10h
test    eax, eax
jz      short loc_1003c0b5
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+var_10]
push    eax
mov     eax, [edi]
push    ecx
push    edx
push    eax
push    offset adeletefromqswh
push    ebx
call    sub_1003f410
add     esp, 18h
jmp     short loc_1003c0f1
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1003c0c8
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1003c0f1
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_c]
mov     edx, [ebp+arg_0]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 67h
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1003c15e
test    eax, eax
jz      short loc_1003c103
add     eax, eax
jmp     short loc_1003c108
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003c18c
mov     eax, [esi]
test    eax, eax
jz      short loc_1003c142
cmp     ebx, [eax+0fch]
jb      short loc_1003c142
cmp     ebx, [eax+100h]
jnb     short loc_1003c142
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003c14e
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+var_c]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_0]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 28h
mov     ecx, [esi+4]
mov     edi, [esi]
test    ecx, ecx
jz      short loc_1003c1bf
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003c1bf
mov     eax, [esi+1ch]
lea     edx, [eax+eax*4-5]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ebx, [ecx+edx*4]
mov     ecx, [ebx+10h]
call    sub_10025e50
mov     dword ptr [ebx+10h], 3
mov     byte ptr [ebx+1], 0f2h
jmp     short loc_1003c1cc
mov     ecx, 3
lea     eax, [ecx-11h]
call    sub_10025e50
mov     eax, [esi+4]
test    eax, eax
jz      short loc_1003c1e0
mov     esi, [esi+1ch]
mov     dl, [ebp+var_4]
lea     ecx, [esi+esi*4]
mov     [eax+ecx*4-11h], dl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 58h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [edi]
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_44], eax
inc     eax
mov     [ebp+var_54], eax
inc     eax
mov     [ebp+var_34], eax
inc     eax
mov     [ebp+var_48], eax
inc     eax
mov     [ebp+var_24], eax
inc     eax
mov     [ebp+var_14], eax
inc     eax
mov     [ebp+var_38], eax
inc     eax
push    edi
mov     [ebp+var_1c], 0ffffffffh
mov     [ebp+arg_10], eax
call    sub_10056c90
mov     ebx, eax
add     esp, 4
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      loc_1003d7b9
mov     eax, [ebp+arg_4]
test    eax, eax
jz      loc_1003d7b9
cmp     dword ptr [eax+14h], 0
jz      loc_1003d7b9
mov     eax, [eax]
cmp     dword ptr [eax], 696c7173h
jnz     short loc_1003c275
cmp     byte ptr [eax+4], 74h
jnz     short loc_1003c275
cmp     byte ptr [eax+5], 65h
jnz     short loc_1003c275
cmp     byte ptr [eax+6], 5fh
jz      loc_1003d7b9
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+44h]
mov     ecx, [ebp+var_30]
call    sub_10053b80
mov     edx, [ebp+var_30]
mov     ecx, [edx+10h]
mov     [ebp+var_40], eax
add     eax, eax
mov     edx, [ecx+eax*8]
mov     eax, [ebp+arg_4]
mov     eax, [eax]
push    edx
push    0
push    eax
push    1ch
mov     eax, edi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1003d7b9
mov     esi, [ebp+arg_4]
mov     ecx, [esi]
mov     edx, [esi+14h]
push    ecx
push    eax
mov     eax, [ebp+var_40]
push    edx
push    eax
mov     eax, edi
call    sub_1003ef00
mov     eax, [edi+48h]
mov     edx, [ebp+var_44]
mov     [ebp+var_18], eax
inc     eax
push    0
mov     [edi+48h], eax
mov     ecx, [esi]
push    ecx
push    0
push    edx
push    0
push    5eh
mov     eax, ebx
call    sub_100259f0
mov     edi, [esi+10h]
add     esp, 28h
mov     [ebp+var_20], edi
test    edi, edi
jz      loc_1003d5ad
jmp     short loc_1003c303
jmp     short loc_1003c300
mov     edi, [ebp+var_20]
mov     eax, [ebp+arg_8]
mov     [ebp+var_50], 0
test    eax, eax
jz      short loc_1003c319
cmp     eax, edi
jnz     loc_1003d59f
mov     eax, [edi+24h]
mov     esi, [ebp+var_30]
lea     ecx, ds:0[eax*4]
mov     [ebp+var_10], eax
call    sub_10009a40
mov     [ebp+var_2c], eax
test    eax, eax
jz      loc_1003d59f
mov     esi, [ebp+arg_0]
push    edi
push    esi
call    sub_10044250
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+var_10]
lea     ecx, [ecx+edx*2+1]
add     esp, 8
cmp     ecx, [esi+4ch]
jle     short loc_1003c358
mov     [esi+4ch], ecx
mov     ecx, [edi+28h]
mov     edx, [ebp+var_18]
push    0fffffff0h
push    eax
mov     eax, [ebp+var_40]
push    eax
push    ecx
push    edx
push    27h
mov     eax, ebx
call    sub_100259f0
mov     eax, [edi]
mov     ecx, [ebp+var_54]
push    0
push    eax
push    0
push    ecx
push    0
push    5eh
mov     eax, ebx
call    sub_100259f0
add     esp, 30h
cmp     [ebp+var_10], 0
mov     [ebp+var_c], 0
jl      short loc_1003c3de
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_1003c3a9
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_1003c3d2
inc     dword ptr [ebx+1ch]
mov     eax, [ebx+4]
lea     edx, [esi+esi*4]
mov     esi, [ebp+var_c]
lea     eax, [eax+edx*4]
xor     ecx, ecx
add     esi, [ebp+arg_10]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], esi
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 7
mov     eax, [ebp+var_c]
inc     eax
mov     [ebp+var_c], eax
cmp     eax, [ebp+var_10]
jle     short loc_1003c396
cmp     [ebp+var_10], 0
mov     [ebp+var_c], 0
jle     short loc_1003c43f
jmp     short loc_1003c3f0
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_1003c403
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_1003c433
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+arg_10]
lea     eax, [esi+esi*4]
mov     esi, [ebp+var_c]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
add     esi, [ebp+var_10]
mov     byte ptr [eax+3], 0
lea     edx, [esi+edx+1]
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0ah
mov     eax, [ebp+var_c]
inc     eax
mov     [ebp+var_c], eax
cmp     eax, [ebp+var_10]
jl      short loc_1003c3f0
mov     esi, [ebx+24h]
lea     ecx, [esi-1]
lea     eax, [esi+1]
mov     [ebx+24h], eax
test    esi, ecx
jnz     short loc_1003c481
mov     edi, [ebx+28h]
mov     eax, [ebx]
lea     edx, ds:4[esi*8]
push    edx
mov     ebx, edi
mov     [ebp+var_4c], eax
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1003c479
mov     ecx, [ebp+var_4c]
mov     eax, edi
call    sub_10009810
mov     eax, [ebp+var_8]
mov     [eax+28h], ebx
mov     ebx, eax
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_1003c48f
mov     dword ptr [eax+esi*4], 0ffffffffh
or      ecx, 0ffffffffh
sub     ecx, esi
mov     esi, [ebx+1ch]
mov     [ebp+var_3c], ecx
cmp     [ebx+20h], esi
jg      short loc_1003c4ad
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_1003c4d5
mov     ecx, [ebp+var_3c]
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_18]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 48h
jmp     short loc_1003c4d7
xor     ecx, ecx
mov     esi, [ebx+1ch]
mov     [ebp+var_58], esi
cmp     [ebx+20h], esi
jg      short loc_1003c4ef
mov     edi, ebx
call    sub_10025810
xor     ecx, ecx
test    eax, eax
jnz     short loc_1003c518
lea     eax, [esi+esi*4]
mov     esi, [ebx+4]
lea     eax, [esi+eax*4]
mov     esi, [ebp+arg_10]
mov     edx, 1
add     [ebx+1ch], edx
mov     byte ptr [eax+3], 0
mov     [eax+4], esi
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 14h
mov     [ebp+var_c], ecx
cmp     [ebp+var_10], ecx
jle     loc_1003c84a
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003c599
test    eax, eax
jz      short loc_1003c536
add     eax, eax
jmp     short loc_1003c53b
mov     eax, 33h
mov     edx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edx]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003c5c9
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_1003c57b
cmp     ebx, [eax+0fch]
jb      short loc_1003c57b
cmp     ebx, [eax+100h]
jnb     short loc_1003c57b
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003c587
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_18]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_c]
mov     [eax+4], edx
mov     edx, [ebp+var_48]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1dh
jmp     short loc_1003c5cc
mov     ebx, [ebp+var_8]
cmp     [ebp+var_c], 0
jnz     loc_1003c676
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1003c64c
test    eax, eax
jz      short loc_1003c5e8
add     eax, eax
jmp     short loc_1003c5ed
mov     eax, 33h
mov     edi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1003c6b5
mov     eax, [edi]
test    eax, eax
jz      short loc_1003c62e
cmp     ebx, [eax+0fch]
jb      short loc_1003c62e
cmp     ebx, [eax+100h]
jnb     short loc_1003c62e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003c63a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
mov     ebx, edi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_10]
inc     ecx
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1ch
mov     [ebp+var_50], esi
mov     edx, [ebp+var_20]
mov     eax, [edx+20h]
mov     edx, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     edi, [edx]
mov     esi, [eax+ecx*4]
mov     eax, [edi+10h]
mov     ecx, [eax+0ch]
movzx   edx, byte ptr [ecx+4dh]
mov     [ebp+var_1], dl
mov     dl, [edi+79h]
mov     [ebp+var_2], dl
test    esi, esi
jz      short loc_1003c6be
movzx   eax, dl
push    eax
push    edi
mov     ebx, esi
call    sub_100445f0
mov     dl, [ebp+var_2]
mov     ebx, [ebp+var_8]
add     esp, 8
jmp     short loc_1003c6c1
mov     esi, 1
mov     ebx, edi
jmp     short loc_1003c673
mov     eax, [edi+8]
test    eax, eax
jz      short loc_1003c6d0
movzx   ecx, [ebp+var_1]
lea     ecx, [ecx+ecx*4]
lea     eax, [eax+ecx*4-14h]
mov     [ebp+var_28], eax
test    dl, dl
jnz     short loc_1003c708
test    eax, eax
jz      short loc_1003c6e1
cmp     dword ptr [eax+0ch], 0
jnz     short loc_1003c708
mov     cl, [ebp+var_1]
push    edi
mov     edi, esi
call    sub_10044510
add     esp, 4
mov     [ebp+var_28], eax
test    eax, eax
jnz     short loc_1003c708
mov     edx, [ebp+arg_0]
push    esi
push    offset anosuchcollatio
push    edx
call    sub_1000bb30
add     esp, 0ch
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1003c77e
test    eax, eax
jz      short loc_1003c71a
add     eax, eax
jmp     short loc_1003c71f
mov     eax, 33h
mov     edi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1003c7fa
mov     eax, [edi]
test    eax, eax
jz      short loc_1003c760
cmp     ebx, [eax+0fch]
jb      short loc_1003c760
cmp     ebx, [eax+100h]
jnb     short loc_1003c760
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003c76c
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
mov     ebx, edi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edi, [ebp+var_c]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_48]
mov     edx, [ebp+arg_10]
mov     [eax+4], ecx
xor     ecx, ecx
add     edi, [ebp+var_10]
mov     byte ptr [eax+3], 0
lea     edx, [edi+edx+1]
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     word ptr [eax], 4bh
mov     eax, esi
mov     [ebp+var_4c], esi
mov     esi, [ebx+4]
mov     edi, [ebx]
test    esi, esi
jz      short loc_1003c812
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003c812
test    eax, eax
jns     short loc_1003c7cd
mov     eax, [ebx+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [esi+eax*4+10h]
lea     esi, [esi+eax*4]
movsx   eax, byte ptr [esi+1]
call    sub_10025e50
cmp     [ebp+var_28], 0
mov     dword ptr [esi+10h], 0
jnz     short loc_1003c806
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi+1], 0
jmp     short loc_1003c81f
mov     eax, 1
mov     [ebp+var_4c], eax
mov     ebx, edi
jmp     short loc_1003c7b6
mov     ecx, [ebp+var_28]
mov     [esi+10h], ecx
mov     byte ptr [esi+1], 0fch
jmp     short loc_1003c81f
mov     ecx, [ebp+var_28]
mov     eax, 0fffffffch
call    sub_10025e50
mov     eax, [ebp+var_4c]
mov     ecx, [ebp+var_2c]
mov     edx, [ebp+var_c]
mov     [ecx+edx*4], eax
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_1003c83d
mov     ecx, [ebx+1ch]
lea     ecx, [ecx+ecx*4]
mov     byte ptr [eax+ecx*4-11h], 80h
inc     edx
mov     [ebp+var_c], edx
cmp     edx, [ebp+var_10]
jl      loc_1003c524
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003c8bf
test    eax, eax
jz      short loc_1003c85c
add     eax, eax
jmp     short loc_1003c861
mov     eax, 33h
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_8]
mov     eax, [eax]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003c8e7
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_1003c8a1
cmp     ebx, [eax+0fch]
jb      short loc_1003c8a1
cmp     ebx, [eax+100h]
jnb     short loc_1003c8a1
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003c8ad
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+var_3c]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
jmp     short loc_1003c8ea
mov     ebx, [ebp+var_8]
cmp     [ebp+var_10], 0
mov     [ebp+var_c], 0
jle     loc_1003caa7
jmp     short loc_1003c900
mov     eax, [ebp+var_2c]
mov     edx, [ebp+var_c]
mov     eax, [eax+edx*4]
test    eax, eax
js      short loc_1003c91e
mov     ecx, [ebx+1ch]
cmp     ecx, eax
jbe     short loc_1003c91e
mov     esi, [ebx+4]
lea     eax, [eax+eax*4]
mov     [esi+eax*4+8], ecx
test    edx, edx
jnz     short loc_1003c93a
mov     eax, [ebp+var_50]
test    eax, eax
js      short loc_1003c93a
mov     ecx, [ebx+1ch]
cmp     ecx, eax
jbe     short loc_1003c93a
mov     esi, [ebx+4]
lea     eax, [eax+eax*4]
mov     [esi+eax*4+8], ecx
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003c9b2
test    eax, eax
jz      short loc_1003c94c
add     eax, eax
jmp     short loc_1003c951
mov     eax, 33h
mov     edx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edx]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003c9e3
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_1003c991
cmp     ebx, [eax+0fch]
jb      short loc_1003c991
cmp     ebx, [eax+100h]
jnb     short loc_1003c991
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003c99d
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     edx, [ebp+var_c]
mov     [esi+4], ebx
mov     ebx, esi
mov     esi, [ebx+4]
mov     ecx, 1
add     [ebx+1ch], ecx
lea     eax, [edi+edi*4]
lea     eax, [esi+eax*4]
mov     esi, [ebp+arg_10]
mov     [eax+8], ecx
xor     ecx, ecx
lea     edx, [edx+esi+1]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 14h
jmp     short loc_1003c9e6
mov     ebx, [ebp+var_8]
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003ca5b
test    eax, eax
jz      short loc_1003c9f8
add     eax, eax
jmp     short loc_1003c9fd
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003ca94
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_1003ca3d
cmp     ebx, [eax+0fch]
jb      short loc_1003ca3d
cmp     ebx, [eax+100h]
jnb     short loc_1003ca3d
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003ca49
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_18]
mov     esi, [ebp+arg_10]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_10]
mov     [eax+4], ecx
mov     ecx, [ebp+var_c]
add     edx, ecx
lea     edx, [edx+esi+1]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1dh
jmp     short loc_1003ca9a
mov     ebx, [ebp+var_8]
mov     ecx, [ebp+var_c]
inc     ecx
mov     [ebp+var_c], ecx
cmp     ecx, [ebp+var_10]
jl      loc_1003c900
mov     esi, [ebp+var_30]
cmp     dword ptr [esi+1e8h], 0
mov     eax, [ebp+var_2c]
jz      short loc_1003caeb
cmp     eax, [esi+0fch]
jb      short loc_1003cad7
cmp     eax, [esi+100h]
jnb     short loc_1003cad7
movzx   eax, word ptr [esi+0e0h]
mov     esi, [esi+1e8h]
add     [esi], eax
jmp     short loc_1003cb1a
push    eax
call    dword_10080258
mov     esi, [esi+1e8h]
add     esp, 4
add     [esi], eax
jmp     short loc_1003cb1a
cmp     eax, [esi+0fch]
jb      short loc_1003cb11
cmp     eax, [esi+100h]
jnb     short loc_1003cb11
mov     ecx, [esi+0f8h]
mov     [eax], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
jmp     short loc_1003cb1a
push    eax
call    sub_10009770
add     esp, 4
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_1003cb32
mov     edx, [ebp+var_3c]
lea     ecx, ds:4[edx*4]
mov     edx, [ebx+1ch]
sub     eax, ecx
mov     [eax], edx
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003cba7
test    eax, eax
jz      short loc_1003cb44
add     eax, eax
jmp     short loc_1003cb49
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003cbd2
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_1003cb89
cmp     ebx, [eax+0fch]
jb      short loc_1003cb89
cmp     ebx, [eax+100h]
jnb     short loc_1003cb89
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003cb95
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_18]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_58]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 5fh
jmp     short loc_1003cbd5
mov     ebx, [ebp+var_8]
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003cc4a
test    eax, eax
jz      short loc_1003cbe7
add     eax, eax
jmp     short loc_1003cbec
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003cc72
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_1003cc2c
cmp     ebx, [eax+0fch]
jb      short loc_1003cc2c
cmp     ebx, [eax+100h]
jnb     short loc_1003cc2c
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003cc38
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_18]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 2dh
jmp     short loc_1003cc75
mov     ebx, [ebp+var_8]
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003ccea
test    eax, eax
jz      short loc_1003cc87
add     eax, eax
jmp     short loc_1003cc8c
mov     eax, 33h
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_8]
mov     eax, [eax]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003cd15
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_1003cccc
cmp     ebx, [eax+0fch]
jb      short loc_1003cccc
cmp     ebx, [eax+100h]
jnb     short loc_1003cccc
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003ccd8
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+var_34]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0fh
jmp     short loc_1003cd18
mov     ebx, [ebp+var_8]
cmp     [ebp+var_1c], 0
jge     loc_1003cdc1
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003cd98
test    eax, eax
jz      short loc_1003cd34
add     eax, eax
jmp     short loc_1003cd39
mov     eax, 33h
mov     esi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1003cde4
mov     eax, [esi]
test    eax, eax
jz      short loc_1003cd7a
cmp     ebx, [eax+0fch]
jb      short loc_1003cd7a
cmp     ebx, [eax+100h]
jnb     short loc_1003cd7a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003cd86
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_10]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1ch
mov     [ebp+var_1c], edi
cmp     [ebp+var_10], 0
mov     [ebp+var_c], 0
jle     loc_1003d301
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1003ce51
test    eax, eax
jz      short loc_1003cded
add     eax, eax
jmp     short loc_1003cdf2
mov     edi, 1
mov     ebx, esi
jmp     short loc_1003cdbe
mov     eax, 33h
mov     edi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1003cef3
mov     eax, [edi]
test    eax, eax
jz      short loc_1003ce33
cmp     ebx, [eax+0fch]
jb      short loc_1003ce33
cmp     ebx, [eax+100h]
jnb     short loc_1003ce33
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003ce3f
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
mov     ebx, edi
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_14]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 5eh
mov     eax, esi
mov     esi, [ebx+4]
mov     edi, [ebx]
test    esi, esi
jz      short loc_1003ceff
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003ceff
test    eax, eax
jns     short loc_1003ce90
mov     eax, [ebx+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [esi+eax*4+10h]
lea     esi, [esi+eax*4]
movsx   eax, byte ptr [esi+1]
mov     [ebp+var_58], esi
call    sub_10025e50
mov     dword ptr [esi+10h], 0
mov     eax, offset asc_1007ab88
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003ceb2
mov     esi, [ebx]
sub     eax, offset asc_1007ab88
and     eax, 3fffffffh
mov     edi, eax
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1003cee7
push    edi
push    offset asc_1007ab88
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     eax, [ebp+var_58]
mov     [eax+10h], esi
mov     byte ptr [eax+1], 0ffh
jmp     short loc_1003cf0b
mov     eax, 1
mov     ebx, edi
jmp     loc_1003ce79
mov     ecx, offset asc_1007ab88
xor     eax, eax
call    sub_10025e50
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1003cf80
test    eax, eax
jz      short loc_1003cf1d
add     eax, eax
jmp     short loc_1003cf22
mov     eax, 33h
mov     edx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edx]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003cfad
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_1003cf62
cmp     ebx, [eax+0fch]
jb      short loc_1003cf62
cmp     ebx, [eax+100h]
jnb     short loc_1003cf62
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003cf6e
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
mov     ebx, edi
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_14]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_34]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 5bh
jmp     short loc_1003cfb0
mov     ebx, [ebp+var_8]
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1003d025
test    eax, eax
jz      short loc_1003cfc2
add     eax, eax
jmp     short loc_1003cfc7
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003d059
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_1003d007
cmp     ebx, [eax+0fch]
jb      short loc_1003d007
cmp     ebx, [eax+100h]
jnb     short loc_1003d007
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003d013
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
mov     ebx, edi
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+arg_10]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_c]
mov     [eax+4], ecx
lea     ecx, [edx+ecx+1]
mov     edx, [ebp+var_14]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 56h
jmp     short loc_1003d05c
mov     ebx, [ebp+var_8]
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1003d0d1
test    eax, eax
jz      short loc_1003d06e
add     eax, eax
jmp     short loc_1003d073
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003d0fd
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_1003d0b3
cmp     ebx, [eax+0fch]
jb      short loc_1003d0b3
cmp     ebx, [eax+100h]
jnb     short loc_1003d0b3
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003d0bf
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
mov     ebx, edi
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_14]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     dword ptr [eax+8], 0ffffffffh
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 14h
jmp     short loc_1003d100
mov     ebx, [ebp+var_8]
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1003d175
test    eax, eax
jz      short loc_1003d112
add     eax, eax
jmp     short loc_1003d117
mov     eax, 33h
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_8]
mov     eax, [eax]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003d1a9
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_1003d157
cmp     ebx, [eax+0fch]
jb      short loc_1003d157
cmp     ebx, [eax+100h]
jnb     short loc_1003d157
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003d163
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
mov     ebx, edi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+var_c]
lea     ecx, [edx+ecx+1]
mov     [eax+4], ecx
mov     ecx, [ebp+var_14]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 59h
jmp     short loc_1003d1ac
mov     ebx, [ebp+var_8]
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1003d221
test    eax, eax
jz      short loc_1003d1be
add     eax, eax
jmp     short loc_1003d1c3
mov     eax, 33h
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_8]
mov     eax, [eax]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003d249
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_1003d203
cmp     ebx, [eax+0fch]
jb      short loc_1003d203
cmp     ebx, [eax+100h]
jnb     short loc_1003d203
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003d20f
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
mov     ebx, edi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_14]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 90h
jmp     short loc_1003d24c
mov     ebx, [ebp+var_8]
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1003d2c1
test    eax, eax
jz      short loc_1003d25e
add     eax, eax
jmp     short loc_1003d263
mov     eax, 33h
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_8]
mov     eax, [eax]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003d2ee
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_1003d2a3
cmp     ebx, [eax+0fch]
jb      short loc_1003d2a3
cmp     ebx, [eax+100h]
jnb     short loc_1003d2a3
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003d2af
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
mov     ebx, edi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_14]
mov     [eax+4], ecx
mov     ecx, [ebp+var_34]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 5bh
jmp     short loc_1003d2f1
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_c]
inc     eax
mov     [ebp+var_c], eax
cmp     eax, [ebp+var_10]
jl      loc_1003cdd2
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003d377
test    eax, eax
jz      short loc_1003d313
add     eax, eax
jmp     short loc_1003d318
mov     eax, 33h
mov     esi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1003d427
mov     eax, [esi]
test    eax, eax
jz      short loc_1003d359
cmp     ebx, [eax+0fch]
jb      short loc_1003d359
cmp     ebx, [eax+100h]
jnb     short loc_1003d359
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003d365
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_44]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_24]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     dword ptr [eax+8], 3
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1fh
mov     eax, edi
mov     esi, [ebx+4]
mov     edi, [ebx]
test    esi, esi
jz      loc_1003d433
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003d433
test    eax, eax
jns     short loc_1003d3c3
mov     eax, [ebx+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [esi+edx*4+1]
mov     ecx, [esi+edx*4+10h]
lea     esi, [esi+edx*4]
mov     [ebp+var_58], esi
call    sub_10025e50
mov     dword ptr [esi+10h], 0
mov     eax, offset aaaa
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003d3e6
mov     esi, [ebx]
sub     eax, offset aaaa
and     eax, 3fffffffh
mov     edi, eax
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1003d41b
push    edi
push    offset aaaa
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     eax, [ebp+var_58]
mov     [eax+10h], esi
mov     byte ptr [eax+1], 0ffh
jmp     short loc_1003d43f
mov     eax, 1
mov     ebx, esi
jmp     loc_1003d3a8
mov     ecx, offset aaaa
xor     eax, eax
call    sub_10025e50
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003d4b4
test    eax, eax
jz      short loc_1003d451
add     eax, eax
jmp     short loc_1003d456
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003d4df
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_1003d496
cmp     ebx, [eax+0fch]
jb      short loc_1003d496
cmp     ebx, [eax+100h]
jnb     short loc_1003d496
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003d4a2
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+arg_c]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_38]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 38h
jmp     short loc_1003d4e2
mov     ebx, [ebp+var_8]
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1003d557
test    eax, eax
jz      short loc_1003d4f4
add     eax, eax
jmp     short loc_1003d4f9
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1003d587
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_1003d539
cmp     ebx, [eax+0fch]
jb      short loc_1003d539
cmp     ebx, [eax+100h]
jnb     short loc_1003d539
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003d545
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+arg_c]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_24]
mov     [eax+4], ecx
mov     ecx, [ebp+var_38]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 39h
jmp     short loc_1003d58a
mov     ebx, [ebp+var_8]
mov     ecx, [ebx+4]
mov     edi, [ebp+var_20]
test    ecx, ecx
jz      short loc_1003d59f
mov     eax, [ebx+1ch]
lea     edx, [eax+eax*4]
mov     byte ptr [ecx+edx*4-11h], 8
mov     edi, [edi+14h]
mov     [ebp+var_20], edi
test    edi, edi
jnz     loc_1003c300
mov     eax, [ebp+arg_4]
cmp     dword ptr [eax+10h], 0
jnz     short loc_1003d5f5
mov     ecx, [ebp+var_40]
mov     edx, [eax+14h]
mov     edi, [ebp+var_18]
push    ecx
push    edx
push    edi
push    27h
mov     eax, ebx
call    sub_10025890
mov     esi, [ebp+var_34]
push    esi
push    edi
push    20h
mov     eax, ebx
call    sub_10025990
add     esp, 1ch
push    edi
push    2dh
mov     eax, ebx
call    sub_10025940
push    esi
push    1ch
mov     eax, ebx
call    sub_10025940
add     esp, 10h
jmp     short loc_1003d619
mov     eax, [ebp+var_1c]
test    eax, eax
js      short loc_1003d60d
mov     ecx, [ebx+1ch]
cmp     ecx, eax
jbe     short loc_1003d60d
mov     edx, [ebx+4]
lea     eax, [eax+eax*4]
mov     [edx+eax*4+8], ecx
push    1
mov     eax, ebx
call    sub_100258f0
add     esp, 4
mov     esi, [ebx+1ch]
mov     [ebp+var_1c], eax
cmp     [ebx+20h], esi
jg      short loc_1003d62f
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_1003d655
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_54]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0ah
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_1003d66f
mov     edi, ebx
call    sub_10025810
test    eax, eax
jz      short loc_1003d66f
mov     eax, 1
jmp     short loc_1003d6a0
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_44]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_24]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     dword ptr [eax+8], 3
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1fh
mov     eax, esi
mov     esi, [ebx+4]
mov     edi, [ebx]
test    esi, esi
jz      short loc_1003d6f6
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003d6f6
test    eax, eax
jns     short loc_1003d6b7
mov     eax, [ebx+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [esi+edx*4+1]
mov     ecx, [esi+edx*4+10h]
lea     esi, [esi+edx*4]
call    sub_10025e50
mov     ecx, offset aaaa
mov     dword ptr [esi+10h], 0
call    sub_1000ba20
mov     edi, eax
mov     eax, [ebp+var_8]
mov     edx, [eax]
mov     ebx, ecx
call    sub_10009bc0
mov     ebx, [ebp+var_8]
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0ffh
jmp     short loc_1003d702
mov     ecx, offset aaaa
xor     eax, eax
call    sub_10025e50
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_1003d715
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_1003d73e
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+var_38]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 38h
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_1003d751
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_1003d781
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+arg_c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_38]
mov     [eax+4], edx
mov     edx, [ebp+var_24]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 39h
jmp     short loc_1003d784
mov     edx, [ebp+var_24]
mov     ecx, [ebx+4]
test    ecx, ecx
jz      short loc_1003d796
mov     eax, [ebx+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [ecx+eax*4-11h], 8
mov     eax, [ebp+arg_0]
cmp     [eax+4ch], edx
jge     short loc_1003d7a1
mov     [eax+4ch], edx
mov     eax, [ebp+var_1c]
test    eax, eax
js      short loc_1003d7b9
mov     ecx, [ebx+1ch]
cmp     ecx, eax
jbe     short loc_1003d7b9
lea     edx, [eax+eax*4]
mov     eax, [ebx+4]
mov     [eax+edx*4+8], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi]
mov     edx, [eax+10h]
mov     ebx, [esi+1b0h]
push    edi
mov     edi, [ebp+arg_0]
mov     ecx, edi
add     ecx, ecx
mov     eax, [edx+ecx*8+0ch]
mov     [ebp+var_4], eax
test    ebx, ebx
jnz     short loc_1003d7ea
mov     ebx, esi
push    edi
mov     eax, esi
call    sub_10043c40
mov     ecx, edi
mov     edx, 1
shl     edx, cl
add     esp, 4
push    0
push    0
or      [ebx+154h], edx
mov     ebx, [esi+48h]
lea     eax, [ebx+3]
mov     [esi+48h], eax
push    ebx
push    edi
mov     eax, esi
call    sub_1003c000
mov     ecx, [ebp+var_4]
mov     eax, [esi+4ch]
mov     edi, [ecx+10h]
inc     eax
add     esp, 10h
mov     [ebp+var_8], eax
test    edi, edi
jz      short loc_1003d84a
jmp     short loc_1003d833
mov     eax, [ebp+var_8]
mov     edx, [edi+8]
push    eax
push    ebx
push    0
push    edx
push    esi
call    sub_1003c1f0
mov     edi, [edi]
add     esp, 14h
test    edi, edi
jnz     short loc_1003d830
push    esi
call    sub_10056c90
mov     edi, eax
xor     ebx, ebx
add     esp, 4
cmp     edi, ebx
jz      short loc_1003d88f
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1003d86c
call    sub_10025810
test    eax, eax
jnz     short loc_1003d88f
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+arg_0]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 6bh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, eax
mov     eax, [ebp+arg_0]
mov     edx, [eax+44h]
mov     eax, [esi]
push    edi
mov     ebx, 0fff0bdc0h
test    edx, edx
jz      short loc_1003d8dc
mov     ecx, [eax+14h]
xor     ebx, ebx
test    ecx, ecx
jle     short loc_1003d8dc
mov     eax, [eax+10h]
add     eax, 0ch
lea     esp, [esp+0]
cmp     [eax], edx
jz      short loc_1003d8dc
inc     ebx
add     eax, 10h
cmp     ebx, ecx
jl      short loc_1003d8d0
mov     edi, [esi+1b0h]
test    edi, edi
jnz     short loc_1003d8e8
mov     edi, esi
push    ebx
mov     eax, esi
call    sub_10043c40
mov     edx, 1
mov     ecx, ebx
shl     edx, cl
add     esp, 4
or      [edi+154h], edx
mov     edi, [esi+48h]
lea     eax, [edi+3]
mov     [esi+48h], eax
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_1003d91c
mov     ecx, [eax]
push    offset aidx
push    ecx
jmp     short loc_1003d927
mov     edx, [ebp+arg_0]
mov     eax, [edx]
push    offset atbl
push    eax
push    edi
push    ebx
mov     eax, esi
call    sub_1003c000
mov     ecx, [esi+4ch]
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
add     esp, 10h
inc     ecx
push    ecx
push    edi
push    edx
push    eax
push    esi
call    sub_1003c1f0
add     esp, 14h
push    esi
call    sub_10056c90
mov     edi, eax
xor     ecx, ecx
add     esp, 4
cmp     edi, ecx
jz      short loc_1003d98f
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1003d96e
call    sub_10025810
test    eax, eax
jnz     short loc_1003d98f
xor     ecx, ecx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     byte ptr [eax+3], 0
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 6bh
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, [edi]
cmp     byte ptr [ebx+79h], 0
mov     esi, eax
mov     [ebp+var_8], ebx
jnz     short loc_1003d9d7
lea     eax, [edi+4]
push    eax
push    ebx
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      short loc_1003d9d7
mov     [edi+0ch], eax
inc     dword ptr [edi+44h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jnz     short loc_1003da01
cmp     [ebx+14h], esi
jle     loc_1003db8c
cmp     esi, 1
jz      short loc_1003d9f4
push    esi
mov     eax, edi
call    sub_1003d7c0
add     esp, 4
inc     esi
cmp     esi, [ebx+14h]
jl      short loc_1003d9e4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_4]
cmp     dword ptr [eax+4], 0
jnz     loc_1003daf8
mov     eax, esi
mov     ecx, ebx
call    sub_1003ffb0
test    eax, eax
js      short loc_1003da2d
push    eax
mov     eax, edi
call    sub_1003d7c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     eax, esi
call    sub_1003fe10
mov     esi, eax
add     esp, 4
test    esi, esi
jz      loc_1003db8c
push    0
push    esi
mov     edx, ebx
call    sub_1003f6f0
add     esp, 8
test    eax, eax
jz      short loc_1003da72
mov     ecx, [eax+0ch]
push    eax
push    ecx
mov     eax, edi
call    sub_1003d8a0
add     esp, 8
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi]
cmp     byte ptr [eax+79h], 0
jnz     short loc_1003daa1
lea     edx, [edi+4]
push    edx
push    eax
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      short loc_1003daa1
inc     dword ptr [edi+44h]
mov     [edi+0ch], eax
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi]
push    0
push    esi
push    eax
call    sub_1003f510
add     esp, 0ch
test    eax, eax
jnz     short loc_1003dadb
push    esi
push    offset anosuchtable
push    offset ass_4
push    edi
call    sub_1000bb30
add     esp, 10h
mov     eax, esi
mov     ecx, ebx
mov     byte ptr [edi+11h], 1
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    0
push    eax
mov     eax, edi
call    sub_1003d8a0
add     esp, 8
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     edx, [ebp+var_c]
call    sub_10040020
test    eax, eax
js      loc_1003db8c
mov     ecx, [ebx+10h]
add     eax, eax
mov     edx, [ecx+eax*8]
mov     eax, [ebp+var_c]
push    ebx
mov     [ebp+var_4], edx
call    sub_1003fe10
mov     esi, eax
add     esp, 4
mov     [ebp+var_c], esi
test    esi, esi
jz      short loc_1003db8c
mov     eax, [ebp+var_4]
push    eax
push    esi
mov     edx, ebx
call    sub_1003f6f0
add     esp, 8
test    eax, eax
jz      short loc_1003db5a
mov     ecx, [eax+0ch]
push    eax
push    ecx
mov     eax, edi
call    sub_1003d8a0
add     esp, 8
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+var_4]
mov     ebx, esi
mov     esi, [ebp+arg_0]
push    0
call    sub_1003f660
add     esp, 4
test    eax, eax
jz      short loc_1003db7d
push    0
push    eax
mov     eax, esi
call    sub_1003d8a0
add     esp, 8
mov     esi, [ebp+var_c]
mov     ebx, [ebp+var_8]
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [ebp+arg_8]
test    ebx, ebx
jz      loc_1003dcc3
mov     ecx, [ebx]
test    ecx, ecx
jz      loc_1003dcc3
mov     eax, [ebx+8]
mov     [ebp+var_4], eax
test    eax, eax
jz      loc_1003dcc3
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [eax]
push    edi
mov     edi, [eax+4]
push    edi
push    ecx
push    esi
call    sub_1003f510
add     esp, 0ch
mov     [ebp+var_8], eax
test    eax, eax
jz      loc_1003dcba
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_1003dc0c
push    edi
push    eax
mov     edx, esi
call    sub_1003f6f0
add     esp, 8
mov     [ebp+arg_8], eax
test    eax, eax
jz      short loc_1003dc11
mov     ecx, [eax+24h]
mov     [ebp+arg_0], ecx
jmp     short loc_1003dc18
xor     eax, eax
mov     [ebp+arg_8], eax
mov     [ebp+arg_0], 0
mov     esi, [ebp+var_4]
mov     cl, [esi]
xor     ebx, ebx
test    cl, cl
jz      loc_1003dcba
jmp     short loc_1003dc33
mov     eax, [ebp+arg_8]
cmp     ebx, [ebp+arg_0]
jg      loc_1003dcba
movsx   ecx, cl
xor     edx, edx
cmp     ecx, 30h
jl      short loc_1003dc5b
cmp     ecx, 39h
jg      short loc_1003dc5b
lea     edx, [edx+edx*4]
inc     esi
lea     edx, [ecx+edx*2-30h]
movsx   ecx, byte ptr [esi]
cmp     ecx, 30h
jge     short loc_1003dc46
test    ebx, ebx
jnz     short loc_1003dc65
mov     ecx, [ebp+var_8]
mov     [ecx+18h], edx
test    eax, eax
jz      short loc_1003dcba
mov     eax, [eax+8]
mov     [eax+ebx*4], edx
cmp     byte ptr [esi], 20h
jnz     short loc_1003dc75
inc     esi
mov     edi, 0ah
mov     ecx, offset aunordered
mov     edx, esi
mov     eax, [edx]
cmp     eax, [ecx]
jnz     short loc_1003dca3
sub     edi, 4
add     ecx, 4
add     edx, 4
cmp     edi, 4
jnb     short loc_1003dc81
mov     al, [ecx]
cmp     al, [edx]
jnz     short loc_1003dca3
mov     cl, [ecx+1]
cmp     cl, [edx+1]
jz      short loc_1003dcb3
mov     cl, [esi]
inc     ebx
test    cl, cl
jnz     short loc_1003dc30
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_8]
mov     byte ptr [edx+2eh], 1
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     ecx, [ebx+10h]
shl     eax, 4
mov     edx, [eax+ecx+0ch]
push    esi
push    edi
mov     edi, [edx+20h]
mov     [ebp+var_4], eax
test    edi, edi
jz      short loc_1003dd40
lea     esp, [esp+0]
mov     eax, [edi+8]
mov     ecx, [eax+0ch]
mov     ecx, [ecx+18h]
mov     esi, [eax+8]
mov     [esi], ecx
cmp     ecx, 0ah
jnb     short loc_1003dd09
mov     dword ptr [esi], 0ah
mov     ecx, 1
mov     edx, 0ah
cmp     [eax+24h], ecx
jl      short loc_1003dd27
mov     [esi+ecx*4], edx
cmp     edx, 5
jbe     short loc_1003dd21
dec     edx
inc     ecx
cmp     ecx, [eax+24h]
jle     short loc_1003dd18
cmp     byte ptr [eax+2ch], 0
jz      short loc_1003dd37
mov     edx, [eax+24h]
mov     dword ptr [esi+edx*4], 1
mov     edi, [edi]
test    edi, edi
jnz     short loc_1003dcf0
mov     eax, [ebp+var_4]
mov     ecx, [ebx+10h]
mov     [ebp+var_c], ebx
mov     esi, [eax+ecx]
push    esi
push    offset asqlitestat1
push    ebx
mov     [ebp+var_8], esi
call    sub_1003f510
add     esp, 0ch
test    eax, eax
jnz     short loc_1003dd6a
mov     eax, 1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    esi
push    offset aselecttblidxst
push    ebx
call    sub_1000ae80
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_1003dd90
mov     edi, 7
mov     byte ptr [ebx+32h], 1
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    0
lea     edx, [ebp+var_c]
push    edx
push    offset sub_1003dba0
push    esi
push    ebx
call    sub_1004ff10
mov     edi, eax
add     esp, 14h
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
cmp     edi, 7
jnz     short loc_1003ddb9
mov     byte ptr [ebx+32h], 1
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, eax
xor     ebx, ebx
mov     esi, ecx
test    edi, edi
jz      short loc_1003de3b
cmp     byte ptr [edi], 1ah
jz      short loc_1003de38
call    sub_10035700
mov     ebx, eax
test    ebx, ebx
jnz     short loc_1003de3b
lea     eax, [ebp+var_14]
push    edi
push    eax
mov     [ebp+var_4], 1
mov     [ebp+var_14], offset sub_10037090
mov     [ebp+var_10], offset sub_10037170
call    sub_10033e00
add     esp, 8
cmp     [ebp+var_4], ebx
jnz     short loc_1003de3b
mov     ecx, [edi+4]
mov     edx, [esi]
push    ecx
push    offset ainvalidnames
push    edx
call    sub_1000bb30
add     esp, 0ch
lea     eax, [ebx+1]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [edi], 5eh
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     eax, [ebp+arg_0]
push    ebx
add     eax, 8
push    esi
mov     esi, [eax]
xor     ecx, ecx
mov     [ebp+var_c], eax
mov     eax, [ebp+arg_8]
push    edi
mov     edi, [eax]
mov     bl, 1
mov     [ebp+var_8], ecx
mov     [ebp+var_1c], esi
mov     [ebp+var_18], ecx
mov     [ebp+src], ecx
mov     [ebp+var_4], ecx
call    sub_100253e0
mov     ecx, [ebp+arg_8]
mov     edi, [ecx+4]
mov     [ebp+var_14], eax
call    sub_100253e0
cmp     [ebp+var_14], 0
mov     [ebp+arg_8], eax
mov     eax, offset dword_100796bc
jnz     short loc_1003dea0
mov     [ebp+var_14], eax
cmp     [ebp+arg_8], 0
jnz     short loc_1003dea9
mov     [ebp+arg_8], eax
mov     eax, [esi+64h]
mov     ecx, [esi+14h]
lea     edx, [eax+2]
cmp     ecx, edx
jl      short loc_1003deca
push    eax
push    offset atoomanyattache
push    esi
call    sub_1000ae80
add     esp, 0ch
jmp     loc_1003e2a0
cmp     byte ptr [esi+30h], 0
jnz     short loc_1003deda
push    offset acannotattachda
jmp     loc_1003e297
xor     edi, edi
test    ecx, ecx
jle     short loc_1003defa
mov     ebx, [esi+10h]
mov     edx, [ebp+arg_8]
mov     ecx, [ebx]
call    sub_1000bca0
test    eax, eax
jz      short loc_1003df2d
inc     edi
add     ebx, 10h
cmp     edi, [esi+14h]
jl      short loc_1003dee3
mov     ebx, [esi+10h]
lea     ecx, [esi+1b0h]
cmp     ebx, ecx
jnz     short loc_1003df44
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      loc_1003e37f
mov     edx, esi
mov     esi, [edx+10h]
mov     ecx, 8
mov     edi, ebx
rep movsd
mov     esi, edx
jmp     short loc_1003df60
mov     eax, [ebp+arg_8]
push    eax
push    offset adatabasesisalr
push    esi
call    sub_1000ae80
add     esp, 0ch
jmp     loc_1003e2a0
mov     eax, [esi+14h]
inc     eax
shl     eax, 4
push    eax
mov     eax, esi
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1003e37f
mov     eax, [esi+14h]
mov     [esi+10h], ebx
shl     eax, 4
add     ebx, eax
xor     eax, eax
mov     [ebx], eax
mov     [ebx+4], eax
mov     [ebx+8], eax
mov     [ebx+0ch], eax
mov     ecx, [esi+24h]
lea     edx, [ebp+src]
push    edx
mov     [ebp+var_8], ecx
lea     eax, [ebp+var_18]
push    eax
mov     eax, [ebp+var_14]
lea     ecx, [ebp+var_20]
push    ecx
mov     ecx, [esi]
lea     edx, [ebp+var_8]
push    edx
mov     edx, [ecx+10h]
call    sub_10070eb0
add     esp, 10h
test    eax, eax
jz      loc_1003e082
cmp     eax, 7
jnz     short loc_1003dfaf
mov     byte ptr [esi+32h], 1
mov     esi, [ebp+src]
mov     edx, [ebp+arg_0]
mov     dword ptr [edx+38h], 1
test    esi, esi
jnz     short loc_1003e013
mov     edi, [ebp+var_c]
test    byte ptr [edi+1ch], 40h
jz      short loc_1003dfdd
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_1003dfeb
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
push    esi
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_c]
mov     eax, [edx]
test    eax, eax
jz      short loc_1003e021
mov     eax, [eax+48h]
jmp     short loc_1003e026
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_1003e03b
lea     esp, [esp+0]
cmp     byte ptr [ebx+esi], 0
jz      short loc_1003e03b
inc     ebx
cmp     ebx, eax
jle     short loc_1003e030
lea     esi, [ebx+1]
cmp     ebx, eax
jg      short loc_1003e06f
push    0
mov     eax, esi
mov     edi, edx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_1003e06f
mov     eax, [ebp+src]
mov     ecx, [edi+4]
push    esi
push    eax
push    ecx
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
mov     esi, [ebp+src]
push    esi
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_20]
or      eax, 100h
push    eax
mov     eax, [ebp+var_18]
push    0
push    eax
push    ecx
lea     ecx, [ebx+4]
mov     edx, esi
call    sub_1001adc0
mov     edx, [ebp+var_18]
push    edx
mov     [ebp+var_8], eax
call    sub_10009770
inc     dword ptr [esi+14h]
add     esp, 14h
cmp     [ebp+var_8], 13h
jnz     short loc_1003e0d4
push    offset adatabaseisalre
push    esi
mov     [ebp+var_8], 1
call    sub_1000ae80
add     esp, 8
mov     [ebp+var_4], eax
jmp     loc_1003e19d
cmp     [ebp+var_8], 0
jnz     loc_1003e19d
mov     eax, [ebx+4]
push    esi
call    sub_10044ae0
add     esp, 4
mov     [ebx+0ch], eax
test    eax, eax
jnz     short loc_1003e0fa
mov     [ebp+var_8], 7
jmp     short loc_1003e126
cmp     byte ptr [eax+4ch], 0
jz      short loc_1003e126
mov     ecx, [esi+10h]
mov     edx, [ecx+0ch]
mov     al, [eax+4dh]
cmp     al, [edx+4dh]
jz      short loc_1003e126
push    offset aattacheddataba
push    esi
call    sub_1000ae80
add     esp, 8
mov     [ebp+var_4], eax
mov     [ebp+var_8], 1
mov     ecx, [ebx+4]
mov     edx, [ecx+4]
movzx   ecx, byte ptr [esi+33h]
mov     eax, [edx]
test    ecx, ecx
js      short loc_1003e14f
cmp     byte ptr [eax+0ch], 0
jnz     short loc_1003e14f
mov     edx, [eax+0b8h]
test    edx, edx
jz      short loc_1003e14c
cmp     byte ptr [edx+2bh], 2
jz      short loc_1003e14f
mov     [eax+4], cl
mov     eax, [esi+10h]
mov     edi, [eax+4]
test    edi, edi
jnz     short loc_1003e15d
xor     eax, eax
jmp     short loc_1003e195
call    sub_10019320
mov     eax, [edi+4]
movzx   ecx, word ptr [eax+16h]
shr     ecx, 2
and     ecx, 1
cmp     byte ptr [edi+9], 0
mov     [ebp+var_20], ecx
jz      short loc_1003e192
dec     dword ptr [edi+0ch]
jnz     short loc_1003e192
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_1003e18e
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, [ebp+var_20]
mov     ecx, [ebx+4]
call    sub_1001b830
mov     eax, [ebp+arg_8]
mov     byte ptr [ebx+9], 3
test    eax, eax
jz      short loc_1003e1e1
cmp     byte ptr [eax], 0
jz      short loc_1003e1b6
lea     ecx, [ecx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003e1b0
sub     eax, [ebp+arg_8]
and     eax, 3fffffffh
lea     edi, [eax+1]
mov     ecx, edi
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1003e1dc
mov     ecx, [ebp+arg_8]
push    edi
push    ecx
push    esi
call    memcpy
add     esp, 0ch
mov     eax, esi
mov     esi, [ebp+var_1c]
cmp     [ebp+var_8], 0
mov     [ebx], eax
jnz     short loc_1003e220
test    eax, eax
jnz     short loc_1003e1f6
mov     [ebp+var_8], 7
jmp     short loc_1003e220
push    esi
call    sub_10019440
add     esp, 4
lea     edx, [ebp+var_4]
push    edx
push    esi
call    sub_100537d0
mov     edi, eax
add     esp, 8
mov     ebx, esi
mov     [ebp+var_8], edi
call    sub_10019550
test    edi, edi
jz      loc_1003e37f
mov     ebx, [esi+14h]
mov     eax, [esi+10h]
dec     ebx
mov     edi, ebx
add     edi, edi
mov     eax, [eax+edi*8+4]
mov     [ebp+arg_8], ebx
test    eax, eax
jz      short loc_1003e250
mov     ebx, eax
call    sub_1001b4a0
mov     ecx, [esi+10h]
mov     ebx, [ebp+arg_8]
xor     eax, eax
mov     [ecx+edi*8+4], eax
mov     edx, [esi+10h]
mov     [edx+edi*8+0ch], eax
mov     eax, esi
call    sub_1003fad0
mov     eax, [ebp+var_8]
mov     [esi+14h], ebx
cmp     eax, 7
jz      short loc_1003e284
cmp     eax, 0c0ah
jz      short loc_1003e284
mov     eax, [ebp+var_4]
test    eax, eax
jnz     short loc_1003e2ab
mov     eax, [ebp+var_14]
push    eax
push    offset aunabletoopenda
push    esi
call    sub_1000ae80
add     esp, 0ch
jmp     short loc_1003e2a0
mov     byte ptr [esi+32h], 1
mov     eax, [ebp+var_4]
mov     ecx, esi
call    sub_10009810
push    offset aoutofmemory
push    esi
call    sub_1000ae80
add     esp, 8
mov     [ebp+var_4], eax
test    eax, eax
jz      loc_1003e36b
mov     ecx, [ebp+arg_0]
mov     [ebp+arg_8], eax
mov     dword ptr [ecx+38h], 1
test    eax, eax
jnz     short loc_1003e307
mov     edi, [ebp+var_c]
test    byte ptr [edi+1ch], 40h
jz      short loc_1003e2dc
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
mov     eax, [ebp+var_4]
test    byte ptr [edi+1ch], 20h
jz      short loc_1003e2ed
mov     ebx, [edi+10h]
call    sub_100117b0
mov     eax, [ebp+var_4]
mov     cx, [edi+1ch]
mov     edx, 0bf01h
and     cx, dx
or      cx, 1
mov     [edi+1ch], cx
mov     byte ptr [edi+1eh], 5
jmp     short loc_1003e364
mov     ecx, [ebp+var_c]
mov     ecx, [ecx]
test    ecx, ecx
jz      short loc_1003e315
mov     ecx, [ecx+48h]
jmp     short loc_1003e31a
mov     ecx, 3b9aca00h
xor     ebx, ebx
test    ecx, ecx
js      short loc_1003e32b
cmp     byte ptr [ebx+eax], 0
jz      short loc_1003e32b
inc     ebx
cmp     ebx, ecx
jle     short loc_1003e320
cmp     ebx, ecx
jg      short loc_1003e364
mov     edi, [ebp+var_c]
push    0
lea     eax, [ebx+1]
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_1003e361
mov     edx, [ebp+arg_8]
lea     eax, [ebx+1]
push    eax
mov     eax, [edi+4]
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
mov     eax, [ebp+var_4]
mov     ecx, esi
call    sub_10009810
mov     eax, [ebp+var_8]
test    eax, eax
jz      short loc_1003e37f
mov     edx, [ebp+arg_0]
push    eax
push    edx
call    sub_100297c0
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0a8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ebx
mov     [ebp+var_98], eax
mov     eax, [ebp+arg_8]
push    esi
push    edi
mov     edi, [eax]
mov     bl, 1
call    sub_100253e0
mov     esi, eax
mov     eax, [ebp+var_98]
add     eax, 8
mov     [ebp+var_90], eax
mov     eax, [eax]
xor     edi, edi
mov     [ebp+var_94], eax
test    esi, esi
jnz     short loc_1003e3df
mov     esi, offset dword_100796bc
mov     ecx, [eax+14h]
xor     ebx, ebx
mov     [ebp+var_a0], ebx
mov     [ebp+var_9c], ecx
test    ecx, ecx
jle     short loc_1003e46b
mov     eax, [eax+10h]
cmp     dword ptr [eax+4], 0
mov     [ebp+var_a4], eax
jz      short loc_1003e451
mov     edx, [eax]
mov     cl, [edx]
mov     edi, esi
test    cl, cl
jz      short loc_1003e433
lea     ecx, [ecx+0]
movzx   ebx, byte ptr [edi]
movzx   ecx, cl
mov     cl, ds:byte_10076030[ecx]
cmp     cl, ds:byte_10076030[ebx]
jnz     short loc_1003e42d
mov     cl, [edx+1]
inc     edx
inc     edi
test    cl, cl
jnz     short loc_1003e410
mov     ebx, [ebp+var_a0]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [edi]
movzx   ecx, ds:byte_10076030[ecx]
movzx   edx, ds:byte_10076030[edx]
sub     edx, ecx
mov     ecx, [ebp+var_9c]
jz      short loc_1003e45f
inc     ebx
add     eax, 10h
mov     [ebp+var_a0], ebx
cmp     ebx, ecx
jl      short loc_1003e3f7
mov     edi, [ebp+var_a4]
mov     eax, [ebp+var_94]
cmp     ebx, ecx
jl      short loc_1003e477
push    esi
push    offset anosuchdatabase
jmp     short loc_1003e4ec
cmp     ebx, 2
jge     short loc_1003e48b
push    esi
push    offset acannotdetachda
lea     ecx, [ebp+src]
push    ecx
jmp     short loc_1003e4f3
cmp     byte ptr [eax+30h], 0
jnz     short loc_1003e4ac
push    offset acannotdetachda_0
lea     edx, [ebp+src]
push    edx
push    80h
call    sub_1000b050
add     esp, 0ch
jmp     short loc_1003e500
mov     eax, [edi+4]
cmp     byte ptr [eax+8], 0
jnz     short loc_1003e4e6
cmp     dword ptr [eax+10h], 0
jnz     short loc_1003e4e6
mov     ebx, eax
call    sub_1001b4a0
xor     eax, eax
mov     [edi+4], eax
mov     [edi+0ch], eax
mov     eax, [ebp+var_94]
call    sub_1003fad0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
push    offset adatabasesisloc
lea     eax, [ebp+src]
push    eax
push    80h
call    sub_1000b050
add     esp, 10h
mov     ecx, [ebp+var_98]
mov     edx, [ebp+var_90]
mov     dword ptr [ecx+38h], 1
mov     eax, [edx]
test    eax, eax
jz      short loc_1003e51e
mov     eax, [eax+48h]
jmp     short loc_1003e523
mov     eax, 3b9aca00h
xor     esi, esi
test    eax, eax
js      short loc_1003e53f
lea     esp, [esp+0]
cmp     [ebp+esi+src], 0
jz      short loc_1003e53f
inc     esi
cmp     esi, eax
jle     short loc_1003e530
lea     ebx, [esi+1]
cmp     esi, eax
jg      short loc_1003e576
push    0
mov     eax, ebx
mov     edi, edx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_1003e576
mov     ecx, [edi+4]
push    ebx
lea     eax, [ebp+src]
push    eax
push    ecx
call    memcpy
add     esp, 0ch
mov     [edi+18h], esi
mov     dword ptr [edi+1ch], 1030202h
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 3ch
push    ebx
mov     ebx, eax
mov     eax, [ebx]
push    esi
push    edi
mov     edi, [ebp+arg_c]
mov     [ebp+var_8], eax
xor     eax, eax
mov     [ebp+var_3c], eax
mov     [ebp+var_38], eax
mov     [ebp+var_34], eax
mov     [ebp+var_30], eax
mov     [ebp+var_2c], eax
mov     [ebp+var_28], eax
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
mov     [ebp+var_3c], ebx
test    edi, edi
jz      loc_1003e64b
cmp     byte ptr [edi], 1ah
jz      short loc_1003e648
lea     esi, [ebp+var_3c]
call    sub_10035700
test    eax, eax
jnz     short loc_1003e61a
mov     ecx, edi
push    ecx
lea     edx, [ebp+var_1c]
push    edx
mov     [ebp+var_c], 1
mov     [ebp+var_1c], offset sub_10037090
mov     [ebp+var_18], offset sub_10037170
call    sub_10033e00
add     esp, 8
cmp     [ebp+var_c], 0
jnz     short loc_1003e64b
mov     edx, [ebp+var_3c]
mov     eax, edi
mov     ecx, [eax+4]
push    ecx
push    offset ainvalidnames
push    edx
call    sub_1000bb30
add     esp, 0ch
inc     dword ptr [ebx+44h]
mov     edx, [ebp+arg_c]
mov     esi, [ebp+var_8]
push    edx
push    esi
call    sub_10036430
mov     eax, [ebp+arg_10]
push    eax
push    esi
call    sub_10036430
mov     ecx, [ebp+arg_14]
push    ecx
push    esi
call    sub_10036430
add     esp, 18h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [edi], 5eh
mov     eax, [ebp+arg_10]
lea     ecx, [ebp+var_3c]
call    sub_1003ddd0
test    eax, eax
jnz     short loc_1003e61a
mov     eax, [ebp+arg_14]
lea     ecx, [ebp+var_3c]
call    sub_1003ddd0
test    eax, eax
jnz     short loc_1003e61a
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_1003e693
cmp     byte ptr [eax], 5eh
jnz     short loc_1003e67a
mov     eax, [eax+4]
jmp     short loc_1003e67c
xor     eax, eax
push    0
push    0
push    eax
mov     eax, [ebp+arg_0]
push    eax
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     short loc_1003e61d
push    ebx
call    sub_10056c90
mov     edi, [ebx+40h]
mov     [ebp+var_4], eax
mov     eax, [ebx+3ch]
add     esp, 4
cmp     eax, 4
jl      short loc_1003e6b8
lea     ecx, [edi+4]
add     eax, 0fffffffch
mov     [ebx+40h], ecx
mov     [ebx+3ch], eax
jmp     short loc_1003e6c4
mov     eax, [ebx+4ch]
lea     edi, [eax+1]
add     eax, 4
mov     [ebx+4ch], eax
mov     eax, [ebp+arg_c]
mov     esi, edi
mov     ecx, ebx
call    sub_100399d0
mov     eax, [ebp+arg_10]
lea     esi, [edi+1]
mov     ecx, ebx
call    sub_100399d0
mov     eax, [ebp+arg_14]
lea     esi, [edi+2]
mov     ecx, ebx
call    sub_100399d0
mov     esi, [ebp+var_4]
test    esi, esi
jz      loc_1003e61d
mov     ebx, [ebp+arg_4]
movsx   eax, word ptr [ebx]
lea     edx, [edi+3]
sub     edi, eax
push    edx
add     edi, 3
push    edi
push    0
push    12h
mov     eax, esi
call    sub_10025890
mov     eax, [esi+4]
add     esp, 10h
test    eax, eax
jz      short loc_1003e726
mov     ecx, [esi+1ch]
mov     dl, [ebx]
lea     ecx, [ecx+ecx*4]
mov     [eax+ecx*4-11h], dl
mov     ecx, [esi+4]
mov     edi, [esi]
test    ecx, ecx
jz      short loc_1003e754
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003e754
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4-5]
lea     esi, [ecx+eax*4]
movsx   eax, byte ptr [esi+1]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     [esi+10h], ebx
mov     byte ptr [esi+1], 0fbh
jmp     short loc_1003e760
mov     ecx, ebx
mov     eax, 0fffffffbh
call    sub_10025e50
mov     eax, [ebp+var_4]
xor     ecx, ecx
cmp     [ebp+arg_0], 18h
setz    cl
push    ecx
push    81h
call    sub_10025940
add     esp, 8
jmp     loc_1003e61d
push    ebp
mov     ebp, esp
sub     esp, 30h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, eax
mov     eax, [edi]
mov     [ebp+var_c], eax
xor     eax, eax
mov     [ebp+var_2c], eax
mov     [ebp+var_28], eax
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
mov     [ebp+var_1c], eax
mov     [ebp+var_18], eax
mov     [ebp+var_14], eax
mov     [ebp+var_10], eax
mov     eax, esi
lea     ecx, [ebp+var_2c]
mov     [ebp+var_2c], edi
call    sub_1003ddd0
test    eax, eax
jnz     loc_1003e90f
test    esi, esi
jz      short loc_1003e7eb
cmp     byte ptr [esi], 5eh
jnz     short loc_1003e7d0
mov     eax, [esi+4]
jmp     short loc_1003e7d2
xor     eax, eax
push    0
push    0
push    eax
push    19h
mov     eax, edi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1003e8fb
push    edi
call    sub_10056c90
mov     ebx, [edi+40h]
mov     [ebp+var_8], eax
mov     eax, [edi+3ch]
add     esp, 4
cmp     eax, 4
jl      short loc_1003e810
lea     ecx, [ebx+4]
add     eax, 0fffffffch
mov     [edi+40h], ecx
mov     [edi+3ch], eax
jmp     short loc_1003e81c
mov     eax, [edi+4ch]
lea     ebx, [eax+1]
add     eax, 4
mov     [edi+4ch], eax
push    ebx
push    0
push    edi
call    sub_10038b70
add     esp, 0ch
cmp     eax, ebx
jz      short loc_1003e841
mov     ecx, [edi+8]
test    ecx, ecx
jz      short loc_1003e841
push    ebx
push    eax
push    0fh
mov     eax, ecx
call    sub_10025990
add     esp, 0ch
lea     esi, [ebx+1]
push    esi
push    0
push    edi
call    sub_10038b70
add     esp, 0ch
cmp     eax, esi
jz      short loc_1003e869
mov     ecx, [edi+8]
test    ecx, ecx
jz      short loc_1003e869
push    esi
push    eax
push    0fh
mov     eax, ecx
call    sub_10025990
add     esp, 0ch
mov     eax, [ebp+arg_0]
lea     esi, [ebx+2]
mov     ecx, edi
call    sub_100399d0
mov     esi, [ebp+var_8]
test    esi, esi
jz      short loc_1003e8f8
lea     edx, [ebx+3]
push    edx
add     ebx, 2
push    ebx
push    0
push    12h
mov     eax, esi
call    sub_10025890
mov     eax, [esi+4]
add     esp, 10h
test    eax, eax
jz      short loc_1003e8a5
mov     ecx, [esi+1ch]
lea     ecx, [ecx+ecx*4]
mov     byte ptr [eax+ecx*4-11h], 1
mov     ecx, [esi+4]
mov     edi, [esi]
test    ecx, ecx
jz      short loc_1003e8d8
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003e8d8
mov     eax, [esi+1ch]
lea     edx, [eax+eax*4-5]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ebx, [ecx+edx*4]
mov     ecx, [ebx+10h]
call    sub_10025e50
mov     dword ptr [ebx+10h], offset dword_1007681c
mov     byte ptr [ebx+1], 0fbh
jmp     short loc_1003e8e7
mov     ecx, offset dword_1007681c
mov     eax, 0fffffffbh
call    sub_10025e50
push    0
push    81h
mov     eax, esi
call    sub_10025940
add     esp, 8
mov     esi, [ebp+arg_0]
mov     eax, [ebp+var_c]
push    esi
push    eax
call    sub_10036430
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_c]
inc     dword ptr [edi+44h]
push    esi
push    eax
call    sub_10036430
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
test    eax, eax
js      short loc_1003e95e
cmp     eax, 1
jz      short loc_1003e95e
mov     edx, [esi]
mov     [ecx], esi
mov     edx, [edx+10h]
add     eax, eax
mov     eax, [edx+eax*8]
mov     edx, [ebp+arg_0]
mov     [ecx+4], eax
mov     eax, [ebp+arg_4]
mov     [ecx+0ch], eax
mov     [ecx+8], edx
mov     eax, 1
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+arg_4]
sub     esp, 0ch
push    ebx
push    esi
push    edi
test    eax, eax
jz      loc_1003ea44
mov     esi, [ebp+arg_0]
mov     ebx, [esi+4]
xor     ecx, ecx
lea     edi, [eax+4]
mov     [esp+18h+var_8], 0
mov     [esp+18h+var_4], edi
cmp     cx, [eax]
jge     loc_1003ea44
mov     ecx, [edi]
test    ecx, ecx
jnz     short loc_1003e9f9
mov     edx, [esi]
mov     edx, [edx]
test    ebx, ebx
jnz     short loc_1003e9bb
xor     eax, eax
mov     [edi], eax
jmp     short loc_1003ea04
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_1003e9c8
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003e9c2
sub     eax, ebx
and     eax, 3fffffffh
lea     edi, [eax+1]
mov     ecx, edi
mov     esi, edx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1003e9ec
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     edi, [esp+18h+var_4]
mov     eax, esi
mov     esi, [ebp+arg_0]
mov     [edi], eax
jmp     short loc_1003ea04
mov     edx, ebx
call    sub_1000bca0
test    eax, eax
jnz     short loc_1003ea4d
mov     eax, [edi+10h]
push    eax
push    esi
call    sub_1003ea80
add     esp, 8
test    eax, eax
jnz     short loc_1003ea68
mov     ecx, [edi+24h]
push    ecx
push    esi
call    sub_1003eb20
add     esp, 8
test    eax, eax
jnz     short loc_1003ea68
mov     edx, [ebp+arg_4]
mov     eax, [esp+18h+var_8]
movsx   ecx, word ptr [edx]
inc     eax
add     edi, 3ch
mov     [esp+18h+var_8], eax
mov     [esp+18h+var_4], edi
cmp     eax, ecx
jl      loc_1003e9a7
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [edi]
mov     eax, [esi+0ch]
mov     ecx, [esi+8]
push    edx
mov     edx, [esi]
push    eax
push    ecx
push    offset astcannotrefere
push    edx
call    sub_1000bb30
add     esp, 14h
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     [ebp+arg_4], 0
push    ebx
push    esi
push    edi
jz      short loc_1003eb03
lea     esp, [esp+0]
mov     eax, [ebp+arg_4]
mov     edi, [eax]
test    edi, edi
jz      short loc_1003eabd
mov     ebx, [edi+8]
xor     esi, esi
cmp     [edi], esi
jle     short loc_1003eabd
mov     ecx, [ebx]
mov     edx, [ebp+arg_0]
push    ecx
push    edx
call    sub_1003eb20
add     esp, 8
test    eax, eax
jnz     short loc_1003eb0a
inc     esi
add     ebx, 14h
cmp     esi, [edi]
jl      short loc_1003eaa2
mov     eax, [ebp+arg_4]
mov     ecx, [eax+24h]
mov     edi, [ebp+arg_0]
push    ecx
push    edi
call    sub_1003e970
add     esp, 8
test    eax, eax
jnz     short loc_1003eb0a
mov     esi, [ebp+arg_4]
mov     edx, [esi+28h]
push    edx
push    edi
call    sub_1003eb20
add     esp, 8
test    eax, eax
jnz     short loc_1003eb0a
mov     eax, [esi+30h]
push    eax
push    edi
call    sub_1003eb20
add     esp, 8
test    eax, eax
jnz     short loc_1003eb0a
mov     esi, [esi+38h]
mov     [ebp+arg_4], esi
test    esi, esi
jnz     short loc_1003ea90
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 1
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
test    esi, esi
jz      loc_1003ebaf
movzx   eax, word ptr [esi+2]
test    eax, 4000h
jnz     short loc_1003ebaf
test    eax, 800h
jz      short loc_1003eb61
mov     eax, [esi+10h]
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
call    sub_1003ea80
add     esp, 8
test    eax, eax
jz      short loc_1003eb8f
pop     edi
pop     esi
mov     eax, 1
pop     ebx
pop     ebp
retn
mov     edi, [esi+10h]
test    edi, edi
jz      short loc_1003eb8f
mov     ebx, [edi+8]
xor     esi, esi
cmp     [edi], esi
jle     short loc_1003eb8c
mov     edx, [ebx]
mov     eax, [ebp+arg_0]
push    edx
push    eax
call    sub_1003eb20
add     esp, 8
test    eax, eax
jnz     short loc_1003eb57
inc     esi
add     ebx, 14h
cmp     esi, [edi]
jl      short loc_1003eb71
mov     esi, [ebp+arg_4]
mov     ecx, [esi+0ch]
mov     edx, [ebp+arg_0]
push    ecx
push    edx
call    sub_1003eb20
add     esp, 8
test    eax, eax
jnz     short loc_1003eb57
mov     esi, [esi+8]
mov     [ebp+arg_4], esi
test    esi, esi
jz      short loc_1003ebaf
jmp     short loc_1003eb31
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
test    esi, esi
jz      short loc_1003ec39
lea     ecx, [ecx+0]
mov     eax, [esi+8]
mov     edi, [ebp+arg_0]
push    eax
push    edi
call    sub_1003ea80
add     esp, 8
test    eax, eax
jnz     short loc_1003ec2f
mov     ecx, [esi+14h]
push    ecx
push    edi
call    sub_1003eb20
add     esp, 8
test    eax, eax
jnz     short loc_1003ec2f
mov     edi, [esi+18h]
test    edi, edi
jz      short loc_1003ec23
mov     ebx, [edi+8]
xor     esi, esi
cmp     [edi], esi
jle     short loc_1003ec20
mov     edx, [ebx]
mov     eax, [ebp+arg_0]
push    edx
push    eax
call    sub_1003eb20
add     esp, 8
test    eax, eax
jnz     short loc_1003ec2f
inc     esi
add     ebx, 14h
cmp     esi, [edi]
jl      short loc_1003ec05
mov     esi, [ebp+arg_4]
mov     esi, [esi+20h]
mov     [ebp+arg_4], esi
test    esi, esi
jz      short loc_1003ec39
jmp     short loc_1003ebd0
pop     edi
pop     esi
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_1003ec58
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [esi+104h], eax
mov     eax, [esi+4]
mov     [esi+108h], ecx
test    eax, eax
jz      short loc_1003ec7d
mov     cl, 1
mov     [eax+5fh], cl
mov     eax, [eax+3ch]
test    eax, eax
jnz     short loc_1003ec73
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1003ec8e
push    esi
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     esi
pop     ebp
retn
push    ecx
push    offset aauthorizermalf
push    esi
call    sub_1000bb30
add     esp, 8
mov     dword ptr [esi+0ch], 1
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_8]
mov     edx, [edi+204h]
push    ebx
push    esi
mov     esi, [edi]
mov     ecx, [esi+10h]
push    edx
mov     edx, [esi+108h]
add     eax, eax
mov     eax, [ecx+eax*8]
mov     ecx, [ebp+arg_0]
push    eax
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    eax
mov     eax, [esi+104h]
push    ecx
push    14h
push    edx
call    eax
mov     ebx, eax
add     esp, 18h
cmp     ebx, 1
jnz     short loc_1003ed5b
cmp     dword ptr [esi+14h], 2
jg      short loc_1003ed32
cmp     [ebp+arg_8], 0
jnz     short loc_1003ed32
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    ecx
push    edx
push    offset aaccesstossispr
push    edi
call    sub_1000bb30
add     esp, 10h
mov     dword ptr [edi+0ch], 17h
mov     eax, ebx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+var_4]
push    eax
push    ecx
push    edx
push    offset aaccesstosssisp
push    edi
call    sub_1000bb30
add     esp, 14h
mov     dword ptr [edi+0ch], 17h
mov     eax, ebx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 2
jz      short loc_1003ed7b
test    ebx, ebx
jz      short loc_1003ed7b
push    offset aauthorizermalf
push    edi
call    sub_1000bb30
add     esp, 8
mov     dword ptr [edi+0ch], 1
mov     eax, ebx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
push    ebx
xor     ebx, ebx
push    esi
push    edi
cmp     [eax+104h], ebx
jz      loc_1003ee68
test    edx, edx
jz      loc_1003ee68
mov     ecx, [eax+14h]
xor     esi, esi
test    ecx, ecx
jle     short loc_1003edd4
mov     eax, [eax+10h]
add     eax, 0ch
cmp     [eax], edx
jz      short loc_1003edcc
inc     esi
add     eax, 10h
cmp     esi, ecx
jl      short loc_1003edc0
test    esi, esi
js      loc_1003ee68
mov     edi, [ebp+arg_4]
cmp     byte ptr [edi], 3ch
jnz     short loc_1003ede7
mov     ecx, [ebp+arg_0]
mov     ebx, [ecx+1b4h]
jmp     short loc_1003ee1c
mov     ecx, [ebp+arg_8]
movsx   edx, word ptr [ecx]
xor     eax, eax
test    edx, edx
jle     short loc_1003ee1c
mov     edi, [edi+18h]
add     ecx, 24h
lea     esp, [esp+0]
cmp     edi, [ecx]
jz      short loc_1003ee0e
inc     eax
add     ecx, 3ch
cmp     eax, edx
jl      short loc_1003ee00
jmp     short loc_1003ee1c
mov     edx, eax
shl     edx, 4
sub     edx, eax
mov     eax, [ebp+arg_8]
mov     ebx, [eax+edx*4+10h]
mov     ecx, [ebp+arg_4]
movsx   eax, word ptr [ecx+1ch]
test    ebx, ebx
jz      short loc_1003ee68
test    eax, eax
js      short loc_1003ee36
lea     edx, [eax+eax*2]
mov     eax, [ebx+0ch]
mov     eax, [eax+edx*8]
jmp     short loc_1003ee4d
mov     eax, [ebx+4]
test    eax, eax
js      short loc_1003ee48
mov     edx, [ebx+0ch]
lea     ecx, [eax+eax*2]
mov     eax, [edx+ecx*8]
jmp     short loc_1003ee4d
mov     eax, offset arowid_0
mov     edi, [ebp+arg_0]
push    esi
push    eax
mov     eax, [ebx]
push    eax
call    sub_1003ecc0
add     esp, 0ch
cmp     eax, 2
jnz     short loc_1003ee68
mov     ecx, [ebp+arg_4]
mov     byte ptr [ecx], 62h
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, eax
mov     eax, [esi]
cmp     byte ptr [eax+79h], 0
push    edi
jnz     short loc_1003eef0
cmp     byte ptr [esi+1d5h], 0
jnz     short loc_1003eef0
mov     ecx, [eax+104h]
test    ecx, ecx
jz      short loc_1003eef0
mov     edx, [esi+204h]
mov     eax, [eax+108h]
push    edx
mov     edx, [ebp+arg_c]
push    edx
mov     edx, [ebp+arg_8]
push    edx
mov     edx, [ebp+arg_4]
push    edx
mov     edx, [ebp+arg_0]
push    edx
push    eax
call    ecx
mov     edi, eax
add     esp, 18h
cmp     edi, 1
jnz     short loc_1003eed7
push    offset anotauthorized
push    esi
call    sub_1000bb30
add     esp, 8
mov     dword ptr [esi+0ch], 17h
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
test    edi, edi
jz      short loc_1003eeea
cmp     edi, 2
jz      short loc_1003eeea
mov     edi, 1
call    sub_1003eca0
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+1b0h]
push    edi
test    eax, eax
jz      short loc_1003ef15
mov     esi, eax
mov     edx, [esi+1a4h]
xor     ecx, ecx
test    edx, edx
jle     short loc_1003ef3e
mov     eax, [esi+1a8h]
mov     edi, [ebp+arg_0]
cmp     [eax], edi
jnz     short loc_1003ef36
mov     edi, [ebp+arg_4]
cmp     [eax+4], edi
jz      short loc_1003efa8
inc     ecx
add     eax, 10h
cmp     ecx, edx
jl      short loc_1003ef27
mov     ecx, [esi]
mov     edi, [esi+1a8h]
lea     eax, [edx+1]
shl     eax, 4
push    eax
mov     ebx, edi
mov     eax, ecx
mov     [ebp+var_4], ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1003ef6c
mov     ecx, [ebp+var_4]
mov     eax, edi
call    sub_10009810
mov     [esi+1a8h], ebx
test    ebx, ebx
jz      short loc_1003efcf
mov     ecx, [esi+1a4h]
mov     edx, [ebp+arg_4]
mov     eax, ecx
shl     eax, 4
add     eax, ebx
inc     ecx
mov     [esi+1a4h], ecx
mov     ecx, [ebp+arg_0]
mov     [eax], ecx
mov     cl, [ebp+arg_8]
mov     [eax+4], edx
mov     edx, [ebp+arg_c]
mov     [eax+8], cl
mov     [eax+0ch], edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [eax+8], 0
jnz     short loc_1003efc0
cmp     [ebp+arg_8], 0
jnz     short loc_1003efc0
xor     ecx, ecx
mov     [eax+8], cl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, 1
mov     [eax+8], cl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi]
pop     edi
mov     dword ptr [esi+1a4h], 0
pop     esi
mov     byte ptr [eax+32h], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
push    edi
call    sub_10056c90
mov     esi, eax
xor     eax, eax
add     esp, 4
mov     [ebp+var_c], eax
cmp     [edi+1a4h], eax
jle     loc_1003f15a
mov     [ebp+var_4], eax
jmp     short loc_1003f022
mov     edi, ecx
mov     eax, [edi+1a8h]
add     eax, [ebp+var_4]
mov     edi, [esi+1ch]
mov     ecx, [eax]
mov     edx, [eax+0ch]
mov     [ebp+var_10], ecx
movzx   ecx, byte ptr [eax+8]
mov     [ebp+var_8], edx
mov     edx, [eax+4]
mov     eax, [esi+20h]
mov     [ebp+var_18], ecx
mov     [ebp+var_14], edx
cmp     eax, edi
jg      short loc_1003f0b4
test    eax, eax
jz      short loc_1003f055
add     eax, eax
jmp     short loc_1003f05a
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1003f123
mov     eax, [esi]
test    eax, eax
jz      short loc_1003f098
cmp     ebx, [eax+0fch]
jb      short loc_1003f098
cmp     ebx, [eax+100h]
jnb     short loc_1003f098
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1003f0a4
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_14]
mov     [eax+4], ecx
mov     ecx, [ebp+var_18]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 83h
mov     eax, edi
mov     ebx, [esi+4]
mov     edi, [esi]
test    ebx, ebx
jz      short loc_1003f133
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003f133
test    eax, eax
jns     short loc_1003f0fb
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ebx+edx*4+1]
mov     ecx, [ebx+edx*4+10h]
lea     ebx, [ebx+edx*4]
call    sub_10025e50
mov     eax, [ebp+var_8]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_1003f12a
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1003f140
mov     eax, 1
jmp     short loc_1003f0e4
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0feh
jmp     short loc_1003f140
mov     ecx, [ebp+var_8]
mov     eax, 0fffffffeh
call    sub_10025e50
mov     eax, [ebp+var_c]
mov     ecx, [ebp+arg_0]
add     [ebp+var_4], 10h
inc     eax
mov     [ebp+var_c], eax
cmp     eax, [ecx+1a4h]
jl      loc_1003f020
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx]
cmp     byte ptr [eax+32h], 0
push    esi
push    edi
mov     [ebp+var_4], eax
jnz     loc_1003f405
cmp     byte ptr [ebx+12h], 0
jnz     loc_1003f405
xor     edi, edi
cmp     [ebx+44h], edi
jnz     loc_1003f405
push    ebx
call    sub_10056c90
mov     esi, eax
add     esp, 4
cmp     esi, edi
jz      loc_1003f3e3
push    6
call    sub_100258f0
mov     eax, [ebx+15ch]
add     esp, 4
cmp     eax, edi
jle     loc_1003f3a9
dec     eax
mov     edx, esi
call    sub_10025e30
mov     eax, [ebp+var_4]
mov     [ebp+var_8], 1
cmp     [eax+14h], edi
jle     loc_1003f263
lea     ecx, [ebx+160h]
mov     [ebp+var_10], edi
mov     [ebp+var_c], ecx
mov     edx, [ebp+var_8]
test    [ebx+158h], edx
jz      short loc_1003f24f
mov     ecx, edi
mov     eax, esi
call    sub_100263e0
mov     eax, [ebx+154h]
and     eax, [ebp+var_8]
neg     eax
sbb     eax, eax
neg     eax
push    eax
push    edi
push    23h
mov     eax, esi
call    sub_10025990
mov     ecx, [ebp+var_4]
add     esp, 0ch
cmp     byte ptr [ecx+79h], 0
jnz     short loc_1003f24f
mov     edx, ecx
mov     eax, [edx+10h]
mov     ecx, [ebp+var_10]
mov     edx, [eax+ecx+0ch]
mov     eax, [edx+4]
mov     ecx, [ebp+var_c]
mov     edx, [ecx]
push    eax
push    edx
push    edi
push    26h
mov     eax, esi
call    sub_10025890
add     esp, 10h
mov     eax, [ebp+var_4]
shl     [ebp+var_8], 1
add     [ebp+var_c], 4
add     [ebp+var_10], 10h
inc     edi
cmp     edi, [eax+14h]
jl      short loc_1003f1f2
xor     eax, eax
mov     [ebp+var_c], eax
cmp     [ebx+1d8h], eax
jle     loc_1003f343
mov     ecx, [ebx+220h]
mov     edx, [ecx+eax*4]
mov     eax, [edx+34h]
mov     [ebp+var_10], eax
test    eax, eax
jz      short loc_1003f2a1
mov     ecx, [ebp+var_4]
jmp     short loc_1003f293
mov     eax, [ebp+var_10]
cmp     [eax], ecx
jz      short loc_1003f2a1
mov     eax, [eax+18h]
mov     [ebp+var_10], eax
test    eax, eax
jnz     short loc_1003f290
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1003f2bd
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1003f2bd
mov     eax, 1
xor     ecx, ecx
jmp     short loc_1003f2e2
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 84h
mov     eax, ebx
mov     ebx, [esi+4]
mov     edi, [esi]
cmp     ebx, ecx
jz      short loc_1003f32b
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003f32b
cmp     eax, ecx
jge     short loc_1003f2f9
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ebx+edx*4+1]
mov     ecx, [ebx+edx*4+10h]
lea     ebx, [ebx+edx*4]
call    sub_10025e50
mov     eax, [ebp+var_10]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_1003f321
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1003f32b
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0f6h
inc     dword ptr [eax+0ch]
mov     eax, [ebp+var_c]
mov     ecx, [ebp+arg_0]
inc     eax
mov     [ebp+var_c], eax
mov     ebx, ecx
cmp     eax, [ecx+1d8h]
jl      loc_1003f274
push    ebx
mov     dword ptr [ebx+1d8h], 0
call    sub_1003eff0
add     esp, 4
push    ebx
call    sub_1004bbd0
mov     eax, [esi+1ch]
mov     edx, [ebx+15ch]
add     esp, 4
mov     [ebp+var_10], edx
mov     [ebp+arg_0], eax
cmp     [esi+20h], eax
jg      short loc_1003f381
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1003f3a7
mov     eax, [ebp+arg_0]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_10]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
xor     edi, edi
cmp     [ebx+44h], edi
jnz     short loc_1003f3e3
mov     eax, [ebp+var_4]
cmp     byte ptr [eax+32h], 0
jnz     short loc_1003f3e3
cmp     [ebx+1ach], edi
jz      short loc_1003f3cb
cmp     [ebx+48h], edi
jnz     short loc_1003f3cb
mov     dword ptr [ebx+48h], 1
push    ebx
mov     eax, esi
call    sub_10026b40
add     esp, 4
mov     dword ptr [ebx+0ch], 65h
mov     byte ptr [ebx+10h], 0
jmp     short loc_1003f3ea
mov     dword ptr [ebx+0ch], 1
mov     [ebx+48h], edi
mov     [ebx+4ch], edi
mov     [ebx+50h], edi
mov     [ebx+1cch], edi
mov     [ebx+158h], edi
mov     [ebx+15ch], edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0dch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebx]
xor     eax, eax
push    edi
mov     [ebp+var_54], eax
mov     [ebp+var_58], esi
cmp     [ebx+44h], eax
jnz     loc_1003f4f4
lea     ecx, [ebp+var_50]
mov     edx, ecx
mov     [ebp+var_74], ecx
mov     ecx, [ebp+arg_4]
push    ecx
mov     [ebp+var_70], edx
mov     [ebp+var_6c], eax
mov     eax, [esi+48h]
lea     edx, [ebp+var_78]
push    1
push    edx
lea     ecx, [ebp+arg_8]
mov     [ebp+var_68], 46h
mov     [ebp+var_64], eax
mov     [ebp+var_5f], 1
mov     [ebp+var_60], 0
mov     [ebp+var_78], esi
call    sub_10009dd0
add     esp, 0ch
lea     edi, [ebp+var_78]
call    sub_1000ad70
cmp     [ebp+var_60], 0
mov     [ebp+var_5c], eax
jz      short loc_1003f48e
mov     byte ptr [esi+32h], 1
test    eax, eax
jz      short loc_1003f4f4
inc     byte ptr [ebx+12h]
lea     eax, [ebx+1cch]
push    60h
mov     esi, eax
push    0
mov     ecx, 18h
lea     edi, [ebp+var_d8]
push    eax
rep movsd
call    memset
mov     esi, [ebp+var_5c]
add     esp, 0ch
lea     eax, [ebp+var_54]
push    eax
push    esi
push    ebx
call    sub_1006e390
mov     edi, [ebp+var_58]
mov     eax, [ebp+var_54]
add     esp, 0ch
mov     ecx, edi
call    sub_10009810
mov     eax, esi
mov     ecx, edi
call    sub_10009810
dec     byte ptr [ebx+12h]
mov     ecx, 18h
lea     esi, [ebp+var_d8]
lea     edi, [ebx+1cch]
rep movsd
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
xor     eax, eax
mov     [ebp+var_4], eax
mov     ecx, edi
test    edi, edi
jnz     short loc_1003f52e
xor     ebx, ebx
mov     [ebp+var_8], ebx
jmp     short loc_1003f544
cmp     [edi], al
jz      short loc_1003f537
inc     ecx
cmp     [ecx], al
jnz     short loc_1003f532
sub     ecx, edi
and     ecx, 3fffffffh
mov     ebx, ecx
mov     [ebp+var_8], ecx
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx+14h]
xor     esi, esi
mov     [ebp+var_c], esi
mov     [ebp+var_10], ecx
test    ecx, ecx
jle     loc_1003f645
jmp     short loc_1003f563
mov     edi, [ebp+arg_4]
cmp     esi, 2
jge     short loc_1003f56b
xor     esi, 1
mov     ecx, [ebp+arg_8]
test    ecx, ecx
jz      short loc_1003f5cb
mov     eax, [ebp+arg_0]
mov     eax, [eax+10h]
mov     edx, esi
shl     edx, 4
mov     edi, [edx+eax]
mov     dl, [ecx]
test    dl, dl
jz      short loc_1003f5ad
jmp     short loc_1003f590
movzx   eax, byte ptr [edi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[eax]
jnz     short loc_1003f5ad
mov     dl, [ecx+1]
inc     ecx
inc     edi
test    dl, dl
jnz     short loc_1003f590
movzx   ecx, byte ptr [ecx]
movzx   edx, byte ptr [edi]
movzx   edx, ds:byte_10076030[edx]
movzx   ecx, ds:byte_10076030[ecx]
sub     ecx, edx
mov     eax, [ebp+var_4]
jnz     short loc_1003f635
mov     edi, [ebp+arg_4]
mov     edx, [ebp+arg_0]
mov     eax, [edx+10h]
add     esi, esi
mov     esi, [eax+esi*8+0ch]
cmp     dword ptr [esi+14h], 0
jz      short loc_1003f618
xor     eax, eax
mov     edx, ebx
mov     ecx, edi
test    ebx, ebx
jle     short loc_1003f60e
jmp     short loc_1003f5f0
movzx   edi, byte ptr [ecx]
movzx   edi, ds:byte_10076030[edi]
lea     ebx, ds:0[eax*8]
xor     edi, ebx
dec     edx
xor     eax, edi
inc     ecx
test    edx, edx
jg      short loc_1003f5f0
mov     ebx, [ebp+var_8]
mov     edi, [ebp+arg_4]
xor     edx, edx
div     dword ptr [esi+8]
jmp     short loc_1003f61a
xor     edx, edx
push    ebx
push    edi
lea     eax, [esi+8]
call    sub_1000ce60
add     esp, 8
test    eax, eax
jz      short loc_1003f64c
mov     eax, [eax+8]
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_1003f645
mov     esi, [ebp+var_c]
inc     esi
mov     [ebp+var_c], esi
cmp     esi, [ebp+var_10]
jl      loc_1003f560
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
mov     [ebp+var_4], eax
jmp     short loc_1003f635
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [esi]
cmp     byte ptr [eax+79h], 0
jnz     short loc_1003f689
lea     ecx, [esi+4]
push    ecx
push    eax
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      short loc_1003f689
inc     dword ptr [esi+44h]
mov     [esi+0ch], eax
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
mov     edx, [esi]
push    edi
push    ebx
push    edx
call    sub_1003f510
add     esp, 0ch
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_1003f6e2
cmp     [ebp+arg_0], eax
mov     eax, offset anosuchview
jnz     short loc_1003f6ac
mov     eax, offset anosuchtable
push    ebx
test    edi, edi
jz      short loc_1003f6cc
push    edi
push    eax
push    offset asss
push    esi
call    sub_1000bb30
mov     eax, [ebp+var_4]
add     esp, 14h
mov     byte ptr [esi+11h], 1
mov     esp, ebp
pop     ebp
retn
push    eax
push    offset ass_4
push    esi
call    sub_1000bb30
mov     eax, [ebp+var_4]
add     esp, 10h
mov     byte ptr [esi+11h], 1
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, [ebp+arg_0]
push    ebx
push    esi
xor     esi, esi
mov     [ebp+var_8], esi
mov     ecx, eax
test    eax, eax
jnz     short loc_1003f70d
xor     ebx, ebx
mov     [ebp+var_c], ebx
jmp     short loc_1003f725
cmp     byte ptr [eax], 0
jz      short loc_1003f718
inc     ecx
cmp     byte ptr [ecx], 0
jnz     short loc_1003f712
sub     ecx, eax
and     ecx, 3fffffffh
mov     ebx, ecx
mov     [ebp+var_c], ecx
mov     ecx, [edx+14h]
xor     eax, eax
mov     [ebp+var_4], eax
mov     [ebp+var_14], ecx
test    ecx, ecx
jle     loc_1003f807
mov     ecx, [edx+10h]
mov     [ebp+var_10], ecx
push    edi
nop
mov     ecx, eax
cmp     eax, 2
jge     short loc_1003f74a
xor     ecx, 1
mov     edx, [ebp+arg_4]
shl     ecx, 4
add     ecx, [ebp+var_10]
mov     edi, [ecx+0ch]
test    edx, edx
jz      short loc_1003f79a
mov     esi, [ecx]
mov     cl, [edx]
test    cl, cl
jz      short loc_1003f782
movzx   eax, byte ptr [esi]
movzx   ecx, cl
mov     cl, ds:byte_10076030[ecx]
cmp     cl, ds:byte_10076030[eax]
jnz     short loc_1003f77f
mov     cl, [edx+1]
inc     edx
inc     esi
test    cl, cl
jnz     short loc_1003f762
mov     eax, [ebp+var_4]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [esi]
movzx   ecx, ds:byte_10076030[ecx]
movzx   edx, ds:byte_10076030[edx]
sub     edx, ecx
jnz     short loc_1003f7f6
cmp     dword ptr [edi+24h], 0
lea     esi, [edi+18h]
jz      short loc_1003f7d4
mov     ecx, [ebp+arg_0]
xor     eax, eax
mov     edx, ebx
test    ebx, ebx
jle     short loc_1003f7ce
mov     edi, edi
movzx   edi, byte ptr [ecx]
movzx   edi, ds:byte_10076030[edi]
lea     ebx, ds:0[eax*8]
xor     edi, ebx
dec     edx
xor     eax, edi
inc     ecx
test    edx, edx
jg      short loc_1003f7b0
mov     ebx, [ebp+var_c]
xor     edx, edx
div     dword ptr [esi]
jmp     short loc_1003f7d6
xor     edx, edx
mov     eax, [ebp+arg_0]
push    ebx
push    eax
mov     eax, esi
call    sub_1000ce60
add     esp, 8
test    eax, eax
jz      short loc_1003f80d
mov     eax, [eax+8]
mov     [ebp+var_8], eax
test    eax, eax
jnz     short loc_1003f806
mov     eax, [ebp+var_4]
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [ebp+var_14]
jl      loc_1003f740
mov     eax, [ebp+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_8], 0
jmp     short loc_1003f7f3
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+10h]
add     eax, eax
push    edi
mov     edi, [edx+eax*8+0ch]
add     edi, 18h
mov     [ebp+var_8], edi
mov     eax, esi
test    esi, esi
jz      short loc_1003f855
cmp     byte ptr [esi], 0
jz      short loc_1003f84e
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003f848
sub     eax, esi
and     eax, 3fffffffh
cmp     dword ptr [edi], 0
mov     [ebp+var_4], eax
jz      short loc_1003f899
mov     edx, eax
xor     eax, eax
mov     ecx, esi
cmp     edx, eax
jle     short loc_1003f88e
jmp     short loc_1003f870
movzx   edi, byte ptr [ecx]
movzx   edi, ds:byte_10076030[edi]
lea     ebx, ds:0[eax*8]
xor     edi, ebx
dec     edx
xor     eax, edi
inc     ecx
test    edx, edx
jg      short loc_1003f870
mov     edi, [ebp+var_8]
xor     edx, edx
div     dword ptr [edi]
mov     eax, [ebp+var_4]
mov     ebx, edx
jmp     short loc_1003f89b
xor     ebx, ebx
push    eax
push    esi
mov     edx, ebx
mov     eax, edi
call    sub_1000ce60
add     esp, 8
test    eax, eax
jz      short loc_1003f90c
mov     esi, [eax+8]
mov     edx, ebx
mov     ecx, edi
call    sub_1000cf00
test    esi, esi
jz      short loc_1003f90c
mov     ecx, [esi+0ch]
mov     eax, [ecx+10h]
cmp     eax, esi
jnz     short loc_1003f8cf
mov     eax, [esi+14h]
mov     [ecx+10h], eax
jmp     short loc_1003f8e8
test    eax, eax
jz      short loc_1003f8e8
mov     ecx, [eax+14h]
cmp     ecx, esi
jz      short loc_1003f8e2
mov     eax, ecx
test    eax, eax
jnz     short loc_1003f8d3
jmp     short loc_1003f8e8
mov     ecx, [esi+14h]
mov     [eax+14h], ecx
mov     edi, [ebp+arg_0]
mov     eax, [esi+10h]
mov     ecx, edi
call    sub_10009810
mov     eax, esi
mov     ecx, edi
call    sub_10009810
or      dword ptr [edi+18h], 200h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
or      dword ptr [eax+18h], 200h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, 2
push    esi
mov     esi, eax
push    edi
mov     [ebp+var_4], esi
mov     [ebp+var_c], eax
cmp     [ebx+14h], eax
jle     loc_1003fa48
mov     edx, 20h
mov     [ebp+var_8], edx
mov     edi, edx
jmp     short loc_1003f950
mov     esi, [ebx+10h]
cmp     dword ptr [edi+esi+4], 0
jnz     loc_1003fa09
cmp     dword ptr [ebx+1e8h], 0
mov     eax, [edi+esi]
jz      short loc_1003f9bd
test    eax, eax
jz      short loc_1003f99c
cmp     eax, [ebx+0fch]
jb      short loc_1003f99c
cmp     eax, [ebx+100h]
jnb     short loc_1003f99c
movzx   eax, word ptr [ebx+0e0h]
mov     ecx, [ebx+1e8h]
add     [ecx], eax
mov     eax, [ebp+var_c]
mov     dword ptr [edi+esi], 0
jmp     loc_1003fa35
push    eax
call    dword_10080258
mov     ecx, [ebx+1e8h]
mov     edx, [ebp+var_8]
add     esp, 4
add     [ecx], eax
mov     eax, [ebp+var_c]
mov     dword ptr [edi+esi], 0
jmp     short loc_1003fa35
test    eax, eax
jz      short loc_1003f9f1
cmp     eax, [ebx+0fch]
jb      short loc_1003f9f1
cmp     eax, [ebx+100h]
jnb     short loc_1003f9f1
mov     ecx, [ebx+0f8h]
mov     [eax], ecx
dec     dword ptr [ebx+0e4h]
mov     [ebx+0f8h], eax
mov     eax, [ebp+var_c]
mov     dword ptr [edi+esi], 0
jmp     short loc_1003fa35
push    eax
call    sub_10009770
mov     edx, [ebp+var_8]
mov     eax, [ebp+var_c]
add     esp, 4
mov     dword ptr [edi+esi], 0
jmp     short loc_1003fa35
cmp     [ebp+var_4], eax
jge     short loc_1003fa2c
mov     ecx, [edi+esi]
mov     [edx+esi], ecx
mov     ecx, [edi+esi+4]
mov     [edx+esi+4], ecx
mov     ecx, [edi+esi+8]
mov     [edx+esi+8], ecx
mov     ecx, [edi+esi+0ch]
mov     [edx+esi+0ch], ecx
inc     [ebp+var_4]
add     edx, 10h
mov     [ebp+var_8], edx
inc     eax
add     edi, 10h
mov     [ebp+var_c], eax
cmp     eax, [ebx+14h]
jl      loc_1003f950
mov     esi, [ebp+var_4]
mov     edx, [ebx+14h]
sub     edx, esi
shl     edx, 4
mov     eax, esi
push    edx
shl     eax, 4
add     eax, [ebx+10h]
push    0
push    eax
call    memset
add     esp, 0ch
mov     [ebx+14h], esi
cmp     esi, 2
jg      short loc_1003fa92
mov     eax, [ebx+10h]
lea     edi, [ebx+1b0h]
cmp     eax, edi
jz      short loc_1003fa92
mov     esi, eax
mov     ecx, 8
rep movsd
mov     ecx, ebx
call    sub_10009810
lea     eax, [ebx+1b0h]
mov     [ebx+10h], eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edi+10h]
mov     eax, esi
add     eax, eax
mov     edx, [ecx+eax*8+0ch]
push    edx
call    sub_100449b0
add     esp, 4
cmp     esi, 1
jz      short locret_1003fac6
mov     eax, [edi+10h]
mov     ecx, [eax+1ch]
push    ecx
call    sub_100449b0
pop     ecx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     ebx, eax
push    edi
push    ebx
call    sub_10019440
xor     edi, edi
add     esp, 4
cmp     [ebx+14h], edi
jle     short loc_1003fb0b
xor     esi, esi
mov     eax, [ebx+10h]
mov     eax, [eax+esi+0ch]
test    eax, eax
jz      short loc_1003fb02
push    eax
call    sub_100449b0
add     esp, 4
inc     edi
add     esi, 10h
cmp     edi, [ebx+14h]
jl      short loc_1003faee
and     dword ptr [ebx+18h], 0fffffdffh
mov     eax, ebx
call    sub_10062cf0
call    sub_10019550
call    sub_1003f920
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [eax+0ch]
test    esi, esi
jz      short loc_1003fb95
push    ebx
xor     ebx, ebx
cmp     [eax+8], ebx
jle     short loc_1003fb88
mov     eax, [esi]
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+4]
push    eax
push    edi
call    sub_10036430
mov     eax, [esi+8]
add     esp, 8
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+0ch]
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+10h]
mov     ecx, edi
call    sub_10009810
mov     ecx, [ebp+arg_0]
inc     ebx
add     esi, 18h
cmp     ebx, [ecx+8]
jl      short loc_1003fb46
mov     eax, ecx
mov     eax, [eax+0ch]
pop     ebx
mov     ecx, edi
pop     esi
pop     ebp
jmp     sub_10009810
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
test    edi, edi
jz      loc_1003fd47
mov     ebx, [ebp+arg_0]
test    ebx, ebx
jz      short loc_1003fbc7
cmp     dword ptr [ebx+1e8h], 0
jnz     short loc_1003fbd6
mov     eax, 0ffffh
add     [edi+20h], ax
jnz     loc_1003fd47
mov     esi, [edi+10h]
mov     [esp+18h+var_8], esi
test    esi, esi
jz      loc_1003fcaa
mov     ecx, [esi+14h]
mov     [esp+18h+var_4], ecx
test    ebx, ebx
jz      short loc_1003fbfd
cmp     dword ptr [ebx+1e8h], 0
jnz     loc_1003fc87
mov     ecx, [esi]
mov     eax, ecx
test    ecx, ecx
jnz     short loc_1003fc0b
mov     [esp+18h+var_c], ecx
jmp     short loc_1003fc21
cmp     byte ptr [ecx], 0
jz      short loc_1003fc16
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003fc10
sub     eax, ecx
and     eax, 3fffffffh
mov     [esp+18h+var_c], eax
mov     edi, [esi+18h]
cmp     dword ptr [edi+18h], 0
jz      short loc_1003fc5c
mov     edx, [esp+18h+var_c]
xor     eax, eax
cmp     edx, eax
jle     short loc_1003fc53
movzx   esi, byte ptr [ecx]
movzx   esi, ds:byte_10076030[esi]
lea     ebx, ds:0[eax*8]
xor     esi, ebx
dec     edx
xor     eax, esi
inc     ecx
test    edx, edx
jg      short loc_1003fc34
mov     esi, [esp+18h+var_8]
xor     edx, edx
div     dword ptr [edi+18h]
mov     ebx, edx
jmp     short loc_1003fc5e
xor     ebx, ebx
mov     edx, [esp+18h+var_c]
mov     eax, [esi]
push    edx
push    eax
mov     edx, ebx
lea     eax, [edi+18h]
call    sub_1000ce60
add     esp, 8
test    eax, eax
jz      short loc_1003fc81
mov     edx, ebx
lea     ecx, [edi+18h]
call    sub_1000cf00
mov     edi, [ebp+arg_4]
mov     ebx, [ebp+arg_0]
mov     eax, [esi+10h]
mov     ecx, ebx
call    sub_10009810
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
mov     esi, [esp+18h+var_4]
mov     [esp+18h+var_8], esi
test    esi, esi
jnz     loc_1003fbe5
push    edi
mov     esi, ebx
call    sub_1004b700
add     esp, 4
push    edi
mov     edi, ebx
call    sub_1003fb30
mov     edi, [ebp+arg_4]
mov     eax, [edi]
add     esp, 4
mov     ecx, ebx
call    sub_10009810
mov     eax, [edi+28h]
mov     ecx, ebx
call    sub_10009810
mov     esi, [edi+1ch]
test    esi, esi
jz      short loc_1003fcf0
push    esi
push    ebx
call    sub_10054390
add     esp, 8
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
mov     eax, [edi+2ch]
push    eax
push    ebx
call    sub_10037020
add     esp, 8
test    ebx, ebx
jz      short loc_1003fd0a
cmp     dword ptr [ebx+1e8h], 0
jnz     short loc_1003fd14
push    0
call    sub_10062ca0
add     esp, 4
cmp     dword ptr [edi+3ch], 0
jz      short loc_1003fd3e
xor     esi, esi
cmp     [edi+38h], esi
jle     short loc_1003fd34
mov     ecx, [edi+3ch]
mov     eax, [ecx+esi*4]
mov     ecx, ebx
call    sub_10009810
inc     esi
cmp     esi, [edi+38h]
jl      short loc_1003fd21
mov     eax, [edi+3ch]
mov     ecx, ebx
call    sub_10009810
mov     eax, edi
mov     ecx, ebx
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ecx, [ebp+arg_0]
shl     eax, 4
add     eax, [ecx+10h]
mov     ecx, edi
test    edi, edi
jz      short loc_1003fd7e
cmp     byte ptr [edi], 0
jz      short loc_1003fd76
nop
inc     ecx
cmp     byte ptr [ecx], 0
jnz     short loc_1003fd70
sub     ecx, edi
and     ecx, 3fffffffh
mov     ebx, [eax+0ch]
add     ebx, 8
cmp     dword ptr [ebx], 0
mov     [ebp+var_4], ecx
mov     [ebp+var_8], ebx
jz      short loc_1003fdc9
xor     eax, eax
mov     esi, ecx
mov     edx, edi
cmp     ecx, eax
jle     short loc_1003fdbe
lea     esp, [esp+0]
movzx   ecx, byte ptr [edx]
movzx   ecx, ds:byte_10076030[ecx]
lea     ebx, ds:0[eax*8]
xor     ecx, ebx
dec     esi
xor     eax, ecx
inc     edx
test    esi, esi
jg      short loc_1003fda0
mov     ebx, [ebp+var_8]
xor     edx, edx
div     dword ptr [ebx]
mov     ecx, [ebp+var_4]
mov     esi, edx
jmp     short loc_1003fdcb
xor     esi, esi
push    ecx
push    edi
mov     edx, esi
mov     eax, ebx
call    sub_1000ce60
add     esp, 8
test    eax, eax
jz      short loc_1003fdeb
mov     edi, [eax+8]
mov     edx, esi
mov     ecx, ebx
call    sub_1000cf00
jmp     short loc_1003fded
xor     edi, edi
mov     esi, [ebp+arg_0]
push    edi
push    esi
call    sub_1003fba0
add     esp, 8
or      dword ptr [esi+18h], 200h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
test    eax, eax
jz      short loc_1003fe61
mov     ebx, [eax]
mov     edi, [eax+4]
test    ebx, ebx
jnz     short loc_1003fe33
xor     esi, esi
mov     edi, esi
call    sub_1000bbf0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     esi, [ebp+arg_0]
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1003fe53
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     edi, esi
call    sub_1000bbf0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
push    ebx
call    sub_10056c90
mov     edi, [ebp+arg_4]
add     esp, 4
mov     esi, eax
mov     eax, offset asqlitetempmast
cmp     edi, 1
jz      short loc_1003fe97
mov     eax, offset asqlitemaster
push    eax
push    1
push    1
push    edi
mov     eax, ebx
call    sub_1003ef00
mov     ebx, [esi+1ch]
add     esp, 10h
cmp     [esi+20h], ebx
jg      short loc_1003febd
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1003fee5
mov     edi, [ebp+arg_4]
mov     edx, [esi+4]
mov     ecx, 1
add     [esi+1ch], ecx
lea     eax, [ebx+ebx*4]
lea     eax, [edx+eax*4]
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], edi
mov     [eax+10h], edx
mov     word ptr [eax], 28h
mov     eax, [esi+4]
mov     edi, [esi]
test    eax, eax
jz      short loc_1003ff17
cmp     byte ptr [edi+32h], 0
jnz     short loc_1003ff17
mov     esi, [esi+1ch]
lea     ecx, [esi+esi*4-5]
lea     esi, [eax+ecx*4]
movsx   eax, byte ptr [esi+1]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     dword ptr [esi+10h], 5
mov     byte ptr [esi+1], 0f2h
jmp     short loc_1003ff24
mov     ecx, 5
lea     eax, [ecx-13h]
call    sub_10025e50
mov     eax, [ebp+arg_0]
cmp     dword ptr [eax+48h], 0
jnz     short loc_1003ff34
mov     dword ptr [eax+48h], 1
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
or      eax, 0ffffffffh
test    ebx, ebx
jz      short loc_1003ffa8
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_1003ff58
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003ff52
push    esi
mov     esi, [ecx+14h]
push    edi
dec     esi
mov     edi, esi
sub     eax, ebx
shl     edi, 4
add     edi, [ecx+10h]
and     eax, 3fffffffh
mov     [ebp+var_4], eax
test    esi, esi
js      short loc_1003ffa4
mov     ecx, [edi]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1003ff8e
cmp     byte ptr [ecx], 0
jz      short loc_1003ff87
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1003ff81
sub     eax, ecx
and     eax, 3fffffffh
cmp     [ebp+var_4], eax
jnz     short loc_1003ff9e
mov     edx, ebx
call    sub_1000bca0
test    eax, eax
jz      short loc_1003ffa4
sub     edi, 10h
dec     esi
jns     short loc_1003ff74
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     esi, ecx
test    eax, eax
jz      short loc_1003fff9
mov     ebx, [eax+4]
mov     eax, [eax]
mov     [ebp+src], eax
test    eax, eax
jnz     short loc_1003ffd2
xor     edi, edi
call    sub_1000bbf0
jmp     short loc_1003fffb
lea     ecx, [ebx+1]
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1003fff2
mov     eax, [ebp+src]
push    ebx
push    eax
push    edi
call    memcpy
add     esp, 0ch
mov     byte ptr [edi+ebx], 0
call    sub_1000bbf0
jmp     short loc_1003fffb
xor     edi, edi
mov     ebx, edi
mov     ecx, esi
call    sub_1003ff40
mov     ebx, eax
mov     eax, edi
mov     ecx, esi
call    sub_10009810
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
mov     ecx, [edi]
test    eax, eax
jz      short loc_1004006d
cmp     dword ptr [eax+4], 0
jbe     short loc_1004006d
cmp     byte ptr [ecx+79h], 0
jz      short loc_10040049
push    offset acorruptdatabas
push    edi
call    sub_1000bb30
inc     dword ptr [edi+44h]
add     esp, 8
or      eax, 0ffffffffh
pop     ecx
retn
mov     [edx], eax
mov     eax, esi
call    sub_1003ffb0
test    eax, eax
jns     short loc_10040073
push    esi
push    offset aunknowndatabas_0
push    edi
call    sub_1000bb30
inc     dword ptr [edi+44h]
add     esp, 0ch
or      eax, 0ffffffffh
pop     ecx
retn
movzx   eax, byte ptr [ecx+78h]
mov     [edx], esi
pop     ecx
retn
push    ecx
mov     eax, [esi]
cmp     byte ptr [eax+79h], 0
jnz     short loc_100400c2
cmp     byte ptr [esi+12h], 0
jnz     short loc_100400c2
test    dword ptr [eax+18h], 10000h
jnz     short loc_100400c2
push    7
push    offset asqlite_0
push    edi
call    sub_1000bcf0
add     esp, 0ch
test    eax, eax
jnz     short loc_100400c2
push    edi
push    offset aobjectnamerese
push    esi
call    sub_1000bb30
add     esp, 0ch
mov     eax, 1
pop     ecx
retn
xor     eax, eax
pop     ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     ebx, ecx
mov     ecx, [ebx]
mov     edi, eax
mov     [ebp+var_4], ecx
test    edi, edi
jz      short loc_10040137
cmp     dword ptr [edi+4], 0
jbe     short loc_10040137
cmp     byte ptr [ecx+79h], 0
jz      short loc_1004010a
push    offset acorruptdatabas
push    ebx
call    sub_1000bb30
add     esp, 8
inc     dword ptr [ebx+44h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
mov     esi, edi
mov     [ebp+var_10], esi
call    sub_1003ffb0
test    eax, eax
jns     short loc_10040143
mov     eax, [ebp+arg_0]
push    eax
push    offset aunknowndatabas_0
push    ebx
call    sub_1000bb30
add     esp, 0ch
inc     dword ptr [ebx+44h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   eax, byte ptr [ecx+78h]
mov     ecx, [ebp+arg_0]
mov     [ebp+var_10], ecx
mov     esi, ecx
mov     [ebp+var_8], eax
test    eax, eax
js      loc_10040533
cmp     [ebp+arg_4], 0
jz      short loc_1004017b
cmp     dword ptr [edi+4], 0
jbe     short loc_10040174
cmp     eax, 1
jz      short loc_10040174
push    offset atemporarytable
push    ebx
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_8], 1
mov     edx, [esi]
mov     [ebx+208h], edx
mov     eax, [esi+4]
mov     [ebx+20ch], eax
mov     edi, [esi+4]
mov     esi, [esi]
mov     [ebp+src], esi
test    esi, esi
jnz     short loc_1004019f
xor     edi, edi
mov     [ebp+src], edi
jmp     short loc_100401c7
mov     esi, [ebp+var_4]
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_100401c2
mov     ecx, [ebp+src]
push    edi
push    ecx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     [ebp+src], esi
mov     edi, esi
call    sub_1000bbf0
test    edi, edi
jz      loc_10040533
mov     esi, ebx
call    sub_10040080
test    eax, eax
jnz     loc_1004033f
mov     eax, [ebp+var_4]
cmp     byte ptr [eax+78h], 1
mov     edi, 1
jz      short loc_100401f4
mov     edi, [ebp+arg_4]
mov     esi, [ebp+var_8]
mov     edx, [eax+10h]
shl     esi, 4
mov     eax, [esi+edx]
mov     [ebp+var_18], esi
mov     [ebp+var_14], eax
mov     ecx, offset asqlitetempmast
cmp     edi, 1
jz      short loc_10040215
mov     ecx, offset asqlitemaster
push    eax
push    0
push    ecx
push    12h
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1004033f
cmp     [ebp+arg_8], eax
jz      short loc_1004023d
test    edi, edi
setz    al
lea     eax, [eax+eax+6]
jmp     short loc_10040246
test    edi, edi
setnz   al
lea     eax, [eax+eax+2]
cmp     [ebp+arg_c], 0
jnz     short loc_10040269
mov     ecx, [ebp+var_14]
mov     edx, [ebp+src]
push    ecx
push    0
push    edx
push    eax
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1004033f
cmp     byte ptr [ebx+1d5h], 0
jnz     loc_1004031e
mov     eax, [ebp+var_4]
mov     ecx, [eax+10h]
mov     edi, [esi+ecx]
mov     esi, ebx
call    sub_100538c0
test    eax, eax
jnz     loc_1004033f
mov     esi, [ebp+src]
mov     edx, [ebp+var_4]
push    edi
push    esi
push    edx
call    sub_1003f510
add     esp, 0ch
test    eax, eax
jz      short loc_100402ec
cmp     [ebp+arg_10], 0
jnz     short loc_100402cc
mov     eax, [ebp+var_10]
push    eax
push    offset atabletalreadye
push    ebx
call    sub_1000bb30
mov     ecx, [ebp+var_4]
add     esp, 0ch
mov     eax, esi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_8]
push    ecx
mov     eax, ebx
call    sub_10043c40
mov     eax, [ebp+src]
mov     ecx, [ebp+var_4]
add     esp, 4
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_4]
push    edi
push    esi
call    sub_1003f6f0
add     esp, 8
test    eax, eax
jz      short loc_1004031e
push    esi
push    offset athereisalready_0
push    ebx
call    sub_1000bb30
mov     eax, [ebp+src]
mov     ecx, [ebp+var_4]
add     esp, 0ch
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+var_4]
mov     edi, 4ch
mov     eax, esi
call    sub_10009a20
test    eax, eax
jnz     short loc_10040351
mov     byte ptr [esi+32h], 1
inc     dword ptr [ebx+44h]
mov     dword ptr [ebx+0ch], 7
mov     eax, [ebp+src]
mov     ecx, [ebp+var_4]
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+src]
mov     ecx, [ebp+var_18]
mov     [eax], edi
mov     dword ptr [eax+4], 0ffffffffh
mov     edx, [esi+10h]
mov     edx, [ecx+edx+0ch]
mov     ecx, 1
mov     [eax+44h], edx
mov     [eax+20h], cx
mov     dword ptr [eax+18h], 0f4240h
cmp     byte ptr [ebx+12h], 0
mov     [ebx+1fch], eax
jnz     short loc_100403c2
mov     esi, offset asqlitesequence
jmp     short loc_10040390
mov     cl, [edi]
cmp     cl, [esi]
jnz     short loc_100403b0
test    cl, cl
jz      short loc_100403ac
mov     cl, [edi+1]
cmp     cl, [esi+1]
jnz     short loc_100403b0
add     edi, 2
add     esi, 2
test    cl, cl
jnz     short loc_10040390
xor     ecx, ecx
jmp     short loc_100403b5
sbb     ecx, ecx
sbb     ecx, 0ffffffffh
mov     esi, [ebp+var_4]
test    ecx, ecx
jnz     short loc_100403c2
mov     edx, [eax+44h]
mov     [edx+48h], eax
cmp     byte ptr [esi+79h], 0
jnz     loc_10040533
push    ebx
call    sub_10056c90
mov     esi, eax
add     esp, 4
test    esi, esi
jz      loc_10040533
mov     edi, [ebp+var_8]
push    0
mov     eax, ebx
call    sub_10043d50
add     esp, 4
cmp     [ebp+arg_c], 0
jz      short loc_10040403
push    84h
mov     eax, esi
call    sub_100258f0
add     esp, 4
mov     eax, [ebx+4ch]
inc     eax
lea     edi, [eax+1]
mov     [ebx+194h], edi
push    2
mov     [ebp+var_10], eax
mov     [ebx+190h], eax
mov     eax, [ebp+var_8]
inc     edi
push    edi
push    eax
push    24h
mov     eax, esi
mov     [ebx+4ch], edi
call    sub_10025890
mov     ecx, [ebp+var_8]
mov     eax, esi
call    sub_100263e0
push    edi
push    1bh
call    sub_10025940
mov     ecx, [ebp+var_4]
mov     edx, [ecx+18h]
and     edx, 100000h
neg     edx
sbb     edx, edx
and     edx, 0fffffffdh
push    edi
add     edx, 4
push    edx
mov     [ebp+var_18], eax
push    7
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_8]
add     esp, 24h
push    edi
push    2
push    eax
push    25h
mov     eax, esi
call    sub_10025890
mov     ecx, [ebp+var_4]
mov     edx, [ecx+10h]
mov     eax, [edx+0ch]
movzx   ecx, byte ptr [eax+4dh]
push    edi
push    ecx
push    7
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+var_8]
add     esp, 1ch
push    edi
push    5
push    edx
push    25h
mov     eax, esi
call    sub_10025890
mov     eax, [ebp+var_18]
add     esp, 10h
mov     edx, esi
call    sub_10025e30
cmp     [ebp+arg_8], 0
jnz     short loc_100404c7
cmp     [ebp+arg_c], 0
jnz     short loc_100404c7
mov     eax, [ebp+var_10]
inc     eax
push    eax
mov     eax, [ebp+var_8]
push    eax
push    69h
jmp     short loc_100404d0
mov     eax, [ebp+var_10]
inc     eax
push    eax
push    0
push    7
mov     eax, esi
call    sub_10025990
mov     ecx, [ebp+var_8]
add     esp, 0ch
push    ecx
push    ebx
call    sub_1003fe70
mov     ebx, [ebp+var_10]
push    ebx
push    0
push    38h
mov     eax, esi
call    sub_10025990
add     esp, 14h
push    edi
push    0
push    0ah
mov     eax, esi
call    sub_10025990
add     esp, 0ch
push    ebx
push    edi
push    0
push    39h
mov     eax, esi
call    sub_10025890
mov     eax, [esi+4]
add     esp, 10h
test    eax, eax
jz      short loc_10040527
mov     ecx, [esi+1ch]
lea     edx, [ecx+ecx*4]
mov     byte ptr [eax+edx*4-11h], 8
push    2dh
mov     eax, esi
call    sub_100258f0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     ecx, [ebp+arg_0]
mov     eax, [ecx]
push    ebx
push    esi
mov     esi, [ecx+1fch]
push    edi
mov     [ebp+var_c], eax
test    esi, esi
jz      loc_1004065f
mov     edx, [esi+8]
inc     edx
cmp     edx, [eax+50h]
jle     short loc_10040580
mov     eax, [esi]
push    eax
push    offset atoomanycolumns_0
push    ecx
call    sub_1000bb30
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    eax
mov     eax, [ebp+arg_4]
call    sub_1003fe10
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jz      loc_1004065f
xor     edi, edi
cmp     [esi+8], edi
jle     short loc_100405d6
movzx   ecx, byte ptr [eax]
mov     dl, ds:byte_10076030[ecx]
mov     ebx, [esi+0ch]
mov     [ebp+var_1], dl
mov     eax, [ebx]
movzx   ecx, byte ptr [eax]
mov     dl, [ebp+var_1]
cmp     dl, ds:byte_10076030[ecx]
jnz     short loc_100405cd
mov     ecx, [ebp+var_8]
lea     edx, [eax+1]
inc     ecx
call    sub_1000bca0
test    eax, eax
jz      short loc_1004060d
inc     edi
add     ebx, 18h
cmp     edi, [esi+8]
jl      short loc_100405ad
mov     eax, [esi+8]
test    al, 7
jnz     short loc_10040636
mov     edi, [ebp+var_c]
mov     ebx, [esi+0ch]
lea     ecx, [eax+eax*2+18h]
add     ecx, ecx
add     ecx, ecx
add     ecx, ecx
push    ecx
mov     eax, edi
call    sub_10009ac0
add     esp, 4
test    eax, eax
jnz     short loc_10040633
mov     eax, [ebp+var_8]
mov     ecx, edi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+var_8]
mov     eax, [ebp+arg_0]
push    esi
push    offset aduplicatecolum
push    eax
call    sub_1000bb30
mov     ecx, [ebp+var_c]
add     esp, 0ch
mov     eax, esi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [esi+0ch], eax
mov     eax, [esi+8]
xor     ecx, ecx
lea     edx, [eax+eax*2]
mov     eax, [esi+0ch]
lea     eax, [eax+edx*8]
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     ecx, [ebp+var_8]
mov     [eax], ecx
mov     byte ptr [eax+16h], 62h
inc     dword ptr [esi+8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, eax
xor     ecx, ecx
mov     al, 63h
test    esi, esi
jz      loc_10040726
mov     dl, [esi]
test    dl, dl
jz      loc_10040726
lea     esp, [esp+0]
movzx   edx, dl
movzx   edx, ds:byte_10076030[edx]
shl     ecx, 8
add     ecx, edx
inc     esi
cmp     ecx, 63686172h
jnz     short loc_100406ac
mov     al, 61h
jmp     short loc_10040718
cmp     ecx, 636c6f62h
jnz     short loc_100406b8
mov     al, 61h
jmp     short loc_10040718
cmp     ecx, 74657874h
jnz     short loc_100406c4
mov     al, 61h
jmp     short loc_10040718
cmp     ecx, 626c6f62h
jnz     short loc_100406d8
cmp     al, 63h
jz      short loc_100406d4
cmp     al, 65h
jnz     short loc_10040708
mov     al, 62h
jmp     short loc_10040718
cmp     ecx, 7265616ch
jnz     short loc_100406e8
cmp     al, 63h
jnz     short loc_10040708
mov     al, 65h
jmp     short loc_10040718
cmp     ecx, 666c6f61h
jnz     short loc_100406f8
cmp     al, 63h
jnz     short loc_10040708
mov     al, 65h
jmp     short loc_10040718
cmp     ecx, 646f7562h
jnz     short loc_10040708
cmp     al, 63h
jnz     short loc_10040708
mov     al, 65h
jmp     short loc_10040718
mov     edx, ecx
and     edx, 0ffffffh
cmp     edx, 696e74h
jz      short loc_10040724
mov     dl, [esi]
test    dl, dl
jnz     loc_10040690
pop     esi
retn
mov     al, 64h
pop     esi
retn
push    ebp
mov     ebp, esp
mov     ecx, [edx+1fch]
test    ecx, ecx
jz      short loc_1004076a
mov     eax, [ecx+8]
cmp     eax, 1
jl      short loc_1004076a
mov     ecx, [ecx+0ch]
mov     edx, [edx]
lea     eax, [eax+eax*2]
push    esi
lea     esi, [ecx+eax*8-18h]
mov     eax, [ebp+arg_0]
push    edx
call    sub_1003fe10
add     esp, 4
mov     [esi+0ch], eax
call    sub_10040670
mov     [esi+16h], al
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 1ch
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [eax]
mov     eax, [eax+1fch]
mov     [esp+28h+var_1c], edi
test    eax, eax
jz      loc_10040861
mov     ecx, [eax+8]
mov     edx, [eax+0ch]
mov     eax, [esi]
lea     ecx, [ecx+ecx*2]
lea     ebx, [edx+ecx*8-18h]
push    eax
lea     ecx, [esp+2ch+var_14]
push    ecx
mov     [esp+30h+var_4], 2
mov     [esp+30h+var_14], offset sub_10037090
mov     [esp+30h+var_10], offset sub_10037170
call    sub_10033e00
add     esp, 8
cmp     [esp+28h+var_4], 0
jnz     short loc_100407f9
mov     edx, [ebx]
mov     eax, [ebp+arg_0]
push    edx
push    offset adefaultvalueof
push    eax
call    sub_1000bb30
mov     eax, [esi]
add     esp, 0ch
push    eax
push    edi
call    sub_10036430
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebx+4]
push    ecx
push    edi
call    sub_10036430
mov     eax, [esi]
push    0
push    1
push    eax
push    edi
call    sub_100365c0
mov     [ebx+4], eax
mov     eax, [ebx+8]
add     esp, 18h
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+4]
mov     edi, [esi+8]
sub     edi, eax
mov     [esp+28h+src], eax
test    eax, eax
jz      short loc_1004085a
mov     esi, [esp+28h+var_1c]
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10040855
mov     edx, [esp+28h+src]
push    edi
push    edx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     eax, esi
mov     esi, [ebp+arg_4]
mov     edi, [esp+28h+var_1c]
mov     [ebx+8], eax
mov     eax, [esi]
push    eax
push    edi
call    sub_10036430
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
sub     esp, 10h
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
mov     edi, [ecx+1fch]
xor     edx, edx
or      esi, 0ffffffffh
cmp     edi, edx
jz      loc_10040a0c
cmp     [ecx+1d5h], dl
jnz     loc_10040a0c
mov     al, [edi+22h]
test    al, 4
jz      short loc_100408cb
mov     eax, [edi]
push    eax
push    offset atableshasmoret
push    ecx
call    sub_1000bb30
add     esp, 0ch
jmp     loc_10040a0c
or      al, 4
mov     [edi+22h], al
cmp     ebx, edx
jnz     short loc_100408e8
mov     esi, [edi+8]
mov     edx, [edi+0ch]
dec     esi
lea     ecx, [esi+esi*2]
mov     byte ptr [edx+ecx*8+15h], 1
jmp     loc_1004098a
mov     [ebp+var_c], edx
cmp     [ebx], edx
jle     loc_10040985
mov     [ebp+var_8], edx
xor     esi, esi
cmp     esi, [edi+8]
jge     short loc_10040972
mov     eax, [ebx+8]
mov     ecx, [ebp+var_8]
mov     edx, [eax+ecx+4]
mov     eax, [edi+0ch]
mov     [ebp+var_10], edx
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_10]
mov     al, [ecx]
mov     edx, [ebp+var_4]
mov     edx, [edx]
test    al, al
jz      short loc_10040940
mov     edi, edi
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_1004093d
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10040920
mov     ebx, [ebp+arg_4]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_10040962
add     [ebp+var_4], 18h
inc     esi
cmp     esi, [edi+8]
jl      short loc_10040910
cmp     esi, [edi+8]
jge     short loc_10040972
mov     ecx, [edi+0ch]
lea     eax, [esi+esi*2]
mov     byte ptr [ecx+eax*8+15h], 1
mov     eax, [ebp+var_c]
add     [ebp+var_8], 14h
inc     eax
mov     [ebp+var_c], eax
cmp     eax, [ebx]
jl      loc_100408f6
cmp     dword ptr [ebx], 1
jg      short loc_100409cb
test    esi, esi
js      short loc_100409cb
cmp     esi, [edi+8]
jge     short loc_100409cb
mov     eax, [edi+0ch]
lea     edx, [esi+esi*2]
mov     ecx, [eax+edx*8+0ch]
test    ecx, ecx
jz      short loc_100409cb
mov     edx, offset ainteger_1
call    sub_1000bca0
test    eax, eax
jnz     short loc_100409cb
cmp     [ebp+arg_10], eax
jnz     short loc_100409cb
mov     al, byte ptr [ebp+arg_c]
mov     cl, byte ptr [ebp+arg_8]
add     al, al
add     al, al
add     al, al
or      [edi+22h], al
mov     [edi+4], esi
mov     [edi+23h], cl
jmp     short loc_10040a0c
cmp     [ebp+arg_c], 0
mov     edx, [ebp+arg_0]
jz      short loc_100409e4
push    offset aautoincrementi
push    edx
call    sub_1000bb30
add     esp, 8
jmp     short loc_10040a0c
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_8]
push    0
push    eax
push    0
push    0
push    ecx
push    ebx
push    0
push    0
push    0
push    edx
call    sub_100428b0
add     esp, 28h
test    eax, eax
jz      short loc_10040a0a
mov     byte ptr [eax+2dh], 2
xor     ebx, ebx
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
push    ebx
push    ecx
call    sub_10037020
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     edi, [esi+1fch]
test    edi, edi
jz      loc_10040ac8
cmp     byte ptr [esi+1d5h], 0
jnz     short loc_10040ac8
mov     ecx, [edi+2ch]
push    eax
mov     eax, esi
call    sub_10036e50
add     esp, 4
mov     [edi+2ch], eax
cmp     dword ptr [esi+1a0h], 0
jz      short loc_10040ad4
test    eax, eax
jz      short loc_10040ad4
mov     ecx, [eax]
mov     edx, [eax+8]
mov     ebx, [esi+19ch]
mov     edi, [esi+1a0h]
mov     esi, [esi]
lea     ecx, [ecx+ecx*4]
lea     eax, [edx+ecx*4-14h]
mov     [ebp+var_4], eax
test    ebx, ebx
jnz     short loc_10040a93
xor     esi, esi
jmp     short loc_10040ab0
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10040ab0
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     ecx, [ebp+var_4]
mov     [ecx+4], esi
test    esi, esi
jz      short loc_10040ad4
mov     edi, esi
call    sub_1000bbf0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [esi]
push    eax
push    edx
call    sub_10036430
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     edx, [ebp+arg_0]
mov     ecx, [edx+1fch]
push    ebx
push    esi
push    edi
mov     [ebp+var_c], ecx
test    ecx, ecx
jz      loc_10040ba2
mov     ebx, [ecx+8]
mov     esi, [edx]
dec     ebx
mov     [ebp+var_8], esi
test    eax, eax
jz      loc_10040ba2
mov     edi, [eax+4]
mov     eax, [eax]
mov     [ebp+src], eax
test    eax, eax
jnz     short loc_10040b1e
xor     edi, edi
jmp     short loc_10040b43
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10040b3e
mov     eax, [ebp+src]
push    edi
push    eax
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     edi, esi
mov     esi, [ebp+var_8]
call    sub_1000bbf0
test    edi, edi
jz      short loc_10040ba2
mov     ecx, [ebp+arg_0]
push    ecx
mov     eax, edi
call    sub_10040bb0
add     esp, 4
test    eax, eax
jz      short loc_10040b99
mov     edx, [ebp+var_c]
mov     eax, [edx+0ch]
lea     ecx, [ebx+ebx*2]
add     ecx, ecx
add     ecx, ecx
add     ecx, ecx
mov     [ecx+eax+10h], edi
mov     eax, [edx+10h]
test    eax, eax
jz      short loc_10040ba2
mov     esi, [eax+4]
cmp     [esi], ebx
jnz     short loc_10040b8b
mov     esi, [edx+0ch]
mov     edi, [eax+20h]
mov     esi, [ecx+esi+10h]
mov     [edi], esi
mov     eax, [eax+14h]
test    eax, eax
jnz     short loc_10040b78
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
mov     ecx, esi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, eax
mov     eax, [ebp+arg_0]
push    esi
push    edi
mov     edi, [eax]
mov     ecx, [edi+10h]
mov     edx, [ecx+0ch]
mov     cl, [edx+4dh]
mov     dl, [edi+79h]
mov     [ebp+var_1], cl
mov     [ebp+var_2], dl
test    ebx, ebx
jz      short loc_10040beb
movzx   eax, dl
push    eax
push    edi
call    sub_100445f0
mov     cl, [ebp+var_1]
mov     dl, [ebp+var_2]
add     esp, 8
jmp     short loc_10040bee
mov     eax, [edi+8]
test    eax, eax
jz      short loc_10040bfc
movzx   esi, cl
lea     esi, [esi+esi*4]
lea     eax, [eax+esi*4-14h]
test    dl, dl
jnz     short loc_10040c2f
test    eax, eax
jz      short loc_10040c0a
cmp     dword ptr [eax+0ch], 0
jnz     short loc_10040c2f
push    edi
mov     edi, ebx
call    sub_10044510
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     short loc_10040c2d
mov     ecx, [ebp+arg_0]
push    ebx
push    offset anosuchcollatio
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     al, [esi+13h]
sub     esp, 0ch
push    ebx
push    edi
test    al, al
jnz     short loc_10040c5a
inc     dword ptr [esi+4ch]
mov     edx, [esi+4ch]
mov     [ebp+var_4], edx
jmp     short loc_10040c6b
dec     al
mov     [esi+13h], al
movzx   eax, al
mov     ecx, [esi+eax*4+1ch]
mov     [ebp+var_4], ecx
mov     edx, ecx
mov     eax, [esi]
mov     ecx, [ebp+arg_0]
mov     eax, [eax+10h]
mov     edi, [esi+8]
mov     ebx, [edi+1ch]
add     ecx, ecx
mov     ecx, [eax+ecx*8+0ch]
mov     ecx, [ecx]
inc     ecx
mov     [ebp+var_8], ecx
cmp     [edi+20h], ebx
jg      short loc_10040c99
call    sub_10025810
mov     edx, [ebp+var_4]
test    eax, eax
jnz     short loc_10040cbc
mov     ecx, [ebp+var_8]
inc     dword ptr [edi+1ch]
lea     eax, [ebx+ebx*4]
mov     ebx, [edi+4]
lea     eax, [ebx+eax*4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 7
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_10040cd0
call    sub_10025810
mov     edx, [ebp+var_4]
test    eax, eax
jnz     short loc_10040cfd
mov     ecx, 1
add     [edi+1ch], ecx
mov     edi, [edi+4]
lea     eax, [ebx+ebx*4]
lea     eax, [edi+eax*4]
mov     edi, [ebp+arg_0]
mov     byte ptr [eax+3], 0
mov     [eax+4], edi
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 25h
test    edx, edx
jz      short loc_10040d28
mov     bl, [esi+13h]
cmp     bl, 8
jnb     short loc_10040d28
xor     eax, eax
lea     ecx, [esi+64h]
mov     edi, edi
cmp     [ecx+10h], edx
jz      short loc_10040d2e
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10040d10
movzx   ecx, bl
mov     [esi+ecx*4+1ch], edx
inc     byte ptr [esi+13h]
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
mov     byte ptr [ecx+8], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     cl, [ebx]
mov     eax, [ebp+arg_4]
push    esi
mov     esi, [eax]
push    edi
xor     edi, edi
test    cl, cl
jz      short loc_10040d6d
mov     al, cl
movzx   edx, al
test    ds:byte_10076130[edx], 6
jnz     short loc_10040d64
cmp     al, 5fh
jnz     short loc_10040d6d
mov     al, [edi+ebx+1]
inc     edi
test    al, al
jnz     short loc_10040d54
movzx   eax, cl
test    ds:byte_10076130[eax], 4
jnz     short loc_10040d87
push    ebx
call    sub_1006dc40
add     esp, 4
cmp     eax, 1ah
jz      short loc_10040d96
mov     ecx, [ebp+arg_0]
mov     byte ptr [esi+ecx], 22h
mov     edi, 1
inc     esi
jmp     short loc_10040dab
movzx   edi, byte ptr [edi+ebx]
test    edi, edi
jz      short loc_10040da8
mov     ecx, [ebp+arg_0]
mov     byte ptr [esi+ecx], 22h
inc     esi
jmp     short loc_10040dab
mov     ecx, [ebp+arg_0]
cmp     byte ptr [ebx], 0
jz      short loc_10040dc8
mov     eax, ebx
mov     dl, [eax]
mov     [esi+ecx], dl
inc     esi
cmp     byte ptr [eax], 22h
jnz     short loc_10040dc2
mov     byte ptr [esi+ecx], 22h
inc     esi
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10040db2
test    edi, edi
jz      short loc_10040dde
mov     eax, [ebp+arg_4]
mov     byte ptr [esi+ecx], 22h
inc     esi
pop     edi
mov     byte ptr [esi+ecx], 0
mov     [eax], esi
pop     esi
pop     ebp
retn
mov     byte ptr [esi+ecx], 0
mov     ecx, [ebp+arg_4]
pop     edi
mov     [ecx], esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
sub     esp, 1ch
push    ebx
mov     ebx, [eax+8]
push    esi
xor     esi, esi
push    edi
mov     edi, [eax+0ch]
test    ebx, ebx
jle     short loc_10040e3d
mov     ecx, [edi]
mov     al, [ecx]
xor     edx, edx
test    al, al
jz      short loc_10040e30
cmp     al, 22h
jnz     short loc_10040e27
inc     edx
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10040e22
add     edi, 18h
dec     ebx
lea     esi, [esi+edx+7]
jnz     short loc_10040e18
mov     eax, [ebp+arg_4]
mov     ecx, [eax]
mov     al, [ecx]
xor     edx, edx
test    al, al
jz      short loc_10040e55
cmp     al, 22h
jnz     short loc_10040e4c
inc     edx
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10040e47
lea     edx, [esi+edx+2]
cmp     edx, 32h
jge     short loc_10040e75
mov     [ebp+var_c], offset dword_100796bc
mov     [ebp+var_10], offset asc_1007afb8
mov     [ebp+var_18], offset asc_1007afbc
jmp     short loc_10040e8a
mov     [ebp+var_c], offset asc_1007afc0
mov     [ebp+var_10], offset asc_1007afc4
mov     [ebp+var_18], offset asc_1007afcc
mov     eax, [ebp+arg_4]
mov     eax, [eax+8]
lea     ecx, [eax+eax*2]
lea     esi, [edx+ecx*2+23h]
lea     edx, [esi-1]
mov     [ebp+var_1c], esi
cmp     edx, 7ffffefeh
ja      short loc_10040ee5
cmp     dword_10080230, 0
jz      short loc_10040ef5
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10040ec1
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [ebp+var_8]
mov     eax, esi
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10040ede
push    eax
call    dword_10080284
add     esp, 4
mov     edi, [ebp+var_8]
test    edi, edi
jnz     short loc_10040f03
mov     eax, [ebp+arg_0]
mov     byte ptr [eax+32h], 1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
call    dword_1008024c
add     esp, 4
mov     edi, eax
jmp     short loc_10040ee1
push    offset acreatetable
push    edi
push    esi
call    sub_1000b050
add     esp, 0ch
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_10040f26
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10040f20
mov     edx, [ebp+arg_4]
mov     ebx, [edx]
lea     ecx, [ebp+var_4]
sub     eax, edi
push    ecx
and     eax, 3fffffffh
push    edi
mov     [ebp+var_4], eax
call    sub_10040d40
mov     esi, [ebp+var_4]
mov     eax, [ebp+arg_4]
mov     byte ptr [edi+esi], 28h
mov     ecx, [eax+0ch]
add     esp, 8
inc     esi
cmp     dword ptr [eax+8], 0
mov     [ebp+var_8], ecx
mov     [ebp+var_14], 0
jle     loc_1004100a
mov     edx, [ebp+var_c]
mov     eax, [ebp+var_1c]
push    edx
lea     ebx, [edi+esi]
sub     eax, esi
push    ebx
push    eax
call    sub_1000b050
add     esp, 0ch
mov     eax, ebx
test    ebx, ebx
jz      short loc_10040f92
cmp     byte ptr [ebx], 0
jz      short loc_10040f8b
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10040f85
sub     eax, ebx
and     eax, 3fffffffh
mov     ecx, [ebp+var_10]
add     esi, eax
mov     eax, [ebp+var_8]
mov     ebx, [eax]
lea     edx, [ebp+var_4]
push    edx
push    edi
mov     [ebp+var_4], esi
mov     [ebp+var_c], ecx
call    sub_10040d40
mov     ecx, [ebp+var_8]
movsx   edx, byte ptr [ecx+16h]
mov     eax, ds:src[edx*4]
add     esp, 8
mov     ecx, eax
test    eax, eax
jnz     short loc_10040fc7
xor     ebx, ebx
jmp     short loc_10040fe0
cmp     byte ptr [eax], 0
jz      short loc_10040fd6
lea     esp, [esp+0]
inc     ecx
cmp     byte ptr [ecx], 0
jnz     short loc_10040fd0
sub     ecx, eax
and     ecx, 3fffffffh
mov     ebx, ecx
mov     esi, [ebp+var_4]
push    ebx
push    eax
lea     eax, [edi+esi]
push    eax
call    memcpy
mov     eax, [ebp+var_14]
mov     ecx, [ebp+arg_4]
add     [ebp+var_8], 18h
inc     eax
add     esp, 0ch
add     esi, ebx
mov     [ebp+var_14], eax
cmp     eax, [ecx+8]
jl      loc_10040f64
mov     edx, [ebp+var_18]
push    edx
push    offset as
lea     eax, [edi+esi]
push    eax
mov     eax, [ebp+var_1c]
sub     eax, esi
push    eax
call    sub_1000b050
add     esp, 10h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, ecx
mov     ecx, [ebx]
mov     [ebp+var_5c], eax
mov     eax, [ebp+arg_4]
push    esi
push    edi
mov     [ebp+var_6c], eax
mov     [ebp+var_68], edx
mov     [ebp+var_4c], ecx
test    eax, eax
jnz     short loc_10041068
test    edx, edx
jz      loc_100413e6
cmp     byte ptr [ecx+32h], 0
jnz     loc_100413e6
mov     edi, [ebx+1fch]
mov     [ebp+var_60], edi
test    edi, edi
jz      loc_100413e6
mov     esi, [edi+44h]
mov     [ebp+var_50], 0fff0bdc0h
test    esi, esi
jz      short loc_100410b7
cmp     dword ptr [ecx+14h], 0
mov     [ebp+var_50], 0
jle     short loc_100410b7
mov     eax, [ecx+10h]
add     eax, 0ch
cmp     [eax], esi
jz      short loc_100410b7
mov     edx, [ebp+var_50]
inc     edx
add     eax, 10h
mov     [ebp+var_50], edx
cmp     edx, [ecx+14h]
jl      short loc_100410a4
mov     esi, [edi+2ch]
mov     [ebp+var_54], esi
test    esi, esi
jz      loc_1004116d
xor     eax, eax
push    40h
push    eax
lea     ecx, [ebp+var_48]
push    ecx
mov     [ebp+var_8c], eax
mov     [ebp+var_88], eax
mov     [ebp+var_84], eax
mov     [ebp+var_80], eax
mov     [ebp+var_7c], eax
mov     [ebp+var_78], eax
mov     [ebp+var_74], eax
mov     [ebp+var_70], eax
call    memset
mov     eax, [edi]
mov     edx, 1
lea     ecx, [ebp+var_48]
add     esp, 0ch
mov     [ebp+var_48], dx
mov     [ebp+var_40], eax
mov     [ebp+var_38], edi
mov     [ebp+var_24], 0ffffffffh
mov     [ebp+var_8c], ebx
mov     [ebp+var_88], ecx
mov     byte ptr [ebp+var_70], 4
cmp     dword ptr [esi], 0
mov     [ebp+var_58], 0
jle     short loc_1004116a
mov     [ebp+var_64], 0
jmp     short loc_10041139
mov     esi, ecx
mov     edx, [esi+8]
mov     eax, [ebp+var_64]
mov     edi, [eax+edx]
lea     esi, [ebp+var_8c]
call    sub_10035700
test    eax, eax
jnz     loc_100413e6
mov     eax, [ebp+var_58]
mov     ecx, [ebp+var_54]
add     [ebp+var_64], 14h
inc     eax
mov     [ebp+var_58], eax
cmp     eax, [ecx]
jl      short loc_10041137
mov     edi, [ebp+var_60]
mov     ecx, [ebp+var_4c]
cmp     byte ptr [ecx+79h], 0
jz      short loc_10041183
mov     edx, [ecx+74h]
mov     [edi+14h], edx
cmp     byte ptr [ecx+79h], 0
jnz     loc_1004135c
push    ebx
call    sub_10056c90
mov     esi, eax
add     esp, 4
mov     [ebp+var_58], esi
test    esi, esi
jz      loc_100413e6
push    0
push    2dh
call    sub_10025940
add     esp, 8
cmp     dword ptr [edi+1ch], 0
jnz     short loc_100411b9
mov     [ebp+var_54], offset atable
mov     edx, offset atable_0
jmp     short loc_100411c5
mov     [ebp+var_54], offset aview
mov     edx, offset aview_0
cmp     [ebp+var_68], 0
jz      loc_1004127e
mov     eax, [ebp+var_50]
mov     ecx, [ebx+194h]
push    eax
push    ecx
push    1
push    28h
mov     eax, esi
call    sub_10025890
mov     eax, [esi+4]
add     esp, 10h
mov     edx, 2
test    eax, eax
jz      short loc_100411fe
mov     ecx, [esi+1ch]
lea     ecx, [ecx+ecx*4]
mov     [eax+ecx*4-11h], dl
xor     eax, eax
mov     [ebx+48h], edx
lea     edx, [ebp+var_7c]
mov     [ebp+var_74], eax
mov     [ebp+var_70], eax
mov     eax, [ebp+var_68]
push    edx
push    eax
push    ebx
mov     [ebp+var_78], 1
mov     word ptr [ebp+var_7c], 8
call    sub_1005b870
add     esp, 0ch
push    1
push    2dh
mov     eax, esi
call    sub_10025940
xor     esi, esi
add     esp, 8
cmp     [ebx+44h], esi
jnz     short loc_1004126f
mov     eax, [ebp+var_68]
push    ebx
call    sub_10056bb0
add     esp, 4
cmp     eax, esi
jz      loc_100413e6
mov     ecx, [eax+8]
mov     [edi+8], ecx
mov     edx, [eax+0ch]
mov     [edi+0ch], edx
push    eax
mov     [eax+8], esi
mov     [eax+0ch], esi
mov     eax, [ebp+var_4c]
push    eax
call    sub_1003fba0
add     esp, 8
mov     ecx, [ebp+var_4c]
push    edi
push    ecx
call    sub_10040e00
add     esp, 8
jmp     short loc_100412a0
mov     ecx, [ebx+208h]
mov     eax, [ebp+var_6c]
mov     eax, [eax]
push    ecx
sub     eax, ecx
mov     ecx, [ebp+var_4c]
inc     eax
push    eax
push    edx
push    offset acreatess
push    ecx
call    sub_1000ae80
add     esp, 14h
mov     edx, [ebp+var_50]
mov     esi, eax
mov     ecx, offset asqlitetempmast
cmp     edx, 1
jz      short loc_100412b4
mov     ecx, offset asqlitemaster
mov     eax, [edi]
mov     edi, edx
mov     edx, [ebx+190h]
push    edx
mov     edx, [ebx+194h]
push    esi
push    edx
push    eax
push    eax
mov     eax, [ebp+var_54]
push    eax
push    ecx
mov     ecx, [ebp+var_4c]
mov     edx, [ecx+10h]
add     edi, edi
mov     eax, [edx+edi*8]
push    eax
push    offset aupdateqssettyp
push    ebx
call    sub_1003f410
mov     ecx, [ebp+var_4c]
mov     eax, esi
call    sub_10009810
mov     ecx, [ebp+var_50]
push    ecx
mov     esi, ebx
call    sub_10040c40
mov     esi, [ebp+var_60]
add     esp, 2ch
test    byte ptr [esi+22h], 8
jz      short loc_10041328
mov     edx, [ebp+var_4c]
mov     eax, [edx+10h]
mov     ecx, [eax+edi*8+0ch]
cmp     dword ptr [ecx+48h], 0
jnz     short loc_10041328
mov     edx, [eax+edi*8]
push    edx
push    offset acreatetableqsq
push    ebx
call    sub_1003f410
add     esp, 0ch
mov     eax, [esi]
mov     ecx, [ebp+var_4c]
push    eax
push    offset atblnameq_0
push    ecx
call    sub_1000ae80
mov     edx, [ebp+var_50]
mov     esi, [ebp+var_58]
add     esp, 0ch
push    eax
push    edx
call    sub_10025a60
mov     ecx, [ebp+var_4c]
mov     edi, [ebp+var_60]
add     esp, 8
cmp     byte ptr [ecx+79h], 0
jz      loc_100413e6
mov     ecx, [edi]
mov     edx, [edi+44h]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004137d
cmp     byte ptr [ecx], 0
jz      short loc_10041376
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10041370
sub     eax, ecx
and     eax, 3fffffffh
push    edi
push    eax
push    ecx
lea     eax, [edx+8]
call    sub_1000cfc0
add     esp, 0ch
test    eax, eax
mov     eax, [ebp+var_4c]
jz      short loc_100413a7
mov     byte ptr [eax+32h], 1
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     dword ptr [ebx+1fch], 0
or      dword ptr [eax+18h], 200h
cmp     dword ptr [edi+1ch], 0
jnz     short loc_100413e6
mov     ecx, [ebp+var_5c]
cmp     dword ptr [ecx], 0
mov     ebx, [ebx+208h]
jnz     short loc_100413d2
mov     edx, [ebp+var_6c]
mov     [ebp+var_5c], edx
mov     eax, [ebp+var_5c]
mov     edx, [eax]
sub     edx, ebx
mov     ecx, ebx
call    sub_1000b8c0
add     eax, 0dh
mov     [edi+30h], eax
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
push    esi
push    edi
mov     edi, ecx
cmp     dword ptr [edi+1cch], 0
mov     ebx, [edi]
mov     esi, eax
mov     [ebp+var_c], 0
jle     short loc_1004144e
push    offset aparametersaren
push    edi
call    sub_1000bb30
add     esp, 8
mov     esi, [ebp+arg_8]
test    esi, esi
jz      short loc_10041447
push    esi
push    ebx
call    sub_10054390
add     esp, 8
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_4]
push    eax
push    0
push    1
push    ecx
push    edx
mov     eax, esi
mov     ecx, edi
call    sub_100400d0
mov     eax, [edi+1fch]
add     esp, 14h
mov     [ebp+var_8], eax
test    eax, eax
jz      short loc_1004142d
cmp     dword ptr [edi+44h], 0
jnz     short loc_1004142d
mov     eax, esi
mov     esi, [ebp+arg_4]
lea     edx, [ebp+var_c]
call    sub_10040020
mov     eax, [ebp+var_8]
mov     esi, [eax+44h]
mov     ecx, ebx
call    sub_10053b80
mov     esi, [ebp+arg_8]
test    eax, eax
js      short loc_100414df
cmp     eax, 1
jz      short loc_100414df
mov     ecx, [edi]
mov     [ebp+var_20], edi
mov     edx, [ecx+10h]
mov     ecx, [ebp+var_c]
add     eax, eax
mov     eax, [edx+eax*8]
lea     edx, [ebp+var_20]
push    esi
push    edx
mov     [ebp+var_1c], eax
mov     [ebp+var_18], offset aview
mov     [ebp+var_14], ecx
call    sub_1003ea80
add     esp, 8
test    eax, eax
jz      short loc_100414df
mov     edi, ebx
call    sub_100545e0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    1
push    esi
push    ebx
call    sub_10036d20
mov     ecx, [ebp+var_8]
add     esp, 0ch
mov     [ecx+1ch], eax
test    esi, esi
jz      short loc_10041508
push    esi
push    ebx
call    sub_10054390
add     esp, 8
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
cmp     byte ptr [ebx+32h], 0
jnz     loc_10041447
cmp     byte ptr [ebx+79h], 0
jnz     short loc_10041525
mov     edx, [ebp+var_8]
push    edx
push    edi
call    sub_10041590
add     esp, 8
mov     eax, [edi+210h]
mov     cl, [eax]
mov     edx, [edi+214h]
test    cl, cl
jz      short loc_1004153e
cmp     cl, 3bh
jz      short loc_1004153e
add     eax, edx
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx]
sub     eax, ecx
test    eax, eax
jle     short loc_10041563
lea     esp, [esp+0]
movzx   edx, byte ptr [ecx+eax-1]
test    ds:byte_10076130[edx], 1
jz      short loc_10041563
dec     eax
test    eax, eax
jg      short loc_10041550
lea     eax, [ecx+eax-1]
lea     ecx, [ebp+var_10]
push    ecx
push    0
xor     edx, edx
mov     ecx, edi
mov     [ebp+var_10], eax
mov     [ebp+var_c], 1
call    sub_10041030
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [esi]
push    ebx
push    esi
mov     [esp+28h+var_10], 0
call    sub_10063550
add     esp, 8
test    eax, eax
jnz     short loc_100415e3
test    byte ptr [ebx+22h], 10h
jz      short loc_100415c9
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebx+8]
test    eax, eax
jg      short loc_100415c0
jns     short loc_100415ef
mov     eax, [ebx]
push    eax
push    offset aviewsiscircula
push    esi
call    sub_1000bb30
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebx+1ch]
push    0
push    ecx
push    edi
call    sub_10036d20
add     esp, 0ch
mov     [esp+20h+var_c], eax
test    eax, eax
jz      loc_100416ce
movzx   edx, byte ptr [edi+0e2h]
mov     ecx, [esi+48h]
mov     [esp+20h+var_11], dl
mov     edx, [eax+24h]
push    edx
push    esi
mov     [esp+28h+var_4], ecx
call    sub_100436c0
mov     dword ptr [ebx+8], 0ffffffffh
mov     eax, [edi+104h]
mov     [esp+28h+var_8], eax
mov     eax, [esp+28h+var_c]
push    esi
mov     byte ptr [edi+0e2h], 0
mov     dword ptr [edi+104h], 0
call    sub_10056bb0
mov     ecx, [esp+2ch+var_8]
movzx   edx, [esp+2ch+var_11]
mov     [edi+104h], ecx
mov     ecx, [esp+2ch+var_4]
mov     [edi+0e2h], dl
mov     [esi+48h], ecx
xor     ecx, ecx
add     esp, 0ch
cmp     eax, ecx
jz      short loc_100416af
mov     edx, [eax+8]
mov     [ebx+8], edx
mov     edx, [eax+0ch]
push    eax
mov     [ebx+0ch], edx
push    edi
mov     [eax+8], ecx
mov     [eax+0ch], ecx
call    sub_1003fba0
mov     ebx, [ebx+44h]
mov     esi, [esp+28h+var_c]
or      word ptr [ebx+4eh], 2
add     esp, 8
call    sub_100545e0
mov     eax, [esp+20h+var_10]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [esp+20h+var_c]
mov     [ebx+8], ecx
mov     [esp+20h+var_10], 1
call    sub_100545e0
mov     eax, [esp+20h+var_10]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
mov     [esp+1ch+var_10], 1
mov     eax, [esp+1ch+var_10]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
shl     eax, 4
mov     edx, eax
mov     eax, [edi+10h]
mov     eax, [edx+eax+0ch]
test    byte ptr [eax+4eh], 2
mov     [ebp+var_c], edx
jz      loc_100417b6
mov     eax, [eax+10h]
xor     ecx, ecx
mov     [ebp+var_4], eax
cmp     eax, ecx
jz      loc_100417a6
push    ebx
push    esi
jmp     short loc_10041726
mov     eax, [ebp+var_4]
mov     ebx, [eax+8]
cmp     [ebx+1ch], ecx
jz      short loc_10041798
mov     esi, [ebx+0ch]
cmp     esi, ecx
jz      short loc_10041792
mov     [ebp+var_8], ecx
cmp     [ebx+8], ecx
jle     short loc_10041783
lea     ecx, [ecx+0]
mov     eax, [esi]
mov     ecx, edi
call    sub_10009810
mov     ecx, [esi+4]
push    ecx
push    edi
call    sub_10036430
mov     eax, [esi+8]
add     esp, 8
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+0ch]
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+10h]
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+var_8]
inc     eax
add     esi, 18h
mov     [ebp+var_8], eax
cmp     eax, [ebx+8]
jl      short loc_10041740
mov     eax, [ebx+0ch]
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+var_4]
xor     ecx, ecx
mov     [ebx+0ch], ecx
mov     [ebx+8], ecx
mov     eax, [eax]
mov     [ebp+var_4], eax
cmp     eax, ecx
jnz     short loc_10041723
mov     edx, [ebp+var_c]
pop     esi
pop     ebx
mov     eax, [edi+10h]
mov     eax, [edx+eax+0ch]
mov     ecx, 0fffdh
and     [eax+4eh], cx
mov     esp, ebp
pop     ebp
retn
shl     eax, 4
add     eax, [ecx+10h]
mov     edx, [eax+0ch]
mov     ecx, [edx+10h]
test    ecx, ecx
jz      short loc_100417e1
mov     edx, [ecx+8]
cmp     [edx+14h], esi
jnz     short loc_100417db
mov     [edx+14h], edi
mov     ecx, [ecx]
test    ecx, ecx
jnz     short loc_100417d0
mov     eax, [eax+0ch]
mov     eax, [eax+20h]
test    eax, eax
jz      short locret_10041801
jmp     short loc_100417f0
mov     ecx, [eax+8]
cmp     [ecx+28h], esi
jnz     short loc_100417fb
mov     [ecx+28h], edi
mov     eax, [eax]
test    eax, eax
jnz     short loc_100417f0
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    edi
push    esi
call    sub_10056c90
mov     edi, eax
mov     al, [esi+13h]
add     esp, 4
test    al, al
jnz     short loc_10041832
inc     dword ptr [esi+4ch]
mov     ebx, [esi+4ch]
jmp     short loc_1004183e
dec     al
mov     [esi+13h], al
movzx   eax, al
mov     ebx, [esi+eax*4+1ch]
mov     eax, [edi+1ch]
mov     [ebp+var_4], eax
cmp     [edi+20h], eax
jg      short loc_10041855
call    sub_10025810
test    eax, eax
jnz     short loc_10041882
mov     eax, [ebp+var_4]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_0]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_4]
mov     byte ptr [eax+3], 0
mov     [eax+8], ebx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 66h
jmp     short loc_10041885
mov     ecx, [ebp+arg_4]
mov     eax, [esi+1b0h]
test    eax, eax
jnz     short loc_10041891
mov     eax, esi
mov     byte ptr [eax+18h], 1
mov     eax, offset asqlitetempmast
cmp     ecx, 1
jz      short loc_100418a4
mov     eax, offset asqlitemaster
mov     edx, [ebp+arg_0]
push    ebx
push    ebx
push    edx
push    eax
mov     eax, [esi]
mov     edx, [eax+10h]
add     ecx, ecx
mov     eax, [edx+ecx*8]
push    eax
push    offset aupdateqssetroo
push    esi
call    sub_1003f410
add     esp, 1ch
test    ebx, ebx
jz      short loc_100418ed
mov     dl, [esi+13h]
cmp     dl, 8
jnb     short loc_100418ed
xor     eax, eax
lea     ecx, [esi+64h]
cmp     [ecx+10h], ebx
jz      short loc_100418f3
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_100418d5
movzx   ecx, dl
mov     [esi+ecx*4+1ch], ebx
inc     byte ptr [esi+13h]
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
mov     byte ptr [ecx+8], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, eax
mov     eax, [edi+14h]
mov     [ebp+var_4], eax
xor     edx, edx
xor     ebx, ebx
test    edx, edx
jz      short loc_10041920
cmp     eax, edx
jge     short loc_10041922
mov     ebx, eax
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_10041948
lea     esp, [esp+0]
mov     ecx, [eax+28h]
test    edx, edx
jz      short loc_1004193b
cmp     ecx, edx
jge     short loc_10041941
cmp     ecx, ebx
jle     short loc_10041941
mov     ebx, ecx
mov     eax, [eax+14h]
test    eax, eax
jnz     short loc_10041930
test    ebx, ebx
jz      short loc_10041990
mov     edi, [edi+44h]
mov     ecx, [esi]
mov     eax, 0fff0bdc0h
test    edi, edi
jz      short loc_1004197c
mov     edx, [ecx+14h]
xor     eax, eax
test    edx, edx
jle     short loc_1004197c
mov     ecx, [ecx+10h]
add     ecx, 0ch
lea     esp, [esp+0]
cmp     [ecx], edi
jz      short loc_1004197c
inc     eax
add     ecx, 10h
cmp     eax, edx
jl      short loc_10041970
push    eax
push    ebx
call    sub_10041810
mov     eax, [ebp+var_4]
mov     edi, [ebp+arg_0]
add     esp, 8
mov     edx, ebx
jmp     short loc_10041916
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 44h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+var_3c], ecx
mov     ecx, [esi]
mov     [ebp+var_40], edx
mov     edx, [ecx+10h]
add     eax, eax
mov     eax, [edx+eax*8]
mov     [ebp+var_28], eax
mov     eax, 1
push    edi
mov     [ebp+var_30], esi
mov     [ebp+var_2c], eax
jmp     short loc_100419e3
mov     esi, [ebp+var_30]
push    eax
push    offset asqlitestatd
lea     ecx, [ebp+var_1c]
push    ecx
push    18h
call    sub_1000b050
mov     ecx, [esi]
xor     ebx, ebx
add     esp, 10h
mov     [ebp+var_34], ecx
mov     [ebp+var_24], ebx
lea     eax, [ebp+var_1c]
cmp     [ebp+var_1c], bl
jz      short loc_10041a15
lea     esp, [esp+0]
inc     eax
cmp     [eax], bl
jnz     short loc_10041a10
lea     edx, [ebp+var_1c]
sub     eax, edx
and     eax, 3fffffffh
mov     edi, eax
mov     eax, [ecx+14h]
mov     [ebp+var_44], edi
mov     [ebp+var_20], ebx
mov     [ebp+var_38], eax
cmp     eax, ebx
jle     loc_10041b31
jmp     short loc_10041a3a
mov     ecx, [ebp+var_34]
mov     edx, ebx
cmp     ebx, 2
jge     short loc_10041a44
xor     edx, 1
mov     eax, [ebp+var_28]
test    eax, eax
jz      short loc_10041a9b
mov     ecx, [ecx+10h]
mov     esi, edx
add     esi, esi
mov     esi, [ecx+esi*8]
mov     ecx, eax
mov     cl, [ecx]
test    cl, cl
jz      short loc_10041a80
lea     ecx, [ecx+0]
movzx   ebx, byte ptr [esi]
movzx   ecx, cl
mov     cl, ds:byte_10076030[ecx]
cmp     cl, ds:byte_10076030[ebx]
jnz     short loc_10041a7d
mov     cl, [eax+1]
inc     eax
inc     esi
test    cl, cl
jnz     short loc_10041a60
mov     ebx, [ebp+var_20]
movzx   eax, byte ptr [eax]
movzx   ecx, byte ptr [esi]
movzx   ecx, ds:byte_10076030[ecx]
movzx   eax, ds:byte_10076030[eax]
sub     eax, ecx
jnz     short loc_10041afd
mov     ecx, [ebp+var_34]
mov     ecx, [ecx+10h]
add     edx, edx
mov     esi, [ecx+edx*8+0ch]
cmp     dword ptr [esi+14h], 0
jz      short loc_10041add
xor     eax, eax
mov     edx, edi
lea     ecx, [ebp+var_1c]
test    edi, edi
jle     short loc_10041ad6
movzx   edi, byte ptr [ecx]
movzx   edi, ds:byte_10076030[edi]
lea     ebx, ds:0[eax*8]
xor     edi, ebx
dec     edx
xor     eax, edi
inc     ecx
test    edx, edx
jg      short loc_10041ab5
mov     ebx, [ebp+var_20]
mov     edi, [ebp+var_44]
xor     edx, edx
div     dword ptr [esi+8]
jmp     short loc_10041adf
xor     edx, edx
lea     eax, [ebp+var_1c]
push    edi
push    eax
lea     eax, [esi+8]
call    sub_1000ce60
add     esp, 8
test    eax, eax
jz      short loc_10041b52
mov     eax, [eax+8]
mov     [ebp+var_24], eax
test    eax, eax
jnz     short loc_10041b10
inc     ebx
mov     [ebp+var_20], ebx
cmp     ebx, [ebp+var_38]
jl      loc_10041a37
cmp     [ebp+var_24], 0
jz      short loc_10041b31
mov     ecx, [ebp+var_40]
mov     edx, [ebp+var_3c]
push    ecx
mov     ecx, [ebp+var_28]
push    edx
mov     edx, [ebp+var_30]
lea     eax, [ebp+var_1c]
push    eax
push    ecx
push    offset adeletefromqswh
push    edx
call    sub_1003f410
add     esp, 18h
mov     eax, [ebp+var_2c]
inc     eax
mov     [ebp+var_2c], eax
cmp     eax, 3
jle     loc_100419e0
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_24], 0
jmp     short loc_10041afd
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_8]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ecx, [edi]
shl     eax, 4
add     eax, [ecx+10h]
push    edi
mov     [ebp+var_c], ecx
mov     [ebp+var_8], eax
call    sub_10056c90
mov     esi, eax
mov     eax, [edi+1b0h]
xor     ebx, ebx
add     esp, 4
mov     [ebp+var_4], eax
cmp     eax, ebx
jnz     short loc_10041b9a
mov     [ebp+var_4], edi
mov     eax, [ebp+arg_8]
push    eax
mov     eax, edi
call    sub_10043c40
mov     ecx, [ebp+arg_8]
mov     eax, [ebp+var_4]
or      byte ptr [eax+17h], 1
mov     edx, 1
shl     edx, cl
add     esp, 4
or      [eax+154h], edx
mov     eax, [ebp+arg_4]
test    byte ptr [eax+22h], 10h
jz      short loc_10041c04
mov     eax, [esi+1ch]
mov     [ebp+var_4], eax
cmp     [esi+20h], eax
jg      short loc_10041be4
mov     edi, esi
call    sub_10025810
mov     edi, [ebp+arg_0]
test    eax, eax
jnz     short loc_10041c04
mov     eax, [ebp+var_4]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 84h
mov     eax, [ebp+arg_4]
push    eax
mov     eax, edi
call    sub_1005e0f0
add     esp, 4
mov     [ebp+var_4], eax
cmp     eax, ebx
jz      short loc_10041c3a
jmp     short loc_10041c23
jmp     short loc_10041c20
mov     eax, [ebp+var_4]
push    eax
push    edi
call    sub_1005ebe0
mov     ecx, [ebp+var_4]
mov     eax, [ecx+20h]
add     esp, 8
mov     [ebp+var_4], eax
cmp     eax, ebx
jnz     short loc_10041c20
mov     ecx, [ebp+arg_4]
test    byte ptr [ecx+22h], 8
jz      short loc_10041c5d
mov     edx, [ecx]
mov     eax, [ebp+var_8]
mov     ecx, [eax]
push    edx
push    ecx
push    offset adeletefromqsql
push    edi
call    sub_1003f410
mov     ecx, [ebp+arg_4]
add     esp, 10h
cmp     [ebp+arg_8], 1
mov     eax, offset asqlitetempmast
jz      short loc_10041c6d
mov     eax, offset asqlitemaster
mov     edx, [ecx]
push    edx
push    eax
mov     eax, [ebp+var_8]
mov     ecx, [eax]
push    ecx
push    offset adeletefromqswh_0
push    edi
call    sub_1003f410
add     esp, 14h
cmp     [ebp+arg_c], ebx
jnz     short loc_10041c9e
mov     eax, [ebp+arg_4]
test    byte ptr [eax+22h], 10h
jnz     short loc_10041c9e
push    eax
mov     eax, edi
call    sub_10041900
add     esp, 4
mov     eax, [ebp+arg_4]
test    byte ptr [eax+22h], 10h
jz      loc_10041d5d
mov     ecx, [esi+1ch]
mov     edx, [eax]
mov     [ebp+var_8], edx
mov     [ebp+arg_c], ecx
cmp     [esi+20h], ecx
jg      short loc_10041cd0
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10041ccd
mov     eax, 1
jmp     short loc_10041cf5
mov     ecx, [ebp+arg_c]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+arg_8]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 86h
mov     eax, ecx
mov     ecx, [esi+4]
mov     edi, [esi]
cmp     ecx, ebx
jz      short loc_10041d53
cmp     [edi+32h], bl
jnz     short loc_10041d53
cmp     eax, ebx
jge     short loc_10041d0b
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     ecx, [ecx+eax*4]
movsx   eax, byte ptr [ecx+1]
mov     [ebp+arg_c], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     ecx, [ebp+var_8]
mov     eax, [ebp+arg_c]
mov     [eax+10h], ebx
cmp     ecx, ebx
jnz     short loc_10041d35
mov     [eax+10h], ebx
mov     [eax+1], bl
jmp     short loc_10041d5d
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+arg_c]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
xor     ebx, ebx
jmp     short loc_10041d5d
mov     ecx, [ebp+var_8]
xor     eax, eax
call    sub_10025e50
mov     ecx, [ebp+arg_4]
mov     edx, [ecx]
mov     ecx, [esi+1ch]
mov     [ebp+arg_c], edx
mov     [ebp+arg_4], ecx
cmp     [esi+20h], ecx
jg      short loc_10041d85
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10041d82
mov     eax, 1
jmp     short loc_10041daa
mov     ecx, [ebp+arg_4]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+arg_8]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 6ch
mov     eax, ecx
mov     ecx, [esi+4]
mov     edi, [esi]
cmp     ecx, ebx
jz      short loc_10041e06
cmp     [edi+32h], bl
jnz     short loc_10041e06
cmp     eax, ebx
jge     short loc_10041dc0
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     ecx, [ecx+eax*4]
movsx   eax, byte ptr [ecx+1]
mov     [ebp+arg_4], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     ecx, [ebp+arg_c]
mov     eax, [ebp+arg_4]
mov     [eax+10h], ebx
cmp     ecx, ebx
jnz     short loc_10041dea
mov     [eax+10h], ebx
mov     [eax+1], bl
jmp     short loc_10041e10
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+arg_4]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
jmp     short loc_10041e10
mov     ecx, [ebp+arg_c]
xor     eax, eax
call    sub_10025e50
mov     edi, [ebp+arg_8]
mov     esi, [ebp+arg_0]
push    edi
call    sub_10040c40
mov     eax, edi
mov     edi, [ebp+var_c]
add     esp, 4
call    sub_100416f0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi]
cmp     byte ptr [eax+32h], 0
push    edi
mov     [ebp+var_4], eax
jnz     loc_1004205a
cmp     [ebp+arg_8], 0
jz      short loc_10041e53
inc     byte ptr [eax+35h]
mov     eax, [ebp+arg_4]
push    eax
mov     eax, [ebp+arg_0]
mov     edi, [eax+4]
mov     ebx, [eax+8]
call    sub_1003f660
mov     ecx, [ebp+var_4]
mov     ebx, eax
mov     eax, [ebp+arg_8]
add     esp, 4
test    eax, eax
jz      short loc_10041e77
dec     byte ptr [ecx+35h]
test    ebx, ebx
jnz     short loc_10041e98
test    eax, eax
jz      loc_1004205a
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+4]
push    edx
push    esi
call    sub_10043d00
add     esp, 8
jmp     loc_1004205a
mov     edx, [ebx+44h]
mov     edi, 0fff0bdc0h
test    edx, edx
jz      short loc_10041ebe
xor     edi, edi
cmp     [ecx+14h], edi
jle     short loc_10041ebe
mov     eax, [ecx+10h]
add     eax, 0ch
cmp     [eax], edx
jz      short loc_10041ebe
inc     edi
add     eax, 10h
cmp     edi, [ecx+14h]
jl      short loc_10041eb1
test    byte ptr [ebx+22h], 10h
jz      short loc_10041ed9
push    ebx
push    esi
call    sub_10041590
add     esp, 8
test    eax, eax
jnz     loc_1004205a
mov     ecx, [ebp+var_4]
mov     edx, offset asqlitetempmast
cmp     edi, 1
jz      short loc_10041ee8
mov     edx, offset asqlitemaster
mov     ecx, [ecx+10h]
mov     eax, edi
add     eax, eax
mov     eax, [ecx+eax*8]
push    eax
push    0
push    edx
mov     [ebp+var_c], eax
push    9
mov     eax, esi
mov     [ebp+var_8], 0
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1004205a
cmp     [ebp+arg_4], eax
jz      short loc_10041f27
xor     ecx, ecx
cmp     edi, 1
setnz   cl
lea     ecx, [ecx+ecx+0fh]
jmp     short loc_10041f65
test    byte ptr [ebx+22h], 10h
jz      short loc_10041f59
mov     eax, [ebx+34h]
mov     ecx, 1eh
test    eax, eax
jz      short loc_10041f4e
lea     esp, [esp+0]
mov     edx, [ebp+var_4]
cmp     [eax], edx
jz      short loc_10041f4e
mov     eax, [eax+18h]
test    eax, eax
jnz     short loc_10041f40
mov     eax, [eax+4]
mov     edx, [eax+4]
mov     [ebp+var_8], edx
jmp     short loc_10041f65
xor     ecx, ecx
cmp     edi, 1
setz    cl
lea     ecx, [ecx+ecx+0bh]
mov     eax, [ebp+var_c]
mov     edx, [ebp+var_8]
push    eax
mov     eax, [ebx]
push    edx
push    eax
push    ecx
mov     eax, esi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1004205a
mov     ecx, [ebp+var_c]
mov     edx, [ebx]
push    ecx
push    eax
push    edx
push    9
mov     eax, esi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1004205a
mov     eax, [ebx]
push    7
push    offset asqlite_0
push    eax
call    sub_1000bcf0
add     esp, 0ch
test    eax, eax
jnz     short loc_10041fde
mov     eax, [ebx]
push    0bh
push    offset asqlitestat
push    eax
call    sub_1000bcf0
add     esp, 0ch
test    eax, eax
jz      short loc_10041fde
mov     ecx, [ebx]
push    ecx
push    offset atablesmaynotbe_0
push    esi
call    sub_1000bb30
add     esp, 0ch
jmp     short loc_1004205a
cmp     [ebp+arg_4], 0
jz      short loc_10041ffd
cmp     dword ptr [ebx+1ch], 0
jnz     short loc_10042016
mov     edx, [ebx]
push    edx
push    offset ausedroptableto
push    esi
call    sub_1000bb30
add     esp, 0ch
jmp     short loc_1004205a
cmp     dword ptr [ebx+1ch], 0
jz      short loc_10042016
mov     eax, [ebx]
push    eax
push    offset ausedropviewtod
push    esi
call    sub_1000bb30
add     esp, 0ch
jmp     short loc_1004205a
push    esi
call    sub_10056c90
add     esp, 4
test    eax, eax
jz      short loc_1004205a
push    1
mov     eax, esi
call    sub_10043d50
mov     edx, [ebx]
add     esp, 4
push    edi
push    esi
mov     ecx, offset atbl
call    sub_100419a0
mov     ecx, [ebp+arg_0]
push    ebx
push    ecx
push    esi
call    sub_10049f30
mov     edx, [ebp+arg_4]
add     esp, 14h
push    edx
push    edi
push    ebx
push    esi
call    sub_10041b60
add     esp, 10h
mov     eax, [ebp+arg_0]
push    eax
mov     eax, [ebp+var_4]
call    sub_10043720
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 30h
mov     edx, [ebp+arg_0]
mov     ecx, [edx+1fch]
push    ebx
push    esi
mov     esi, [edx]
push    edi
mov     [ebp+var_c], esi
mov     [ebp+var_20], 0
mov     [ebp+var_8], ecx
test    ecx, ecx
jz      loc_1004239b
cmp     byte ptr [edx+1d5h], 0
jnz     loc_1004239b
mov     edi, [ebp+arg_4]
test    edi, edi
jnz     short loc_100420ed
mov     eax, [ecx+8]
dec     eax
js      loc_1004239b
mov     edi, [ebp+arg_c]
test    edi, edi
jz      short loc_100420e4
cmp     dword ptr [edi], 1
jz      short loc_100420e4
mov     ecx, [ecx+0ch]
mov     edi, [ebp+arg_8]
lea     eax, [eax+eax*2]
mov     eax, [ecx+eax*8]
push    edi
push    eax
push    offset aforeignkeyonss
push    edx
call    sub_1000bb30
add     esp, 10h
jmp     loc_1004239b
mov     [ebp+var_4], 1
jmp     short loc_10042112
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_1004210d
mov     ecx, [eax]
cmp     ecx, [edi]
jz      short loc_1004210d
push    offset anumberofcolumn
push    edx
call    sub_1000bb30
add     esp, 8
jmp     loc_1004239b
mov     edx, [edi]
mov     [ebp+var_4], edx
mov     eax, [ebp+arg_8]
mov     ecx, [eax+4]
mov     edx, [ebp+var_4]
lea     edi, [ecx+edx*8+25h]
mov     ecx, [ebp+arg_c]
test    ecx, ecx
jz      short loc_10042158
mov     eax, [ecx]
test    eax, eax
jle     short loc_10042158
mov     edx, [ecx+8]
add     edx, 4
mov     ebx, eax
mov     ecx, [edx]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004214e
cmp     byte ptr [ecx], 0
jz      short loc_10042147
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10042141
sub     eax, ecx
and     eax, 3fffffffh
add     edx, 14h
dec     ebx
lea     edi, [edi+eax+1]
jnz     short loc_10042134
mov     ecx, edi
call    sub_10009a40
mov     ebx, eax
mov     [ebp+var_2c], ebx
test    ebx, ebx
jz      short loc_10042174
push    edi
push    0
push    ebx
call    memset
add     esp, 0ch
mov     [ebp+var_20], ebx
test    ebx, ebx
jz      loc_1004239b
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     esi, [ebp+arg_8]
mov     [ebx], eax
mov     eax, [eax+24h]
lea     edi, [ebx+ecx*8+24h]
mov     [ebx+4], eax
mov     [ebx+8], edi
mov     edx, [esi+4]
mov     eax, [esi]
push    edx
push    eax
push    edi
call    memcpy
mov     ecx, [esi+4]
add     esp, 0ch
mov     byte ptr [edi+ecx], 0
call    sub_1000bbf0
mov     edx, [esi+4]
lea     eax, [edi+edx+1]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_4]
xor     ecx, ecx
mov     [ebx+14h], eax
cmp     [ebp+arg_4], ecx
jnz     short loc_1004220a
mov     ecx, [ebp+var_8]
mov     edx, [ecx+8]
dec     edx
mov     [ebx+24h], edx
cmp     [ebp+arg_c], 0
jz      loc_10042336
test    eax, eax
jle     loc_10042336
mov     edx, [ebp+var_4]
xor     esi, esi
add     ebx, 28h
mov     [ebp+arg_0], edx
mov     ecx, [ebp+arg_c]
mov     eax, [ecx+8]
mov     eax, [esi+eax+4]
mov     edi, eax
test    eax, eax
jnz     loc_100422ec
jmp     loc_100422ff
mov     [ebp+var_18], ecx
cmp     eax, ecx
jle     short loc_100421d4
lea     eax, [ebx+24h]
mov     [ebp+var_10], ecx
mov     [ebp+var_14], eax
mov     eax, [ebp+var_8]
xor     edi, edi
mov     [ebp+var_24], edi
cmp     [eax+8], edi
jle     short loc_1004229e
mov     ecx, [ebp+arg_4]
mov     edx, [ecx+8]
mov     ecx, [ebp+var_10]
mov     edx, [edx+ecx+4]
mov     esi, [eax+0ch]
mov     [ebp+var_28], edx
mov     ecx, [esi]
mov     al, [ecx]
mov     edx, [ebp+var_28]
test    al, al
jz      short loc_10042270
jmp     short loc_10042250
movzx   edi, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[edi]
jnz     short loc_1004226d
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10042250
mov     edi, [ebp+var_24]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[ecx]
movzx   ecx, byte ptr [edx]
movzx   edx, ds:byte_10076030[ecx]
sub     eax, edx
jz      short loc_10042299
mov     eax, [ebp+var_8]
inc     edi
add     esi, 18h
mov     [ebp+var_24], edi
cmp     edi, [eax+8]
jl      short loc_1004223a
jmp     short loc_1004229e
mov     ecx, [ebp+var_14]
mov     [ecx], edi
mov     edx, [ebp+var_8]
cmp     edi, [edx+8]
jge     short loc_100422c5
mov     ecx, [ebp+var_18]
mov     eax, [ebp+var_4]
add     [ebp+var_10], 14h
add     [ebp+var_14], 8
inc     ecx
mov     [ebp+var_18], ecx
cmp     ecx, eax
jl      loc_1004221a
jmp     loc_100421d4
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+var_18]
mov     edx, [ecx+8]
mov     ecx, [ebp+arg_0]
lea     eax, [eax+eax*4]
mov     eax, [edx+eax*4+4]
push    eax
push    offset aunknowncolumns
push    ecx
call    sub_1000bb30
add     esp, 0ch
jmp     loc_10042398
cmp     byte ptr [eax], 0
jz      short loc_100422f7
inc     edi
cmp     byte ptr [edi], 0
jnz     short loc_100422f1
sub     edi, eax
and     edi, 3fffffffh
mov     eax, [ebp+var_1c]
mov     [ebx], eax
mov     ecx, [ecx+8]
mov     edx, [esi+ecx+4]
push    edi
push    edx
push    eax
call    memcpy
mov     eax, [ebp+var_1c]
mov     byte ptr [edi+eax], 0
add     esp, 0ch
lea     eax, [edi+eax+1]
add     ebx, 8
add     esi, 14h
dec     [ebp+arg_0]
mov     [ebp+var_1c], eax
jnz     loc_100421f1
mov     ebx, [ebp+var_2c]
mov     eax, [ebp+arg_10]
mov     ecx, [ebx+8]
mov     [ebx+19h], al
sar     eax, 8
mov     [ebx+1ah], al
mov     byte ptr [ebx+18h], 0
mov     eax, ecx
test    ecx, ecx
jz      short loc_10042361
cmp     byte ptr [ecx], 0
jz      short loc_1004235a
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10042354
sub     eax, ecx
and     eax, 3fffffffh
mov     esi, [ebp+var_8]
push    ebx
push    eax
mov     eax, [esi+44h]
push    ecx
add     eax, 38h
call    sub_1000cfc0
add     esp, 0ch
cmp     eax, ebx
jnz     short loc_10042384
mov     ecx, [ebp+var_c]
mov     byte ptr [ecx+32h], 1
mov     esi, ecx
jmp     short loc_1004239b
test    eax, eax
jz      short loc_1004238e
mov     [ebx+0ch], eax
mov     [eax+10h], ebx
mov     [esi+24h], ebx
mov     [ebp+var_20], 0
mov     esi, [ebp+var_c]
mov     eax, [ebp+var_20]
mov     ecx, esi
call    sub_10009810
mov     edx, [ebp+arg_4]
push    edx
push    esi
call    sub_10037020
mov     eax, [ebp+arg_c]
push    eax
push    esi
call    sub_10037020
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [eax+1fch]
test    eax, eax
jz      short loc_100423ea
mov     eax, [eax+24h]
test    eax, eax
jz      short loc_100423ea
mov     cl, [ebp+arg_0]
mov     [eax+18h], cl
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, eax
mov     eax, [ecx+0ch]
mov     edx, [esi]
mov     [ebp+var_18], eax
mov     eax, [esi+48h]
mov     [ebp+var_c], eax
inc     eax
mov     [ebp+var_14], eax
inc     eax
mov     [esi+48h], eax
mov     eax, [ecx+18h]
push    edi
xor     ebx, ebx
mov     edi, 0fff0bdc0h
mov     [ebp+var_4], edi
cmp     eax, ebx
jz      short loc_1004244b
mov     [ebp+var_4], ebx
cmp     [edx+14h], ebx
jle     short loc_10042448
mov     ecx, [edx+10h]
add     ecx, 0ch
cmp     [ecx], eax
jz      short loc_10042445
inc     [ebp+var_4]
mov     edi, [edx+14h]
add     ecx, 10h
cmp     [ebp+var_4], edi
jl      short loc_10042433
mov     ecx, [ebp+arg_0]
mov     edi, [ebp+var_4]
mov     edx, [edx+10h]
mov     ecx, [ecx]
mov     eax, edi
add     eax, eax
mov     eax, [edx+eax*8]
push    eax
push    ebx
push    ecx
push    1bh
mov     eax, esi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_10042898
mov     eax, [ebp+var_18]
mov     edx, [eax]
mov     eax, [eax+14h]
push    edx
push    1
push    eax
push    edi
mov     eax, esi
call    sub_1003ef00
push    esi
call    sub_10056c90
mov     edi, eax
add     esp, 14h
cmp     edi, ebx
jz      loc_10042898
mov     eax, [ebp+arg_4]
cmp     eax, ebx
jl      short loc_100424a1
mov     [ebp+var_10], eax
jmp     short loc_100424bb
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+28h]
mov     edx, [ebp+var_4]
push    edx
push    eax
mov     [ebp+var_10], eax
push    67h
mov     eax, edi
call    sub_10025990
add     esp, 0ch
mov     eax, [ebp+arg_0]
push    eax
push    esi
call    sub_10044250
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_10]
push    0fffffff0h
push    eax
push    ecx
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_14]
push    edx
push    eax
push    28h
mov     eax, edi
call    sub_100259f0
mov     eax, [edi+4]
add     esp, 20h
cmp     eax, ebx
jz      short loc_10042502
cmp     [ebp+arg_4], ebx
mov     ecx, [edi+1ch]
setl    dl
dec     dl
and     dl, 2
or      dl, 1
lea     ecx, [ecx+ecx*4]
mov     [eax+ecx*4-11h], dl
mov     ecx, [ebp+var_1c]
mov     eax, [esi+48h]
push    0fffffffah
push    ecx
push    ebx
push    ebx
push    eax
lea     edx, [eax+1]
mov     [ebp+var_8], eax
push    2bh
mov     eax, edi
mov     [esi+48h], edx
call    sub_100259f0
mov     edx, [ebp+var_18]
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
push    27h
push    edx
push    eax
push    ecx
mov     eax, esi
call    sub_1004b860
mov     ecx, [edi+1ch]
add     esp, 28h
mov     [ebp+var_1c], ecx
cmp     [edi+20h], ecx
jg      short loc_10042558
call    sub_10025810
test    eax, eax
jz      short loc_10042555
mov     [ebp+var_10], 1
jmp     short loc_1004257e
mov     ecx, [ebp+var_1c]
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [ecx+ecx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_c]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 48h
mov     [ebp+var_10], ecx
mov     al, [esi+13h]
cmp     al, bl
jnz     short loc_10042590
inc     dword ptr [esi+4ch]
mov     eax, [esi+4ch]
mov     [ebp+var_4], eax
jmp     short loc_1004259f
dec     al
movzx   ecx, al
mov     [esi+13h], al
mov     edx, [esi+ecx*4+1ch]
mov     [ebp+var_4], edx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
mov     edx, [ebp+arg_0]
push    1
push    eax
push    ecx
push    edx
push    esi
call    sub_100457b0
mov     eax, [edi+1ch]
add     esp, 14h
mov     [ebp+var_1c], eax
cmp     [edi+20h], eax
jg      short loc_100425cd
call    sub_10025810
test    eax, eax
jnz     short loc_100425f3
mov     eax, [ebp+var_1c]
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_8]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 60h
mov     eax, [edi+1ch]
mov     [ebp+var_1c], eax
cmp     [edi+20h], eax
jg      short loc_1004260a
call    sub_10025810
test    eax, eax
jnz     short loc_10042635
mov     eax, [ebp+var_1c]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_c]
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
mov     ecx, [ebp+var_10]
lea     edx, [ecx+1]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 5fh
jmp     short loc_10042638
mov     ecx, [ebp+var_10]
cmp     ecx, ebx
jl      short loc_1004264d
mov     eax, [edi+1ch]
cmp     eax, ecx
jbe     short loc_1004264d
mov     edx, [edi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
mov     ecx, [edi+1ch]
mov     [ebp+var_1c], ecx
cmp     [edi+20h], ecx
jg      short loc_1004266d
call    sub_10025810
test    eax, eax
jz      short loc_1004266a
mov     [ebp+var_18], 1
jmp     short loc_10042693
mov     ecx, [ebp+var_1c]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+var_8]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 46h
mov     [ebp+var_18], ecx
mov     eax, [ebp+arg_0]
cmp     [eax+2ch], bl
jz      short loc_100426e2
mov     eax, [edi+1ch]
add     eax, 3
push    eax
mov     [ebp+var_1c], eax
push    ebx
push    1
mov     eax, edi
call    sub_10025990
mov     ecx, [edi+1ch]
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_1c]
add     esp, 0ch
push    edx
push    eax
mov     [ebp+arg_0], ecx
mov     ecx, [ebp+var_8]
push    ecx
push    3dh
mov     eax, edi
call    sub_10025890
push    0fffffffeh
push    offset aindexedcolumns
push    2
mov     eax, esi
call    sub_10043db0
add     esp, 1ch
jmp     short loc_100426e8
mov     edx, [edi+1ch]
mov     [ebp+arg_0], edx
mov     eax, [edi+1ch]
mov     [ebp+var_1c], eax
cmp     [edi+20h], eax
jg      short loc_100426ff
call    sub_10025810
test    eax, eax
jnz     short loc_10042725
mov     eax, [ebp+var_1c]
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_8]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 3eh
mov     eax, [edi+1ch]
mov     [ebp+var_1c], eax
cmp     [edi+20h], eax
jg      short loc_1004273c
call    sub_10025810
test    eax, eax
jnz     short loc_10042767
mov     eax, [ebp+var_1c]
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_14]
mov     ecx, 1
add     [edi+1ch], ecx
mov     [eax+4], edx
mov     edx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 61h
mov     ecx, [edi+4]
cmp     ecx, ebx
jz      short loc_10042779
mov     eax, [edi+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [ecx+eax*4-11h], 10h
mov     edx, [ebp+var_4]
cmp     edx, ebx
jz      short loc_100427ad
cmp     byte ptr [esi+13h], 8
jnb     short loc_100427ad
xor     eax, eax
lea     ecx, [esi+64h]
jmp     short loc_10042790
cmp     [ecx+10h], edx
jz      loc_1004289f
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10042790
movzx   ecx, byte ptr [esi+13h]
mov     [esi+ecx*4+1ch], edx
inc     byte ptr [esi+13h]
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_100427be
call    sub_10025810
test    eax, eax
jnz     short loc_100427e4
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_8]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_0]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 51h
mov     ecx, [ebp+var_18]
cmp     ecx, ebx
jl      short loc_100427fc
mov     eax, [edi+1ch]
cmp     eax, ecx
jbe     short loc_100427fc
mov     edx, [edi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1004280d
call    sub_10025810
test    eax, eax
jnz     short loc_10042830
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10042841
call    sub_10025810
test    eax, eax
jnz     short loc_10042864
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_14]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10042875
call    sub_10025810
test    eax, eax
jnz     short loc_10042898
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_8]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
jmp     loc_100427ad
push    ebp
mov     ebp, esp
sub     esp, 44h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, [edi]
xor     esi, esi
cmp     byte ptr [ebx+32h], 0
mov     [ebp+var_2c], esi
mov     [ebp+src], esi
mov     [ebp+var_4], ebx
mov     [ebp+var_14], esi
mov     [ebp+var_1c], esi
jnz     loc_10042eb6
cmp     byte ptr [edi+1d5h], 0
jnz     loc_10042eb6
cmp     byte ptr [ebx+79h], 0
jnz     short loc_10042908
lea     eax, [edi+4]
push    eax
push    ebx
call    sub_100537d0
add     esp, 8
cmp     eax, esi
jz      short loc_10042908
inc     dword ptr [edi+44h]
mov     [edi+0ch], eax
jmp     loc_10042eb6
cmp     [ebp+arg_c], esi
jz      loc_100429b1
mov     eax, [ebp+arg_8]
mov     esi, [ebp+arg_4]
lea     edx, [ebp+var_14]
call    sub_10040020
mov     [ebp+var_c], eax
test    eax, eax
js      loc_10042eb6
cmp     byte ptr [ebx+79h], 0
jnz     short loc_10042959
mov     eax, [ebp+arg_c]
mov     esi, edi
call    sub_10044bd0
mov     ecx, [ebp+arg_8]
cmp     dword ptr [ecx+4], 0
jnz     short loc_10042959
test    eax, eax
jz      short loc_10042959
mov     edx, [ebx+10h]
mov     eax, [eax+44h]
cmp     eax, [edx+1ch]
jnz     short loc_10042959
mov     [ebp+var_c], 1
mov     ecx, [ebp+var_14]
mov     eax, [ebp+var_c]
push    ecx
push    offset aindex
mov     esi, edi
lea     ecx, [ebp+var_44]
call    sub_1003e930
add     esp, 8
test    eax, eax
jz      short loc_10042985
mov     edx, [ebp+arg_c]
push    edx
mov     eax, ecx
push    eax
call    sub_1003e970
add     esp, 8
mov     eax, [ebp+arg_c]
mov     edi, [eax+4]
mov     ebx, [eax+8]
push    0
call    sub_1003f660
add     esp, 4
mov     [ebp+var_8], eax
test    eax, eax
jz      loc_10042eb6
mov     ecx, [ebp+var_4]
cmp     byte ptr [ecx+32h], 0
jz      short loc_100429cf
jmp     loc_10042eb6
mov     edi, [edi+1fch]
mov     [ebp+var_8], edi
cmp     edi, esi
jz      loc_10042eb6
mov     esi, [edi+44h]
mov     ecx, ebx
call    sub_10053b80
mov     [ebp+var_c], eax
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_c]
mov     ebx, [edx+10h]
mov     esi, [ebp+var_8]
mov     edi, [esi]
shl     eax, 4
push    7
add     ebx, eax
push    offset asqlite_0
push    edi
mov     [ebp+var_28], eax
mov     [ebp+var_18], ebx
call    sub_1000bcf0
add     esp, 0ch
test    eax, eax
jnz     short loc_10042a44
mov     eax, 9
mov     ecx, offset aaltertab
lea     edx, [edi+7]
lea     esp, [esp+0]
mov     esi, [edx]
cmp     esi, [ecx]
jnz     short loc_10042a2a
sub     eax, 4
add     ecx, 4
add     edx, 4
cmp     eax, 4
jnb     short loc_10042a10
mov     al, [ecx]
cmp     al, [edx]
jz      short loc_10042a41
mov     ecx, [ebp+arg_0]
push    edi
push    offset atablesmaynotbe_1
push    ecx
call    sub_1000bb30
add     esp, 0ch
jmp     loc_10042eb6
mov     esi, [ebp+var_8]
cmp     dword ptr [esi+1ch], 0
jz      short loc_10042a60
mov     edx, [ebp+arg_0]
push    offset aviewsmaynotbei
push    edx
call    sub_1000bb30
add     esp, 8
jmp     loc_10042eb6
test    byte ptr [esi+22h], 10h
jz      short loc_10042a7c
mov     eax, [ebp+arg_0]
push    offset avirtualtablesm_0
push    eax
call    sub_1000bb30
add     esp, 8
jmp     loc_10042eb6
cmp     [ebp+var_14], 0
jz      loc_10042b23
mov     ecx, [ebp+var_4]
mov     eax, [ebp+var_14]
push    ecx
call    sub_1003fe10
add     esp, 4
mov     [ebp+src], eax
test    eax, eax
jz      loc_10042eb6
mov     esi, [ebp+arg_0]
mov     edi, eax
call    sub_10040080
test    eax, eax
jnz     loc_10042eb6
mov     esi, [ebp+var_4]
cmp     [esi+79h], al
jnz     short loc_10042ae0
push    eax
push    edi
push    esi
call    sub_1003f510
add     esp, 0ch
test    eax, eax
jz      short loc_10042ae0
mov     edx, [ebp+arg_0]
push    edi
push    offset athereisalready_1
push    edx
call    sub_1000bb30
add     esp, 0ch
jmp     loc_10042eb6
mov     eax, [ebx]
push    eax
push    edi
mov     edx, esi
call    sub_1003f6f0
add     esp, 8
test    eax, eax
jz      short loc_10042b56
cmp     [ebp+arg_24], 0
jnz     short loc_10042b0f
mov     ecx, [ebp+arg_0]
push    edi
push    offset aindexsalreadye
push    ecx
call    sub_1000bb30
add     esp, 0ch
jmp     loc_10042eb6
mov     edx, [ebp+var_c]
mov     eax, [ebp+arg_0]
push    edx
call    sub_10043c40
add     esp, 4
jmp     loc_10042eb6
mov     eax, [esi+10h]
mov     ecx, 1
test    eax, eax
jz      short loc_10042b38
nop
mov     eax, [eax+14h]
inc     ecx
test    eax, eax
jnz     short loc_10042b30
mov     eax, [ebp+var_4]
push    ecx
push    edi
push    offset asqliteautoinde
push    eax
call    sub_1000ae80
add     esp, 10h
mov     [ebp+src], eax
test    eax, eax
jz      loc_10042eb6
mov     edi, [ebx]
mov     ebx, [ebp+var_c]
mov     eax, offset asqlitetempmast
cmp     ebx, 1
jz      short loc_10042b6a
mov     eax, offset asqlitemaster
mov     esi, [ebp+arg_0]
push    edi
push    0
push    eax
push    12h
mov     eax, esi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_10042eb6
mov     eax, 1
cmp     ebx, eax
jnz     short loc_10042b93
mov     eax, 3
mov     ecx, [ebp+var_8]
mov     edx, [ecx]
mov     ecx, [ebp+src]
push    edi
push    edx
push    ecx
push    eax
mov     eax, esi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_10042eb6
mov     eax, [ebp+arg_10]
test    eax, eax
jnz     short loc_10042c0b
mov     ecx, [ebp+var_8]
mov     eax, [ecx+8]
lea     edx, [eax+eax*2]
mov     eax, [ecx+0ch]
mov     ecx, [eax+edx*8-18h]
mov     [ebp+var_34], ecx
call    sub_1000ba20
mov     [ebp+var_30], eax
push    0
xor     ecx, ecx
mov     eax, esi
call    sub_10036e50
add     esp, 4
mov     [ebp+arg_10], eax
test    eax, eax
jz      loc_10042eb6
mov     ecx, esi
push    0
mov     esi, eax
push    ecx
lea     edx, [ebp+var_34]
mov     ecx, esi
call    sub_10036f00
mov     al, [ebp+arg_20]
mov     edx, [esi+8]
mov     [edx+0ch], al
add     esp, 8
mov     eax, esi
mov     esi, [eax]
test    esi, esi
jle     short loc_10042c3a
mov     edx, [eax+8]
mov     edi, esi
mov     eax, [edx]
test    eax, eax
jz      short loc_10042c34
mov     eax, [eax+14h]
test    eax, eax
jz      short loc_10042c34
mov     ecx, [eax]
call    sub_1000ba20
mov     ecx, [ebp+var_1c]
lea     eax, [ecx+eax+1]
mov     [ebp+var_1c], eax
add     edx, 14h
dec     edi
jnz     short loc_10042c16
mov     ecx, [ebp+src]
call    sub_1000ba20
lea     ecx, ds:0bh[esi*4]
and     ecx, 0fffffff8h
add     ecx, eax
mov     [ebp+var_24], eax
mov     eax, [ebp+var_1c]
lea     edx, [esi+esi*8]
add     edx, ecx
lea     edi, [edx+eax+31h]
mov     eax, [ebp+var_4]
call    sub_10009a20
mov     ecx, [ebp+var_4]
cmp     byte ptr [ecx+32h], 0
mov     ebx, eax
jnz     loc_10042e9c
lea     edx, ds:8[esi*4]
lea     eax, [ebx+30h]
mov     [ebx+8], eax
and     edx, 0fffffff8h
add     eax, edx
mov     edx, [ebp+src]
mov     [ebx+20h], eax
lea     eax, [eax+esi*4]
mov     [ebx+4], eax
lea     eax, [eax+esi*4]
add     esi, eax
mov     [ebx+1ch], eax
mov     eax, [ebp+var_24]
lea     ecx, [esi+eax+1]
inc     eax
push    eax
push    edx
push    esi
mov     [ebx], esi
mov     [ebp+var_20], ecx
call    memcpy
mov     eax, [ebp+arg_10]
mov     edi, [ebp+var_8]
mov     dl, byte ptr [ebp+arg_14]
mov     [ebx+0ch], edi
mov     ecx, [eax]
mov     [ebx+24h], ecx
mov     [ebx+2ch], dl
mov     edx, [ebp+var_4]
add     esp, 0ch
cmp     [ebp+var_14], 0
setz    cl
mov     [ebx+2dh], cl
mov     ecx, [edx+10h]
mov     edx, [ebp+var_28]
mov     ecx, [edx+ecx+0ch]
mov     edx, [ebp+var_18]
mov     [ebx+18h], ecx
mov     ecx, [edx+0ch]
cmp     byte ptr [ecx+4ch], 4
mov     edx, [eax+8]
sbb     ecx, ecx
neg     ecx
dec     ecx
xor     esi, esi
mov     [ebp+var_30], ecx
mov     [ebp+var_1c], edx
cmp     [eax], esi
jle     loc_10042dea
mov     eax, [ebp+var_1c]
mov     ecx, [eax+4]
mov     eax, [ebp+var_8]
mov     edx, [eax+0ch]
xor     edi, edi
mov     [ebp+var_24], ecx
mov     [ebp+var_18], edx
cmp     [eax+8], edi
jle     short loc_10042d3e
jmp     short loc_10042d20
mov     eax, [ebp+var_18]
mov     edx, [eax]
mov     ecx, [ebp+var_24]
call    sub_1000bca0
test    eax, eax
jz      short loc_10042d3e
mov     ecx, [ebp+var_8]
add     [ebp+var_18], 18h
inc     edi
cmp     edi, [ecx+8]
jl      short loc_10042d20
mov     ecx, [ebp+var_8]
cmp     edi, [ecx+8]
jge     loc_10042e7d
mov     edx, [ebx+4]
mov     eax, [ebp+var_1c]
mov     [edx+esi*4], edi
mov     eax, [eax]
test    eax, eax
jz      short loc_10042d85
mov     eax, [eax+14h]
test    eax, eax
jz      short loc_10042d85
mov     ecx, [eax]
call    sub_1000ba20
lea     edi, [eax+1]
push    edi
push    ecx
mov     ecx, [ebp+var_20]
push    ecx
call    memcpy
mov     eax, [ebp+var_20]
add     esp, 0ch
mov     [ebp+var_18], eax
add     eax, edi
mov     [ebp+var_20], eax
jmp     short loc_10042d9d
mov     eax, [ecx+0ch]
lea     edx, [edi+edi*2]
mov     eax, [eax+edx*8+10h]
mov     [ebp+var_18], eax
test    eax, eax
jnz     short loc_10042d9d
mov     [ebp+var_18], offset abinary
mov     ecx, [ebp+var_4]
cmp     byte ptr [ecx+79h], 0
jnz     short loc_10042dbd
mov     edx, [ebp+arg_0]
mov     eax, [ebp+var_18]
push    edx
call    sub_10040bb0
add     esp, 4
test    eax, eax
jz      loc_10042e9c
mov     eax, [ebx+20h]
mov     ecx, [ebp+var_18]
mov     edi, [ebp+var_1c]
mov     [eax+esi*4], ecx
mov     dl, [edi+0ch]
and     dl, byte ptr [ebp+var_30]
mov     eax, [ebx+1ch]
mov     ecx, [ebp+arg_10]
mov     [esi+eax], dl
inc     esi
add     edi, 14h
mov     [ebp+var_1c], edi
cmp     esi, [ecx]
jl      loc_10042d02
mov     edi, [ebp+var_8]
mov     edx, ebx
call    sub_100430f0
mov     edx, [ebp+arg_0]
cmp     edi, [edx+1fch]
jnz     short loc_10042e5f
mov     esi, [edi+10h]
test    esi, esi
jz      short loc_10042e5f
mov     eax, [esi+24h]
cmp     eax, [ebx+24h]
jnz     short loc_10042e58
xor     edi, edi
test    eax, eax
jle     short loc_10042e4f
mov     eax, [esi+4]
sub     eax, [ebx+4]
mov     [ebp+var_30], eax
lea     ebx, [ebx+0]
mov     ecx, [ebx+4]
lea     ecx, [ecx+edi*4]
mov     edx, [eax+ecx]
cmp     edx, [ecx]
jnz     short loc_10042e4f
mov     ecx, [esi+20h]
mov     edx, [ebx+20h]
mov     ecx, [ecx+edi*4]
mov     edx, [edx+edi*4]
cmp     ecx, edx
jz      short loc_10042e49
call    sub_1000bca0
test    eax, eax
jnz     short loc_10042e4f
mov     eax, [ebp+var_30]
inc     edi
cmp     edi, [esi+24h]
jl      short loc_10042e20
cmp     edi, [esi+24h]
jz      loc_10042ee5
mov     esi, [esi+14h]
test    esi, esi
jnz     short loc_10042e03
mov     edx, [ebp+var_4]
cmp     byte ptr [edx+79h], 0
jz      loc_10042f6c
mov     ecx, [ebx]
mov     eax, ecx
test    ecx, ecx
jnz     loc_10042f19
jmp     loc_10042f2d
mov     edx, [ebp+var_24]
mov     eax, [ebp+var_8]
mov     ecx, [eax]
mov     esi, [ebp+arg_0]
push    edx
push    ecx
push    offset atableshasnocol
push    esi
call    sub_1000bb30
add     esp, 10h
mov     byte ptr [esi+11h], 1
test    ebx, ebx
jz      short loc_10042eb6
mov     esi, [ebp+var_4]
mov     eax, [ebx+10h]
mov     ecx, esi
call    sub_10009810
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
mov     ecx, [ebp+arg_10]
mov     esi, [ebp+var_4]
push    ecx
push    esi
call    sub_10037020
mov     edx, [ebp+arg_c]
push    edx
mov     eax, esi
call    sub_10043720
mov     eax, [ebp+src]
add     esp, 0ch
mov     ecx, esi
call    sub_10009810
mov     eax, [ebp+var_2c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     al, [esi+2ch]
mov     cl, [ebx+2ch]
cmp     al, cl
jz      short loc_10042e9c
cmp     al, 63h
jz      short loc_10042f0b
cmp     cl, 63h
jz      short loc_10042f0b
mov     eax, [ebp+arg_0]
push    0
push    offset aconflictingonc
push    eax
call    sub_1000bb30
add     esp, 0ch
cmp     byte ptr [esi+2ch], 63h
jnz     short loc_10042e9c
mov     cl, [ebx+2ch]
mov     [esi+2ch], cl
jmp     short loc_10042e9c
cmp     byte ptr [ecx], 0
jz      short loc_10042f26
mov     edi, edi
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10042f20
sub     eax, ecx
and     eax, 3fffffffh
push    ebx
push    eax
mov     eax, [ebx+18h]
push    ecx
add     eax, 18h
call    sub_1000cfc0
add     esp, 0ch
test    eax, eax
mov     eax, [ebp+var_4]
jz      short loc_10042f4e
mov     byte ptr [eax+32h], 1
jmp     loc_10042e9c
or      dword ptr [eax+18h], 200h
cmp     [ebp+arg_c], 0
jz      loc_10043082
mov     ecx, eax
mov     edx, [ecx+74h]
mov     [ebx+28h], edx
jmp     loc_10043082
mov     eax, [ebp+arg_0]
inc     dword ptr [eax+4ch]
mov     ecx, [eax+4ch]
push    eax
mov     [ebp+var_20], ecx
call    sub_10056c90
mov     esi, eax
add     esp, 4
mov     [ebp+var_30], esi
test    esi, esi
jz      loc_10042e9c
mov     edi, [ebp+var_c]
mov     eax, [ebp+arg_0]
push    1
call    sub_10043d50
mov     edx, [ebp+var_20]
add     esp, 4
push    edx
push    edi
push    68h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
cmp     [ebp+arg_18], 0
jz      short loc_10042fea
cmp     [ebp+arg_14], 0
mov     ecx, offset dword_100796bc
jz      short loc_10042fc5
mov     ecx, offset aunique
mov     eax, [ebp+var_14]
mov     edx, [eax]
mov     esi, [ebp+var_4]
push    edx
mov     edx, [ebp+arg_1c]
mov     edx, [edx]
sub     edx, [eax]
inc     edx
push    edx
push    ecx
push    offset acreatesindexs
push    esi
call    sub_1000ae80
add     esp, 14h
mov     edi, eax
jmp     short loc_10042fef
mov     esi, [ebp+var_4]
xor     edi, edi
cmp     [ebp+var_c], 1
mov     eax, offset asqlitetempmast
jz      short loc_10042fff
mov     eax, offset asqlitemaster
mov     ecx, [ebp+var_20]
mov     edx, [ebp+var_8]
push    edi
push    ecx
mov     ecx, [edx]
mov     edx, [ebx]
push    ecx
mov     ecx, [ebp+var_28]
push    edx
push    eax
mov     eax, [esi+10h]
mov     edx, [ecx+eax]
mov     eax, [ebp+arg_0]
push    edx
push    offset ainsertintoqsva
push    eax
call    sub_1003f410
add     esp, 20h
mov     eax, edi
mov     ecx, esi
call    sub_10009810
cmp     [ebp+arg_c], 0
jz      short loc_10043082
mov     ecx, [ebp+var_20]
mov     esi, [ebp+arg_0]
push    ecx
push    ebx
mov     eax, esi
call    sub_100423f0
mov     edi, [ebp+var_c]
push    edi
call    sub_10040c40
mov     edx, [ebx]
mov     eax, [ebp+var_4]
add     esp, 0ch
push    edx
push    offset anameqandtypein
push    eax
call    sub_1000ae80
mov     esi, [ebp+var_30]
add     esp, 0ch
push    eax
push    edi
call    sub_10025a60
push    0
push    81h
mov     eax, esi
call    sub_10025940
add     esp, 10h
mov     ecx, [ebp+var_4]
cmp     byte ptr [ecx+79h], 0
jnz     short loc_10043095
cmp     [ebp+arg_c], 0
jnz     loc_10042e9c
mov     ecx, [ebp+var_8]
mov     edx, 5
cmp     [ebp+arg_14], edx
jnz     short loc_100430d5
mov     eax, [ecx+10h]
test    eax, eax
jz      short loc_100430d5
cmp     [eax+2ch], dl
jz      short loc_100430d5
cmp     dword ptr [eax+14h], 0
jz      short loc_100430c4
mov     ecx, [eax+14h]
cmp     [ecx+2ch], dl
jz      short loc_100430c4
mov     eax, ecx
cmp     dword ptr [eax+14h], 0
jnz     short loc_100430b4
mov     edx, [eax+14h]
mov     [ebx+14h], edx
mov     [eax+14h], ebx
mov     [ebp+var_2c], ebx
jmp     loc_10042eb6
mov     eax, [ecx+10h]
mov     [ebx+14h], eax
mov     [ecx+10h], ebx
mov     [ebp+var_2c], ebx
jmp     loc_10042eb6
mov     eax, [edx+0ch]
mov     eax, [eax+18h]
push    esi
mov     esi, [edx+8]
mov     [esi], eax
cmp     eax, 0ah
jnb     short loc_10043107
mov     dword ptr [esi], 0ah
mov     eax, 1
mov     ecx, 0ah
cmp     [edx+24h], eax
jl      short loc_10043125
mov     [esi+eax*4], ecx
cmp     ecx, 5
jbe     short loc_1004311f
dec     ecx
inc     eax
cmp     eax, [edx+24h]
jle     short loc_10043116
cmp     byte ptr [edx+2ch], 0
jz      short loc_10043135
mov     ecx, [edx+24h]
mov     dword ptr [esi+ecx*4], 1
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [esi]
cmp     byte ptr [edi+32h], 0
mov     [ebp+var_4], edi
jnz     loc_100432f3
cmp     byte ptr [edi+79h], 0
jnz     short loc_1004317d
lea     eax, [esi+4]
push    eax
push    edi
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      short loc_1004317d
inc     dword ptr [esi+44h]
mov     [esi+0ch], eax
jmp     loc_100432f3
mov     ecx, [ebp+arg_4]
mov     eax, [ecx+4]
mov     ecx, [ecx+8]
push    eax
push    ecx
mov     edx, edi
call    sub_1003f6f0
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     short loc_100431d2
cmp     [ebp+arg_8], eax
jnz     short loc_100431b9
mov     edx, [ebp+arg_4]
push    eax
push    edx
push    offset anosuchindexs
push    esi
call    sub_1000bb30
add     esp, 10h
mov     byte ptr [esi+11h], 1
jmp     loc_100432f3
mov     eax, [ebp+arg_4]
mov     eax, [eax+4]
push    eax
push    esi
call    sub_10043d00
add     esp, 8
mov     byte ptr [esi+11h], 1
jmp     loc_100432f3
cmp     byte ptr [ebx+2dh], 0
jz      short loc_100431ed
push    0
push    offset aindexassociate
push    esi
call    sub_1000bb30
add     esp, 0ch
jmp     loc_100432f3
mov     esi, [ebx+18h]
mov     ecx, edi
call    sub_10053b80
mov     ecx, [ebx+0ch]
mov     edx, [ebp+var_4]
mov     edi, eax
shl     eax, 4
mov     [ebp+var_10], ecx
mov     ecx, [edx+10h]
mov     [ebp+var_14], eax
mov     eax, [eax+ecx]
mov     [ebp+var_8], 0ah
mov     [ebp+var_c], eax
mov     ecx, offset asqlitetempmast
cmp     edi, 1
jz      short loc_10043227
mov     ecx, offset asqlitemaster
mov     esi, [ebp+arg_0]
push    eax
push    0
push    ecx
push    9
mov     eax, esi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_100432f0
mov     eax, 0ch
test    edi, edi
jnz     short loc_1004324e
mov     eax, [ebp+var_8]
mov     edx, [ebp+var_c]
mov     ecx, [ebp+var_10]
push    edx
mov     edx, [ecx]
mov     ecx, [ebx]
push    edx
push    ecx
push    eax
mov     eax, esi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_100432f0
push    esi
call    sub_10056c90
add     esp, 4
mov     [ebp+var_10], eax
test    eax, eax
jz      short loc_100432f0
push    1
mov     eax, esi
call    sub_10043d50
add     esp, 4
mov     eax, offset asqlitetempmast
cmp     edi, 1
jz      short loc_10043299
mov     eax, offset asqlitemaster
mov     edx, [ebx]
push    edx
mov     edx, [ebp+var_14]
push    eax
mov     eax, [ebp+var_4]
mov     ecx, [eax+10h]
mov     eax, [edx+ecx]
push    eax
push    offset adeletefromqswh_1
push    esi
call    sub_1003f410
mov     edx, [ebx]
add     esp, 14h
push    edi
push    esi
mov     ecx, offset aidx
call    sub_100419a0
push    edi
call    sub_10040c40
mov     ecx, [ebx+28h]
add     esp, 0ch
push    edi
push    ecx
call    sub_10041810
mov     edx, [ebx]
mov     eax, [ebp+var_10]
push    0
push    edx
push    0
push    0
push    edi
push    6dh
call    sub_100259f0
add     esp, 20h
mov     edi, [ebp+var_4]
mov     eax, [ebp+arg_4]
push    eax
mov     eax, edi
call    sub_10043720
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, eax
test    edi, edi
jnz     short loc_10043339
mov     esi, [ebp+arg_0]
lea     ecx, [eax+8]
call    sub_10009a40
test    eax, eax
jz      short loc_10043333
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     edi, eax
test    eax, eax
jz      short loc_10043389
mov     esi, [edi+4]
mov     ebx, [edi]
lea     eax, [esi-1]
test    esi, eax
jnz     short loc_1004336f
mov     eax, 1
test    esi, esi
jz      short loc_10043351
lea     eax, [esi+esi]
lea     ecx, ds:0[eax*8]
mov     eax, [ebp+arg_0]
push    ecx
call    sub_10009ac0
add     esp, 4
test    eax, eax
jnz     short loc_1004336d
or      esi, 0ffffffffh
jmp     short loc_1004337b
mov     ebx, eax
xor     eax, eax
mov     [ebx+esi*8], eax
mov     [ebx+esi*8+4], eax
inc     dword ptr [edi+4]
mov     [edi], ebx
test    esi, esi
jns     short loc_10043391
mov     esi, [ebp+arg_0]
call    sub_100433b0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     edx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
push    edx
call    sub_1003fe10
mov     ecx, [edi]
add     esp, 4
mov     [ecx+esi*8], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
test    edi, edi
jz      locret_1004345f
push    ebx
xor     ebx, ebx
cmp     [edi+4], ebx
jle     loc_1004344c
mov     eax, [edi]
mov     eax, [eax+ebx*8]
test    esi, esi
jz      short loc_10043439
cmp     dword ptr [esi+1e8h], 0
jz      short loc_1004340f
test    eax, eax
jz      short loc_100433fb
cmp     eax, [esi+0fch]
jb      short loc_100433fb
cmp     eax, [esi+100h]
jnb     short loc_100433fb
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_10043442
push    eax
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_10043442
test    eax, eax
jz      short loc_10043439
cmp     eax, [esi+0fch]
jb      short loc_10043439
cmp     eax, [esi+100h]
jnb     short loc_10043439
mov     ecx, [esi+0f8h]
mov     [eax], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
jmp     short loc_10043442
push    eax
call    sub_10009770
add     esp, 4
inc     ebx
cmp     ebx, [edi+4]
jl      loc_100433c4
mov     eax, [edi]
mov     ecx, esi
call    sub_10009810
mov     eax, edi
mov     ecx, esi
pop     ebx
jmp     sub_10009810
retn
push    ebp
mov     ebp, esp
push    ecx
test    ecx, ecx
jnz     short loc_1004346f
or      eax, 0ffffffffh
mov     esp, ebp
pop     ebp
retn
mov     edx, [ecx+4]
push    ebx
push    esi
xor     eax, eax
push    edi
mov     [ebp+var_4], edx
test    edx, edx
jle     short loc_100434ce
mov     edi, [ecx]
mov     edx, [edi]
mov     cl, [edx]
mov     esi, [ebp+arg_0]
test    cl, cl
jz      short loc_100434ad
jmp     short loc_10043490
movzx   ebx, byte ptr [esi]
movzx   ecx, cl
mov     cl, ds:byte_10076030[ecx]
cmp     cl, ds:byte_10076030[ebx]
jnz     short loc_100434ad
mov     cl, [edx+1]
inc     edx
inc     esi
test    cl, cl
jnz     short loc_10043490
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [esi]
movzx   ecx, ds:byte_10076030[ecx]
movzx   edx, ds:byte_10076030[edx]
sub     edx, ecx
jz      short loc_100434d1
inc     eax
add     edi, 8
cmp     eax, [ebp+var_4]
jl      short loc_10043480
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, eax
movsx   eax, word ptr [ebx]
movsx   ecx, word ptr [ebx+2]
push    esi
push    edi
mov     edi, [ebp+arg_4]
add     eax, edi
cmp     eax, ecx
jle     short loc_1004355d
mov     edx, eax
shl     edx, 4
sub     edx, eax
lea     eax, ds:4[edx*4]
push    eax
mov     eax, [ebp+arg_0]
call    sub_10009ac0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      loc_100435ec
mov     eax, [ebp+arg_0]
mov     ebx, esi
test    eax, eax
jz      short loc_10043541
cmp     esi, [eax+0fch]
jb      short loc_10043541
cmp     esi, [eax+100h]
jnb     short loc_10043541
movzx   eax, word ptr [eax+0e0h]
jmp     short loc_1004354b
push    esi
call    dword_10080258
add     esp, 4
lea     ecx, [eax-40h]
mov     eax, 88888889h
mul     ecx
shr     edx, 5
inc     edx
mov     [esi+2], dx
movsx   eax, word ptr [ebx]
mov     esi, [ebp+arg_8]
dec     eax
cmp     eax, esi
jl      short loc_100435a3
lea     ecx, [eax+edi]
mov     edx, eax
mov     edi, ecx
shl     edx, 4
shl     edi, 4
sub     edx, eax
sub     edi, ecx
lea     ecx, [ebx+edi*4+4]
sub     eax, esi
lea     edx, [ebx+edx*4+4]
mov     [ebp+var_4], ecx
inc     eax
mov     edi, [ebp+var_4]
sub     [ebp+var_4], 3ch
mov     esi, edx
mov     ecx, 0fh
sub     edx, 3ch
dec     eax
rep movsd
jnz     short loc_10043587
mov     edi, [ebp+arg_4]
mov     esi, [ebp+arg_8]
add     [ebx], di
mov     ecx, edi
shl     ecx, 4
sub     ecx, edi
mov     edx, esi
shl     edx, 4
add     ecx, ecx
sub     edx, esi
lea     eax, [ebx+edx*4]
add     ecx, ecx
push    ecx
mov     [ebp+arg_4], eax
add     eax, 4
push    0
push    eax
call    memset
lea     eax, [edi+esi]
add     esp, 0ch
cmp     esi, eax
jge     short loc_100435ec
mov     ecx, [ebp+arg_4]
add     ecx, 24h
sub     eax, esi
lea     esp, [esp+0]
mov     dword ptr [ecx], 0ffffffffh
add     ecx, 3ch
dec     eax
jnz     short loc_100435e0
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     ebx, ecx
mov     esi, edx
test    eax, eax
jnz     short loc_1004363b
lea     ecx, [eax+40h]
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1004362c
push    40h
push    0
push    edi
call    memset
add     esp, 0ch
mov     eax, edi
test    edi, edi
jz      short loc_1004365d
mov     ecx, 1
mov     [edi+2], cx
movsx   edx, word ptr [eax]
push    edx
push    1
push    esi
call    sub_100434e0
add     esp, 0ch
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      short loc_10043666
push    edi
mov     eax, esi
call    sub_10043720
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movsx   eax, word ptr [edi]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
lea     edx, [edi+ecx*4-38h]
mov     [ebp+var_4], edx
test    ebx, ebx
jz      short loc_1004368c
cmp     dword ptr [ebx], 0
jnz     short loc_10043684
xor     ebx, ebx
jmp     short loc_1004368c
mov     eax, ebx
mov     ebx, [ebp+arg_0]
mov     [ebp+arg_0], eax
mov     eax, [ebp+arg_0]
push    esi
call    sub_1003fe10
mov     ecx, [ebp+var_4]
add     esp, 4
mov     [ecx+4], eax
push    esi
mov     eax, ebx
call    sub_1003fe10
mov     edx, [ebp+var_4]
add     esp, 4
mov     [edx], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jz      short loc_10043713
push    ebx
xor     eax, eax
xor     ebx, ebx
cmp     ax, [ecx]
jge     short loc_10043712
push    esi
push    edi
mov     edi, [ebp+arg_0]
lea     esi, [ecx+14h]
lea     esp, [esp+0]
cmp     dword ptr [esi+10h], 0
jge     short loc_10043710
mov     edx, [edi+48h]
mov     [esi+10h], edx
inc     dword ptr [edi+48h]
mov     eax, [esi]
test    eax, eax
jz      short loc_10043705
mov     eax, [eax+24h]
push    eax
push    edi
call    sub_100436c0
mov     ecx, [ebp+arg_4]
add     esp, 8
movsx   edx, word ptr [ecx]
inc     ebx
add     esi, 3ch
cmp     ebx, edx
jl      short loc_100436e0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, eax
mov     eax, [ebp+arg_0]
test    eax, eax
jz      loc_100437c7
xor     ecx, ecx
push    ebx
lea     ebx, [eax+4]
mov     [ebp+var_4], 0
cmp     cx, [eax]
jge     short loc_100437bf
push    edi
mov     eax, [ebx]
mov     ecx, esi
call    sub_10009810
mov     eax, [ebx+4]
mov     ecx, esi
call    sub_10009810
mov     eax, [ebx+8]
mov     ecx, esi
call    sub_10009810
mov     eax, [ebx+34h]
mov     ecx, esi
call    sub_10009810
mov     edx, [ebx+0ch]
push    edx
push    esi
call    sub_1003fba0
mov     edi, [ebx+10h]
add     esp, 8
test    edi, edi
jz      short loc_10043793
push    edi
push    esi
call    sub_10054390
add     esp, 8
mov     eax, edi
mov     ecx, esi
call    sub_10009810
mov     eax, [ebx+24h]
push    eax
push    esi
call    sub_10036430
mov     edi, [ebx+28h]
add     esp, 8
call    sub_100433b0
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+var_4]
movsx   edx, word ptr [ecx]
inc     eax
add     ebx, 3ch
mov     [ebp+var_4], eax
cmp     eax, edx
jl      short loc_10043745
mov     eax, ecx
pop     edi
mov     ecx, esi
call    sub_10009810
pop     ebx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ecx]
push    esi
push    edi
test    eax, eax
jnz     short loc_1004383b
cmp     [ebp+arg_10], eax
jnz     short loc_10043834
cmp     [ebp+arg_14], eax
jz      short loc_1004383b
mov     eax, offset ausing
push    eax
push    offset aajoinclauseisr
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     eax, [ebp+arg_10]
push    eax
push    ebx
call    sub_10036430
mov     edi, [ebp+arg_14]
add     esp, 8
mov     esi, ebx
call    sub_100433b0
mov     esi, [ebp+arg_c]
test    esi, esi
jz      short loc_1004382c
push    esi
push    ebx
call    sub_10054390
add     esp, 8
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, offset aon
jmp     short loc_100437ec
mov     ecx, [ebp+arg_0]
push    ecx
mov     ecx, [ebp+arg_4]
mov     edx, ebx
call    sub_10043600
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_100437fb
movzx   eax, word ptr [esi]
test    ax, ax
jz      short loc_100437fb
cwde
mov     edx, eax
shl     edx, 4
sub     edx, eax
mov     eax, [ebp+arg_8]
cmp     dword ptr [eax+4], 0
lea     edi, [esi+edx*4-38h]
jz      short loc_1004387b
push    ebx
call    sub_1003fe10
add     esp, 4
mov     [edi+8], eax
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+arg_14]
mov     [edi+10h], eax
mov     [edi+24h], ecx
mov     [edi+28h], edx
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
test    edx, edx
jz      short loc_100438e5
movzx   ecx, word ptr [edx]
test    cx, cx
jle     short loc_100438e5
movsx   ecx, cx
push    esi
mov     esi, ecx
shl     esi, 4
sub     esi, ecx
mov     ecx, 1
lea     esi, [edx+esi*4-38h]
cmp     [eax+4], ecx
jnz     short loc_100438d3
cmp     dword ptr [eax], 0
jnz     short loc_100438d3
mov     [esi+1dh], cl
pop     esi
pop     ebp
retn
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
push    edx
call    sub_1003fe10
add     esp, 4
mov     [esi+34h], eax
pop     esi
pop     ebp
retn
test    esi, esi
jz      short locret_10043918
movsx   eax, word ptr [esi]
dec     eax
test    eax, eax
jle     short loc_10043914
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
lea     ecx, [esi+ecx*4+20h]
mov     dl, [ecx-3ch]
mov     [ecx], dl
dec     eax
sub     ecx, 3ch
test    eax, eax
jg      short loc_10043907
mov     byte ptr [esi+20h], 0
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
xor     esi, esi
push    esi
push    esi
mov     edi, eax
mov     ebx, [edi]
push    offset abegin
push    16h
mov     [ebp+var_8], ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_10043a15
push    edi
call    sub_10056c90
mov     edi, eax
add     esp, 4
cmp     edi, esi
jz      loc_10043a15
cmp     [ebp+arg_0], 7
jz      short loc_100439e3
cmp     [ebx+14h], esi
jle     short loc_100439e3
mov     [ebp+var_4], esi
lea     esp, [esp+0]
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_10043981
call    sub_10025810
test    eax, eax
jnz     short loc_100439ae
inc     dword ptr [edi+1ch]
mov     ecx, [edi+4]
xor     edx, edx
cmp     [ebp+arg_0], 9
lea     eax, [ebx+ebx*4]
setz    dl
lea     eax, [ecx+eax*4]
mov     byte ptr [eax+3], 0
mov     [eax+4], esi
mov     word ptr [eax], 23h
inc     edx
xor     ecx, ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     eax, 1
mov     ecx, esi
shl     eax, cl
or      [edi+6ch], eax
cmp     esi, 1
jz      short loc_100439d4
mov     ecx, [edi]
mov     edx, [ecx+10h]
mov     ecx, [ebp+var_4]
mov     edx, [edx+ecx+4]
cmp     byte ptr [edx+9], 0
jz      short loc_100439d4
or      [edi+70h], eax
mov     eax, [ebp+var_8]
add     [ebp+var_4], 10h
inc     esi
cmp     esi, [eax+14h]
jl      short loc_10043970
xor     esi, esi
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_100439f4
call    sub_10025810
test    eax, eax
jnz     short loc_10043a15
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     byte ptr [eax+3], 0
mov     [eax+4], esi
mov     [eax+8], esi
mov     [eax+0ch], esi
mov     [eax+10h], esi
mov     word ptr [eax], 22h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebx
push    ebx
push    offset acommit_0
push    16h
mov     esi, eax
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     short loc_10043a81
push    esi
call    sub_10056c90
mov     edi, eax
add     esp, 4
cmp     edi, ebx
jz      short loc_10043a81
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10043a5c
call    sub_10025810
test    eax, eax
jnz     short loc_10043a81
mov     edx, [edi+4]
mov     ecx, 1
add     [edi+1ch], ecx
lea     eax, [esi+esi*4]
lea     eax, [edx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 22h
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebx
push    ebx
push    offset arollback_0
push    16h
mov     esi, eax
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     short loc_10043af1
push    esi
call    sub_10056c90
mov     edi, eax
add     esp, 4
cmp     edi, ebx
jz      short loc_10043af1
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10043acc
call    sub_10025810
test    eax, eax
jnz     short loc_10043af1
mov     edx, [edi+4]
mov     ecx, 1
add     [edi+1ch], ecx
lea     eax, [esi+esi*4]
lea     eax, [edx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 22h
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ecx]
push    edi
test    eax, eax
jz      loc_10043b9d
mov     ebx, [eax]
mov     edi, [eax+4]
test    ebx, ebx
jnz     short loc_10043b21
xor     esi, esi
jmp     short loc_10043b3e
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10043b3e
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     edi, esi
call    sub_1000bbf0
test    esi, esi
jz      short loc_10043b9d
mov     edi, [ebp+arg_0]
push    edi
call    sub_10056c90
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10043b94
mov     edx, [ebp+arg_4]
mov     eax, ds:off_100768c4[edx*4]
push    0
push    esi
push    eax
push    20h
mov     eax, edi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     short loc_10043b94
mov     ecx, [ebp+arg_4]
push    0ffffffffh
push    esi
push    eax
push    eax
push    ecx
push    21h
mov     eax, ebx
call    sub_100259f0
add     esp, 18h
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     ecx, [edi]
mov     eax, esi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
mov     esi, [ebx]
mov     eax, [esi+10h]
cmp     dword ptr [eax+14h], 0
push    edi
jnz     short loc_10043c33
cmp     byte ptr [ebx+1d4h], 0
jnz     short loc_10043c33
mov     ecx, [esi]
push    21eh
push    0
push    0
push    ecx
lea     ecx, [ebp+var_4]
mov     edx, esi
call    sub_1001adc0
mov     edi, eax
add     esp, 10h
test    edi, edi
jz      short loc_10043c07
push    offset aunabletoopenat
push    ebx
call    sub_1000bb30
add     esp, 8
mov     [ebx+0ch], edi
mov     eax, 1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
mov     edx, [esi+10h]
push    0
push    0ffffffffh
mov     [edx+14h], eax
push    eax
mov     eax, [esi+38h]
call    sub_1001b6c0
add     esp, 0ch
cmp     eax, 7
jnz     short loc_10043c33
mov     eax, 1
mov     [esi+32h], al
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
pop     edi
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+1b0h]
push    edi
test    eax, eax
jz      short loc_10043c54
mov     esi, eax
cmp     dword ptr [esi+15ch], 0
jnz     short loc_10043cb2
push    esi
call    sub_10056c90
mov     edi, eax
add     esp, 4
test    edi, edi
jz      loc_10043cf6
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_10043c88
call    sub_10025810
test    eax, eax
jz      short loc_10043c88
mov     ebx, 1
jmp     short loc_10043cab
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
inc     ebx
mov     [esi+15ch], ebx
mov     edx, [ebp+arg_0]
test    edx, edx
js      short loc_10043cf6
mov     ecx, edx
mov     eax, 1
shl     eax, cl
mov     ecx, [esi+158h]
test    eax, ecx
jnz     short loc_10043cf6
or      ecx, eax
mov     eax, [esi]
mov     [esi+158h], ecx
mov     eax, [eax+10h]
mov     ecx, edx
add     ecx, ecx
mov     ecx, [eax+ecx*8+0ch]
mov     eax, [ecx]
mov     [esi+edx*4+160h], eax
cmp     edx, 1
jnz     short loc_10043cf6
mov     ebx, esi
call    sub_10043bb0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [eax]
push    edi
xor     edi, edi
cmp     [esi+14h], edi
jle     short loc_10043d47
xor     ebx, ebx
mov     eax, [esi+10h]
cmp     dword ptr [eax+ebx+4], 0
jz      short loc_10043d3e
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jz      short loc_10043d32
mov     edx, [eax+ebx]
call    sub_1000bca0
test    eax, eax
jnz     short loc_10043d3e
mov     eax, [ebp+arg_0]
push    edi
call    sub_10043c40
add     esp, 4
inc     edi
add     ebx, 10h
cmp     edi, [esi+14h]
jl      short loc_10043d15
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [eax+1b0h]
test    esi, esi
jnz     short loc_10043d60
mov     esi, eax
push    edi
call    sub_10043c40
mov     ecx, edi
mov     eax, 1
shl     eax, cl
mov     cl, [ebp+arg_0]
add     esp, 4
or      [esi+154h], eax
or      [esi+17h], cl
pop     esi
pop     ebp
retn
mov     eax, [ecx+1b0h]
test    eax, eax
jz      short loc_10043d9f
mov     byte ptr [eax+18h], 1
retn
mov     byte ptr [ecx+18h], 1
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, eax
push    edi
push    esi
call    sub_10056c90
add     esp, 4
xor     ebx, ebx
cmp     [ebp+arg_0], 2
mov     edi, eax
jnz     short loc_10043ddb
mov     eax, [esi+1b0h]
cmp     eax, ebx
jz      short loc_10043dd7
mov     esi, eax
mov     byte ptr [esi+18h], 1
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10043df3
call    sub_10025810
test    eax, eax
jz      short loc_10043df3
mov     eax, 1
jmp     short loc_10043e1c
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+arg_0]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     dword ptr [eax+4], 13h
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 6
mov     eax, esi
mov     ecx, [ebp+src]
push    ecx
mov     ecx, [ebp+arg_8]
push    edi
call    sub_10025f90
add     esp, 8
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [eax+24h]
push    ebx
push    esi
push    edi
xor     edi, edi
mov     [ebp+var_4], ecx
test    ecx, ecx
jle     short loc_10043e9f
mov     esi, [eax+20h]
mov     ecx, [esi]
mov     al, [ecx]
mov     edx, [ebp+arg_0]
test    al, al
jz      short loc_10043e7e
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_10043e7e
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10043e61
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[ecx]
movzx   ecx, byte ptr [edx]
movzx   edx, ds:byte_10076030[ecx]
sub     eax, edx
jz      short loc_10043ea8
inc     edi
add     esi, 4
cmp     edi, [ebp+var_4]
jl      short loc_10043e56
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [eax+10h]
push    edi
mov     [ebp+var_4], esi
test    esi, esi
jz      loc_10043f73
jmp     short loc_10043ee3
jmp     short loc_10043ee0
mov     esi, [ebp+var_4]
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_10043ef9
push    eax
mov     eax, esi
call    sub_10043e40
add     esp, 4
test    eax, eax
jz      short loc_10043f65
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+44h]
mov     eax, [ebx]
mov     esi, 0fff0bdc0h
test    edx, edx
jz      short loc_10043f2c
mov     ecx, [eax+14h]
xor     esi, esi
test    ecx, ecx
jle     short loc_10043f2c
mov     eax, [eax+10h]
add     eax, 0ch
lea     esp, [esp+0]
cmp     [eax], edx
jz      short loc_10043f2c
inc     esi
add     eax, 10h
cmp     esi, ecx
jl      short loc_10043f20
mov     edi, [ebx+1b0h]
test    edi, edi
jnz     short loc_10043f38
mov     edi, ebx
push    esi
mov     eax, ebx
call    sub_10043c40
mov     eax, [ebp+var_4]
mov     ecx, esi
add     esp, 4
mov     edx, 1
shl     edx, cl
push    0ffffffffh
push    eax
mov     eax, ebx
or      [edi+154h], edx
call    sub_100423f0
mov     esi, [ebp+var_4]
add     esp, 8
mov     esi, [esi+14h]
mov     [ebp+var_4], esi
test    esi, esi
jnz     loc_10043ee0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     ecx, [ebx]
cmp     dword ptr [ecx+14h], 0
mov     eax, [ecx+10h]
push    esi
push    edi
mov     [ebp+var_18], ecx
mov     [ebp+var_c], 0
jle     loc_10044098
add     eax, 0ch
mov     [ebp+var_10], eax
mov     eax, [eax]
mov     eax, [eax+10h]
mov     [ebp+var_8], eax
test    eax, eax
jz      loc_1004407f
jmp     short loc_10043fc3
mov     eax, [ebp+var_8]
mov     edi, [eax+8]
mov     esi, [edi+10h]
mov     [ebp+var_14], edi
mov     [ebp+var_4], esi
test    esi, esi
jz      loc_1004406f
jmp     short loc_10043fe3
mov     esi, [ebp+var_4]
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_10043ff9
push    eax
mov     eax, esi
call    sub_10043e40
add     esp, 4
test    eax, eax
jz      short loc_1004405e
mov     edx, [edi+44h]
mov     eax, [ebx]
mov     esi, 0fff0bdc0h
test    edx, edx
jz      short loc_10044022
mov     ecx, [eax+14h]
xor     esi, esi
test    ecx, ecx
jle     short loc_10044022
mov     eax, [eax+10h]
add     eax, 0ch
cmp     [eax], edx
jz      short loc_10044022
inc     esi
add     eax, 10h
cmp     esi, ecx
jl      short loc_10044016
mov     edi, [ebx+1b0h]
test    edi, edi
jnz     short loc_1004402e
mov     edi, ebx
push    esi
mov     eax, ebx
call    sub_10043c40
mov     eax, [ebp+var_4]
mov     ecx, esi
add     esp, 4
mov     edx, 1
shl     edx, cl
push    0ffffffffh
push    eax
mov     eax, ebx
or      [edi+154h], edx
call    sub_100423f0
mov     edi, [ebp+var_14]
mov     esi, [ebp+var_4]
add     esp, 8
mov     esi, [esi+14h]
mov     [ebp+var_4], esi
test    esi, esi
jnz     loc_10043fe0
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_10043fc0
mov     ecx, [ebp+var_18]
mov     edx, [ebp+var_c]
mov     eax, [ebp+var_10]
inc     edx
add     eax, 10h
mov     [ebp+var_c], edx
mov     [ebp+var_10], eax
cmp     edx, [ecx+14h]
jl      loc_10043fa7
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, [edi]
cmp     byte ptr [ebx+79h], 0
mov     [ebp+var_8], ebx
jnz     short loc_100440d5
lea     eax, [edi+4]
push    eax
push    ebx
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      short loc_100440d5
mov     [edi+0ch], eax
inc     dword ptr [edi+44h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+arg_4]
test    esi, esi
jnz     short loc_100440ee
push    esi
mov     ebx, edi
call    sub_10043f80
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_100440fe
cmp     dword ptr [eax], 0
jnz     loc_10044186
mov     ecx, [edi]
push    ecx
mov     eax, esi
call    sub_1003fe10
mov     edi, eax
add     esp, 4
test    edi, edi
jz      loc_1004423c
cmp     byte ptr [edi], 0
mov     edx, [ebx+10h]
mov     eax, [edx+0ch]
mov     cl, [eax+4dh]
mov     [ebp+var_4], cl
mov     eax, edi
jz      short loc_1004412e
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10044128
sub     eax, edi
and     eax, 3fffffffh
lea     edx, [ebx+194h]
push    edi
push    edx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
test    eax, eax
jz      short loc_10044177
movzx   ecx, [ebp+var_4]
lea     ecx, [ecx+ecx*4]
lea     eax, [eax+ecx*4-14h]
test    eax, eax
jz      short loc_10044177
mov     ebx, [ebp+arg_0]
push    edi
call    sub_10043f80
mov     ecx, [ebp+var_8]
add     esp, 4
mov     eax, edi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
mov     ecx, ebx
call    sub_10009810
mov     esi, [ebp+arg_4]
mov     eax, [ebp+arg_8]
mov     edi, [ebp+arg_0]
lea     edx, [ebp+var_c]
call    sub_10040020
mov     esi, eax
mov     [ebp+var_10], esi
test    esi, esi
js      loc_1004423c
mov     eax, [ebp+var_c]
push    ebx
call    sub_1003fe10
mov     edi, eax
add     esp, 4
test    edi, edi
jz      loc_1004423c
mov     edx, [ebx+10h]
add     esi, esi
mov     esi, [edx+esi*8]
push    esi
push    edi
push    ebx
call    sub_1003f510
add     esp, 0ch
test    eax, eax
jz      short loc_100441ea
mov     ebx, [ebp+arg_0]
push    0
push    eax
call    sub_10043ec0
mov     ecx, [ebp+var_8]
add     esp, 8
mov     eax, edi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
push    edi
mov     edx, ebx
call    sub_1003f6f0
mov     esi, eax
add     esp, 8
mov     eax, edi
mov     ecx, ebx
call    sub_10009810
test    esi, esi
jz      short loc_1004422b
mov     ebx, [ebp+arg_0]
mov     edi, [ebp+var_10]
push    0
mov     eax, ebx
call    sub_10043d50
add     esp, 4
push    0ffffffffh
push    esi
mov     eax, ebx
call    sub_100423f0
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
push    offset aunabletoidenti
push    eax
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    ebx
mov     ebx, [eax+24h]
push    esi
mov     esi, [ecx]
push    edi
lea     edi, [ebx+ebx*4+0ch]
mov     ecx, edi
mov     [ebp+var_4], esi
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_100442d1
push    edi
push    0
push    esi
call    memset
add     esp, 0ch
test    esi, esi
jz      short loc_100442d1
mov     edx, [ebp+arg_0]
mov     eax, [edx]
lea     ecx, [esi+ebx*4+0ch]
xor     edi, edi
mov     [esi], eax
mov     [esi+8], ecx
test    ebx, ebx
jle     short loc_100442cd
lea     ebx, [ebx+0]
mov     edx, [ebp+arg_4]
mov     eax, [edx+20h]
mov     ecx, [ebp+arg_0]
mov     eax, [eax+edi*4]
push    ecx
call    sub_10040bb0
mov     edx, [ebp+arg_4]
mov     [esi+edi*4+0ch], eax
mov     eax, [edx+1ch]
mov     dl, [edi+eax]
mov     ecx, [esi+8]
mov     [edi+ecx], dl
inc     edi
add     esp, 4
cmp     edi, ebx
jl      short loc_100442a0
mov     [esi+6], bx
mov     eax, [ebp+arg_0]
cmp     dword ptr [eax+44h], 0
mov     eax, esi
jz      short loc_100442e6
mov     ecx, [ebp+var_4]
call    sub_10009810
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, ecx
cmp     dword ptr [esi+0c0h], 0
push    edi
mov     ebx, eax
jz      short loc_10044364
test    ebx, ebx
jz      loc_10044463
cmp     byte ptr [ebx], 0
jz      short loc_10044319
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10044313
sub     eax, ebx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [ebp+size], ecx
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      loc_10044463
mov     eax, [ebp+size]
push    eax
push    ebx
push    edi
call    memcpy
mov     ecx, [ebp+arg_0]
mov     edx, [esi+0c8h]
mov     eax, [esi+0c0h]
add     esp, 0ch
push    edi
push    ecx
push    esi
push    edx
call    eax
add     esp, 10h
mov     eax, edi
mov     ecx, esi
call    sub_10009810
cmp     dword ptr [esi+0c4h], 0
jz      loc_10044463
mov     ecx, 28h
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      loc_10044423
xor     eax, eax
mov     [edi+4], eax
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     [edi+10h], eax
mov     [edi+14h], eax
mov     [edi+18h], eax
mov     [edi+1ch], eax
mov     [edi+20h], eax
mov     [edi+24h], eax
mov     ecx, 1
mov     al, 5
mov     [edi+1ch], cx
mov     [edi+1eh], al
mov     [edi], esi
test    ebx, ebx
jnz     short loc_100443c1
mov     edx, ecx
mov     [edi+1ch], dx
mov     [edi+1eh], al
jmp     short loc_10044423
mov     ecx, [esi+48h]
xor     eax, eax
mov     [ebp+size], eax
test    ecx, ecx
js      short loc_100443de
lea     ecx, [ecx+0]
cmp     byte ptr [eax+ebx], 0
jz      short loc_100443db
inc     eax
cmp     eax, ecx
jle     short loc_100443d0
mov     [ebp+size], eax
xor     eax, eax
mov     [ebp+var_8], 202h
push    edi
cmp     eax, offset sub_10009760
jnz     short loc_100443fc
call    sub_100247d0
mov     eax, [ebp+var_8]
mov     [edi+24h], ebx
jmp     short loc_10044406
call    sub_100247d0
mov     eax, 0a02h
mov     ecx, [ebp+size]
mov     dword ptr [edi+20h], 0
mov     [edi+4], ebx
add     esp, 4
mov     [edi+18h], ecx
mov     [edi+1ch], ax
mov     word ptr [edi+1eh], 103h
mov     bl, 2
call    sub_100253e0
test    eax, eax
jz      short loc_1004444d
mov     edx, [esi+10h]
push    eax
mov     eax, [edx+0ch]
movzx   ecx, byte ptr [eax+4dh]
mov     edx, [esi+0c8h]
mov     eax, [esi+0c4h]
push    ecx
push    esi
push    edx
call    eax
add     esp, 10h
test    edi, edi
jz      short loc_10044463
push    edi
call    sub_100247d0
mov     ecx, [edi]
add     esp, 4
mov     eax, edi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [edx]
xor     ebx, ebx
mov     edi, edi
test    edi, edi
jz      short loc_100444b7
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_10044496
jmp     short loc_10044490
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10044490
mov     ecx, [ebp+arg_0]
sub     eax, edi
and     eax, 3fffffffh
add     ecx, 194h
push    edi
push    ecx
mov     esi, eax
call    sub_1000cf50
mov     edx, [ebp+arg_4]
add     esp, 8
jmp     short loc_100444bd
mov     eax, [ebp+arg_0]
mov     eax, [eax+8]
test    eax, eax
jz      short loc_100444cf
movzx   ecx, ds:byte_100768d4[ebx]
lea     ecx, [ecx+ecx*4]
lea     eax, [eax+ecx*4-14h]
cmp     dword ptr [eax+0ch], 0
jnz     short loc_100444e6
inc     ebx
cmp     ebx, 3
jl      short loc_10044480
mov     eax, 1
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     ecx, [eax]
mov     [edx], ecx
mov     ecx, [eax+4]
mov     [edx+4], ecx
mov     ecx, [eax+8]
mov     [edx+8], ecx
mov     ecx, [eax+0ch]
pop     edi
pop     esi
mov     [edx+0ch], ecx
mov     dword ptr [edx+10h], 0
xor     eax, eax
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, eax
mov     bl, cl
test    esi, esi
jnz     short loc_1004456e
test    edi, edi
jz      short loc_10044554
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_10044536
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10044530
mov     ecx, [ebp+arg_0]
sub     eax, edi
and     eax, 3fffffffh
add     ecx, 194h
push    edi
push    ecx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
jmp     short loc_1004455a
mov     edx, [ebp+arg_0]
mov     eax, [edx+8]
test    eax, eax
jz      short loc_10044568
movzx   ecx, bl
lea     ecx, [ecx+ecx*4]
lea     eax, [eax+ecx*4-14h]
mov     esi, eax
test    eax, eax
jz      short loc_10044574
cmp     dword ptr [esi+0ch], 0
jnz     short loc_100445c3
mov     esi, [ebp+arg_0]
movzx   ebx, bl
push    ebx
mov     eax, edi
mov     ecx, esi
call    sub_100442f0
add     esp, 4
test    edi, edi
jz      short loc_100445b3
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_10044598
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10044592
sub     eax, edi
add     esi, 194h
and     eax, 3fffffffh
push    edi
push    esi
mov     esi, eax
call    sub_1000cf50
add     esp, 8
jmp     short loc_100445b6
mov     eax, [esi+8]
test    eax, eax
jz      short loc_100445c1
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4-14h]
mov     esi, eax
test    esi, esi
jz      short loc_100445e5
cmp     dword ptr [esi+0ch], 0
jnz     short loc_100445e5
mov     eax, [ebp+arg_0]
push    esi
push    eax
call    sub_10044470
add     esp, 8
test    eax, eax
jz      short loc_100445e5
xor     eax, eax
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, esi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, ebx
test    ebx, ebx
jz      short loc_1004460e
cmp     byte ptr [ebx], 0
jz      short loc_10044606
inc     edi
cmp     byte ptr [edi], 0
jnz     short loc_10044600
sub     edi, ebx
and     edi, 3fffffffh
mov     eax, [ebp+arg_0]
add     eax, 194h
push    ebx
push    eax
mov     esi, edi
call    sub_1000cf50
add     esp, 8
test    eax, eax
jnz     short loc_100446a4
cmp     [ebp+arg_4], eax
jz      short loc_100446a4
mov     esi, [ebp+arg_0]
lea     ecx, [edi+3dh]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_100446a2
lea     eax, [edi+3dh]
push    eax
push    0
push    esi
call    memset
add     esp, 0ch
test    esi, esi
jz      short loc_100446a2
lea     eax, [esi+3ch]
push    edi
push    ebx
push    eax
mov     [esi], eax
mov     byte ptr [esi+4], 1
mov     [esi+14h], eax
mov     byte ptr [esi+18h], 2
mov     [esi+28h], eax
mov     byte ptr [esi+2ch], 3
call    memcpy
mov     eax, [esi]
add     esp, 0ch
mov     byte ptr [edi+eax], 0
mov     ecx, [esi]
mov     eax, [ebp+arg_0]
push    esi
push    edi
push    ecx
add     eax, 194h
call    sub_1000cfc0
add     esp, 0ch
test    eax, eax
jz      short loc_100446a2
mov     ecx, [ebp+arg_0]
mov     byte ptr [ecx+32h], 1
call    sub_10009810
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn
mov     eax, esi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [edx+eax*4]
mov     ecx, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_10044733
mov     edi, [eax+18h]
mov     esi, [ebp+arg_0]
mov     edx, edi
test    ecx, ecx
jle     short loc_100446f3
mov     bl, [edx]
dec     ecx
test    bl, bl
jz      short loc_100446f4
movzx   eax, byte ptr [esi]
movzx   ebx, bl
mov     bl, ds:byte_10076030[ebx]
cmp     bl, ds:byte_10076030[eax]
jnz     short loc_100446f4
inc     edx
inc     esi
test    ecx, ecx
jg      short loc_100446d2
dec     ecx
test    ecx, ecx
js      short loc_10044710
movzx   ecx, byte ptr [esi]
movzx   eax, ds:byte_10076030[ecx]
movzx   ecx, byte ptr [edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jnz     short loc_10044723
mov     ecx, [ebp+arg_4]
cmp     byte ptr [edi+ecx], 0
jnz     short loc_10044726
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_100446c6
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebx+18h]
push    esi
push    edi
mov     eax, ecx
test    ecx, ecx
jnz     short loc_10044752
xor     edi, edi
jmp     short loc_10044766
cmp     byte ptr [ecx], 0
jz      short loc_1004475d
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10044757
sub     eax, ecx
and     eax, 3fffffffh
mov     edi, eax
movzx   eax, byte ptr [ecx]
movzx   eax, ds:byte_10076030[eax]
add     eax, edi
cdq
mov     esi, 17h
idiv    esi
push    edi
mov     edi, [ebp+arg_0]
push    ecx
mov     esi, edx
mov     eax, esi
mov     edx, edi
call    sub_100446b0
add     esp, 8
test    eax, eax
jz      short loc_1004479e
mov     ecx, [eax+8]
pop     edi
mov     [ebx+8], ecx
mov     [eax+8], ebx
pop     esi
pop     ebp
retn
mov     dword ptr [ebx+8], 0
mov     edx, [edi+esi*4]
mov     [ebx+1ch], edx
mov     [edi+esi*4], ebx
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     ecx, [ebp+src]
movzx   eax, byte ptr [ecx]
movzx   eax, ds:byte_10076030[eax]
add     eax, edi
push    ebx
cdq
mov     ebx, 17h
idiv    ebx
push    esi
xor     esi, esi
push    edi
push    ecx
mov     [ebp+var_8], esi
mov     [ebp+var_4], esi
mov     ebx, edx
mov     edx, [ebp+arg_0]
add     edx, 138h
mov     eax, ebx
mov     [ebp+var_c], edx
call    sub_100446b0
add     esp, 8
cmp     eax, esi
jz      short loc_10044875
mov     esi, [ebp+arg_8]
cmp     esi, 0fffffffeh
jnz     short loc_10044824
cmp     dword ptr [eax+0ch], 0
jnz     short loc_1004481d
cmp     dword ptr [eax+10h], 0
jnz     short loc_1004481d
xor     ecx, ecx
jmp     short loc_10044861
mov     ecx, 6
jmp     short loc_10044861
movzx   edx, word ptr [eax]
movsx   ecx, dx
cmp     ecx, esi
jz      short loc_10044837
test    dx, dx
js      short loc_10044837
xor     ecx, ecx
jmp     short loc_10044861
mov     dl, [eax+2]
sub     ecx, esi
neg     ecx
sbb     ecx, ecx
and     ecx, 0fffffffdh
add     ecx, 4
mov     esi, ecx
mov     cl, [ebp+arg_c]
cmp     cl, dl
jnz     short loc_10044854
add     esi, 2
jmp     short loc_1004485c
and     dl, cl
test    dl, 2
jz      short loc_1004485c
inc     esi
mov     ecx, esi
mov     esi, [ebp+arg_8]
cmp     ecx, [ebp+var_4]
jle     short loc_1004486c
mov     [ebp+var_8], eax
mov     [ebp+var_4], ecx
mov     eax, [eax+8]
test    eax, eax
jnz     short loc_10044805
jmp     short loc_10044878
mov     esi, [ebp+arg_8]
cmp     [ebp+arg_10], 0
jnz     loc_1004492d
cmp     [ebp+var_8], 0
jz      short loc_10044898
mov     ecx, [ebp+arg_0]
test    dword ptr [ecx+18h], 10000000h
jz      loc_1004498f
mov     edx, [ebp+src]
push    edi
push    edx
mov     eax, ebx
mov     edx, offset dword_100814b8
mov     [ebp+var_4], 0
call    sub_100446b0
add     esp, 8
test    eax, eax
jz      loc_1004498f
jmp     short loc_100448c0
cmp     esi, 0fffffffeh
jnz     short loc_100448dc
cmp     dword ptr [eax+0ch], 0
jnz     short loc_100448d5
cmp     dword ptr [eax+10h], 0
jnz     short loc_100448d5
xor     ecx, ecx
jmp     short loc_10044919
mov     ecx, 6
jmp     short loc_10044919
movzx   edx, word ptr [eax]
movsx   ecx, dx
cmp     ecx, esi
jz      short loc_100448ef
test    dx, dx
js      short loc_100448ef
xor     ecx, ecx
jmp     short loc_10044919
mov     dl, [eax+2]
sub     ecx, esi
neg     ecx
sbb     ecx, ecx
and     ecx, 0fffffffdh
add     ecx, 4
mov     esi, ecx
mov     cl, [ebp+arg_c]
cmp     cl, dl
jnz     short loc_1004490c
add     esi, 2
jmp     short loc_10044914
and     dl, cl
test    dl, 2
jz      short loc_10044914
inc     esi
mov     ecx, esi
mov     esi, [ebp+arg_8]
cmp     ecx, [ebp+var_4]
jle     short loc_10044924
mov     [ebp+var_8], eax
mov     [ebp+var_4], ecx
mov     eax, [eax+8]
test    eax, eax
jnz     short loc_100448c0
jmp     short loc_1004498f
cmp     [ebp+var_4], 6
jge     short loc_1004498f
mov     esi, [ebp+arg_0]
lea     ebx, [edi+25h]
mov     ecx, ebx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10044952
push    ebx
push    0
push    esi
call    memset
add     esp, 0ch
mov     [ebp+var_8], esi
test    esi, esi
jz      short loc_100449a8
mov     cx, word ptr [ebp+arg_8]
mov     dl, [ebp+arg_c]
mov     [esi], cx
mov     ecx, [ebp+src]
push    edi
lea     eax, [esi+24h]
push    ecx
push    eax
mov     [esi+18h], eax
mov     [esi+2], dl
call    memcpy
mov     eax, [ebp+var_c]
mov     edx, [esi+18h]
add     esp, 0ch
push    eax
mov     ebx, esi
mov     byte ptr [edi+edx], 0
call    sub_10044740
add     esp, 4
mov     eax, [ebp+var_8]
test    eax, eax
jz      short loc_100449a8
cmp     dword ptr [eax+10h], 0
jnz     short loc_100449aa
cmp     dword ptr [eax+0ch], 0
jnz     short loc_100449aa
cmp     [ebp+arg_10], 0
jnz     short loc_100449aa
xor     eax, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 2ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
mov     ecx, [esi+0ch]
mov     edx, [esi+10h]
mov     [esp+34h+var_10], eax
mov     eax, [esi+14h]
mov     [esp+34h+var_c], ecx
mov     ecx, [esi+28h]
push    edi
xor     edi, edi
mov     [esp+38h+var_8], edx
mov     edx, [esi+2ch]
mov     [esp+38h+var_4], eax
mov     eax, [esi+30h]
mov     [esp+38h+var_20], ecx
mov     ecx, [esi+34h]
lea     ebx, [esi+18h]
mov     [esp+38h+var_1c], edx
mov     [esp+38h+var_18], eax
mov     [esp+38h+var_14], ecx
mov     [esi+30h], edi
mov     [esi+2ch], edi
mov     [esi+28h], edi
mov     [esi+34h], edi
call    sub_1000cbb0
mov     eax, [esp+38h+var_18]
mov     [esp+38h+var_28], eax
cmp     eax, edi
jz      short loc_10044a78
mov     edx, [esp+38h+var_28]
mov     edi, [edx+8]
mov     [esp+38h+var_24], edi
test    edi, edi
jz      short loc_10044a68
mov     eax, [edi+1ch]
push    eax
xor     ebx, ebx
call    sub_1005dfb0
mov     ecx, [edi]
push    ecx
call    sub_10009770
mov     edx, [edi+4]
push    edx
call    sub_10009770
mov     eax, [edi+0ch]
push    eax
push    ebx
call    sub_10036430
mov     edi, [edi+10h]
xor     esi, esi
call    sub_100433b0
mov     ecx, [esp+4ch+var_24]
push    ecx
call    sub_10009770
mov     esi, [ebp+arg_0]
add     esp, 18h
mov     edx, [esp+38h+var_28]
mov     eax, [edx]
mov     [esp+38h+var_28], eax
test    eax, eax
jnz     short loc_10044a19
xor     edi, edi
lea     ebx, [esp+38h+var_20]
call    sub_1000cbb0
mov     ebx, [esp+38h+var_8]
mov     [esi+10h], edi
mov     [esi+0ch], edi
mov     [esi+8], edi
mov     [esi+14h], edi
cmp     ebx, edi
jz      short loc_10044aa8
mov     eax, [ebx+8]
push    eax
push    edi
call    sub_1003fba0
mov     ebx, [ebx]
add     esp, 8
cmp     ebx, edi
jnz     short loc_10044a95
lea     ebx, [esp+38h+var_10]
call    sub_1000cbb0
lea     ebx, [esi+38h]
call    sub_1000cbb0
movzx   eax, word ptr [esi+4eh]
mov     [esi+48h], edi
test    al, 1
jz      short loc_10044ad0
inc     dword ptr [esi+4]
and     eax, 0fffeh
mov     [esi+4eh], ax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, eax
xor     ebx, ebx
cmp     edi, ebx
jz      short loc_10044b52
mov     esi, [edi+4]
mov     [ebp+var_4], esi
call    sub_10019320
cmp     [esi+30h], ebx
jnz     short loc_10044b2c
push    54h
call    sub_100094a0
mov     esi, eax
add     esp, 4
cmp     esi, ebx
jz      short loc_10044b1d
push    54h
push    ebx
push    esi
call    memset
add     esp, 0ch
mov     eax, [ebp+var_4]
mov     [eax+30h], esi
mov     dword ptr [eax+34h], offset sub_100449b0
mov     esi, eax
cmp     [edi+9], bl
jz      short loc_10044b4d
dec     dword ptr [edi+0ch]
jnz     short loc_10044b4d
mov     eax, [edi+4]
mov     eax, [eax+38h]
cmp     eax, ebx
jz      short loc_10044b4a
push    eax
call    dword_10080284
add     esp, 4
mov     [edi+0ah], bl
mov     eax, [esi+30h]
jmp     short loc_10044b70
push    54h
call    sub_100094a0
mov     esi, eax
add     esp, 4
cmp     esi, ebx
jz      short loc_10044b6e
push    54h
push    ebx
push    esi
call    memset
add     esp, 0ch
mov     eax, esi
cmp     eax, ebx
jnz     short loc_10044b82
mov     ecx, [ebp+arg_0]
mov     byte ptr [ecx+32h], 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [eax+4ch], bl
jnz     short loc_10044bbb
mov     [eax+10h], ebx
mov     [eax+0ch], ebx
mov     [eax+8], ebx
mov     [eax+14h], ebx
mov     [eax+20h], ebx
mov     [eax+1ch], ebx
mov     [eax+18h], ebx
mov     [eax+24h], ebx
mov     [eax+30h], ebx
mov     [eax+2ch], ebx
mov     [eax+28h], ebx
mov     [eax+34h], ebx
mov     [eax+40h], ebx
mov     [eax+3ch], ebx
mov     [eax+38h], ebx
mov     [eax+44h], ebx
mov     byte ptr [eax+4dh], 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
lea     ebx, [eax+4]
mov     eax, [ebx+4]
mov     [ebp+var_4], eax
mov     eax, [esi]
cmp     byte ptr [eax+79h], 0
push    edi
mov     edi, [ebx]
jnz     short loc_10044c06
lea     ecx, [esi+4]
push    ecx
push    eax
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      short loc_10044c06
inc     dword ptr [esi+44h]
mov     [esi+0ch], eax
xor     edi, edi
jmp     short loc_10044c5b
mov     edx, [ebp+var_4]
mov     eax, [esi]
push    edi
push    edx
push    eax
call    sub_1003f510
add     esp, 0ch
mov     [ebp+var_8], eax
test    eax, eax
jnz     short loc_10044c59
test    edi, edi
jz      short loc_10044c3b
mov     ecx, [ebp+var_4]
push    ecx
push    edi
push    offset anosuchtable
push    offset asss
push    esi
call    sub_1000bb30
add     esp, 14h
jmp     short loc_10044c52
mov     edx, [ebp+var_4]
push    edx
push    offset anosuchtable
push    offset ass_4
push    esi
call    sub_1000bb30
add     esp, 10h
mov     eax, [ebp+var_8]
mov     byte ptr [esi+11h], 1
mov     edi, eax
mov     eax, [ebx+0ch]
mov     ecx, [esi]
push    eax
push    ecx
call    sub_1003fba0
add     esp, 8
mov     [ebx+0ch], edi
test    edi, edi
jz      short loc_10044c75
inc     word ptr [edi+20h]
push    ebx
push    esi
call    sub_1005a370
add     esp, 8
test    eax, eax
jz      short loc_10044c8b
xor     eax, eax
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     dl, [ecx+22h]
push    esi
test    dl, 10h
jz      short loc_10044ccb
mov     eax, [ecx+34h]
test    eax, eax
jz      short loc_10044cc0
mov     esi, [edi]
cmp     [eax], esi
jz      short loc_10044cc0
mov     eax, [eax+18h]
test    eax, eax
jnz     short loc_10044cb5
mov     eax, [eax+4]
mov     eax, [eax]
cmp     dword ptr [eax+34h], 0
jz      short loc_10044ce1
test    dl, 1
jz      short loc_10044cfa
mov     edx, [edi]
test    dword ptr [edx+18h], 10000h
jnz     short loc_10044cfa
cmp     byte ptr [edi+12h], 0
jnz     short loc_10044cfa
mov     eax, [ecx]
push    eax
push    offset atablesmaynotbe_2
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     eax, 1
pop     esi
pop     ebp
retn
cmp     [ebp+arg_0], 0
jnz     short loc_10044d1f
cmp     dword ptr [ecx+1ch], 0
jz      short loc_10044d1f
mov     ecx, [ecx]
push    ecx
push    offset acannotmodifysb
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     eax, 1
pop     esi
pop     ebp
retn
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
mov     edx, [ecx+1ch]
push    ebx
push    esi
mov     esi, [eax]
push    edi
mov     edi, [ebp+src]
push    0
push    edx
push    esi
call    sub_10036d20
add     esp, 0ch
mov     ebx, eax
mov     [esp+20h+var_14], ebx
test    edi, edi
jz      loc_10044dff
push    0
push    0
push    edi
push    esi
call    sub_100365c0
add     esp, 10h
mov     ecx, 40h
mov     [ebp+src], eax
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10044dc2
push    40h
push    0
push    edi
call    memset
mov     eax, 1
mov     [edi+2], ax
movsx   ecx, word ptr [edi]
add     esp, 0ch
push    ecx
push    eax
push    esi
mov     eax, edi
call    sub_100434e0
add     esp, 0ch
cmp     byte ptr [esi+32h], 0
mov     edi, eax
jz      loc_10044e47
push    edi
mov     eax, esi
call    sub_10043720
add     esp, 4
xor     edi, edi
test    ebx, ebx
jz      short loc_10044ddb
push    ebx
push    esi
call    sub_10054390
add     esp, 8
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
mov     edx, [ebp+src]
mov     ecx, [ebp+arg_0]
push    0
push    0
push    0
push    0
push    0
push    0
push    edx
push    edi
push    0
call    sub_10054420
add     esp, 24h
mov     [esp+20h+var_14], eax
mov     ebx, eax
mov     eax, [ebp+arg_c]
mov     edx, [ebp+arg_0]
lea     ecx, [esp+20h+var_10]
push    ecx
mov     [esp+24h+var_c], eax
xor     eax, eax
push    ebx
push    edx
mov     [esp+2ch+var_10], 9
mov     [esp+2ch+var_8], eax
mov     [esp+2ch+var_4], eax
call    sub_1005b870
add     esp, 0ch
test    ebx, ebx
jz      short loc_10044e40
push    ebx
push    esi
call    sub_10054390
add     esp, 8
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movsx   eax, word ptr [edi]
mov     edx, eax
shl     edx, 4
sub     edx, eax
push    esi
xor     eax, eax
lea     ebx, [edi+edx*4-38h]
call    sub_1003fe10
add     esp, 4
mov     [ebx+4], eax
push    esi
xor     eax, eax
call    sub_1003fe10
mov     [ebx], eax
mov     eax, [ebp+arg_4]
mov     ebx, [eax]
add     esp, 4
push    esi
call    sub_10009b70
mov     ecx, [esp+24h+var_14]
add     esp, 4
mov     [edi+0ch], eax
mov     [edi+14h], ecx
jmp     loc_10044ddb
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 4ch
xor     eax, eax
push    ebx
mov     ebx, [ebp+arg_0]
cmp     dword ptr [ebx+44h], 0
mov     [esp+50h+var_28], eax
mov     [esp+50h+var_24], eax
mov     eax, [ebx]
push    esi
push    edi
mov     [esp+58h+var_38], 0ffffffffh
mov     [esp+58h+var_44], eax
jnz     loc_10045335
cmp     byte ptr [eax+32h], 0
jnz     loc_10045335
mov     eax, [ebp+arg_4]
mov     esi, ebx
call    sub_10044bd0
mov     esi, eax
mov     [esp+58h+var_4c], esi
test    esi, esi
jz      loc_10045335
push    0
push    0
push    6ah
mov     edx, esi
mov     eax, ebx
call    sub_1005f080
mov     edi, eax
xor     eax, eax
add     esp, 0ch
cmp     [esi+1ch], eax
push    esi
setnz   al
push    ebx
mov     [esp+60h+var_30], edi
mov     [esp+60h+var_3c], eax
call    sub_10041590
add     esp, 8
test    eax, eax
jnz     loc_10045335
xor     ecx, ecx
test    edi, edi
setnz   cl
mov     edi, ebx
push    ecx
mov     ecx, esi
call    sub_10044ca0
add     esp, 4
test    eax, eax
jnz     loc_10045335
mov     edi, [esp+58h+var_44]
mov     esi, [esi+44h]
mov     ecx, edi
call    sub_10053b80
mov     edx, [edi+10h]
mov     esi, [esp+58h+var_4c]
mov     [esp+58h+var_40], eax
add     eax, eax
mov     eax, [edx+eax*8]
push    eax
mov     eax, [esi]
push    0
push    eax
push    9
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
mov     [esp+58h+var_2c], eax
cmp     eax, 1
jz      loc_10045335
mov     eax, [ebx+48h]
mov     ecx, [ebp+arg_4]
mov     [ecx+24h], eax
inc     dword ptr [ebx+48h]
mov     ecx, [ebx+48h]
mov     [esp+58h+var_48], eax
mov     eax, [esi+10h]
test    eax, eax
jz      short loc_10044f9b
lea     esp, [esp+0]
inc     ecx
mov     [ebx+48h], ecx
mov     eax, [eax+14h]
test    eax, eax
jnz     short loc_10044f90
cmp     [esp+58h+var_3c], 0
jz      short loc_10044fb8
mov     edx, [ebx+204h]
mov     eax, [esi]
mov     [esp+58h+var_24], ebx
mov     [esp+58h+var_28], edx
mov     [ebx+204h], eax
push    ebx
call    sub_10056c90
add     esp, 4
mov     [esp+58h+var_34], eax
test    eax, eax
jz      loc_10045335
cmp     byte ptr [ebx+12h], 0
jnz     short loc_10044fd7
mov     byte ptr [eax+5eh], 1
mov     edi, [esp+58h+var_40]
push    1
mov     eax, ebx
call    sub_10043d50
add     esp, 4
cmp     [esp+58h+var_3c], 0
jz      short loc_10045001
mov     ecx, [esp+58h+var_48]
mov     edx, [ebp+src]
push    ecx
push    edx
push    esi
push    ebx
call    sub_10044d30
add     esp, 10h
mov     edi, [ebp+src]
xor     eax, eax
mov     [esp+58h+var_20], eax
mov     [esp+58h+var_1c], eax
mov     [esp+58h+var_18], eax
mov     [esp+58h+var_14], eax
mov     [esp+58h+var_10], eax
mov     [esp+58h+var_c], eax
mov     [esp+58h+var_8], eax
mov     [esp+58h+var_4], eax
mov     eax, [ebp+arg_4]
lea     esi, [esp+58h+var_20]
mov     [esp+58h+var_20], ebx
mov     [esp+58h+var_1c], eax
call    sub_10035700
test    eax, eax
jnz     loc_10045335
mov     ecx, [esp+58h+var_44]
test    dword ptr [ecx+18h], 1000h
mov     esi, [esp+58h+var_34]
jz      short loc_1004506c
inc     dword ptr [ebx+4ch]
mov     eax, [ebx+4ch]
push    eax
mov     [esp+5ch+var_38], eax
push    0
push    7
mov     eax, esi
call    sub_10025990
add     esp, 0ch
cmp     [esp+58h+var_2c], 0
jnz     short loc_100450f1
test    edi, edi
mov     edi, [esp+58h+var_4c]
jnz     short loc_100450f5
cmp     [esp+58h+var_30], 0
jnz     short loc_100450f5
test    byte ptr [edi+22h], 10h
jnz     short loc_100450f5
mov     edx, [ebx]
test    dword ptr [edx+18h], 4000000h
jz      short loc_100450a4
push    0
push    0
push    edi
call    sub_1004a660
add     esp, 0ch
test    eax, eax
jnz     short loc_100450f5
mov     eax, [edi]
mov     ecx, [esp+58h+var_38]
mov     edx, [esp+58h+var_40]
push    0fffffffeh
push    eax
mov     eax, [edi+14h]
push    ecx
push    edx
push    eax
push    67h
mov     eax, esi
call    sub_100259f0
mov     edi, [edi+10h]
add     esp, 18h
test    edi, edi
jz      loc_100452cd
mov     edi, edi
mov     ecx, [esp+58h+var_40]
mov     edx, [edi+28h]
push    ecx
push    edx
push    67h
mov     eax, esi
call    sub_10025990
mov     edi, [edi+14h]
add     esp, 0ch
test    edi, edi
jnz     short loc_100450d0
jmp     loc_100452cd
mov     edi, [esp+58h+var_4c]
mov     eax, [ebx+4ch]
inc     eax
push    eax
lea     ecx, [eax+1]
mov     [esp+5ch+var_34], eax
push    0
push    0ah
mov     eax, esi
mov     [esp+64h+var_40], ecx
mov     [ebx+4ch], ecx
call    sub_10025990
mov     eax, [ebp+src]
mov     ecx, [ebp+arg_4]
add     esp, 0ch
push    0
push    8
push    0
push    0
push    eax
push    ecx
push    ebx
call    sub_10069990
add     esp, 1ch
mov     [esp+58h+var_2c], eax
test    eax, eax
jz      loc_10045335
mov     edx, [esp+58h+var_40]
mov     eax, [esp+58h+var_48]
push    0
push    edx
push    eax
push    edi
or      eax, 0ffffffffh
mov     edi, ebx
call    sub_10038820
mov     ecx, [esp+68h+var_34]
push    eax
push    ecx
push    70h
mov     eax, esi
call    sub_10025990
mov     edx, [esp+74h+var_44]
add     esp, 1ch
test    dword ptr [edx+18h], 1000h
jz      short loc_10045184
mov     eax, [esp+58h+var_38]
push    1
push    eax
push    14h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
mov     ecx, [esp+58h+var_2c]
push    ecx
call    sub_1006a540
add     esp, 4
mov     eax, esi
call    sub_10025c00
cmp     [esp+58h+var_3c], 0
mov     edi, [esp+58h+var_4c]
mov     [esp+58h+var_2c], eax
jnz     short loc_100451b9
mov     edx, [esp+58h+var_48]
push    28h
push    edx
push    ebx
mov     eax, edi
call    sub_1004f710
add     esp, 0ch
mov     eax, [esp+58h+var_40]
mov     ecx, [esp+58h+var_2c]
mov     edx, [esp+58h+var_34]
push    eax
push    ecx
push    edx
push    71h
mov     eax, esi
call    sub_10025890
add     esp, 10h
test    byte ptr [edi+22h], 10h
mov     [esp+58h+var_34], eax
jz      short loc_1004523d
mov     edi, [edi+34h]
test    edi, edi
jz      short loc_100451f4
mov     eax, [esp+58h+var_44]
cmp     [edi], eax
jz      short loc_100451f4
mov     edi, [edi+18h]
test    edi, edi
jnz     short loc_100451e5
mov     ecx, [esp+58h+var_4c]
push    ecx
mov     eax, ebx
call    sub_10063df0
mov     edx, [esp+5ch+var_40]
add     esp, 4
push    0fffffff6h
push    edi
push    edx
push    1
push    0
push    8ch
mov     eax, esi
call    sub_100259f0
mov     eax, [esi+4]
add     esp, 18h
test    eax, eax
jz      short loc_10045230
mov     ecx, [esi+1ch]
lea     ecx, [ecx+ecx*4]
mov     byte ptr [eax+ecx*4-11h], 2
mov     ecx, ebx
call    sub_10043d90
mov     edi, [esp+58h+var_4c]
jmp     short loc_10045261
mov     edx, [esp+58h+var_30]
mov     ecx, [esp+58h+var_40]
xor     eax, eax
cmp     [ebx+12h], al
push    63h
setz    al
push    edx
mov     edx, [esp+60h+var_48]
push    eax
push    ecx
push    edx
push    edi
push    ebx
call    sub_10045370
add     esp, 1ch
mov     eax, [esp+58h+var_34]
push    eax
push    0
push    1
mov     eax, esi
call    sub_10025990
mov     edx, [esp+64h+var_2c]
add     esp, 0ch
mov     ecx, esi
call    sub_10025c70
cmp     [esp+58h+var_3c], 0
jnz     short loc_100452cd
test    byte ptr [edi+22h], 10h
jnz     short loc_100452cd
mov     edi, [edi+10h]
test    edi, edi
jz      short loc_100452bc
mov     ecx, [esp+58h+var_48]
inc     ecx
mov     [esp+58h+var_3c], ecx
mov     edx, [edi+28h]
mov     eax, [esp+58h+var_3c]
push    edx
push    eax
push    2dh
mov     eax, esi
call    sub_10025990
mov     edi, [edi+14h]
inc     [esp+64h+var_3c]
add     esp, 0ch
test    edi, edi
jnz     short loc_1004529c
mov     ecx, [esp+58h+var_48]
push    ecx
push    2dh
mov     eax, esi
call    sub_10025940
add     esp, 8
cmp     byte ptr [ebx+12h], 0
jnz     short loc_100452e5
cmp     dword ptr [ebx+1b4h], 0
jnz     short loc_100452e5
push    ebx
call    sub_1004c3c0
add     esp, 4
mov     edx, [esp+58h+var_44]
test    dword ptr [edx+18h], 1000h
jz      short loc_10045335
cmp     byte ptr [ebx+12h], 0
jnz     short loc_10045335
cmp     dword ptr [ebx+1b4h], 0
jnz     short loc_10045335
mov     eax, [esp+58h+var_38]
push    1
push    eax
push    10h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
mov     eax, 1
mov     edi, esi
call    sub_10026ff0
push    0
push    offset arowsdeleted
push    0
push    0
mov     ecx, esi
call    sub_10027070
add     esp, 10h
mov     eax, [esp+58h+var_24]
test    eax, eax
jz      short loc_10045347
mov     ecx, [esp+58h+var_28]
mov     [eax+204h], ecx
mov     edx, [ebp+arg_4]
mov     esi, [esp+58h+var_44]
push    edx
mov     eax, esi
call    sub_10043720
mov     eax, [ebp+src]
add     esp, 4
push    eax
push    esi
call    sub_10036430
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [eax+8]
push    edi
mov     edi, [esi+24h]
lea     edx, [edi-1]
lea     ecx, [edi+1]
mov     [esp+20h+var_8], esi
mov     [esp+20h+var_10], 0
mov     [esi+24h], ecx
test    edi, edx
jnz     short loc_100453d1
mov     eax, [esi]
mov     ebx, [esi+28h]
lea     ecx, ds:4[edi*8]
push    ecx
mov     [esp+24h+var_c], eax
call    sub_10009ac0
add     esp, 4
mov     [esp+20h+var_4], eax
test    eax, eax
jnz     short loc_100453ce
mov     ecx, [esp+20h+var_c]
mov     eax, ebx
call    sub_10009810
mov     eax, [esp+20h+var_4]
mov     [esi+28h], eax
mov     eax, [esi+28h]
test    eax, eax
jz      short loc_100453df
mov     dword ptr [eax+edi*4], 0ffffffffh
mov     ebx, [esi+1ch]
or      ecx, 0ffffffffh
sub     ecx, edi
mov     [esp+20h+var_c], ecx
cmp     [esi+20h], ebx
jg      short loc_100453ff
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004542a
mov     ecx, [esp+20h+var_c]
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_8]
mov     [eax+8], ecx
mov     ecx, [ebp+arg_c]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 36h
mov     edx, [ebp+arg_0]
mov     eax, [edx]
test    dword ptr [eax+18h], 4000000h
mov     ebx, [ebp+arg_4]
jz      short loc_10045474
mov     ecx, [ebx]
mov     eax, ecx
test    ecx, ecx
jz      short loc_10045455
cmp     byte ptr [ecx], 0
jz      short loc_1004544e
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10045448
sub     eax, ecx
and     eax, 3fffffffh
push    ecx
mov     ecx, [ebx+44h]
add     ecx, 38h
push    ecx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
test    eax, eax
jnz     short loc_10045480
cmp     [ebx+24h], eax
jnz     short loc_10045480
mov     esi, [esp+20h+var_8]
cmp     [ebp+arg_14], 0
jz      loc_100455ce
jmp     short loc_10045484
mov     esi, [esp+20h+var_8]
mov     edx, [ebp+arg_18]
mov     eax, [ebp+arg_0]
push    edx
push    ebx
push    3
push    0
push    0
push    eax
mov     eax, [ebp+arg_14]
call    sub_1005f8b0
mov     edi, [ebp+arg_0]
push    ebx
push    edi
mov     [esp+40h+var_8], eax
call    sub_1004a570
or      [esp+40h+var_8], eax
mov     eax, [edi+4ch]
mov     edx, [ebx+8]
lea     ecx, [eax+1]
lea     eax, [edx+eax+1]
mov     [edi+4ch], eax
mov     eax, [esi+1ch]
add     esp, 20h
mov     [esp+20h+var_10], ecx
mov     [esp+20h+var_4], eax
cmp     [esi+20h], eax
jg      short loc_100454df
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10045509
mov     eax, [esp+20h+var_4]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_c]
mov     edx, [esp+20h+var_10]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0eh
xor     edi, edi
cmp     [ebx+8], edi
jle     short loc_10045549
mov     eax, [esp+20h+var_8]
cmp     eax, 0ffffffffh
jz      short loc_10045526
mov     edx, 1
mov     ecx, edi
shl     edx, cl
test    eax, edx
jz      short loc_10045543
mov     eax, [esp+20h+var_10]
mov     edx, [ebp+arg_8]
lea     ecx, [edi+eax+1]
push    ecx
push    edx
push    ebx
mov     ebx, edi
mov     eax, esi
call    sub_10038780
mov     ebx, [ebp+arg_4]
add     esp, 0ch
inc     edi
cmp     edi, [ebx+8]
jl      short loc_10045510
mov     eax, [esp+20h+var_c]
mov     ecx, [ebp+arg_18]
mov     edx, [esp+20h+var_10]
push    eax
mov     eax, [ebp+arg_14]
push    ecx
mov     ecx, [ebp+arg_0]
push    edx
push    ebx
push    1
push    0
push    6ah
push    eax
push    ecx
call    sub_1005f840
mov     eax, [esi+1ch]
add     esp, 24h
mov     [esp+20h+var_4], eax
cmp     [esi+20h], eax
jg      short loc_10045589
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_100455b8
mov     eax, [esp+20h+var_4]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+arg_8]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [esp+20h+var_c]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_c]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 36h
mov     edx, [esp+20h+var_10]
push    0
push    edx
push    ebx
mov     ebx, [ebp+arg_0]
call    sub_1004a080
mov     ebx, [ebp+arg_4]
add     esp, 0ch
cmp     dword ptr [ebx+1ch], 0
jnz     loc_100456aa
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
push    0
push    eax
push    ecx
mov     eax, ebx
call    sub_10045700
mov     eax, [esi+1ch]
add     esp, 0ch
mov     [esp+20h+var_4], eax
cmp     [esi+20h], eax
jg      short loc_10045607
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10045635
mov     eax, [esp+20h+var_4]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+arg_8]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
xor     edi, edi
xor     edx, edx
cmp     [ebp+arg_10], edi
mov     byte ptr [eax+3], 0
setnz   dl
mov     [eax+4], ecx
mov     [eax+0ch], edi
mov     [eax+10h], edi
mov     word ptr [eax], 3bh
mov     [eax+8], edx
cmp     [ebp+arg_10], 0
jz      short loc_100456aa
mov     edx, [esi+4]
mov     ecx, [ebx]
mov     edi, [esi]
mov     [esp+20h+var_4], ecx
test    edx, edx
jz      short loc_100456a3
cmp     byte ptr [edi+32h], 0
jnz     short loc_100456a3
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4-5]
lea     ecx, [edx+eax*4]
movsx   eax, byte ptr [ecx+1]
mov     [esp+20h+var_8], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     ecx, [esp+20h+var_4]
mov     eax, [esp+20h+var_8]
xor     edx, edx
mov     [eax+10h], edx
cmp     ecx, edx
jnz     short loc_10045683
mov     [eax+10h], edx
mov     [eax+1], dl
jmp     short loc_100456aa
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [esp+20h+var_8]
mov     ebx, [ebp+arg_4]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
jmp     short loc_100456aa
xor     eax, eax
call    sub_10025e50
mov     ecx, [esp+20h+var_10]
push    ecx
mov     edi, ebx
mov     ebx, [ebp+arg_0]
push    0
call    sub_1004b680
mov     edi, [esp+28h+var_c]
mov     edx, [ebp+arg_18]
mov     eax, [esp+28h+var_10]
mov     ecx, [ebp+arg_4]
push    edi
push    edx
mov     edx, [ebp+arg_14]
push    eax
push    ecx
push    2
push    0
push    6ah
push    edx
mov     eax, ebx
push    eax
call    sub_1005f840
mov     eax, [esi+28h]
add     esp, 2ch
test    eax, eax
jz      short loc_100456f7
mov     edx, [esi+1ch]
lea     ecx, ds:4[edi*4]
sub     eax, ecx
mov     [eax], edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, [eax+10h]
push    edi
mov     [ebp+var_4], esi
test    esi, esi
jz      loc_100457a6
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_8]
inc     ecx
mov     [ebp+var_c], ecx
mov     [ebp+var_8], edx
jmp     short loc_10045729
mov     esi, [ebp+var_4]
cmp     [ebp+arg_8], 0
jz      short loc_10045737
mov     eax, [ebp+var_8]
cmp     dword ptr [eax], 0
jz      short loc_10045795
mov     ecx, [ebp+arg_4]
mov     edi, [ebp+arg_0]
push    0
push    0
push    ecx
push    esi
push    edi
call    sub_100457b0
mov     edi, [edi+8]
mov     esi, [esi+24h]
mov     ebx, [edi+1ch]
add     esp, 14h
inc     esi
mov     [ebp+var_10], eax
cmp     [edi+20h], ebx
jg      short loc_10045767
call    sub_10025810
test    eax, eax
jnz     short loc_10045792
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_c]
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_10]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], esi
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 62h
mov     esi, [ebp+var_4]
mov     esi, [esi+14h]
add     [ebp+var_8], 4
inc     [ebp+var_c]
mov     [ebp+var_4], esi
test    esi, esi
jnz     short loc_10045726
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, [ebp+arg_4]
mov     ecx, [eax+0ch]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, [esi+8]
mov     edx, [esi+40h]
mov     [ebp+var_10], ecx
mov     ecx, [eax+24h]
mov     eax, [esi+3ch]
push    edi
lea     edi, [ecx+1]
mov     [ebp+var_24], ebx
mov     [ebp+var_c], ecx
mov     [ebp+var_14], edi
mov     [ebp+var_4], edx
cmp     edi, eax
jg      short loc_100457f0
add     edx, edi
sub     eax, edi
mov     [esi+40h], edx
mov     [esi+3ch], eax
jmp     short loc_100457fe
mov     eax, [esi+4ch]
lea     edx, [eax+1]
add     eax, edi
mov     [ebp+var_4], edx
mov     [esi+4ch], eax
mov     eax, [ebx+1ch]
mov     [ebp+var_1c], eax
cmp     [ebx+20h], eax
jg      short loc_1004581a
mov     edi, ebx
call    sub_10025810
mov     ecx, [ebp+var_c]
test    eax, eax
jnz     short loc_10045845
mov     eax, [ebp+var_1c]
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     eax, [eax+eax*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+arg_8]
mov     [eax+4], edx
mov     edx, [ebp+var_4]
add     edx, ecx
mov     [eax+8], edx
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 41h
xor     eax, eax
mov     [ebp+var_1c], eax
test    ecx, ecx
jle     loc_10045983
mov     ecx, [ebp+var_4]
mov     [ebp+var_8], ecx
mov     edx, [ebp+arg_4]
mov     ecx, [edx+4]
mov     esi, [ecx+eax*4]
mov     edx, [ebp+var_10]
cmp     esi, [edx+4]
jnz     short loc_100458b1
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_10045880
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     loc_1004596d
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_4]
add     edx, [ebp+var_c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+4], edx
mov     edx, [ebp+var_8]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0fh
jmp     loc_1004596d
mov     eax, [ebx+1ch]
mov     [ebp+var_20], eax
cmp     [ebx+20h], eax
jg      short loc_100458ca
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_100458f5
mov     eax, [ebp+var_20]
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+arg_8]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_8]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], esi
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1dh
mov     eax, [ebp+var_10]
cmp     dword ptr [eax+1ch], 0
jnz     short loc_1004596d
mov     eax, [eax+0ch]
mov     ecx, [ebx]
lea     edx, [esi+esi*2]
lea     eax, [eax+edx*8]
lea     edx, [ebp+var_18]
push    edx
movzx   edx, byte ptr [eax+16h]
mov     eax, [eax+4]
push    edx
mov     edx, [ecx+10h]
mov     edx, [edx+0ch]
movzx   edx, byte ptr [edx+4dh]
push    edx
push    eax
push    ecx
call    sub_100254b0
mov     ecx, [ebp+var_18]
add     esp, 14h
test    ecx, ecx
jz      short loc_1004596d
mov     esi, [ebx+4]
mov     edi, [ebx]
test    esi, esi
jz      short loc_10045963
cmp     byte ptr [edi+32h], 0
jnz     short loc_10045963
mov     eax, [ebx+1ch]
lea     ecx, [eax+eax*4-5]
movsx   eax, byte ptr [esi+ecx*4+1]
lea     esi, [esi+ecx*4]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     edx, [ebp+var_18]
mov     [esi+10h], edx
mov     byte ptr [esi+1], 0f8h
jmp     short loc_1004596d
mov     eax, 0fffffff8h
call    sub_10025e50
mov     eax, [ebp+var_1c]
inc     [ebp+var_8]
inc     eax
mov     [ebp+var_1c], eax
cmp     eax, [ebp+var_c]
jl      loc_10045858
mov     esi, [ebp+arg_0]
cmp     [ebp+arg_10], 0
jz      loc_10045a64
mov     eax, [ebp+var_10]
cmp     dword ptr [eax+1ch], 0
jnz     short loc_100459b0
mov     ecx, [esi]
test    byte ptr [ecx+18h], 80h
jnz     short loc_100459b0
mov     esi, [ebp+arg_4]
mov     eax, ebx
call    sub_1004b940
mov     esi, [ebp+arg_0]
mov     [ebp+arg_4], eax
jmp     short loc_100459b7
mov     [ebp+arg_4], 0
mov     eax, [ebx+1ch]
mov     [ebp+arg_10], eax
cmp     [ebx+20h], eax
jg      short loc_100459d0
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_100459fe
mov     eax, [ebp+arg_10]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_4]
lea     edx, [eax+eax*4]
mov     eax, [ebx+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_14]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_c]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1fh
mov     eax, [ebx+4]
mov     edi, [ebx]
test    eax, eax
jz      short loc_10045a5a
cmp     byte ptr [edi+32h], 0
jnz     short loc_10045a5a
mov     ebx, [ebx+1ch]
lea     edx, [ebx+ebx*4-5]
mov     ecx, [eax+edx*4+10h]
lea     esi, [eax+edx*4]
movsx   eax, byte ptr [esi+1]
call    sub_10025e50
mov     ecx, [ebp+arg_4]
xor     eax, eax
mov     [esi+10h], eax
cmp     ecx, eax
jnz     short loc_10045a3b
mov     [esi+10h], eax
mov     [esi+1], al
mov     esi, [ebp+arg_0]
jmp     short loc_10045a64
call    sub_1000ba20
mov     edi, eax
mov     eax, [ebp+var_24]
mov     edx, [eax]
mov     ebx, ecx
call    sub_10009bc0
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0ffh
mov     esi, [ebp+arg_0]
jmp     short loc_10045a64
mov     ecx, [ebp+arg_4]
xor     eax, eax
call    sub_10025e50
mov     ecx, [ebp+var_14]
mov     edi, [ebp+var_4]
mov     eax, esi
call    sub_100384f0
mov     eax, [ebp+var_14]
cmp     eax, [esi+3ch]
jle     short loc_10045a88
mov     [esi+3ch], eax
mov     eax, edi
mov     [esi+40h], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 4ch
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     edx, [eax+34h]
push    ebx
mov     ebx, [ecx+4]
push    esi
push    edi
mov     edi, [ebp+arg_8]
neg     ebx
sbb     ebx, ebx
mov     [esp+58h+var_44], edx
mov     edx, [edi]
xor     ecx, ecx
cmp     byte ptr [edx+1eh], 5
mov     [esp+58h+var_48], ecx
jz      loc_10045c4c
mov     esi, 1
cmp     [ebp+arg_4], esi
jle     short loc_10045b1f
mov     [esp+58h+var_4c], ecx
mov     eax, [edi+esi*4]
cmp     byte ptr [eax+1eh], 5
jz      loc_10045c4c
mov     ecx, [esp+58h+var_44]
mov     edx, [esp+58h+var_4c]
push    ecx
mov     ecx, [edx+edi]
call    sub_10025020
add     esp, 4
xor     eax, ebx
jl      short loc_10045b16
lea     eax, ds:0[esi*4]
mov     [esp+58h+var_48], esi
mov     [esp+58h+var_4c], eax
inc     esi
cmp     esi, [ebp+arg_4]
jl      short loc_10045ae2
mov     eax, [ebp+arg_0]
mov     ecx, [esp+58h+var_48]
mov     edx, [edi+ecx*4]
lea     ebx, [eax+8]
movzx   eax, word ptr [ebx+1ch]
mov     [esp+58h+var_48], edx
mov     [esp+58h+var_44], ebx
test    eax, 2460h
jz      loc_10045c09
test    eax, 2000h
jz      loc_10045bcc
mov     esi, [ebx+10h]
test    esi, esi
jz      short loc_10045ba3
mov     edi, [esi+14h]
test    edi, edi
jz      short loc_10045ba3
push    40h
lea     eax, [esp+5ch+var_40]
push    0
push    eax
call    memset
mov     edx, [ebx]
lea     eax, [esp+64h+var_40]
add     esp, 0ch
mov     ecx, 1
push    eax
mov     [esp+5ch+var_1c], cx
mov     [esp+5ch+var_38], edx
mov     [esp+5ch+var_10], ebx
mov     [esp+5ch+var_40], esi
call    edi
mov     eax, [ebx+24h]
mov     ecx, [ebx]
add     esp, 4
call    sub_10009810
mov     ecx, 0ah
lea     esi, [esp+58h+var_38]
mov     edi, ebx
rep movsd
mov     ecx, 2460h
test    [ebx+1ch], cx
jz      short loc_10045bb5
mov     eax, ebx
call    sub_10024760
mov     eax, [ebx+24h]
mov     ecx, [ebx]
call    sub_10009810
xor     eax, eax
mov     [ebx+4], eax
mov     [ebx+24h], eax
mov     [ebx+20h], eax
jmp     short loc_10045c09
test    eax, 400h
jz      short loc_10045bec
mov     ecx, [ebx+20h]
test    ecx, ecx
jz      short loc_10045bec
mov     edx, [ebx+4]
push    edx
call    ecx
add     esp, 4
mov     dword ptr [ebx+20h], 0
jmp     short loc_10045c09
test    al, 20h
jz      short loc_10045bfe
mov     ebx, [ebx+10h]
call    sub_100117b0
mov     ebx, [esp+58h+var_44]
jmp     short loc_10045c09
test    al, 40h
jz      short loc_10045c09
mov     esi, ebx
call    sub_10024b20
mov     edx, [esp+58h+var_48]
mov     ecx, 9
mov     esi, edx
mov     edi, ebx
mov     eax, 0fbffh
rep movsd
and     [ebx+1ch], ax
mov     ax, [ebx+1ch]
test    al, 12h
jz      short loc_10045c4c
mov     cx, [edx+1ch]
mov     edx, 800h
and     cx, dx
xor     edx, edx
cmp     dx, cx
jnz     short loc_10045c4c
or      eax, 1000h
mov     [ebx+1ch], ax
mov     eax, ebx
call    sub_10024530
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_8]
mov     ecx, [eax]
movzx   eax, byte ptr [ecx+1eh]
dec     eax
push    ebx
push    esi
cmp     eax, 3
ja      short def_10045c75
jmp     ds:jpt_10045c75[eax*4]
mov     ebx, offset ainteger_0
jmp     short loc_10045c9d
mov     ebx, offset atext_0
jmp     short loc_10045c9d
mov     ebx, offset areal_0
jmp     short loc_10045c9d
mov     ebx, offset ablob_1
jmp     short loc_10045c9d
mov     ebx, offset anull_2
mov     esi, [ebp+arg_0]
add     esi, 8
test    ebx, ebx
jnz     short loc_10045ced
test    byte ptr [esi+1ch], 40h
jz      short loc_10045cc1
mov     eax, [esi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+1ch], 20h
jz      short loc_10045ccf
mov     ebx, [esi+10h]
call    sub_100117b0
mov     ax, [esi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [esi+1ch], ax
mov     byte ptr [esi+1eh], 5
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi]
test    eax, eax
jz      short loc_10045cfb
mov     eax, [eax+48h]
mov     [ebp+arg_8], eax
jmp     short loc_10045d05
mov     [ebp+arg_8], 3b9aca00h
mov     eax, [ebp+arg_8]
push    edi
xor     edi, edi
test    eax, eax
js      short loc_10045d1b
lea     esp, [esp+0]
cmp     byte ptr [edi+ebx], 0
jz      short loc_10045d1b
inc     edi
cmp     edi, eax
jle     short loc_10045d10
xor     edx, edx
mov     [ebp+var_4], 202h
push    esi
cmp     edx, offset sub_10009760
jnz     short loc_10045d3a
call    sub_100247d0
mov     eax, [ebp+var_4]
mov     [esi+24h], ebx
jmp     short loc_10045d44
call    sub_100247d0
mov     eax, 0a02h
add     esp, 4
cmp     edi, [ebp+arg_8]
mov     [esi+18h], edi
mov     dword ptr [esi+20h], 0
mov     [esi+4], ebx
mov     [esi+1ch], ax
mov     word ptr [esi+1eh], 103h
pop     edi
jle     short loc_10045d70
mov     eax, [ebp+arg_0]
push    eax
call    sub_100298c0
add     esp, 4
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_8]
push    ebx
push    esi
push    edi
mov     edi, [eax]
movzx   eax, byte ptr [edi+1eh]
dec     eax
cmp     eax, 3
ja      def_10045dad
jmp     ds:jpt_10045dad[eax*4]
test    byte ptr [edi+1ch], 10h
jnz     short loc_10045dd9
mov     bl, 1
call    sub_100253e0
test    eax, eax
jnz     short loc_10045dd9
mov     edx, [ebp+arg_0]
push    eax
push    edx
call    sub_10029540
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+18h]
mov     ecx, 4000h
test    [edi+1ch], cx
jz      short loc_10045dea
add     eax, [edi+10h]
mov     edx, [ebp+arg_0]
push    eax
push    edx
call    sub_10029540
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     bl, 1
call    sub_100253e0
test    eax, eax
jz      loc_10045e8f
mov     cl, [eax]
xor     edx, edx
test    cl, cl
jz      short loc_10045e38
inc     edx
inc     eax
cmp     cl, 0c0h
jb      short loc_10045e32
mov     cl, [eax]
and     cl, 0c0h
cmp     cl, 80h
jnz     short loc_10045e32
mov     cl, [eax+1]
inc     eax
and     cl, 0c0h
cmp     cl, 80h
jz      short loc_10045e26
mov     cl, [eax]
test    cl, cl
jnz     short loc_10045e15
push    edx
mov     edx, [ebp+arg_0]
push    edx
call    sub_10029540
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+arg_0]
test    byte ptr [esi+24h], 40h
jz      short loc_10045e69
mov     eax, [esi+18h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+24h], 20h
jz      short loc_10045e77
mov     ebx, [esi+18h]
call    sub_100117b0
mov     ax, [esi+24h]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [esi+24h], ax
mov     byte ptr [esi+26h], 5
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
mov     eax, [ebp+arg_8]
mov     ecx, [eax]
movzx   eax, byte ptr [ecx+1eh]
sub     esp, 34h
dec     eax
push    ebx
push    esi
push    edi
jz      loc_10045f57
sub     eax, 4
jz      short loc_10045f44
movzx   eax, word ptr [ecx+1ch]
fldz
test    al, 8
jz      short loc_10045ee0
fld     qword ptr [ecx+8]
jmp     short loc_10045f10
test    al, 4
jz      short loc_10045ee9
fild    qword ptr [ecx+10h]
jmp     short loc_10045f10
test    al, 12h
jz      short loc_10045f23
mov     eax, [ecx+4]
fstp    [esp+40h+var_8]
lea     edx, [esp+40h+var_8]
push    edx
mov     dl, [ecx+1fh]
mov     ecx, [ecx+18h]
push    eax
call    sub_1000bd50
fld     [esp+48h+var_8]
fldz
add     esp, 8
fxch    st(1)
fld     st
fxch    st(2)
fcomp   st(1)
fnstsw  ax
test    ah, 41h
jnz     short loc_10045f27
fstp    st(1)
fchs
jmp     short loc_10045f29
fld     st
jmp     short loc_10045f10
fstp    st
mov     esi, [ebp+arg_0]
sub     esp, 8
add     esi, 8
fstp    [esp+48h+var_48]
call    sub_10024bc0
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_0]
push    ecx
call    sub_100295f0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    sub_10024870
test    edx, edx
jg      loc_10045fef
jl      short loc_10045f6e
test    eax, eax
jnb     loc_10045fef
mov     esi, edx
and     esi, 7fffffffh
mov     ecx, eax
or      ecx, esi
jnz     short loc_10045fe8
mov     edi, [ebp+arg_0]
mov     dword ptr [edi+38h], 1
mov     eax, [edi+8]
add     edi, 8
test    eax, eax
jz      short loc_10045f95
mov     eax, [eax+48h]
jmp     short loc_10045f9a
mov     eax, 3b9aca00h
xor     esi, esi
test    eax, eax
js      short loc_10045fae
cmp     ds:byte_1007b640[esi], 0
jz      short loc_10045fae
inc     esi
cmp     esi, eax
jle     short loc_10045fa0
lea     ebx, [esi+1]
cmp     esi, eax
jg      short loc_10045ffd
push    0
mov     eax, ebx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10045ffd
mov     edx, [edi+4]
push    ebx
push    offset byte_1007b640
push    edx
call    memcpy
mov     [edi+18h], esi
mov     dword ptr [edi+1ch], 1030202h
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
neg     eax
adc     edx, 0
neg     edx
mov     ecx, [ebp+arg_0]
push    edx
push    eax
push    ecx
call    sub_10029590
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_8]
mov     ecx, [edi+4]
mov     al, 5
mov     [esp+28h+var_14], 0
cmp     [ecx+1eh], al
jz      loc_1004636a
cmp     [ebp+arg_4], 3
jnz     short loc_10046047
mov     edx, [edi+8]
cmp     [edx+1eh], al
jz      loc_1004636a
mov     eax, [edi]
movzx   ebx, byte ptr [eax+1eh]
mov     [esp+28h+var_10], ebx
call    sub_10024870
cdq
mov     esi, eax
mov     [esp+28h+var_8], esi
mov     [esp+28h+var_4], edx
cmp     ebx, 4
jnz     short loc_100460a8
mov     edi, [edi]
test    byte ptr [edi+1ch], 10h
jnz     short loc_10046079
mov     bl, 1
call    sub_100253e0
test    eax, eax
jz      short loc_1004608a
mov     eax, [edi+18h]
mov     ecx, 4000h
test    [edi+1ch], cx
jz      short loc_1004608a
add     eax, [edi+10h]
mov     edx, [ebp+arg_8]
mov     [esp+28h+size], eax
mov     eax, [edx]
push    eax
call    sub_100292d0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1004636a
jmp     short loc_100460fc
mov     ecx, edi
mov     edi, [ecx]
mov     bl, 1
call    sub_100253e0
mov     ebx, eax
test    ebx, ebx
jz      loc_1004636a
xor     edi, edi
mov     [esp+28h+size], edi
cmp     [esp+28h+var_4], edi
jg      short loc_100460fc
jl      short loc_100460cf
test    esi, esi
jnb     short loc_100460fc
cmp     byte ptr [ebx], 0
jz      short loc_100460fc
mov     dl, [eax]
inc     eax
cmp     dl, 0c0h
jb      short loc_100460f2
mov     cl, [eax]
and     cl, 0c0h
cmp     cl, 80h
jnz     short loc_100460f2
mov     dl, [eax+1]
inc     eax
and     dl, 0c0h
cmp     dl, 80h
jz      short loc_100460e6
inc     edi
cmp     byte ptr [eax], 0
jnz     short loc_100460d4
mov     [esp+28h+size], edi
cmp     [ebp+arg_4], 3
jnz     short loc_1004612d
mov     eax, [ebp+arg_8]
mov     ecx, [eax+8]
call    sub_10024870
cdq
mov     edi, edx
mov     ecx, eax
test    edi, edi
jg      short loc_1004613b
jl      short loc_1004611c
test    ecx, ecx
jnb     short loc_1004613b
neg     ecx
adc     edi, 0
neg     edi
mov     [esp+28h+var_14], 1
jmp     short loc_1004613b
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+8]
mov     eax, [edx+48h]
cdq
mov     ecx, eax
mov     edi, edx
mov     eax, [esp+28h+var_4]
test    eax, eax
jg      short loc_10046192
jl      short loc_10046149
test    esi, esi
jnb     short loc_10046188
mov     eax, [esp+28h+size]
cdq
add     esi, eax
mov     eax, [esp+28h+var_4]
adc     eax, edx
mov     [esp+28h+var_8], esi
mov     [esp+28h+var_4], eax
test    eax, eax
jg      short loc_100461b2
jl      short loc_10046168
test    esi, esi
jnb     short loc_100461b2
add     ecx, esi
adc     edi, [esp+28h+var_4]
xor     esi, esi
cmp     edi, esi
jg      short loc_1004617e
jl      short loc_1004617a
cmp     ecx, esi
jnb     short loc_1004617e
xor     ecx, ecx
xor     edi, edi
mov     [esp+28h+var_8], esi
mov     [esp+28h+var_4], esi
jmp     short loc_100461b2
test    eax, eax
jl      short loc_100461a2
jg      short loc_10046192
test    esi, esi
jz      short loc_100461a2
add     esi, 0ffffffffh
adc     eax, 0ffffffffh
mov     [esp+28h+var_8], esi
mov     [esp+28h+var_4], eax
jmp     short loc_100461b2
test    edi, edi
jl      short loc_100461b2
jg      short loc_100461ac
test    ecx, ecx
jz      short loc_100461b2
add     ecx, 0ffffffffh
adc     edi, 0ffffffffh
cmp     [esp+28h+var_14], 0
mov     edx, [esp+28h+var_4]
jz      short loc_100461e3
sub     esi, ecx
sbb     edx, edi
mov     [esp+28h+var_8], esi
mov     [esp+28h+var_4], edx
test    edx, edx
jg      short loc_100461e3
jl      short loc_100461d3
test    esi, esi
jnb     short loc_100461e3
add     ecx, esi
adc     edi, edx
xor     esi, esi
mov     [esp+28h+var_8], esi
mov     [esp+28h+var_4], esi
mov     edx, esi
cmp     [esp+28h+var_10], 4
jz      loc_1004630f
mov     al, [ebx]
test    al, al
jz      short loc_10046223
or      esi, edx
jz      short loc_10046223
inc     ebx
cmp     al, 0c0h
jb      short loc_1004620f
mov     al, [ebx]
and     al, 0c0h
cmp     al, 80h
jnz     short loc_1004620f
mov     al, [ebx+1]
inc     ebx
and     al, 0c0h
cmp     al, 80h
jz      short loc_10046205
mov     esi, [esp+28h+var_8]
mov     al, [ebx]
add     esi, 0ffffffffh
adc     edx, 0ffffffffh
mov     [esp+28h+var_8], esi
test    al, al
jnz     short loc_100461f4
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_1004625f
lea     ebx, [ebx+0]
mov     edx, ecx
or      edx, edi
jz      short loc_1004625f
mov     dl, [eax]
inc     eax
cmp     dl, 0c0h
jb      short loc_10046254
mov     dl, [eax]
and     dl, 0c0h
cmp     dl, 80h
jnz     short loc_10046254
mov     dl, [eax+1]
inc     eax
and     dl, 0c0h
cmp     dl, 80h
jz      short loc_10046248
add     ecx, 0ffffffffh
adc     edi, 0ffffffffh
cmp     byte ptr [eax], 0
jnz     short loc_10046230
mov     edi, [ebp+arg_0]
sub     eax, ebx
add     edi, 8
mov     esi, eax
mov     eax, [edi]
test    eax, eax
jz      short loc_10046274
mov     eax, [eax+48h]
jmp     short loc_10046279
mov     eax, 3b9aca00h
mov     ecx, 2
mov     [esp+28h+var_14], ecx
test    esi, esi
jns     short loc_100462a4
xor     esi, esi
test    eax, eax
js      short loc_1004629b
lea     esp, [esp+0]
cmp     byte ptr [esi+ebx], 0
jz      short loc_1004629b
inc     esi
cmp     esi, eax
jle     short loc_10046290
mov     ecx, 202h
mov     [esp+28h+var_14], ecx
mov     [esp+28h+size], esi
test    ecx, 200h
jz      short loc_100462b7
lea     ecx, [esi+1]
mov     [esp+28h+size], ecx
cmp     esi, eax
jg      short loc_100462fc
mov     eax, [esp+28h+size]
push    0
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     loc_1004636a
mov     edx, [esp+28h+size]
mov     eax, [edi+4]
push    edx
push    ebx
push    eax
call    memcpy
mov     cx, word ptr [esp+34h+var_14]
add     esp, 0ch
mov     [edi+18h], esi
mov     [edi+1ch], cx
mov     word ptr [edi+1eh], 103h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_0]
push    edx
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+28h+size]
mov     esi, ecx
add     esi, [esp+28h+var_8]
cdq
adc     edi, [esp+28h+var_4]
cmp     edi, edx
jl      short loc_10046342
jg      short loc_10046328
cmp     esi, eax
jbe     short loc_10046342
sub     eax, [esp+28h+var_8]
sbb     edx, [esp+28h+var_4]
mov     ecx, eax
test    edx, edx
jg      short loc_10046342
jl      short loc_1004633c
test    ecx, ecx
jnb     short loc_10046342
xor     ecx, ecx
mov     [esp+28h+var_c], ecx
mov     eax, [esp+28h+var_8]
mov     esi, [ebp+arg_0]
add     eax, ebx
push    0
push    eax
lea     edx, [esi+8]
or      eax, 0ffffffffh
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short loc_1004636a
push    esi
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 38h
push    esi
xor     esi, esi
cmp     [ebp+arg_4], 2
push    edi
mov     edi, [ebp+arg_8]
jnz     short loc_100463bc
mov     ecx, [edi+4]
cmp     byte ptr [ecx+1eh], 5
jz      loc_100464fd
call    sub_10024870
mov     esi, eax
cmp     esi, 1eh
jle     short loc_100463b6
mov     esi, 1eh
jmp     short loc_100463bc
test    esi, esi
jns     short loc_100463bc
xor     esi, esi
mov     eax, [edi]
cmp     byte ptr [eax+1eh], 5
jz      loc_100464fd
movzx   ecx, word ptr [eax+1ch]
fldz
test    cl, 8
jz      short loc_100463d8
fld     qword ptr [eax+8]
jmp     short loc_1004640a
test    cl, 4
jz      short loc_100463e2
fild    qword ptr [eax+10h]
jmp     short loc_1004640a
test    cl, 12h
jz      short loc_1004644a
mov     edx, [eax+4]
fstp    [esp+40h+var_8]
lea     ecx, [esp+40h+var_8]
push    ecx
mov     ecx, [eax+18h]
push    edx
mov     dl, [eax+1fh]
call    sub_1000bd50
fld     [esp+48h+var_8]
fldz
add     esp, 8
fxch    st(1)
fst     [esp+40h+var_8]
test    esi, esi
jnz     short loc_10046485
fcom    st(1)
fnstsw  ax
fld     ds:dbl_1007cfb0
test    ah, 1
jnz     short loc_1004644e
fcom    st(1)
fnstsw  ax
test    ah, 41h
jnz     short loc_1004644e
fstp    st(2)
fstp    st(1)
fadd    ds:dbl_1007cf78
call    __ftol2
mov     dword ptr [esp+40h+var_8], eax
mov     dword ptr [esp+40h+var_8+4], edx
fild    [esp+40h+var_8]
jmp     loc_100464e9
fld     st
jmp     short loc_1004640a
fxch    st(2)
fcomp   st(1)
fnstsw  ax
test    ah, 41h
jnz     short loc_10046485
fld     st
fchs
fcom    st(2)
fnstsw  ax
fstp    st(2)
test    ah, 5
jp      short loc_10046485
fstp    st
fadd    ds:dbl_1007cf78
call    __ftol2
mov     dword ptr [esp+40h+var_8], eax
mov     dword ptr [esp+40h+var_8+4], edx
fild    [esp+40h+var_8]
fchs
jmp     short loc_100464e9
sub     esp, 8
fstp    st(1)
fstp    [esp+48h+var_48]
push    esi
push    offset asc_1007b654
call    sub_1000b020
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     short loc_100464b3
mov     eax, [ebp+arg_0]
push    eax
call    sub_10029950
add     esp, 4
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi], 0
mov     eax, esi
jz      short loc_100464c6
lea     ebx, [ebx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100464c0
sub     eax, esi
lea     ecx, [esp+40h+var_8]
push    ecx
and     eax, 3fffffffh
push    esi
mov     dl, 1
mov     ecx, eax
call    sub_1000bd50
push    esi
call    sub_10009770
fld     [esp+4ch+var_8]
add     esp, 0ch
mov     esi, [ebp+arg_0]
sub     esp, 8
add     esi, 8
fstp    [esp+48h+var_48]
call    sub_10024bc0
add     esp, 8
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [edi+8]
mov     eax, [eax+48h]
mov     ecx, [ebp+arg_0]
cdq
push    esi
cmp     [ebp+arg_4], edx
jl      short loc_10046539
jg      short loc_1004652a
cmp     ecx, eax
jbe     short loc_10046539
push    edi
call    sub_100298c0
add     esp, 4
xor     eax, eax
pop     esi
pop     ecx
pop     ebp
retn
push    ecx
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_10046553
push    edi
call    sub_10029950
add     esp, 4
mov     eax, esi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [esi]
mov     bl, 1
call    sub_100253e0
mov     edi, [esi]
test    byte ptr [edi+1ch], 10h
mov     [esp+18h+var_8], eax
jnz     short loc_10046591
call    sub_100253e0
test    eax, eax
jnz     short loc_10046591
xor     esi, esi
jmp     short loc_100465a2
mov     esi, [edi+18h]
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_100465a2
add     esi, [edi+10h]
cmp     [esp+18h+var_8], 0
jz      loc_10046643
mov     ebx, [ebp+arg_0]
mov     eax, esi
cdq
mov     ecx, edx
mov     edx, [ebx+8]
mov     edi, eax
mov     eax, [edx+48h]
add     edi, 1
cdq
adc     ecx, 0
cmp     ecx, edx
jl      short loc_100465ce
jg      short loc_1004663a
cmp     edi, eax
ja      short loc_1004663a
push    edi
call    sub_100094a0
add     esp, 4
mov     [esp+18h+var_4], eax
test    eax, eax
jnz     short loc_100465ef
push    ebx
call    sub_10029950
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jle     short loc_10046620
mov     ecx, [esp+18h+var_8]
mov     edi, eax
sub     edi, ecx
mov     eax, esi
lea     ecx, [ecx+0]
mov     dl, [ecx]
movzx   ebx, dl
mov     bl, ds:byte_10076130[ebx]
and     bl, 20h
not     bl
and     bl, dl
mov     [edi+ecx], bl
inc     ecx
dec     eax
jnz     short loc_10046600
mov     ebx, [ebp+arg_0]
mov     eax, [esp+18h+var_4]
push    1
push    eax
mov     eax, offset sub_10009770
mov     ecx, esi
lea     edx, [ebx+8]
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short loc_10046643
push    ebx
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [esi]
mov     bl, 1
call    sub_100253e0
mov     edi, [esi]
test    byte ptr [edi+1ch], 10h
mov     [esp+10h+var_4], eax
jnz     short loc_1004667f
call    sub_100253e0
test    eax, eax
jnz     short loc_1004667f
xor     ebx, ebx
jmp     short loc_10046690
mov     ebx, [edi+18h]
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_10046690
add     ebx, [edi+10h]
cmp     [esp+10h+var_4], 0
jz      loc_10046739
mov     esi, [ebp+arg_0]
mov     eax, ebx
cdq
mov     ecx, edx
mov     edx, [esi+8]
mov     edi, eax
mov     eax, [edx+48h]
add     edi, 1
cdq
adc     ecx, 0
cmp     ecx, edx
jl      short loc_100466cc
jg      short loc_100466bc
cmp     edi, eax
jbe     short loc_100466cc
push    esi
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    edi
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_100466ee
mov     eax, [ebp+arg_0]
push    eax
call    sub_10029950
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    ebx, ebx
jle     short loc_10046710
mov     edi, [esp+10h+var_4]
mov     ecx, esi
sub     edi, esi
mov     eax, ebx
lea     esp, [esp+0]
movzx   edx, byte ptr [edi+ecx]
mov     dl, ds:byte_10076030[edx]
mov     [ecx], dl
inc     ecx
dec     eax
jnz     short loc_10046700
mov     edx, [ebp+arg_0]
push    1
push    esi
mov     eax, offset sub_10009770
mov     ecx, ebx
add     edx, 8
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short loc_10046739
mov     eax, [ebp+arg_0]
push    eax
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
cmp     dword_10080234, 0
push    ebx
push    esi
push    edi
mov     esi, 8
lea     edi, [esp+18h+var_8]
jnz     short loc_10046762
xor     ebx, ebx
jmp     short loc_10046780
push    5
call    dword_10080274
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10046780
push    ebx
call    dword_1008027c
add     esp, 4
lea     ecx, [ecx+0]
call    sub_1000b190
mov     [edi], al
inc     edi
dec     esi
jnz     short loc_10046780
test    ebx, ebx
jz      short loc_10046799
push    ebx
call    dword_10080284
add     esp, 4
mov     ebx, [esp+18h+var_4]
mov     edi, [esp+18h+var_8]
test    ebx, ebx
jg      short loc_100467b8
jl      short loc_100467ab
test    edi, edi
jnb     short loc_100467b8
and     ebx, 7fffffffh
neg     edi
adc     ebx, 0
neg     ebx
mov     esi, [ebp+arg_0]
mov     eax, 2460h
test    [esi+24h], ax
jz      short loc_100467ce
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
xor     eax, eax
mov     [esi+18h], edi
mov     ecx, 4
pop     edi
mov     [esi+1ch], ebx
mov     [esi+0ch], eax
mov     [esi+2ch], eax
mov     [esi+28h], eax
mov     [esi+24h], cx
mov     byte ptr [esi+26h], 1
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_8]
mov     ecx, [eax]
push    ebx
push    esi
push    edi
call    sub_10024870
mov     esi, eax
cmp     esi, 1
jge     short loc_10046820
mov     esi, 1
mov     edi, [ebp+arg_0]
mov     eax, esi
cdq
mov     ecx, edx
mov     edx, [edi+8]
mov     ebx, eax
mov     eax, [edx+48h]
cdq
cmp     ecx, edx
jl      short loc_1004684d
jg      short loc_1004683b
cmp     ebx, eax
jbe     short loc_1004684d
mov     eax, edi
push    eax
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
call    sub_100094a0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_1004686e
mov     ecx, edi
push    ecx
call    sub_10029950
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
call    sub_1000b290
push    0
push    ebx
mov     eax, offset sub_10009770
mov     ecx, esi
lea     edx, [edi+8]
call    sub_10024e60
add     esp, 10h
cmp     eax, 12h
jnz     short loc_1004689a
mov     edx, edi
push    edx
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
mov     ebx, [eax+20h]
push    edi
mov     edi, [eax+1ch]
mov     eax, 2460h
test    [esi+24h], ax
jz      short loc_100468d9
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
xor     eax, eax
mov     [esi+18h], edi
mov     ecx, 4
pop     edi
mov     [esi+1ch], ebx
mov     [esi+0ch], eax
mov     [esi+2ch], eax
mov     [esi+28h], eax
mov     [esi+24h], cx
mov     byte ptr [esi+26h], 1
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
mov     ecx, 2460h
push    edi
mov     edi, [eax+40h]
test    [esi+24h], cx
jz      short loc_10046934
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
xor     eax, eax
mov     [esi+0ch], eax
mov     [esi+2ch], eax
mov     [esi+28h], eax
mov     eax, edi
cdq
mov     [esi+1ch], edx
mov     edx, 4
pop     edi
mov     [esi+18h], eax
mov     [esi+24h], dx
mov     byte ptr [esi+26h], 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
mov     ecx, 2460h
push    edi
mov     edi, [eax+44h]
test    [esi+24h], cx
jz      short loc_10046994
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
xor     eax, eax
mov     [esi+0ch], eax
mov     [esi+2ch], eax
mov     [esi+28h], eax
mov     eax, edi
cdq
mov     [esi+1ch], edx
mov     edx, 4
pop     edi
mov     [esi+18h], eax
mov     [esi+24h], dx
mov     byte ptr [esi+26h], 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_8]
movzx   edx, byte ptr [eax]
movzx   ecx, byte ptr [eax+1]
mov     [ebp+var_2], dl
movzx   edx, byte ptr [eax+3]
push    ebx
mov     [ebp+var_1], cl
movzx   ecx, byte ptr [eax+2]
push    esi
push    edi
mov     [ebp+var_4], dl
mov     edx, [ebp+arg_0]
xor     ebx, ebx
lea     edi, [ebp+arg_0]
mov     [ebp+var_3], cl
mov     [ebp+var_c], ebx
call    sub_1000b2f0
mov     esi, eax
test    esi, esi
jz      loc_10046b7b
test    ebx, ebx
jnz     short loc_10046a41
movzx   eax, [ebp+var_2]
cmp     esi, eax
jz      loc_10046b8c
movzx   ecx, [ebp+var_1]
cmp     esi, ecx
jnz     short loc_10046a41
mov     edx, [ebp+arg_4]
lea     edi, [ebp+arg_4]
call    sub_1000b2f0
test    eax, eax
jz      loc_10046bed
jmp     loc_10046b66
movzx   edx, [ebp+var_3]
cmp     esi, edx
jnz     loc_10046b1b
mov     edx, [ebp+arg_4]
xor     esi, esi
lea     edi, [ebp+arg_4]
mov     [ebp+var_8], esi
mov     [ebp+var_10], esi
call    sub_1000b2f0
mov     ebx, eax
test    ebx, ebx
jz      loc_10046bed
mov     edx, [ebp+arg_0]
lea     edi, [ebp+arg_0]
call    sub_1000b2f0
cmp     eax, 5eh
jnz     short loc_10046a89
mov     edx, [ebp+arg_0]
mov     [ebp+var_10], 1
call    sub_1000b2f0
cmp     eax, 5dh
jnz     short loc_10046aa4
cmp     ebx, eax
jnz     short loc_10046a99
mov     [ebp+var_8], 1
mov     edx, [ebp+arg_0]
lea     edi, [ebp+arg_0]
call    sub_1000b2f0
test    eax, eax
jz      loc_10046bed
lea     esp, [esp+0]
cmp     eax, 5dh
jz      short loc_10046b0a
mov     edx, [ebp+arg_0]
cmp     eax, 2dh
jnz     short loc_10046aea
mov     cl, [edx]
cmp     cl, 5dh
jz      short loc_10046aea
test    cl, cl
jz      short loc_10046aea
test    esi, esi
jz      short loc_10046aea
lea     edi, [ebp+arg_0]
call    sub_1000b2f0
cmp     ebx, esi
jb      short loc_10046ae3
cmp     ebx, eax
ja      short loc_10046ae3
mov     [ebp+var_8], 1
mov     edx, [ebp+arg_0]
xor     esi, esi
jmp     short loc_10046af7
cmp     ebx, eax
jnz     short loc_10046af5
mov     [ebp+var_8], 1
mov     esi, eax
lea     edi, [ebp+arg_0]
call    sub_1000b2f0
test    eax, eax
jnz     short loc_10046ab0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_10]
xor     eax, [ebp+var_8]
jz      loc_10046bed
mov     ebx, [ebp+var_c]
jmp     short loc_10046b66
cmp     [ebp+arg_c], esi
jnz     short loc_10046b2b
test    ebx, ebx
jnz     short loc_10046b2b
mov     ebx, 1
jmp     short loc_10046b63
mov     edx, [ebp+arg_4]
lea     edi, [ebp+arg_4]
call    sub_1000b2f0
cmp     [ebp+var_4], 0
jz      short loc_10046b59
test    esi, 0ffffff80h
jnz     short loc_10046b4b
movzx   esi, ds:byte_10076030[esi]
test    eax, 0ffffff80h
jnz     short loc_10046b59
movzx   eax, ds:byte_10076030[eax]
cmp     esi, eax
jnz     loc_10046bed
xor     ebx, ebx
mov     [ebp+var_c], ebx
mov     edx, [ebp+arg_0]
lea     edi, [ebp+arg_0]
call    sub_1000b2f0
mov     esi, eax
test    esi, esi
jnz     loc_10046a11
mov     ecx, [ebp+arg_4]
xor     eax, eax
cmp     [ecx], al
pop     edi
pop     esi
setz    al
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   ebx, [ebp+var_2]
mov     edx, [ebp+arg_0]
lea     edi, [ebp+arg_0]
call    sub_1000b2f0
mov     esi, eax
cmp     esi, ebx
jz      short loc_10046ba9
movzx   eax, [ebp+var_1]
cmp     esi, eax
jnz     short loc_10046bc7
movzx   ecx, [ebp+var_1]
cmp     esi, ecx
jnz     short loc_10046b90
mov     edx, [ebp+arg_4]
lea     edi, [ebp+arg_4]
call    sub_1000b2f0
test    eax, eax
jnz     short loc_10046b90
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jnz     short loc_10046bd7
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     esi, [ebp+arg_c]
jnz     short loc_10046bf6
mov     edx, [ebp+arg_0]
lea     edi, [ebp+arg_0]
call    sub_1000b2f0
mov     esi, eax
test    esi, esi
jnz     short loc_10046c52
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   edx, [ebp+var_3]
cmp     esi, edx
jnz     short loc_10046c52
mov     esi, [ebp+arg_4]
cmp     byte ptr [esi], 0
jz      short loc_10046c44
mov     edi, [ebp+arg_0]
mov     ebx, [ebp+arg_c]
dec     edi
lea     ecx, [ecx+0]
mov     eax, [ebp+arg_8]
push    ebx
push    eax
push    esi
push    edi
call    sub_100469d0
add     esp, 10h
test    eax, eax
jnz     short loc_10046c44
mov     cl, [esi]
inc     esi
cmp     cl, 0c0h
jb      short loc_10046c3f
mov     dl, [esi]
and     dl, 0c0h
cmp     dl, 80h
jnz     short loc_10046c3f
mov     al, [esi+1]
inc     esi
and     al, 0c0h
cmp     al, 80h
jz      short loc_10046c35
cmp     byte ptr [esi], 0
jnz     short loc_10046c10
xor     eax, eax
cmp     [esi], al
pop     edi
pop     esi
setnz   al
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
lea     edi, [ebp+arg_4]
call    sub_1000b2f0
test    eax, eax
jz      short loc_10046bed
cmp     [ebp+var_4], 0
jz      short loc_10046cb8
test    eax, 0ffffff80h
jnz     short loc_10046c75
movzx   eax, ds:byte_10076030[eax]
test    esi, 0ffffff80h
jnz     short loc_10046c84
movzx   esi, ds:byte_10076030[esi]
test    eax, eax
jz      loc_10046bed
lea     esp, [esp+0]
cmp     eax, esi
jz      short loc_10046cd2
mov     edx, [ebp+arg_4]
lea     edi, [ebp+arg_4]
call    sub_1000b2f0
test    eax, 0ffffff80h
jnz     short loc_10046cad
movzx   eax, ds:byte_10076030[eax]
test    eax, eax
jnz     short loc_10046c90
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     eax, esi
jz      short loc_10046cd2
mov     edx, [ebp+arg_4]
lea     edi, [ebp+arg_4]
call    sub_1000b2f0
test    eax, eax
jnz     short loc_10046cb8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jz      loc_10046bed
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
mov     ebx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    ebx
push    eax
call    sub_100469d0
add     esp, 10h
test    eax, eax
jnz     loc_10046bcb
lea     edi, [ebp+arg_4]
mov     edx, ebx
call    sub_1000b2f0
test    eax, eax
jnz     loc_10046c61
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     ecx, [ebp+arg_8]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
push    edi
mov     edi, [ecx]
mov     bl, 1
mov     [ebp+var_8], 0
mov     [ebp+var_4], eax
call    sub_100253e0
mov     edx, [ebp+arg_8]
mov     edi, [edx+4]
mov     [ebp+var_10], eax
call    sub_100253e0
mov     [ebp+var_c], eax
mov     eax, [ebp+arg_8]
mov     edi, [eax]
test    byte ptr [edi+1ch], 10h
jnz     short loc_10046d6a
call    sub_100253e0
test    eax, eax
jz      short loc_10046d7b
mov     eax, [edi+18h]
mov     ecx, 4000h
test    [edi+1ch], cx
jz      short loc_10046d7b
add     eax, [edi+10h]
mov     edx, [ebp+var_4]
cmp     eax, [edx+68h]
jle     short loc_10046df7
mov     eax, esi
mov     dword ptr [eax+38h], 1
mov     eax, [esi+8]
test    eax, eax
jz      short loc_10046d98
mov     ecx, [eax+48h]
jmp     short loc_10046d9d
mov     ecx, 3b9aca00h
xor     ebx, ebx
test    ecx, ecx
js      short loc_10046db1
cmp     ds:byte_1007b65c[ebx], 0
jz      short loc_10046db1
inc     ebx
cmp     ebx, ecx
jle     short loc_10046da3
lea     eax, [ebx+1]
cmp     ebx, ecx
jg      loc_10046eb4
push    0
lea     edi, [esi+8]
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     loc_10046eb4
mov     ecx, [esi+0ch]
lea     eax, [ebx+1]
push    eax
push    offset byte_1007b65c
push    ecx
call    memcpy
mov     [esi+20h], ebx
add     esp, 0ch
mov     dword ptr [esi+24h], 1030202h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_4], 3
jnz     loc_10046e8b
mov     eax, [ebp+arg_8]
mov     edi, [eax+8]
mov     bl, 1
call    sub_100253e0
mov     ebx, eax
test    ebx, ebx
jz      loc_10046eb4
or      edx, 0ffffffffh
mov     ecx, ebx
call    sub_1000b8c0
cmp     eax, 1
jz      short loc_10046e7f
mov     ecx, esi
mov     dword ptr [ecx+38h], 1
mov     eax, [esi+8]
test    eax, eax
jz      short loc_10046e3c
mov     ecx, [eax+48h]
jmp     short loc_10046e41
mov     ecx, 3b9aca00h
xor     ebx, ebx
test    ecx, ecx
js      short loc_10046e55
cmp     ds:byte_1007b680[ebx], 0
jz      short loc_10046e55
inc     ebx
cmp     ebx, ecx
jle     short loc_10046e47
lea     eax, [ebx+1]
cmp     ebx, ecx
jg      short loc_10046eb4
push    0
lea     edi, [esi+8]
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10046eb4
mov     edx, [esi+0ch]
lea     eax, [ebx+1]
push    eax
push    offset byte_1007b680
push    edx
jmp     loc_10046dde
lea     edi, [ebp+arg_8]
mov     edx, ebx
call    sub_1000b2f0
jmp     short loc_10046e8e
mov     eax, [ebp+var_8]
mov     edi, [ebp+var_c]
test    edi, edi
jz      short loc_10046eb4
mov     edx, [ebp+var_10]
test    edx, edx
jz      short loc_10046eb4
mov     ecx, [esi]
mov     ecx, [ecx+4]
push    eax
push    ecx
push    edi
push    edx
call    sub_100469d0
push    eax
push    esi
call    sub_10029540
add     esp, 18h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx+34h]
push    esi
mov     esi, [ebp+arg_8]
mov     ecx, [esi]
push    eax
mov     eax, [esi+4]
call    sub_10025020
add     esp, 4
test    eax, eax
jz      short loc_10046f3f
mov     esi, [esi]
add     ebx, 8
mov     eax, 2460h
mov     [ebp+arg_0], esi
test    [ebx+1ch], ax
jz      short loc_10046efa
mov     eax, ebx
call    sub_10024760
push    edi
mov     ecx, 9
mov     edi, ebx
rep movsd
mov     ecx, 0fbffh
and     [ebx+1ch], cx
mov     ax, [ebx+1ch]
pop     edi
test    al, 12h
jz      short loc_10046f3f
mov     edx, [ebp+arg_0]
mov     cx, [edx+1ch]
mov     edx, 800h
and     cx, dx
xor     edx, edx
cmp     dx, cx
jnz     short loc_10046f3f
or      eax, 1000h
mov     [ebx+1ch], ax
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
jmp     sub_10024530
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
add     esi, 8
push    edi
test    eax, eax
jz      short loc_10046f69
mov     ebx, [eax+48h]
jmp     short loc_10046f6e
mov     ebx, 3b9aca00h
xor     edi, edi
test    ebx, ebx
js      short loc_10046f82
cmp     ds:byte_10076028[edi], 0
jz      short loc_10046f82
inc     edi
cmp     edi, ebx
jle     short loc_10046f74
xor     eax, eax
mov     [ebp+var_4], 202h
push    esi
cmp     eax, offset sub_10009760
jnz     short loc_10046fa8
call    sub_100247d0
mov     eax, offset byte_10076028
mov     [esi+4], eax
mov     [esi+24h], eax
mov     eax, [ebp+var_4]
jmp     short loc_10046fb9
call    sub_100247d0
mov     dword ptr [esi+4], offset byte_10076028
mov     eax, 0a02h
add     esp, 4
mov     [esi+18h], edi
cmp     edi, ebx
pop     edi
mov     dword ptr [esi+20h], 0
mov     [esi+1ch], ax
mov     word ptr [esi+1eh], 103h
pop     esi
pop     ebx
jle     short loc_10046fe3
mov     ecx, [ebp+arg_0]
push    ecx
call    sub_100298c0
add     esp, 4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
add     esi, 8
push    edi
test    eax, eax
jz      short loc_10047009
mov     ebx, [eax+48h]
jmp     short loc_1004700e
mov     ebx, 3b9aca00h
xor     edi, edi
test    ebx, ebx
js      short loc_10047022
cmp     ds:byte_1007cc98[edi], 0
jz      short loc_10047022
inc     edi
cmp     edi, ebx
jle     short loc_10047014
xor     eax, eax
mov     [ebp+var_4], 202h
push    esi
cmp     eax, offset sub_10009760
jnz     short loc_10047048
call    sub_100247d0
mov     eax, offset byte_1007cc98
mov     [esi+4], eax
mov     [esi+24h], eax
mov     eax, [ebp+var_4]
jmp     short loc_10047059
call    sub_100247d0
mov     dword ptr [esi+4], offset byte_1007cc98
mov     eax, 0a02h
add     esp, 4
mov     [esi+18h], edi
cmp     edi, ebx
pop     edi
mov     dword ptr [esi+20h], 0
mov     [esi+1ch], ax
mov     word ptr [esi+1eh], 103h
pop     esi
pop     ebx
jle     short loc_10047083
mov     ecx, [ebp+arg_0]
push    ecx
call    sub_100298c0
add     esp, 4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [esi+4]
mov     bl, 1
call    sub_100253e0
mov     ecx, [esi]
push    eax
push    offset as
call    sub_10024870
push    eax
call    sub_1000b150
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_8]
push    ebx
push    esi
push    edi
mov     edi, [eax]
mov     bl, 1
call    sub_100253e0
xor     ebx, ebx
cmp     eax, ebx
jz      short loc_10047127
push    eax
call    sub_100065e0
mov     esi, [ebp+arg_0]
mov     ecx, 2460h
add     esp, 4
mov     edi, eax
test    [esi+24h], cx
jz      short loc_100470fd
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
mov     eax, edi
cdq
mov     [esi+1ch], edx
mov     edx, 4
mov     [esi+0ch], ebx
mov     [esi+2ch], ebx
mov     [esi+28h], ebx
mov     [esi+18h], eax
mov     [esi+24h], dx
mov     byte ptr [esi+26h], 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_8]
mov     ecx, [eax]
push    ebx
push    esi
call    sub_10024870
cmp     eax, 3
ja      short loc_1004714e
mov     ebx, ds:off_100762d8[eax*4]
jmp     short loc_10047150
xor     ebx, ebx
mov     esi, [ebp+arg_0]
add     esi, 8
test    ebx, ebx
jnz     short loc_100471a0
test    byte ptr [esi+1ch], 40h
jz      short loc_10047174
mov     eax, [esi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+1ch], 20h
jz      short loc_10047182
mov     ebx, [esi+10h]
call    sub_100117b0
mov     ax, [esi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [esi+1ch], ax
mov     byte ptr [esi+1eh], 5
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi]
test    eax, eax
jz      short loc_100471ae
mov     eax, [eax+48h]
mov     [ebp+arg_8], eax
jmp     short loc_100471b8
mov     [ebp+arg_8], 3b9aca00h
mov     eax, [ebp+arg_8]
push    edi
xor     edi, edi
test    eax, eax
js      short loc_100471cb
nop
cmp     byte ptr [edi+ebx], 0
jz      short loc_100471cb
inc     edi
cmp     edi, eax
jle     short loc_100471c0
xor     edx, edx
mov     [ebp+var_4], 202h
push    esi
cmp     edx, offset sub_10009760
jnz     short loc_100471ea
call    sub_100247d0
mov     eax, [ebp+var_4]
mov     [esi+24h], ebx
jmp     short loc_100471f4
call    sub_100247d0
mov     eax, 0a02h
add     esp, 4
cmp     edi, [ebp+arg_8]
mov     [esi+18h], edi
mov     dword ptr [esi+20h], 0
mov     [esi+4], ebx
mov     [esi+1ch], ax
mov     word ptr [esi+1eh], 103h
pop     edi
jle     short loc_10047220
mov     eax, [ebp+arg_0]
push    eax
call    sub_100298c0
add     esp, 4
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 74h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+74h+var_4], eax
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebx]
movzx   eax, byte ptr [edi+1eh]
dec     eax
mov     [esp+80h+var_4c], esi
cmp     eax, 3
ja      def_10047261
jmp     ds:jpt_10047261[eax*4]
push    edi
call    sub_100293a0
fst     [esp+84h+var_48]
push    ecx
fstp    [esp+88h+var_88]
push    offset a15g
lea     eax, [esp+8ch+src]
push    eax
push    32h
call    sub_1000b050
add     esp, 14h
lea     ecx, [esp+80h+var_40]
push    ecx
lea     edx, [esp+84h+src]
push    edx
mov     dl, 1
mov     ecx, 14h
call    sub_1000bd50
fld     [esp+88h+var_48]
fld     st
add     esp, 8
fld     [esp+80h+var_40]
fucompp
fnstsw  ax
test    ah, 44h
jnp     short loc_100472d2
sub     esp, 8
fstp    [esp+88h+var_88]
push    offset a20e
lea     eax, [esp+8ch+src]
push    eax
push    32h
call    sub_1000b050
add     esp, 14h
jmp     short loc_100472d4
fstp    st
mov     eax, [esi+8]
lea     edi, [esi+8]
test    eax, eax
jz      short loc_100472e3
mov     eax, [eax+48h]
jmp     short loc_100472e8
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_100472fc
mov     edi, edi
cmp     [esp+ebx+80h+src], 0
jz      short loc_100472fc
inc     ebx
cmp     ebx, eax
jle     short loc_100472f0
lea     esi, [ebx+1]
cmp     ebx, eax
jg      short loc_10047345
push    0
mov     eax, esi
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     loc_100475d7
mov     edx, [edi+4]
push    esi
lea     ecx, [esp+84h+src]
push    ecx
push    edx
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+74h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esp+80h+var_4c]
push    ecx
jmp     loc_100475cf
push    edi
push    esi
call    sub_100296e0
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+74h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    edi
call    sub_100292d0
mov     edx, [ebx]
add     esp, 4
push    edx
mov     dword ptr [esp+84h+var_48], eax
call    sub_10029320
mov     ebx, eax
cdq
add     esp, 4
add     eax, 2
adc     edx, 0
shld    edx, eax, 1
add     eax, eax
push    edx
push    eax
mov     edi, esi
call    sub_10046510
mov     esi, eax
add     esp, 8
test    esi, esi
jz      loc_100475d7
xor     eax, eax
test    ebx, ebx
jle     short loc_100473de
lea     edi, [esi+3]
mov     ecx, dword ptr [esp+80h+var_48]
movzx   edx, byte ptr [eax+ecx]
shr     edx, 4
movzx   edx, ds:byte_100768e4[edx]
mov     [edi-1], dl
movsx   ecx, byte ptr [eax+ecx]
and     ecx, 0fh
movzx   edx, ds:byte_100768e4[ecx]
mov     [edi], dl
inc     eax
add     edi, 2
cmp     eax, ebx
jl      short loc_100473b1
mov     edx, [esp+80h+var_4c]
mov     word ptr [esi+ebx*2+2], 27h
lea     edi, [edx+8]
mov     word ptr [esi], 2758h
mov     eax, [edi]
test    eax, eax
jz      short loc_100473fc
mov     eax, [eax+48h]
jmp     short loc_10047401
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_10047412
cmp     byte ptr [ebx+esi], 0
jz      short loc_10047412
inc     ebx
cmp     ebx, eax
jle     short loc_10047407
cmp     ebx, eax
jg      short loc_1004745d
push    0
lea     eax, [ebx+1]
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10047466
lea     eax, [ebx+1]
push    eax
mov     eax, [edi+4]
push    esi
push    eax
call    memcpy
add     esp, 0ch
push    esi
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+74h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    edx
call    sub_100298c0
add     esp, 4
push    esi
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+74h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     bl, 1
call    sub_100253e0
mov     edx, eax
mov     dword ptr [esp+80h+var_48], edx
test    edx, edx
jz      loc_100475d7
mov     cl, [edx]
xor     eax, eax
xor     ebx, ebx
xor     esi, esi
test    cl, cl
jz      short loc_100474b6
cmp     cl, 27h
jnz     short loc_100474ad
add     ebx, 1
adc     esi, 0
mov     cl, [eax+edx+1]
inc     eax
test    cl, cl
jnz     short loc_100474a2
cdq
mov     edi, eax
add     edi, ebx
mov     ebx, [esp+80h+var_4c]
mov     ecx, edx
mov     edx, [ebx+8]
mov     eax, [edx+48h]
adc     ecx, esi
add     edi, 3
cdq
adc     ecx, 0
cmp     ecx, edx
jl      short loc_100474e2
jg      loc_1004755b
cmp     edi, eax
ja      loc_1004755b
push    edi
call    sub_100094a0
add     esp, 4
test    eax, eax
jnz     short loc_1004750a
push    ebx
call    sub_10029950
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+74h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     edi, dword ptr [esp+80h+var_48]
mov     byte ptr [eax], 27h
cmp     byte ptr [edi], 0
mov     ecx, 1
jz      short loc_10047536
jmp     short loc_10047520
mov     dl, [edi]
mov     [eax+ecx], dl
inc     ecx
cmp     byte ptr [edi], 27h
jnz     short loc_10047530
mov     byte ptr [eax+ecx], 27h
inc     ecx
inc     edi
cmp     byte ptr [edi], 0
jnz     short loc_10047520
mov     byte ptr [eax+ecx], 27h
inc     ecx
push    1
mov     byte ptr [eax+ecx], 0
push    eax
mov     eax, offset sub_10009770
lea     edx, [ebx+8]
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     loc_100475d7
push    ebx
jmp     short loc_100475cf
mov     eax, [esi+8]
lea     edi, [esi+8]
test    eax, eax
jz      short loc_10047571
mov     eax, [eax+48h]
mov     [esp+80h+var_4c], eax
jmp     short loc_10047579
mov     [esp+80h+var_4c], 3b9aca00h
xor     ecx, ecx
mov     ebx, 2
push    edi
cmp     ecx, offset sub_10009760
jnz     short loc_1004759b
call    sub_100247d0
mov     eax, offset anull_0
mov     [edi+4], eax
mov     [edi+24h], eax
jmp     short loc_100475ac
call    sub_100247d0
mov     dword ptr [edi+4], offset anull_0
mov     ebx, 802h
mov     eax, 4
add     esp, 4
mov     dword ptr [edi+20h], 0
mov     [edi+18h], eax
mov     [edi+1ch], bx
mov     word ptr [edi+1eh], 103h
cmp     [esp+80h+var_4c], eax
jge     short loc_100475d7
push    esi
call    sub_100298c0
add     esp, 4
mov     ecx, [esp+80h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [esi]
test    byte ptr [edi+1ch], 12h
jz      short loc_1004764b
mov     eax, edi
call    sub_10024590
mov     ax, [edi+1ch]
mov     ecx, 0fffdh
and     ax, cx
or      ax, 10h
cmp     dword ptr [edi+18h], 0
mov     [edi+1ch], ax
jz      short loc_10047641
mov     edx, [edi+4]
mov     [esp+18h+var_8], edx
jmp     short loc_10047656
mov     [esp+18h+var_8], 0
jmp     short loc_10047656
mov     bl, 1
call    sub_100253e0
mov     [esp+18h+var_8], eax
mov     edi, [esi]
test    byte ptr [edi+1ch], 10h
jnz     short loc_1004766d
mov     bl, 1
call    sub_100253e0
test    eax, eax
jnz     short loc_1004766d
xor     esi, esi
jmp     short loc_1004767e
mov     esi, [edi+18h]
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_1004767e
add     esi, [edi+10h]
mov     ebx, [ebp+arg_0]
mov     eax, esi
cdq
shld    edx, eax, 1
mov     ecx, edx
mov     edx, [ebx+8]
lea     edi, [eax+eax]
mov     eax, [edx+48h]
add     edi, 1
cdq
adc     ecx, 0
cmp     ecx, edx
jl      short loc_100476b5
jg      short loc_100476a4
cmp     edi, eax
jbe     short loc_100476b5
push    ebx
call    sub_100298c0
add     esp, 4
xor     edi, edi
mov     [esp+18h+var_4], edi
jmp     short loc_100476d1
push    edi
call    sub_100094a0
mov     edi, eax
add     esp, 4
mov     [esp+18h+var_4], edi
test    edi, edi
jnz     short loc_100476d1
push    ebx
call    sub_10029950
add     esp, 4
mov     ecx, edi
test    edi, edi
jz      short loc_10047739
test    esi, esi
jle     short loc_10047712
mov     edx, esi
lea     ecx, [ecx+0]
mov     edi, [esp+18h+var_8]
movzx   eax, byte ptr [edi]
mov     ebx, eax
shr     ebx, 4
mov     bl, ds:byte_100768e4[ebx]
mov     [ecx], bl
and     eax, 0fh
mov     al, ds:byte_100768e4[eax]
mov     [ecx+1], al
inc     edi
add     ecx, 2
dec     edx
mov     [esp+18h+var_8], edi
jnz     short loc_100476e0
mov     ebx, [ebp+arg_0]
mov     edi, [esp+18h+var_4]
mov     byte ptr [ecx], 0
push    1
lea     ecx, [esi+esi]
push    edi
mov     eax, offset sub_10009770
lea     edx, [ebx+8]
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short loc_10047739
push    ebx
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_8]
mov     ecx, [eax]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [esi+8]
call    sub_10024870
mov     ebx, eax
mov     eax, [edi+48h]
mov     ecx, edx
cdq
cmp     ecx, edx
jl      short loc_1004777e
jg      short loc_1004776c
cmp     ebx, eax
jbe     short loc_1004777e
mov     ecx, esi
push    ecx
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, 2460h
mov     edi, ebx
test    [esi+24h], dx
jz      short loc_10047793
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
xor     eax, eax
mov     ecx, 4010h
mov     [esi+0ch], eax
mov     [esi+2ch], eax
mov     [esi+28h], eax
mov     [esi+24h], cx
mov     byte ptr [esi+26h], 4
mov     [esi+20h], eax
cmp     ebx, eax
jge     short loc_100477bf
xor     edi, edi
mov     [esi+18h], edi
pop     edi
mov     byte ptr [esi+27h], 1
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 34h
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [esi]
mov     bl, 1
call    sub_100253e0
mov     [esp+40h+var_18], eax
test    eax, eax
jz      loc_10047a6d
mov     edi, [esi]
test    byte ptr [edi+1ch], 10h
jnz     short loc_1004780b
call    sub_100253e0
test    eax, eax
jnz     short loc_1004780b
mov     [esp+40h+var_28], eax
jmp     short loc_10047829
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_10047822
mov     eax, [edi+18h]
add     eax, [edi+10h]
mov     [esp+40h+var_28], eax
jmp     short loc_10047829
mov     ecx, [edi+18h]
mov     [esp+40h+var_28], ecx
mov     edi, [esi+4]
mov     bl, 1
call    sub_100253e0
mov     [esp+40h+var_14], eax
test    eax, eax
jz      loc_10047a6d
cmp     byte ptr [eax], 0
jnz     short loc_1004785a
mov     edx, [esi]
mov     eax, [ebp+arg_0]
push    edx
push    eax
call    sub_100296e0
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [esi+4]
test    byte ptr [edi+1ch], 10h
jnz     short loc_10047872
call    sub_100253e0
test    eax, eax
jnz     short loc_10047872
mov     [esp+40h+var_24], eax
jmp     short loc_10047890
mov     ecx, 4000h
test    [edi+1ch], cx
jz      short loc_10047889
mov     eax, [edi+18h]
add     eax, [edi+10h]
mov     [esp+40h+var_24], eax
jmp     short loc_10047890
mov     edx, [edi+18h]
mov     [esp+40h+var_24], edx
mov     edi, [esi+8]
mov     bl, 1
call    sub_100253e0
mov     [esp+40h+src], eax
test    eax, eax
jz      loc_10047a6d
mov     eax, [esi+8]
push    eax
call    sub_10029320
mov     edi, [ebp+arg_0]
mov     [esp+44h+size], eax
mov     eax, [esp+44h+var_28]
inc     eax
cdq
add     esp, 4
push    edx
push    eax
mov     [esp+48h+var_8], eax
mov     [esp+48h+var_4], edx
call    sub_10046510
mov     esi, eax
add     esp, 8
test    esi, esi
jz      loc_10047a6d
mov     eax, [esp+40h+var_28]
mov     edx, [esp+40h+var_24]
mov     edi, 0
sub     eax, edx
mov     ebx, edi
mov     [esp+40h+var_c], eax
mov     [esp+40h+var_20], edi
mov     [esp+40h+var_2c], ebx
js      loc_10047a20
mov     edi, edi
mov     ecx, [esp+40h+var_18]
mov     al, [ebx+ecx]
lea     edi, [ebx+ecx]
mov     ecx, [esp+40h+var_14]
mov     [esp+40h+var_2d], al
cmp     al, [ecx]
jnz     loc_10047a01
mov     eax, edx
cmp     edx, 4
jb      short loc_10047939
mov     ebx, [edi]
cmp     ebx, [ecx]
jnz     loc_100479fd
sub     eax, 4
add     ecx, 4
add     edi, 4
cmp     eax, 4
jnb     short loc_10047921
test    eax, eax
jz      short loc_10047969
mov     bl, [ecx]
cmp     bl, [edi]
jnz     loc_100479fd
cmp     eax, 1
jbe     short loc_10047969
mov     bl, [ecx+1]
cmp     bl, [edi+1]
jnz     loc_100479fd
cmp     eax, 2
jbe     short loc_10047969
mov     al, [ecx+2]
cmp     al, [edi+2]
jnz     loc_100479fd
mov     eax, [esp+40h+size]
mov     ebx, [esp+40h+var_8]
mov     ecx, [ebp+arg_0]
sub     eax, edx
cdq
add     ebx, eax
adc     [esp+40h+var_4], edx
mov     edx, [ecx+8]
mov     eax, [edx+48h]
mov     ecx, [esp+40h+var_4]
mov     [esp+40h+var_8], ebx
sub     ebx, 1
cdq
sbb     ecx, 0
cmp     ecx, edx
jg      loc_10047a74
jl      short loc_100479a4
cmp     ebx, eax
ja      loc_10047a74
mov     edi, esi
call    sub_1006edd0
test    eax, eax
jnz     loc_10047a90
mov     eax, [esp+40h+var_8]
push    eax
push    esi
call    sub_10009890
mov     esi, eax
add     esp, 8
test    esi, esi
jz      loc_10047a90
mov     ebx, [esp+40h+size]
mov     ecx, [esp+40h+src]
mov     edi, [esp+40h+var_20]
push    ebx
push    ecx
lea     edx, [edi+esi]
push    edx
call    memcpy
mov     eax, [esp+4ch+var_2c]
mov     ecx, [esp+4ch+var_24]
lea     edx, [eax+ecx-1]
add     esp, 0ch
add     edi, ebx
mov     [esp+40h+var_2c], edx
mov     ebx, edx
mov     edx, ecx
jmp     short loc_10047a0d
mov     ebx, [esp+40h+var_2c]
mov     edi, [esp+40h+var_20]
mov     al, [esp+40h+var_2d]
mov     [edi+esi], al
inc     edi
inc     ebx
mov     [esp+40h+var_20], edi
mov     [esp+40h+var_2c], ebx
cmp     ebx, [esp+40h+var_c]
jle     loc_10047900
mov     eax, [esp+40h+var_28]
mov     ecx, [esp+40h+var_18]
sub     eax, ebx
push    eax
lea     edx, [ebx+ecx]
push    edx
lea     eax, [edi+esi]
push    eax
call    memcpy
mov     eax, [esp+4ch+var_28]
sub     eax, ebx
add     esp, 0ch
add     edi, eax
push    1
mov     byte ptr [edi+esi], 0
push    esi
mov     esi, [ebp+arg_0]
lea     edx, [esi+8]
mov     eax, offset sub_10009770
mov     ecx, edi
call    sub_10024e60
add     esp, 8
cmp     eax, 12h
jnz     short loc_10047a6d
push    esi
call    sub_100298c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_0]
push    ecx
call    sub_100298c0
add     esp, 4
push    esi
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_0]
push    edx
call    sub_10029950
add     esp, 4
push    edi
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [esi]
cmp     byte ptr [edi+1eh], 5
jz      loc_10047f09
mov     bl, 1
call    sub_100253e0
mov     [esp+30h+src], eax
test    eax, eax
jz      loc_10047f09
mov     edi, [esi]
test    byte ptr [edi+1ch], 10h
jnz     short loc_10047af5
call    sub_100253e0
test    eax, eax
jnz     short loc_10047af5
mov     [esp+30h+var_14], eax
jmp     short loc_10047b13
mov     eax, 4000h
test    [edi+1ch], ax
jz      short loc_10047b0c
mov     eax, [edi+18h]
add     eax, [edi+10h]
mov     [esp+30h+var_14], eax
jmp     short loc_10047b13
mov     ecx, [edi+18h]
mov     [esp+30h+var_14], ecx
mov     edx, [esp+30h+var_14]
mov     ecx, 1
mov     [esp+30h+size], edx
cmp     [ebp+arg_4], ecx
jnz     short loc_10047b46
mov     [esp+30h+var_18], ecx
mov     [esp+30h+var_c], offset byte_100762d7
mov     [esp+30h+var_10], offset off_100768f4
mov     [esp+30h+var_8], 0
jmp     loc_10047c4c
mov     edi, [esi+4]
mov     bl, cl
call    sub_100253e0
mov     esi, eax
mov     [esp+30h+var_8], esi
test    esi, esi
jz      loc_10047f09
xor     ebx, ebx
cmp     [esi], bl
jz      loc_10047db4
mov     cl, [eax]
inc     eax
cmp     cl, 0c0h
jb      short loc_10047b8c
mov     dl, [eax]
and     dl, 0c0h
cmp     dl, 80h
jnz     short loc_10047b8c
lea     ebx, [ebx+0]
mov     cl, [eax+1]
inc     eax
and     cl, 0c0h
cmp     cl, 80h
jz      short loc_10047b80
inc     ebx
cmp     byte ptr [eax], 0
jnz     short loc_10047b68
test    ebx, ebx
jle     loc_10047db4
mov     eax, ebx
cdq
mov     edi, eax
mov     ecx, edx
shld    edx, eax, 2
add     eax, eax
add     eax, eax
add     edi, eax
adc     ecx, edx
mov     edx, [ebp+arg_0]
mov     eax, [edx+8]
mov     eax, [eax+48h]
cdq
cmp     ecx, edx
jl      short loc_10047bd1
jg      short loc_10047bc1
cmp     edi, eax
jbe     short loc_10047bd1
mov     ecx, [ebp+arg_0]
push    ecx
call    sub_100298c0
add     esp, 4
xor     edi, edi
jmp     short loc_10047bec
push    edi
call    sub_100094a0
mov     edi, eax
add     esp, 4
test    edi, edi
jnz     short loc_10047bec
mov     edx, [ebp+arg_0]
push    edx
call    sub_10029950
add     esp, 4
mov     [esp+30h+var_10], edi
test    edi, edi
jz      loc_10047f09
xor     ecx, ecx
lea     ebx, [edi+ebx*4]
mov     [esp+30h+var_c], ebx
mov     eax, esi
cmp     [esi], cl
jz      loc_10047db4
jmp     short loc_10047c10
mov     [edi+ecx*4], eax
mov     dl, [eax]
inc     eax
cmp     dl, 0c0h
jb      short loc_10047c31
mov     dl, [eax]
and     dl, 0c0h
cmp     dl, 80h
jnz     short loc_10047c31
mov     dl, [eax+1]
inc     eax
and     dl, 0c0h
cmp     dl, 80h
jz      short loc_10047c25
mov     dl, al
sub     dl, [edi+ecx*4]
inc     ecx
mov     [ecx+ebx-1], dl
cmp     byte ptr [eax], 0
jnz     short loc_10047c10
mov     [esp+30h+var_18], ecx
test    ecx, ecx
jle     loc_10047db4
mov     eax, [ebp+arg_0]
mov     edx, [eax]
mov     eax, [edx+4]
mov     [esp+30h+var_4], eax
test    al, 1
jz      loc_10047d01
cmp     [esp+30h+var_14], 0
jle     loc_10047d01
xor     edx, edx
test    ecx, ecx
jle     loc_10047d01
jmp     short loc_10047c80
mov     eax, [esp+30h+var_c]
movzx   esi, byte ptr [edx+eax]
cmp     esi, [esp+30h+size]
jg      short loc_10047cd8
mov     ecx, [esp+30h+var_10]
mov     ecx, [ecx+edx*4]
mov     edi, [esp+30h+src]
mov     eax, esi
cmp     esi, 4
jb      short loc_10047cb4
mov     ebx, [edi]
cmp     ebx, [ecx]
jnz     short loc_10047cd8
sub     eax, 4
add     ecx, 4
add     edi, 4
cmp     eax, 4
jnb     short loc_10047ca0
test    eax, eax
jz      short loc_10047ce3
mov     bl, [ecx]
cmp     bl, [edi]
jnz     short loc_10047cd8
cmp     eax, 1
jbe     short loc_10047ce3
mov     bl, [ecx+1]
cmp     bl, [edi+1]
jnz     short loc_10047cd8
cmp     eax, 2
jbe     short loc_10047ce3
mov     al, [ecx+2]
cmp     al, [edi+2]
jz      short loc_10047ce3
mov     ecx, [esp+30h+var_18]
inc     edx
cmp     edx, ecx
jl      short loc_10047c80
jmp     short loc_10047d01
mov     ecx, [esp+30h+var_18]
cmp     edx, ecx
jge     short loc_10047d01
mov     eax, [esp+30h+size]
add     [esp+30h+src], esi
sub     eax, esi
mov     [esp+30h+size], eax
test    eax, eax
jg      loc_10047c6b
test    byte ptr [esp+30h+var_4], 2
jz      loc_10047da0
cmp     [esp+30h+size], 0
jle     loc_10047da0
xor     edx, edx
test    ecx, ecx
jle     loc_10047da0
mov     ecx, [esp+30h+var_c]
movzx   esi, byte ptr [edx+ecx]
mov     eax, [esp+30h+size]
cmp     esi, eax
jg      short loc_10047d7d
mov     edi, [esp+30h+var_10]
mov     edi, [edi+edx*4]
sub     eax, esi
add     eax, [esp+30h+src]
mov     ecx, esi
cmp     esi, 4
jb      short loc_10047d59
mov     ebx, [eax]
cmp     ebx, [edi]
jnz     short loc_10047d7d
sub     ecx, 4
add     edi, 4
add     eax, 4
cmp     ecx, 4
jnb     short loc_10047d45
test    ecx, ecx
jz      short loc_10047d86
mov     bl, [edi]
cmp     bl, [eax]
jnz     short loc_10047d7d
cmp     ecx, 1
jbe     short loc_10047d86
mov     bl, [edi+1]
cmp     bl, [eax+1]
jnz     short loc_10047d7d
cmp     ecx, 2
jbe     short loc_10047d86
mov     cl, [edi+2]
cmp     cl, [eax+2]
jz      short loc_10047d86
inc     edx
cmp     edx, [esp+30h+var_18]
jl      short loc_10047d21
jmp     short loc_10047da0
mov     ecx, [esp+30h+var_18]
cmp     edx, ecx
jge     short loc_10047da0
mov     eax, [esp+30h+size]
sub     eax, esi
mov     [esp+30h+size], eax
test    eax, eax
jg      loc_10047d17
cmp     [esp+30h+var_8], 0
jz      short loc_10047db4
mov     edx, [esp+30h+var_10]
push    edx
call    sub_10009770
add     esp, 4
mov     ebx, [esp+30h+src]
mov     edx, [ebp+arg_0]
mov     esi, [esp+30h+size]
lea     edi, [edx+8]
test    ebx, ebx
jnz     short loc_10047e0d
test    byte ptr [edi+1ch], 40h
jz      short loc_10047de0
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_10047dee
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi]
test    eax, eax
jz      short loc_10047e18
mov     eax, [eax+48h]
jmp     short loc_10047e1d
mov     eax, 3b9aca00h
mov     ecx, 2
mov     [esp+30h+var_8], ecx
test    esi, esi
jns     short loc_10047e44
xor     esi, esi
test    eax, eax
js      short loc_10047e3b
cmp     byte ptr [esi+ebx], 0
jz      short loc_10047e3b
inc     esi
cmp     esi, eax
jle     short loc_10047e30
mov     ecx, 202h
mov     [esp+30h+var_8], ecx
mov     ebx, esi
test    ecx, 200h
jz      short loc_10047e51
lea     ebx, [esi+1]
cmp     esi, eax
jg      short loc_10047e94
push    0
mov     eax, ebx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     loc_10047f09
mov     edx, [esp+30h+src]
mov     eax, [edi+4]
push    ebx
push    edx
push    eax
call    memcpy
mov     cx, word ptr [esp+3ch+var_8]
mov     [edi+1ch], cx
mov     word ptr [edi+1eh], 103h
add     esp, 0ch
mov     [edi+18h], esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dword ptr [edx+38h], 12h
mov     eax, [edi]
test    eax, eax
jz      short loc_10047ea6
mov     eax, [eax+48h]
jmp     short loc_10047eab
mov     eax, 3b9aca00h
xor     esi, esi
test    eax, eax
js      short loc_10047ebf
cmp     ds:byte_10079e6c[esi], 0
jz      short loc_10047ebf
inc     esi
cmp     esi, eax
jle     short loc_10047eb1
xor     edx, edx
mov     ebx, 202h
push    edi
cmp     edx, offset sub_10009760
jnz     short loc_10047ee1
call    sub_100247d0
mov     eax, offset byte_10079e6c
mov     [edi+4], eax
mov     [edi+24h], eax
jmp     short loc_10047ef2
call    sub_100247d0
mov     dword ptr [edi+4], offset byte_10079e6c
mov     ebx, 0a02h
mov     dword ptr [edi+20h], 0
mov     [edi+1ch], bx
mov     word ptr [edi+1eh], 103h
add     esp, 4
mov     [edi+18h], esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_8]
push    ebx
push    esi
push    edi
mov     edi, [eax]
mov     bl, 1
call    sub_100253e0
mov     esi, [ebp+arg_0]
mov     edx, [esi+8]
mov     ecx, eax
xor     eax, eax
cmp     [ebp+arg_4], 2
mov     [ebp+var_8], ecx
mov     [ebp+var_c], edx
mov     [ebp+src], eax
jnz     short loc_10047f4c
mov     eax, [ebp+arg_8]
mov     edi, [eax+4]
call    sub_100253e0
mov     ecx, [ebp+var_8]
test    ecx, ecx
jz      loc_10048031
lea     edx, [ebp+src]
push    edx
push    eax
mov     eax, [ebp+var_c]
push    ecx
call    sub_100508e0
add     esp, 0ch
test    eax, eax
jz      loc_10048031
mov     edi, [ebp+src]
mov     eax, esi
mov     dword ptr [eax+38h], 1
test    edi, edi
jnz     short loc_10047fcd
test    byte ptr [esi+24h], 40h
jz      short loc_10047f97
mov     eax, [esi+18h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+24h], 20h
jz      short loc_10047fa5
mov     ebx, [esi+18h]
call    sub_100117b0
mov     ax, [esi+24h]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
push    edi
mov     [esi+24h], ax
mov     byte ptr [esi+26h], 5
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+8]
test    eax, eax
jz      short loc_10047fd9
mov     ecx, [eax+48h]
jmp     short loc_10047fde
mov     ecx, 3b9aca00h
xor     ebx, ebx
test    ecx, ecx
js      short loc_10047fef
cmp     byte ptr [ebx+edi], 0
jz      short loc_10047fef
inc     ebx
cmp     ebx, ecx
jle     short loc_10047fe4
lea     eax, [ebx+1]
cmp     ebx, ecx
jg      short loc_10048028
push    0
lea     edi, [esi+8]
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10048025
mov     edx, [ebp+src]
lea     eax, [ebx+1]
push    eax
mov     eax, [esi+0ch]
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     [esi+20h], ebx
mov     dword ptr [esi+24h], 1030202h
mov     edi, [ebp+src]
push    edi
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [esi+30h]
mov     eax, 2000h
test    [edi+1ch], ax
jnz     short loc_10048097
push    0
mov     eax, 1ch
call    sub_10024410
mov     eax, [edi+4]
mov     ecx, 2000h
mov     [edi+1ch], cx
mov     edx, [esi]
add     esp, 4
mov     [edi+10h], edx
test    eax, eax
jz      short loc_10048097
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     ebx, [ebp+arg_8]
mov     esi, [ebx]
cmp     byte ptr [esi+1eh], 3
mov     edi, [edi+4]
jnz     short loc_100480d7
call    sub_1002bab0
movzx   eax, word ptr [esi+1ch]
test    al, 1
jz      short loc_100480b8
mov     byte ptr [esi+1eh], 5
jmp     short loc_100480d7
test    al, 4
jz      short loc_100480c2
mov     byte ptr [esi+1eh], 1
jmp     short loc_100480d7
test    al, 8
jz      short loc_100480cc
mov     byte ptr [esi+1eh], 2
jmp     short loc_100480d7
and     al, 2
neg     al
sbb     al, al
add     al, 4
mov     [esi+1eh], al
movzx   eax, byte ptr [esi+1eh]
test    edi, edi
jz      short loc_10048140
cmp     eax, 5
jz      short loc_10048140
add     dword ptr [edi+10h], 1
adc     dword ptr [edi+14h], 0
cmp     eax, 1
jnz     short loc_1004812d
mov     ecx, [ebx]
call    sub_10024870
mov     cl, [edi+19h]
or      cl, [edi+18h]
mov     dword ptr [esp+18h+var_8], eax
mov     dword ptr [esp+18h+var_8+4], edx
fild    [esp+18h+var_8]
fadd    qword ptr [edi]
fstp    qword ptr [edi]
jnz     short loc_10048140
push    edx
push    eax
lea     edx, [edi+8]
push    edx
call    sub_1000c9c0
add     esp, 0ch
test    eax, eax
jz      short loc_10048140
mov     byte ptr [edi+18h], 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebx]
push    eax
call    sub_100293a0
fadd    qword ptr [edi]
add     esp, 4
mov     byte ptr [edi+19h], 1
fstp    qword ptr [edi]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 34h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi+30h]
mov     eax, 2000h
test    [esi+1ch], ax
jnz     short loc_10048184
mov     eax, esi
call    sub_10024760
mov     ecx, 1
mov     [esi+1ch], cx
mov     dword ptr [esi+4], 0
mov     eax, [esi+4]
test    eax, eax
jz      loc_10048249
cmp     dword ptr [eax+14h], 0
jl      loc_10048249
jg      short loc_100481a5
cmp     dword ptr [eax+10h], 0
jbe     loc_10048249
cmp     byte ptr [eax+18h], 0
jz      short loc_10048218
mov     dword ptr [edi+38h], 1
mov     eax, [edi+8]
add     edi, 8
test    eax, eax
jz      short loc_100481c1
mov     eax, [eax+48h]
jmp     short loc_100481c6
mov     eax, 3b9aca00h
xor     esi, esi
test    eax, eax
js      short loc_100481de
lea     esp, [esp+0]
cmp     ds:byte_1007b640[esi], 0
jz      short loc_100481de
inc     esi
cmp     esi, eax
jle     short loc_100481d0
lea     ebx, [esi+1]
cmp     esi, eax
jg      short loc_10048249
push    0
mov     eax, ebx
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_10048249
mov     edx, [edi+4]
push    ebx
push    offset byte_1007b640
push    edx
call    memcpy
mov     [edi+18h], esi
mov     dword ptr [edi+1ch], 1030202h
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [eax+19h], 0
jz      short loc_10048238
fld     qword ptr [eax]
sub     esp, 8
lea     esi, [edi+8]
fstp    [esp+48h+var_48]
call    sub_10024bc0
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [eax+0ch]
mov     edx, [eax+8]
push    ecx
push    edx
push    edi
call    sub_10029590
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 38h
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi+30h]
mov     eax, 2000h
test    [esi+1ch], ax
jnz     short loc_10048283
mov     eax, esi
call    sub_10024760
mov     ecx, 1
mov     [esi+1ch], cx
mov     dword ptr [esi+4], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_100482b9
mov     ecx, [eax+14h]
mov     edx, [eax+10h]
mov     dword ptr [esp+40h+var_8], edx
mov     dword ptr [esp+40h+var_8+4], ecx
test    ecx, ecx
jl      short loc_100482b9
jg      short loc_100482a2
test    edx, edx
jz      short loc_100482b9
fild    [esp+40h+var_8]
sub     esp, 8
lea     esi, [edi+8]
fdivr   qword ptr [eax]
fstp    [esp+48h+var_48]
call    sub_10024bc0
add     esp, 8
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 38h
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi+30h]
mov     eax, 2000h
test    [esi+1ch], ax
jnz     short loc_100482f3
mov     eax, esi
call    sub_10024760
mov     ecx, 1
mov     [esi+1ch], cx
mov     dword ptr [esi+4], 0
mov     esi, [esi+4]
test    esi, esi
jz      short loc_100482fe
fld     qword ptr [esi]
jmp     short loc_10048300
fldz
sub     esp, 8
lea     esi, [edi+8]
fstp    [esp+48h+var_48]
call    sub_10024bc0
add     esp, 8
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [esi+30h]
mov     eax, 2000h
test    [edi+1ch], ax
jnz     short loc_10048361
push    0
mov     eax, 8
call    sub_10024410
mov     eax, [edi+4]
mov     ecx, 2000h
mov     [edi+1ch], cx
mov     edx, [esi]
add     esp, 4
mov     [edi+10h], edx
test    eax, eax
jz      short loc_10048361
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
cmp     [ebp+arg_4], 0
mov     edi, [edi+4]
jz      short loc_10048375
mov     eax, [ebp+arg_8]
mov     ecx, [eax]
cmp     byte ptr [ecx+1eh], 5
jz      short loc_10048380
test    edi, edi
jz      short loc_10048380
add     dword ptr [edi], 1
adc     dword ptr [edi+4], 0
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [eax+30h]
mov     ecx, 2000h
push    edi
test    [esi+1ch], cx
jnz     short loc_100483c2
mov     eax, esi
call    sub_10024760
mov     edx, 1
mov     [esi+1ch], dx
mov     dword ptr [esi+4], 0
mov     esi, [esi+4]
test    esi, esi
jz      short loc_100483d0
mov     edi, [esi]
mov     ebx, [esi+4]
jmp     short loc_100483d4
xor     edi, edi
xor     ebx, ebx
mov     esi, [ebp+arg_0]
mov     eax, 2460h
test    [esi+24h], ax
jz      short loc_100483ea
lea     eax, [esi+8]
call    sub_10024760
mov     eax, [esi+2ch]
mov     ecx, [esi+8]
call    sub_10009810
xor     eax, eax
mov     [esi+18h], edi
mov     ecx, 4
pop     edi
mov     [esi+1ch], ebx
mov     [esi+0ch], eax
mov     [esi+2ch], eax
mov     [esi+28h], eax
mov     [esi+24h], cx
mov     byte ptr [esi+26h], 1
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_8]
mov     eax, [ebx]
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [esi+30h]
mov     ecx, 2000h
mov     [ebp+arg_8], eax
test    [edi+1ch], cx
jnz     short loc_10048482
push    0
mov     eax, 28h
call    sub_10024410
mov     edx, 2000h
mov     [edi+1ch], dx
mov     eax, [esi]
mov     [edi+10h], eax
mov     eax, [edi+4]
add     esp, 4
test    eax, eax
jz      short loc_10048482
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     [eax+1ch], ecx
mov     [eax+20h], ecx
mov     [eax+24h], ecx
mov     edi, [edi+4]
test    edi, edi
jz      short loc_100484ff
mov     ecx, [ebx]
cmp     byte ptr [ecx+1eh], 5
jnz     short loc_100484a4
cmp     word ptr [edi+1ch], 0
jz      short loc_100484ff
pop     edi
mov     dword ptr [esi+3ch], 1
pop     esi
pop     ebx
pop     ebp
retn
cmp     word ptr [edi+1ch], 0
jz      short loc_100484f1
mov     eax, [esi+34h]
mov     edx, [esi]
xor     ebx, ebx
cmp     [edx+4], ebx
push    eax
mov     eax, [ebp+arg_8]
mov     ecx, edi
setnz   bl
call    sub_10025020
add     esp, 4
test    ebx, ebx
jz      short loc_100484da
test    eax, eax
js      short loc_100484de
pop     edi
mov     dword ptr [esi+3ch], 1
pop     esi
pop     ebx
pop     ebp
retn
test    eax, eax
jle     short loc_10048498
mov     eax, [ebp+arg_8]
push    eax
mov     ebx, edi
call    sub_10024da0
add     esp, 4
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     ecx, [ebp+arg_8]
push    ecx
mov     ebx, edi
call    sub_10024da0
add     esp, 4
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebx+30h]
push    edi
mov     eax, 2000h
xor     edi, edi
test    [esi+1ch], ax
jnz     short loc_10048540
mov     eax, esi
call    sub_10024760
mov     ecx, 1
mov     [esi+1ch], cx
mov     [esi+4], edi
mov     esi, [esi+4]
cmp     esi, edi
jz      short loc_1004857c
cmp     [esi+1ch], di
jz      short loc_10048557
push    esi
push    ebx
call    sub_100296e0
add     esp, 8
mov     edx, 2460h
test    [esi+1ch], dx
jz      short loc_10048569
mov     eax, esi
call    sub_10024760
mov     eax, [esi+24h]
mov     ecx, [esi]
call    sub_10009810
mov     [esi+4], edi
mov     [esi+24h], edi
mov     [esi+20h], edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_8]
mov     ecx, [eax]
cmp     byte ptr [ecx+1eh], 5
push    ebx
push    esi
push    edi
jz      loc_1004869c
mov     ebx, [ebp+arg_0]
mov     edi, [ebx+30h]
mov     edx, 2000h
test    [edi+1ch], dx
jnz     short loc_100485f4
push    0
mov     eax, 1ch
call    sub_10024410
mov     eax, 2000h
mov     [edi+1ch], ax
mov     eax, [edi+4]
mov     ecx, [ebx]
add     esp, 4
mov     [edi+10h], ecx
test    eax, eax
jz      short loc_100485f4
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     esi, [edi+4]
test    esi, esi
jz      loc_1004869c
mov     eax, [ebx+8]
xor     ecx, ecx
cmp     [esi+19h], cl
mov     edx, 2
setz    cl
mov     [esi+19h], dl
mov     eax, [eax+48h]
mov     [esi+14h], eax
test    ecx, ecx
jnz     short loc_10048657
cmp     [ebp+arg_4], edx
jnz     short loc_10048641
mov     ecx, [ebp+arg_8]
mov     edi, [ecx+4]
mov     bl, 1
call    sub_100253e0
mov     edx, [ebp+arg_8]
mov     edi, eax
mov     eax, [edx+4]
push    eax
call    sub_10029320
add     esp, 4
jmp     short loc_1004864b
mov     edi, offset asc_1007afb8
mov     eax, 1
push    eax
push    edi
mov     eax, esi
call    sub_1000ac50
add     esp, 8
mov     ecx, [ebp+arg_8]
mov     edi, [ecx]
mov     bl, 1
call    sub_100253e0
mov     edx, [ebp+arg_8]
mov     edi, [edx]
test    byte ptr [edi+1ch], 10h
mov     [esp+10h+src], eax
jnz     short loc_1004867b
call    sub_100253e0
test    eax, eax
jz      short loc_1004868c
mov     eax, 4000h
test    [edi+1ch], ax
mov     eax, [edi+18h]
jz      short loc_1004868c
add     eax, [edi+10h]
mov     ecx, [esp+10h+src]
push    eax
push    ecx
mov     eax, esi
call    sub_1000ac50
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebx+30h]
mov     eax, 2000h
test    [esi+1ch], ax
jnz     short loc_100486dd
mov     eax, esi
call    sub_10024760
mov     ecx, 1
mov     [esi+1ch], cx
mov     dword ptr [esi+4], 0
mov     esi, [esi+4]
test    esi, esi
jz      short loc_1004872a
cmp     byte ptr [esi+1ah], 0
jnz     short loc_10048721
cmp     byte ptr [esi+18h], 0
jz      short loc_100486fd
push    ebx
call    sub_10029950
add     esp, 4
pop     esi
pop     ebx
pop     ebp
retn
push    edi
mov     edi, esi
call    sub_1000ad70
push    1
push    eax
lea     edx, [ebx+8]
mov     eax, offset sub_10009770
or      ecx, 0ffffffffh
call    sub_10024e60
add     esp, 8
pop     edi
cmp     eax, 12h
jnz     short loc_1004872a
push    ebx
call    sub_100298c0
add     esp, 4
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 8
push    ebx
xor     ebx, ebx
push    edi
mov     [esp+10h+var_4], offset dword_100768e0
cmp     [ebp+arg_0], ebx
jnz     short loc_10048752
mov     [esp+10h+var_4], offset dword_100768dc
mov     ecx, offset alike
call    sub_1000ba20
mov     edi, eax
cmp     edi, 0ffh
jg      loc_100487ed
push    ebx
push    1
push    2
push    ecx
push    esi
call    sub_100447c0
add     esp, 14h
cmp     eax, ebx
jz      short loc_100487a6
cmp     byte ptr [eax+2], 1
jnz     short loc_100487a6
cmp     word ptr [eax], 2
jnz     short loc_100487a6
mov     eax, esi
cmp     [esi+7ch], ebx
jz      short loc_100487a1
push    offset aunabletodelete
push    5
call    sub_1000ba40
add     esp, 8
jmp     short loc_10048806
call    sub_10028ef0
push    1
push    1
push    2
push    offset alike
push    esi
call    sub_100447c0
mov     edi, eax
add     esp, 14h
cmp     edi, ebx
jz      short loc_10048806
push    esi
call    sub_1006f660
mov     eax, [esp+14h+var_4]
mov     ecx, 2
add     esp, 4
mov     [edi+20h], ebx
mov     [edi+3], bl
mov     dword ptr [edi+0ch], offset sub_10046d20
mov     [edi+10h], ebx
mov     [edi+14h], ebx
mov     [edi+4], eax
mov     [edi], cx
jmp     short loc_10048806
push    offset ac0d89d4a975292
push    1b8a3h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     ecx, offset alike
call    sub_1000ba20
mov     edi, eax
cmp     edi, 0ffh
jg      loc_100488a1
push    ebx
push    1
push    3
push    ecx
push    esi
call    sub_100447c0
add     esp, 14h
cmp     eax, ebx
jz      short loc_1004885a
cmp     byte ptr [eax+2], 1
jnz     short loc_1004885a
cmp     word ptr [eax], 3
jnz     short loc_1004885a
mov     eax, esi
cmp     [esi+7ch], ebx
jz      short loc_10048855
push    offset aunabletodelete
push    5
call    sub_1000ba40
add     esp, 8
jmp     short loc_100488ba
call    sub_10028ef0
push    1
push    1
push    3
push    offset alike
push    esi
call    sub_100447c0
mov     edi, eax
add     esp, 14h
cmp     edi, ebx
jz      short loc_100488ba
push    esi
call    sub_1006f660
mov     edx, [esp+14h+var_4]
mov     eax, 3
add     esp, 4
mov     [edi+20h], ebx
mov     [edi+3], bl
mov     dword ptr [edi+0ch], offset sub_10046d20
mov     [edi+10h], ebx
mov     [edi+14h], ebx
mov     [edi+4], edx
mov     [edi], ax
jmp     short loc_100488ba
push    offset ac0d89d4a975292
push    1b8a3h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     ecx, offset aglob
call    sub_1000ba20
mov     edi, eax
cmp     edi, 0ffh
jg      loc_10048955
push    ebx
push    1
push    2
push    ecx
push    esi
call    sub_100447c0
add     esp, 14h
cmp     eax, ebx
jz      short loc_1004890e
cmp     byte ptr [eax+2], 1
jnz     short loc_1004890e
cmp     word ptr [eax], 2
jnz     short loc_1004890e
mov     eax, esi
cmp     [esi+7ch], ebx
jz      short loc_10048909
push    offset aunabletodelete
push    5
call    sub_1000ba40
add     esp, 8
jmp     short loc_1004896e
call    sub_10028ef0
push    1
push    1
push    2
push    offset aglob
push    esi
call    sub_100447c0
mov     edi, eax
add     esp, 14h
cmp     edi, ebx
jz      short loc_1004896e
push    esi
call    sub_1006f660
mov     ecx, 2
add     esp, 4
mov     [edi+20h], ebx
mov     [edi+3], bl
mov     dword ptr [edi+0ch], offset sub_10046d20
mov     [edi+10h], ebx
mov     [edi+14h], ebx
mov     dword ptr [edi+4], offset dword_100768d8
mov     [edi], cx
jmp     short loc_1004896e
push    offset ac0d89d4a975292
push    1b8a3h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     eax, offset aglob
inc     eax
cmp     [eax], bl
jnz     short loc_10048973
push    ebx
push    1
sub     eax, offset aglob
push    2
and     eax, 3fffffffh
push    offset aglob
push    esi
mov     edi, eax
call    sub_100447c0
add     esp, 14h
cmp     eax, ebx
jz      short loc_1004899f
mov     byte ptr [eax+3], 3
mov     eax, offset alike
inc     eax
cmp     [eax], bl
jnz     short loc_100489a4
push    ebx
push    1
sub     eax, offset alike
push    2
and     eax, 3fffffffh
push    offset alike
push    esi
mov     edi, eax
call    sub_100447c0
add     esp, 14h
cmp     eax, ebx
jz      short loc_100489d9
cmp     [ebp+arg_0], ebx
setnz   dl
lea     edx, [edx+edx+1]
mov     [eax+3], dl
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     byte ptr [eax], 97h
jnz     short loc_10048a57
mov     ecx, [eax+10h]
test    ecx, ecx
jz      short loc_10048a57
cmp     dword ptr [ecx], 2
jnz     short loc_10048a57
mov     ecx, [eax+4]
mov     eax, ecx
test    ecx, ecx
jz      short loc_10048a0f
cmp     byte ptr [ecx], 0
jz      short loc_10048a08
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10048a02
sub     eax, ecx
and     eax, 3fffffffh
push    edi
push    0
push    1
push    2
push    ecx
mov     ecx, [ebp+arg_0]
push    ecx
mov     edi, eax
call    sub_100447c0
add     esp, 14h
pop     edi
test    eax, eax
jz      short loc_10048a57
mov     cl, [eax+3]
test    cl, 1
jz      short loc_10048a57
mov     eax, [eax+4]
mov     dx, [eax]
mov     al, [eax+2]
movzx   ecx, cl
shr     ecx, 1
mov     [esi], dx
mov     edx, [ebp+arg_4]
not     ecx
and     ecx, 1
mov     [esi+2], al
mov     [edx], ecx
mov     eax, 1
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebx
push    esi
push    edi
mov     esi, offset dword_100808c0
mov     ecx, [esi+18h]
mov     eax, ecx
test    ecx, ecx
jnz     short loc_10048a75
xor     ebx, ebx
jmp     short loc_10048a8f
cmp     byte ptr [ecx], 0
jz      short loc_10048a86
lea     ebx, [ebx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10048a80
sub     eax, ecx
and     eax, 3fffffffh
mov     ebx, eax
movzx   eax, byte ptr [ecx]
movzx   eax, ds:byte_10076030[eax]
add     eax, ebx
cdq
mov     edi, 17h
idiv    edi
push    ebx
push    ecx
mov     edi, edx
mov     eax, edi
mov     edx, offset dword_100814b8
call    sub_100446b0
add     esp, 8
test    eax, eax
jz      short loc_10048ac5
mov     ecx, [eax+8]
mov     [esi+8], ecx
mov     [eax+8], esi
jmp     short loc_10048add
mov     edx, dword_100814b8[edi*4]
mov     dword ptr [esi+8], 0
mov     [esi+1ch], edx
mov     dword_100814b8[edi*4], esi
add     esi, 24h
cmp     esi, offset off_10081010
jl      short loc_10048a68
call    sub_100088d0
pop     edi
pop     esi
pop     ebx
jmp     sub_1003b0a0
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     edi, eax
mov     eax, [ebp+arg_8]
mov     ebx, [eax+14h]
mov     esi, [eax+28h]
mov     [ebp+var_c], 0
mov     [ebp+var_4], ebx
mov     [ebp+var_14], esi
cmp     ebx, 1
jnz     short loc_10048b53
mov     ecx, [ebp+arg_4]
mov     eax, [ecx+4]
test    eax, eax
js      short loc_10048b74
test    esi, esi
jz      loc_10048bfa
mov     ecx, [ecx+0ch]
lea     eax, [eax+eax*2]
mov     ecx, [ecx+eax*8]
mov     edx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_10048b74
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    edi, edi
jz      short loc_10048b74
mov     edx, [ebp+arg_0]
mov     esi, [edx]
lea     ecx, ds:0[ebx*4]
call    sub_10009a40
mov     [ebp+var_c], eax
test    eax, eax
jz      short loc_10048ba5
mov     esi, [ebp+var_14]
mov     [edi], eax
mov     eax, [ebp+arg_4]
mov     edi, [eax+10h]
mov     [ebp+var_8], edi
test    edi, edi
jnz     short loc_10048bb4
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+1cah], 0
jnz     short loc_10048b9b
push    offset aforeignkeymism
push    esi
call    sub_1000bb30
add     esp, 8
mov     eax, [ebp+var_c]
mov     ecx, [esi]
call    sub_10009810
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+var_8]
cmp     [edi+24h], ebx
jnz     loc_10048d0c
cmp     byte ptr [edi+2ch], 0
jz      loc_10048d0c
test    esi, esi
jnz     short loc_10048c03
cmp     byte ptr [edi+2dh], 2
jnz     loc_10048d0c
mov     edx, [ebp+var_c]
test    edx, edx
jz      short loc_10048bf5
xor     eax, eax
test    ebx, ebx
jle     short loc_10048bf5
mov     ecx, [ebp+arg_8]
add     ecx, 24h
mov     esi, [ecx]
mov     [edx+eax*4], esi
inc     eax
add     ecx, 8
cmp     eax, ebx
jl      short loc_10048be8
mov     eax, [ebp+arg_c]
mov     [eax], edi
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     ebx, ebx
mov     [ebp+var_10], ebx
cmp     ebx, [ebp+var_4]
jge     loc_10048d00
jmp     short loc_10048c16
mov     edi, [ebp+var_8]
mov     ecx, [edi+4]
mov     eax, [ecx+ebx*4]
lea     edx, [eax+eax*2]
mov     eax, [ebp+arg_4]
mov     ecx, [eax+0ch]
lea     esi, [ecx+edx*8]
mov     edx, [esi+10h]
test    edx, edx
jnz     short loc_10048c34
mov     edx, offset abinary
mov     eax, [edi+20h]
mov     ecx, [eax+ebx*4]
mov     al, [ecx]
test    al, al
jz      short loc_10048c60
movzx   edi, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[edi]
jnz     short loc_10048c5d
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10048c40
mov     edi, [ebp+var_8]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jnz     loc_10048cfd
mov     eax, [esi]
mov     esi, [ebp+arg_8]
xor     edi, edi
mov     [ebp+var_18], eax
add     esi, 28h
mov     ecx, [esi]
mov     al, [ecx]
mov     edx, [ebp+var_18]
test    al, al
jz      short loc_10048cb4
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_10048cb1
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10048c94
mov     ebx, [ebp+var_10]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_10048cd7
inc     edi
add     esi, 8
cmp     edi, [ebp+var_4]
jl      short loc_10048c89
jmp     short loc_10048ce8
mov     eax, [ebp+var_c]
test    eax, eax
jz      short loc_10048ce8
mov     ecx, [ebp+arg_8]
mov     edx, [ecx+edi*8+24h]
mov     [eax+ebx*4], edx
cmp     edi, [ebp+var_4]
jz      short loc_10048cfa
inc     ebx
mov     [ebp+var_10], ebx
cmp     ebx, [ebp+var_4]
jl      loc_10048c13
mov     edi, [ebp+var_8]
cmp     ebx, [ebp+var_4]
jz      loc_10048bf5
mov     ebx, [ebp+var_4]
mov     esi, [ebp+var_14]
mov     edi, [edi+14h]
mov     [ebp+var_8], edi
test    edi, edi
jnz     loc_10048bb1
jmp     loc_10048b81
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
push    edi
call    sub_10056c90
mov     esi, eax
mov     eax, [edi+48h]
mov     edi, [esi+24h]
dec     eax
mov     [ebp+var_10], eax
lea     ecx, [edi-1]
add     esp, 4
lea     eax, [edi+1]
mov     [esi+24h], eax
test    edi, ecx
jnz     short loc_10048d85
mov     ebx, [esi+28h]
mov     eax, [esi]
lea     edx, ds:4[edi*8]
push    edx
mov     [ebp+var_18], ebx
mov     [ebp+var_14], eax
call    sub_10009ac0
xor     ebx, ebx
add     esp, 4
mov     [ebp+var_c], eax
cmp     eax, ebx
jnz     short loc_10048d7d
mov     eax, [ebp+var_18]
mov     ecx, [ebp+var_14]
call    sub_10009810
mov     eax, [ebp+var_c]
mov     [esi+28h], eax
jmp     short loc_10048d87
xor     ebx, ebx
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_10048d95
mov     dword ptr [eax+edi*4], 0ffffffffh
or      eax, 0ffffffffh
sub     eax, edi
mov     [ebp+var_8], eax
cmp     [ebp+arg_1c], ebx
jge     short loc_10048deb
mov     ecx, [ebp+arg_10]
movzx   edx, byte ptr [ecx+18h]
mov     eax, [esi+1ch]
mov     [ebp+var_14], edx
mov     [ebp+var_18], eax
cmp     [esi+20h], eax
jg      short loc_10048dc2
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10048deb
mov     ecx, [esi+4]
mov     eax, [ebp+var_18]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_14]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_8]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 76h
mov     edx, [ebp+arg_10]
mov     [ebp+var_4], ebx
cmp     [edx+14h], ebx
jle     loc_10048eb9
mov     eax, [ebp+arg_14]
mov     ecx, [ebp+var_4]
mov     edx, [eax+ecx*4]
mov     eax, [ebp+arg_18]
mov     edi, [esi+1ch]
lea     ecx, [edx+eax+1]
mov     eax, [esi+20h]
mov     [ebp+var_18], ecx
cmp     eax, edi
jg      short loc_10048e7c
cmp     eax, ebx
jz      short loc_10048e1f
add     eax, eax
jmp     short loc_10048e24
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10048ea4
mov     eax, [esi]
test    eax, eax
jz      short loc_10048e5e
cmp     ebx, [eax+0fch]
jb      short loc_10048e5e
cmp     ebx, [eax+100h]
jnb     short loc_10048e5e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10048e6a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_18]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_8]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 49h
jmp     short loc_10048ea6
xor     ebx, ebx
mov     eax, [ebp+var_4]
mov     edx, [ebp+arg_10]
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [edx+14h]
jl      loc_10048dfa
cmp     [ebp+arg_20], ebx
jnz     loc_1004969a
mov     eax, [ebp+arg_0]
cmp     [ebp+arg_c], ebx
jnz     loc_100490ea
mov     cl, [eax+13h]
cmp     cl, bl
jnz     short loc_10048ee0
inc     dword ptr [eax+4ch]
mov     eax, [eax+4ch]
mov     [ebp+var_4], eax
jmp     short loc_10048eef
dec     cl
mov     [eax+13h], cl
movzx   ecx, cl
mov     edx, [eax+ecx*4+1ch]
mov     [ebp+var_4], edx
mov     eax, [ebp+arg_14]
mov     ecx, [eax]
mov     edx, [ebp+arg_18]
lea     eax, [ecx+edx+1]
mov     [ebp+var_18], eax
mov     eax, [esi+1ch]
mov     [ebp+arg_20], eax
cmp     [esi+20h], eax
jg      short loc_10048f17
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10048f3d
mov     eax, [ebp+arg_20]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_18]
mov     edx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 0fh
mov     ecx, [esi+1ch]
mov     [ebp+arg_20], ecx
cmp     [esi+20h], ecx
jg      short loc_10048f5f
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10048f5c
mov     [ebp+arg_20], 1
jmp     short loc_10048f85
mov     ecx, [ebp+arg_20]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 15h
mov     [ebp+arg_20], ecx
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_8]
cmp     ecx, [eax]
jnz     short loc_10048fd7
cmp     [ebp+arg_1c], 1
jnz     short loc_10048fd7
mov     eax, [esi+1ch]
mov     [ebp+var_18], eax
cmp     [esi+20h], eax
jg      short loc_10048fae
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10048fd7
mov     eax, [ebp+var_18]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+arg_18]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_8]
mov     [eax+4], ecx
mov     ecx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 4ch
mov     edx, [ebp+arg_8]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+var_10]
push    27h
push    edx
push    eax
mov     eax, [ebp+arg_0]
push    ecx
call    sub_1004b860
mov     eax, [esi+1ch]
add     esp, 10h
mov     [ebp+var_18], eax
cmp     [esi+20h], eax
jg      short loc_10049009
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004902f
mov     eax, [ebp+var_18]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_10]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 36h
mov     eax, [esi+1ch]
mov     [ebp+var_18], eax
cmp     [esi+20h], eax
jg      short loc_10049048
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004906b
mov     eax, [ebp+var_18]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_8]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
mov     ecx, [esi+1ch]
lea     eax, [ecx-2]
cmp     eax, ebx
jl      short loc_10049083
cmp     ecx, eax
jbe     short loc_10049083
mov     edx, [esi+4]
lea     eax, [eax+eax*4]
mov     [edx+eax*4+8], ecx
mov     ecx, [ebp+arg_20]
cmp     ecx, ebx
jl      short loc_1004909b
mov     eax, [esi+1ch]
cmp     eax, ecx
jbe     short loc_1004909b
mov     edx, [esi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
cmp     [ebp+var_4], ebx
jz      loc_1004969a
mov     eax, [ebp+arg_0]
mov     al, [eax+13h]
mov     byte ptr [ebp+arg_20+3], al
cmp     al, 8
jnb     loc_1004969a
mov     edi, [ebp+arg_0]
xor     eax, eax
lea     ecx, [edi+64h]
lea     ecx, [ecx+0]
mov     edx, [ebp+var_4]
cmp     [ecx+10h], edx
jz      short loc_100490e1
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_100490c0
movzx   ecx, byte ptr [ebp+arg_20+3]
mov     [edi+ecx*4+1ch], edx
inc     byte ptr [edi+13h]
jmp     loc_1004969a
mov     byte ptr [ecx+8], 1
jmp     loc_1004969a
mov     edx, [ebp+arg_10]
mov     edx, [edx+14h]
mov     ecx, [eax+3ch]
mov     edi, [eax+40h]
mov     [ebp+arg_20], edx
mov     [ebp+var_c], edi
cmp     edx, ecx
jg      short loc_1004910c
add     edi, edx
sub     ecx, edx
mov     [eax+40h], edi
mov     [eax+3ch], ecx
jmp     short loc_1004911a
mov     ecx, [eax+4ch]
lea     edi, [ecx+1]
add     ecx, edx
mov     [ebp+var_c], edi
mov     [eax+4ch], ecx
mov     cl, [eax+13h]
cmp     cl, bl
jnz     short loc_10049129
inc     dword ptr [eax+4ch]
mov     ecx, [eax+4ch]
jmp     short loc_10049135
dec     cl
movzx   edx, cl
mov     [eax+13h], cl
mov     ecx, [eax+edx*4+1ch]
mov     edi, [ebp+arg_c]
push    edi
push    eax
mov     [ebp+var_18], ecx
call    sub_10044250
mov     edx, [edi+28h]
mov     [ebp+var_14], eax
mov     eax, [esi+1ch]
add     esp, 8
mov     [ebp+var_1c], edx
mov     [ebp+var_4], eax
cmp     [esi+20h], eax
jg      short loc_10049167
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10049190
mov     eax, [ebp+var_4]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_10]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_1c]
mov     [eax+4], edx
mov     edx, [ebp+arg_4]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 27h
mov     ecx, [esi+4]
mov     edi, [esi]
cmp     ecx, ebx
jz      short loc_100491d8
cmp     [edi+32h], bl
jnz     short loc_100491d8
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4-5]
lea     ecx, [ecx+eax*4]
movsx   eax, byte ptr [ecx+1]
mov     [ebp+var_4], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     ecx, [ebp+var_4]
mov     [ecx+10h], ebx
mov     eax, ecx
cmp     [ebp+var_14], ebx
jnz     short loc_100491cc
mov     [eax+10h], ebx
mov     [eax+1], bl
jmp     short loc_100491e5
mov     edx, [ebp+var_14]
mov     [eax+10h], edx
mov     byte ptr [eax+1], 0fah
jmp     short loc_100491e5
mov     ecx, [ebp+var_14]
mov     eax, 0fffffff0h
call    sub_10025e50
xor     ecx, ecx
mov     [ebp+var_4], ecx
cmp     [ebp+arg_20], ebx
jle     loc_100492b1
mov     eax, [ebp+arg_14]
mov     edx, [eax+ecx*4]
mov     eax, [ebp+arg_18]
mov     edi, [esi+1ch]
lea     edx, [edx+eax+1]
mov     eax, [esi+20h]
mov     [ebp+var_1c], edx
cmp     eax, edi
jg      short loc_10049275
cmp     eax, ebx
jz      short loc_10049215
add     eax, eax
jmp     short loc_1004921a
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004929f
mov     eax, [esi]
test    eax, eax
jz      short loc_10049254
cmp     ebx, [eax+0fch]
jb      short loc_10049254
cmp     ebx, [eax+100h]
jnb     short loc_10049254
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10049260
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     ecx, [ebp+var_4]
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_1c]
mov     [eax+4], edx
mov     edx, [ebp+var_c]
add     edx, ecx
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 0eh
jmp     short loc_100492a4
mov     ecx, [ebp+var_4]
xor     ebx, ebx
inc     ecx
mov     [ebp+var_4], ecx
cmp     ecx, [ebp+arg_20]
jl      loc_100491f3
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_8]
cmp     ecx, [eax]
jnz     loc_10049463
cmp     [ebp+arg_1c], 1
jnz     loc_10049463
mov     eax, [ebp+arg_20]
mov     edx, [esi+1ch]
lea     ecx, [edx+eax+1]
mov     [ebp+var_20], ecx
mov     [ebp+var_4], ebx
cmp     eax, ebx
jle     loc_100493cd
mov     eax, [ebp+var_4]
mov     edx, [ebp+arg_14]
mov     edx, [edx+eax*4]
mov     ecx, [ebp+arg_18]
lea     edx, [edx+ecx+1]
mov     [ebp+var_1c], edx
mov     edx, [ebp+arg_c]
mov     edx, [edx+4]
mov     eax, [edx+eax*4]
lea     edx, [eax+ecx+1]
mov     [ebp+var_14], edx
mov     edx, [ebp+arg_8]
cmp     eax, [edx+4]
jnz     short loc_1004930f
mov     [ebp+var_14], ecx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004937e
cmp     eax, ebx
jz      short loc_10049321
add     eax, eax
jmp     short loc_10049326
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100493a9
mov     eax, [esi]
test    eax, eax
jz      short loc_10049360
cmp     ebx, [eax+0fch]
jb      short loc_10049360
cmp     ebx, [eax+100h]
jnb     short loc_10049360
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004936c
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+var_20]
mov     [eax+4], ecx
mov     ecx, [ebp+var_14]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 4bh
jmp     short loc_100493ab
xor     ebx, ebx
mov     ecx, [esi+4]
cmp     ecx, ebx
jz      short loc_100493bd
mov     eax, [esi+1ch]
lea     edx, [eax+eax*4]
mov     byte ptr [ecx+edx*4-11h], 8
mov     eax, [ebp+var_4]
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [ebp+arg_20]
jl      loc_100492e1
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004943c
cmp     eax, ebx
jz      short loc_100493df
add     eax, eax
jmp     short loc_100493e4
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10049461
mov     eax, [esi]
test    eax, eax
jz      short loc_1004941e
cmp     ebx, [eax+0fch]
jb      short loc_1004941e
cmp     ebx, [eax+100h]
jnb     short loc_1004941e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004942a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_8]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
jmp     short loc_10049463
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_100494d2
cmp     eax, ebx
jz      short loc_10049475
add     eax, eax
jmp     short loc_1004947a
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100494fd
mov     eax, [esi]
test    eax, eax
jz      short loc_100494b4
cmp     ebx, [eax+0fch]
jb      short loc_100494b4
cmp     ebx, [eax+100h]
jnb     short loc_100494b4
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100494c0
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_c]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_20]
mov     [eax+4], edx
mov     edx, [ebp+var_18]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 1fh
jmp     short loc_100494ff
xor     ebx, ebx
mov     eax, [ebp+arg_c]
cmp     [eax+10h], ebx
jnz     loc_100495c5
mov     edi, [eax+24h]
mov     ecx, [eax+0ch]
mov     edx, [esi]
add     edi, 2
lea     eax, [edi-1]
mov     [ebp+var_1c], ecx
mov     [ebp+var_20], edx
cmp     eax, 7ffffefeh
ja      short loc_10049585
cmp     dword_10080230, ebx
jz      short loc_10049579
mov     eax, dword_10081774
cmp     eax, ebx
jz      short loc_10049541
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [ebp+var_14]
mov     eax, edi
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1004955e
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+var_14]
xor     ebx, ebx
mov     ecx, [ebp+arg_c]
mov     [ecx+10h], eax
cmp     eax, ebx
jnz     short loc_10049589
mov     ecx, [ebp+var_20]
mov     byte ptr [ecx+32h], 1
mov     [ebp+var_4], ebx
jmp     short loc_100495ce
push    edi
call    dword_1008024c
add     esp, 4
jmp     short loc_10049563
xor     eax, eax
jmp     short loc_10049563
xor     eax, eax
cmp     [ecx+24h], ebx
jle     short loc_100495b4
mov     edx, ecx
mov     ecx, [edx+4]
mov     ecx, [ecx+eax*4]
mov     edi, [ebp+var_1c]
mov     edi, [edi+0ch]
mov     edx, [edx+10h]
lea     ecx, [ecx+ecx*2]
mov     cl, [edi+ecx*8+16h]
mov     [eax+edx], cl
mov     edx, [ebp+arg_c]
inc     eax
cmp     eax, [edx+24h]
jl      short loc_10049592
mov     ecx, [ebp+arg_c]
mov     edx, [ecx+10h]
mov     byte ptr [eax+edx], 64h
mov     ecx, [ecx+10h]
mov     [ecx+eax+1], bl
mov     edx, [ebp+arg_c]
mov     eax, [edx+10h]
mov     [ebp+var_4], eax
mov     ecx, [esi+4]
mov     edi, [esi]
cmp     ecx, ebx
jz      short loc_1004962a
cmp     [edi+32h], bl
jnz     short loc_1004962a
mov     eax, [esi+1ch]
lea     edx, [eax+eax*4-5]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ecx, [ecx+edx*4]
mov     [ebp+var_14], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     eax, [ebp+var_14]
mov     [eax+10h], ebx
cmp     [ebp+var_4], ebx
jnz     short loc_10049609
mov     [eax+10h], ebx
mov     [eax+1], bl
jmp     short loc_10049634
mov     ecx, [ebp+var_4]
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+var_14]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
xor     ebx, ebx
jmp     short loc_10049634
mov     ecx, [ebp+var_4]
xor     eax, eax
call    sub_10025e50
mov     edi, [ebp+var_18]
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_10]
push    ebx
push    edi
push    ecx
push    edx
push    34h
mov     eax, esi
call    sub_10025b50
mov     eax, [ebp+arg_0]
add     esp, 14h
cmp     edi, ebx
jz      short loc_1004967d
cmp     byte ptr [eax+13h], 8
jnb     short loc_1004967d
xor     ecx, ecx
lea     edx, [eax+64h]
nop
cmp     [edx+10h], edi
jz      loc_100496f9
inc     ecx
add     edx, 18h
cmp     ecx, 0ah
jl      short loc_10049660
movzx   ecx, byte ptr [eax+13h]
mov     [eax+ecx*4+1ch], edi
inc     byte ptr [eax+13h]
mov     ecx, [ebp+arg_20]
mov     edi, [ebp+var_c]
call    sub_100384f0
mov     edx, [ebp+arg_20]
cmp     edx, [eax+3ch]
jle     short loc_1004969a
mov     ecx, edx
mov     edx, edi
mov     [eax+3ch], ecx
mov     [eax+40h], edx
mov     edx, [ebp+arg_10]
mov     cl, [edx+18h]
mov     eax, [ebp+arg_0]
cmp     cl, bl
jnz     loc_1004978b
cmp     [eax+1b0h], ebx
jnz     loc_1004978b
cmp     [eax+17h], bl
jnz     loc_1004978b
push    eax
call    sub_10056c90
mov     ecx, [ebp+arg_0]
mov     edi, eax
mov     eax, [ecx+1b0h]
add     esp, 4
cmp     eax, ebx
jnz     short loc_100496da
mov     eax, ecx
mov     byte ptr [eax+18h], 1
mov     ecx, [edi+1ch]
mov     [ebp+arg_0], ecx
cmp     [edi+20h], ecx
jg      short loc_10049705
call    sub_10025810
test    eax, eax
jz      short loc_10049702
mov     eax, 1
jmp     short loc_1004972f
mov     byte ptr [edx+8], 1
jmp     loc_1004967d
mov     ecx, [ebp+arg_0]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
mov     [eax+3], bl
mov     dword ptr [eax+4], 13h
mov     dword ptr [eax+8], 2
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 6
mov     eax, ecx
mov     ecx, [edi]
mov     [ebp+arg_0], ecx
mov     ecx, [edi+4]
mov     edx, [ebp+arg_0]
cmp     ecx, ebx
jz      short loc_10049775
cmp     [edx+32h], bl
jnz     short loc_10049775
cmp     eax, ebx
jge     short loc_1004974b
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     ecx, [ecx+eax*4]
movsx   eax, byte ptr [ecx+1]
mov     [ebp+arg_0], ecx
mov     ecx, [ecx+10h]
mov     edi, edx
call    sub_10025e50
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+10h], offset aforeignkeycons
mov     byte ptr [eax+1], 0feh
jmp     loc_10049844
mov     ecx, offset aforeignkeycons
mov     eax, 0fffffffeh
mov     edi, edx
call    sub_10025e50
jmp     loc_10049844
cmp     [ebp+arg_1c], ebx
jle     short loc_100497a4
cmp     cl, bl
jnz     short loc_100497a4
mov     ecx, [eax+1b0h]
cmp     ecx, ebx
jz      short loc_100497a0
mov     eax, ecx
mov     byte ptr [eax+18h], 1
movzx   edx, byte ptr [edx+18h]
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
mov     [ebp+arg_0], edx
cmp     eax, edi
jg      short loc_1004981a
cmp     eax, ebx
jz      short loc_100497bd
add     eax, eax
jmp     short loc_100497c2
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10049842
mov     eax, [esi]
test    eax, eax
jz      short loc_100497fc
cmp     ebx, [eax+0fch]
jb      short loc_100497fc
cmp     ebx, [eax+100h]
jnb     short loc_100497fc
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10049808
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_1c]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 75h
jmp     short loc_10049844
xor     ebx, ebx
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_1004985c
mov     ecx, [ebp+var_8]
lea     edx, ds:4[ecx*4]
mov     ecx, [esi+1ch]
sub     eax, edx
mov     [eax], ecx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_100498cb
cmp     eax, ebx
jz      short loc_1004986e
add     eax, eax
jmp     short loc_10049873
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100498ee
mov     eax, [esi]
test    eax, eax
jz      short loc_100498ad
cmp     ebx, [eax+0fch]
jb      short loc_100498ad
cmp     ebx, [eax+100h]
jnb     short loc_100498ad
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100498b9
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_10]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 44h
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
push    ebx
push    esi
push    edi
xor     esi, esi
push    eax
mov     [ebp+var_8], ecx
mov     [ebp+var_4], esi
mov     [ebp+var_18], esi
call    sub_10056c90
add     esp, 4
mov     ebx, eax
mov     [ebp+var_c], ebx
cmp     [ebp+arg_1c], esi
jge     short loc_10049979
mov     edx, [ebp+arg_10]
movzx   eax, byte ptr [edx+18h]
mov     esi, [ebx+1ch]
mov     [ebp+var_18], eax
cmp     [ebx+20h], esi
jg      short loc_10049950
mov     edi, ebx
call    sub_10025810
test    eax, eax
jz      short loc_10049950
mov     esi, 1
jmp     short loc_10049976
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_18]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 76h
mov     [ebp+var_18], esi
mov     edx, [ebp+arg_10]
xor     edi, edi
mov     [ebp+var_14], edi
cmp     [edx+14h], edi
jle     loc_10049bb5
jmp     short loc_10049993
mov     edi, [ebp+var_14]
mov     esi, [ebp+var_8]
mov     ecx, 31h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_10049a1c
push    31h
push    0
push    ebx
call    memset
or      eax, 0ffffffffh
mov     [ebx+1eh], ax
lea     eax, [ebx+30h]
mov     [ebx+4], eax
mov     byte ptr [ebx], 84h
mov     byte ptr [eax], 0
mov     eax, [ebp+arg_c]
add     esp, 0ch
mov     dword ptr [ebx+2ch], 1
test    eax, eax
jz      short loc_10049a12
mov     ecx, [eax+4]
mov     eax, [ecx+edi*4]
mov     edx, [ebp+arg_8]
mov     esi, [edx+0ch]
lea     ecx, [eax+eax*2]
lea     ecx, [esi+ecx*8]
cmp     [edx+4], eax
jnz     short loc_100499ee
or      eax, 0ffffffffh
mov     edx, [ebp+arg_18]
lea     eax, [eax+edx+1]
mov     [ebx+18h], eax
mov     dl, [ecx+16h]
mov     eax, [ebp+arg_0]
mov     [ebx+1], dl
push    eax
mov     eax, [ecx+10h]
call    sub_10040bb0
add     esp, 4
mov     [ebx+14h], eax
jmp     short loc_10049a1c
mov     ecx, [ebp+arg_18]
mov     [ebx+18h], ecx
mov     byte ptr [ebx+1], 64h
mov     eax, [ebp+arg_14]
test    eax, eax
jz      short loc_10049a28
mov     eax, [eax+edi*4]
jmp     short loc_10049a2e
mov     edx, [ebp+arg_10]
mov     eax, [edx+24h]
mov     ecx, [ebp+arg_10]
mov     edx, [ecx]
mov     ecx, [edx+0ch]
lea     eax, [eax+eax*2]
mov     ecx, [ecx+eax*8]
mov     [ebp+src], ecx
test    ecx, ecx
jz      short loc_10049a62
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_10049a56
lea     ebx, [ebx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10049a50
sub     eax, ecx
and     eax, 3fffffffh
mov     [ebp+var_10], eax
jmp     short loc_10049a69
mov     [ebp+var_10], 0
mov     ecx, [ebp+var_10]
mov     esi, [ebp+var_8]
add     ecx, 31h
mov     [ebp+size], ecx
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10049ad6
mov     edx, [ebp+size]
push    edx
push    0
push    edi
call    memset
or      eax, 0ffffffffh
mov     [edi+1eh], ax
mov     eax, [ebp+var_10]
add     esp, 0ch
inc     eax
mov     byte ptr [edi], 1ah
jnz     short loc_10049aad
mov     ecx, 400h
or      [edi+2], cx
mov     [edi+4], eax
jmp     short loc_10049acf
mov     esi, [ebp+var_10]
lea     eax, [edi+30h]
mov     [edi+4], eax
test    esi, esi
jz      short loc_10049ac8
mov     edx, [ebp+src]
push    esi
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     eax, [edi+4]
mov     byte ptr [esi+eax], 0
mov     dword ptr [edi+2ch], 1
mov     ecx, [ebp+arg_0]
mov     esi, [ecx]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10049b09
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [esi], 4ch
mov     [esi+1eh], dx
mov     dword ptr [esi+2ch], 1
mov     eax, [ebp+arg_0]
mov     eax, [eax]
mov     [ebp+src], eax
test    esi, esi
jnz     short loc_10049b2b
push    ebx
push    eax
call    sub_10036430
mov     ecx, [ebp+src]
push    edi
push    ecx
call    sub_10036430
add     esp, 10h
jmp     short loc_10049b8c
test    edi, edi
jz      short loc_10049b49
mov     edx, 100h
mov     [esi+0ch], edi
test    [edi+2], dx
jz      short loc_10049b49
mov     eax, edx
or      [esi+2], ax
mov     ecx, [edi+14h]
mov     [esi+14h], ecx
test    ebx, ebx
jz      short loc_10049b67
mov     edx, 100h
mov     [esi+8], ebx
test    [ebx+2], dx
jz      short loc_10049b67
mov     eax, edx
or      [esi+2], ax
mov     ecx, [ebx+14h]
mov     [esi+14h], ecx
mov     ebx, esi
call    sub_10035cf0
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     eax, [eax+54h]
cmp     [esi+2ch], eax
jle     short loc_10049b8c
push    eax
mov     ecx, edx
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_8]
push    esi
push    edx
call    sub_10036060
mov     ecx, [ebp+arg_10]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_14]
inc     eax
add     esp, 8
mov     [ebp+var_14], eax
cmp     eax, [ecx+14h]
jl      loc_10049990
mov     ebx, [ebp+var_c]
mov     edx, [ebp+arg_8]
mov     eax, [ebp+arg_10]
cmp     edx, [eax]
jnz     loc_10049d2c
cmp     [ebp+arg_1c], 0
jle     loc_10049d2c
mov     esi, [ebp+var_8]
mov     ecx, 31h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_10049c07
push    31h
push    0
push    ebx
call    memset
add     esp, 0ch
lea     eax, [ebx+30h]
or      ecx, 0ffffffffh
mov     byte ptr [ebx], 84h
mov     [ebx+1eh], cx
mov     [ebx+4], eax
mov     byte ptr [eax], 0
mov     dword ptr [ebx+2ch], 1
mov     ecx, 31h
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10049c3e
push    31h
push    0
push    edi
call    memset
add     esp, 0ch
lea     eax, [edi+30h]
or      edx, 0ffffffffh
mov     byte ptr [edi], 98h
mov     [edi+1eh], dx
mov     [edi+4], eax
mov     byte ptr [eax], 0
mov     dword ptr [edi+2ch], 1
test    ebx, ebx
jz      short loc_10049c60
test    edi, edi
jz      short loc_10049c60
mov     eax, [ebp+arg_18]
mov     ecx, [ebp+arg_4]
mov     [ebx+18h], eax
mov     byte ptr [ebx+1], 64h
mov     edx, [ecx+24h]
or      eax, 0ffffffffh
mov     [edi+18h], edx
mov     [edi+1ch], ax
mov     ecx, [ebp+arg_0]
mov     esi, [ecx]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10049c93
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [esi], 4bh
mov     [esi+1eh], dx
mov     dword ptr [esi+2ch], 1
mov     eax, [ebp+arg_0]
mov     eax, [eax]
mov     [ebp+arg_8], eax
test    esi, esi
jnz     short loc_10049cb5
push    ebx
push    eax
call    sub_10036430
mov     ecx, [ebp+arg_8]
push    edi
push    ecx
call    sub_10036430
add     esp, 10h
jmp     short loc_10049d16
test    edi, edi
jz      short loc_10049cd3
mov     edx, 100h
mov     [esi+0ch], edi
test    [edi+2], dx
jz      short loc_10049cd3
mov     eax, edx
or      [esi+2], ax
mov     ecx, [edi+14h]
mov     [esi+14h], ecx
test    ebx, ebx
jz      short loc_10049cf1
mov     edx, 100h
mov     [esi+8], ebx
test    [ebx+2], dx
jz      short loc_10049cf1
mov     eax, edx
or      [esi+2], ax
mov     ecx, [ebx+14h]
mov     [esi+14h], ecx
mov     ebx, esi
call    sub_10035cf0
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     eax, [eax+54h]
cmp     [esi+2ch], eax
jle     short loc_10049d16
push    eax
mov     ecx, edx
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_8]
push    esi
push    edx
call    sub_10036060
mov     ebx, [ebp+var_c]
add     esp, 8
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_0]
mov     edi, [ebp+var_4]
xor     eax, eax
mov     [ebp+var_40], eax
mov     [ebp+var_3c], eax
mov     [ebp+var_38], eax
mov     [ebp+var_34], eax
mov     [ebp+var_30], eax
mov     [ebp+var_2c], eax
mov     [ebp+var_28], eax
mov     [ebp+var_24], eax
mov     eax, [ebp+arg_4]
lea     esi, [ebp+var_40]
mov     [ebp+var_3c], eax
mov     [ebp+var_40], ecx
call    sub_10035700
mov     eax, [ebp+arg_4]
mov     esi, [ebp+arg_0]
push    0
push    0
push    0
push    0
mov     edx, edi
push    edx
push    eax
push    esi
call    sub_10069990
add     esp, 1ch
cmp     [ebp+arg_1c], 0
mov     [ebp+arg_4], eax
jle     short loc_10049d9a
mov     ecx, [ebp+arg_10]
cmp     byte ptr [ecx+18h], 0
jnz     short loc_10049d9a
mov     eax, [esi+1b0h]
test    eax, eax
jz      short loc_10049d96
mov     esi, eax
mov     byte ptr [esi+18h], 1
mov     edx, [ebp+arg_10]
movzx   eax, byte ptr [edx+18h]
mov     edi, [ebx+1ch]
mov     [ebp+arg_0], eax
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_10049e19
test    eax, eax
jz      short loc_10049db6
add     eax, eax
jmp     short loc_10049dbb
mov     eax, 33h
mov     edx, [ebp+var_c]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edx]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10049e44
mov     esi, [ebp+var_c]
mov     eax, [esi]
test    eax, eax
jz      short loc_10049dfb
cmp     ebx, [eax+0fch]
jb      short loc_10049dfb
cmp     ebx, [eax+100h]
jnb     short loc_10049dfb
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10049e07
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
mov     ebx, esi
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+arg_0]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_1c]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 75h
jmp     short loc_10049e47
mov     ebx, [ebp+var_c]
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_10049e57
push    eax
call    sub_1006a540
add     esp, 4
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_8]
push    edx
push    eax
call    sub_10036430
mov     eax, [ebp+var_18]
add     esp, 8
test    eax, eax
jz      short loc_10049e81
js      short loc_10049e81
mov     ecx, [ebx+1ch]
cmp     ecx, eax
jbe     short loc_10049e81
lea     edx, [eax+eax*4]
mov     eax, [ebx+4]
mov     [eax+edx*4+8], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edx]
mov     eax, ecx
test    ecx, ecx
jz      short loc_10049ead
cmp     byte ptr [ecx], 0
jz      short loc_10049ea6
lea     ecx, [ecx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10049ea0
sub     eax, ecx
and     eax, 3fffffffh
push    esi
push    ecx
mov     ecx, [edx+44h]
add     ecx, 38h
push    ecx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
pop     esi
retn
test    ebx, ebx
jz      short locret_10049f20
push    esi
mov     esi, [ebx+1ch]
mov     eax, [esi+14h]
push    eax
push    edi
call    sub_10036430
mov     ecx, [esi+18h]
push    ecx
push    edi
call    sub_10037020
mov     esi, [esi+8]
add     esp, 10h
test    esi, esi
jz      short loc_10049f09
push    esi
push    edi
call    sub_10054390
add     esp, 8
mov     eax, esi
mov     ecx, edi
call    sub_10009810
mov     edx, [ebx+0ch]
push    edx
push    edi
call    sub_10036430
add     esp, 8
mov     eax, ebx
mov     ecx, edi
pop     esi
jmp     sub_10009810
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi]
test    dword ptr [eax+18h], 4000000h
push    edi
mov     [ebp+var_8], eax
jz      loc_1004a077
mov     eax, [ebp+arg_8]
test    byte ptr [eax+22h], 10h
jnz     loc_1004a077
xor     ebx, ebx
cmp     [eax+1ch], ebx
jnz     loc_1004a077
push    esi
mov     [ebp+var_4], ebx
call    sub_10056c90
mov     edx, [ebp+arg_8]
add     esp, 4
mov     edi, eax
call    sub_10049e90
test    eax, eax
jnz     short loc_10049fe9
mov     eax, [ebp+arg_8]
mov     eax, [eax+24h]
cmp     eax, ebx
jz      loc_1004a077
mov     edi, edi
cmp     [eax+18h], bl
jnz     short loc_10049fa3
mov     eax, [eax+4]
cmp     eax, ebx
jnz     short loc_10049f90
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
call    sub_10025c00
mov     esi, [edi+1ch]
mov     [ebp+var_4], eax
cmp     [edi+20h], esi
jg      short loc_10049fbe
call    sub_10025810
test    eax, eax
jnz     short loc_10049fe6
mov     eax, [edi+4]
mov     ecx, 1
add     [edi+1ch], ecx
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
mov     ecx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 76h
mov     esi, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     eax, [ebp+var_8]
push    ebx
push    ecx
push    ebx
push    edx
push    eax
mov     byte ptr [esi+1cah], 1
call    sub_100369e0
add     esp, 10h
push    eax
push    esi
call    sub_10044e90
mov     [esi+1cah], bl
mov     esi, [edi+1ch]
add     esp, 0ch
cmp     [edi+20h], esi
jg      short loc_1004a024
call    sub_10025810
test    eax, eax
jnz     short loc_1004a047
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
add     esi, 2
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], esi
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 76h
mov     eax, [ebp+arg_0]
push    0fffffffeh
push    offset aforeignkeycons
push    2
call    sub_10043db0
mov     ecx, [ebp+var_4]
add     esp, 0ch
cmp     ecx, ebx
jz      short loc_1004a077
mov     eax, [edi+28h]
cmp     eax, ebx
jz      short loc_1004a077
mov     edx, [edi+1ch]
lea     ecx, ds:4[ecx*4]
sub     eax, ecx
mov     [eax], edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     edx, [ebx]
test    dword ptr [edx+18h], 4000000h
movzx   eax, byte ptr [ebx+1cah]
push    esi
push    edi
mov     [ebp+var_8], edx
mov     [ebp+var_28], eax
jz      loc_1004a55f
mov     ecx, [ebp+arg_0]
mov     esi, [ecx+44h]
xor     eax, eax
mov     [ebp+var_c], 0fff0bdc0h
cmp     esi, eax
jz      short loc_1004a0de
mov     ecx, [edx+14h]
mov     [ebp+var_c], eax
cmp     ecx, eax
jle     short loc_1004a0de
mov     eax, [edx+10h]
add     eax, 0ch
cmp     [eax], esi
jz      short loc_1004a0dc
mov     edx, [ebp+var_c]
inc     edx
add     eax, 10h
mov     [ebp+var_c], edx
cmp     edx, ecx
mov     edx, [ebp+var_8]
jl      short loc_1004a0c7
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     esi, [edx+10h]
add     ecx, ecx
mov     ecx, [esi+ecx*8]
mov     [ebp+var_18], ecx
mov     ecx, [ebp+arg_0]
mov     edi, [ecx+24h]
mov     [ebp+var_4], edi
cmp     edi, eax
jz      loc_1004a256
jmp     short loc_1004a108
mov     edi, [ebp+var_4]
mov     edx, [ebp+var_8]
xor     eax, eax
cmp     byte ptr [ebx+1cah], 0
mov     [ebp+var_14], eax
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
jz      short loc_1004a132
mov     eax, [ebp+var_18]
mov     ecx, [edi+8]
push    eax
push    ecx
push    edx
call    sub_1003f510
add     esp, 0ch
mov     esi, eax
jmp     loc_1004a2ba
mov     eax, [ebx]
cmp     byte ptr [eax+79h], 0
mov     esi, [edi+8]
jnz     loc_1004a26a
lea     edx, [ebx+4]
push    edx
push    eax
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      loc_1004a26a
inc     dword ptr [ebx+44h]
mov     [ebx+0ch], eax
xor     esi, esi
cmp     [ebp+var_28], 0
jz      loc_1004a55f
mov     eax, [ebp+var_8]
cmp     byte ptr [eax+32h], 0
jnz     loc_1004a55f
test    esi, esi
jnz     loc_1004a248
push    ebx
call    sub_10056c90
mov     ecx, [ebp+var_4]
mov     edi, eax
mov     eax, [ecx+14h]
mov     edx, [edi+1ch]
lea     edx, [eax+edx+1]
mov     [ebp+var_1c], edx
xor     edx, edx
add     esp, 4
mov     [ebp+var_10], edx
cmp     eax, edx
jle     short loc_1004a203
add     ecx, 24h
mov     [ebp+var_24], ecx
mov     eax, [ebp+var_24]
mov     ecx, [eax]
mov     eax, [ebp+arg_4]
mov     esi, [edi+1ch]
lea     ecx, [ecx+eax+1]
mov     [ebp+var_20], ecx
cmp     [edi+20h], esi
jg      short loc_1004a1c9
call    sub_10025810
xor     edx, edx
test    eax, eax
jnz     short loc_1004a1f0
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_20]
mov     [eax+4], ecx
mov     ecx, [ebp+var_1c]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 49h
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_4]
add     [ebp+var_24], 8
inc     eax
mov     [ebp+var_10], eax
cmp     eax, [ecx+14h]
jl      short loc_1004a1a7
movzx   eax, byte ptr [ecx+18h]
mov     esi, [edi+1ch]
mov     [ebp+var_24], eax
cmp     [edi+20h], esi
jg      short loc_1004a21d
call    sub_10025810
test    eax, eax
jnz     short loc_1004a245
xor     edx, edx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [eax+ecx*4]
mov     ecx, [ebp+var_24]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     dword ptr [eax+8], 0ffffffffh
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 75h
mov     edi, [ebp+var_4]
mov     eax, [edi+4]
mov     [ebp+var_4], eax
test    eax, eax
jnz     loc_1004a100
mov     edx, [ebp+arg_0]
mov     ecx, [edx]
mov     eax, ecx
test    ecx, ecx
jnz     loc_1004a3e1
jmp     loc_1004a3f3
mov     eax, [ebp+var_18]
mov     ecx, [ebx]
push    eax
push    esi
push    ecx
call    sub_1003f510
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     short loc_1004a2b5
mov     eax, [ebp+var_18]
push    esi
test    eax, eax
jz      short loc_1004a29e
push    eax
push    offset anosuchtable
push    offset asss
push    ebx
call    sub_1000bb30
add     esp, 14h
jmp     short loc_1004a2b1
push    offset anosuchtable
push    offset ass_4
push    ebx
call    sub_1000bb30
add     esp, 10h
mov     byte ptr [ebx+11h], 1
mov     esi, edi
mov     edi, [ebp+var_4]
test    esi, esi
jz      loc_1004a15e
lea     edx, [ebp+var_14]
push    edx
push    edi
push    esi
push    ebx
lea     eax, [ebp+var_24]
call    sub_10048b00
add     esp, 10h
test    eax, eax
jnz     loc_1004a15e
mov     eax, [ebp+var_24]
test    eax, eax
jz      short loc_1004a2ea
mov     edi, eax
mov     [ebp+var_1c], edi
jmp     short loc_1004a2f8
mov     eax, [edi+24h]
lea     ecx, [ebp+var_2c]
mov     [ebp+var_2c], eax
mov     [ebp+var_1c], ecx
mov     edi, ecx
mov     edx, [ebp+var_4]
xor     eax, eax
mov     [ebp+var_10], eax
cmp     [edx+14h], eax
jle     short loc_1004a36d
mov     ecx, [edi+eax*4]
mov     edx, [ebp+arg_0]
cmp     ecx, [edx+4]
jnz     short loc_1004a317
mov     dword ptr [edi+eax*4], 0ffffffffh
mov     ecx, [ebp+var_8]
cmp     dword ptr [ecx+104h], 0
jz      short loc_1004a361
mov     ecx, [ebp+var_14]
test    ecx, ecx
jz      short loc_1004a332
mov     edx, [ecx+4]
mov     eax, [edx+eax*4]
jmp     short loc_1004a335
mov     eax, [esi+4]
mov     ecx, [esi+0ch]
mov     edx, [ebp+var_c]
lea     eax, [eax+eax*2]
mov     eax, [ecx+eax*8]
push    edx
push    eax
mov     eax, [esi]
push    eax
mov     edi, ebx
call    sub_1003ecc0
mov     edi, [ebp+var_1c]
xor     ecx, ecx
add     esp, 0ch
cmp     eax, 2
mov     eax, [ebp+var_10]
setz    cl
mov     [ebp+var_20], ecx
mov     edx, [ebp+var_4]
inc     eax
mov     [ebp+var_10], eax
cmp     eax, [edx+14h]
jl      short loc_1004a305
mov     eax, [esi]
mov     ecx, [esi+14h]
mov     edx, [ebp+var_c]
push    eax
push    0
push    ecx
push    edx
mov     eax, ebx
call    sub_1003ef00
mov     eax, [ebp+arg_4]
inc     dword ptr [ebx+48h]
add     esp, 10h
test    eax, eax
jz      short loc_1004a3ac
mov     ecx, [ebp+var_20]
mov     edx, [ebp+var_4]
push    ecx
mov     ecx, [ebp+var_c]
push    0ffffffffh
push    eax
mov     eax, [ebp+var_14]
push    edi
push    edx
push    eax
push    esi
push    ecx
push    ebx
call    sub_10048d20
add     esp, 24h
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_1004a3d1
mov     edx, [ebp+var_20]
mov     ecx, [ebp+var_14]
push    edx
mov     edx, [ebp+var_c]
push    1
push    eax
mov     eax, [ebp+var_4]
push    edi
push    eax
push    ecx
push    esi
push    edx
push    ebx
call    sub_10048d20
add     esp, 24h
mov     eax, [ebp+var_24]
mov     ecx, [ebp+var_8]
call    sub_10009810
jmp     loc_1004a245
cmp     byte ptr [ecx], 0
jz      short loc_1004a3ec
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004a3e6
sub     eax, ecx
and     eax, 3fffffffh
push    ecx
mov     ecx, edx
mov     edx, [ecx+44h]
add     edx, 38h
push    edx
mov     esi, eax
call    sub_1000cf50
mov     edi, eax
xor     esi, esi
add     esp, 8
cmp     edi, esi
jz      loc_1004a55f
cmp     byte ptr [edi+18h], 0
mov     [ebp+var_24], esi
mov     [ebp+var_14], esi
jnz     short loc_1004a431
cmp     [ebx+1b0h], esi
jnz     short loc_1004a431
cmp     byte ptr [ebx+17h], 0
jz      loc_1004a554
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_24]
push    eax
push    edi
push    ecx
push    ebx
lea     eax, [ebp+var_14]
call    sub_10048b00
add     esp, 10h
test    eax, eax
jz      short loc_1004a465
cmp     [ebp+var_28], esi
jz      loc_1004a55f
mov     edx, [ebp+var_8]
cmp     byte ptr [edx+32h], 0
jnz     loc_1004a55f
jmp     loc_1004a554
mov     esi, [ebp+var_8]
mov     ecx, 40h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      loc_1004a547
push    40h
push    0
push    esi
call    memset
mov     edx, [ebp+var_8]
mov     eax, 1
mov     [esi+2], ax
movsx   ecx, word ptr [esi]
add     esp, 0ch
push    ecx
push    eax
push    edx
mov     eax, esi
call    sub_100434e0
mov     esi, eax
mov     eax, [ebp+var_8]
add     esp, 0ch
cmp     byte ptr [eax+32h], 0
jnz     loc_1004a53e
movsx   eax, word ptr [esi]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
mov     dword ptr [esi+ecx*4-34h], 0
mov     dword ptr [esi+ecx*4-38h], 0
mov     edx, [edi]
lea     eax, [esi+ecx*4-38h]
mov     [esi+10h], edx
mov     eax, [edi]
mov     ecx, [eax]
mov     [esi+8], ecx
mov     eax, edx
mov     ecx, 1
add     [eax+20h], cx
mov     edx, [ebx+48h]
mov     eax, [ebp+arg_8]
mov     [esi+24h], edx
add     [ebx+48h], ecx
test    eax, eax
jz      short loc_1004a513
mov     ecx, [ebp+var_24]
mov     edx, [ebp+arg_0]
push    0ffffffffh
push    eax
mov     eax, [ebp+var_14]
push    eax
push    edi
push    ecx
push    edx
push    esi
push    ebx
call    sub_10049900
add     esp, 20h
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_1004a534
mov     ecx, [ebp+var_24]
mov     edx, [ebp+arg_0]
push    1
push    eax
mov     eax, [ebp+var_14]
push    eax
push    edi
push    ecx
push    edx
push    esi
push    ebx
call    sub_10049900
add     esp, 20h
mov     eax, [ebp+var_8]
mov     dword ptr [esi+8], 0
push    esi
call    sub_10043720
add     esp, 4
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_8]
call    sub_10009810
xor     esi, esi
mov     edi, [edi+0ch]
cmp     edi, esi
jnz     loc_1004a413
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
push    ebx
push    esi
xor     ebx, ebx
test    dword ptr [ecx+18h], 4000000h
push    edi
jz      loc_1004a653
mov     edx, [ebp+arg_4]
mov     edi, [edx+24h]
test    edi, edi
jz      short loc_1004a5c6
mov     eax, [edi+14h]
test    eax, eax
jle     short loc_1004a5bc
lea     edx, [edi+24h]
mov     esi, eax
mov     ecx, [edx]
cmp     ecx, 1fh
jle     short loc_1004a5ad
or      eax, 0ffffffffh
jmp     short loc_1004a5b4
mov     eax, 1
shl     eax, cl
or      ebx, eax
add     edx, 8
dec     esi
jnz     short loc_1004a5a1
mov     edi, [edi+4]
test    edi, edi
jnz     short loc_1004a595
mov     edx, [ebp+arg_4]
mov     ecx, [edx]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004a5e0
cmp     byte ptr [ecx], 0
jz      short loc_1004a5d9
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004a5d3
sub     eax, ecx
and     eax, 3fffffffh
mov     edx, [edx+44h]
push    ecx
add     edx, 38h
push    edx
mov     esi, eax
call    sub_1000cf50
mov     edi, eax
add     esp, 8
test    edi, edi
jz      short loc_1004a653
jmp     short loc_1004a600
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
lea     eax, [ebp+var_4]
push    eax
push    edi
push    ecx
push    edx
xor     eax, eax
mov     [ebp+var_4], 0
call    sub_10048b00
mov     eax, [ebp+var_4]
add     esp, 10h
test    eax, eax
jz      short loc_1004a64c
mov     ecx, [eax+24h]
test    ecx, ecx
jle     short loc_1004a64c
mov     edx, [eax+4]
mov     esi, ecx
mov     ecx, [edx]
cmp     ecx, 1fh
jle     short loc_1004a63d
or      eax, 0ffffffffh
jmp     short loc_1004a644
mov     eax, 1
shl     eax, cl
or      ebx, eax
add     edx, 4
dec     esi
jnz     short loc_1004a631
mov     edi, [edi+0ch]
test    edi, edi
jnz     short loc_1004a600
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
cmp     [ebp+arg_4], 0
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
jnz     short loc_1004a6b9
mov     ecx, [ebx]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004a68d
cmp     byte ptr [ecx], 0
jz      short loc_1004a686
mov     edi, edi
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004a680
sub     eax, ecx
and     eax, 3fffffffh
push    ecx
mov     ecx, [ebx+44h]
add     ecx, 38h
push    ecx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
test    eax, eax
jnz     short loc_1004a6ae
cmp     [ebx+24h], eax
jnz     short loc_1004a6ae
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    edi
mov     edi, [ebx+24h]
test    edi, edi
jz      short loc_1004a700
mov     esi, [edi+14h]
xor     edx, edx
test    esi, esi
jle     short loc_1004a6f9
lea     ecx, [edi+24h]
lea     ecx, [ecx+0]
mov     eax, [ecx]
mov     ebx, [ebp+arg_4]
cmp     dword ptr [ebx+eax*4], 0
jge     loc_1004a816
mov     ebx, [ebp+arg_0]
cmp     eax, [ebx+4]
jnz     short loc_1004a6f1
cmp     [ebp+arg_8], 0
jnz     loc_1004a816
inc     edx
add     ecx, 8
cmp     edx, esi
jl      short loc_1004a6d0
mov     edi, [edi+4]
test    edi, edi
jnz     short loc_1004a6c1
mov     ecx, [ebx]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004a71d
cmp     byte ptr [ecx], 0
jz      short loc_1004a716
lea     ecx, [ecx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004a710
sub     eax, ecx
and     eax, 3fffffffh
mov     edx, [ebx+44h]
push    ecx
add     edx, 38h
push    edx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
mov     [ebp+var_8], eax
test    eax, eax
jnz     short loc_1004a743
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_8]
mov     ecx, [eax+14h]
mov     [ebp+var_c], 0
mov     [ebp+var_18], ecx
test    ecx, ecx
jle     loc_1004a801
mov     edx, [ebx+8]
lea     esi, [eax+28h]
mov     [ebp+var_10], edx
mov     [ebp+var_4], esi
mov     esi, [ebp+var_4]
mov     esi, [esi]
xor     edi, edi
mov     [ebp+var_14], esi
test    edx, edx
jle     short loc_1004a7ee
mov     eax, [ebx+0ch]
test    esi, esi
jz      short loc_1004a7c4
mov     edx, [eax]
mov     cl, [edx]
test    cl, cl
jz      short loc_1004a7a1
movzx   ebx, byte ptr [esi]
movzx   ecx, cl
mov     cl, ds:byte_10076030[ecx]
cmp     cl, ds:byte_10076030[ebx]
jnz     short loc_1004a79e
mov     cl, [edx+1]
inc     edx
inc     esi
test    cl, cl
jnz     short loc_1004a781
mov     ebx, [ebp+arg_0]
movzx   ecx, byte ptr [esi]
movzx   esi, ds:byte_10076030[ecx]
movzx   edx, byte ptr [edx]
movzx   ecx, ds:byte_10076030[edx]
mov     edx, [ebp+var_10]
sub     ecx, esi
mov     esi, [ebp+var_14]
neg     ecx
sbb     ecx, ecx
inc     ecx
jmp     short loc_1004a7c8
movzx   ecx, byte ptr [eax+15h]
test    ecx, ecx
jz      short loc_1004a7e0
mov     ecx, [ebp+arg_4]
cmp     dword ptr [ecx+edi*4], 0
jge     short loc_1004a816
cmp     edi, [ebx+4]
jnz     short loc_1004a7e0
cmp     [ebp+arg_8], 0
jnz     short loc_1004a816
inc     edi
add     eax, 18h
cmp     edi, edx
jl      short loc_1004a775
mov     ecx, [ebp+var_18]
mov     eax, [ebp+var_8]
mov     esi, [ebp+var_c]
add     [ebp+var_4], 8
inc     esi
mov     [ebp+var_c], esi
cmp     esi, ecx
jl      loc_1004a764
mov     eax, [eax+0ch]
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1004a740
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 64h
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, eax
mov     eax, [edi]
mov     [esp+70h+var_60], eax
xor     eax, eax
xor     ebx, ebx
cmp     [ebp+arg_8], ebx
setnz   al
movzx   ecx, byte ptr [eax+esi+19h]
mov     [esp+70h+var_24], eax
mov     eax, [esi+eax*4+1ch]
mov     [esp+70h+var_44], ecx
cmp     ecx, ebx
jz      loc_1004b66f
cmp     eax, ebx
jnz     loc_1004b66f
mov     edx, [ebp+arg_0]
lea     ecx, [esp+70h+var_38]
push    ecx
push    esi
push    edx
push    edi
lea     eax, [esp+80h+var_40]
mov     [esp+80h+var_38], ebx
mov     [esp+80h+var_40], ebx
mov     [esp+80h+var_3c], ebx
mov     [esp+80h+var_54], ebx
mov     [esp+80h+var_4c], ebx
mov     [esp+80h+var_48], ebx
mov     [esp+80h+var_58], ebx
call    sub_10048b00
add     esp, 10h
test    eax, eax
jnz     loc_1004b617
mov     [esp+70h+var_5c], ebx
cmp     [esi+14h], ebx
jle     loc_1004b233
mov     eax, 3
mov     [esp+70h+var_10], offset aold
mov     [esp+70h+var_c], eax
mov     [esp+70h+var_8], offset anew
mov     [esp+70h+var_4], eax
mov     eax, [esp+70h+var_40]
test    eax, eax
jz      short loc_1004a8e8
mov     ecx, [esp+70h+var_5c]
mov     edx, [eax+ecx*4]
jmp     short loc_1004a8ee
mov     edx, [ebp+arg_4]
mov     edx, [edx+24h]
mov     eax, [esp+70h+var_38]
test    eax, eax
jz      short loc_1004a90e
mov     eax, [eax+4]
mov     ecx, [esp+70h+var_5c]
mov     eax, [eax+ecx*4]
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx+0ch]
lea     eax, [eax+eax*2]
mov     ecx, [ecx+eax*8]
jmp     short loc_1004a913
mov     ecx, offset aoid_0
lea     eax, [edx+edx*2]
mov     edx, [ebp+arg_4]
mov     edx, [edx]
mov     edx, [edx+0ch]
add     eax, eax
add     eax, eax
add     eax, eax
mov     edx, [eax+edx]
mov     [esp+70h+var_28], eax
mov     [esp+70h+var_20], ecx
mov     [esp+70h+src], edx
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004a94d
cmp     byte ptr [ecx], 0
jz      short loc_1004a946
mov     edi, edi
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004a940
sub     eax, ecx
and     eax, 3fffffffh
mov     [esp+70h+var_1c], eax
mov     eax, edx
test    edx, edx
jz      short loc_1004a96d
cmp     byte ptr [edx], 0
jz      short loc_1004a966
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004a960
sub     eax, edx
and     eax, 3fffffffh
mov     [esp+70h+size], eax
mov     [esp+70h+var_14], eax
mov     eax, [edi]
push    1
push    1ah
push    eax
lea     eax, [esp+7ch+src]
call    sub_10035dd0
mov     esi, [edi]
mov     ebx, eax
add     esp, 0ch
mov     [esp+70h+var_30], ebx
test    ebx, ebx
jnz     short loc_1004a9a7
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004a9c5
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004a9c5
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     edx, [edi]
push    1
push    1ah
push    edx
lea     eax, [esp+7ch+var_20]
call    sub_10035dd0
mov     esi, [edi]
mov     ebx, eax
add     esp, 0ch
mov     [esp+70h+var_50], ebx
test    ebx, ebx
jnz     short loc_1004a9f7
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004aa15
call    sub_10035cf0
mov     eax, [edi]
mov     eax, [eax+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004aa15
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     ecx, [edi]
push    1
push    1ah
push    ecx
lea     eax, [esp+7ch+var_10]
call    sub_10035dd0
mov     esi, [edi]
mov     ebx, eax
add     esp, 0ch
mov     [esp+70h+var_34], ebx
test    ebx, ebx
jnz     short loc_1004aa47
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004aa65
call    sub_10035cf0
mov     edx, [edi]
mov     eax, [edx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004aa65
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1004aa95
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      eax, 0ffffffffh
mov     byte ptr [ebx], 76h
mov     [ebx+1eh], ax
mov     dword ptr [ebx+2ch], 1
mov     esi, [edi]
test    ebx, ebx
jnz     short loc_1004aab6
mov     ecx, [esp+70h+var_34]
push    ecx
push    esi
call    sub_10036430
mov     edx, [esp+78h+var_50]
push    edx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004ab18
mov     eax, [esp+70h+var_50]
test    eax, eax
jz      short loc_1004aad8
mov     ecx, 100h
mov     [ebx+0ch], eax
test    [eax+2], cx
jz      short loc_1004aad8
mov     edx, ecx
or      [ebx+2], dx
mov     eax, [eax+14h]
mov     [ebx+14h], eax
mov     eax, [esp+70h+var_34]
test    eax, eax
jz      short loc_1004aafa
mov     ecx, 100h
mov     [ebx+8], eax
test    [eax+2], cx
jz      short loc_1004aafa
mov     edx, ecx
or      [ebx+2], dx
mov     eax, [eax+14h]
mov     [ebx+14h], eax
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004ab18
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1004ab48
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [esi], 4ch
mov     [esi+1eh], dx
mov     dword ptr [esi+2ch], 1
mov     eax, [edi]
mov     [esp+70h+var_34], eax
test    esi, esi
jnz     short loc_1004ab6f
mov     ecx, eax
push    ebx
push    ecx
call    sub_10036430
mov     edx, [esp+78h+var_30]
mov     eax, [esp+78h+var_34]
push    edx
push    eax
call    sub_10036430
add     esp, 10h
jmp     short loc_1004abcf
mov     eax, [esp+70h+var_30]
test    eax, eax
jz      short loc_1004ab91
mov     ecx, 100h
mov     [esi+0ch], eax
test    [eax+2], cx
jz      short loc_1004ab91
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
test    ebx, ebx
jz      short loc_1004abaf
mov     ecx, 100h
mov     [esi+8], ebx
test    [ebx+2], cx
jz      short loc_1004abaf
mov     edx, ecx
or      [esi+2], dx
mov     eax, [ebx+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [esi+2ch], eax
jle     short loc_1004abcf
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     edx, [esp+70h+var_54]
mov     eax, [esp+70h+var_60]
push    esi
push    edx
call    sub_10036060
add     esp, 8
cmp     [ebp+arg_8], 0
mov     [esp+70h+var_54], eax
jz      loc_1004af60
mov     eax, [edi]
push    1
push    1ah
push    eax
lea     eax, [esp+7ch+var_20]
call    sub_10035dd0
mov     esi, [edi]
mov     ebx, eax
add     esp, 0ch
mov     [esp+70h+var_30], ebx
test    ebx, ebx
jnz     short loc_1004ac21
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004ac3f
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004ac3f
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     edx, [edi]
push    1
push    1ah
push    edx
lea     eax, [esp+7ch+var_8]
call    sub_10035dd0
mov     esi, [edi]
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_1004ac6d
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004ac8b
call    sub_10035cf0
mov     eax, [edi]
mov     eax, [eax+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004ac8b
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
mov     [esp+70h+var_50], esi
test    esi, esi
jz      short loc_1004acbf
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 76h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     edx, [edi]
test    esi, esi
jnz     short loc_1004acde
mov     esi, edx
push    ebx
push    esi
call    sub_10036430
mov     eax, [esp+78h+var_30]
push    eax
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004ad40
mov     eax, [esp+70h+var_30]
test    eax, eax
jz      short loc_1004ad00
mov     ecx, 100h
mov     [esi+0ch], eax
test    [eax+2], cx
jz      short loc_1004ad00
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
test    ebx, ebx
jz      short loc_1004ad1e
mov     ecx, 100h
mov     [esi+8], ebx
test    [ebx+2], cx
jz      short loc_1004ad1e
mov     edx, ecx
or      [esi+2], dx
mov     eax, [ebx+14h]
mov     [esi+14h], eax
mov     ebx, [esp+70h+var_50]
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004ad40
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     edx, [edi]
push    1
push    1ah
push    edx
lea     eax, [esp+7ch+var_20]
call    sub_10035dd0
mov     esi, [edi]
mov     ebx, eax
add     esp, 0ch
mov     [esp+70h+var_30], ebx
test    ebx, ebx
jnz     short loc_1004ad72
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004ad90
call    sub_10035cf0
mov     eax, [edi]
mov     eax, [eax+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004ad90
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     ecx, [edi]
push    1
push    1ah
push    ecx
lea     eax, [esp+7ch+var_10]
call    sub_10035dd0
mov     esi, [edi]
mov     ebx, eax
add     esp, 0ch
mov     [esp+70h+var_34], ebx
test    ebx, ebx
jnz     short loc_1004adc2
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004ade0
call    sub_10035cf0
mov     edx, [edi]
mov     eax, [edx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004ade0
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1004ae10
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      eax, 0ffffffffh
mov     byte ptr [ebx], 76h
mov     [ebx+1eh], ax
mov     dword ptr [ebx+2ch], 1
mov     esi, [edi]
test    ebx, ebx
jnz     short loc_1004ae31
mov     ecx, [esp+70h+var_34]
push    ecx
push    esi
call    sub_10036430
mov     edx, [esp+78h+var_30]
push    edx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004ae93
mov     eax, [esp+70h+var_30]
test    eax, eax
jz      short loc_1004ae53
mov     ecx, 100h
mov     [ebx+0ch], eax
test    [eax+2], cx
jz      short loc_1004ae53
mov     edx, ecx
or      [ebx+2], dx
mov     eax, [eax+14h]
mov     [ebx+14h], eax
mov     eax, [esp+70h+var_34]
test    eax, eax
jz      short loc_1004ae75
mov     ecx, 100h
mov     [ebx+8], eax
test    [eax+2], cx
jz      short loc_1004ae75
mov     edx, ecx
or      [ebx+2], dx
mov     eax, [eax+14h]
mov     [ebx+14h], eax
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004ae93
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1004aec3
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [esi], 46h
mov     [esi+1eh], dx
mov     dword ptr [esi+2ch], 1
mov     eax, [edi]
mov     [esp+70h+var_30], eax
test    esi, esi
jnz     short loc_1004aeea
mov     ecx, eax
push    ebx
push    ecx
call    sub_10036430
mov     edx, [esp+78h+var_50]
mov     eax, [esp+78h+var_30]
push    edx
push    eax
call    sub_10036430
add     esp, 10h
jmp     short loc_1004af4a
mov     eax, [esp+70h+var_50]
test    eax, eax
jz      short loc_1004af0c
mov     ecx, 100h
mov     [esi+0ch], eax
test    [eax+2], cx
jz      short loc_1004af0c
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
test    ebx, ebx
jz      short loc_1004af2a
mov     ecx, 100h
mov     [esi+8], ebx
test    [ebx+2], cx
jz      short loc_1004af2a
mov     edx, ecx
or      [esi+2], dx
mov     eax, [ebx+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [esi+2ch], eax
jle     short loc_1004af4a
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     edx, [esp+70h+var_58]
mov     eax, [esp+70h+var_60]
push    esi
push    edx
call    sub_10036060
add     esp, 8
mov     [esp+70h+var_58], eax
cmp     [esp+70h+var_44], 6
jz      loc_1004b21e
mov     eax, [esp+70h+var_44]
cmp     eax, 9
jnz     loc_1004b0e1
cmp     [ebp+arg_8], 0
jz      loc_1004b21e
mov     eax, [edi]
push    1
push    1ah
push    eax
lea     eax, [esp+7ch+var_20]
call    sub_10035dd0
mov     esi, [edi]
mov     ebx, eax
add     esp, 0ch
mov     [esp+70h+var_34], ebx
test    ebx, ebx
jnz     short loc_1004afb4
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004afd2
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004afd2
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     edx, [edi]
push    1
push    1ah
push    edx
lea     eax, [esp+7ch+var_8]
call    sub_10035dd0
mov     esi, [edi]
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_1004b000
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004b01e
call    sub_10035cf0
mov     eax, [edi]
mov     eax, [eax+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004b01e
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1004b04e
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 76h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     edx, [edi]
mov     [esp+70h+var_30], edx
test    esi, esi
jnz     short loc_1004b07a
mov     eax, edx
push    ebx
push    eax
call    sub_10036430
mov     ecx, [esp+78h+var_34]
mov     edx, [esp+78h+var_30]
push    ecx
push    edx
call    sub_10036430
add     esp, 10h
mov     eax, esi
jmp     loc_1004b1be
mov     eax, [esp+70h+var_34]
test    eax, eax
jz      short loc_1004b09c
mov     ecx, 100h
mov     [esi+0ch], eax
test    [eax+2], cx
jz      short loc_1004b09c
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
test    ebx, ebx
jz      short loc_1004b0ba
mov     ecx, 100h
mov     [esi+8], ebx
test    [ebx+2], cx
jz      short loc_1004b0ba
mov     edx, ecx
or      [esi+2], dx
mov     eax, [ebx+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [esi+2ch], eax
jle     short loc_1004b0da
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     eax, esi
jmp     loc_1004b1be
cmp     eax, 8
jnz     short loc_1004b153
mov     edx, [ebp+arg_4]
mov     eax, [edx]
mov     ecx, [eax+0ch]
mov     edx, [esp+70h+var_28]
mov     eax, [ecx+edx+4]
test    eax, eax
jz      short loc_1004b111
push    0
push    0
push    eax
mov     eax, [esp+7ch+var_60]
push    eax
call    sub_100365c0
add     esp, 10h
jmp     loc_1004b1be
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1004b141
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [ebx], 62h
mov     [ebx+1eh], cx
mov     dword ptr [ebx+2ch], 1
mov     esi, [edi]
test    ebx, ebx
jz      short loc_1004b189
call    sub_10035cf0
mov     edx, [edi]
mov     eax, [edx+54h]
jmp     short loc_1004b1a8
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1004b183
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      eax, 0ffffffffh
mov     byte ptr [ebx], 62h
mov     [ebx+1eh], ax
mov     dword ptr [ebx+2ch], 1
mov     esi, [edi]
test    ebx, ebx
jnz     short loc_1004b19e
push    0
push    esi
call    sub_10036430
push    0
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004b1bc
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004b1bc
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     eax, ebx
mov     ecx, [esp+70h+var_4c]
push    eax
mov     eax, edi
call    sub_10036e50
add     esp, 4
mov     [esp+70h+var_4c], eax
test    eax, eax
jz      short loc_1004b21e
cmp     [esp+70h+src], 0
mov     ecx, [eax]
mov     eax, [eax+8]
mov     esi, [edi]
lea     edx, [ecx+ecx*4]
lea     ecx, [eax+edx*4-14h]
mov     [esp+70h+var_28], ecx
jnz     short loc_1004b1f2
xor     esi, esi
jmp     short loc_1004b217
mov     ebx, [esp+70h+size]
lea     ecx, [ebx+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1004b217
mov     edx, [esp+70h+src]
push    ebx
push    edx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+ebx], 0
mov     eax, [esp+70h+var_28]
mov     [eax+4], esi
mov     eax, [esp+70h+var_5c]
mov     ecx, [ebp+arg_4]
inc     eax
mov     [esp+70h+var_5c], eax
cmp     eax, [ecx+14h]
jl      loc_1004a8d7
mov     eax, [esp+70h+var_40]
mov     ecx, [esp+70h+var_60]
call    sub_10009810
mov     edx, [ebp+arg_4]
mov     eax, [edx]
mov     ecx, [eax]
mov     [esp+70h+var_30], ecx
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004b263
cmp     byte ptr [ecx], 0
jz      short loc_1004b25c
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004b256
sub     eax, ecx
and     eax, 3fffffffh
cmp     [esp+70h+var_44], 6
mov     [esp+70h+var_50], eax
jnz     loc_1004b450
mov     [esp+70h+var_c], eax
mov     [esp+70h+var_10], ecx
mov     eax, offset aforeignkeycons
nop
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004b280
mov     ebx, [esp+70h+var_60]
sub     eax, offset aforeignkeycons
and     eax, 3fffffffh
lea     ecx, [eax+31h]
mov     esi, ebx
mov     [esp+70h+var_4], eax
mov     [esp+70h+var_28], ecx
call    sub_10009a40
mov     [esp+70h+var_40], eax
test    eax, eax
jz      short loc_1004b312
mov     ecx, [esp+70h+var_28]
push    ecx
mov     esi, eax
push    0
push    esi
call    memset
mov     eax, [esp+7ch+var_4]
or      edx, 0ffffffffh
lea     ecx, [eax+1]
add     esp, 0ch
mov     byte ptr [esi], 38h
mov     [esi+1eh], dx
test    ecx, ecx
jnz     short loc_1004b2e3
mov     eax, 400h
or      [esi+2], ax
mov     [esi+4], ecx
jmp     short loc_1004b307
lea     ecx, [esi+30h]
mov     [esi+4], ecx
test    eax, eax
jz      short loc_1004b300
push    eax
push    offset aforeignkeycons
push    ecx
call    memcpy
mov     eax, [esp+7ch+var_4]
add     esp, 0ch
mov     ecx, [esi+4]
mov     byte ptr [eax+ecx], 0
mov     dword ptr [esi+2ch], 1
mov     byte ptr [esi+1], 2
mov     ecx, 40h
mov     esi, ebx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1004b364
push    40h
push    0
push    esi
call    memset
mov     edx, 1
mov     [esi+2], dx
movsx   eax, word ptr [esi]
add     esp, 0ch
push    eax
push    edx
push    ebx
mov     eax, esi
call    sub_100434e0
add     esp, 0ch
cmp     byte ptr [ebx+32h], 0
mov     esi, eax
jz      short loc_1004b36e
push    esi
mov     eax, ebx
call    sub_10043720
mov     [esp+74h+var_48], 0
jmp     short loc_1004b3a6
mov     [esp+70h+var_48], 0
jmp     short loc_1004b3a9
movsx   eax, word ptr [esi]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
lea     edx, [esi+ecx*4-38h]
push    ebx
lea     eax, [esp+74h+var_10]
mov     [esp+74h+size], edx
call    sub_1003fe10
mov     ecx, [esp+74h+size]
add     esp, 4
mov     [ecx+4], eax
push    ebx
xor     eax, eax
call    sub_1003fe10
mov     edx, [esp+74h+size]
mov     [edx], eax
mov     [esp+74h+var_48], esi
add     esp, 4
mov     esi, [edi]
mov     ecx, 0ch
call    sub_10009a40
mov     [esp+70h+var_5c], eax
test    eax, eax
jz      short loc_1004b3de
mov     ecx, [esp+70h+var_5c]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
lea     ecx, [eax+14h]
call    sub_10009a40
mov     ecx, [esp+70h+var_5c]
mov     [ecx+8], eax
test    eax, eax
jnz     short loc_1004b3fb
mov     edx, [esp+70h+var_40]
push    edx
push    esi
call    sub_10036430
mov     eax, [esp+78h+var_5c]
push    eax
push    esi
call    sub_10037020
add     esp, 10h
xor     edx, edx
jmp     short loc_1004b421
mov     edx, [esp+70h+var_5c]
mov     ecx, [edx]
mov     esi, [edx+8]
lea     eax, [ecx+ecx*4]
inc     ecx
mov     [edx], ecx
lea     eax, [esi+eax*4]
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     ecx, [esp+70h+var_40]
mov     [eax], ecx
mov     eax, [esp+70h+var_54]
mov     ecx, [esp+70h+var_48]
push    0
push    0
push    0
push    0
push    0
push    0
push    eax
push    ecx
push    edx
mov     ecx, edi
call    sub_10054420
add     esp, 24h
mov     [esp+70h+var_48], eax
mov     [esp+70h+var_54], 0
jmp     short loc_1004b454
mov     ebx, [esp+70h+var_60]
mov     dl, [ebx+0e2h]
mov     ecx, [esp+70h+var_50]
add     ecx, 4dh
mov     esi, ebx
mov     [esp+70h+var_61], dl
mov     byte ptr [ebx+0e2h], 0
call    sub_10009a40
mov     [esp+70h+var_5c], eax
test    eax, eax
jz      short loc_1004b492
mov     eax, [esp+70h+var_50]
add     eax, 4dh
push    eax
mov     eax, [esp+74h+var_5c]
push    0
push    eax
call    memset
add     esp, 0ch
mov     eax, [esp+70h+var_5c]
mov     [esp+70h+var_28], eax
test    eax, eax
jz      loc_1004b5b1
mov     ecx, [esp+70h+var_50]
lea     esi, [eax+24h]
mov     [eax+1ch], esi
push    ecx
mov     [esi+10h], ecx
mov     ecx, [esp+74h+var_30]
lea     eax, [esi+28h]
push    ecx
push    eax
mov     [esp+7ch+var_3c], esi
mov     [esi+0ch], eax
call    memcpy
mov     edx, [esp+7ch+var_54]
add     esp, 0ch
push    0
push    1
push    edx
push    ebx
call    sub_100365c0
mov     [esi+14h], eax
mov     eax, [esp+80h+var_4c]
push    1
push    eax
push    ebx
call    sub_10036840
mov     ecx, [esp+8ch+var_48]
add     esp, 1ch
push    1
push    ecx
push    ebx
mov     [esi+18h], eax
call    sub_10036d20
add     esp, 0ch
cmp     [esp+70h+var_58], 0
mov     [esi+8], eax
jz      loc_1004b5b5
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1004b53b
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [ebx], 13h
mov     [ebx+1eh], dx
mov     dword ptr [ebx+2ch], 1
mov     esi, [edi]
mov     eax, [esp+70h+var_58]
test    ebx, ebx
jnz     short loc_1004b558
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1004b590
mov     ecx, 100h
mov     [ebx+8], eax
test    [eax+2], cx
jz      short loc_1004b572
mov     edx, ecx
or      [ebx+2], dx
mov     eax, [eax+14h]
mov     [ebx+14h], eax
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1004b590
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     edx, [esp+70h+var_60]
push    0
push    1
push    ebx
push    edx
mov     [esp+80h+var_58], ebx
call    sub_100365c0
mov     ecx, [esp+80h+var_5c]
mov     ebx, [esp+80h+var_60]
add     esp, 10h
mov     [ecx+0ch], eax
mov     esi, [esp+70h+var_3c]
mov     eax, [esp+70h+var_54]
mov     dl, [esp+70h+var_61]
mov     edi, [esp+70h+var_5c]
push    eax
push    ebx
mov     [ebx+0e2h], dl
call    sub_10036430
mov     ecx, [esp+78h+var_58]
push    ecx
push    ebx
call    sub_10036430
mov     edx, [esp+80h+var_4c]
push    edx
push    ebx
call    sub_10037020
mov     eax, [esp+88h+var_48]
add     esp, 18h
test    eax, eax
jz      short loc_1004b604
push    eax
push    ebx
call    sub_10054390
mov     eax, [esp+78h+var_48]
add     esp, 8
mov     ecx, ebx
call    sub_10009810
cmp     byte ptr [ebx+32h], 1
jnz     short loc_1004b620
mov     ebx, [esp+70h+var_5c]
mov     edi, [esp+70h+var_60]
call    sub_10049ed0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+70h+var_44]
cmp     eax, 6
jz      short loc_1004b63e
cmp     eax, 9
jnz     short loc_1004b639
cmp     [ebp+arg_8], 0
jnz     short loc_1004b639
mov     byte ptr [esi], 6ah
jmp     short loc_1004b641
mov     byte ptr [esi], 6bh
jmp     short loc_1004b641
mov     byte ptr [esi], 74h
mov     eax, [ebp+arg_0]
cmp     [ebp+arg_8], 0
mov     [esi+4], edi
mov     ecx, [eax+44h]
mov     [edi+14h], ecx
mov     edx, [eax+44h]
mov     eax, [ebp+arg_4]
mov     ecx, [esp+70h+var_24]
mov     [edi+18h], edx
setnz   dl
mov     [eax+ecx*4+1ch], edi
mov     eax, [esp+70h+var_28]
add     dl, 6ah
mov     [edi+8], dl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebx]
test    dword ptr [eax+18h], 4000000h
push    esi
jz      short loc_1004b6f3
mov     ecx, [edi]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004b6ad
cmp     byte ptr [ecx], 0
jz      short loc_1004b6a6
lea     ecx, [ecx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004b6a0
sub     eax, ecx
and     eax, 3fffffffh
push    ecx
mov     ecx, [edi+44h]
add     ecx, 38h
push    ecx
mov     esi, eax
call    sub_1000cf50
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_1004b6f3
mov     edx, [ebp+arg_0]
push    edx
push    esi
push    edi
mov     eax, ebx
call    sub_1004a830
add     esp, 0ch
test    eax, eax
jz      short loc_1004b6ec
mov     ecx, [ebp+arg_4]
push    0
push    2
push    ecx
push    edi
push    eax
push    ebx
call    sub_1005f720
add     esp, 18h
mov     esi, [esi+0ch]
test    esi, esi
jnz     short loc_1004b6c5
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
push    ebx
push    edi
mov     edi, [eax+24h]
mov     [ebp+var_4], edi
test    edi, edi
jz      loc_1004b84b
jmp     short loc_1004b723
mov     edi, [ebp+var_4]
test    esi, esi
jz      short loc_1004b730
cmp     dword ptr [esi+1e8h], 0
jnz     short loc_1004b78e
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_1004b73f
mov     ecx, [edi+0ch]
mov     [eax+0ch], ecx
jmp     short loc_1004b781
mov     edx, [edi+0ch]
test    edx, edx
jz      short loc_1004b74b
mov     ecx, [edx+8]
jmp     short loc_1004b74e
mov     ecx, [edi+8]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004b76d
cmp     byte ptr [ecx], 0
jz      short loc_1004b766
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004b760
sub     eax, ecx
and     eax, 3fffffffh
push    edx
mov     edx, [ebp+arg_0]
push    eax
mov     eax, [edx+44h]
push    ecx
add     eax, 38h
call    sub_1000cfc0
add     esp, 0ch
mov     eax, [edi+0ch]
test    eax, eax
jz      short loc_1004b78e
mov     ecx, [edi+10h]
mov     [eax+10h], ecx
mov     ebx, [edi+1ch]
test    ebx, ebx
jz      short loc_1004b7e2
mov     edi, [ebx+1ch]
mov     edx, [edi+14h]
push    edx
push    esi
call    sub_10036430
mov     eax, [edi+18h]
push    eax
push    esi
call    sub_10037020
mov     edi, [edi+8]
add     esp, 10h
test    edi, edi
jz      short loc_1004b7c9
push    edi
push    esi
call    sub_10054390
add     esp, 8
mov     eax, edi
mov     ecx, esi
call    sub_10009810
mov     ecx, [ebx+0ch]
push    ecx
push    esi
call    sub_10036430
add     esp, 8
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
mov     edi, [ebp+var_4]
mov     ebx, [edi+20h]
test    ebx, ebx
jz      short loc_1004b833
mov     edi, [ebx+1ch]
mov     edx, [edi+14h]
push    edx
push    esi
call    sub_10036430
mov     eax, [edi+18h]
push    eax
push    esi
call    sub_10037020
mov     edi, [edi+8]
add     esp, 10h
test    edi, edi
jz      short loc_1004b81d
push    edi
push    esi
call    sub_10054390
add     esp, 8
mov     eax, edi
mov     ecx, esi
call    sub_10009810
mov     ecx, [ebx+0ch]
push    ecx
push    esi
call    sub_10036430
add     esp, 8
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
mov     eax, [ebp+var_4]
mov     edi, [eax+4]
mov     ecx, esi
call    sub_10009810
mov     [ebp+var_4], edi
test    edi, edi
jnz     loc_1004b720
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_8]
test    byte ptr [edi+22h], 10h
mov     ebx, eax
jnz     loc_1004b932
push    ebx
call    sub_10056c90
add     esp, 4
cmp     [ebp+arg_c], 28h
mov     esi, eax
mov     eax, [edi]
setz    cl
push    eax
mov     eax, [edi+14h]
movzx   edx, cl
mov     ecx, [ebp+arg_4]
push    edx
push    eax
push    ecx
mov     eax, ebx
call    sub_1003ef00
mov     ebx, [esi+1ch]
mov     edx, [edi+14h]
add     esp, 10h
mov     [ebp+var_4], edx
cmp     [esi+20h], ebx
jg      short loc_1004b8bd
mov     edi, esi
call    sub_10025810
mov     edi, [ebp+arg_8]
test    eax, eax
jnz     short loc_1004b8ef
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     dl, byte ptr [ebp+arg_c]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_0]
mov     [eax], dl
mov     edx, [ebp+var_4]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_4]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     byte ptr [eax+1], 0
mov     eax, [esi+4]
mov     ebx, [edi+8]
mov     edi, [esi]
test    eax, eax
jz      short loc_1004b926
cmp     byte ptr [edi+32h], 0
jnz     short loc_1004b926
mov     esi, [esi+1ch]
lea     edx, [esi+esi*4-5]
mov     ecx, [eax+edx*4+10h]
lea     esi, [eax+edx*4]
movsx   eax, byte ptr [esi+1]
call    sub_10025e50
mov     [esi+10h], ebx
mov     byte ptr [esi+1], 0f2h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, ebx
mov     eax, 0fffffff2h
call    sub_10025e50
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
cmp     dword ptr [esi+10h], 0
push    ebx
push    edi
jnz     short loc_1004b99e
mov     ebx, [eax]
mov     eax, [esi+24h]
mov     edi, [esi+0ch]
add     eax, 2
push    eax
call    sub_100094a0
add     esp, 4
mov     [esi+10h], eax
test    eax, eax
jnz     short loc_1004b96c
mov     byte ptr [ebx+32h], 1
pop     edi
pop     ebx
pop     ecx
retn
xor     eax, eax
cmp     [esi+24h], eax
jle     short loc_1004b98f
mov     ecx, [esi+4]
mov     ecx, [ecx+eax*4]
mov     ebx, [esi+10h]
lea     edx, [ecx+ecx*2]
mov     ecx, [edi+0ch]
mov     dl, [ecx+edx*8+16h]
mov     [eax+ebx], dl
inc     eax
cmp     eax, [esi+24h]
jl      short loc_1004b973
mov     ecx, [esi+10h]
mov     byte ptr [eax+ecx], 64h
mov     edx, [esi+10h]
mov     byte ptr [eax+edx+1], 0
mov     eax, [esi+10h]
pop     edi
pop     ebx
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, eax
cmp     dword ptr [edi+28h], 0
jnz     short loc_1004ba03
mov     eax, [ebp+arg_0]
mov     esi, [eax]
mov     eax, [edi+8]
inc     eax
push    eax
call    sub_100094a0
add     esp, 4
test    eax, eax
jnz     short loc_1004b9dd
mov     byte ptr [esi+32h], 1
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
xor     ecx, ecx
cmp     [edi+8], ecx
jle     short loc_1004b9f9
xor     esi, esi
mov     edx, [edi+0ch]
mov     dl, [edx+esi+16h]
mov     [ecx+eax], dl
inc     ecx
add     esi, 18h
cmp     ecx, [edi+8]
jl      short loc_1004b9e6
mov     ecx, [edi+8]
mov     byte ptr [eax+ecx], 0
mov     [edi+28h], eax
mov     eax, [ebp+arg_0]
mov     esi, [eax+4]
mov     ebx, [edi+28h]
mov     edi, [eax]
test    esi, esi
jz      short loc_1004ba63
cmp     byte ptr [edi+32h], 0
jnz     short loc_1004ba63
mov     eax, [eax+1ch]
lea     edx, [eax+eax*4-5]
movsx   eax, byte ptr [esi+edx*4+1]
mov     ecx, [esi+edx*4+10h]
lea     esi, [esi+edx*4]
call    sub_10025e50
xor     eax, eax
mov     [esi+10h], eax
cmp     ebx, eax
jnz     short loc_1004ba44
mov     [esi+10h], eax
mov     [esi+1], al
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     ecx, ebx
call    sub_1000ba20
mov     edi, eax
mov     eax, [ebp+arg_0]
mov     edx, [eax]
call    sub_10009bc0
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0ffh
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     ecx, ebx
xor     eax, eax
call    sub_10025e50
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     esi, ecx
push    esi
mov     ebx, eax
call    sub_10056c90
mov     edx, eax
mov     eax, [edx+1ch]
add     esp, 4
test    byte ptr [edi+22h], 10h
mov     [ebp+var_10], edx
mov     [ebp+var_8], eax
jz      short loc_1004bac0
mov     ecx, [edi+34h]
test    ecx, ecx
jz      short loc_1004babb
mov     esi, [esi]
nop
cmp     [ecx], esi
jz      short loc_1004babb
mov     ecx, [ecx+18h]
test    ecx, ecx
jnz     short loc_1004bab0
mov     [ebp+var_c], ecx
jmp     short loc_1004bac7
mov     [ebp+var_c], 0
mov     eax, ebx
cmp     ebx, [ebp+var_8]
jge     short loc_1004bb3f
mov     ecx, [edx]
mov     cl, [ecx+32h]
mov     [ebp+var_1], cl
jmp     short loc_1004badb
mov     edx, [ebp+var_10]
mov     ecx, eax
test    eax, eax
jns     short loc_1004bae5
mov     ecx, [ebp+var_8]
dec     ecx
cmp     [ebp+var_1], 0
jz      short loc_1004baf2
mov     edx, offset dword_10081398
jmp     short loc_1004bafb
mov     edx, [edx+4]
lea     ecx, [ecx+ecx*4]
lea     edx, [edx+ecx*4]
mov     bl, [edx]
cmp     bl, 27h
jnz     short loc_1004bb2c
mov     ecx, [ebp+arg_0]
cmp     [edx+0ch], ecx
jnz     short loc_1004bb2c
mov     esi, [edx+8]
cmp     esi, [edi+14h]
jz      short loc_1004bb47
mov     ecx, [edi+10h]
test    ecx, ecx
jz      short loc_1004bb2c
lea     esp, [esp+0]
cmp     esi, [ecx+28h]
jz      short loc_1004bb47
mov     ecx, [ecx+14h]
test    ecx, ecx
jnz     short loc_1004bb20
cmp     bl, 87h
jnz     short loc_1004bb39
mov     ecx, [ebp+var_c]
cmp     [edx+10h], ecx
jz      short loc_1004bb47
inc     eax
cmp     eax, [ebp+var_8]
jl      short loc_1004bad8
xor     eax, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
xor     eax, eax
test    byte ptr [ebx+22h], 8
push    edi
jz      short loc_1004bbcb
mov     edi, [edx+1b0h]
test    edi, edi
jnz     short loc_1004bb7a
mov     edi, edx
mov     eax, [edi+1ach]
test    eax, eax
jz      short loc_1004bb8f
cmp     [eax+4], ebx
jz      short loc_1004bbc8
mov     eax, [eax]
test    eax, eax
jnz     short loc_1004bb84
mov     esi, [edx]
mov     ecx, 10h
call    sub_10009a40
test    eax, eax
jnz     short loc_1004bba4
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
mov     ecx, [edi+1ach]
mov     edx, [ebp+arg_0]
mov     [eax], ecx
mov     [edi+1ach], eax
mov     [eax+4], ebx
mov     [eax+8], edx
add     dword ptr [edi+4ch], 2
mov     ecx, [edi+4ch]
mov     [eax+0ch], ecx
inc     dword ptr [edi+4ch]
mov     eax, [eax+0ch]
pop     edi
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
push    ebx
mov     [ebp+var_18], ecx
mov     ecx, [eax+1ach]
push    esi
mov     esi, [eax+8]
xor     ebx, ebx
push    edi
mov     [ebp+var_c], ecx
cmp     ecx, ebx
jz      loc_1004c35b
jmp     short loc_1004bc03
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     edx, [ecx+0ch]
mov     ecx, [ecx+8]
mov     edi, [ebp+var_18]
mov     edi, [edi+10h]
mov     [ebp+var_4], edx
mov     edx, ecx
add     edx, edx
mov     edx, [edi+edx*8+0ch]
mov     edx, [edx+48h]
push    27h
push    edx
push    ecx
push    ebx
call    sub_1004b860
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
add     esp, 10h
cmp     eax, edi
jg      short loc_1004bc9c
cmp     eax, ebx
jz      short loc_1004bc3f
add     eax, eax
jmp     short loc_1004bc44
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004bcc2
mov     eax, [esi]
test    eax, eax
jz      short loc_1004bc7e
cmp     ebx, [eax+0fch]
jb      short loc_1004bc7e
cmp     ebx, [eax+100h]
jnb     short loc_1004bc7e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004bc8a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_4]
mov     [eax+8], ecx
inc     ecx
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 0ah
jmp     short loc_1004bcc4
xor     ebx, ebx
mov     eax, [ebp+var_c]
mov     ecx, [eax+4]
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
mov     edx, [ecx]
mov     [ebp+var_8], edi
mov     [ebp+var_10], edx
cmp     eax, edi
jg      short loc_1004bd45
cmp     eax, ebx
jz      short loc_1004bce4
add     eax, eax
jmp     short loc_1004bce9
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1004bdaa
mov     eax, [esi]
test    eax, eax
jz      short loc_1004bd27
cmp     ebx, [eax+0fch]
jb      short loc_1004bd27
cmp     ebx, [eax+100h]
jnb     short loc_1004bd27
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004bd33
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_4]
dec     ecx
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 5eh
mov     eax, edi
mov     ecx, [esi+4]
mov     edi, [esi]
cmp     ecx, ebx
jz      short loc_1004bdd4
cmp     [edi+32h], bl
jnz     short loc_1004bdd4
cmp     eax, ebx
jge     short loc_1004bd81
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ecx, [ecx+edx*4]
mov     [ebp+var_14], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     eax, [ebp+var_14]
mov     [eax+10h], ebx
cmp     [ebp+var_10], ebx
jnz     short loc_1004bdb3
mov     [eax+10h], ebx
mov     [eax+1], bl
jmp     short loc_1004bdde
mov     eax, 1
xor     ebx, ebx
jmp     short loc_1004bd6b
mov     ecx, [ebp+var_10]
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+var_14]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
xor     ebx, ebx
jmp     short loc_1004bdde
mov     ecx, [ebp+var_10]
xor     eax, eax
call    sub_10025e50
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004be4d
cmp     eax, ebx
jz      short loc_1004bdf0
add     eax, eax
jmp     short loc_1004bdf5
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004be75
mov     eax, [esi]
test    eax, eax
jz      short loc_1004be2f
cmp     ebx, [eax+0fch]
jb      short loc_1004be2f
cmp     ebx, [eax+100h]
jnb     short loc_1004be2f
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004be3b
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_8]
add     ecx, 9
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 48h
jmp     short loc_1004be77
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004bee6
cmp     eax, ebx
jz      short loc_1004be89
add     eax, eax
jmp     short loc_1004be8e
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004bf0b
mov     eax, [esi]
test    eax, eax
jz      short loc_1004bec8
cmp     ebx, [eax+0fch]
jb      short loc_1004bec8
cmp     ebx, [eax+100h]
jnb     short loc_1004bec8
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004bed4
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_4]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 1dh
jmp     short loc_1004bf0d
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004bf7c
cmp     eax, ebx
jz      short loc_1004bf1f
add     eax, eax
jmp     short loc_1004bf24
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004bfaa
mov     eax, [esi]
test    eax, eax
jz      short loc_1004bf5e
cmp     ebx, [eax+0fch]
jb      short loc_1004bf5e
cmp     ebx, [eax+100h]
jnb     short loc_1004bf5e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004bf6a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_4]
lea     edx, [ecx-1]
mov     [eax+4], edx
mov     edx, [ebp+var_8]
add     edx, 7
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 4bh
jmp     short loc_1004bfac
xor     ebx, ebx
mov     ecx, [esi+4]
cmp     ecx, ebx
jz      short loc_1004bfbe
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [ecx+eax*4-11h], 8
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c02d
cmp     eax, ebx
jz      short loc_1004bfd0
add     eax, eax
jmp     short loc_1004bfd5
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c053
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c00f
cmp     ebx, [eax+0fch]
jb      short loc_1004c00f
cmp     ebx, [eax+100h]
jnb     short loc_1004c00f
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c01b
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_4]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
inc     ecx
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 41h
jmp     short loc_1004c055
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c0c4
cmp     eax, ebx
jz      short loc_1004c067
add     eax, eax
jmp     short loc_1004c06c
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c0ee
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c0a6
cmp     ebx, [eax+0fch]
jb      short loc_1004c0a6
cmp     ebx, [eax+100h]
jnb     short loc_1004c0a6
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c0b2
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
mov     ecx, 1
add     [esi+1ch], ecx
lea     eax, [edi+edi*4]
lea     eax, [edx+eax*4]
mov     [eax+8], ecx
mov     ecx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 1dh
jmp     short loc_1004c0f0
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c15f
cmp     eax, ebx
jz      short loc_1004c102
add     eax, eax
jmp     short loc_1004c107
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c187
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c141
cmp     ebx, [eax+0fch]
jb      short loc_1004c141
cmp     ebx, [eax+100h]
jnb     short loc_1004c141
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c14d
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_8]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
add     edx, 9
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
jmp     short loc_1004c189
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c1f8
cmp     eax, ebx
jz      short loc_1004c19b
add     eax, eax
jmp     short loc_1004c1a0
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c220
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c1da
cmp     ebx, [eax+0fch]
jb      short loc_1004c1da
cmp     ebx, [eax+100h]
jnb     short loc_1004c1da
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c1e6
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_8]
add     ecx, 2
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 5fh
jmp     short loc_1004c222
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c291
cmp     eax, ebx
jz      short loc_1004c234
add     eax, eax
jmp     short loc_1004c239
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c2b6
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c273
cmp     ebx, [eax+0fch]
jb      short loc_1004c273
cmp     ebx, [eax+100h]
jnb     short loc_1004c273
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c27f
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_4]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
jmp     short loc_1004c2b8
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c327
cmp     eax, ebx
jz      short loc_1004c2ca
add     eax, eax
jmp     short loc_1004c2cf
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c349
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c309
cmp     ebx, [eax+0fch]
jb      short loc_1004c309
cmp     ebx, [eax+100h]
jnb     short loc_1004c309
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c315
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
jmp     short loc_1004c34b
xor     ebx, ebx
mov     eax, [ebp+var_c]
mov     eax, [eax]
mov     [ebp+var_c], eax
cmp     eax, ebx
jnz     loc_1004bc00
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
xor     ebx, ebx
push    esi
push    edi
cmp     [ebp+arg_0], ebx
jle     short loc_1004c3b8
mov     edi, [eax+8]
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1004c392
call    sub_10025810
test    eax, eax
jnz     short loc_1004c3b8
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 77h
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ecx, [edi+1ach]
mov     eax, [edi]
mov     esi, [edi+8]
xor     ebx, ebx
mov     [ebp+var_20], eax
mov     [ebp+var_10], ecx
cmp     ecx, ebx
jz      loc_1004cbaa
jmp     short loc_1004c3f6
mov     ecx, [ebp+var_10]
mov     edi, [ebp+arg_0]
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     edx, [ebp+var_20]
shl     eax, 4
add     eax, [edx+10h]
mov     [ebp+var_4], ecx
mov     cl, [edi+13h]
cmp     cl, bl
jnz     short loc_1004c417
inc     dword ptr [edi+4ch]
mov     edx, [edi+4ch]
jmp     short loc_1004c423
dec     cl
mov     [edi+13h], cl
movzx   ecx, cl
mov     edx, [edi+ecx*4+1ch]
mov     eax, [eax+0ch]
mov     ecx, [eax+48h]
mov     [ebp+var_8], edx
mov     edx, [ebp+var_10]
mov     eax, [edx+8]
push    28h
push    ecx
push    eax
mov     eax, [ebp+arg_0]
push    ebx
call    sub_1004b860
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
add     esp, 10h
cmp     eax, edi
jg      short loc_1004c4b1
cmp     eax, ebx
jz      short loc_1004c454
add     eax, eax
jmp     short loc_1004c459
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c4ea
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c493
cmp     ebx, [eax+0fch]
jb      short loc_1004c493
cmp     ebx, [eax+100h]
jnb     short loc_1004c493
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c49f
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_4]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
inc     ecx
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4ah
mov     [ebp+var_1c], edi
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c552
cmp     eax, ebx
jz      short loc_1004c4f5
add     eax, eax
jmp     short loc_1004c4fa
mov     [ebp+var_1c], 1
xor     ebx, ebx
jmp     short loc_1004c4d8
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c587
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c534
cmp     ebx, [eax+0fch]
jb      short loc_1004c534
cmp     ebx, [eax+100h]
jnb     short loc_1004c534
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c540
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 48h
mov     [ebp+var_14], edi
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c5ef
cmp     eax, ebx
jz      short loc_1004c592
add     eax, eax
jmp     short loc_1004c597
mov     [ebp+var_14], 1
xor     ebx, ebx
jmp     short loc_1004c575
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c627
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c5d1
cmp     ebx, [eax+0fch]
jb      short loc_1004c5d1
cmp     ebx, [eax+100h]
jnb     short loc_1004c5d1
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c5dd
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_8]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 1dh
mov     [ebp+var_c], edi
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c68f
cmp     eax, ebx
jz      short loc_1004c632
add     eax, eax
jmp     short loc_1004c637
mov     [ebp+var_c], 1
xor     ebx, ebx
jmp     short loc_1004c615
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c6cb
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c671
cmp     ebx, [eax+0fch]
jb      short loc_1004c671
cmp     ebx, [eax+100h]
jnb     short loc_1004c671
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c67d
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
dec     ecx
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 4ch
mov     [ebp+var_18], edi
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c733
cmp     eax, ebx
jz      short loc_1004c6d6
add     eax, eax
jmp     short loc_1004c6db
mov     [ebp+var_18], 1
xor     ebx, ebx
jmp     short loc_1004c6b9
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c758
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c715
cmp     ebx, [eax+0fch]
jb      short loc_1004c715
cmp     ebx, [eax+100h]
jnb     short loc_1004c715
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c721
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_c]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 5fh
jmp     short loc_1004c75a
xor     ebx, ebx
mov     eax, [ebp+var_14]
cmp     eax, ebx
jl      short loc_1004c772
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_1004c772
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     [eax+edx*4+8], ecx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c7e1
cmp     eax, ebx
jz      short loc_1004c784
add     eax, eax
jmp     short loc_1004c789
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c807
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c7c3
cmp     ebx, [eax+0fch]
jb      short loc_1004c7c3
cmp     ebx, [eax+100h]
jnb     short loc_1004c7c3
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c7cf
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_4]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
inc     ecx
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 38h
jmp     short loc_1004c809
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c87c
cmp     eax, ebx
jz      short loc_1004c81b
add     eax, eax
jmp     short loc_1004c820
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1004c8cb
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c85e
cmp     ebx, [eax+0fch]
jb      short loc_1004c85e
cmp     ebx, [eax+100h]
jnb     short loc_1004c85e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c86a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
mov     [ebp+var_c], edi
mov     edx, edi
mov     eax, [ebp+var_18]
cmp     eax, ebx
jl      short loc_1004c8b9
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_1004c8b9
mov     edi, [esi+4]
lea     eax, [eax+eax*4]
mov     [edi+eax*4+8], ecx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c937
cmp     eax, ebx
jz      short loc_1004c8d7
add     eax, eax
jmp     short loc_1004c8dc
mov     edx, 1
mov     [ebp+var_c], edx
xor     ebx, ebx
jmp     short loc_1004c8a1
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004c95d
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c916
cmp     ebx, [eax+0fch]
jb      short loc_1004c916
cmp     ebx, [eax+100h]
jnb     short loc_1004c916
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c922
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     edx, [ebp+var_c]
mov     [esi+4], ebx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_4]
inc     ecx
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 41h
jmp     short loc_1004c962
mov     edx, [ebp+var_c]
xor     ebx, ebx
mov     eax, [ebp+var_1c]
cmp     eax, ebx
jl      short loc_1004c97a
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_1004c97a
mov     edi, [esi+4]
lea     eax, [eax+eax*4]
mov     [edi+eax*4+8], ecx
cmp     edx, ebx
jl      short loc_1004c98f
mov     eax, [esi+1ch]
cmp     eax, edx
jbe     short loc_1004c98f
lea     ecx, [edx+edx*4]
mov     edx, [esi+4]
mov     [edx+ecx*4+8], eax
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004c9fe
cmp     eax, ebx
jz      short loc_1004c9a1
add     eax, eax
jmp     short loc_1004c9a6
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004ca2b
mov     eax, [esi]
test    eax, eax
jz      short loc_1004c9e0
cmp     ebx, [eax+0fch]
jb      short loc_1004c9e0
cmp     ebx, [eax+100h]
jnb     short loc_1004c9e0
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004c9ec
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
dec     ecx
mov     [eax+3], bl
mov     [eax+4], ecx
mov     dword ptr [eax+8], 2
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 1fh
jmp     short loc_1004ca2d
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004ca9c
cmp     eax, ebx
jz      short loc_1004ca3f
add     eax, eax
jmp     short loc_1004ca44
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004cac5
mov     eax, [esi]
test    eax, eax
jz      short loc_1004ca7e
cmp     ebx, [eax+0fch]
jb      short loc_1004ca7e
cmp     ebx, [eax+100h]
jnb     short loc_1004ca7e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004ca8a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+var_4]
mov     ecx, [ebp+var_8]
inc     edx
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 39h
jmp     short loc_1004cac7
xor     ebx, ebx
mov     ecx, [esi+4]
cmp     ecx, ebx
jz      short loc_1004cad9
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [ecx+eax*4-11h], 8
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004cb48
cmp     eax, ebx
jz      short loc_1004caeb
add     eax, eax
jmp     short loc_1004caf0
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004cb6a
mov     eax, [esi]
test    eax, eax
jz      short loc_1004cb2a
cmp     ebx, [eax+0fch]
jb      short loc_1004cb2a
cmp     ebx, [eax+100h]
jnb     short loc_1004cb2a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004cb36
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
jmp     short loc_1004cb6c
xor     ebx, ebx
mov     edi, [ebp+var_8]
cmp     edi, ebx
jz      short loc_1004cb9a
mov     edx, [ebp+arg_0]
cmp     byte ptr [edx+13h], 8
jnb     short loc_1004cb9a
xor     eax, eax
lea     ecx, [edx+64h]
cmp     [ecx+10h], edi
jz      short loc_1004cbb1
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1004cb81
movzx   ecx, byte ptr [edx+13h]
mov     [edx+ecx*4+1ch], edi
inc     byte ptr [edx+13h]
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     [ebp+var_10], eax
cmp     eax, ebx
jnz     loc_1004c3f0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
jmp     short loc_1004cb9a
push    ebp
mov     ebp, esp
sub     esp, 94h
xor     eax, eax
push    ebx
mov     ebx, [ebp+arg_0]
mov     ecx, [ebx]
push    esi
push    edi
mov     [ebp+var_1c], eax
mov     [ebp+var_34], eax
mov     [ebp+var_50], 0ffffffffh
mov     [ebp+var_44], eax
mov     [ebp+var_30], eax
mov     [ebp+var_5c], eax
mov     [ebp+var_54], eax
mov     [ebp+var_48], eax
mov     [ebp+var_40], eax
mov     [ebp+var_64], eax
mov     [ebp+var_10], eax
mov     [ebp+var_3c], eax
mov     [ebp+var_38], ecx
mov     [ebp+var_74], eax
mov     [ebp+var_70], eax
mov     [ebp+var_6c], eax
mov     [ebp+var_68], eax
cmp     [ebx+44h], eax
jnz     loc_1004ddd8
cmp     [ecx+32h], al
jnz     loc_1004ddd8
mov     ecx, [ebp+arg_4]
cmp     [ecx+8], eax
jz      loc_1004ddd8
mov     eax, ecx
mov     esi, ebx
call    sub_10044bd0
mov     [ebp+var_4], eax
test    eax, eax
jz      loc_1004ddd8
mov     ecx, [ebp+var_38]
mov     edi, eax
mov     esi, [edi+44h]
call    sub_10053b80
mov     edx, [ebp+var_38]
mov     ecx, [edx+10h]
mov     edx, [edi]
mov     [ebp+var_14], eax
add     eax, eax
mov     eax, [ecx+eax*8]
push    eax
push    0
push    edx
push    12h
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1004ddd8
lea     eax, [ebp+var_4c]
push    eax
push    0
mov     esi, edi
push    69h
mov     edx, esi
mov     eax, ebx
call    sub_1005f080
xor     ecx, ecx
add     esp, 0ch
cmp     [esi+1ch], ecx
push    esi
setnz   cl
push    ebx
mov     [ebp+var_58], eax
mov     [ebp+var_60], ecx
call    sub_10041590
add     esp, 8
test    eax, eax
jnz     loc_1004ddd8
mov     edx, [ebp+var_4c]
push    edx
mov     ecx, esi
mov     edi, ebx
call    sub_10044ca0
add     esp, 4
test    eax, eax
jnz     loc_1004ddd8
push    ebx
call    sub_10056c90
mov     esi, eax
add     esp, 4
mov     [ebp+var_2c], esi
test    esi, esi
jz      loc_1004ddd8
cmp     byte ptr [ebx+12h], 0
jnz     short loc_1004ccdf
mov     byte ptr [esi+5eh], 1
cmp     [ebp+arg_c], 0
jnz     short loc_1004ccef
cmp     [ebp+var_58], 0
jnz     short loc_1004ccef
xor     eax, eax
jmp     short loc_1004ccf4
mov     eax, 1
mov     edi, [ebp+var_14]
push    eax
mov     eax, ebx
call    sub_10043d50
add     esp, 4
cmp     [ebp+arg_10], 0
jnz     short loc_1004cd27
mov     ecx, [ebp+arg_14]
mov     edx, [ebp+var_4]
mov     eax, edi
push    eax
mov     eax, [ebp+arg_c]
push    ecx
push    edx
push    ebx
call    sub_1004f950
add     esp, 10h
test    eax, eax
jnz     loc_1004dccf
mov     ebx, [ebp+var_4]
mov     eax, edi
mov     edi, [ebp+arg_0]
push    eax
mov     edx, edi
call    sub_1004bb60
xor     ebx, ebx
add     esp, 4
mov     [ebp+var_28], eax
cmp     [ebp+arg_c], ebx
jz      loc_1004cf7c
inc     dword ptr [edi+4ch]
mov     eax, [edi+4ch]
push    eax
mov     [ebp+var_10], eax
push    ebx
push    7
mov     eax, esi
call    sub_10025990
mov     eax, [edi+4ch]
inc     eax
mov     [edi+4ch], eax
add     esp, 0ch
mov     [ebp+var_6c], ebx
mov     [ebp+var_68], ebx
mov     ebx, [esi+1ch]
push    eax
lea     ecx, [ebx+1]
push    ecx
mov     [ebp+var_70], eax
push    7
mov     eax, esi
mov     word ptr [ebp+var_74], 0ah
call    sub_10025990
add     esp, 0ch
push    0
push    0
push    1
mov     eax, esi
call    sub_10025990
add     esp, 0ch
lea     edx, [ebp+var_74]
mov     [ebp+var_24], eax
mov     eax, [ebp+arg_c]
push    edx
push    eax
push    edi
call    sub_1005b870
add     esp, 0ch
test    eax, eax
jnz     loc_1004ddd8
cmp     [edi+44h], eax
jnz     loc_1004ddd8
mov     ecx, [ebp+var_38]
cmp     [ecx+32h], al
jnz     loc_1004ddd8
mov     edx, [ebp+var_10]
push    edx
push    1
push    7
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_70]
add     esp, 0ch
push    eax
push    4
mov     eax, esi
call    sub_10025940
push    2
push    2
push    6
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_24]
add     esp, 14h
mov     edx, esi
call    sub_10025e30
cmp     [ebp+var_58], 0
mov     ecx, [ebp+var_6c]
mov     edx, [ebp+arg_c]
mov     eax, [edx]
mov     [ebp+var_40], ecx
mov     ecx, [eax]
mov     [ebp+var_20], ecx
jnz     short loc_1004ce3b
mov     edx, [ebp+var_14]
mov     edi, [ebp+var_4]
lea     eax, [ebx+2]
mov     ebx, [ebp+arg_0]
push    edx
mov     ecx, ebx
call    sub_1004ba80
add     esp, 4
test    eax, eax
jnz     short loc_1004ce3d
mov     edi, ebx
jmp     loc_1004cefc
mov     ebx, edi
mov     edi, [ebx+48h]
lea     eax, [edi+1]
mov     ecx, ebx
mov     [ebp+var_44], 1
mov     [ebp+var_30], edi
mov     [ebx+48h], eax
call    sub_1003abf0
mov     [ebp+var_24], eax
call    sub_1003abf0
mov     ecx, [ebp+var_20]
push    ecx
mov     [ebp+var_18], eax
push    edi
push    2ah
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+var_70]
add     esp, 0ch
push    edx
push    4
mov     eax, esi
call    sub_10025940
mov     [ebp+var_14], eax
mov     eax, [ebp+var_10]
push    eax
push    1bh
mov     eax, esi
call    sub_10025940
mov     ebx, [ebp+var_24]
mov     ecx, [ebp+var_20]
mov     edx, [ebp+var_6c]
push    ebx
push    ecx
push    edx
mov     [ebp+var_c], eax
push    1fh
mov     eax, esi
call    sub_10025890
mov     eax, [ebp+var_18]
push    eax
push    edi
push    38h
mov     eax, esi
call    sub_10025990
mov     ecx, [ebp+var_18]
add     esp, 2ch
push    ecx
push    ebx
push    edi
push    39h
mov     eax, esi
call    sub_10025890
mov     edx, [ebp+var_14]
push    edx
push    0
push    1
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_c]
add     esp, 1ch
mov     edx, esi
call    sub_10025e30
mov     edx, [ebp+arg_0]
mov     esi, ebx
call    sub_1003ac10
mov     esi, [ebp+var_18]
call    sub_1003ac10
mov     edi, [ebp+arg_0]
mov     esi, [ebp+var_2c]
mov     ecx, [ebp+var_4]
test    byte ptr [ecx+22h], 10h
mov     edx, [ebp+arg_10]
jz      loc_1004d00b
mov     ecx, [ecx+8]
xor     eax, eax
mov     [ebp+var_14], eax
mov     [ebp+var_18], eax
cmp     ecx, 2
jl      short loc_1004cf52
mov     eax, [ebp+var_4]
mov     eax, [eax+0ch]
add     ecx, 0fffffffeh
shr     ecx, 1
add     eax, 2fh
inc     ecx
lea     edx, [ecx+ecx]
mov     [ebp+var_c], edx
xor     edx, edx
cmp     [eax-18h], dl
setnz   dl
add     [ebp+var_14], edx
xor     edx, edx
cmp     [eax], dl
setnz   dl
add     eax, 30h
add     [ebp+var_18], edx
dec     ecx
jnz     short loc_1004cf31
mov     edx, [ebp+arg_10]
mov     eax, [ebp+var_c]
mov     ecx, [ebp+var_4]
cmp     eax, [ecx+8]
jge     loc_1004cffe
mov     ecx, [ecx+0ch]
xor     ebx, ebx
lea     eax, [eax+eax*2]
cmp     [ecx+eax*8+17h], bl
mov     eax, [ebp+var_18]
setnz   bl
add     eax, [ebp+var_14]
mov     ecx, ebx
add     ecx, eax
jmp     loc_1004d00e
xor     eax, eax
mov     [ebp+var_94], eax
mov     [ebp+var_90], eax
mov     [ebp+var_8c], eax
mov     [ebp+var_88], eax
mov     [ebp+var_84], eax
mov     [ebp+var_80], eax
mov     [ebp+var_7c], eax
mov     [ebp+var_78], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_94], edi
mov     [ebp+var_30], 0ffffffffh
cmp     eax, ebx
jz      short loc_1004cfbd
mov     eax, [eax]
jmp     short loc_1004cfbf
xor     eax, eax
mov     [ebp+var_20], eax
cmp     eax, ebx
jle     loc_1004cefc
mov     [ebp+var_18], ebx
lea     ecx, [ecx+0]
mov     eax, [ebp+arg_8]
mov     ecx, [eax+8]
mov     edx, [ebp+var_18]
mov     edi, [ecx+edx]
lea     esi, [ebp+var_94]
call    sub_10035700
test    eax, eax
jnz     loc_1004ddd8
add     [ebp+var_18], 14h
inc     ebx
cmp     ebx, [ebp+var_20]
jl      short loc_1004cfd0
jmp     loc_1004cef6
mov     eax, [ebp+var_18]
add     eax, [ebp+var_14]
mov     ecx, [ebp+var_1c]
add     ecx, eax
jmp     short loc_1004d00e
mov     ecx, [ebp+var_1c]
test    edx, edx
jnz     short loc_1004d04a
cmp     [ebp+var_20], edx
jz      loc_1004d14a
mov     edx, [ebp+var_4]
mov     eax, [edx+8]
sub     eax, ecx
cmp     [ebp+var_20], eax
jz      loc_1004d212
mov     ecx, [ebp+var_20]
mov     edx, [ebp+arg_4]
push    ecx
push    eax
push    0
push    edx
push    offset atableshasdcolu
push    edi
call    sub_1000bb30
add     esp, 18h
jmp     loc_1004ddd8
mov     ecx, [edx+4]
cmp     [ebp+var_20], ecx
jz      short loc_1004d06a
mov     eax, [ebp+var_20]
push    ecx
push    eax
push    offset advaluesfordcol
push    edi
call    sub_1000bb30
add     esp, 10h
jmp     loc_1004ddd8
xor     eax, eax
test    ecx, ecx
jle     short loc_1004d080
mov     ecx, [edx]
mov     dword ptr [ecx+eax*8+4], 0ffffffffh
inc     eax
cmp     eax, [edx+4]
jl      short loc_1004d070
cmp     dword ptr [edx+4], 0
mov     [ebp+var_c], 0
jle     loc_1004d14a
mov     edx, [ebp+var_4]
mov     eax, [edx+8]
xor     edi, edi
mov     [ebp+var_18], eax
test    eax, eax
jle     short loc_1004d0ed
mov     eax, [ebp+arg_10]
mov     ecx, [eax]
mov     edx, [ebp+var_c]
lea     eax, [ecx+edx*8]
mov     ecx, [ebp+var_4]
mov     ebx, [ecx+0ch]
mov     [ebp+var_14], eax
mov     eax, [eax]
mov     [ebp+var_24], eax
lea     esp, [esp+0]
mov     edx, [ebx]
mov     ecx, [ebp+var_24]
call    sub_1000bca0
test    eax, eax
jz      short loc_1004d0d9
inc     edi
add     ebx, 18h
cmp     edi, [ebp+var_18]
jl      short loc_1004d0c0
jmp     short loc_1004d0ed
mov     edx, [ebp+var_14]
mov     eax, [ebp+var_4]
mov     [edx+4], edi
cmp     edi, [eax+4]
jnz     short loc_1004d0ed
mov     ecx, [ebp+var_c]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_4]
mov     ebx, [ebp+var_c]
cmp     edi, [edx+8]
jl      short loc_1004d137
mov     eax, [ebp+arg_10]
mov     ecx, [eax]
mov     edi, [ecx+ebx*8]
mov     edx, offset arowid
mov     ecx, edi
call    sub_1000bca0
test    eax, eax
jz      short loc_1004d134
mov     edx, offset arowid_0
mov     ecx, edi
call    sub_1000bca0
test    eax, eax
jz      short loc_1004d134
mov     edx, offset aoid
mov     ecx, edi
call    sub_1000bca0
test    eax, eax
jnz     loc_1004d1e9
mov     [ebp+var_50], ebx
mov     edx, [ebp+arg_10]
inc     ebx
mov     [ebp+var_c], ebx
cmp     ebx, [edx+4]
jl      loc_1004d091
mov     edi, [ebp+arg_0]
mov     ebx, [ebp+var_38]
test    dword ptr [ebx+18h], 1000h
jz      short loc_1004d16e
inc     dword ptr [edi+4ch]
mov     eax, [edi+4ch]
push    eax
mov     [ebp+var_64], eax
push    0
push    7
mov     eax, esi
call    sub_10025990
add     esp, 0ch
cmp     [ebp+var_60], 0
jnz     short loc_1004d1cb
mov     eax, [edi+48h]
push    28h
push    eax
mov     [ebp+var_34], eax
mov     eax, [ebp+var_4]
push    edi
call    sub_1004f710
mov     edi, eax
add     esp, 0ch
lea     ecx, ds:4[edi*4]
mov     esi, ebx
call    sub_10009a40
mov     [ebp+var_3c], eax
test    eax, eax
jz      loc_1004ddd8
xor     eax, eax
test    edi, edi
jle     short loc_1004d1c5
mov     edx, 1
nop
mov     ecx, [ebp+arg_0]
add     [ecx+4ch], edx
mov     ecx, [ecx+4ch]
mov     esi, [ebp+var_3c]
mov     [esi+eax*4], ecx
add     eax, edx
cmp     eax, edi
jl      short loc_1004d1b0
mov     edi, [ebp+arg_0]
mov     esi, [ebp+var_2c]
cmp     [ebp+var_44], 0
jz      short loc_1004d22a
mov     eax, [ebp+var_30]
push    eax
push    48h
mov     eax, esi
call    sub_10025940
mov     ecx, [esi+1ch]
add     esp, 8
mov     [ebp+var_54], ecx
jmp     short loc_1004d250
mov     eax, [ebp+arg_10]
mov     ecx, [eax]
mov     edx, [ecx+ebx*8]
mov     eax, [ebp+arg_4]
mov     esi, [ebp+arg_0]
push    edx
push    0
push    eax
push    offset atableshasnocol_0
push    esi
call    sub_1000bb30
add     esp, 14h
mov     byte ptr [esi+11h], 1
jmp     loc_1004ddd8
cmp     [ebp+var_20], 0
jle     loc_1004d14a
mov     ecx, [ebp+var_4]
mov     edx, [ecx+4]
mov     [ebp+var_50], edx
jmp     loc_1004d14a
cmp     [ebp+arg_c], 0
jz      short loc_1004d253
mov     edx, [ebp+var_70]
push    edx
push    4
mov     eax, esi
call    sub_10025940
mov     [ebp+var_54], eax
mov     eax, [ebp+var_10]
push    eax
push    1bh
mov     eax, esi
call    sub_10025940
add     esp, 10h
mov     [ebp+var_5c], eax
mov     eax, [edi+4ch]
mov     edx, [ebp+var_4]
mov     edx, [edx+8]
lea     ecx, [eax+1]
lea     eax, [eax+edx+1]
mov     edx, [ebp+var_4]
mov     [edi+4ch], eax
test    byte ptr [edx+22h], 10h
mov     [ebp+var_14], ecx
mov     [ebp+var_1c], ecx
jz      short loc_1004d27d
inc     ecx
inc     eax
mov     [ebp+var_1c], ecx
mov     [edi+4ch], eax
inc     ecx
mov     eax, esi
mov     [ebp+var_24], ecx
call    sub_10025c00
test    byte ptr [ebp+var_4c], 1
mov     [ebp+var_18], eax
jz      loc_1004d4f6
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     eax, [eax+8]
mov     edx, [ecx+3ch]
mov     edi, [ecx+40h]
inc     eax
mov     [ebp+var_10], edi
cmp     eax, edx
jg      short loc_1004d2b9
lea     ebx, [eax+edi]
sub     edx, eax
mov     [ecx+40h], ebx
mov     [ecx+3ch], edx
jmp     short loc_1004d2c7
mov     edx, [ecx+4ch]
lea     edi, [edx+1]
add     edx, eax
mov     [ebp+var_10], edi
mov     [ecx+4ch], edx
mov     eax, [ebp+var_50]
test    eax, eax
jns     short loc_1004d2df
push    edi
push    0ffffffffh
push    7
mov     eax, esi
call    sub_10025990
add     esp, 0ch
jmp     short loc_1004d34f
cmp     [ebp+var_44], 0
jz      short loc_1004d2f9
mov     ecx, [ebp+var_30]
push    edi
push    eax
push    ecx
push    1dh
mov     eax, esi
call    sub_10025890
add     esp, 10h
jmp     short loc_1004d312
lea     edx, [eax+eax*4]
mov     eax, [ebp+arg_8]
mov     ecx, [eax+8]
mov     eax, [ecx+edx*4]
mov     ecx, [ebp+arg_0]
mov     esi, edi
call    sub_100399d0
mov     esi, [ebp+var_2c]
push    edi
push    4ah
mov     eax, esi
call    sub_10025940
push    edi
mov     ebx, eax
push    0ffffffffh
push    7
mov     eax, esi
call    sub_10025990
add     esp, 14h
test    ebx, ebx
js      short loc_1004d342
mov     eax, [esi+1ch]
cmp     eax, ebx
jbe     short loc_1004d342
mov     ecx, [esi+4]
lea     edx, [ebx+ebx*4]
mov     [ecx+edx*4+8], eax
push    edi
push    15h
mov     eax, esi
call    sub_10025940
add     esp, 8
mov     edx, [ebp+var_4]
cmp     dword ptr [edx+8], 0
mov     [ebp+var_c], 0
jle     loc_1004d459
mov     [ebp+var_4c], 0
lea     ebx, [ebx+0]
mov     edx, [ebp+arg_10]
test    edx, edx
jnz     short loc_1004d3b6
mov     ebx, [ebp+var_c]
mov     edi, [ebp+var_c]
mov     eax, [ebp+var_44]
test    eax, eax
jnz     short loc_1004d389
cmp     [ebp+arg_8], eax
jz      short loc_1004d392
test    edx, edx
jz      short loc_1004d3d5
cmp     ebx, [edx+4]
jl      short loc_1004d3d5
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_4]
mov     edx, [ecx+0ch]
mov     ecx, [ebp+arg_0]
lea     esi, [eax+edi+1]
mov     eax, [ebp+var_4c]
mov     eax, [edx+eax+4]
call    sub_100399d0
mov     esi, [ebp+var_2c]
jmp     loc_1004d445
mov     ecx, [edx+4]
xor     ebx, ebx
test    ecx, ecx
jle     short loc_1004d37a
mov     eax, [edx]
mov     edi, [ebp+var_c]
add     eax, 4
cmp     [eax], edi
jz      short loc_1004d37d
inc     ebx
add     eax, 8
cmp     ebx, ecx
jl      short loc_1004d3c7
jmp     short loc_1004d37d
test    eax, eax
jz      short loc_1004d426
mov     eax, [esi+1ch]
mov     [ebp+var_8], eax
cmp     [esi+20h], eax
jg      short loc_1004d3f5
mov     edi, esi
call    sub_10025810
mov     edi, [ebp+var_c]
test    eax, eax
jnz     short loc_1004d445
mov     eax, [ebp+var_8]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_10]
mov     [eax+4], ecx
lea     ecx, [edx+edi+1]
mov     byte ptr [eax+3], 0
mov     [eax+8], ebx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1dh
jmp     short loc_1004d445
mov     edx, [ebp+var_10]
lea     ecx, [edx+edi+1]
mov     edx, [ebp+arg_8]
mov     edx, [edx+8]
lea     eax, [ebx+ebx*4]
mov     eax, [edx+eax*4]
push    eax
mov     eax, [ebp+arg_0]
call    sub_10039a60
add     esp, 4
mov     ecx, [ebp+var_4]
add     [ebp+var_4c], 18h
inc     edi
mov     [ebp+var_c], edi
cmp     edi, [ecx+8]
jl      loc_1004d370
cmp     [ebp+var_60], 0
jnz     short loc_1004d4b1
mov     edx, [ebp+var_4]
mov     ebx, [esi+1ch]
mov     eax, [edx+8]
mov     [ebp+var_8], eax
cmp     [esi+20h], ebx
jg      short loc_1004d47b
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004d4a5
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_8]
inc     ecx
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1eh
mov     eax, [ebp+var_4]
push    esi
call    sub_1004b9b0
add     esp, 4
mov     edi, [ebp+var_10]
mov     ebx, [ebp+var_4]
mov     eax, [ebp+var_18]
mov     ecx, [ebp+arg_14]
push    eax
mov     eax, [ebp+var_58]
push    ecx
mov     ecx, [ebp+arg_0]
mov     edx, edi
sub     edx, [ebx+8]
dec     edx
push    edx
push    ebx
push    1
push    0
push    69h
push    eax
push    ecx
call    sub_1005f840
mov     ebx, [ebx+8]
mov     eax, [ebp+arg_0]
inc     ebx
add     esp, 24h
mov     ecx, ebx
call    sub_100384f0
cmp     ebx, [eax+3ch]
jle     short loc_1004d4f6
mov     [eax+3ch], ebx
mov     [eax+40h], edi
cmp     [ebp+var_60], 0
jnz     loc_1004da7f
mov     edx, [ebp+var_4]
test    byte ptr [edx+22h], 10h
jz      short loc_1004d544
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1004d51c
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004d544
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_14]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0ah
jmp     short loc_1004d546
xor     ecx, ecx
mov     eax, [ebp+var_50]
mov     ebx, [ebp+var_1c]
cmp     eax, ecx
jl      loc_1004d65c
cmp     [ebp+var_44], ecx
jz      short loc_1004d56d
push    ebx
push    eax
mov     eax, [ebp+var_30]
push    eax
push    1dh
mov     eax, esi
call    sub_10025890
add     esp, 10h
jmp     short loc_1004d5eb
cmp     [ebp+arg_c], ecx
jz      short loc_1004d587
mov     ecx, [ebp+var_40]
add     ecx, eax
push    ebx
push    ecx
push    0fh
mov     eax, esi
call    sub_10025990
add     esp, 0ch
jmp     short loc_1004d5eb
lea     edx, [eax+eax*4]
mov     eax, [ebp+arg_8]
mov     ecx, [eax+8]
mov     eax, [ecx+edx*4]
mov     ecx, [ebp+arg_0]
mov     esi, ebx
call    sub_100399d0
mov     ecx, [ebp+var_2c]
mov     edx, [ecx]
cmp     byte ptr [edx+32h], 0
mov     eax, [ecx+1ch]
jz      short loc_1004d5b2
mov     eax, offset dword_10081398
jmp     short loc_1004d5c0
mov     ecx, [ecx+4]
lea     eax, [eax+eax*4-5]
lea     eax, [ecx+eax*4]
test    eax, eax
jz      short loc_1004d5e8
cmp     byte ptr [eax], 0ah
jnz     short loc_1004d5e8
mov     edx, [ebp+var_4]
test    byte ptr [edx+22h], 10h
jnz     short loc_1004d5e8
mov     ecx, [ebp+var_34]
mov     edx, [ebp+var_28]
mov     esi, [ebp+var_2c]
mov     byte ptr [eax], 38h
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], edx
jmp     loc_1004d68b
mov     esi, [ebp+var_2c]
mov     eax, [ebp+var_4]
test    byte ptr [eax+22h], 10h
jnz     short loc_1004d639
push    ebx
push    4ah
mov     eax, esi
call    sub_10025940
mov     ecx, [ebp+var_28]
mov     edx, [ebp+var_34]
push    ecx
push    ebx
push    edx
mov     edi, eax
push    38h
mov     eax, esi
call    sub_10025890
add     esp, 18h
test    edi, edi
js      short loc_1004d64d
mov     eax, [esi+1ch]
cmp     eax, edi
jbe     short loc_1004d64d
mov     edx, [esi+4]
lea     ecx, [edi+edi*4]
mov     [edx+ecx*4+8], eax
push    ebx
push    15h
mov     eax, esi
call    sub_10025940
add     esp, 8
jmp     short loc_1004d692
mov     eax, [esi+1ch]
add     eax, 2
push    eax
push    ebx
push    49h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
push    ebx
push    15h
mov     eax, esi
call    sub_10025940
add     esp, 8
jmp     short loc_1004d692
mov     ecx, [ebp+var_4]
test    byte ptr [ecx+22h], 10h
jz      short loc_1004d676
push    ebx
push    0
push    0ah
mov     eax, esi
call    sub_10025990
add     esp, 0ch
jmp     short loc_1004d692
mov     edx, [ebp+var_28]
mov     eax, [ebp+var_34]
push    edx
push    ebx
push    eax
push    38h
mov     eax, esi
call    sub_10025890
add     esp, 10h
mov     [ebp+var_48], 1
cmp     [ebp+var_28], 0
jle     short loc_1004d6db
mov     ecx, [ebp+arg_0]
mov     edi, [ecx+8]
mov     eax, [edi+1ch]
mov     [ebp+var_8], eax
cmp     [edi+20h], eax
jg      short loc_1004d6b5
call    sub_10025810
test    eax, eax
jnz     short loc_1004d6db
mov     eax, [ebp+var_8]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_28]
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 77h
mov     edx, [ebp+var_4]
xor     eax, eax
mov     [ebp+var_1c], eax
mov     [ebp+var_c], eax
cmp     [edx+8], eax
jle     loc_1004d918
mov     [ebp+var_28], eax
mov     ecx, edx
mov     edi, [ebp+var_24]
add     edi, eax
xor     edx, edx
mov     [ebp+var_10], edi
cmp     eax, [ecx+4]
jnz     short loc_1004d741
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1004d71c
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     loc_1004d901
xor     edx, edx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_10]
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 0ah
jmp     loc_1004d8fd
cmp     [ebp+arg_10], edx
jnz     short loc_1004d7c2
mov     edx, [ecx+0ch]
mov     eax, [ebp+var_28]
cmp     byte ptr [edx+eax+17h], 0
jz      short loc_1004d7b7
inc     [ebp+var_1c]
mov     edx, [ebp+var_4]
mov     eax, [edx+0ch]
mov     ecx, [ebp+var_28]
mov     eax, [eax+ecx+4]
test    eax, eax
jz      loc_1004d8a3
cmp     byte ptr [eax], 84h
jnz     loc_1004d8a3
mov     edx, [eax+18h]
mov     eax, [ebp+arg_0]
mov     edi, [eax+8]
mov     ebx, [edi+1ch]
mov     [ebp+var_8], edx
cmp     [edi+20h], ebx
jg      short loc_1004d795
call    sub_10025810
test    eax, eax
jnz     loc_1004d901
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_10]
mov     [eax+4], ecx
mov     [eax+8], edx
mov     word ptr [eax], 0eh
jmp     loc_1004d8f5
mov     ebx, [ebp+var_c]
sub     ebx, [ebp+var_1c]
mov     edx, [ebp+arg_10]
jmp     short loc_1004d7e2
mov     edx, [ebp+arg_10]
mov     ecx, [edx+4]
xor     ebx, ebx
test    ecx, ecx
jle     short loc_1004d7ea
mov     eax, [edx]
mov     edi, [ebp+var_c]
add     eax, 4
cmp     [eax], edi
jz      short loc_1004d7e2
inc     ebx
add     eax, 8
cmp     ebx, ecx
jl      short loc_1004d7d6
test    ebx, ebx
js      loc_1004d756
cmp     [ebp+var_20], 0
jz      loc_1004d756
test    edx, edx
jz      short loc_1004d801
cmp     ebx, [edx+4]
jge     loc_1004d756
cmp     [ebp+var_44], 0
jz      short loc_1004d850
mov     eax, [esi+1ch]
mov     [ebp+var_8], eax
cmp     [esi+20h], eax
jg      short loc_1004d824
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     loc_1004d901
mov     eax, [ebp+var_8]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_10]
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1dh
jmp     loc_1004d8fd
cmp     [ebp+arg_c], 0
jz      short loc_1004d887
mov     eax, [esi+1ch]
mov     [ebp+var_8], eax
cmp     [esi+20h], eax
jg      short loc_1004d873
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     loc_1004d901
mov     eax, [ebp+var_8]
inc     dword ptr [esi+1ch]
mov     ecx, [esi+4]
add     ebx, [ebp+var_40]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     [eax+4], ebx
jmp     short loc_1004d8ea
mov     eax, [ebp+arg_8]
mov     ecx, [eax+8]
mov     esi, [ebp+var_10]
lea     edx, [ebx+ebx*4]
mov     eax, [ecx+edx*4]
mov     ecx, [ebp+arg_0]
call    sub_100399d0
mov     esi, [ebp+var_2c]
jmp     short loc_1004d901
mov     edi, [ebp+var_10]
push    edi
push    eax
mov     eax, [ebp+arg_0]
push    eax
call    sub_10038b70
mov     ecx, eax
add     esp, 0ch
mov     [ebp+var_8], ecx
cmp     ecx, edi
jz      short loc_1004d901
mov     edx, [ebp+arg_0]
mov     edi, [edx+8]
test    edi, edi
jz      short loc_1004d901
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_1004d8db
call    sub_10025810
test    eax, eax
jnz     short loc_1004d901
mov     ecx, [ebp+var_8]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [ebx+ebx*4]
lea     eax, [edx+eax*4]
mov     [eax+4], ecx
mov     ecx, [ebp+var_10]
mov     [eax+8], ecx
mov     word ptr [eax], 0fh
xor     ecx, ecx
mov     [eax+10h], ecx
mov     [eax+0ch], ecx
mov     byte ptr [eax+3], 0
mov     eax, [ebp+var_c]
mov     ecx, [ebp+var_4]
add     [ebp+var_28], 18h
inc     eax
mov     [ebp+var_c], eax
cmp     eax, [ecx+8]
jl      loc_1004d6f4
mov     edi, [ebp+var_4]
test    byte ptr [edi+22h], 10h
jz      loc_1004da1c
mov     eax, [edi+34h]
mov     [ebp+var_40], eax
test    eax, eax
jz      short loc_1004d940
mov     ecx, [ebp+var_38]
cmp     [eax], ecx
jz      short loc_1004d93d
mov     eax, [eax+18h]
test    eax, eax
jnz     short loc_1004d932
mov     [ebp+var_40], eax
mov     eax, [ebp+arg_0]
push    edi
call    sub_10063df0
mov     ecx, [edi+8]
mov     ebx, [esi+1ch]
add     ecx, 2
add     esp, 4
mov     [ebp+var_8], ecx
cmp     [esi+20h], ebx
jg      short loc_1004d972
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1004d96f
mov     ebx, 1
jmp     short loc_1004d99f
mov     ecx, [ebp+var_8]
mov     edi, [esi+4]
mov     edx, 1
add     [esi+1ch], edx
lea     eax, [ebx+ebx*4]
lea     eax, [edi+eax*4]
mov     [eax+8], ecx
mov     ecx, [ebp+var_14]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 8ch
mov     ecx, [esi+4]
mov     edi, [esi]
mov     eax, ebx
test    ecx, ecx
jz      short loc_1004d9e9
cmp     byte ptr [edi+32h], 0
jnz     short loc_1004d9e9
test    ebx, ebx
jns     short loc_1004d9b8
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ebx, [ecx+edx*4]
mov     ecx, [ebx+10h]
call    sub_10025e50
mov     eax, [ebp+var_40]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_1004d9df
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1004d9e9
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0f6h
inc     dword ptr [eax+0ch]
mov     edx, [ebp+arg_14]
cmp     edx, 63h
jnz     short loc_1004d9f6
mov     edx, 2
mov     ecx, [esi+4]
test    ecx, ecx
jz      short loc_1004da07
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4]
mov     [ecx+eax*4-11h], dl
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+1b0h]
test    eax, eax
jnz     short loc_1004da16
mov     eax, ecx
mov     byte ptr [eax+18h], 1
jmp     short loc_1004da7f
mov     edx, [ebp+var_18]
mov     eax, [ebp+arg_14]
mov     ebx, [ebp+arg_0]
lea     ecx, [ebp+var_8]
push    ecx
xor     ecx, ecx
cmp     [ebp+var_50], ecx
push    edx
mov     edx, [ebp+var_3c]
push    eax
mov     eax, [ebp+var_14]
setnl   cl
push    0
push    ecx
mov     ecx, [ebp+var_34]
push    edx
push    eax
push    ecx
push    edi
push    ebx
call    sub_1004deb0
mov     edx, [ebp+var_14]
push    edx
push    0
push    edi
call    sub_1004a080
mov     ecx, [ebp+var_48]
mov     edx, [ebp+var_3c]
add     esp, 34h
xor     eax, eax
cmp     [ebp+var_8], eax
setz    al
push    eax
mov     eax, [ebp+var_14]
push    ecx
mov     ecx, [ebp+var_34]
push    0
push    edx
push    eax
push    ecx
mov     edx, edi
push    edx
push    ebx
call    sub_1004f3b0
add     esp, 20h
mov     eax, [ebp+var_38]
test    dword ptr [eax+18h], 1000h
jz      short loc_1004dacb
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1004da9e
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004dacb
mov     eax, [esi+4]
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_64]
mov     ecx, 1
add     [esi+1ch], ecx
xor     ebx, ebx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 14h
jmp     short loc_1004dacd
xor     ebx, ebx
mov     ecx, [ebp+var_58]
cmp     ecx, ebx
jz      short loc_1004dafc
mov     eax, [ebp+var_18]
mov     edx, [ebp+arg_14]
push    eax
mov     eax, [ebp+var_24]
push    edx
mov     edx, [ebp+var_4]
sub     eax, [edx+8]
sub     eax, 2
push    eax
mov     eax, [ebp+arg_0]
push    edx
push    2
push    ebx
push    69h
push    ecx
push    eax
call    sub_1005f840
add     esp, 24h
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_1004db14
mov     ecx, [ebp+var_18]
lea     edx, ds:4[ecx*4]
mov     ecx, [esi+1ch]
sub     eax, edx
mov     [eax], ecx
cmp     [ebp+var_44], ebx
jz      loc_1004dbb8
mov     eax, [esi+1ch]
mov     [ebp+var_8], eax
cmp     [esi+20h], eax
jg      short loc_1004db36
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004db5d
mov     eax, [ebp+var_8]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_30]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_54]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 5fh
mov     eax, [ebp+var_5c]
cmp     eax, ebx
jl      short loc_1004db75
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_1004db75
mov     edx, [esi+4]
lea     eax, [eax+eax*4]
mov     [edx+eax*4+8], ecx
mov     eax, [esi+1ch]
mov     [ebp+var_8], eax
cmp     [esi+20h], eax
jg      short loc_1004db92
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     loc_1004dc12
mov     eax, [ebp+var_8]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_30]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
jmp     short loc_1004dc12
cmp     [ebp+arg_c], ebx
jz      short loc_1004dc12
mov     eax, [esi+1ch]
mov     [ebp+var_8], eax
cmp     [esi+20h], eax
jg      short loc_1004dbd6
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004dbfa
mov     eax, [ebp+var_8]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_54]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     byte ptr [eax+3], 0
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
mov     eax, [ebp+var_5c]
cmp     eax, ebx
jl      short loc_1004dc12
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_1004dc12
mov     edx, [esi+4]
lea     eax, [eax+eax*4]
mov     [edx+eax*4+8], ecx
mov     eax, [ebp+var_4]
test    byte ptr [eax+22h], 10h
jnz     loc_1004dccc
cmp     [ebp+var_60], 0
jnz     loc_1004dccc
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1004dc3c
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004dc63
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+var_34]
xor     ecx, ecx
mov     [eax+3], cl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 2dh
jmp     short loc_1004dc65
xor     ecx, ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+10h]
mov     [ebp+var_24], eax
cmp     eax, ecx
jz      short loc_1004dccc
mov     ecx, [ebp+var_34]
inc     ecx
mov     [ebp+var_48], ecx
lea     esp, [esp+0]
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1004dc93
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004dcba
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_48]
xor     ecx, ecx
mov     [eax+3], cl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 2dh
jmp     short loc_1004dcbc
xor     ecx, ecx
mov     eax, [ebp+var_24]
mov     eax, [eax+14h]
inc     [ebp+var_48]
mov     [ebp+var_24], eax
cmp     eax, ecx
jnz     short loc_1004dc80
mov     ebx, [ebp+arg_0]
cmp     byte ptr [ebx+12h], 0
jnz     short loc_1004dce7
cmp     dword ptr [ebx+1b4h], 0
jnz     short loc_1004dce7
push    ebx
call    sub_1004c3c0
add     esp, 4
mov     ecx, [ebp+var_38]
test    dword ptr [ecx+18h], 1000h
jz      loc_1004ddd8
cmp     byte ptr [ebx+12h], 0
jnz     loc_1004ddd8
cmp     dword ptr [ebx+1b4h], 0
jnz     loc_1004ddd8
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1004dd21
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1004dd4c
mov     eax, [esi+4]
mov     ecx, 1
add     [esi+1ch], ecx
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_64]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 10h
mov     eax, 1
mov     edi, esi
call    sub_10026ff0
mov     eax, [esi]
cmp     byte ptr [eax+32h], 0
jnz     short loc_1004ddd8
mov     esi, [esi+10h]
mov     eax, [esi]
test    eax, eax
jz      short loc_1004dd6e
mov     eax, [eax+48h]
jmp     short loc_1004dd73
mov     eax, 3b9aca00h
xor     edi, edi
test    eax, eax
js      short loc_1004dd8e
lea     esp, [esp+0]
cmp     ds:byte_1007b75c[edi], 0
jz      short loc_1004dd8e
inc     edi
cmp     edi, eax
jle     short loc_1004dd80
xor     ecx, ecx
mov     ebx, 202h
push    esi
cmp     ecx, offset sub_10009760
jnz     short loc_1004ddb0
call    sub_100247d0
mov     eax, offset byte_1007b75c
mov     [esi+4], eax
mov     [esi+24h], eax
jmp     short loc_1004ddc1
call    sub_100247d0
mov     dword ptr [esi+4], offset byte_1007b75c
mov     ebx, 0a02h
mov     dword ptr [esi+20h], 0
add     esp, 4
mov     [esi+18h], edi
mov     [esi+1ch], bx
mov     word ptr [esi+1eh], 103h
mov     edx, [ebp+arg_4]
mov     esi, [ebp+var_38]
push    edx
mov     eax, esi
call    sub_10043720
mov     eax, [ebp+arg_8]
add     esp, 4
push    eax
push    esi
call    sub_10037020
mov     edi, [ebp+arg_c]
add     esp, 8
test    edi, edi
jz      short loc_1004de10
push    edi
push    esi
call    sub_10054390
add     esp, 8
mov     eax, edi
mov     ecx, esi
call    sub_10009810
mov     edi, [ebp+arg_10]
call    sub_100433b0
mov     eax, [ebp+var_3c]
test    esi, esi
jz      short loc_1004de9a
cmp     dword ptr [esi+1e8h], 0
jz      short loc_1004de6b
test    eax, eax
jz      short loc_1004de52
cmp     eax, [esi+0fch]
jb      short loc_1004de52
cmp     eax, [esi+100h]
jnb     short loc_1004de52
movzx   eax, word ptr [esi+0e0h]
mov     esi, [esi+1e8h]
add     [esi], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    eax
call    dword_10080258
mov     esi, [esi+1e8h]
add     esp, 4
add     [esi], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jz      short loc_1004de9a
cmp     eax, [esi+0fch]
jb      short loc_1004de9a
cmp     eax, [esi+100h]
jnb     short loc_1004de9a
mov     ecx, [esi+0f8h]
mov     [eax], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    eax
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 54h
mov     eax, [ebp+arg_14]
push    ebx
push    esi
push    edi
xor     edi, edi
mov     [ebp+src], edi
mov     [ebp+var_20], edi
cmp     eax, edi
jz      short loc_1004decd
cmp     [ebp+arg_18], edi
jnz     short loc_1004ded0
mov     eax, [ebp+arg_c]
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
push    eax
mov     [ebp+var_14], ecx
call    sub_10056c90
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_c]
mov     esi, eax
mov     eax, [edx+8]
inc     ecx
add     esp, 4
mov     [ebp+var_c], esi
mov     [ebp+var_24], eax
mov     [ebp+var_2c], ecx
mov     [ebp+var_8], edi
cmp     eax, edi
jle     loc_1004e0e2
mov     edx, ecx
mov     [ebp+var_4], edi
mov     [ebp+var_10], edx
lea     esp, [esp+0]
mov     eax, [ebp+var_8]
mov     edx, [ebp+arg_4]
cmp     eax, [edx+4]
jz      loc_1004e0cb
mov     eax, [ebp+var_4]
add     eax, [edx+0ch]
movzx   ebx, byte ptr [eax+14h]
test    ebx, ebx
jz      loc_1004e0cb
mov     ecx, [ebp+arg_1c]
cmp     ecx, 63h
jz      short loc_1004df3d
mov     ebx, ecx
jmp     short loc_1004df42
cmp     ebx, 63h
jz      short loc_1004df4d
cmp     ebx, 5
jnz     short loc_1004df52
cmp     dword ptr [eax+4], 0
jnz     short loc_1004df52
mov     ebx, 2
lea     eax, [ebx-1]
cmp     eax, 3
ja      def_1004df5e
jmp     ds:jpt_1004df5e[eax*4]
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+1b0h]
test    eax, eax
jnz     short loc_1004df74
mov     eax, ecx
mov     byte ptr [eax+18h], 1
mov     eax, [esi+1ch]
mov     [ebp+var_34], eax
cmp     [esi+20h], eax
jg      short loc_1004df94
mov     edi, esi
call    sub_10025810
mov     edx, [ebp+arg_4]
test    eax, eax
jnz     short loc_1004dfc0
mov     eax, [ebp+var_34]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+ecx*4]
mov     ecx, [ebp+var_10]
mov     byte ptr [eax+3], 0
mov     dword ptr [eax+4], 13h
mov     [eax+8], ebx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 5
mov     eax, [edx+0ch]
mov     ecx, [ebp+var_4]
mov     eax, [ecx+eax]
mov     ecx, [edx]
mov     edx, [ebp+var_14]
push    eax
push    ecx
push    offset assmaynotbenull
push    edx
call    sub_1000ae80
mov     ebx, [esi+4]
mov     edi, [esi]
add     esp, 10h
mov     [ebp+var_28], eax
test    ebx, ebx
jz      short loc_1004e033
cmp     byte ptr [edi+32h], 0
jnz     short loc_1004e033
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4-5]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
call    sub_10025e50
cmp     [ebp+var_28], 0
mov     dword ptr [ebx+10h], 0
jnz     short loc_1004e024
mov     dword ptr [ebx+10h], 0
mov     byte ptr [ebx+1], 0
jmp     loc_1004e0cb
mov     ecx, [ebp+var_28]
mov     [ebx+10h], ecx
mov     byte ptr [ebx+1], 0ffh
jmp     loc_1004e0cb
mov     ecx, eax
or      eax, 0ffffffffh
call    sub_10025e50
jmp     loc_1004e0cb
mov     edx, [ebp+arg_20]
mov     eax, [ebp+var_10]
push    edx
push    eax
push    49h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
jmp     short loc_1004e0cb
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1004e072
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1004e072
mov     ebx, 1
jmp     short loc_1004e098
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_10]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 4ah
mov     edx, [ebp+arg_4]
mov     eax, [edx+0ch]
mov     ecx, [ebp+var_4]
mov     eax, [ecx+eax+4]
mov     esi, [ebp+var_10]
mov     ecx, [ebp+arg_0]
call    sub_100399d0
test    ebx, ebx
js      short loc_1004e0c8
mov     edx, [ebp+var_c]
mov     eax, [edx+1ch]
cmp     eax, ebx
jbe     short loc_1004e0c8
mov     edx, [edx+4]
lea     ecx, [ebx+ebx*4]
mov     [edx+ecx*4+8], eax
mov     esi, [ebp+var_c]
mov     eax, [ebp+var_8]
inc     [ebp+var_10]
add     [ebp+var_4], 18h
inc     eax
mov     [ebp+var_8], eax
cmp     eax, [ebp+var_24]
jl      loc_1004df10
mov     eax, [ebp+arg_4]
mov     ecx, [eax+2ch]
xor     edx, edx
mov     [ebp+var_28], ecx
cmp     ecx, edx
jz      loc_1004e31e
mov     eax, [ebp+var_14]
test    dword ptr [eax+18h], 40000h
jnz     loc_1004e31e
mov     eax, [ebp+arg_0]
mov     edi, [ebp+var_2c]
mov     [eax+58h], edi
mov     eax, [ebp+arg_1c]
mov     [ebp+var_4], eax
cmp     eax, 63h
jnz     short loc_1004e120
mov     [ebp+var_4], 2
mov     [ebp+var_8], edx
cmp     [ecx], edx
jle     loc_1004e321
mov     [ebp+var_24], edx
mov     edi, edi
mov     edi, [esi+24h]
lea     edx, [edi-1]
lea     ecx, [edi+1]
mov     [esi+24h], ecx
test    edi, edx
jnz     short loc_1004e16f
mov     eax, [esi]
mov     ebx, [esi+28h]
lea     ecx, ds:4[edi*8]
push    ecx
mov     [ebp+var_34], eax
call    sub_10009ac0
add     esp, 4
mov     [ebp+var_1c], eax
test    eax, eax
jnz     short loc_1004e16c
mov     ecx, [ebp+var_34]
mov     eax, ebx
call    sub_10009810
mov     eax, [ebp+var_1c]
mov     [esi+28h], eax
mov     eax, [esi+28h]
test    eax, eax
jz      short loc_1004e17d
mov     dword ptr [eax+edi*4], 0ffffffffh
mov     edx, [ebp+var_28]
mov     eax, [edx+8]
mov     edx, [ebp+arg_0]
or      ebx, 0ffffffffh
sub     ebx, edi
mov     edi, [ebp+var_24]
mov     ecx, [eax+edi]
push    8
push    ebx
push    ecx
push    edx
mov     [ebp+var_10], ebx
call    sub_10039e70
mov     eax, [ebp+var_4]
add     esp, 10h
cmp     eax, 4
jnz     short loc_1004e1f1
mov     eax, [esi+1ch]
mov     [ebp+var_34], eax
cmp     [esi+20h], eax
jg      short loc_1004e1c6
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     loc_1004e2f3
mov     eax, [ebp+var_34]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+arg_20]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
jmp     loc_1004e2f3
mov     ecx, [ebp+var_28]
mov     edx, [ecx+8]
mov     edi, [edx+edi+4]
cmp     eax, 5
jnz     short loc_1004e207
mov     [ebp+var_4], 2
test    edi, edi
jz      short loc_1004e222
mov     eax, [ebp+var_14]
push    edi
push    offset aconstraintsfai
push    eax
call    sub_1000ae80
add     esp, 0ch
mov     [ebp+var_1c], eax
jmp     short loc_1004e229
mov     [ebp+var_1c], 0
mov     ebx, [ebp+arg_0]
push    ebx
call    sub_10056c90
add     esp, 4
cmp     [ebp+var_4], 2
mov     edi, eax
jnz     short loc_1004e24d
mov     eax, [ebx+1b0h]
test    eax, eax
jnz     short loc_1004e249
mov     eax, ebx
mov     byte ptr [eax+18h], 1
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_1004e265
call    sub_10025810
test    eax, eax
jz      short loc_1004e265
mov     eax, 1
jmp     short loc_1004e291
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_4]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     dword ptr [eax+4], 13h
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 6
mov     eax, ebx
mov     ebx, [edi+4]
mov     edx, [edi]
test    ebx, ebx
jz      short loc_1004e2e3
cmp     byte ptr [edx+32h], 0
jnz     short loc_1004e2e3
test    eax, eax
jns     short loc_1004e2a8
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
mov     edi, edx
call    sub_10025e50
cmp     [ebp+var_1c], 0
mov     dword ptr [ebx+10h], 0
jnz     short loc_1004e2d7
mov     dword ptr [ebx+10h], 0
mov     byte ptr [ebx+1], 0
jmp     short loc_1004e2f0
mov     ecx, [ebp+var_1c]
mov     [ebx+10h], ecx
mov     byte ptr [ebx+1], 0ffh
jmp     short loc_1004e2f0
mov     ecx, [ebp+var_1c]
or      eax, 0ffffffffh
mov     edi, edx
call    sub_10025e50
mov     ebx, [ebp+var_10]
mov     eax, [esi+28h]
test    eax, eax
jz      short loc_1004e308
mov     ecx, [esi+1ch]
lea     edx, ds:4[ebx*4]
sub     eax, edx
mov     [eax], ecx
mov     eax, [ebp+var_8]
mov     edx, [ebp+var_28]
add     [ebp+var_24], 14h
inc     eax
mov     [ebp+var_8], eax
cmp     eax, [edx]
jl      loc_1004e130
mov     eax, [ebp+arg_1c]
cmp     [ebp+arg_14], 0
jz      loc_1004e675
mov     ecx, [ebp+arg_4]
movzx   ecx, byte ptr [ecx+23h]
mov     [ebp+var_4], ecx
cmp     eax, 63h
jz      short loc_1004e33f
mov     [ebp+var_4], eax
jmp     short loc_1004e34b
cmp     ecx, 63h
jnz     short loc_1004e34b
mov     [ebp+var_4], 2
cmp     [ebp+arg_18], 0
jz      short loc_1004e399
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1004e36d
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1004e36d
mov     [ebp+src], 1
jmp     short loc_1004e399
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+arg_c]
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_14]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     word ptr [eax], 4ch
mov     [ebp+src], ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004e40a
test    eax, eax
jz      short loc_1004e3ab
add     eax, eax
jmp     short loc_1004e3b0
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1004e44a
mov     eax, [esi]
test    eax, eax
jz      short loc_1004e3ee
cmp     ebx, [eax+0fch]
jb      short loc_1004e3ee
cmp     ebx, [eax+100h]
jnb     short loc_1004e3ee
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004e3fa
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_c]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     word ptr [eax], 36h
mov     [ebp+arg_14], edi
mov     eax, [ebp+var_4]
dec     eax
cmp     eax, 4
ja      def_1004e443
jmp     ds:jpt_1004e443[eax*4]
mov     [ebp+arg_14], 1
jmp     short loc_1004e436
mov     eax, [ebp+var_14]
mov     edi, [ebp+arg_0]
xor     ebx, ebx
test    dword ptr [eax+18h], 2000000h
jz      short loc_1004e47f
mov     edx, [ebp+arg_4]
push    ebx
push    ebx
push    6ah
mov     eax, edi
call    sub_1005f080
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     loc_1004e50c
mov     ecx, [edi]
test    dword ptr [ecx+18h], 4000000h
jz      short loc_1004e4cf
mov     edx, [ebp+arg_4]
mov     ecx, [edx]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1004e4ad
cmp     byte ptr [ecx], 0
jz      short loc_1004e4a6
lea     ebx, [ebx+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004e4a0
sub     eax, ecx
and     eax, 3fffffffh
mov     edx, [edx+44h]
push    ecx
add     edx, 38h
push    edx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
test    eax, eax
jnz     short loc_1004e506
mov     eax, [ebp+arg_4]
cmp     dword ptr [eax+24h], 0
jnz     short loc_1004e506
mov     esi, [ebp+var_c]
mov     eax, [ebp+arg_4]
cmp     dword ptr [eax+10h], 0
jz      short loc_1004e536
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+1b0h]
test    edx, edx
jnz     short loc_1004e4e7
mov     edx, ecx
mov     byte ptr [edx+17h], 1
mov     edx, [ebp+arg_8]
push    0
push    edx
push    ecx
call    sub_10045700
add     esp, 0ch
mov     [ebp+var_20], 1
jmp     loc_1004e63c
mov     esi, [ebp+var_c]
mov     edi, [ebp+arg_0]
mov     eax, [edi+1b0h]
test    eax, eax
jnz     short loc_1004e518
mov     eax, edi
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    5
push    ebx
push    0
mov     byte ptr [eax+17h], 1
mov     eax, [ebp+arg_c]
push    eax
push    ecx
push    edx
push    edi
call    sub_10045370
add     esp, 1ch
mov     [ebp+var_20], 1
jmp     loc_1004e63c
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_1004e559
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     loc_1004e63c
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+arg_20]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
jmp     loc_1004e63c
mov     [ebp+var_4], 2
mov     ebx, [ebp+arg_0]
push    ebx
call    sub_10056c90
add     esp, 4
cmp     [ebp+var_4], 2
mov     edi, eax
jnz     short loc_1004e5af
mov     eax, [ebx+1b0h]
test    eax, eax
jnz     short loc_1004e5ab
mov     eax, ebx
mov     byte ptr [eax+18h], 1
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_1004e5c7
call    sub_10025810
test    eax, eax
jz      short loc_1004e5c7
mov     ebx, 1
jmp     short loc_1004e5f1
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_4]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     dword ptr [eax+4], 13h
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 6
mov     ecx, [edi+4]
mov     edx, [edi]
mov     eax, ebx
test    ecx, ecx
jz      short loc_1004e62b
cmp     byte ptr [edx+32h], 0
jnz     short loc_1004e62b
test    ebx, ebx
jns     short loc_1004e60a
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     ebx, [ecx+eax*4]
movsx   eax, byte ptr [ebx+1]
mov     ecx, [ebx+10h]
mov     edi, edx
call    sub_10025e50
mov     dword ptr [ebx+10h], offset aprimarykeymust
mov     byte ptr [ebx+1], 0feh
jmp     short loc_1004e63c
mov     ecx, offset aprimarykeymust
mov     eax, 0fffffffeh
mov     edi, edx
call    sub_10025e50
mov     eax, [ebp+arg_14]
test    eax, eax
js      short loc_1004e654
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_1004e654
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     [eax+edx*4+8], ecx
cmp     [ebp+arg_18], 0
jz      short loc_1004e675
cmp     [ebp+src], 0
jl      short loc_1004e675
mov     eax, [esi+1ch]
cmp     eax, [ebp+src]
jbe     short loc_1004e675
mov     ecx, [ebp+src]
mov     edx, [esi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
mov     eax, [ebp+arg_4]
mov     eax, [eax+10h]
mov     [ebp+var_1c], 0
mov     [ebp+arg_14], eax
test    eax, eax
jz      loc_1004f36c
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+arg_10]
cmp     dword ptr [edx+ecx*4], 0
jz      loc_1004f358
mov     edi, [ebp+arg_14]
mov     ecx, [ebp+arg_0]
mov     eax, [edi+24h]
mov     edx, [ecx+3ch]
mov     ebx, [ecx+40h]
inc     eax
mov     [ebp+var_10], ebx
cmp     eax, edx
jg      short loc_1004e6c0
add     ebx, eax
sub     edx, eax
mov     [ecx+40h], ebx
mov     [ecx+3ch], edx
jmp     short loc_1004e6ce
mov     edx, [ecx+4ch]
lea     ebx, [edx+1]
add     edx, eax
mov     [ebp+var_10], ebx
mov     [ecx+4ch], edx
cmp     dword ptr [edi+24h], 0
mov     [ebp+var_8], 0
jle     loc_1004e836
mov     eax, [ebp+var_10]
mov     [ebp+src], eax
mov     ecx, [ebp+arg_14]
mov     edx, [ecx+4]
mov     eax, [ebp+var_8]
mov     eax, [edx+eax*4]
mov     ecx, [ebp+arg_4]
cmp     eax, [ecx+4]
mov     edi, [esi+1ch]
mov     [ebp+var_24], eax
mov     eax, [esi+20h]
jnz     loc_1004e78e
cmp     eax, edi
jg      short loc_1004e771
test    eax, eax
jz      short loc_1004e712
add     eax, eax
jmp     short loc_1004e717
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1004e820
mov     eax, [esi]
test    eax, eax
jz      short loc_1004e755
cmp     ebx, [eax+0fch]
jb      short loc_1004e755
cmp     ebx, [eax+100h]
jnb     short loc_1004e755
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004e761
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+arg_c]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+src]
mov     [eax+4], edx
mov     [eax+8], ecx
jmp     loc_1004e810
cmp     eax, edi
jg      short loc_1004e7f5
test    eax, eax
jz      short loc_1004e79a
add     eax, eax
jmp     short loc_1004e79f
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004e820
mov     eax, [esi]
test    eax, eax
jz      short loc_1004e7d9
cmp     ebx, [eax+0fch]
jb      short loc_1004e7d9
cmp     ebx, [eax+100h]
jnb     short loc_1004e7d9
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004e7e5
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
inc     dword ptr [esi+1ch]
mov     ecx, [esi+4]
mov     edx, [ebp+var_24]
add     edx, [ebp+var_2c]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     [eax+4], edx
mov     edx, [ebp+src]
mov     [eax+8], edx
xor     ecx, ecx
mov     word ptr [eax], 0fh
mov     [eax+10h], ecx
mov     [eax+0ch], ecx
mov     [eax+3], cl
mov     eax, [ebp+var_8]
mov     ecx, [ebp+arg_14]
inc     [ebp+src]
inc     eax
mov     [ebp+var_8], eax
cmp     eax, [ecx+24h]
jl      loc_1004e6e5
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004e8a3
test    eax, eax
jz      short loc_1004e848
add     eax, eax
jmp     short loc_1004e84d
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004e8cf
mov     eax, [esi]
test    eax, eax
jz      short loc_1004e887
cmp     ebx, [eax+0fch]
jb      short loc_1004e887
cmp     ebx, [eax+100h]
jnb     short loc_1004e887
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004e893
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+arg_c]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_10]
add     ecx, [ebp+var_8]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
xor     ecx, ecx
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0fh
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+arg_10]
mov     edx, [ecx+eax*4]
mov     eax, [ebp+arg_14]
mov     edi, [eax+24h]
mov     eax, [esi+1ch]
mov     ecx, [esi+20h]
inc     edi
mov     [ebp+src], edx
mov     [ebp+var_24], eax
cmp     ecx, eax
jg      short loc_1004e954
lea     eax, [ecx+ecx]
test    ecx, ecx
jnz     short loc_1004e8fb
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004e97f
mov     eax, [esi]
test    eax, eax
jz      short loc_1004e935
cmp     ebx, [eax+0fch]
jb      short loc_1004e935
cmp     ebx, [eax+100h]
jnb     short loc_1004e935
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004e941
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [ebp+var_24]
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_10]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+src]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edi
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1fh
mov     eax, [ebp+arg_14]
cmp     dword ptr [eax+10h], 0
jnz     loc_1004ea46
mov     edi, [eax+24h]
mov     ecx, [eax+0ch]
mov     edx, [esi]
add     edi, 2
lea     eax, [edi-1]
mov     [ebp+src], ecx
mov     [ebp+var_24], edx
cmp     eax, 7ffffefeh
ja      short loc_1004e9f1
cmp     dword_10080230, 0
jz      short loc_1004e9e2
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1004e9c3
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [ebp+var_28]
mov     eax, edi
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1004e9f8
push    eax
call    dword_10080284
add     esp, 4
jmp     short loc_1004e9f8
push    edi
call    dword_1008024c
add     esp, 4
mov     [ebp+var_28], eax
jmp     short loc_1004e9f8
mov     [ebp+var_28], 0
mov     eax, [ebp+var_28]
mov     ecx, [ebp+arg_14]
mov     [ecx+10h], eax
test    eax, eax
jnz     short loc_1004ea11
mov     ecx, [ebp+var_24]
mov     byte ptr [ecx+32h], 1
mov     [ebp+src], eax
jmp     short loc_1004ea4f
xor     eax, eax
cmp     [ecx+24h], eax
jle     short loc_1004ea37
mov     edx, [ecx+4]
mov     edx, [edx+eax*4]
mov     edi, [ebp+src]
mov     edi, [edi+0ch]
mov     ebx, [ecx+10h]
lea     edx, [edx+edx*2]
mov     dl, [edi+edx*8+16h]
mov     [eax+ebx], dl
inc     eax
cmp     eax, [ecx+24h]
jl      short loc_1004ea18
mov     edx, [ecx+10h]
mov     byte ptr [eax+edx], 64h
mov     ecx, [ecx+10h]
mov     byte ptr [eax+ecx+1], 0
mov     edx, [ebp+arg_14]
mov     eax, [edx+10h]
mov     [ebp+src], eax
mov     ebx, [esi+4]
mov     edi, [esi]
test    ebx, ebx
jz      loc_1004eade
cmp     byte ptr [edi+32h], 0
jnz     loc_1004eade
mov     eax, [esi+1ch]
lea     ecx, [eax+eax*4-5]
movsx   eax, byte ptr [ebx+ecx*4+1]
lea     ebx, [ebx+ecx*4]
mov     ecx, [ebx+10h]
call    sub_10025e50
cmp     [ebp+src], 0
mov     dword ptr [ebx+10h], 0
jnz     short loc_1004ea97
mov     dword ptr [ebx+10h], 0
mov     byte ptr [ebx+1], 0
jmp     short loc_1004eae8
mov     ecx, [ebp+src]
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_1004eaa7
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004eaa1
mov     esi, [esi]
sub     eax, ecx
and     eax, 3fffffffh
mov     edi, eax
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1004ead2
mov     edx, [ebp+src]
push    edi
push    edx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     [ebx+10h], esi
mov     esi, [ebp+var_c]
mov     byte ptr [ebx+1], 0ffh
jmp     short loc_1004eae8
mov     ecx, [ebp+src]
xor     eax, eax
call    sub_10025e50
mov     ebx, [ebp+arg_14]
mov     ecx, [ebx+24h]
mov     eax, [ebp+arg_0]
mov     edi, [ebp+var_10]
inc     ecx
call    sub_100384f0
movzx   ecx, byte ptr [ebx+2ch]
mov     [ebp+var_4], ecx
test    ecx, ecx
jnz     short loc_1004eb24
mov     ebx, [ebx+24h]
inc     ebx
mov     ecx, ebx
call    sub_100384f0
cmp     ebx, [eax+3ch]
jle     loc_1004f358
mov     [eax+3ch], ebx
mov     [eax+40h], edi
jmp     loc_1004f358
mov     edx, [ebp+arg_1c]
cmp     edx, 63h
jz      short loc_1004eb33
mov     [ebp+var_4], edx
mov     ecx, edx
jmp     short loc_1004eb42
cmp     ecx, 63h
jnz     short loc_1004eb42
mov     [ebp+var_4], 2
mov     ecx, [ebp+var_4]
cmp     [ebp+var_20], 0
jz      short loc_1004eb62
cmp     ecx, 4
jnz     short loc_1004eb56
mov     [ebp+var_4], 5
jmp     short loc_1004eb62
cmp     ecx, 3
jnz     short loc_1004eb62
mov     [ebp+var_4], 2
mov     cl, [eax+13h]
test    cl, cl
jnz     short loc_1004eb74
inc     dword ptr [eax+4ch]
mov     eax, [eax+4ch]
mov     [ebp+var_8], eax
jmp     short loc_1004eb83
dec     cl
mov     [eax+13h], cl
movzx   ecx, cl
mov     edx, [eax+ecx*4+1ch]
mov     [ebp+var_8], edx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004ebf0
test    eax, eax
jz      short loc_1004eb95
add     eax, eax
jmp     short loc_1004eb9a
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004ec19
mov     eax, [esi]
test    eax, eax
jz      short loc_1004ebd4
cmp     ebx, [eax+0fch]
jb      short loc_1004ebd4
cmp     ebx, [eax+100h]
jnb     short loc_1004ebd4
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004ebe0
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_8]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0fh
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004ec8a
test    eax, eax
jz      short loc_1004ec2b
add     eax, eax
jmp     short loc_1004ec30
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1004ecf5
mov     eax, [esi]
test    eax, eax
jz      short loc_1004ec6e
cmp     ebx, [eax+0fch]
jb      short loc_1004ec6e
cmp     ebx, [eax+100h]
jnb     short loc_1004ec6e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004ec7a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+arg_8]
mov     ecx, [ebp+var_1c]
lea     ecx, [ecx+edx+1]
mov     edx, [ebp+var_8]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     word ptr [eax], 35h
mov     [ebp+src], edi
mov     eax, edi
mov     ebx, [esi+4]
mov     edi, [esi]
test    ebx, ebx
jz      short loc_1004ed00
cmp     byte ptr [edi+32h], 0
jnz     short loc_1004ed00
test    eax, eax
jns     short loc_1004ecd6
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
call    sub_10025e50
mov     edi, [ebp+var_10]
mov     [ebx+10h], edi
mov     byte ptr [ebx+1], 0f2h
jmp     short loc_1004ed10
mov     eax, 1
mov     [ebp+src], eax
jmp     short loc_1004ecbf
mov     ecx, [ebp+var_10]
mov     eax, 0fffffff2h
call    sub_10025e50
mov     edi, [ebp+var_10]
mov     ecx, [ebp+arg_14]
mov     ebx, [ecx+24h]
mov     eax, [ebp+arg_0]
inc     ebx
mov     ecx, ebx
call    sub_100384f0
mov     edx, eax
cmp     ebx, [edx+3ch]
jle     short loc_1004ed2e
mov     [edx+3ch], ebx
mov     [edx+40h], edi
mov     eax, [ebp+var_4]
xor     ecx, ecx
cmp     eax, ecx
jle     loc_1004f28d
cmp     eax, 3
jle     loc_1004ede9
cmp     eax, 4
jnz     loc_1004f28d
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004edc0
cmp     eax, ecx
jz      short loc_1004ed5f
add     eax, eax
jmp     short loc_1004ed64
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1004f30c
mov     eax, [esi]
test    eax, eax
jz      short loc_1004eda2
cmp     ebx, [eax+0fch]
jb      short loc_1004eda2
cmp     ebx, [eax+100h]
jnb     short loc_1004eda2
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004edae
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
xor     ecx, ecx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_20]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
jmp     loc_1004f30c
mov     eax, [ebp+var_14]
mov     [ebp+var_4c], ecx
mov     [ebp+var_48], ecx
mov     [ebp+var_44], ecx
mov     [ebp+var_40], ecx
mov     [ebp+var_38], cl
mov     ecx, [ebp+arg_14]
mov     [ebp+var_50], eax
mov     eax, [ecx+24h]
mov     [ebp+var_3c], 0c8h
mov     [ebp+var_37], 1
mov     ebx, offset acolumns
cmp     eax, 1
jg      short loc_1004ee20
mov     ebx, offset acolumn
xor     edi, edi
test    eax, eax
jle     short loc_1004ee68
mov     edx, [ebp+arg_14]
mov     eax, [edx+4]
mov     eax, [eax+edi*4]
mov     edx, [ebp+arg_4]
lea     ecx, [eax+eax*2]
mov     eax, [edx+0ch]
mov     ecx, [eax+ecx*8]
push    0ffffffffh
push    ebx
lea     eax, [ebp+var_50]
mov     [ebp+var_24], ecx
call    sub_1000ac50
mov     edx, [ebp+var_24]
push    0ffffffffh
push    edx
lea     eax, [ebp+var_50]
mov     ebx, offset asc_1007b7cc
call    sub_1000ac50
mov     eax, [ebp+arg_14]
inc     edi
add     esp, 10h
cmp     edi, [eax+24h]
jl      short loc_1004ee26
mov     ecx, [ebp+arg_14]
cmp     dword ptr [ecx+24h], 1
mov     eax, offset aarenotunique
jg      short loc_1004ee7b
mov     eax, offset aisnotunique
push    0ffffffffh
push    eax
lea     eax, [ebp+var_50]
call    sub_1000ac50
mov     eax, [ebp+var_48]
add     esp, 8
test    eax, eax
jz      short loc_1004eed9
mov     dl, byte ptr [ebp+var_37]
mov     ecx, [ebp+var_44]
mov     byte ptr [eax+ecx], 0
test    dl, dl
jz      short loc_1004eed9
mov     ebx, [ebp+var_4c]
cmp     eax, ebx
jnz     short loc_1004eed9
lea     edi, [ecx+1]
cmp     dl, 1
jnz     short loc_1004eebc
mov     esi, [ebp+var_50]
mov     ecx, edi
call    sub_10009a40
mov     esi, [ebp+var_c]
jmp     short loc_1004eec5
push    edi
call    sub_10009510
add     esp, 4
mov     [ebp+var_48], eax
test    eax, eax
jz      short loc_1004eed9
push    edi
mov     edx, eax
push    ebx
push    edx
call    memcpy
add     esp, 0ch
mov     eax, [ebp+arg_0]
mov     eax, [eax+8]
mov     [ebp+var_24], eax
test    eax, eax
jnz     loc_1004f09f
mov     ecx, [ebp+arg_0]
mov     edi, [ecx]
test    edi, edi
jz      short loc_1004ef18
cmp     [edi+32h], al
jnz     loc_1004f059
cmp     [edi+0e2h], al
jz      short loc_1004ef18
mov     edx, 0c0h
cmp     dx, [edi+0e0h]
jbe     short loc_1004ef57
inc     dword ptr [edi+0f0h]
cmp     dword_10080230, 0
jz      loc_1004ef98
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1004ef38
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [ebp+var_34]
mov     eax, 0c0h
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1004efa9
push    eax
call    dword_10080284
jmp     short loc_1004efa6
mov     ebx, [edi+0f8h]
test    ebx, ebx
jnz     short loc_1004ef69
inc     dword ptr [edi+0f4h]
jmp     short loc_1004ef18
mov     eax, [ebx]
mov     ecx, 1
add     [edi+0e4h], ecx
add     [edi+0ech], ecx
mov     [edi+0f8h], eax
mov     eax, [edi+0e4h]
cmp     eax, [edi+0e8h]
jle     short loc_1004efb8
mov     [edi+0e8h], eax
jmp     short loc_1004efb8
push    0c0h
call    dword_1008024c
mov     [ebp+var_34], eax
add     esp, 4
mov     ebx, [ebp+var_34]
test    ebx, ebx
jnz     short loc_1004efc0
test    edi, edi
jz      short loc_1004efb8
mov     byte ptr [edi+32h], 1
test    ebx, ebx
jz      loc_1004f059
push    0c0h
push    0
push    ebx
call    memset
mov     [ebx], edi
mov     eax, [edi+4]
add     esp, 0ch
test    eax, eax
jz      short loc_1004efdc
mov     [eax+38h], ebx
mov     ecx, [edi+4]
mov     [ebx+3ch], ecx
mov     dword ptr [ebx+38h], 0
mov     [edi+4], ebx
mov     dword ptr [ebx+30h], 26bceaa5h
mov     edi, ebx
mov     edx, [ebp+arg_0]
mov     [edx+8], edi
mov     [ebp+var_24], edi
test    edi, edi
jz      loc_1004f09f
mov     eax, [edi+1ch]
mov     ecx, [edi+20h]
mov     [ebp+var_10], eax
cmp     ecx, eax
jg      short loc_1004f07c
lea     eax, [ecx+ecx]
test    ecx, ecx
jnz     short loc_1004f01f
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004f09f
mov     eax, [edi]
test    eax, eax
jz      short loc_1004f05d
cmp     ebx, [eax+0fch]
jb      short loc_1004f05d
cmp     ebx, [eax+100h]
jnb     short loc_1004f05d
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004f069
xor     edi, edi
jmp     short loc_1004eff5
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [ebp+var_10]
shr     edx, 4
mov     [edi+20h], edx
mov     [edi+4], ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 94h
cmp     [ebp+var_4], 2
jnz     short loc_1004f0b8
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+1b0h]
test    eax, eax
jnz     short loc_1004f0b4
mov     eax, ecx
mov     byte ptr [eax+18h], 1
mov     edi, [ebp+var_24]
mov     ecx, [edi+1ch]
mov     eax, [edi+20h]
mov     [ebp+var_10], ecx
cmp     eax, ecx
jg      short loc_1004f132
test    eax, eax
jz      short loc_1004f0d0
add     eax, eax
jmp     short loc_1004f0d5
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1004f1a6
mov     eax, [edi]
test    eax, eax
jz      short loc_1004f113
cmp     ebx, [eax+0fch]
jb      short loc_1004f113
cmp     ebx, [eax+100h]
jnb     short loc_1004f113
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004f11f
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     ecx, [ebp+var_10]
shr     edx, 4
mov     [edi+20h], edx
mov     [edi+4], ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [ecx+ecx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_4]
mov     [eax+8], edx
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     dword ptr [eax+4], 13h
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 6
mov     eax, ecx
mov     ebx, [edi+4]
mov     edx, [edi]
test    ebx, ebx
jz      loc_1004f1f4
cmp     byte ptr [edx+32h], 0
jnz     loc_1004f1f4
test    eax, eax
jns     short loc_1004f17d
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
mov     edi, edx
call    sub_10025e50
mov     ecx, [ebp+var_48]
xor     eax, eax
mov     [ebx+10h], eax
cmp     ecx, eax
jnz     short loc_1004f1ad
mov     [ebx+10h], eax
mov     [ebx+1], al
jmp     short loc_1004f203
mov     eax, 1
jmp     short loc_1004f15e
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_1004f1ba
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1004f1b4
sub     eax, ecx
mov     ecx, [ebp+var_24]
mov     esi, [ecx]
and     eax, 3fffffffh
mov     edi, eax
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1004f1e8
mov     edx, [ebp+var_48]
push    edi
push    edx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [edi+esi], 0
mov     [ebx+10h], esi
mov     esi, [ebp+var_c]
mov     byte ptr [ebx+1], 0ffh
jmp     short loc_1004f200
mov     ecx, [ebp+var_48]
xor     eax, eax
mov     edi, edx
call    sub_10025e50
mov     ecx, [ebp+var_48]
mov     edi, [ebp+var_50]
test    edi, edi
jz      short loc_1004f27f
cmp     dword ptr [edi+1e8h], 0
jz      short loc_1004f252
test    ecx, ecx
jz      short loc_1004f23b
cmp     ecx, [edi+0fch]
jb      short loc_1004f23b
cmp     ecx, [edi+100h]
jnb     short loc_1004f23b
movzx   eax, word ptr [edi+0e0h]
mov     edi, [edi+1e8h]
add     [edi], eax
jmp     loc_1004f30c
push    ecx
call    dword_10080258
mov     edi, [edi+1e8h]
add     esp, 4
add     [edi], eax
jmp     loc_1004f30c
test    ecx, ecx
jz      short loc_1004f27f
cmp     ecx, [edi+0fch]
jb      short loc_1004f27f
cmp     ecx, [edi+100h]
jnb     short loc_1004f27f
mov     eax, [edi+0f8h]
mov     [ecx], eax
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], ecx
jmp     loc_1004f30c
push    ecx
call    sub_10009770
add     esp, 4
jmp     loc_1004f30c
mov     eax, [edx+1b0h]
xor     ebx, ebx
cmp     eax, ecx
jnz     short loc_1004f29b
mov     eax, edx
mov     byte ptr [eax+17h], 1
mov     eax, [ebp+var_14]
test    dword ptr [eax+18h], 2000000h
jz      short loc_1004f2ec
mov     ecx, [edx]
xor     ebx, ebx
xor     eax, eax
test    dword ptr [ecx+18h], 40000000h
jz      short loc_1004f2cb
mov     eax, [ebp+arg_4]
push    eax
mov     eax, edx
call    sub_1005e0f0
mov     edx, [ebp+arg_0]
add     esp, 4
mov     ecx, eax
test    eax, eax
jz      short loc_1004f2e4
cmp     byte ptr [ecx+8], 6ah
jnz     short loc_1004f2dd
movzx   edi, byte ptr [ecx+9]
or      ebx, edi
mov     ecx, [ecx+20h]
test    ecx, ecx
jnz     short loc_1004f2d1
neg     ebx
sbb     ebx, ebx
and     ebx, eax
xor     ecx, ecx
mov     eax, [ebp+arg_8]
push    5
push    ebx
push    ecx
mov     ecx, [ebp+var_8]
push    ecx
mov     ecx, [ebp+arg_4]
push    eax
push    ecx
push    edx
call    sub_10045370
add     esp, 1ch
mov     [ebp+var_20], 1
mov     eax, [ebp+src]
test    eax, eax
js      short loc_1004f324
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_1004f324
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     [eax+edx*4+8], ecx
cmp     [ebp+var_8], 0
jz      short loc_1004f358
mov     ecx, [ebp+arg_0]
mov     bl, [ecx+13h]
cmp     bl, 8
jnb     short loc_1004f358
mov     edi, [ebp+var_8]
mov     edx, ecx
xor     eax, eax
lea     ecx, [edx+64h]
nop
cmp     [ecx+10h], edi
jz      short loc_1004f37f
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1004f340
movzx   eax, bl
mov     [edx+eax*4+1ch], edi
inc     byte ptr [edx+13h]
mov     ecx, [ebp+arg_14]
mov     eax, [ecx+14h]
inc     [ebp+var_1c]
mov     [ebp+arg_14], eax
test    eax, eax
jnz     loc_1004e68d
mov     eax, [ebp+arg_24]
test    eax, eax
jz      short loc_1004f378
mov     edx, [ebp+var_20]
mov     [eax], edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
jmp     short loc_1004f358
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
push    edi
call    sub_10056c90
mov     esi, eax
mov     eax, [ebp+arg_4]
mov     eax, [eax+10h]
xor     ebx, ebx
add     esp, 4
xor     ecx, ecx
cmp     eax, ebx
jz      short loc_1004f3dd
mov     eax, [eax+14h]
inc     ecx
cmp     eax, ebx
jnz     short loc_1004f3d5
dec     ecx
mov     [ebp+var_8], ecx
cmp     ecx, ebx
jl      loc_1004f4c8
lea     esp, [esp+0]
mov     edx, [ebp+arg_10]
mov     edx, [edx+ecx*4]
mov     [ebp+var_c], edx
cmp     edx, ebx
jz      loc_1004f4be
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004f476
cmp     eax, ebx
jz      short loc_1004f413
add     eax, eax
jmp     short loc_1004f418
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004f49f
mov     eax, [esi]
test    eax, eax
jz      short loc_1004f452
cmp     ebx, [eax+0fch]
jb      short loc_1004f452
cmp     ebx, [eax+100h]
jnb     short loc_1004f452
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004f45e
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     ecx, [ebp+var_8]
shr     edx, 4
mov     [esi+20h], edx
mov     edx, [ebp+var_c]
mov     [esi+4], ebx
xor     ebx, ebx
inc     dword ptr [esi+1ch]
lea     eax, [edi+edi*4]
mov     edi, [esi+4]
lea     eax, [edi+eax*4]
mov     edi, [ebp+arg_8]
lea     edi, [ecx+edi+1]
mov     [eax+3], bl
mov     [eax+4], edi
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 61h
jmp     short loc_1004f4a4
mov     ecx, [ebp+var_8]
xor     ebx, ebx
cmp     [ebp+arg_1c], ebx
jz      short loc_1004f4bb
mov     edx, [esi+4]
cmp     edx, ebx
jz      short loc_1004f4bb
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [edx+eax*4-11h], 10h
mov     edi, [ebp+arg_0]
dec     ecx
mov     [ebp+var_8], ecx
jns     loc_1004f3f0
mov     ecx, [ebp+arg_c]
mov     al, [edi+13h]
inc     ecx
mov     [ebp+var_c], ecx
cmp     al, bl
jnz     short loc_1004f4e1
inc     dword ptr [edi+4ch]
mov     edx, [edi+4ch]
mov     [ebp+var_8], edx
jmp     short loc_1004f4f0
dec     al
mov     [edi+13h], al
movzx   eax, al
mov     ecx, [edi+eax*4+1ch]
mov     [ebp+var_8], ecx
mov     edx, [ebp+arg_4]
mov     eax, [edx+8]
mov     edi, [esi+1ch]
mov     [ebp+var_10], eax
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004f568
cmp     eax, ebx
jz      short loc_1004f50b
add     eax, eax
jmp     short loc_1004f510
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004f593
mov     eax, [esi]
test    eax, eax
jz      short loc_1004f54a
cmp     ebx, [eax+0fch]
jb      short loc_1004f54a
cmp     ebx, [eax+100h]
jnb     short loc_1004f54a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004f556
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_c]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_10]
mov     [eax+4], ecx
mov     ecx, [ebp+var_8]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 1fh
jmp     short loc_1004f595
xor     ebx, ebx
mov     eax, [ebp+arg_4]
push    esi
call    sub_1004b9b0
mov     edx, [ebp+arg_4]
mov     ecx, [edx+8]
mov     edi, [ebp+var_c]
mov     eax, [ebp+arg_0]
add     esp, 4
call    sub_100384f0
cmp     [eax+12h], bl
jz      short loc_1004f5bc
mov     [ebp+var_1], bl
jmp     short loc_1004f5cb
cmp     [ebp+arg_14], ebx
setnz   al
lea     eax, [eax+eax+2]
or      al, 1
mov     [ebp+var_1], al
cmp     [ebp+arg_18], ebx
jz      short loc_1004f5d4
or      [ebp+var_1], 8
cmp     [ebp+arg_1c], ebx
jz      short loc_1004f5dd
or      [ebp+var_1], 10h
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1004f64c
cmp     eax, ebx
jz      short loc_1004f5ef
add     eax, eax
jmp     short loc_1004f5f4
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1004f677
mov     eax, [esi]
test    eax, eax
jz      short loc_1004f62e
cmp     ebx, [eax+0fch]
jb      short loc_1004f62e
cmp     ebx, [eax+100h]
jnb     short loc_1004f62e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1004f63a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+arg_8]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_8]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_c]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 39h
jmp     short loc_1004f679
xor     ebx, ebx
mov     edx, [ebp+arg_0]
cmp     [edx+12h], bl
jnz     short loc_1004f6eb
mov     eax, [ebp+arg_4]
mov     edx, [esi+4]
mov     ecx, [eax]
mov     edi, [esi]
mov     [ebp+arg_4], ecx
cmp     edx, ebx
jz      short loc_1004f6e4
cmp     [edi+32h], bl
jnz     short loc_1004f6e4
mov     eax, [esi+1ch]
lea     ecx, [eax+eax*4-5]
movsx   eax, byte ptr [edx+ecx*4+1]
lea     ecx, [edx+ecx*4]
mov     [ebp+arg_0], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
mov     [eax+10h], ebx
cmp     ecx, ebx
jnz     short loc_1004f6c6
mov     [eax+10h], ebx
mov     [eax+1], bl
jmp     short loc_1004f6eb
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+arg_0]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
xor     ebx, ebx
jmp     short loc_1004f6eb
xor     eax, eax
call    sub_10025e50
mov     eax, [esi+4]
cmp     eax, ebx
jz      short loc_1004f6ff
mov     esi, [esi+1ch]
mov     cl, [ebp+var_1]
lea     edx, [esi+esi*4]
mov     [eax+edx*4-11h], cl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     edi, eax
test    byte ptr [edi+22h], 10h
jz      short loc_1004f72a
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [edi+44h]
mov     ebx, [ebp+arg_0]
mov     eax, [ebx]
mov     [ebp+var_4], 0fff0bdc0h
test    esi, esi
jz      short loc_1004f763
mov     edx, [eax+14h]
mov     [ebp+var_4], 0
test    edx, edx
jle     short loc_1004f763
mov     eax, [eax+10h]
add     eax, 0ch
cmp     [eax], esi
jz      short loc_1004f763
mov     ecx, [ebp+var_4]
inc     ecx
add     eax, 10h
mov     [ebp+var_4], ecx
cmp     ecx, edx
jl      short loc_1004f751
push    ebx
call    sub_10056c90
mov     ecx, [ebp+var_4]
mov     edx, [ebp+arg_4]
add     esp, 4
mov     esi, eax
mov     eax, [ebp+arg_8]
push    eax
push    edi
push    ecx
push    edx
mov     eax, ebx
call    sub_1004b860
mov     edi, [edi+10h]
add     esp, 10h
mov     eax, 1
mov     [ebp+var_8], eax
mov     [ebp+var_c], edi
test    edi, edi
jz      loc_1004f875
jmp     short loc_1004f7a3
mov     edi, [ebp+var_c]
push    edi
push    ebx
call    sub_10044250
mov     ebx, [esi+1ch]
mov     [ebp+var_10], eax
mov     eax, [edi+28h]
add     esp, 8
mov     [ebp+var_14], eax
cmp     [esi+20h], ebx
jg      short loc_1004f7d0
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1004f7d0
mov     ebx, 1
jmp     short loc_1004f805
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+var_8]
add     edx, [ebp+arg_4]
mov     cl, byte ptr [ebp+arg_8]
mov     [eax], cl
mov     ecx, [ebp+var_4]
mov     [eax+4], edx
mov     edx, [ebp+var_14]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     byte ptr [eax+1], 0
mov     ecx, [esi+4]
mov     edi, [esi]
mov     eax, ebx
test    ecx, ecx
jz      short loc_1004f84e
cmp     byte ptr [edi+32h], 0
jnz     short loc_1004f84e
test    ebx, ebx
jns     short loc_1004f81e
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ebx, [ecx+edx*4]
mov     ecx, [ebx+10h]
call    sub_10025e50
mov     eax, [ebp+var_10]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_1004f845
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1004f85b
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0fah
jmp     short loc_1004f85b
mov     ecx, [ebp+var_10]
mov     eax, 0fffffff0h
call    sub_10025e50
mov     eax, [ebp+var_c]
mov     eax, [eax+14h]
inc     [ebp+var_8]
mov     ebx, [ebp+arg_0]
mov     [ebp+var_c], eax
test    eax, eax
jnz     loc_1004f7a0
mov     eax, [ebp+var_8]
mov     ecx, [ebp+arg_4]
add     ecx, eax
cmp     [ebx+48h], ecx
jge     short loc_1004f882
mov     [ebx+48h], ecx
pop     edi
pop     esi
dec     eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    ecx, ecx
jnz     short loc_1004f89c
xor     eax, eax
test    edx, edx
setz    al
retn
test    edx, edx
jnz     short loc_1004f8a3
xor     eax, eax
retn
call    sub_1000bca0
neg     eax
sbb     eax, eax
inc     eax
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [edi+24h]
cmp     [ebx+24h], eax
jz      short loc_1004f8c2
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
mov     cl, [ebx+2ch]
cmp     cl, [edi+2ch]
jnz     short loc_1004f8bc
push    esi
xor     esi, esi
test    eax, eax
jle     short loc_1004f939
mov     ecx, [ebx+4]
sub     ecx, [edi+4]
mov     [ebp+var_4], ecx
lea     ebx, [ebx+0]
mov     eax, [edi+4]
mov     edx, [eax+esi*4]
lea     eax, [eax+esi*4]
cmp     edx, [ecx+eax]
jnz     short loc_1004f932
mov     ecx, [edi+1ch]
mov     eax, [ebx+1ch]
mov     dl, [esi+ecx]
cmp     dl, [esi+eax]
jnz     short loc_1004f932
mov     ecx, [edi+20h]
mov     ecx, [ecx+esi*4]
mov     eax, [ebx+20h]
mov     edx, [eax+esi*4]
test    ecx, ecx
jnz     short loc_1004f915
xor     eax, eax
test    edx, edx
setz    al
jmp     short loc_1004f923
test    edx, edx
jz      short loc_1004f932
call    sub_1000bca0
neg     eax
sbb     eax, eax
inc     eax
test    eax, eax
jz      short loc_1004f932
inc     esi
cmp     esi, [edi+24h]
jge     short loc_1004f939
mov     ecx, [ebp+var_4]
jmp     short loc_1004f8e0
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 34h
push    ebx
push    esi
push    edi
mov     edi, eax
mov     [ebp+var_14], 0
test    edi, edi
jz      loc_1004fef6
mov     ebx, [ebp+arg_4]
mov     esi, [ebp+arg_0]
push    ebx
mov     eax, esi
call    sub_1005e0f0
add     esp, 4
test    eax, eax
jnz     loc_1004fef6
test    byte ptr [ebx+22h], 10h
jnz     loc_1004fef6
cmp     [ebp+arg_8], 63h
jnz     short loc_1004f9ab
cmp     [ebx+4], eax
jl      short loc_1004f9a4
movzx   eax, byte ptr [ebx+23h]
mov     [ebp+arg_8], eax
cmp     eax, 63h
jnz     short loc_1004f9ab
mov     [ebp+arg_8], 2
mov     eax, [edi+24h]
cmp     word ptr [eax], 1
jnz     loc_1004fef6
cmp     dword ptr [eax+14h], 0
jnz     loc_1004fef6
cmp     dword ptr [edi+28h], 0
jnz     loc_1004fef6
cmp     dword ptr [edi+34h], 0
jnz     loc_1004fef6
cmp     dword ptr [edi+2ch], 0
jnz     loc_1004fef6
cmp     dword ptr [edi+44h], 0
jnz     loc_1004fef6
cmp     dword ptr [edi+38h], 0
jnz     loc_1004fef6
test    byte ptr [edi+6], 1
jnz     loc_1004fef6
mov     edi, [edi]
cmp     dword ptr [edi], 1
jnz     loc_1004fef6
mov     ecx, [edi+8]
mov     edx, [ecx]
cmp     byte ptr [edx], 71h
jnz     loc_1004fef6
mov     edi, [eax+4]
mov     ebx, [eax+8]
push    0
call    sub_1003f660
add     esp, 4
mov     [ebp+var_c], eax
test    eax, eax
jz      loc_1004fef6
mov     ecx, [ebp+arg_4]
cmp     eax, ecx
jz      loc_1004fef6
test    byte ptr [eax+22h], 10h
jnz     loc_1004fef6
cmp     dword ptr [eax+1ch], 0
jnz     loc_1004fef6
mov     edx, [ecx+8]
mov     [ebp+var_1c], edx
cmp     edx, [eax+8]
jnz     loc_1004fef6
mov     esi, [ecx+4]
cmp     esi, [eax+4]
jnz     loc_1004fef6
xor     esi, esi
test    edx, edx
jle     short loc_1004fabc
mov     edi, [ecx+0ch]
mov     ebx, [eax+0ch]
add     edi, 10h
add     ebx, 10h
mov     edi, edi
mov     al, [edi+6]
cmp     al, [ebx+6]
jnz     loc_1004fef6
mov     edx, [ebx]
mov     ecx, [edi]
call    sub_1004f890
test    eax, eax
jz      loc_1004fef6
cmp     byte ptr [edi+4], 0
jz      short loc_1004faad
cmp     byte ptr [ebx+4], 0
jz      loc_1004fef6
inc     esi
add     edi, 18h
add     ebx, 18h
cmp     esi, [ebp+var_1c]
jl      short loc_1004fa80
mov     ecx, [ebp+arg_4]
mov     ebx, [ecx+10h]
test    ebx, ebx
jz      short loc_1004fb0d
mov     ecx, [ebp+var_c]
mov     esi, [ecx+10h]
lea     esp, [esp+0]
cmp     byte ptr [ebx+2ch], 0
jz      short loc_1004fadd
mov     [ebp+var_14], 1
mov     edi, esi
test    edi, edi
jz      loc_1004fef6
call    sub_1004f8b0
test    eax, eax
jnz     short loc_1004fafe
mov     edi, [edi+14h]
test    edi, edi
jnz     short loc_1004fae7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    edi, edi
jz      loc_1004fef6
mov     ebx, [ebx+14h]
test    ebx, ebx
jnz     short loc_1004fad0
mov     esi, [ebp+arg_4]
mov     eax, [esi+2ch]
test    eax, eax
jz      short loc_1004fb2e
mov     edx, [ebp+var_c]
mov     edi, [edx+2ch]
push    eax
call    sub_1003a690
add     esp, 4
test    eax, eax
jnz     loc_1004fef6
mov     edi, [ebp+arg_0]
mov     ecx, [edi]
mov     eax, [ecx+18h]
test    eax, 4000000h
jz      short loc_1004fb47
cmp     dword ptr [esi+24h], 0
jnz     loc_1004fef6
test    eax, 1000h
jnz     loc_1004fef6
mov     eax, [ebp+var_c]
mov     esi, [eax+44h]
call    sub_10053b80
mov     ebx, eax
push    edi
mov     [ebp+var_18], ebx
call    sub_10056c90
mov     esi, eax
add     esp, 4
push    ebx
mov     eax, edi
mov     [ebp+var_30], esi
call    sub_10043c40
mov     eax, [edi+48h]
mov     ecx, [ebp+arg_c]
mov     ebx, [ebp+arg_4]
mov     [ebp+var_8], eax
inc     eax
mov     [ebp+var_4], eax
add     esp, 4
inc     eax
push    ecx
mov     edx, edi
mov     [edi+48h], eax
call    sub_1004bb60
mov     edx, [ebp+arg_c]
add     esp, 4
push    28h
mov     [ebp+var_24], eax
mov     eax, [ebp+var_4]
push    ebx
push    edx
push    eax
mov     eax, edi
call    sub_1004b860
add     esp, 10h
cmp     dword ptr [ebx+4], 0
jge     short loc_1004fbc0
mov     ecx, ebx
cmp     dword ptr [ecx+10h], 0
jnz     short loc_1004fbdc
cmp     [ebp+var_14], 0
jnz     short loc_1004fbdc
mov     eax, [ebp+arg_8]
cmp     eax, 2
jz      short loc_1004fbd3
cmp     eax, 1
jnz     short loc_1004fbdc
mov     [ebp+var_1c], 0
jmp     short loc_1004fc0c
mov     edx, [ebp+var_4]
push    0
push    edx
push    48h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
push    0
mov     ebx, eax
push    0
push    1
mov     eax, esi
call    sub_10025990
mov     [ebp+var_1c], eax
add     esp, 0ch
mov     eax, ebx
mov     edx, esi
call    sub_10025e30
mov     eax, [ebp+var_c]
mov     ecx, [ebp+var_18]
mov     ebx, [ebp+var_8]
push    27h
push    eax
push    ecx
push    ebx
mov     eax, edi
call    sub_1004b860
push    0
push    ebx
push    48h
mov     eax, esi
call    sub_10025990
add     esp, 1ch
mov     ecx, edi
mov     [ebp+var_28], eax
call    sub_1003abf0
mov     [ebp+var_14], eax
call    sub_1003abf0
mov     edx, [ebp+arg_4]
cmp     dword ptr [edx+4], 0
mov     ebx, eax
mov     [ebp+var_2c], ebx
push    ebx
jl      short loc_1004fca7
mov     eax, [ebp+var_8]
push    eax
push    41h
mov     eax, esi
call    sub_10025990
mov     ecx, [ebp+var_4]
add     esp, 0ch
push    ebx
push    0
push    ecx
mov     [ebp+var_10], eax
push    36h
mov     eax, esi
call    sub_10025890
mov     edx, [ebp+arg_8]
push    0fffffffeh
mov     [ebp+var_20], eax
push    offset aprimarykeymust
push    edx
mov     eax, edi
call    sub_10043db0
mov     eax, [ebp+var_20]
add     esp, 1ch
mov     edx, esi
call    sub_10025e30
mov     eax, [ebp+var_24]
push    ebx
push    eax
mov     eax, edi
call    sub_1004c370
add     esp, 8
jmp     short loc_1004fcca
mov     ecx, edx
cmp     dword ptr [ecx+10h], 0
jnz     short loc_1004fcb7
mov     edx, [ebp+var_4]
push    edx
push    38h
jmp     short loc_1004fcbd
mov     eax, [ebp+var_8]
push    eax
push    41h
mov     eax, esi
call    sub_10025990
mov     [ebp+var_10], eax
add     esp, 0ch
mov     edi, [ebp+var_14]
mov     ecx, [ebp+var_8]
push    edi
push    ecx
push    40h
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+var_4]
add     esp, 0ch
push    ebx
push    edi
push    edx
push    39h
mov     eax, esi
call    sub_10025890
mov     eax, [esi+4]
add     esp, 10h
test    eax, eax
jz      short loc_1004fd02
mov     ecx, [esi+1ch]
lea     ecx, [ecx+ecx*4]
mov     byte ptr [eax+ecx*4-11h], 0bh
mov     edx, [ebp+arg_4]
mov     ebx, [esi+4]
mov     ecx, [edx]
mov     edi, [esi]
mov     [ebp+var_24], ecx
test    ebx, ebx
jz      short loc_1004fd63
cmp     byte ptr [edi+32h], 0
jnz     short loc_1004fd63
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4-5]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
mov     [ebp+var_20], ebx
call    sub_10025e50
mov     ecx, [ebp+var_24]
xor     eax, eax
mov     [ebx+10h], eax
cmp     ecx, eax
jnz     short loc_1004fd47
mov     [ebx+10h], eax
mov     [ebx+1], al
jmp     short loc_1004fd6a
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+var_20]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
jmp     short loc_1004fd6a
xor     eax, eax
call    sub_10025e50
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_8]
push    ecx
push    edx
push    5fh
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+arg_4]
mov     ebx, [eax+10h]
add     esp, 0ch
test    ebx, ebx
jz      loc_1004fe83
lea     esp, [esp+0]
mov     ecx, [ebp+var_c]
mov     eax, [ecx+10h]
mov     [ebp+var_10], eax
test    eax, eax
jz      short loc_1004fdb8
lea     ecx, [ecx+0]
mov     edi, [ebp+var_10]
call    sub_1004f8b0
test    eax, eax
jnz     short loc_1004fdb8
mov     edx, edi
mov     eax, [edx+14h]
mov     [ebp+var_10], eax
test    eax, eax
jnz     short loc_1004fda0
mov     edi, [ebp+var_8]
push    0
push    edi
push    2dh
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_4]
add     esp, 0ch
push    0
push    eax
push    2dh
mov     eax, esi
call    sub_10025990
mov     ecx, [ebp+var_10]
mov     edx, [ebp+arg_0]
add     esp, 0ch
push    ecx
push    edx
call    sub_10044250
mov     ecx, [ebp+var_10]
mov     edx, [ecx+28h]
push    0fffffff0h
push    eax
mov     eax, [ebp+var_18]
push    eax
push    edx
push    edi
push    27h
mov     eax, esi
call    sub_100259f0
mov     eax, [ebp+arg_0]
push    ebx
push    eax
call    sub_10044250
mov     ecx, [ebp+arg_c]
mov     edx, [ebx+28h]
push    0fffffff0h
push    eax
mov     eax, [ebp+var_4]
push    ecx
push    edx
push    eax
push    28h
mov     eax, esi
call    sub_100259f0
add     esp, 40h
push    0
push    edi
push    48h
mov     eax, esi
call    sub_10025990
mov     ecx, [ebp+var_14]
add     esp, 0ch
push    ecx
mov     [ebp+var_10], eax
push    edi
push    3fh
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+var_14]
mov     eax, [ebp+var_4]
add     esp, 0ch
push    1
push    edx
push    eax
push    61h
mov     eax, esi
call    sub_10025890
mov     ecx, [ebp+var_10]
inc     ecx
push    ecx
push    edi
push    5fh
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_10]
add     esp, 1ch
mov     edx, esi
call    sub_10025e30
mov     ebx, [ebx+14h]
test    ebx, ebx
jnz     loc_1004fd90
mov     eax, [ebp+var_28]
mov     edx, esi
call    sub_10025e30
mov     esi, [ebp+var_2c]
mov     edx, [ebp+arg_0]
call    sub_1003ac10
mov     esi, [ebp+var_14]
call    sub_1003ac10
mov     edx, [ebp+var_8]
mov     esi, [ebp+var_30]
push    0
push    edx
push    2dh
mov     eax, esi
call    sub_10025990
mov     ebx, [ebp+var_4]
add     esp, 0ch
push    0
push    ebx
push    2dh
mov     eax, esi
call    sub_10025990
mov     edi, [ebp+var_1c]
add     esp, 0ch
test    edi, edi
jz      short loc_1004feff
push    0
push    0
push    6
mov     eax, esi
call    sub_10025990
add     esp, 0ch
mov     eax, edi
mov     edx, esi
call    sub_10025e30
push    0
push    ebx
push    2dh
mov     eax, esi
call    sub_10025990
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 2ch
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
xor     esi, esi
mov     eax, edi
mov     [esp+38h+var_24], esi
mov     [esp+38h+var_20], esi
mov     [esp+38h+var_c], esi
call    sub_1000c950
test    eax, eax
jnz     short loc_1004ff5b
push    offset ac0d89d4a975292
push    15efah
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
lea     eax, [esi+15h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_4], esi
jnz     short loc_1004ff67
mov     [ebp+arg_4], offset dword_100796bc
mov     eax, [edi+0ch]
cmp     eax, esi
jz      short loc_1004ff78
push    eax
call    dword_1008027c
add     esp, 4
push    esi
push    esi
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     ebx, edi
jmp     short loc_1004ff94
jmp     short loc_1004ff90
mov     esi, [esp+38h+var_28]
mov     eax, [esp+38h+var_24]
xor     edi, edi
cmp     eax, edi
jz      short loc_1004ffb9
cmp     eax, 11h
jnz     loc_1005042a
mov     eax, [esp+38h+var_c]
inc     eax
mov     [esp+38h+var_c], eax
cmp     eax, 2
jge     loc_1005042a
mov     eax, [ebp+arg_4]
cmp     byte ptr [eax], 0
jz      loc_1005042a
lea     ecx, [esp+38h+var_4]
push    ecx
push    edi
push    edi
push    0ffffffffh
push    eax
lea     esi, [esp+4ch+var_28]
mov     eax, ebx
mov     [esp+4ch+var_10], edi
mov     [esp+4ch+var_28], edi
call    sub_10054100
add     esp, 14h
mov     [esp+38h+var_24], eax
cmp     eax, edi
jnz     short loc_1004ff90
mov     edi, [esp+38h+var_28]
test    edi, edi
jnz     short loc_1004fffe
mov     edx, [esp+38h+var_4]
mov     [ebp+arg_4], edx
jmp     short loc_1004ff90
movzx   eax, word ptr [edi+2ch]
xor     esi, esi
mov     [esp+38h+var_8], esi
mov     [esp+38h+var_1c], eax
jmp     short loc_10050014
mov     esi, [esp+38h+var_8]
push    edi
call    sub_10029be0
add     esp, 4
cmp     [ebp+arg_8], 0
mov     [esp+38h+var_24], eax
jz      loc_10050361
cmp     eax, 64h
jz      short loc_10050050
cmp     eax, 65h
jnz     loc_10050361
test    esi, esi
jnz     loc_1005036f
test    dword ptr [ebx+18h], 2000h
jz      loc_1005036f
jmp     short loc_1005005b
test    esi, esi
jnz     loc_1005012a
mov     ebx, [ebp+arg_0]
mov     edi, [esp+38h+var_1c]
lea     edi, ds:1[edi*8]
mov     ecx, edi
mov     esi, ebx
call    sub_10009a40
mov     esi, eax
mov     [esp+38h+var_8], esi
test    esi, esi
jz      short loc_10050085
push    edi
push    0
push    esi
call    memset
add     esp, 0ch
mov     [esp+38h+var_20], esi
test    esi, esi
jz      loc_10050426
xor     esi, esi
cmp     [esp+38h+var_1c], esi
jle     short loc_10050113
mov     [esp+38h+var_14], esi
lea     ecx, [ecx+0]
mov     ebx, [esp+38h+var_28]
movzx   eax, word ptr [ebx+2ch]
mov     ecx, [ebx]
xor     edi, edi
mov     [esp+38h+var_18], ecx
cmp     esi, eax
jge     short loc_10050100
test    esi, esi
js      short loc_10050100
mov     edx, ecx
mov     eax, [edx+0ch]
test    eax, eax
jz      short loc_100500cb
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [ebx+10h]
add     edi, [esp+38h+var_14]
mov     bl, 1
call    sub_100253e0
mov     edi, eax
mov     eax, [esp+38h+var_18]
cmp     byte ptr [eax+32h], 0
jz      short loc_100500ed
mov     ecx, eax
mov     byte ptr [ecx+32h], 0
xor     edi, edi
mov     edx, eax
mov     eax, [edx+0ch]
test    eax, eax
jz      short loc_10050100
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esp+38h+var_8]
add     [esp+38h+var_14], 28h
mov     [eax+esi*4], edi
inc     esi
cmp     esi, [esp+38h+var_1c]
jl      short loc_100500a0
cmp     [esp+38h+var_24], 64h
mov     edi, [esp+38h+var_28]
mov     [esp+38h+var_8], 1
jnz     loc_10050340
mov     eax, [esp+38h+var_1c]
mov     ecx, [esp+38h+var_20]
lea     edx, [ecx+eax*4]
xor     ecx, ecx
mov     [esp+38h+var_10], edx
mov     [esp+38h+var_18], ecx
cmp     eax, ecx
jle     loc_10050340
mov     [esp+38h+var_14], ecx
jmp     short loc_10050150
cmp     dword ptr [edi+14h], 0
jz      short loc_100501cd
movzx   ecx, word ptr [edi+2ch]
mov     eax, [esp+38h+var_18]
cmp     eax, ecx
jge     short loc_100501cd
test    eax, eax
js      short loc_100501cd
mov     edx, [edi]
mov     eax, [edx+0ch]
test    eax, eax
jz      short loc_10050179
push    eax
call    dword_1008027c
add     esp, 4
mov     ebx, [edi+14h]
add     ebx, [esp+38h+var_14]
test    ebx, ebx
jz      loc_10050210
movzx   ecx, word ptr [ebx+1ch]
test    cl, 1
jnz     short loc_10050210
mov     eax, ecx
shr     eax, 3
and     eax, 2
or      eax, ecx
mov     [ebx+1ch], ax
test    eax, 4000h
jz      short loc_100501ad
mov     eax, ebx
call    sub_10024590
test    byte ptr [ebx+1ch], 2
jz      short loc_100501f9
cmp     byte ptr [ebx+1fh], 1
jz      short loc_100501c4
push    1
push    ebx
call    sub_1000b360
add     esp, 8
mov     eax, ebx
call    sub_100245f0
jmp     short loc_10050205
mov     eax, [edi]
test    eax, eax
jz      short loc_100501f2
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_100501e4
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [edi]
push    0
push    19h
call    sub_1000ba40
add     esp, 8
mov     ebx, offset dword_100767a8
jmp     short loc_10050188
mov     esi, 1
mov     eax, ebx
call    sub_10024640
cmp     byte ptr [ebx+1fh], 1
jnz     short loc_10050210
mov     esi, [ebx+4]
jmp     short loc_10050212
xor     esi, esi
mov     ebx, [edi]
mov     ecx, [edi+58h]
test    ebx, ebx
jz      short loc_10050245
cmp     byte ptr [ebx+32h], 0
jnz     short loc_10050229
cmp     ecx, 0c0ah
jnz     short loc_10050240
push    0
push    7
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
mov     byte ptr [ebx+32h], 0
mov     ecx, 7
mov     eax, [ebx+2ch]
jmp     short loc_1005024a
mov     eax, 0ffh
and     eax, ecx
mov     ecx, [edi]
mov     [edi+58h], eax
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_10050262
push    eax
call    dword_10080284
add     esp, 4
mov     edx, [esp+38h+var_10]
mov     eax, [esp+38h+var_18]
mov     [edx+eax*4], esi
test    esi, esi
jnz     loc_1005032c
cmp     [edi+14h], esi
jz      short loc_100502a2
movzx   ecx, word ptr [edi+2ch]
cmp     eax, ecx
jge     short loc_100502a2
test    eax, eax
js      short loc_100502a2
mov     edx, [edi]
mov     eax, [edx+0ch]
test    eax, eax
jz      short loc_10050299
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [edi+14h]
add     eax, [esp+38h+var_14]
jmp     short loc_100502cc
mov     eax, [edi]
test    eax, eax
jz      short loc_100502c7
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_100502b9
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [edi]
push    0
push    19h
call    sub_1000ba40
add     esp, 8
mov     eax, offset dword_100767a8
mov     ebx, [edi]
movzx   esi, byte ptr [eax+1eh]
mov     eax, [edi+58h]
test    ebx, ebx
jz      short loc_10050302
cmp     byte ptr [ebx+32h], 0
jnz     short loc_100502e6
cmp     eax, 0c0ah
jnz     short loc_100502fd
push    0
push    7
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
mov     byte ptr [ebx+32h], 0
mov     eax, 7
mov     ebx, [ebx+2ch]
jmp     short loc_10050307
mov     ebx, 0ffh
and     ebx, eax
mov     eax, [edi]
mov     [edi+58h], ebx
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1005031f
push    eax
call    dword_10080284
add     esp, 4
cmp     esi, 5
jnz     loc_1005041d
mov     eax, [esp+38h+var_18]
add     [esp+38h+var_14], 28h
inc     eax
mov     [esp+38h+var_18], eax
cmp     eax, [esp+38h+var_1c]
jl      loc_10050150
mov     ecx, [esp+38h+var_20]
mov     edx, [esp+38h+var_10]
mov     eax, [esp+38h+var_1c]
push    ecx
mov     ecx, [ebp+arg_c]
push    edx
push    eax
push    ecx
call    [ebp+arg_8]
add     esp, 10h
test    eax, eax
jnz     loc_1005045d
cmp     [esp+38h+var_24], 64h
mov     ebx, [ebp+arg_0]
jz      loc_10050010
mov     eax, [edi+30h]
xor     esi, esi
cmp     eax, 0bdf20da3h
jz      short loc_10050382
cmp     eax, 519c2973h
jnz     short loc_1005038b
mov     esi, edi
call    sub_10027d40
mov     esi, eax
mov     ecx, [edi+38h]
mov     eax, [edi]
test    ecx, ecx
jz      short loc_1005039c
mov     edx, [edi+3ch]
mov     [ecx+3ch], edx
jmp     short loc_100503a2
mov     ecx, [edi+3ch]
mov     [eax+4], ecx
mov     ecx, [edi+3ch]
test    ecx, ecx
jz      short loc_100503af
mov     edx, [edi+38h]
mov     [ecx+38h], edx
push    edi
mov     dword ptr [edi+30h], 0b606c3c8h
mov     dword ptr [edi], 0
call    sub_10027f40
add     esp, 4
mov     [esp+38h+var_24], esi
mov     [esp+38h+var_28], 0
cmp     esi, 11h
jz      short loc_10050405
mov     eax, [esp+38h+var_4]
mov     [ebp+arg_4], eax
movzx   eax, byte ptr [eax]
test    ds:byte_10076130[eax], 1
mov     [esp+38h+var_c], 0
jz      short loc_10050405
mov     eax, [ebp+arg_4]
movzx   ecx, byte ptr [eax+1]
inc     eax
test    ds:byte_10076130[ecx], 1
mov     [ebp+arg_4], eax
jnz     short loc_100503f1
mov     eax, [esp+38h+var_20]
mov     ecx, ebx
call    sub_10009810
mov     [esp+38h+var_20], 0
jmp     loc_1004ff90
mov     edx, [ebp+arg_0]
mov     byte ptr [edx+32h], 1
mov     ebx, edx
mov     esi, [esp+38h+var_28]
mov     edi, [esp+38h+var_20]
test    esi, esi
jz      loc_100504f8
mov     eax, [esi+30h]
cmp     eax, 0bdf20da3h
jz      short loc_10050447
cmp     eax, 519c2973h
jnz     short loc_1005044c
call    sub_10027d40
mov     ecx, [esi+38h]
mov     eax, [esi]
test    ecx, ecx
jz      short loc_100504cf
mov     edx, [esi+3ch]
mov     [ecx+3ch], edx
jmp     short loc_100504d5
mov     eax, [edi+30h]
mov     [esp+38h+var_24], 4
cmp     eax, 0bdf20da3h
jz      short loc_10050476
cmp     eax, 519c2973h
jnz     short loc_1005047d
mov     esi, edi
call    sub_10027d40
mov     ecx, [edi+38h]
mov     eax, [edi]
test    ecx, ecx
jz      short loc_1005048e
mov     edx, [edi+3ch]
mov     [ecx+3ch], edx
jmp     short loc_10050494
mov     ecx, [edi+3ch]
mov     [eax+4], ecx
mov     ecx, [edi+3ch]
test    ecx, ecx
jz      short loc_100504a1
mov     edx, [edi+38h]
mov     [ecx+38h], edx
push    edi
mov     dword ptr [edi+30h], 0b606c3c8h
mov     dword ptr [edi], 0
call    sub_10027f40
mov     eax, [ebp+arg_0]
add     esp, 4
push    0
push    4
call    sub_1000ba40
mov     ebx, [ebp+arg_0]
mov     edi, [esp+40h+var_20]
add     esp, 8
jmp     short loc_100504f8
mov     ecx, [esi+3ch]
mov     [eax+4], ecx
mov     ecx, [esi+3ch]
test    ecx, ecx
jz      short loc_100504e2
mov     edx, [esi+38h]
mov     [ecx+38h], edx
push    esi
mov     dword ptr [esi+30h], 0b606c3c8h
mov     dword ptr [esi], 0
call    sub_10027f40
add     esp, 4
cmp     dword ptr [ebx+1e8h], 0
jz      short loc_1005053a
test    edi, edi
jz      short loc_10050526
cmp     edi, [ebx+0fch]
jb      short loc_10050526
cmp     edi, [ebx+100h]
jnb     short loc_10050526
movzx   eax, word ptr [ebx+0e0h]
mov     ecx, [ebx+1e8h]
add     [ecx], eax
jmp     short loc_1005056d
push    edi
call    dword_10080258
mov     ecx, [ebx+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1005056d
test    edi, edi
jz      short loc_10050564
cmp     edi, [ebx+0fch]
jb      short loc_10050564
cmp     edi, [ebx+100h]
jnb     short loc_10050564
mov     eax, [ebx+0f8h]
mov     [edi], eax
dec     dword ptr [ebx+0e4h]
mov     [ebx+0f8h], edi
jmp     short loc_1005056d
push    edi
call    sub_10009770
add     esp, 4
cmp     byte ptr [ebx+32h], 0
mov     eax, [esp+38h+var_24]
jnz     short loc_1005057e
cmp     eax, 0c0ah
jnz     short loc_10050595
push    0
push    7
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
mov     byte ptr [ebx+32h], 0
mov     eax, 7
mov     ecx, [ebx+2ch]
and     eax, ecx
mov     esi, eax
mov     [esp+38h+var_24], esi
jz      loc_10050673
mov     eax, [ebx+3ch]
cmp     eax, 4b771290h
jz      short loc_100505f2
cmp     eax, 0a029a697h
jz      short loc_100505f2
cmp     eax, 0f03b7906h
jz      short loc_100505f2
push    offset ainvalid
push    offset aapicallwithsda
push    15h
call    sub_1000b150
add     esp, 0ch
push    offset ac0d89d4a975292
push    1bacdh
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     eax, 15h
jmp     short loc_10050604
cmp     byte ptr [ebx+32h], 0
jnz     short loc_100505ff
mov     eax, [ebx+28h]
and     eax, ecx
jmp     short loc_10050604
mov     eax, 7
cmp     esi, eax
jnz     short loc_10050673
mov     edi, [ebp+arg_10]
test    edi, edi
jz      short loc_10050680
push    ebx
call    sub_10070900
add     esp, 4
mov     ecx, eax
test    eax, eax
jz      short loc_10050631
cmp     byte ptr [eax], 0
jz      short loc_10050629
inc     ecx
cmp     byte ptr [ecx], 0
jnz     short loc_10050623
sub     ecx, eax
and     ecx, 3fffffffh
lea     esi, [ecx+1]
push    esi
call    sub_100094a0
add     esp, 4
mov     [edi], eax
test    eax, eax
jz      short loc_1005065b
push    esi
push    ebx
call    sub_10070900
mov     ecx, [edi]
add     esp, 4
push    eax
push    ecx
call    memcpy
add     esp, 0ch
jmp     short loc_10050680
push    0
push    7
mov     eax, ebx
mov     [esp+40h+var_24], 7
call    sub_1000ba40
add     esp, 8
jmp     short loc_10050680
mov     eax, [ebp+arg_10]
test    eax, eax
jz      short loc_10050680
mov     dword ptr [eax], 0
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_10050691
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esp+38h+var_24]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, eax
push    edi
mov     edi, [esi]
mov     [esp+18h+var_8], 0
mov     eax, ecx
test    ecx, ecx
jz      short loc_100506d3
cmp     byte ptr [ecx], 0
jz      short loc_100506cc
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100506c6
sub     eax, ecx
and     eax, 3fffffffh
lea     ebx, [eax+12ch]
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_100506e6
mov     dword ptr [eax], 0
test    dword ptr [esi+18h], 20000000h
jnz     short loc_10050711
test    eax, eax
jz      short loc_10050705
push    offset anotauthorized
call    sub_1000b020
mov     ecx, [ebp+arg_8]
add     esp, 4
mov     [ecx], eax
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_4], 0
jnz     short loc_1005071e
mov     [ebp+arg_4], offset asqlite3extensi
mov     edx, [edi+28h]
push    ecx
push    edi
call    edx
add     esp, 8
mov     [esp+18h+var_4], eax
test    eax, eax
jnz     short loc_10050783
mov     esi, [ebp+arg_8]
test    esi, esi
jz      short loc_10050777
call    sub_1006edd0
test    eax, eax
jz      short loc_10050744
xor     eax, eax
jmp     short loc_1005074d
push    ebx
call    sub_100094a0
add     esp, 4
mov     [esp+18h+var_8], eax
mov     [esi], eax
test    eax, eax
jz      short loc_10050777
mov     ecx, [ebp+arg_0]
push    ecx
push    offset aunabletoopensh
push    eax
push    ebx
call    sub_1000b050
mov     edx, [esp+28h+var_8]
mov     eax, [edi+2ch]
push    edx
dec     ebx
push    ebx
push    edi
call    eax
add     esp, 1ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_4]
mov     edx, [edi+30h]
push    ecx
push    eax
push    edi
call    edx
add     esp, 0ch
test    eax, eax
jnz     short loc_10050804
cmp     [ebp+arg_8], eax
jz      short loc_100507f8
mov     esi, [ebp+arg_4]
mov     ecx, esi
call    sub_1000ba20
add     ebx, eax
call    sub_1006edd0
test    eax, eax
jz      short loc_100507b3
xor     eax, eax
jmp     short loc_100507bc
push    ebx
call    sub_100094a0
add     esp, 4
mov     ecx, [ebp+arg_8]
mov     [esp+18h+var_8], eax
mov     [ecx], eax
test    eax, eax
jz      short loc_100507ea
mov     edx, [ebp+arg_0]
push    edx
push    esi
push    offset anoentrypointsi
push    eax
push    ebx
call    sub_1000b050
mov     eax, [esp+2ch+var_8]
mov     ecx, [edi+2ch]
push    eax
dec     ebx
push    ebx
push    edi
call    ecx
add     esp, 20h
mov     edx, [esp+18h+var_4]
mov     eax, [edi+34h]
push    edx
push    edi
call    eax
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset off_100768f8
lea     ecx, [esp+1ch+var_8]
push    ecx
push    esi
call    eax
add     esp, 0ch
test    eax, eax
jz      short loc_10050857
mov     esi, [ebp+arg_8]
test    esi, esi
jz      short loc_10050833
mov     edx, [esp+18h+var_8]
push    edx
push    offset aerrorduringini
call    sub_1000b020
add     esp, 8
mov     [esi], eax
mov     eax, [esp+18h+var_8]
push    eax
call    sub_10009770
mov     ecx, [esp+1ch+var_4]
mov     edx, [edi+34h]
push    ecx
push    edi
call    edx
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [esi+88h]
lea     ebx, ds:4[ebx*4]
mov     ecx, ebx
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_100508cb
push    ebx
push    0
push    edi
call    memset
mov     eax, [esi+88h]
add     esp, 0ch
test    eax, eax
jle     short loc_1005089c
mov     ecx, [esi+8ch]
add     eax, eax
add     eax, eax
push    eax
push    ecx
push    edi
call    memcpy
add     esp, 0ch
mov     eax, [esi+8ch]
mov     ecx, esi
call    sub_10009810
mov     edx, [esi+88h]
mov     eax, [esp+18h+var_4]
mov     [esi+8ch], edi
mov     [edi+edx*4], eax
inc     dword ptr [esi+88h]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 7
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, eax
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_100508f8
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    eax
push    ecx
push    edx
mov     eax, esi
call    sub_100506a0
add     esp, 0ch
cmp     byte ptr [esi+32h], 0
jnz     short loc_1005091b
cmp     eax, 0c0ah
jnz     short loc_10050932
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
test    esi, esi
jz      short loc_10050948
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    esi
push    edi
mov     esi, eax
xor     edi, edi
cmp     [esi+88h], edi
jle     short loc_1005097e
mov     edi, edi
mov     ecx, [esi+8ch]
mov     edx, [ecx+edi*4]
mov     eax, [esi]
push    edx
push    eax
mov     eax, [eax+34h]
call    eax
inc     edi
add     esp, 8
cmp     edi, [esi+88h]
jl      short loc_10050960
cmp     dword ptr [esi+1e8h], 0
mov     eax, [esi+8ch]
jz      short loc_100509c8
test    eax, eax
jz      short loc_100509b3
cmp     eax, [esi+0fch]
jb      short loc_100509b3
cmp     eax, [esi+100h]
jnb     short loc_100509b3
movzx   eax, word ptr [esi+0e0h]
mov     esi, [esi+1e8h]
add     [esi], eax
pop     edi
pop     esi
retn
push    eax
call    dword_10080258
mov     esi, [esi+1e8h]
add     esp, 4
add     [esi], eax
pop     edi
pop     esi
retn
test    eax, eax
jz      short loc_100509f3
cmp     eax, [esi+0fch]
jb      short loc_100509f3
cmp     eax, [esi+100h]
jnb     short loc_100509f3
mov     ecx, [esi+0f8h]
mov     [eax], ecx
dec     dword ptr [esi+0e4h]
pop     edi
mov     [esi+0f8h], eax
pop     esi
retn
push    eax
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
cmp     dword_100817a4, 0
push    ebx
push    esi
push    edi
mov     ebx, 1
jz      loc_10050abf
xor     esi, esi
mov     [ebp+var_8], esi
jmp     short loc_10050a25
mov     esi, [ebp+var_8]
cmp     dword_10080234, 0
jnz     short loc_10050a32
xor     edi, edi
jmp     short loc_10050a4d
push    2
call    dword_10080274
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_10050a4d
push    edi
call    dword_1008027c
add     esp, 4
cmp     esi, dword_100817a4
jl      short loc_10050a5b
xor     esi, esi
xor     ebx, ebx
jmp     short loc_10050a63
mov     eax, dword_100817a8
mov     esi, [eax+esi*4]
test    edi, edi
jz      short loc_10050a71
push    edi
call    dword_10080284
add     esp, 4
mov     [ebp+var_4], 0
test    esi, esi
jz      short loc_10050aa8
mov     edi, [ebp+arg_0]
push    offset off_100768f8
lea     ecx, [ebp+var_4]
push    ecx
push    edi
call    esi
add     esp, 0ch
test    eax, eax
jz      short loc_10050aa8
mov     edx, [ebp+var_4]
push    edx
push    offset aautomaticexten
push    eax
mov     eax, edi
call    sub_1000ba40
add     esp, 0ch
xor     ebx, ebx
mov     eax, [ebp+var_4]
push    eax
call    sub_10009770
inc     [ebp+var_8]
add     esp, 4
test    ebx, ebx
jnz     loc_10050a22
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     cl, [ebx]
sub     esp, 8
movzx   eax, cl
test    ds:byte_10076130[eax], 4
push    esi
push    edi
jz      short loc_10050b03
lea     ecx, [ebp+var_4]
push    ecx
push    ebx
mov     [ebp+var_4], 0
call    sub_1000c450
mov     al, byte ptr [ebp+var_4]
add     esp, 8
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, ebx
test    cl, cl
jz      short loc_10050b16
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10050b10
mov     edi, 7
sub     edi, [ebp+arg_0]
sub     eax, ebx
and     eax, 3fffffffh
xor     esi, esi
mov     [ebp+var_4], eax
test    edi, edi
jle     short loc_10050b5e
mov     edi, edi
movzx   edx, ds:byte_10076be4[esi]
cmp     edx, eax
jnz     short loc_10050b59
push    eax
movzx   eax, ds:byte_10076bdc[esi]
add     eax, offset aonoffalseyestr
push    ebx
push    eax
call    sub_1000bcf0
add     esp, 0ch
test    eax, eax
jz      short loc_10050b67
mov     eax, [ebp+var_4]
inc     esi
cmp     esi, edi
jl      short loc_10050b30
mov     al, [ebp+arg_4]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     al, ds:byte_10076bec[esi]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jz      short loc_10050bab
mov     edx, offset aexclusive
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_10050b9a
mov     eax, 1
retn
mov     edx, offset anormal
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_10050bab
retn
or      eax, 0ffffffffh
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, offset anone
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_10050bca
mov     esp, ebp
pop     ebp
retn
mov     edx, offset afull
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_10050be3
mov     eax, 1
mov     esp, ebp
pop     ebp
retn
mov     edx, offset aincremental
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_10050bfc
mov     eax, 2
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
mov     [ebp+var_4], eax
test    esi, esi
jz      short loc_10050c20
lea     eax, [ebp+var_4]
push    eax
push    esi
call    sub_1000c450
mov     eax, [ebp+var_4]
add     esp, 8
test    eax, eax
js      short loc_10050c1e
cmp     eax, 2
jle     short loc_10050c20
xor     eax, eax
movzx   eax, al
mov     esp, ebp
pop     ebp
retn
push    ecx
push    ebx
push    esi
mov     esi, [eax]
mov     ecx, [esi+10h]
mov     ebx, [ecx+14h]
test    ebx, ebx
jz      short loc_10050c61
cmp     byte ptr [esi+30h], 0
jz      short loc_10050c67
cmp     byte ptr [ebx+8], 0
jnz     short loc_10050c67
call    sub_1001b4a0
mov     edx, [esi+10h]
mov     eax, esi
mov     dword ptr [edx+14h], 0
call    sub_1003fad0
xor     eax, eax
pop     esi
pop     ebx
pop     ecx
retn
push    offset atemporarystora
push    eax
call    sub_1000bb30
add     esp, 8
pop     esi
mov     eax, 1
pop     ebx
pop     ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, eax
mov     al, [esi]
cmp     al, 30h
jl      short loc_10050c9f
cmp     al, 32h
jg      short loc_10050c9f
movsx   eax, al
sub     eax, 30h
mov     [ebp+var_4], eax
jmp     short loc_10050cd4
mov     edx, offset afile
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_10050cb8
mov     [ebp+var_4], 1
jmp     short loc_10050cd1
mov     edx, offset amemory_0
mov     ecx, esi
call    sub_1000bca0
neg     eax
sbb     eax, eax
and     eax, 0fffffffeh
add     eax, 2
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     esi, [edi]
movzx   ecx, byte ptr [esi+31h]
cmp     ecx, eax
jz      short loc_10050d10
mov     edx, [esi+10h]
mov     ebx, [edx+14h]
test    ebx, ebx
jz      short loc_10050d0d
cmp     byte ptr [esi+30h], 0
jz      short loc_10050d18
cmp     byte ptr [ebx+8], 0
jnz     short loc_10050d18
call    sub_1001b4a0
mov     eax, [esi+10h]
mov     dword ptr [eax+14h], 0
mov     eax, esi
call    sub_1003fad0
mov     eax, [ebp+var_4]
mov     [esi+31h], al
xor     eax, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset atemporarystora
push    edi
call    sub_1000bb30
add     esp, 8
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, eax
push    edi
push    esi
call    sub_10056c90
inc     dword ptr [esi+4ch]
mov     ebx, eax
mov     eax, [esi+4ch]
mov     esi, [esi]
add     esp, 4
mov     ecx, 8
mov     [ebp+var_c], ebx
mov     [ebp+var_8], eax
call    sub_10009a40
mov     ecx, eax
mov     [ebp+var_4], ecx
test    ecx, ecx
jz      short loc_10050d82
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_8]
mov     [ecx], edx
mov     [ecx+4], eax
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_10050d9f
mov     edi, ebx
call    sub_10025810
mov     ecx, [ebp+var_4]
test    eax, eax
jz      short loc_10050d9f
mov     eax, 1
jmp     short loc_10050dc7
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edi, [ebp+var_8]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], edi
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 8
mov     eax, esi
mov     esi, [ebx+4]
mov     edi, [ebx]
test    esi, esi
jz      short loc_10050e0e
cmp     byte ptr [edi+32h], 0
jnz     short loc_10050e0e
test    eax, eax
jns     short loc_10050dde
mov     eax, [ebx+1ch]
dec     eax
lea     ecx, [eax+eax*4]
movsx   eax, byte ptr [esi+ecx*4+1]
lea     esi, [esi+ecx*4]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     eax, [ebp+var_4]
xor     ecx, ecx
mov     [esi+10h], ecx
cmp     eax, ecx
jnz     short loc_10050e05
mov     [esi+10h], ecx
mov     [esi+1], cl
jmp     short loc_10050e18
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0f3h
jmp     short loc_10050e18
mov     eax, 0fffffff3h
call    sub_10025e50
mov     eax, 1
mov     edi, ebx
call    sub_10026ff0
mov     edx, [ebx]
cmp     byte ptr [edx+32h], 0
jnz     loc_10050ee8
mov     ecx, [ebp+arg_0]
mov     edi, [ebx+10h]
test    ecx, ecx
jnz     short loc_10050e7b
test    byte ptr [edi+1ch], 40h
jz      short loc_10050e54
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_10050e65
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ebx, [ebp+var_c]
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     byte ptr [edi+1eh], 5
jmp     short loc_10050ee4
mov     eax, [edi]
test    eax, eax
jz      short loc_10050e86
mov     eax, [eax+48h]
jmp     short loc_10050e8b
mov     eax, 3b9aca00h
xor     esi, esi
test    eax, eax
js      short loc_10050e9c
cmp     byte ptr [esi+ecx], 0
jz      short loc_10050e9c
inc     esi
cmp     esi, eax
jle     short loc_10050e91
xor     edx, edx
mov     [ebp+var_c], 202h
push    edi
cmp     edx, offset sub_10009760
jnz     short loc_10050ec1
call    sub_100247d0
mov     eax, [ebp+arg_0]
mov     [edi+4], eax
mov     [edi+24h], eax
mov     eax, [ebp+var_c]
jmp     short loc_10050ed1
call    sub_100247d0
mov     eax, [ebp+arg_0]
mov     [edi+4], eax
mov     eax, 0a02h
mov     dword ptr [edi+20h], 0
add     esp, 4
mov     [edi+18h], esi
mov     word ptr [edi+1eh], 103h
mov     [edi+1ch], ax
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_10050efb
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_10050f26
mov     eax, [ebx+4]
mov     ecx, 1
add     [ebx+1ch], ecx
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_8]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_4]
mov     al, [eax]
push    ebx
push    esi
push    edi
xor     edi, edi
mov     esi, offset off_10076c38
mov     [ebp+var_1], al
mov     ecx, [ebp+arg_4]
mov     edx, [esi]
test    al, al
jz      short loc_10050f71
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_10050f6e
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10050f51
mov     al, [ebp+var_1]
movzx   ecx, byte ptr [ecx]
movzx   edx, byte ptr [edx]
movzx   edx, ds:byte_10076030[edx]
movzx   ecx, ds:byte_10076030[ecx]
sub     ecx, edx
jz      short loc_10050f9b
inc     edi
add     esi, 8
cmp     edi, 0eh
jl      short loc_10050f48
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
mov     ebx, [eax]
push    eax
mov     [ebp+var_8], ebx
call    sub_10056c90
mov     edi, eax
add     esp, 4
test    edi, edi
jz      loc_10051047
mov     eax, [ebp+arg_8]
test    eax, eax
jnz     short loc_10050fe6
mov     eax, [ebx+18h]
and     eax, [esi+4]
neg     eax
sbb     eax, eax
neg     eax
cdq
push    edx
mov     edx, [esi]
push    eax
mov     eax, [ebp+arg_0]
push    edx
call    sub_10050d40
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [ebx+30h], 0
mov     esi, [esi+4]
jnz     short loc_10050ff5
and     esi, 0fbffffffh
push    0
push    1
mov     ebx, eax
call    sub_10050ad0
add     esp, 8
test    al, al
mov     eax, [ebp+var_8]
jz      short loc_1005100f
or      [eax+18h], esi
jmp     short loc_10051014
not     esi
and     [eax+18h], esi
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10051025
call    sub_10025810
test    eax, eax
jnz     short loc_10051047
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     [eax+3], cl
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 81h
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   eax, al
add     eax, 0fffffffah
cmp     eax, 3
ja      short def_1005106b
jmp     ds:jpt_1005106b[eax*4]
mov     eax, offset asetnull
retn
mov     eax, offset asetdefault
retn
mov     eax, offset acascade
retn
mov     eax, offset arestrict
retn
mov     eax, offset anoaction
retn
push    ebp
mov     ebp, esp
sub     esp, 68h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, [edi]
mov     ecx, 0c0h
mov     esi, ebx
mov     [ebp+var_c], ebx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1005113c
push    0c0h
push    0
push    esi
call    memset
mov     [esi], ebx
mov     eax, [ebx+4]
add     esp, 0ch
test    eax, eax
jz      short loc_100510df
mov     [eax+38h], esi
mov     eax, [ebx+4]
mov     [esi+3ch], eax
mov     dword ptr [esi+38h], 0
mov     [ebx+4], esi
mov     dword ptr [esi+30h], 26bceaa5h
mov     [ebp+var_14], esi
mov     [edi+8], esi
test    esi, esi
jz      loc_1005301b
mov     eax, [ebp+arg_8]
mov     byte ptr [esi+60h], 1
mov     ecx, [edi]
mov     dword ptr [edi+4ch], 2
test    eax, eax
jz      short loc_10051170
cmp     dword ptr [eax+4], 0
jbe     short loc_10051170
cmp     byte ptr [ecx+79h], 0
jz      short loc_10051140
push    offset acorruptdatabas
push    edi
call    sub_1000bb30
add     esp, 8
inc     dword ptr [edi+44h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     esi, esi
jmp     short loc_100510f6
mov     edx, eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_3c], edx
call    sub_1003ffb0
mov     [ebp+var_18], eax
test    eax, eax
jns     short loc_1005117f
mov     eax, [ebp+arg_4]
push    eax
push    offset aunknowndatabas_0
push    edi
call    sub_1000bb30
add     esp, 0ch
inc     dword ptr [edi+44h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   ecx, byte ptr [ecx+78h]
mov     edx, [ebp+arg_4]
mov     [ebp+var_18], ecx
mov     [ebp+var_3c], edx
jmp     short loc_10051182
mov     ecx, [ebp+var_18]
mov     [ebp+var_24], ecx
test    ecx, ecx
js      loc_1005301b
mov     eax, ecx
shl     eax, 4
add     eax, [ebx+10h]
mov     [ebp+var_1c], eax
cmp     ecx, 1
jnz     short loc_100511af
mov     ebx, edi
call    sub_10043bb0
test    eax, eax
jnz     loc_1005301b
mov     ebx, [ebp+var_c]
mov     eax, [ebp+var_3c]
push    ebx
call    sub_1003fe10
add     esp, 4
mov     [ebp+src], eax
test    eax, eax
jz      loc_1005301b
cmp     [ebp+arg_10], 0
mov     eax, [ebp+arg_c]
jz      short loc_100511e0
push    eax
push    offset at
push    ebx
call    sub_1000ae80
add     esp, 0ch
jmp     short loc_100511e9
push    ebx
call    sub_1003fe10
add     esp, 4
mov     ecx, [ebp+arg_8]
cmp     dword ptr [ecx+4], 0
mov     [ebp+var_8], eax
jbe     short loc_100511ff
mov     edx, [ebp+var_1c]
mov     eax, [edx]
mov     [ebp+var_20], eax
jmp     short loc_10051206
mov     [ebp+var_20], 0
mov     ecx, [ebp+var_20]
mov     edx, [ebp+var_8]
mov     eax, [ebp+src]
push    ecx
push    edx
push    eax
push    13h
mov     eax, edi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_10053004
mov     ecx, [ebp+src]
mov     edx, [ebp+var_8]
mov     [ebp+var_64], eax
mov     [ebp+var_58], eax
lea     eax, [ebp+var_64]
push    eax
mov     [ebp+var_60], ecx
mov     ecx, [ebp+var_20]
push    0eh
push    ecx
push    ebx
mov     [ebp+var_5c], edx
call    sub_10071f70
add     esp, 10h
mov     [ebp+var_3c], eax
test    eax, eax
jnz     short loc_100512b2
mov     eax, [ebp+var_64]
test    eax, eax
jz      loc_10052fd3
inc     dword ptr [edi+4ch]
mov     ebx, [edi+4ch]
push    0
push    eax
push    0
push    ebx
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
mov     eax, 1
mov     edi, esi
call    sub_10026ff0
push    0
push    offset aresult
push    0
push    0
mov     ecx, esi
call    sub_10027070
push    1
push    ebx
push    10h
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+var_64]
add     esp, 34h
push    edx
call    sub_10009770
add     esp, 4
jmp     loc_10052fd3
cmp     [ebp+var_3c], 0ch
jz      short loc_100512e8
mov     eax, [ebp+var_64]
test    eax, eax
jz      short loc_100512da
push    eax
push    offset as
push    edi
call    sub_1000bb30
mov     eax, [ebp+var_64]
add     esp, 0ch
push    eax
call    sub_10009770
add     esp, 4
mov     ecx, [ebp+var_3c]
inc     dword ptr [edi+44h]
mov     [edi+0ch], ecx
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset adefaultcachesi
call    sub_1000bca0
test    eax, eax
jnz     loc_100513f3
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     edi, [ebp+var_18]
mov     esi, [ebp+var_14]
mov     ecx, edi
mov     eax, esi
call    sub_100263e0
mov     ecx, [ebp+var_8]
test    ecx, ecx
jnz     short loc_1005139b
lea     eax, [ecx+1]
mov     edi, esi
call    sub_10026ff0
push    0
push    offset acachesize
push    0
push    0
mov     ecx, esi
call    sub_10027070
mov     eax, [ebp+arg_0]
add     dword ptr [eax+4ch], 2
push    offset dword_10076ca8
push    8
push    esi
call    sub_10025d70
add     esp, 1ch
cmp     [esi+1ch], eax
jbe     short loc_10051367
mov     ecx, [esi+4]
mov     edi, [ebp+var_18]
lea     edx, [eax+eax*4]
mov     [ecx+edx*4+4], edi
lea     ecx, [eax+1]
cmp     [esi+1ch], ecx
jbe     short loc_1005137c
mov     edi, [ebp+var_18]
lea     edx, [ecx+ecx*4]
mov     ecx, [esi+4]
mov     [ecx+edx*4+4], edi
add     eax, 6
cmp     [esi+1ch], eax
jbe     loc_10052fd3
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     dword ptr [eax+edx*4+4], 7d0h
jmp     loc_10052fd3
call    sub_1000c520
call    sub_1000cb90
mov     ebx, eax
mov     eax, [ebp+arg_0]
push    0
call    sub_10043d50
add     esp, 4
push    1
push    ebx
push    7
mov     eax, esi
call    sub_10025990
mov     ecx, [ebp+var_18]
add     esp, 0ch
push    1
push    3
push    ecx
push    25h
mov     eax, esi
call    sub_10025890
mov     eax, [ebp+var_1c]
mov     edx, [eax+0ch]
mov     [edx+50h], ebx
mov     ecx, [eax+0ch]
mov     esi, [ecx+50h]
mov     eax, [eax+4]
add     esp, 10h
call    sub_1001b590
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset apagesize
call    sub_1000bca0
test    eax, eax
jnz     short loc_10051460
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_1c]
mov     esi, [edx+4]
test    ecx, ecx
jnz     short loc_10051436
test    esi, esi
jz      short loc_1005141d
mov     eax, [esi+4]
mov     eax, [eax+20h]
jmp     short loc_1005141f
xor     eax, eax
cdq
push    edx
push    eax
push    offset apagesize
mov     eax, edi
call    sub_10050d40
add     esp, 0ch
jmp     loc_10052fd3
call    sub_1000c520
push    0
push    0ffffffffh
push    esi
mov     [ebx+38h], eax
call    sub_1001b6c0
add     esp, 0ch
cmp     eax, 7
jnz     loc_10052fd3
mov     ecx, [ebp+var_c]
mov     byte ptr [ecx+32h], 1
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset asecuredelete
call    sub_1000bca0
test    eax, eax
jnz     loc_100514fe
cmp     [ebp+var_8], 0
mov     edx, [ebp+var_1c]
mov     eax, [edx+4]
mov     [ebp+var_40], eax
mov     [ebp+arg_0], 0ffffffffh
jz      short loc_100514a7
mov     ebx, [ebp+var_8]
push    0
push    1
call    sub_10050ad0
mov     ebx, [ebp+var_c]
xor     ecx, ecx
add     esp, 8
test    al, al
setnz   cl
mov     [ebp+arg_0], ecx
mov     edx, [ebp+arg_8]
xor     esi, esi
cmp     [edx+4], esi
jnz     short loc_100514dc
cmp     [ebp+arg_0], esi
jl      short loc_100514dc
cmp     [ebx+14h], esi
jle     short loc_100514dc
mov     [ebp+var_2c], esi
mov     edi, edi
mov     ecx, [ebx+10h]
mov     edx, [ebp+var_2c]
mov     eax, [ebp+arg_0]
mov     ecx, [edx+ecx+4]
call    sub_1001b830
add     [ebp+var_2c], 10h
inc     esi
cmp     esi, [ebx+14h]
jl      short loc_100514c0
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_40]
call    sub_1001b830
cdq
push    edx
push    eax
push    offset asecuredelete
mov     eax, edi
call    sub_10050d40
add     esp, 0ch
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset apagecount
call    sub_1000bca0
test    eax, eax
jz      loc_10052f3c
mov     ecx, [ebp+src]
mov     edx, offset amaxpagecount
call    sub_1000bca0
test    eax, eax
jz      loc_10052f3c
mov     ecx, [ebp+src]
mov     edx, offset alockingmode
call    sub_1000bca0
test    eax, eax
jnz     loc_100515f8
mov     esi, [ebp+var_8]
mov     [ebp+arg_0], offset anormal
call    sub_10050b80
mov     edx, eax
mov     eax, [ebp+arg_8]
mov     eax, [eax+4]
test    eax, eax
jnz     short loc_10051593
cmp     edx, 0ffffffffh
jnz     short loc_10051563
movzx   eax, byte ptr [ebx+33h]
jmp     short loc_100515a3
test    eax, eax
jnz     short loc_10051593
mov     esi, 2
cmp     [ebx+14h], esi
jle     short loc_10051590
mov     edi, 20h
mov     ecx, [ebx+10h]
mov     eax, [edi+ecx+4]
mov     ecx, [eax+4]
mov     eax, [ecx]
call    sub_100165e0
inc     esi
add     edi, 10h
cmp     esi, [ebx+14h]
jl      short loc_10051576
mov     [ebx+33h], dl
mov     eax, [ebp+var_1c]
mov     ecx, [eax+4]
mov     eax, [ecx+4]
mov     eax, [eax]
call    sub_100165e0
cmp     eax, 1
jnz     short loc_100515af
mov     [ebp+arg_0], offset aexclusive
mov     edi, [ebp+var_14]
mov     eax, 1
call    sub_10026ff0
push    0
push    offset alockingmode
push    0
push    0
mov     ecx, edi
call    sub_10027070
mov     ecx, [ebp+arg_0]
push    0
push    ecx
push    0
push    1
push    0
push    5eh
mov     eax, edi
call    sub_100259f0
push    1
push    1
push    10h
mov     eax, edi
call    sub_10025990
add     esp, 34h
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset ajournalmode
call    sub_1000bca0
test    eax, eax
jnz     loc_100516f0
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     edi, [ebp+var_14]
mov     eax, 1
call    sub_10026ff0
push    0
push    offset ajournalmode
push    0
push    0
mov     ecx, edi
call    sub_10027070
mov     esi, [ebp+var_8]
add     esp, 10h
test    esi, esi
jnz     short loc_1005164a
or      edi, 0ffffffffh
jmp     short loc_1005167c
mov     ecx, esi
call    sub_1000ba20
mov     ebx, eax
xor     edi, edi
cmp     edi, 6
jz      short loc_10051645
mov     eax, ds:off_10076bf4[edi*4]
test    eax, eax
jz      short loc_10051645
push    ebx
push    eax
push    esi
call    sub_1000bcf0
add     esp, 0ch
test    eax, eax
jz      short loc_10051677
inc     edi
jmp     short loc_10051655
cmp     edi, 0ffffffffh
jnz     short loc_10051693
mov     eax, [ebp+arg_8]
cmp     dword ptr [eax+4], 0
jnz     short loc_10051693
mov     [ebp+var_24], 0
mov     dword ptr [eax+4], 1
mov     edx, [ebp+var_c]
mov     esi, [edx+14h]
dec     esi
js      short loc_100516da
mov     ebx, esi
shl     ebx, 4
mov     eax, [ebp+var_c]
mov     ecx, [eax+10h]
cmp     dword ptr [ebx+ecx+4], 0
jz      short loc_100516d4
cmp     esi, [ebp+var_24]
jz      short loc_100516bc
mov     edx, [ebp+arg_8]
cmp     dword ptr [edx+4], 0
jnz     short loc_100516d4
mov     eax, [ebp+var_14]
mov     ecx, esi
call    sub_100263e0
push    edi
push    1
push    esi
push    7eh
call    sub_10025890
add     esp, 10h
sub     ebx, 10h
dec     esi
jns     short loc_100516a1
mov     eax, [ebp+var_14]
push    1
push    1
push    10h
call    sub_10025990
add     esp, 0ch
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset ajournalsizelim
call    sub_1000bca0
test    eax, eax
jnz     short loc_10051770
mov     eax, [ebp+var_1c]
mov     ecx, [eax+4]
mov     edx, [ecx+4]
mov     esi, [edx]
mov     edx, [ebp+var_8]
or      eax, 0ffffffffh
mov     ecx, 0fffffffeh
mov     [ebp+var_54], ecx
mov     [ebp+var_50], eax
test    edx, edx
jz      short loc_10051751
lea     eax, [ebp+var_54]
push    0f4240h
push    eax
push    edx
mov     al, 1
call    sub_1000c2a0
mov     eax, [ebp+var_50]
add     esp, 0ch
cmp     eax, 0ffffffffh
jg      short loc_1005174e
jl      short loc_10051747
mov     ecx, [ebp+var_54]
cmp     ecx, 0ffffffffh
jnb     short loc_10051751
or      ecx, 0ffffffffh
or      eax, ecx
jmp     short loc_10051751
mov     ecx, [ebp+var_54]
push    eax
push    ecx
mov     ecx, esi
call    sub_10016720
push    edx
push    eax
push    offset ajournalsizelim
mov     eax, edi
call    sub_10050d40
add     esp, 14h
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset aautovacuum
call    sub_1000bca0
test    eax, eax
jnz     loc_10051884
mov     ecx, [ebp+var_1c]
mov     edx, [ecx+4]
mov     esi, edi
mov     [ebp+arg_0], edx
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
cmp     [ebp+var_8], eax
jnz     short loc_100517c9
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_100517b0
call    sub_1001b920
jmp     short loc_100517b2
xor     eax, eax
cdq
push    edx
push    eax
push    offset aautovacuum
mov     eax, edi
call    sub_10050d40
add     esp, 0ch
jmp     loc_10052fd3
mov     esi, [ebp+var_8]
call    sub_10050bb0
mov     [ebp+var_3c], eax
mov     [ebx+34h], al
test    eax, eax
js      loc_10052fd3
push    eax
mov     eax, [ebp+arg_0]
call    sub_1001b8a0
add     esp, 4
test    eax, eax
jnz     loc_10052fd3
mov     edi, [ebp+var_3c]
cmp     edi, 1
jz      short loc_10051804
cmp     edi, 2
jnz     loc_10052fd3
mov     esi, [ebp+var_14]
push    offset dword_10076cc8
push    6
push    esi
call    sub_10025d70
mov     ecx, [ebp+var_18]
add     esp, 0ch
cmp     [esi+1ch], eax
jbe     short loc_10051829
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     [ebx+edx*4+4], ecx
lea     edx, [eax+1]
cmp     [esi+1ch], edx
jbe     short loc_1005183b
mov     ebx, [esi+4]
lea     edx, [edx+edx*4]
mov     [ebx+edx*4+4], ecx
lea     edx, [eax+2]
cmp     [esi+1ch], edx
jbe     short loc_10051853
mov     ebx, [esi+4]
lea     edi, [eax+4]
lea     edx, [edx+edx*4]
mov     [ebx+edx*4+8], edi
mov     edi, [ebp+var_3c]
lea     edx, [eax+4]
cmp     [esi+1ch], edx
jbe     short loc_10051866
mov     ebx, [esi+4]
dec     edi
lea     edx, [edx+edx*4]
mov     [ebx+edx*4+4], edi
add     eax, 5
cmp     [esi+1ch], eax
jbe     short loc_10051878
mov     edx, [esi+4]
lea     eax, [eax+eax*4]
mov     [edx+eax*4+4], ecx
mov     eax, esi
call    sub_100263e0
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset aincrementalvac
call    sub_1000bca0
test    eax, eax
jnz     loc_10051937
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     eax, [ebp+var_8]
test    eax, eax
jz      short loc_100518c7
lea     ecx, [ebp+var_40]
push    ecx
push    eax
call    sub_1000c450
add     esp, 8
test    eax, eax
jz      short loc_100518c7
mov     esi, [ebp+var_40]
test    esi, esi
jg      short loc_100518cc
mov     esi, 7fffffffh
mov     edi, [ebp+var_18]
mov     eax, [ebp+arg_0]
push    0
call    sub_10043d50
add     esp, 4
push    1
push    esi
mov     esi, [ebp+var_14]
push    7
mov     eax, esi
call    sub_10025990
add     esp, 0ch
mov     edx, edi
push    edx
push    80h
mov     eax, esi
call    sub_10025940
mov     edi, eax
push    1
push    10h
mov     eax, esi
call    sub_10025940
push    0ffffffffh
push    1
push    14h
mov     eax, esi
call    sub_10025990
add     esp, 1ch
push    edi
push    1
push    78h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
mov     eax, edi
mov     edx, esi
call    sub_10025e30
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset acachesize
call    sub_1000bca0
test    eax, eax
jnz     short loc_1005199f
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     ecx, [ebp+var_8]
test    ecx, ecx
jnz     short loc_1005197e
mov     eax, [ebp+var_1c]
mov     ecx, [eax+0ch]
mov     eax, [ecx+50h]
cdq
push    edx
push    eax
push    offset acachesize
mov     eax, edi
call    sub_10050d40
add     esp, 0ch
jmp     loc_10052fd3
call    sub_1000c520
mov     ecx, [ebp+var_1c]
mov     edx, [ecx+0ch]
mov     [edx+50h], eax
mov     eax, [ecx+0ch]
mov     esi, [eax+50h]
mov     eax, [ecx+4]
call    sub_1001b590
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset atempstore
call    sub_1000bca0
test    eax, eax
jnz     short loc_100519dc
mov     eax, [ebp+var_8]
test    eax, eax
jnz     short loc_100519d2
movzx   eax, byte ptr [ebx+31h]
cdq
push    edx
push    eax
push    offset atempstore
mov     eax, edi
call    sub_10050d40
add     esp, 0ch
jmp     loc_10052fd3
call    sub_10050c80
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset atempstoredirec
call    sub_1000bca0
test    eax, eax
jnz     loc_10051acd
mov     eax, [ebp+var_8]
test    eax, eax
jnz     short loc_10051a4f
cmp     dword_100817ac, eax
jz      loc_10052fd3
mov     eax, 1
mov     edi, esi
call    sub_10026ff0
push    0
push    offset atempstoredirec
push    0
push    0
mov     ecx, esi
call    sub_10027070
mov     ecx, dword_100817ac
push    0
push    ecx
push    0
push    1
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
push    1
push    1
push    10h
mov     eax, esi
call    sub_10025990
add     esp, 34h
jmp     loc_10052fd3
cmp     byte ptr [eax], 0
mov     esi, [ebp+var_8]
jz      short loc_10051a85
mov     eax, [ebx]
lea     edx, [ebp+arg_0]
push    edx
push    1
push    esi
push    eax
mov     eax, [eax+20h]
call    eax
add     esp, 10h
test    eax, eax
jnz     short loc_10051a72
cmp     [ebp+arg_0], eax
jnz     short loc_10051a85
push    offset anotawritabledi
push    edi
call    sub_1000bb30
add     esp, 8
jmp     loc_10053004
cmp     byte ptr [ebx+31h], 1
ja      short loc_10051a92
mov     eax, edi
call    sub_10050c30
mov     ecx, dword_100817ac
push    ecx
call    sub_10009770
add     esp, 4
cmp     byte ptr [esi], 0
jz      short loc_10051abe
push    esi
push    offset as
call    sub_1000b020
add     esp, 8
mov     dword_100817ac, eax
jmp     loc_10052fd3
mov     dword_100817ac, 0
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset adatastoredirec
call    sub_1000bca0
test    eax, eax
jnz     loc_10051b87
mov     eax, [ebp+var_8]
test    eax, eax
jnz     short loc_10051b21
cmp     dword_100817b0, eax
jz      loc_10052fd3
mov     eax, 1
mov     edi, esi
call    sub_10026ff0
push    0
push    offset adatastoredirec
push    0
push    0
mov     ecx, esi
call    sub_10027070
mov     edx, dword_100817b0
push    0
push    edx
jmp     loc_10051a2b
cmp     byte ptr [eax], 0
mov     esi, [ebp+var_8]
jz      short loc_10051b4c
mov     ebx, [ebx]
mov     ecx, [ebx+20h]
lea     eax, [ebp+arg_0]
push    eax
push    1
push    esi
push    ebx
call    ecx
add     esp, 10h
test    eax, eax
jnz     loc_10051a72
cmp     [ebp+arg_0], eax
jz      loc_10051a72
mov     edx, dword_100817b0
push    edx
call    sub_10009770
add     esp, 4
cmp     byte ptr [esi], 0
jz      short loc_10051b78
push    esi
push    offset as
call    sub_1000b020
add     esp, 8
mov     dword_100817b0, eax
jmp     loc_10052fd3
mov     dword_100817b0, 0
jmp     loc_10052fd3
mov     ecx, [ebp+src]
mov     edx, offset asynchronous
call    sub_1000bca0
test    eax, eax
jnz     short loc_10051c00
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
cmp     [ebp+var_8], eax
jnz     short loc_10051bcb
mov     eax, [ebp+var_1c]
movzx   eax, byte ptr [eax+9]
dec     eax
cdq
push    edx
push    eax
push    offset asynchronous
mov     eax, edi
call    sub_10050d40
add     esp, 0ch
jmp     loc_10052fd3
cmp     byte ptr [ebx+30h], 0
jnz     short loc_10051be4
push    offset asafetylevelmay
push    edi
call    sub_1000bb30
add     esp, 8
jmp     loc_10052fd3
mov     ebx, [ebp+var_8]
push    1
push    0
call    sub_10050ad0
mov     ecx, [ebp+var_1c]
add     esp, 8
inc     al
mov     [ecx+9], al
jmp     loc_10052fd3
mov     edx, [ebp+var_8]
mov     ebx, [ebp+src]
push    edx
push    ebx
push    edi
call    sub_10050f30
add     esp, 0ch
test    eax, eax
jnz     loc_10052fd3
mov     edx, offset atableinfo
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     loc_10051dd4
cmp     [ebp+var_8], eax
jz      loc_10051dd4
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     eax, [ebp+var_20]
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_c]
push    eax
push    ecx
push    edx
call    sub_1003f510
add     esp, 0ch
mov     [ebp+var_28], eax
test    eax, eax
jz      loc_10052fd3
mov     edi, [ebp+var_14]
xor     ebx, ebx
lea     eax, [ebx+6]
mov     [ebp+var_2c], ebx
call    sub_10026ff0
push    ebx
push    offset acid
push    ebx
push    ebx
mov     ecx, edi
mov     dword ptr [esi+4ch], 6
call    sub_10027070
push    ebx
push    offset aname
push    ebx
push    1
mov     ecx, edi
call    sub_10027070
push    ebx
push    offset atype
push    ebx
push    2
mov     ecx, edi
call    sub_10027070
push    ebx
push    offset anotnull
push    ebx
push    3
mov     ecx, edi
call    sub_10027070
add     esp, 40h
push    ebx
push    offset adfltvalue
push    ebx
push    4
mov     ecx, edi
call    sub_10027070
push    ebx
push    offset apk
push    ebx
push    5
mov     ecx, edi
call    sub_10027070
mov     eax, [ebp+var_28]
push    eax
push    esi
call    sub_10041590
mov     eax, [ebp+var_28]
mov     esi, [eax+0ch]
add     esp, 28h
cmp     [eax+8], ebx
jle     loc_10052fd3
lea     esp, [esp+0]
cmp     byte ptr [esi+17h], 0
jz      short loc_10051d0e
inc     [ebp+var_2c]
jmp     loc_10051dbf
mov     ecx, ebx
sub     ecx, [ebp+var_2c]
push    1
push    ecx
push    7
mov     eax, edi
call    sub_10025990
mov     edx, [esi]
add     esp, 0ch
push    0
push    edx
push    0
push    2
push    0
push    5eh
mov     eax, edi
call    sub_100259f0
mov     eax, [esi+0ch]
add     esp, 18h
test    eax, eax
jnz     short loc_10051d45
mov     eax, offset dword_100796bc
push    0
push    eax
push    0
push    3
push    0
push    5eh
mov     eax, edi
call    sub_100259f0
xor     eax, eax
cmp     [esi+14h], al
push    4
setnz   al
push    eax
push    7
mov     eax, edi
call    sub_10025990
mov     eax, [esi+8]
add     esp, 24h
test    eax, eax
jz      short loc_10051d8c
push    0
push    eax
push    0
push    5
push    0
push    5eh
mov     eax, edi
call    sub_100259f0
add     esp, 18h
jmp     short loc_10051d9c
push    5
push    0
push    0ah
mov     eax, edi
call    sub_10025990
add     esp, 0ch
movzx   ecx, byte ptr [esi+15h]
push    6
push    ecx
push    7
mov     eax, edi
call    sub_10025990
add     esp, 0ch
push    6
push    1
push    10h
mov     eax, edi
call    sub_10025990
add     esp, 0ch
mov     edx, [ebp+var_28]
inc     ebx
add     esi, 18h
cmp     ebx, [edx+8]
jl      loc_10051d00
jmp     loc_10052fd3
mov     edx, offset aindexinfo
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     loc_10051ee3
cmp     [ebp+var_8], eax
jz      loc_10051ee3
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     eax, [ebp+var_20]
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_c]
push    eax
push    ecx
call    sub_1003f6f0
add     esp, 8
mov     [ebp+var_2c], eax
test    eax, eax
jz      loc_10052fd3
mov     edi, [ebp+var_14]
mov     ebx, eax
mov     edx, [ebx+0ch]
mov     eax, 3
mov     [ebp+var_40], edx
call    sub_10026ff0
push    0
push    offset aseqno
mov     eax, esi
push    0
push    0
mov     ecx, edi
mov     dword ptr [eax+4ch], 3
call    sub_10027070
push    0
push    offset acid
push    0
push    1
mov     ecx, edi
call    sub_10027070
push    0
push    offset aname
push    0
push    2
mov     ecx, edi
call    sub_10027070
xor     esi, esi
add     esp, 30h
cmp     [ebx+24h], esi
jle     loc_10052fd3
mov     ecx, [ebp+var_2c]
mov     edx, [ecx+4]
mov     ebx, [edx+esi*4]
push    1
push    esi
push    7
mov     eax, edi
call    sub_10025990
add     esp, 0ch
push    2
push    ebx
push    7
mov     eax, edi
call    sub_10025990
mov     ecx, [ebp+var_40]
mov     edx, [ecx+0ch]
add     esp, 0ch
push    0
lea     eax, [ebx+ebx*2]
mov     eax, [edx+eax*8]
push    eax
push    0
push    3
push    0
push    5eh
mov     eax, edi
call    sub_100259f0
push    3
push    1
push    10h
mov     eax, edi
call    sub_10025990
mov     ecx, [ebp+var_2c]
inc     esi
add     esp, 24h
cmp     esi, [ecx+24h]
jl      short loc_10051e80
jmp     loc_10052fd3
mov     edx, offset aindexlist
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     loc_10051ff7
cmp     [ebp+var_8], eax
jz      loc_10051ff7
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     edx, [ebp+var_20]
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_c]
push    edx
push    eax
push    ecx
call    sub_1003f510
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jz      loc_10052fd3
push    edi
call    sub_10056c90
mov     ebx, [ebx+10h]
add     esp, 4
mov     esi, eax
test    ebx, ebx
jz      loc_10052fd3
mov     eax, 3
mov     edi, esi
mov     [ebp+var_40], 0
call    sub_10026ff0
mov     edx, [ebp+arg_0]
push    0
push    offset aseq
push    0
push    0
mov     ecx, esi
mov     dword ptr [edx+4ch], 3
call    sub_10027070
push    0
push    offset aname
push    0
push    1
mov     ecx, esi
call    sub_10027070
push    0
push    offset aunique_0
push    0
push    2
mov     ecx, esi
call    sub_10027070
mov     edi, [ebp+var_40]
add     esp, 30h
lea     esp, [esp+0]
push    1
push    edi
push    7
mov     eax, esi
call    sub_10025990
mov     eax, [ebx]
add     esp, 0ch
push    0
push    eax
push    0
push    2
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
xor     ecx, ecx
cmp     [ebx+2ch], cl
push    3
setnz   cl
mov     eax, esi
push    ecx
push    7
call    sub_10025990
add     esp, 24h
push    3
push    1
push    10h
mov     eax, esi
call    sub_10025990
mov     ebx, [ebx+14h]
add     esp, 0ch
inc     edi
test    ebx, ebx
jnz     short loc_10051fa0
jmp     loc_10052fd3
mov     edx, offset adatabaselist
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     loc_100520ef
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     edi, [ebp+var_14]
mov     eax, 3
call    sub_10026ff0
mov     edx, esi
xor     esi, esi
push    esi
push    offset aseq
push    esi
push    esi
mov     ecx, edi
mov     dword ptr [edx+4ch], 3
call    sub_10027070
push    esi
push    offset aname
push    esi
push    1
mov     ecx, edi
call    sub_10027070
push    esi
push    offset afile
push    esi
push    2
mov     ecx, edi
call    sub_10027070
mov     eax, [ebp+var_c]
add     esp, 30h
mov     [ebp+arg_0], esi
cmp     [eax+14h], esi
jle     loc_10052fd3
mov     ebx, [ebp+var_c]
mov     ecx, [ebx+10h]
cmp     dword ptr [esi+ecx+4], 0
jz      short loc_100520db
mov     edx, [ebp+arg_0]
push    1
push    edx
push    7
mov     eax, edi
call    sub_10025990
mov     eax, [ebx+10h]
mov     ecx, [esi+eax]
add     esp, 0ch
push    0
push    ecx
push    0
push    2
push    0
push    5eh
mov     eax, edi
call    sub_100259f0
mov     edx, [ebx+10h]
mov     eax, [esi+edx+4]
add     esp, 18h
push    0
call    sub_10022e20
push    eax
push    0
push    3
push    0
push    5eh
mov     eax, edi
call    sub_100259f0
push    3
push    1
push    10h
mov     eax, edi
call    sub_10025990
add     esp, 24h
mov     eax, [ebp+arg_0]
inc     eax
add     esi, 10h
mov     [ebp+arg_0], eax
cmp     eax, [ebx+14h]
jl      short loc_10052073
jmp     loc_10052fd3
mov     edx, offset acollationlist
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     loc_10052198
xor     ebx, ebx
lea     eax, [ebx+2]
mov     edi, esi
call    sub_10026ff0
mov     eax, [ebp+arg_0]
push    ebx
push    offset aseq
push    ebx
push    ebx
mov     ecx, esi
mov     dword ptr [eax+4ch], 2
call    sub_10027070
push    ebx
push    offset aname
push    ebx
push    1
mov     ecx, esi
call    sub_10027070
mov     ecx, [ebp+var_c]
mov     edi, [ecx+19ch]
add     esp, 20h
test    edi, edi
jz      loc_10052fd3
lea     esp, [esp+0]
mov     edx, [edi+8]
push    1
push    ebx
push    7
mov     eax, esi
mov     [ebp+arg_0], edx
call    sub_10025990
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
add     esp, 0ch
push    0
push    ecx
push    0
push    2
push    0
push    5eh
mov     eax, esi
inc     ebx
call    sub_100259f0
push    2
push    1
push    10h
mov     eax, esi
call    sub_10025990
mov     edi, [edi]
add     esp, 24h
test    edi, edi
jnz     short loc_10052150
jmp     loc_10052fd3
mov     edx, offset aforeignkeylist
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     loc_100523d7
cmp     [ebp+var_8], eax
jz      loc_100523d7
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     edx, [ebp+var_20]
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_c]
push    edx
push    eax
push    ecx
call    sub_1003f510
add     esp, 0ch
mov     [ebp+var_3c], eax
test    eax, eax
jz      loc_10052fd3
push    edi
call    sub_10056c90
mov     edx, [ebp+var_3c]
mov     ebx, [edx+24h]
add     esp, 4
mov     esi, eax
test    ebx, ebx
jz      loc_10052fd3
mov     eax, 8
mov     edi, esi
mov     [ebp+var_28], 0
call    sub_10026ff0
mov     eax, [ebp+arg_0]
push    0
push    offset aid
push    0
push    0
mov     ecx, esi
mov     dword ptr [eax+4ch], 8
call    sub_10027070
push    0
push    offset aseq
push    0
push    1
mov     ecx, esi
call    sub_10027070
push    0
push    offset atable
push    0
push    2
mov     ecx, esi
call    sub_10027070
push    0
push    offset afrom
push    0
push    3
mov     ecx, esi
call    sub_10027070
add     esp, 40h
push    0
push    offset ato
push    0
push    4
mov     ecx, esi
call    sub_10027070
push    0
push    offset aonupdate
push    0
push    5
mov     ecx, esi
call    sub_10027070
push    0
push    offset aondelete
push    0
push    6
mov     ecx, esi
call    sub_10027070
push    0
push    offset amatch
push    0
push    7
mov     ecx, esi
call    sub_10027070
add     esp, 40h
nop
cmp     dword ptr [ebx+14h], 0
mov     [ebp+var_2c], 0
jle     loc_100523c4
lea     ecx, [ebx+24h]
mov     [ebp+arg_0], ecx
mov     edx, [ebp+arg_0]
mov     al, [ebx+19h]
mov     edi, [edx+4]
call    sub_10051060
mov     [ebp+var_38], eax
mov     al, [ebx+1ah]
call    sub_10051060
mov     [ebp+var_40], eax
mov     eax, [ebp+var_28]
push    1
push    eax
push    7
mov     eax, esi
call    sub_10025990
mov     ecx, [ebp+var_2c]
add     esp, 0ch
push    2
push    ecx
push    7
mov     eax, esi
call    sub_10025990
mov     edx, [ebx+8]
add     esp, 0ch
push    0
push    edx
push    0
push    3
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
mov     eax, [ebp+arg_0]
mov     eax, [eax]
mov     edx, [ebp+var_3c]
lea     ecx, [eax+eax*2]
mov     eax, [edx+0ch]
mov     ecx, [eax+ecx*8]
push    0
push    ecx
push    0
push    4
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
push    0
push    edi
neg     edi
push    0
sbb     edi, edi
push    5
and     edi, 54h
push    0
add     edi, 0ah
push    edi
mov     eax, esi
call    sub_100259f0
mov     edx, [ebp+var_40]
add     esp, 48h
push    0
push    edx
push    0
push    6
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
mov     eax, [ebp+var_38]
push    0
push    eax
push    0
push    7
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
push    0
push    offset anone_0
push    0
push    8
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
add     esp, 48h
push    8
push    1
push    10h
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_2c]
add     [ebp+arg_0], 8
inc     eax
add     esp, 0ch
mov     [ebp+var_2c], eax
cmp     eax, [ebx+14h]
jl      loc_100522c7
mov     ebx, [ebx+4]
inc     [ebp+var_28]
test    ebx, ebx
jnz     loc_100522b0
jmp     loc_10052fd3
mov     edx, offset acasesensitivel
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     short loc_10052413
cmp     [ebp+var_8], eax
jz      loc_10052fd3
mov     ebx, [ebp+var_8]
push    eax
push    1
call    sub_10050ad0
mov     esi, [ebp+var_c]
xor     ecx, ecx
test    al, al
setnz   cl
push    ecx
call    sub_10048730
add     esp, 0ch
jmp     loc_10052fd3
mov     edx, offset aintegritycheck
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jz      loc_100528bc
mov     edx, offset aquickcheck
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jz      loc_100528bc
mov     edx, offset aencoding
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     loc_100525a0
mov     ebx, [ebp+var_8]
test    ebx, ebx
jnz     loc_10052518
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     esi, [ebp+var_14]
lea     eax, [ebx+1]
mov     edi, esi
call    sub_10026ff0
push    ebx
push    offset aencoding
push    ebx
push    ebx
mov     ecx, esi
call    sub_10027070
push    1
push    ebx
push    5eh
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     ecx, [eax+10h]
mov     edx, [ecx+0ch]
movzx   eax, byte ptr [edx+4dh]
mov     ebx, [esi+4]
mov     ecx, ds:off_10076d18[eax*8]
mov     edi, [esi]
add     esp, 1ch
mov     [ebp+arg_0], ecx
test    ebx, ebx
jz      short loc_100524f9
cmp     byte ptr [edi+32h], 0
jnz     short loc_100524f9
mov     eax, [esi+1ch]
lea     ecx, [eax+eax*4-5]
movsx   eax, byte ptr [ebx+ecx*4+1]
lea     ebx, [ebx+ecx*4]
mov     ecx, [ebx+10h]
call    sub_10025e50
cmp     [ebp+arg_0], 0
mov     dword ptr [ebx+10h], 0
jnz     short loc_100524ed
mov     dword ptr [ebx+10h], 0
mov     byte ptr [ebx+1], 0
jmp     short loc_10052503
mov     edx, [ebp+arg_0]
mov     [ebx+10h], edx
mov     byte ptr [ebx+1], 0feh
jmp     short loc_10052503
mov     eax, 0fffffffeh
call    sub_10025e50
push    1
push    1
push    10h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
jmp     loc_10052fd3
mov     eax, [ebp+var_c]
mov     ecx, [eax+10h]
mov     edx, [ecx+0ch]
movzx   eax, word ptr [edx+4eh]
test    al, 1
jz      short loc_10052531
test    al, 4
jz      loc_10052fd3
mov     edx, ds:off_10076d18
mov     esi, offset off_10076d18
test    edx, edx
jz      short loc_1005258c
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jz      short loc_10052569
mov     edx, [esi+8]
add     esi, 8
test    edx, edx
jnz     short loc_10052540
push    ebx
push    offset aunsupportedenc
push    edi
call    sub_1000bb30
add     esp, 0ch
jmp     loc_10052fd3
mov     al, [esi+4]
test    al, al
movzx   eax, al
jnz     short loc_10052578
mov     eax, 2
mov     ecx, [edi]
mov     edx, [ecx+10h]
mov     ecx, [edx+0ch]
mov     [ecx+4dh], al
cmp     dword ptr [esi], 0
jnz     loc_10052fd3
push    ebx
push    offset aunsupportedenc
push    edi
call    sub_1000bb30
add     esp, 0ch
jmp     loc_10052fd3
mov     edx, offset aschemaversion
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jz      loc_100527b2
mov     edx, offset auserversion
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jz      loc_100527b2
mov     edx, offset afreelistcount
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jz      loc_100527b2
mov     edx, offset acompileoptions
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     short loc_10052657
xor     ebx, ebx
lea     eax, [ebx+1]
mov     edi, esi
call    sub_10026ff0
mov     edx, [ebp+arg_0]
push    ebx
push    offset acompileoption
push    ebx
push    ebx
mov     ecx, esi
mov     dword ptr [edx+4ch], 1
call    sub_10027070
push    ebx
call    sub_10006700
add     esp, 14h
test    eax, eax
jz      loc_10052fd3
push    0
push    eax
push    0
push    1
push    0
push    5eh
mov     eax, esi
inc     ebx
call    sub_100259f0
push    1
push    1
push    10h
mov     eax, esi
call    sub_10025990
add     esp, 24h
push    ebx
call    sub_10006700
add     esp, 4
test    eax, eax
jnz     short loc_10052622
jmp     loc_10052fd3
mov     edx, offset awalcheckpoint
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     loc_10052736
mov     eax, [ebp+arg_8]
cmp     dword ptr [eax], 0
jz      short loc_1005267b
mov     ecx, [ebp+var_18]
mov     [ebp+var_3c], ecx
jmp     short loc_10052682
mov     [ebp+var_3c], 0ah
mov     esi, [ebp+var_8]
xor     ebx, ebx
test    esi, esi
jz      short loc_100526b3
mov     edx, offset afull
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_100526a0
lea     ebx, [eax+1]
jmp     short loc_100526b3
mov     edx, offset arestart
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_100526b3
lea     ebx, [eax+2]
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     edi, [ebp+var_14]
mov     eax, 3
call    sub_10026ff0
push    0
push    offset abusy
mov     edx, esi
push    0
push    0
mov     ecx, edi
mov     dword ptr [edx+4ch], 3
call    sub_10027070
push    0
push    offset alog
push    0
push    1
mov     ecx, edi
call    sub_10027070
push    0
push    offset acheckpointed
push    0
push    2
mov     ecx, edi
call    sub_10027070
mov     eax, [ebp+var_3c]
push    1
push    ebx
push    eax
push    7dh
mov     eax, edi
call    sub_10025890
add     esp, 40h
push    3
push    1
push    10h
mov     eax, edi
call    sub_10025990
add     esp, 0ch
jmp     loc_10052fd3
mov     edx, offset awalautocheckpo
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     short loc_10052791
mov     ecx, [ebp+var_8]
test    ecx, ecx
jz      short loc_10052761
call    sub_1000c520
mov     esi, [ebp+var_c]
push    eax
push    esi
call    sub_10070660
add     esp, 8
jmp     short loc_10052764
mov     esi, [ebp+var_c]
cmp     dword ptr [esi+0b8h], offset sub_10070630
jnz     short loc_10052778
mov     eax, [esi+0bch]
jmp     short loc_1005277a
xor     eax, eax
cdq
push    edx
push    eax
push    offset awalautocheckpo
mov     eax, edi
call    sub_10050d40
add     esp, 0ch
jmp     loc_10052fd3
mov     edx, offset ashrinkmemory
mov     ecx, ebx
call    sub_1000bca0
test    eax, eax
jnz     loc_10052fd3
mov     eax, [ebp+var_c]
call    sub_1006f330
jmp     loc_10052fd3
mov     edi, [ebp+var_18]
mov     ecx, edi
mov     eax, esi
call    sub_100263e0
movsx   eax, byte ptr [ebx]
add     eax, 0ffffffbah
cmp     eax, 2dh
ja      short def_100527d0
movzx   ecx, ds:byte_10053030[eax]
jmp     ds:jpt_100527d0[ecx*4]
mov     [ebp+arg_0], 0
jmp     short loc_100527f0
mov     [ebp+arg_0], 1
jmp     short loc_100527f0
mov     [ebp+arg_0], 6
cmp     [ebp+var_8], 0
jz      short loc_1005286e
cmp     [ebp+arg_0], 0
jz      short loc_1005286e
push    offset dword_10076d60
push    3
push    esi
call    sub_10025d70
mov     edi, eax
add     esp, 0ch
cmp     [esi+1ch], edi
jbe     short loc_10052820
mov     eax, [esi+4]
mov     ecx, [ebp+var_18]
lea     edx, [edi+edi*4]
mov     [eax+edx*4+4], ecx
mov     ecx, [ebp+var_8]
call    sub_1000c520
lea     ecx, [edi+1]
cmp     [esi+1ch], ecx
jbe     short loc_1005283a
lea     edx, [ecx+ecx*4]
mov     ecx, [esi+4]
mov     [ecx+edx*4+4], eax
lea     eax, [edi+2]
cmp     [esi+1ch], eax
jbe     loc_10052fd3
mov     ecx, [esi+4]
mov     edi, [ebp+var_18]
lea     edx, [eax+eax*4]
mov     [ecx+edx*4+4], edi
cmp     [esi+1ch], eax
jbe     loc_10052fd3
mov     ecx, [ebp+arg_0]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     [eax+edx*4+8], ecx
jmp     loc_10052fd3
push    offset dword_10076d6c
push    3
push    esi
call    sub_10025d70
add     esp, 0ch
cmp     [esi+1ch], eax
jbe     short loc_1005288d
mov     ecx, [esi+4]
lea     edx, [eax+eax*4]
mov     [ecx+edx*4+4], edi
inc     eax
cmp     [esi+1ch], eax
jbe     loc_10052fb6
mov     ecx, [esi+4]
lea     edx, [eax+eax*4]
mov     [ecx+edx*4+4], edi
cmp     [esi+1ch], eax
jbe     loc_10052fb6
mov     ecx, [ebp+arg_0]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     [eax+edx*4+0ch], ecx
jmp     loc_10052fb6
movzx   edx, byte ptr [ebx]
mov     ecx, [ebp+arg_8]
xor     eax, eax
cmp     ds:byte_10076030[edx], 71h
setz    al
cmp     dword ptr [ecx], 0
mov     [ebp+var_44], eax
jnz     short loc_100528dd
mov     [ebp+var_24], 0ffffffffh
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     esi, [ebp+var_14]
mov     dword ptr [edi+4ch], 6
mov     eax, 1
mov     edi, esi
call    sub_10026ff0
push    0
push    offset aintegritycheck
push    0
push    0
mov     ecx, esi
call    sub_10027070
mov     ecx, [ebp+var_8]
add     esp, 10h
mov     eax, 64h
mov     [ebp+var_2c], eax
test    ecx, ecx
jz      short loc_10052942
lea     edx, [ebp+var_2c]
push    edx
push    ecx
call    sub_1000c450
mov     eax, [ebp+var_2c]
add     esp, 8
test    eax, eax
jg      short loc_10052942
mov     eax, 64h
mov     [ebp+var_2c], eax
push    1
push    eax
push    7
mov     eax, esi
call    sub_10025990
mov     ecx, [ebp+var_c]
xor     eax, eax
add     esp, 0ch
mov     [ebp+var_14], eax
cmp     [ecx+14h], eax
jle     loc_10052ebc
mov     [ebp+var_28], eax
mov     ecx, [ebp+var_24]
xor     ebx, ebx
test    ecx, ecx
js      short loc_10052976
cmp     eax, ecx
jnz     loc_10052ea8
push    eax
mov     eax, [ebp+arg_0]
call    sub_10043c40
add     esp, 4
push    1
push    78h
mov     eax, esi
call    sub_10025940
push    0
mov     edi, eax
push    0
push    6
mov     eax, esi
call    sub_10025990
add     esp, 14h
mov     eax, edi
mov     edx, esi
call    sub_10025e30
mov     edx, [ebp+var_c]
mov     eax, [edx+10h]
mov     ecx, [ebp+var_28]
mov     eax, [ecx+eax+0ch]
add     eax, 8
mov     [ebp+var_40], eax
mov     eax, [eax+8]
mov     [ebp+var_20], eax
test    eax, eax
jz      short loc_10052a0f
mov     edx, [ebp+var_20]
mov     edi, [edx+8]
mov     ecx, [edi+14h]
lea     eax, [ebx+2]
push    eax
push    ecx
push    7
mov     eax, esi
call    sub_10025990
mov     edi, [edi+10h]
add     esp, 0ch
inc     ebx
test    edi, edi
jz      short loc_10052a03
mov     eax, [edi+28h]
lea     edx, [ebx+2]
push    edx
push    eax
push    7
mov     eax, esi
call    sub_10025990
mov     edi, [edi+14h]
add     esp, 0ch
inc     ebx
test    edi, edi
jnz     short loc_100529e7
mov     ecx, [ebp+var_20]
mov     eax, [ecx]
mov     [ebp+var_20], eax
test    eax, eax
jnz     short loc_100529c5
mov     ecx, [ebp+arg_0]
lea     eax, [ebx+4]
cmp     [ecx+4ch], eax
jge     short loc_10052a1d
mov     [ecx+4ch], eax
push    1
push    ebx
push    2
push    6fh
mov     eax, esi
call    sub_10025890
mov     eax, [esi+4]
add     esp, 10h
test    eax, eax
jz      short loc_10052a42
mov     ecx, [esi+1ch]
lea     edx, [ecx+ecx*4]
mov     cl, byte ptr [ebp+var_14]
mov     [eax+edx*4-11h], cl
push    2
push    49h
mov     eax, esi
call    sub_10025940
add     esp, 8
push    0ffffffffh
push    ecx
mov     ecx, [ebp+var_28]
mov     edi, eax
mov     eax, [ebp+var_c]
mov     edx, [eax+10h]
mov     edx, [ecx+edx]
push    edx
push    offset aindatabases
push    eax
call    sub_1000ae80
add     esp, 10h
push    eax
push    0
push    3
push    0
push    5eh
mov     eax, esi
call    sub_100259f0
push    1
push    4
push    2
push    0dh
mov     eax, esi
call    sub_10025890
push    2
push    3
push    4
push    5bh
mov     eax, esi
call    sub_10025890
push    1
push    2
push    10h
mov     eax, esi
call    sub_10025990
add     esp, 44h
mov     eax, edi
mov     edx, esi
call    sub_10025e30
mov     eax, [ebp+var_40]
mov     eax, [eax+8]
mov     [ebp+var_20], eax
test    eax, eax
jz      loc_10052ea5
jmp     short loc_10052ad3
mov     eax, [ebp+var_20]
cmp     [ebp+var_44], 0
jnz     loc_10052ea5
mov     eax, [eax+8]
cmp     dword ptr [eax+10h], 0
mov     [ebp+var_40], eax
jz      loc_10052e95
push    1
push    78h
mov     eax, esi
call    sub_10025940
push    0
mov     edi, eax
push    0
push    6
mov     eax, esi
call    sub_10025990
add     esp, 14h
mov     eax, edi
mov     edx, esi
call    sub_10025e30
mov     ecx, [ebp+arg_0]
mov     edi, [ebp+var_40]
push    27h
push    1
push    ecx
mov     eax, edi
call    sub_1004f710
add     esp, 0ch
push    2
push    0
push    7
mov     eax, esi
call    sub_10025990
add     esp, 0ch
push    0
push    1
push    48h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
push    1
mov     [ebp+var_50], eax
push    2
push    14h
mov     eax, esi
call    sub_10025990
mov     ebx, [edi+10h]
add     esp, 0ch
mov     [ebp+var_18], ebx
test    ebx, ebx
jz      loc_10052cf8
mov     [ebp+var_3c], 2
mov     edx, [ebp+arg_0]
push    0
push    3
push    1
push    ebx
push    edx
call    sub_100457b0
mov     ecx, [ebx+24h]
mov     edx, [ebp+var_3c]
add     esp, 14h
inc     ecx
push    ecx
push    eax
push    0
push    edx
push    34h
mov     eax, esi
call    sub_10025b50
add     esp, 14h
push    offset dword_10076c0c
push    0bh
push    esi
mov     [ebp+var_48], eax
call    sub_10025d70
mov     ecx, [esi+4]
mov     edi, [esi]
mov     [ebp+var_38], eax
add     esp, 0ch
inc     eax
test    ecx, ecx
jz      short loc_10052bee
cmp     byte ptr [edi+32h], 0
jnz     short loc_10052bee
test    eax, eax
jns     short loc_10052bc9
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     ecx, [ecx+eax*4]
movsx   eax, byte ptr [ecx+1]
mov     [ebp+var_34], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     eax, [ebp+var_34]
mov     dword ptr [eax+10h], offset arowid_1
mov     byte ptr [eax+1], 0feh
jmp     short loc_10052bfd
mov     ecx, offset arowid_1
mov     eax, 0fffffffeh
call    sub_10025e50
mov     eax, [ebp+var_38]
mov     ecx, [esi+4]
mov     edi, [esi]
add     eax, 3
test    ecx, ecx
jz      short loc_10052c40
cmp     byte ptr [edi+32h], 0
jnz     short loc_10052c40
test    eax, eax
jns     short loc_10052c1a
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ecx, [ecx+edx*4]
mov     [ebp+var_34], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     eax, [ebp+var_34]
mov     dword ptr [eax+10h], offset amissingfromind
mov     byte ptr [eax+1], 0feh
jmp     short loc_10052c4f
mov     ecx, offset amissingfromind
mov     eax, 0fffffffeh
call    sub_10025e50
mov     eax, [ebx]
mov     ecx, [esi+4]
mov     edi, [esi]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_38]
add     eax, 4
test    ecx, ecx
jz      short loc_10052cc6
cmp     byte ptr [edi+32h], 0
jnz     short loc_10052cc6
test    eax, eax
jns     short loc_10052c71
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ecx, [ecx+edx*4]
mov     [ebp+var_30], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
cmp     [ebp+var_34], 0
mov     eax, [ebp+var_30]
mov     dword ptr [eax+10h], 0
jnz     short loc_10052ca4
mov     dword ptr [eax+10h], 0
mov     byte ptr [eax+1], 0
jmp     short loc_10052cd0
mov     ecx, [ebp+var_34]
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+var_30]
mov     ebx, [ebp+var_18]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
jmp     short loc_10052cd0
mov     ecx, [ebp+var_34]
xor     eax, eax
call    sub_10025e50
mov     eax, [ebp+var_38]
add     eax, 9
mov     edx, esi
call    sub_10025e30
mov     eax, [ebp+var_48]
mov     edx, esi
call    sub_10025e30
mov     ebx, [ebx+14h]
inc     [ebp+var_3c]
mov     [ebp+var_18], ebx
test    ebx, ebx
jnz     loc_10052b70
mov     edi, [ebp+var_50]
lea     ecx, [edi+1]
push    ecx
push    1
push    5fh
mov     eax, esi
call    sub_10025990
add     esp, 0ch
mov     eax, edi
mov     edx, esi
call    sub_10025e30
mov     edx, [ebp+var_40]
mov     eax, [edx+10h]
mov     [ebp+var_18], eax
test    eax, eax
jz      loc_10052e95
mov     edi, 2
mov     [ebp+var_38], edi
jmp     short loc_10052d34
mov     edi, [ebp+var_38]
push    1
push    78h
mov     eax, esi
call    sub_10025940
push    0
mov     ebx, eax
push    0
push    6
mov     eax, esi
call    sub_10025990
add     esp, 14h
mov     eax, ebx
mov     edx, esi
call    sub_10025e30
push    offset dword_10076cf0
push    0ah
push    esi
call    sub_10025d70
mov     ebx, eax
lea     eax, [ebx+1]
add     esp, 0ch
cmp     [esi+1ch], eax
jbe     short loc_10052d90
mov     edx, [esi+4]
lea     ecx, [eax+eax*4]
mov     [edx+ecx*4+4], edi
cmp     [esi+1ch], eax
jbe     short loc_10052d90
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     ecx, [ebx+4]
mov     [eax+edx*4+8], ecx
lea     eax, [ebx+3]
cmp     [esi+1ch], eax
jbe     short loc_10052db4
mov     edx, [esi+4]
lea     ecx, [eax+eax*4]
mov     [edx+ecx*4+4], edi
cmp     [esi+1ch], eax
jbe     short loc_10052db4
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     ecx, [ebx+2]
mov     [eax+edx*4+8], ecx
lea     eax, [ebx+4]
mov     edx, esi
call    sub_10025e30
mov     ecx, [esi+4]
mov     edi, [esi]
lea     eax, [ebx+6]
test    ecx, ecx
jz      short loc_10052dfe
cmp     byte ptr [edi+32h], 0
jnz     short loc_10052dfe
test    eax, eax
jns     short loc_10052dd8
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ecx, [ecx+edx*4]
mov     [ebp+var_50], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     eax, [ebp+var_50]
mov     dword ptr [eax+10h], offset awrongofentries
mov     byte ptr [eax+1], 0feh
jmp     short loc_10052e0d
mov     ecx, offset awrongofentries
mov     eax, 0fffffffeh
call    sub_10025e50
mov     eax, [ebp+var_18]
mov     ecx, [eax]
mov     edi, [esi]
lea     eax, [ebx+7]
mov     ebx, [esi+4]
mov     [ebp+var_3c], ecx
test    ebx, ebx
jz      short loc_10052e77
cmp     byte ptr [edi+32h], 0
jnz     short loc_10052e77
test    eax, eax
jns     short loc_10052e2f
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ebx+edx*4+1]
mov     ecx, [ebx+edx*4+10h]
lea     ebx, [ebx+edx*4]
mov     [ebp+var_50], ebx
call    sub_10025e50
xor     eax, eax
mov     [ebx+10h], eax
cmp     [ebp+var_3c], eax
jnz     short loc_10052e58
mov     [ebx+10h], eax
mov     [ebx+1], al
jmp     short loc_10052e81
mov     ecx, [ebp+var_3c]
call    sub_1000ba20
mov     edx, [esi]
mov     edi, eax
mov     ebx, ecx
call    sub_10009bc0
mov     ecx, [ebp+var_50]
mov     [ecx+10h], eax
mov     byte ptr [ecx+1], 0ffh
jmp     short loc_10052e81
mov     ecx, [ebp+var_3c]
xor     eax, eax
call    sub_10025e50
mov     eax, [ebp+var_18]
mov     eax, [eax+14h]
inc     [ebp+var_38]
mov     [ebp+var_18], eax
test    eax, eax
jnz     loc_10052d31
mov     ecx, [ebp+var_20]
mov     eax, [ecx]
mov     [ebp+var_20], eax
test    eax, eax
jnz     loc_10052ad0
mov     eax, [ebp+var_14]
mov     edx, [ebp+var_c]
add     [ebp+var_28], 10h
inc     eax
mov     [ebp+var_14], eax
cmp     eax, [edx+14h]
jl      loc_10052965
push    offset dword_10076ce0
push    4
push    esi
call    sub_10025d70
mov     edi, eax
add     esp, 0ch
cmp     [esi+1ch], edi
jbe     short loc_10052ee2
mov     eax, [ebp+var_2c]
mov     edx, [esi+4]
neg     eax
lea     ecx, [edi+edi*4]
mov     [edx+ecx*4+8], eax
lea     eax, [edi+1]
mov     edx, esi
call    sub_10025e30
mov     ecx, [esi+4]
lea     eax, [edi+2]
mov     edi, [esi]
test    ecx, ecx
jz      short loc_10052f28
cmp     byte ptr [edi+32h], 0
jnz     short loc_10052f28
test    eax, eax
jns     short loc_10052f06
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*4]
movsx   eax, byte ptr [esi+1]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     dword ptr [esi+10h], offset aok
mov     byte ptr [esi+1], 0feh
jmp     loc_10052fd3
mov     ecx, offset aok
mov     eax, 0fffffffeh
call    sub_10025e50
jmp     loc_10052fd3
mov     esi, edi
call    sub_100538c0
test    eax, eax
jnz     loc_10053004
mov     esi, [ebp+var_18]
push    esi
mov     eax, edi
call    sub_10043c40
inc     dword ptr [edi+4ch]
mov     ebx, [ebp+src]
movzx   ecx, byte ptr [ebx]
mov     edi, [edi+4ch]
add     esp, 4
cmp     ds:byte_10076030[ecx], 70h
jnz     short loc_10052f84
push    edi
push    esi
mov     esi, [ebp+var_14]
push    92h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
jmp     short loc_10052fa7
mov     ecx, [ebp+var_8]
call    sub_1000c520
call    sub_1000cb90
push    eax
mov     eax, [ebp+var_14]
push    edi
push    esi
push    93h
call    sub_10025890
mov     esi, [ebp+var_14]
add     esp, 10h
push    1
push    edi
push    10h
mov     eax, esi
call    sub_10025990
add     esp, 0ch
mov     eax, 1
mov     edi, esi
call    sub_10026ff0
push    0ffffffffh
push    ebx
push    0
push    0
mov     ecx, esi
call    sub_10027070
add     esp, 10h
mov     edx, [ebp+var_c]
cmp     byte ptr [edx+30h], 0
jz      short loc_10053004
mov     eax, edx
mov     eax, [eax+18h]
mov     ecx, eax
shr     ecx, 16h
shr     eax, 15h
and     ecx, 1
and     eax, 1
push    ecx
push    eax
mov     eax, [ebp+var_1c]
movzx   edx, byte ptr [eax+9]
mov     eax, [eax+4]
push    edx
call    sub_1001b630
add     esp, 0ch
mov     esi, [ebp+var_c]
mov     eax, [ebp+src]
mov     ecx, esi
call    sub_10009810
mov     eax, [ebp+var_8]
mov     ecx, esi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [edi]
cmp     byte ptr [esi+32h], 0
jnz     short loc_100530b9
test    dword ptr [esi+18h], 800000h
jnz     short loc_100530b3
test    eax, eax
jnz     short loc_10053080
mov     eax, offset asc_10075f74
mov     ebx, [edi+4]
push    eax
push    offset amalformeddatab
call    sub_10009bf0
mov     ecx, [ebp+arg_0]
add     esp, 8
test    ecx, ecx
jz      short loc_100530b3
mov     eax, [edi+4]
mov     eax, [eax]
push    ecx
push    eax
push    offset ass_5
push    eax
push    esi
call    sub_1000af00
mov     ecx, [edi+4]
add     esp, 14h
mov     [ecx], eax
cmp     byte ptr [esi+32h], 0
jz      short loc_100530c6
mov     eax, 7
mov     [edi+0ch], eax
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
push    offset ac0d89d4a975292
push    16a3ch
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     esi
mov     [edi+0ch], eax
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     edx, [esi+8]
mov     ebx, [esi]
mov     ecx, [ebx+10h]
mov     eax, edx
add     eax, eax
mov     ecx, [ecx+eax*8+0ch]
push    edi
mov     edi, 0fffbh
and     [ecx+4eh], di
cmp     byte ptr [ebx+32h], 0
jz      short loc_10053198
mov     edi, [esi]
cmp     byte ptr [edi+32h], 0
mov     edx, [ebp+arg_8]
mov     eax, [edx]
jnz     short loc_10053157
test    dword ptr [edi+18h], 800000h
jnz     short loc_10053151
test    eax, eax
jnz     short loc_10053138
mov     eax, offset asc_10075f74
push    eax
mov     eax, [ebp+arg_0]
mov     ebx, [eax+4]
push    offset amalformeddatab
mov     esi, edi
call    sub_10009bf0
mov     esi, [ebp+arg_0]
add     esp, 8
cmp     byte ptr [edi+32h], 0
jz      short loc_1005316b
mov     eax, 7
mov     [esi+0ch], eax
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    16a3ch
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
mov     eax, 0bh
mov     [esi+0ch], eax
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+arg_8]
test    edi, edi
jz      loc_10053307
cmp     dword ptr [edi+4], 0
jnz     short loc_100531b0
push    0
jmp     loc_100532fb
mov     ecx, [edi+8]
test    ecx, ecx
jz      loc_10053258
cmp     byte ptr [ecx], 0
jz      loc_10053258
mov     [ebx+78h], dl
mov     ecx, [edi+4]
call    sub_1000c520
push    0
push    0
mov     [ebx+74h], eax
push    0
mov     byte ptr [ebx+7ah], 0
mov     ecx, [edi+8]
push    0ffffffffh
push    ecx
lea     esi, [ebp+var_4]
mov     eax, ebx
call    sub_10054100
mov     eax, [ebx+28h]
add     esp, 14h
mov     byte ptr [ebx+78h], 0
test    eax, eax
jz      short loc_10053243
cmp     byte ptr [ebx+7ah], 0
jnz     short loc_10053243
mov     esi, [ebp+arg_0]
mov     [esi+0ch], eax
cmp     eax, 7
jnz     short loc_10053224
mov     edx, [ebp+var_4]
push    edx
mov     byte ptr [ebx+32h], 1
call    sub_10029010
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     eax, 9
jz      short loc_10053243
cmp     al, 6
jz      short loc_10053243
push    ebx
call    sub_10070900
add     esp, 4
push    eax
mov     eax, [edi]
mov     edi, esi
call    sub_10053060
add     esp, 4
mov     edx, [ebp+var_4]
push    edx
call    sub_10029010
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edi]
test    ecx, ecx
jnz     short loc_100532cc
mov     edi, [esi]
cmp     [edi+32h], cl
jnz     short loc_10053291
test    dword ptr [edi+18h], 800000h
jnz     short loc_1005328b
mov     eax, [ebp+arg_0]
mov     ebx, [eax+4]
push    offset asc_10075f74
push    offset amalformeddatab
mov     esi, edi
call    sub_10009bf0
mov     esi, [ebp+arg_0]
add     esp, 8
cmp     byte ptr [edi+32h], 0
jz      short loc_100532a2
mov     eax, 7
mov     [esi+0ch], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    16a3ch
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
mov     eax, 0bh
add     esp, 10h
mov     [esi+0ch], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebx+10h]
mov     eax, [edx+eax*8]
push    eax
push    ecx
mov     edx, ebx
call    sub_1003f6f0
add     esp, 8
test    eax, eax
jz      short loc_10053307
add     eax, 28h
push    eax
mov     eax, [edi+4]
push    eax
call    sub_1000c450
add     esp, 8
test    eax, eax
jnz     short loc_10053307
push    offset ainvalidrootpag
mov     eax, [edi]
mov     edi, esi
call    sub_10053060
add     esp, 4
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 50h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, edx
push    edi
xor     ebx, ebx
mov     edi, ecx
mov     [ebp+var_20], edi
mov     [ebp+var_2c], esi
mov     [ebp+var_34], eax
mov     [ebp+var_3c], ebx
cmp     esi, 1
jnz     short loc_1005334b
mov     ecx, offset acreatetemptabl
mov     [ebp+var_28], offset asqlitetempmast
jmp     short loc_10053357
mov     ecx, offset acreatetablesql
mov     [ebp+var_28], offset asqlitemaster
mov     edx, [ebp+var_28]
mov     [ebp+var_48], eax
push    ebx
lea     eax, [ebp+var_18]
push    eax
mov     [ebp+var_10], ecx
lea     ecx, [ebp+var_4c]
push    3
push    ecx
mov     [ebp+var_18], edx
mov     [ebp+var_14], offset a1
mov     [ebp+var_c], ebx
mov     [ebp+var_4c], edi
mov     [ebp+var_44], esi
mov     [ebp+var_40], ebx
call    sub_100530f0
mov     eax, [ebp+var_40]
add     esp, 10h
cmp     eax, ebx
jz      short loc_10053397
mov     edi, eax
jmp     loc_100537a9
mov     edx, [edi+10h]
mov     ecx, [ebp+var_28]
mov     ebx, esi
shl     ebx, 4
mov     eax, [edx+ebx]
push    eax
push    ecx
push    edi
mov     [ebp+var_30], ebx
call    sub_1003f510
add     esp, 0ch
test    eax, eax
jz      short loc_100533bb
or      byte ptr [eax+22h], 1
mov     eax, [edi+10h]
mov     edi, [eax+ebx+4]
lea     ecx, [eax+ebx+4]
mov     [ebp+var_50], eax
mov     [ebp+var_24], ecx
test    edi, edi
jnz     short loc_100533ef
cmp     esi, 1
jnz     short loc_100533dc
mov     eax, [eax+1ch]
or      [eax+4eh], si
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
call    sub_10019320
mov     edx, [ebp+var_24]
mov     eax, [edx]
cmp     byte ptr [eax+8], 0
mov     [ebp+var_38], eax
jnz     loc_100535b9
mov     edi, eax
mov     esi, [edi+4]
xor     ebx, ebx
call    sub_10019320
mov     al, [edi+8]
cmp     al, 2
jz      loc_1005353e
cmp     al, 1
jz      loc_1005353e
movzx   edx, word ptr [esi+16h]
test    dl, 40h
jz      short loc_1005343f
mov     eax, [esi+4ch]
cmp     [eax], ebx
jz      short loc_1005343f
mov     ebx, 106h
jmp     loc_1005353e
mov     eax, [edi+4]
cmp     [edi+9], bl
jz      short loc_1005347d
cmp     [eax+4ch], edi
jz      short loc_1005345c
test    byte ptr [eax+16h], 20h
jz      short loc_1005345c
mov     ebx, 106h
jmp     loc_1005353e
mov     eax, [eax+48h]
test    eax, eax
jz      short loc_1005347d
mov     ecx, 1
cmp     [eax], edi
jz      short loc_10053476
cmp     [eax+4], ecx
jnz     short loc_10053476
cmp     [eax+8], cl
jnz     short loc_10053435
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_10053468
mov     eax, edx
xor     ebx, ebx
and     eax, 0fff7h
mov     [esi+16h], ax
cmp     [esi+2ch], ebx
jnz     short loc_10053496
or      eax, 8
mov     [esi+16h], ax
cmp     dword ptr [esi+0ch], 0
jnz     short loc_100534ab
mov     ebx, esi
call    sub_1001b970
mov     ebx, eax
test    ebx, ebx
jz      short loc_10053496
jmp     short loc_100534af
test    ebx, ebx
jz      short loc_100534cf
cmp     byte ptr [esi+13h], 0
jnz     short loc_100534cf
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_100534cf
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     dword ptr [esi+0ch], 0
cmp     bl, 5
jnz     short loc_1005350c
cmp     byte ptr [esi+13h], 0
jnz     short loc_1005350c
mov     edi, [esi+4]
add     edi, 1a4h
jz      short loc_1005350c
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_1005350c
mov     eax, [edi+8]
test    eax, eax
js      short loc_1005350c
mov     edx, [edi+4]
push    eax
push    edx
call    ecx
add     esp, 8
test    eax, eax
jz      short loc_10053505
inc     dword ptr [edi+8]
jmp     short loc_10053496
mov     dword ptr [edi+8], 0ffffffffh
test    ebx, ebx
jnz     short loc_1005353e
mov     eax, [ebp+var_38]
cmp     [eax+8], bl
jnz     short loc_10053530
inc     dword ptr [esi+28h]
cmp     [eax+9], bl
jz      short loc_10053530
mov     byte ptr [eax+24h], 1
mov     ecx, [esi+48h]
lea     edx, [eax+1ch]
mov     [eax+28h], ecx
mov     [esi+48h], edx
mov     byte ptr [eax+8], 1
cmp     byte ptr [esi+13h], 1
jnb     short loc_1005353e
mov     byte ptr [esi+13h], 1
mov     esi, [ebp+var_38]
cmp     byte ptr [esi+9], 0
jz      short loc_10053564
dec     dword ptr [esi+0ch]
jnz     short loc_10053564
mov     eax, [esi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_10053560
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
mov     edi, ebx
test    ebx, ebx
jz      short loc_100535af
mov     ecx, offset aunknownerror
cmp     ebx, 204h
jz      short loc_10053591
and     ebx, 0ffh
cmp     ebx, 1ah
ja      short loc_10053596
mov     eax, ds:off_100794a0[ebx*4]
test    eax, eax
jz      short loc_10053596
mov     ecx, eax
jmp     short loc_10053596
mov     ecx, offset aabortduetoroll
mov     esi, [ebp+var_20]
mov     ebx, [ebp+var_34]
push    ecx
push    offset as
call    sub_10009bf0
add     esp, 8
jmp     loc_10053781
mov     ebx, [ebp+var_30]
mov     [ebp+var_3c], 1
xor     eax, eax
lea     edi, [ebp+var_1c]
mov     edi, edi
mov     ecx, [ebp+var_24]
lea     esi, [eax+1]
mov     eax, [ecx]
push    edi
push    esi
call    sub_100218e0
mov     eax, esi
add     esp, 8
add     edi, 4
cmp     eax, 5
jl      short loc_100535c0
mov     edx, [ebp+var_50]
mov     eax, [edx+ebx+0ch]
mov     ecx, [ebp+var_1c]
lea     edi, [edx+ebx+0ch]
mov     [eax], ecx
mov     eax, [ebp+var_c]
test    eax, eax
jz      short loc_1005363a
cmp     [ebp+var_2c], 0
jnz     short loc_1005360d
and     al, 3
jnz     short loc_100535ff
mov     al, 1
mov     ecx, [ebp+var_20]
mov     edx, [ecx+10h]
mov     edx, [edx+0ch]
mov     [edx+4dh], al
jmp     short loc_10053649
mov     ecx, [ebp+var_20]
mov     edx, [ecx+10h]
mov     edx, [edx+0ch]
movzx   edx, byte ptr [edx+4dh]
cmp     eax, edx
jz      short loc_10053649
push    offset aattacheddataba
mov     esi, ecx
mov     ebx, [ebp+var_34]
call    sub_10009bf0
add     esp, 4
mov     edi, 1
jmp     loc_10053771
mov     ecx, [ebp+var_20]
mov     eax, [ecx+10h]
mov     ebx, [eax+ebx+0ch]
or      word ptr [ebx+4eh], 4
mov     edx, [ecx+10h]
mov     eax, [edx+0ch]
mov     edx, [edi]
mov     al, [eax+4dh]
mov     [edx+4dh], al
mov     edx, [edi]
cmp     dword ptr [edx+50h], 0
jnz     short loc_10053696
mov     eax, [ebp+var_14]
test    eax, eax
jns     short loc_10053678
cmp     eax, 80000000h
jnz     short loc_10053674
mov     eax, 7fffffffh
jmp     short loc_1005367f
neg     eax
test    eax, eax
jnz     short loc_1005367f
mov     eax, 7d0h
mov     ecx, edx
mov     [ecx+50h], eax
mov     edx, [edi]
mov     eax, [ebp+var_24]
mov     esi, [edx+50h]
mov     eax, [eax]
call    sub_1001b590
mov     ecx, [ebp+var_20]
mov     edx, [edi]
mov     eax, [ebp+var_18]
mov     [edx+4ch], al
mov     edx, [edi]
cmp     byte ptr [edx+4ch], 0
jnz     short loc_100536aa
mov     byte ptr [edx+4ch], 1
mov     edx, [edi]
cmp     byte ptr [edx+4ch], 4
jbe     short loc_100536bf
mov     esi, [ebp+var_20]
push    offset aunsupportedfil
jmp     loc_10053625
cmp     [ebp+var_2c], 0
jnz     short loc_100536d1
cmp     eax, 4
jl      short loc_100536d1
and     dword ptr [ecx+18h], 0ffefffffh
mov     edi, [ebp+var_20]
mov     eax, [ebp+var_28]
mov     ecx, [edi+10h]
mov     edx, [ebp+var_30]
push    eax
mov     eax, [ecx+edx]
push    eax
push    offset aselectnameroot_0
push    edi
call    sub_1000ae80
mov     ebx, [edi+104h]
push    0
lea     ecx, [ebp+var_4c]
push    ecx
mov     esi, eax
push    offset sub_100530f0
push    esi
push    edi
mov     dword ptr [edi+104h], 0
call    sub_1004ff10
mov     edx, [ebp+var_20]
mov     edi, eax
add     esp, 24h
mov     [edx+104h], ebx
test    edi, edi
jnz     short loc_10053726
mov     edi, [ebp+var_40]
mov     eax, esi
mov     esi, edx
mov     ecx, esi
call    sub_10009810
test    edi, edi
jnz     short loc_1005373f
mov     eax, [ebp+var_2c]
mov     ebx, esi
call    sub_1003dcd0
cmp     byte ptr [esi+32h], 0
jz      short loc_10053753
mov     eax, esi
mov     edi, 7
call    sub_1003fad0
jmp     short loc_10053757
test    edi, edi
jz      short loc_10053760
test    dword ptr [esi+18h], 800000h
jz      short loc_10053771
mov     eax, [esi+10h]
mov     ecx, [ebp+var_30]
mov     eax, [eax+ecx+0ch]
or      word ptr [eax+4eh], 1
xor     edi, edi
cmp     [ebp+var_3c], 0
jz      short loc_10053781
mov     edx, [ebp+var_24]
mov     eax, [edx]
call    sub_1001cd80
mov     eax, [ebp+var_24]
mov     esi, [eax]
cmp     byte ptr [esi+9], 0
jz      short loc_100537a9
dec     dword ptr [esi+0ch]
jnz     short loc_100537a9
mov     ecx, [esi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_100537a5
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [esi+0ah], 0
cmp     edi, 7
jz      short loc_100537b6
cmp     edi, 0c0ah
jnz     short loc_100537bd
mov     edx, [ebp+var_20]
mov     byte ptr [edx+32h], 1
mov     ecx, [ebp+var_8]
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+18h]
shr     eax, 9
not     eax
push    edi
and     eax, 1
xor     edi, edi
xor     ebx, ebx
mov     [esp+18h+var_4], eax
mov     byte ptr [esi+79h], 1
mov     [esp+18h+var_8], ebx
lea     ebx, [ebx+0]
cmp     ebx, [esi+14h]
jge     short loc_10053860
mov     eax, [esi+10h]
mov     ecx, [esp+18h+var_8]
mov     edx, [eax+ecx+0ch]
test    byte ptr [edx+4eh], 1
jnz     short loc_10053854
cmp     ebx, 1
jz      short loc_10053854
mov     eax, [ebp+arg_4]
push    eax
mov     edx, ebx
mov     ecx, esi
call    sub_10053310
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_10053854
mov     ecx, [esi+10h]
mov     edx, [esp+18h+var_8]
mov     eax, [ecx+edx+0ch]
push    eax
call    sub_100449b0
mov     ecx, [esi+10h]
mov     edx, [ecx+1ch]
add     esp, 4
push    edx
call    sub_100449b0
add     esp, 4
add     [esp+18h+var_8], 10h
inc     ebx
test    edi, edi
jz      short loc_10053800
jmp     short loc_1005389c
test    edi, edi
jnz     short loc_1005389c
cmp     dword ptr [esi+14h], 1
jle     short loc_1005389c
mov     eax, [esi+10h]
mov     ecx, [eax+1ch]
test    byte ptr [ecx+4eh], 1
jnz     short loc_1005389c
mov     edx, [ebp+arg_4]
push    edx
lea     edx, [edi+1]
mov     ecx, esi
call    sub_10053310
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_1005389c
mov     eax, [esi+10h]
mov     ecx, [eax+1ch]
push    ecx
call    sub_100449b0
add     esp, 4
mov     byte ptr [esi+79h], 0
mov     eax, edi
test    edi, edi
jnz     short loc_100538b3
cmp     [esp+18h+var_4], edi
jz      short loc_100538b3
and     dword ptr [esi+18h], 0fffffdffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esi]
xor     eax, eax
cmp     [ecx+79h], al
jnz     short locret_100538e0
lea     eax, [esi+4]
push    eax
push    ecx
call    sub_100537d0
add     esp, 8
test    eax, eax
jz      short locret_100538e0
inc     dword ptr [esi+44h]
mov     [esi+0ch], eax
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_0]
mov     eax, [eax]
push    ebx
xor     ebx, ebx
push    esi
push    edi
mov     [ebp+var_8], eax
mov     [ebp+var_10], ebx
cmp     [eax+14h], ebx
jle     loc_10053b6d
mov     [ebp+var_c], ebx
jmp     short loc_10053916
xor     ebx, ebx
mov     ecx, [eax+10h]
mov     edx, [ebp+var_c]
mov     edi, [edx+ecx+4]
cmp     edi, ebx
jz      loc_10053b59
cmp     byte ptr [edi+8], 0
jnz     loc_10053abb
mov     esi, [edi+4]
mov     [ebp+var_4], ebx
call    sub_10019320
mov     al, [edi+8]
cmp     al, 2
jz      loc_10053a77
cmp     al, 1
jz      loc_10053a77
movzx   ecx, word ptr [esi+16h]
test    cl, 40h
jz      short loc_1005396d
mov     eax, [esi+4ch]
cmp     dword ptr [eax], 0
jz      short loc_1005396d
mov     [ebp+var_4], 106h
jmp     loc_10053a77
cmp     byte ptr [edi+9], 0
mov     eax, [edi+4]
jz      short loc_100539ab
cmp     [eax+4ch], edi
jz      short loc_1005398d
test    byte ptr [eax+16h], 20h
jz      short loc_1005398d
mov     [ebp+var_4], 106h
jmp     loc_10053a77
mov     eax, [eax+48h]
test    eax, eax
jz      short loc_100539ab
cmp     [eax], edi
jz      short loc_100539a4
cmp     dword ptr [eax+4], 1
jnz     short loc_100539a4
cmp     byte ptr [eax+8], 1
jnz     short loc_10053961
mov     eax, [eax+0ch]
test    eax, eax
jnz     short loc_10053994
mov     eax, ecx
and     eax, 0fff7h
cmp     dword ptr [esi+2ch], 0
mov     [ebp+var_4], 0
mov     [esi+16h], ax
jnz     short loc_100539ca
or      eax, 8
mov     [esi+16h], ax
cmp     dword ptr [esi+0ch], 0
jnz     short loc_100539e0
mov     ebx, esi
call    sub_1001b970
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_100539ca
jmp     short loc_100539e6
cmp     [ebp+var_4], 0
jz      short loc_10053a06
cmp     byte ptr [esi+13h], 0
jnz     short loc_10053a06
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10053a06
mov     ecx, [eax+44h]
push    ecx
call    sub_100154a0
add     esp, 4
mov     dword ptr [esi+0ch], 0
cmp     byte ptr [ebp+var_4], 5
jnz     short loc_10053a44
cmp     byte ptr [esi+13h], 0
jnz     short loc_10053a44
mov     ebx, [esi+4]
add     ebx, 1a4h
jz      short loc_10053a44
mov     ecx, [ebx]
test    ecx, ecx
jz      short loc_10053a44
mov     eax, [ebx+8]
test    eax, eax
js      short loc_10053a44
mov     edx, [ebx+4]
push    eax
push    edx
call    ecx
add     esp, 8
test    eax, eax
jz      short loc_10053a3d
inc     dword ptr [ebx+8]
jmp     short loc_100539ca
mov     dword ptr [ebx+8], 0ffffffffh
cmp     [ebp+var_4], 0
jnz     short loc_10053a77
cmp     byte ptr [edi+8], 0
jnz     short loc_10053a69
inc     dword ptr [esi+28h]
cmp     byte ptr [edi+9], 0
jz      short loc_10053a69
mov     byte ptr [edi+24h], 1
mov     eax, [esi+48h]
lea     ecx, [edi+1ch]
mov     [edi+28h], eax
mov     [esi+48h], ecx
mov     byte ptr [edi+8], 1
cmp     byte ptr [esi+13h], 1
jnb     short loc_10053a77
mov     byte ptr [esi+13h], 1
cmp     byte ptr [edi+9], 0
jz      short loc_10053a9a
dec     dword ptr [edi+0ch]
jnz     short loc_10053a9a
mov     edx, [edi+4]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_10053a96
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, [ebp+var_4]
cmp     eax, 7
jz      short loc_10053aa9
cmp     eax, 0c0ah
jnz     short loc_10053ab0
mov     ecx, [ebp+var_8]
mov     byte ptr [ecx+32h], 1
test    eax, eax
jnz     loc_10053b6d
lea     ebx, [eax+1]
mov     esi, [edi+4]
call    sub_10019320
mov     edx, [esi+0ch]
mov     eax, [edx+38h]
movzx   esi, byte ptr [eax+28h]
movzx   ecx, byte ptr [eax+29h]
movzx   edx, byte ptr [eax+2ah]
movzx   eax, byte ptr [eax+2bh]
shl     esi, 8
or      esi, ecx
shl     esi, 8
or      esi, edx
shl     esi, 8
or      esi, eax
cmp     byte ptr [edi+9], 0
jz      short loc_10053b0b
dec     dword ptr [edi+0ch]
jnz     short loc_10053b0b
mov     ecx, [edi+4]
mov     eax, [ecx+38h]
test    eax, eax
jz      short loc_10053b07
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     edx, [ebp+var_8]
mov     eax, [edx+10h]
mov     ecx, [ebp+var_c]
mov     edx, [ecx+eax+0ch]
lea     eax, [ecx+eax+0ch]
cmp     esi, [edx]
jz      short loc_10053b4b
push    edx
call    sub_100449b0
add     esp, 4
cmp     [ebp+var_10], 1
jz      short loc_10053b41
mov     ecx, [ebp+var_8]
mov     edx, [ecx+10h]
mov     eax, [edx+1ch]
push    eax
call    sub_100449b0
add     esp, 4
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx+0ch], 11h
test    ebx, ebx
jz      short loc_10053b56
mov     eax, edi
call    sub_1001cd80
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_10]
add     [ebp+var_c], 10h
inc     ecx
mov     [ebp+var_10], ecx
cmp     ecx, [eax+14h]
jl      loc_10053914
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 0fff0bdc0h
test    esi, esi
jz      short locret_10053ba4
mov     edx, [ecx+14h]
xor     eax, eax
test    edx, edx
jle     short locret_10053ba4
mov     ecx, [ecx+10h]
add     ecx, 0ch
cmp     [ecx], esi
jz      short locret_10053ba4
inc     eax
add     ecx, 10h
cmp     eax, edx
jl      short loc_10053b98
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     ecx, 22ch
mov     esi, ebx
mov     [esp+30h+var_c], 0
call    sub_10009a40
mov     edi, eax
mov     [esp+30h+var_20], edi
test    edi, edi
jz      loc_10053ca2
push    22ch
push    0
push    edi
call    memset
mov     eax, [ebp+arg_10]
xor     esi, esi
add     esp, 0ch
mov     [edi+1f0h], eax
cmp     [ebx+14h], esi
jle     short loc_10053c30
mov     [esp+30h+var_18], esi
mov     ecx, [ebx+10h]
mov     edx, [esp+30h+var_18]
mov     eax, [edx+ecx+4]
test    eax, eax
jz      short loc_10053c25
call    sub_10022e40
mov     [esp+30h+var_1c], eax
test    eax, eax
jnz     loc_10053cb1
add     [esp+30h+var_18], 10h
inc     esi
cmp     esi, [ebx+14h]
jl      short loc_10053c05
mov     eax, ebx
call    sub_10062cf0
fld1
mov     eax, [ebp+size]
fstp    qword ptr [edi+1b8h]
mov     [edi], ebx
test    eax, eax
js      loc_10053d32
jz      short loc_10053c5c
mov     ecx, [ebp+src]
cmp     byte ptr [ecx+eax-1], 0
jz      loc_10053d32
cmp     eax, [ebx+4ch]
jle     short loc_10053ccf
push    offset astatementtoolo
push    12h
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
cmp     byte ptr [ebx+32h], 0
mov     ecx, 12h
jz      short loc_10053c94
push    0
push    7
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
mov     byte ptr [ebx+32h], 0
mov     ecx, 7
mov     eax, [ebx+2ch]
and     eax, ecx
mov     [esp+30h+var_1c], eax
jmp     loc_100540a9
mov     [esp+30h+var_1c], 7
mov     edi, eax
jmp     loc_100540a9
mov     ecx, [ebx+10h]
add     esi, esi
mov     edx, [ecx+esi*8]
push    edx
push    offset adatabaseschema_0
push    eax
mov     eax, ebx
call    sub_1000ba40
add     esp, 0ch
jmp     loc_100540a9
cmp     [ebp+src], 0
jz      short loc_10053d25
mov     ecx, eax
inc     ecx
mov     esi, ebx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10053d22
mov     edx, [ebp+size]
mov     eax, [ebp+src]
push    edx
push    eax
push    esi
call    memcpy
mov     ecx, [ebp+size]
add     esp, 0ch
lea     edx, [esp+30h+var_c]
push    edx
push    esi
push    edi
mov     byte ptr [esi+ecx], 0
call    sub_1006e390
add     esp, 0ch
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
mov     eax, [ebp+src]
sub     eax, esi
add     [edi+1f8h], eax
jmp     short loc_10053d44
mov     eax, [ebp+size]
mov     ecx, [ebp+src]
add     ecx, eax
mov     [edi+1f8h], ecx
jmp     short loc_10053d44
mov     eax, [ebp+src]
lea     edx, [esp+30h+var_c]
push    edx
push    eax
push    edi
call    sub_1006e390
add     esp, 0ch
cmp     byte ptr [ebx+32h], 0
jz      short loc_10053d51
mov     dword ptr [edi+0ch], 7
cmp     dword ptr [edi+0ch], 65h
jnz     short loc_10053d5e
mov     dword ptr [edi+0ch], 0
cmp     byte ptr [edi+11h], 0
jz      short loc_10053d6d
push    edi
call    sub_100538f0
add     esp, 4
cmp     byte ptr [ebx+32h], 0
jz      short loc_10053d7a
mov     dword ptr [edi+0ch], 7
mov     eax, [ebp+arg_18]
test    eax, eax
jz      short loc_10053d89
mov     ecx, [edi+1f8h]
mov     [eax], ecx
mov     edi, [edi+0ch]
mov     [esp+30h+var_1c], edi
test    edi, edi
jnz     loc_10053f04
mov     edx, [esp+30h+var_20]
mov     edi, [edx+8]
test    edi, edi
jz      loc_10053f04
mov     eax, edx
mov     al, [eax+1d4h]
test    al, al
jz      loc_10053f04
cmp     al, 2
jnz     short loc_10053dd4
mov     eax, 4
call    sub_10026ff0
mov     eax, 8
mov     [esp+30h+var_10], 0ch
jmp     short loc_10053de8
mov     eax, 8
call    sub_10026ff0
xor     eax, eax
mov     [esp+30h+var_10], 8
mov     ecx, eax
mov     [esp+30h+var_4], ecx
cmp     eax, [esp+30h+var_10]
jge     loc_10053f04
mov     [esp+30h+var_14], 0
mov     ecx, ds:off_10076e54[ecx*4]
mov     edx, [esp+30h+var_20]
mov     eax, [edx+8]
mov     [esp+30h+var_18], ecx
mov     ecx, [eax]
cmp     byte ptr [ecx+32h], 0
jnz     loc_10053eec
mov     esi, [eax+10h]
add     esi, [esp+30h+var_14]
cmp     [esp+30h+var_18], 0
jnz     short loc_10053e71
test    byte ptr [esi+1ch], 40h
jz      short loc_10053e46
mov     eax, [esi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [esi+1ch], 20h
jz      short loc_10053e57
mov     ebx, [esi+10h]
call    sub_100117b0
mov     ebx, [ebp+arg_0]
mov     ax, [esi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [esi+1ch], ax
mov     byte ptr [esi+1eh], 5
jmp     short loc_10053eec
mov     eax, [esi]
test    eax, eax
jz      short loc_10053e7c
mov     eax, [eax+48h]
jmp     short loc_10053e81
mov     eax, 3b9aca00h
xor     edi, edi
test    eax, eax
js      short loc_10053e9b
mov     ecx, [esp+30h+var_18]
jmp     short loc_10053e90
cmp     byte ptr [edi+ecx], 0
jz      short loc_10053e9b
inc     edi
cmp     edi, eax
jle     short loc_10053e90
xor     edx, edx
mov     [esp+30h+var_8], 202h
push    esi
cmp     edx, offset sub_10009760
jnz     short loc_10053ebc
call    sub_100247d0
mov     eax, [esp+34h+var_18]
mov     [esi+24h], eax
jmp     short loc_10053ecd
call    sub_100247d0
mov     eax, [esp+34h+var_18]
mov     [esp+34h+var_8], 0a02h
mov     cx, word ptr [esp+34h+var_8]
mov     dword ptr [esi+20h], 0
mov     [esi+4], eax
add     esp, 4
mov     [esi+18h], edi
mov     [esi+1ch], cx
mov     word ptr [esi+1eh], 103h
mov     ecx, [esp+30h+var_4]
add     [esp+30h+var_14], 28h
inc     ecx
mov     [esp+30h+var_4], ecx
cmp     ecx, [esp+30h+var_10]
jl      loc_10053e00
cmp     byte ptr [ebx+79h], 0
jnz     short loc_10053f5e
mov     ecx, [esp+30h+var_20]
mov     eax, [ecx+8]
mov     edi, [ecx+1f8h]
mov     ecx, [ebp+src]
sub     edi, ecx
mov     [esp+30h+var_4], eax
test    eax, eax
jz      short loc_10053f5e
mov     esi, [eax]
test    ecx, ecx
jnz     short loc_10053f2e
xor     esi, esi
jmp     short loc_10053f52
lea     ecx, [edi+1]
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10053f4e
mov     edx, [ebp+src]
push    edi
push    edx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     eax, [esp+30h+var_4]
mov     cl, [ebp+arg_c]
mov     [eax+9ch], esi
mov     [eax+65h], cl
mov     edi, [esp+30h+var_20]
mov     esi, [edi+8]
test    esi, esi
jz      short loc_10053fc8
cmp     [esp+30h+var_1c], 0
jnz     short loc_10053f76
cmp     byte ptr [ebx+32h], 0
jz      short loc_10053fc8
mov     eax, [esi+30h]
cmp     eax, 0bdf20da3h
jz      short loc_10053f87
cmp     eax, 519c2973h
jnz     short loc_10053f8c
call    sub_10027d40
mov     ecx, [esi+38h]
mov     eax, [esi]
test    ecx, ecx
jz      short loc_10053f9d
mov     edx, [esi+3ch]
mov     [ecx+3ch], edx
jmp     short loc_10053fa3
mov     ecx, [esi+3ch]
mov     [eax+4], ecx
mov     ecx, [esi+3ch]
test    ecx, ecx
jz      short loc_10053fb0
mov     edx, [esi+38h]
mov     [ecx+38h], edx
push    esi
mov     dword ptr [esi+30h], 0b606c3c8h
mov     dword ptr [esi], 0
call    sub_10027f40
add     esp, 4
jmp     short loc_10053fcd
mov     eax, [ebp+arg_14]
mov     [eax], esi
mov     esi, [esp+30h+var_c]
mov     eax, ebx
test    esi, esi
jz      short loc_10053ff5
mov     ecx, [esp+30h+var_1c]
push    esi
push    offset as
push    ecx
call    sub_1000ba40
add     esp, 0ch
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
jmp     short loc_10054004
mov     edx, [esp+30h+var_1c]
push    0
push    edx
call    sub_1000ba40
add     esp, 8
cmp     dword ptr [edi+228h], 0
jz      loc_100540a9
or      esi, 0ffffffffh
jmp     short loc_10054020
mov     eax, [edi+228h]
mov     ecx, [eax+4]
mov     [edi+228h], ecx
cmp     dword ptr [ebx+1e8h], 0
jz      short loc_1005406d
cmp     eax, [ebx+0fch]
jb      short loc_10054059
cmp     eax, [ebx+100h]
jnb     short loc_10054059
movzx   eax, word ptr [ebx+0e0h]
mov     ecx, [ebx+1e8h]
add     [ecx], eax
jmp     short loc_1005409c
push    eax
call    dword_10080258
mov     ecx, [ebx+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1005409c
cmp     eax, [ebx+0fch]
jb      short loc_10054093
cmp     eax, [ebx+100h]
jnb     short loc_10054093
mov     edx, [ebx+0f8h]
mov     [eax], edx
add     [ebx+0e4h], esi
mov     [ebx+0f8h], eax
jmp     short loc_1005409c
push    eax
call    sub_10009770
add     esp, 4
cmp     dword ptr [edi+228h], 0
jnz     loc_10054020
mov     eax, edi
mov     ecx, ebx
call    sub_10009810
mov     ecx, [esp+30h+var_1c]
test    ebx, ebx
jz      short loc_100540eb
cmp     byte ptr [ebx+32h], 0
jnz     short loc_100540c8
cmp     ecx, 0c0ah
jnz     short loc_100540df
push    0
push    7
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
mov     byte ptr [ebx+32h], 0
mov     ecx, 7
mov     eax, [ebx+2ch]
and     eax, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
mov     eax, 0ffh
pop     esi
and     eax, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    edi
mov     ebx, eax
mov     dword ptr [esi], 0
call    sub_1000c950
test    eax, eax
jnz     short loc_1005413a
push    offset ac0d89d4a975292
push    16cd0h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     eax, 15h
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_1005414b
push    eax
call    dword_1008027c
add     esp, 4
push    ebx
call    sub_10019440
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
mov     edx, dword ptr [ebp+arg_8]
add     esp, 4
push    eax
mov     eax, [ebp+size]
push    esi
push    ecx
mov     ecx, [ebp+src]
push    edx
push    eax
push    ecx
push    ebx
call    sub_10053bb0
mov     edi, eax
add     esp, 1ch
cmp     edi, 11h
jnz     short loc_100541a4
mov     edx, [esi]
push    edx
call    sub_10029010
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
mov     edx, dword ptr [ebp+arg_8]
add     esp, 4
push    eax
mov     eax, [ebp+size]
push    esi
push    ecx
mov     ecx, [ebp+src]
push    edx
push    eax
push    ecx
push    ebx
call    sub_10053bb0
add     esp, 1ch
mov     edi, eax
call    sub_10019550
mov     ebx, [ebx+0ch]
test    ebx, ebx
jz      short loc_100541ba
push    ebx
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_c]
push    eax
mov     eax, [ebp+arg_0]
push    0
push    0
push    ecx
push    edx
call    sub_10054100
add     esp, 14h
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_c]
push    eax
mov     eax, [ebp+arg_0]
push    0
push    1
push    ecx
push    edx
call    sub_10054100
add     esp, 14h
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
push    edi
mov     edi, eax
mov     eax, [ebp+arg_c]
xor     esi, esi
mov     [eax], esi
mov     eax, edi
mov     [ebp+var_4], esi
mov     [ebp+var_8], esi
call    sub_1000c950
test    eax, eax
jnz     short loc_10054274
push    offset ac0d89d4a975292
push    16d3dh
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
pop     edi
lea     eax, [esi+15h]
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+0ch]
cmp     eax, esi
jz      short loc_10054285
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebp+arg_0]
push    ebx
push    ecx
mov     ecx, [ebp+arg_4]
mov     esi, edi
call    sub_1000b910
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100542e1
mov     eax, [ebp+arg_8]
mov     esi, [ebp+arg_c]
lea     edx, [ebp+var_4]
push    edx
push    0
push    eax
push    0ffffffffh
push    ebx
mov     eax, edi
call    sub_10054100
mov     edx, [ebp+var_4]
add     esp, 14h
mov     [ebp+var_8], eax
test    edx, edx
jz      short loc_100542e1
cmp     [ebp+arg_10], 0
jz      short loc_100542e1
sub     edx, ebx
mov     ecx, ebx
call    sub_1000b8c0
mov     esi, [ebp+arg_0]
mov     ecx, eax
call    sub_1000b9b0
mov     ecx, [ebp+arg_10]
add     eax, esi
mov     [ecx], eax
mov     eax, ebx
mov     ecx, edi
call    sub_10009810
cmp     byte ptr [edi+32h], 0
mov     eax, [ebp+var_8]
pop     ebx
jnz     short loc_100542fb
cmp     eax, 0c0ah
jnz     short loc_10054312
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     esi, [edi+2ch]
mov     edi, [edi+0ch]
and     esi, eax
test    edi, edi
jz      short loc_10054328
push    edi
call    dword_10080284
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
push    eax
mov     eax, [ebp+arg_4]
push    ecx
push    0
push    edx
push    eax
mov     eax, [ebp+arg_0]
call    sub_10054230
add     esp, 14h
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
push    eax
mov     eax, [ebp+arg_4]
push    ecx
push    1
push    edx
push    eax
mov     eax, [ebp+arg_0]
call    sub_10054230
add     esp, 14h
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
mov     eax, [edi]
push    eax
push    esi
call    sub_10037020
mov     ecx, [edi+24h]
push    ecx
mov     eax, esi
call    sub_10043720
mov     edx, [edi+28h]
push    edx
push    esi
call    sub_10036430
mov     eax, [edi+2ch]
push    eax
push    esi
call    sub_10037020
mov     ecx, [edi+30h]
push    ecx
push    esi
call    sub_10036430
mov     edx, [edi+34h]
push    edx
push    esi
call    sub_10037020
mov     ebx, [edi+38h]
add     esp, 2ch
test    ebx, ebx
jz      short loc_100543f5
push    ebx
push    esi
call    sub_10054390
add     esp, 8
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
mov     eax, [edi+44h]
push    eax
push    esi
call    sub_10036430
mov     ecx, [edi+48h]
push    ecx
push    esi
call    sub_10036430
add     esp, 10h
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 60h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, ecx
push    esi
mov     esi, [ebx]
push    edi
mov     ecx, 4ch
mov     [ebp+var_5c], esi
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1005445b
push    4ch
push    0
push    edi
call    memset
add     esp, 0ch
test    edi, edi
jnz     short loc_1005446d
push    4ch
lea     edi, [ebp+var_58]
mov     eax, edi
push    0
push    eax
call    memset
add     esp, 0ch
cmp     [ebp+arg_0], 0
jnz     loc_10054520
mov     ecx, 31h
call    sub_10009a40
mov     esi, eax
mov     [ebp+var_60], esi
test    esi, esi
jz      short loc_100544b1
push    31h
push    0
push    esi
call    memset
add     esp, 0ch
lea     eax, [esi+30h]
or      ecx, 0ffffffffh
mov     byte ptr [esi], 71h
mov     [esi+1eh], cx
mov     [esi+4], eax
mov     byte ptr [eax], 0
mov     dword ptr [esi+2ch], 1
mov     esi, [ebx]
mov     ecx, 0ch
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_100544dc
xor     eax, eax
mov     [ebx], eax
mov     [ebx+4], eax
lea     ecx, [eax+14h]
mov     [ebx+8], eax
call    sub_10009a40
mov     [ebx+8], eax
test    eax, eax
jnz     short loc_100544f9
mov     edx, [ebp+var_60]
push    edx
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10037020
add     esp, 10h
mov     [ebp+arg_0], 0
jmp     short loc_1005451d
mov     ecx, [ebx]
mov     edx, [ebx+8]
lea     eax, [ecx+ecx*4]
inc     ecx
mov     [ebx], ecx
lea     eax, [edx+eax*4]
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     ecx, [ebp+var_60]
mov     [eax], ecx
mov     [ebp+arg_0], ebx
mov     esi, [ebp+var_5c]
cmp     [ebp+arg_4], 0
mov     edx, [ebp+arg_0]
mov     [edi], edx
jnz     short loc_1005454b
mov     ecx, 40h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_10054548
push    40h
push    0
push    ebx
call    memset
add     esp, 0ch
mov     [ebp+arg_4], ebx
mov     edx, [ebp+arg_c]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [edi+2ch], edx
xor     edx, edx
cmp     [ebp+arg_18], edx
mov     [edi+24h], eax
mov     eax, [ebp+arg_10]
setnz   dl
mov     [edi+28h], ecx
mov     ecx, [ebp+arg_14]
mov     [edi+30h], eax
mov     eax, [ebp+arg_1c]
mov     [edi+34h], ecx
mov     ecx, [ebp+arg_20]
mov     [edi+44h], eax
or      eax, 0ffffffffh
mov     [edi+6], dx
mov     byte ptr [edi+4], 74h
mov     [edi+48h], ecx
mov     [edi+10h], eax
mov     [edi+14h], eax
mov     [edi+18h], eax
cmp     byte ptr [esi+32h], 0
jz      short loc_100545c4
push    edi
push    esi
call    sub_10054390
lea     edx, [ebp+var_58]
add     esp, 8
cmp     edi, edx
jz      short loc_100545b1
mov     eax, edi
mov     ecx, esi
call    sub_10009810
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jz      short locret_100545f7
push    esi
push    edi
call    sub_10054390
add     esp, 8
mov     eax, esi
mov     ecx, edi
jmp     sub_10009810
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_8]
mov     [ebp+var_24], ecx
mov     ecx, [ebp+arg_c]
push    ebx
xor     eax, eax
mov     [ebp+var_1c], ecx
push    esi
xor     ecx, ecx
push    edi
mov     [ebp+var_8], eax
mov     [ebp+var_20], edx
mov     [ebp+var_c], ecx
mov     edx, [ebp+ecx*4+var_24]
mov     [ebp+var_14], edx
test    edx, edx
jz      loc_100546b5
mov     ecx, [edx+4]
mov     [ebp+var_4], 0
mov     [ebp+var_10], ecx
mov     edi, offset byte_10076ea8
movzx   esi, byte ptr [edi+1]
cmp     ecx, esi
jnz     short loc_100546a4
mov     esi, [edx]
movzx   edx, byte ptr [edi]
add     edx, offset anaturaleftoute
test    ecx, ecx
jle     short loc_1005467e
mov     bl, [esi]
dec     ecx
test    bl, bl
jz      short loc_1005467f
movzx   eax, byte ptr [edx]
movzx   ebx, bl
mov     bl, ds:byte_10076030[ebx]
cmp     bl, ds:byte_10076030[eax]
jnz     short loc_1005467f
inc     esi
inc     edx
test    ecx, ecx
jg      short loc_1005465d
dec     ecx
test    ecx, ecx
js      short loc_100546f2
movzx   ecx, byte ptr [edx]
movzx   eax, byte ptr [esi]
movzx   edx, ds:byte_10076030[ecx]
movzx   ecx, ds:byte_10076030[eax]
sub     ecx, edx
jz      short loc_100546f2
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_14]
mov     eax, [ebp+var_8]
inc     [ebp+var_4]
add     edi, 3
cmp     edi, offset byte_10076ebd
jl      short loc_10054646
or      eax, 40h
mov     ecx, eax
and     ecx, 21h
cmp     cl, 21h
jz      short loc_1005471c
test    al, 40h
jnz     short loc_1005471c
test    al, 20h
jz      loc_1005474d
mov     edx, eax
and     dl, 18h
cmp     dl, 8
jz      short loc_1005474d
mov     eax, [ebp+arg_0]
push    offset arightandfullou
push    eax
call    sub_1000bb30
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
movzx   edx, ds:byte_10076eaa[ecx+ecx*2]
mov     eax, [ebp+var_8]
or      eax, edx
mov     [ebp+var_8], eax
cmp     ecx, 7
jge     short loc_100546b2
mov     ecx, [ebp+var_c]
inc     ecx
mov     [ebp+var_c], ecx
cmp     ecx, 3
jl      loc_10054625
jmp     short loc_100546b5
mov     ecx, [ebp+arg_c]
mov     eax, offset asc_1007ab88
test    ecx, ecx
jnz     short loc_1005472d
mov     eax, (offset asc_1007ab88+1)
mov     edx, [ebp+arg_4]
push    ecx
mov     ecx, [ebp+arg_8]
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    offset aunknownorunsup
push    eax
call    sub_1000bb30
add     esp, 18h
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ecx+8]
push    ebx
push    esi
xor     eax, eax
push    edi
mov     [ebp+var_4], edx
test    edx, edx
jle     short loc_100547bf
mov     edi, [ecx+0ch]
mov     edx, [edi]
mov     cl, [edx]
mov     esi, [ebp+arg_0]
test    cl, cl
jz      short loc_1005479e
movzx   ebx, byte ptr [esi]
movzx   ecx, cl
mov     cl, ds:byte_10076030[ecx]
cmp     cl, ds:byte_10076030[ebx]
jnz     short loc_1005479e
mov     cl, [edx+1]
inc     edx
inc     esi
test    cl, cl
jnz     short loc_10054781
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [esi]
movzx   ecx, ds:byte_10076030[ecx]
movzx   edx, ds:byte_10076030[edx]
sub     edx, ecx
jz      short loc_100547c2
inc     eax
add     edi, 18h
cmp     eax, [ebp+var_4]
jl      short loc_10054776
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
cmp     [ebp+arg_0], 0
push    ebx
push    esi
push    edi
mov     [ebp+var_8], 0
jle     short loc_10054864
add     eax, 10h
mov     [ebp+var_4], eax
lea     esp, [esp+0]
mov     ecx, [ebp+var_4]
mov     eax, [ecx]
mov     ecx, [eax+8]
xor     edi, edi
mov     [ebp+var_c], ecx
test    ecx, ecx
jle     short loc_10054854
mov     esi, [eax+0ch]
mov     ecx, [esi]
mov     al, [ecx]
mov     edx, [ebp+arg_4]
test    al, al
jz      short loc_1005482d
nop
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_1005482d
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10054810
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_10054850
inc     edi
add     esi, 18h
cmp     edi, [ebp+var_c]
jl      short loc_10054804
jmp     short loc_10054854
test    edi, edi
jns     short loc_1005486d
mov     eax, [ebp+var_8]
add     [ebp+var_4], 3ch
inc     eax
mov     [ebp+var_8], eax
cmp     eax, [ebp+arg_0]
jl      short loc_100547f0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_1005487e
mov     ecx, [ebp+var_8]
mov     edx, [ebp+arg_c]
mov     [eax], ecx
mov     [edx], edi
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, eax
mov     eax, [ebp+arg_0]
push    edi
mov     edi, [eax]
mov     eax, [ebp+arg_4]
push    esi
mov     ebx, ecx
mov     edx, edi
call    sub_10034950
mov     ebx, [ebp+arg_c]
add     esp, 4
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_8]
push    esi
mov     edx, edi
call    sub_10034950
mov     ecx, [ebp+arg_0]
mov     esi, [ecx]
add     esp, 4
mov     ecx, 30h
mov     [ebp+var_4], eax
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_100548fa
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [ebx], 4ch
mov     [ebx+1eh], dx
mov     dword ptr [ebx+2ch], 1
mov     eax, [ebp+arg_0]
mov     esi, [eax]
test    ebx, ebx
jnz     short loc_1005491c
mov     ecx, [ebp+var_8]
push    ecx
push    esi
call    sub_10036430
mov     edx, [ebp+var_4]
push    edx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_10054992
mov     esi, [ebp+var_4]
test    esi, esi
jz      short loc_1005493d
mov     eax, 100h
mov     [ebx+0ch], esi
test    [esi+2], ax
jz      short loc_1005493d
mov     ecx, eax
or      [ebx+2], cx
mov     edx, [esi+14h]
mov     [ebx+14h], edx
mov     eax, [ebp+var_8]
test    eax, eax
jz      short loc_1005495e
mov     ecx, 100h
mov     [ebx+8], eax
test    [eax+2], cx
jz      short loc_1005495e
mov     edx, ecx
or      [ebx+2], dx
mov     eax, [eax+14h]
mov     [ebx+14h], eax
call    sub_10035cf0
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1005497f
push    eax
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
cmp     [ebp+arg_10], 0
jz      short loc_10054992
or      word ptr [ebx+2], 1
mov     ax, [esi+18h]
mov     [ebx+20h], ax
mov     esi, [ebp+arg_14]
mov     ecx, [esi]
push    ebx
push    ecx
mov     eax, edi
call    sub_10036060
add     esp, 8
pop     edi
mov     [esi], eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jz      short loc_100549de
push    edi
mov     edi, [ebp+arg_4]
nop
mov     eax, [esi+8]
or      word ptr [esi+2], 1
push    edi
push    eax
mov     [esi+20h], di
call    sub_100549b0
mov     esi, [esi+0ch]
add     esp, 8
test    esi, esi
jnz     short loc_100549c0
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, [ebp+arg_4]
mov     eax, [eax+24h]
movsx   ecx, word ptr [eax]
push    ebx
xor     ebx, ebx
dec     ecx
push    esi
push    edi
mov     [ebp+var_4], eax
mov     [ebp+var_8], ebx
test    ecx, ecx
jle     loc_10054bab
lea     edi, [eax+64h]
add     eax, 10h
mov     [ebp+var_14], edi
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
cmp     dword ptr [eax], 0
mov     edx, [edi-18h]
mov     [ebp+var_c], edx
jz      loc_10054b8b
test    edx, edx
jz      loc_10054b8b
mov     al, [edi-8]
movzx   ecx, al
shr     ecx, 5
and     ecx, 1
mov     [ebp+var_10], ecx
test    al, 4
jz      short loc_10054ac7
cmp     dword ptr [edi], 0
jnz     loc_10054bb4
cmp     dword ptr [edi+4], 0
jnz     loc_10054bb4
xor     esi, esi
cmp     [edx+8], esi
jle     short loc_10054ac7
inc     ebx
xor     edi, edi
lea     esp, [esp+0]
mov     ecx, [ebp+var_c]
mov     edx, [ecx+0ch]
mov     eax, [edi+edx]
lea     ecx, [ebp+var_24]
push    ecx
lea     edx, [ebp+var_20]
push    edx
push    eax
mov     eax, [ebp+var_4]
push    ebx
call    sub_100547d0
add     esp, 10h
test    eax, eax
jz      short loc_10054ab5
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_20]
add     eax, 28h
push    eax
mov     eax, [ebp+arg_0]
push    ecx
mov     ecx, [ebp+var_24]
push    esi
push    ebx
push    edx
push    eax
mov     eax, [ebp+var_4]
call    sub_10054890
add     esp, 18h
mov     ecx, [ebp+var_c]
inc     esi
add     edi, 18h
cmp     esi, [ecx+8]
jl      short loc_10054a70
mov     ecx, [ebp+var_10]
mov     edi, [ebp+var_14]
mov     eax, [edi]
test    eax, eax
jz      short loc_10054b0b
cmp     dword ptr [edi+4], 0
jnz     loc_10054bd3
test    ecx, ecx
jz      short loc_10054ae8
mov     edx, [edi-4]
push    edx
push    eax
call    sub_100549b0
add     esp, 8
mov     eax, [edi]
mov     ecx, [ebp+arg_4]
mov     edx, [ecx+28h]
push    eax
mov     eax, [ebp+arg_0]
mov     eax, [eax]
push    edx
call    sub_10036060
mov     ecx, [ebp+arg_4]
mov     [ecx+28h], eax
add     esp, 8
mov     dword ptr [edi], 0
mov     ebx, [edi+4]
test    ebx, ebx
jz      short loc_10054b8b
xor     esi, esi
cmp     [ebx+4], esi
jle     short loc_10054b8b
mov     edx, [ebx]
mov     eax, [edx+esi*8]
mov     ecx, [ebp+var_c]
push    eax
mov     [ebp+var_1c], eax
call    sub_10054760
mov     edi, eax
add     esp, 4
test    edi, edi
js      loc_10054bf0
mov     eax, [ebp+var_8]
lea     ecx, [ebp+var_2c]
push    ecx
mov     ecx, [ebp+var_1c]
lea     edx, [ebp+var_28]
push    edx
inc     eax
push    ecx
push    eax
mov     eax, [ebp+var_4]
call    sub_100547d0
add     esp, 10h
test    eax, eax
jz      loc_10054bf0
mov     edx, [ebp+arg_4]
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_28]
add     edx, 28h
push    edx
mov     edx, [ebp+arg_0]
push    eax
mov     eax, [ebp+var_8]
push    edi
inc     eax
push    eax
mov     eax, [ebp+var_4]
push    ecx
mov     ecx, [ebp+var_2c]
push    edx
call    sub_10054890
inc     esi
add     esp, 18h
cmp     esi, [ebx+4]
jl      short loc_10054b19
mov     edi, [ebp+var_14]
mov     eax, [ebp+var_4]
movsx   ecx, word ptr [eax]
mov     ebx, [ebp+var_8]
add     [ebp+var_18], 3ch
inc     ebx
add     edi, 3ch
dec     ecx
mov     [ebp+var_8], ebx
mov     [ebp+var_14], edi
cmp     ebx, ecx
jl      loc_10054a1f
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    0
push    offset aanaturaljoinma
mov     edx, [ebp+arg_0]
push    edx
call    sub_1000bb30
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
push    offset acannothaveboth
push    eax
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_1c]
push    ecx
push    offset acannotjoinusin
jmp     short loc_10054bbb
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
mov     ebx, eax
mov     eax, [ebp+arg_0]
mov     eax, [eax]
lea     ecx, [eax+2]
push    esi
mov     esi, [ebx+40h]
mov     [ebp+var_10], eax
mov     eax, [ebx+3ch]
push    edi
mov     edi, [ebx+8]
mov     [ebp+var_c], ecx
mov     [ebp+var_4], esi
cmp     ecx, eax
jg      short loc_10054c36
lea     edx, [esi+ecx]
sub     eax, ecx
mov     [ebx+40h], edx
mov     [ebx+3ch], eax
jmp     short loc_10054c46
mov     eax, [ebx+4ch]
lea     edx, [eax+1]
add     eax, ecx
mov     [ebp+var_4], edx
mov     [ebx+4ch], eax
mov     esi, edx
mov     al, [ebx+13h]
test    al, al
jnz     short loc_10054c58
inc     dword ptr [ebx+4ch]
mov     eax, [ebx+4ch]
mov     [ebp+var_8], eax
jmp     short loc_10054c67
dec     al
movzx   ecx, al
mov     [ebx+13h], al
mov     edx, [ebx+ecx*4+1ch]
mov     [ebp+var_8], edx
mov     eax, ebx
call    sub_100388c0
mov     edx, esi
mov     esi, [ebp+arg_0]
push    0
push    ebx
mov     eax, esi
call    sub_10039ce0
mov     eax, [esi+4]
mov     esi, [edi+1ch]
add     esp, 8
mov     [ebp+var_14], eax
cmp     [edi+20h], esi
jg      short loc_10054c97
call    sub_10025810
test    eax, eax
jnz     short loc_10054cc3
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_14]
mov     [eax+4], ecx
mov     ecx, [ebp+var_4]
add     ecx, [ebp+var_10]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
xor     ecx, ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 37h
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_10]
mov     esi, [ebp+arg_8]
lea     ecx, [edx+eax+1]
push    1
push    ecx
call    sub_10038990
mov     esi, edi
mov     eax, [esi+1ch]
add     esp, 8
mov     [ebp+var_18], eax
cmp     [esi+20h], eax
jg      short loc_10054cf4
call    sub_10025810
test    eax, eax
jnz     short loc_10054d24
mov     eax, [ebp+var_18]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_4]
mov     edi, [ebp+var_8]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_c]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], edi
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1fh
jmp     short loc_10054d27
mov     edi, [ebp+var_8]
mov     eax, [ebp+arg_4]
mov     cl, [eax+6]
mov     edx, [ebp+arg_0]
mov     eax, [edx+4]
not     cl
movzx   ecx, cl
shr     ecx, 6
and     ecx, 1
mov     [ebp+var_10], eax
mov     eax, [esi+1ch]
or      ecx, 60h
mov     [ebp+var_18], ecx
mov     [ebp+var_14], eax
cmp     [esi+20h], eax
jg      short loc_10054d66
mov     edi, esi
call    sub_10025810
mov     edi, [ebp+var_8]
test    eax, eax
jnz     short loc_10054d8c
mov     ecx, [ebp+var_18]
mov     eax, [ebp+var_14]
inc     dword ptr [esi+1ch]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     [eax], cl
mov     ecx, [ebp+var_10]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edi
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+1], cl
test    edi, edi
jz      short loc_10054db8
mov     dl, [ebx+13h]
cmp     dl, 8
jnb     short loc_10054db8
xor     eax, eax
lea     ecx, [ebx+64h]
lea     ecx, [ecx+0]
cmp     [ecx+10h], edi
jz      short loc_10054df2
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10054da0
movzx   edx, dl
mov     [ebx+edx*4+1ch], edi
inc     byte ptr [ebx+13h]
mov     ecx, [ebp+var_c]
mov     edi, [ebp+var_4]
mov     eax, ebx
call    sub_100384f0
mov     eax, [ebp+var_c]
cmp     eax, [ebx+3ch]
jle     short loc_10054dd5
mov     [ebx+3ch], eax
mov     eax, edi
mov     [ebx+40h], eax
mov     eax, [ebp+arg_4]
mov     ecx, [eax+8]
xor     ebx, ebx
cmp     ecx, ebx
jz      loc_10054f82
mov     eax, [eax+0ch]
cmp     eax, ebx
jz      short loc_10054df8
inc     eax
mov     [ebp+arg_4], eax
jmp     short loc_10054dfb
mov     byte ptr [ecx+8], 1
jmp     short loc_10054db8
mov     [ebp+arg_4], ecx
mov     ecx, [esi+1ch]
mov     [ebp+var_18], ecx
cmp     [esi+20h], ecx
jg      short loc_10054e1d
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10054e1a
mov     [ebp+var_10], 1
jmp     short loc_10054e43
mov     ecx, [ebp+var_18]
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
lea     edx, [ecx+ecx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7ah
mov     [ebp+var_10], ecx
mov     eax, [esi+1ch]
mov     [ebp+var_18], eax
cmp     [esi+20h], eax
jg      short loc_10054e5c
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10054e83
mov     eax, [ebp+var_18]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+arg_4]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     dword ptr [eax+8], 0ffffffffh
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 14h
mov     ecx, [esi+1ch]
mov     [ebp+arg_4], ecx
cmp     [esi+20h], ecx
jg      short loc_10054ea5
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10054ea2
mov     [ebp+arg_4], 1
jmp     short loc_10054ec8
mov     ecx, [ebp+arg_4]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
mov     [ebp+arg_4], ecx
mov     ecx, [ebp+var_10]
cmp     ecx, ebx
jl      short loc_10054ee0
mov     eax, [esi+1ch]
cmp     eax, ecx
jbe     short loc_10054ee0
mov     edx, [esi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax+4]
mov     eax, [esi+1ch]
mov     [ebp+var_14], ecx
mov     [ebp+var_18], eax
cmp     [esi+20h], eax
jg      short loc_10054f02
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10054f25
mov     eax, [ebp+var_18]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_14]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 43h
mov     edx, [ebp+arg_0]
mov     eax, [edx+4]
mov     [ebp+var_18], eax
mov     eax, [esi+1ch]
mov     [ebp+arg_0], eax
cmp     [esi+20h], eax
jg      short loc_10054f47
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10054f6a
mov     eax, [ebp+arg_0]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_18]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 3bh
mov     ecx, [ebp+arg_4]
cmp     ecx, ebx
jl      short loc_10054f82
mov     eax, [esi+1ch]
cmp     eax, ecx
jbe     short loc_10054f82
lea     edx, [ecx+ecx*4]
mov     ecx, [esi+4]
mov     [ecx+edx*4+8], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax+0ch]
xor     ebx, ebx
mov     [ebp+var_4], ecx
cmp     ecx, ebx
jz      loc_10055085
cmp     [ebp+arg_4], ebx
jz      loc_10055085
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10054fc9
call    sub_10025810
test    eax, eax
jnz     short loc_10054fed
mov     ecx, [ebp+var_4]
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     dword ptr [eax+8], 0ffffffffh
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 14h
mov     ecx, [ebp+arg_0]
mov     esi, [edi+1ch]
mov     edx, [ecx+0ch]
mov     [ebp+arg_0], edx
cmp     [edi+20h], esi
jg      short loc_10055011
call    sub_10025810
test    eax, eax
jz      short loc_10055011
mov     ecx, 1
mov     [ebp+arg_0], ecx
jmp     short loc_10055039
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+arg_0]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 79h
mov     [ebp+arg_0], esi
mov     ecx, esi
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1005504d
call    sub_10025810
mov     ecx, [ebp+arg_0]
test    eax, eax
jnz     short loc_10055070
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [esi+esi*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+arg_4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
cmp     ecx, ebx
jl      short loc_10055085
mov     eax, [edi+1ch]
cmp     eax, ecx
jbe     short loc_10055085
mov     edx, [edi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     al, [esi+13h]
sub     esp, 8
push    ebx
push    edi
mov     edi, [esi+8]
test    al, al
jnz     short loc_100550ad
inc     dword ptr [esi+4ch]
mov     eax, [esi+4ch]
mov     [ebp+var_4], eax
jmp     short loc_100550bc
dec     al
movzx   ecx, al
mov     [esi+13h], al
mov     edx, [esi+ecx*4+1ch]
mov     [ebp+var_4], edx
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_4]
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    eax
push    34h
mov     eax, edi
call    sub_10025b50
mov     ebx, [edi+1ch]
add     esp, 14h
cmp     [edi+20h], ebx
jg      short loc_100550e9
call    sub_10025810
test    eax, eax
jnz     short loc_10055119
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+arg_8]
mov     ecx, [ebp+arg_c]
mov     [eax+8], edx
mov     edx, [ebp+var_4]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1fh
jmp     short loc_1005511c
mov     edx, [ebp+var_4]
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_10055130
call    sub_10025810
mov     edx, [ebp+var_4]
test    eax, eax
jnz     short loc_10055156
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_0]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 61h
test    edx, edx
jz      short loc_1005517f
mov     bl, [esi+13h]
cmp     bl, 8
jnb     short loc_1005517f
xor     eax, eax
lea     ecx, [esi+64h]
cmp     [ecx+10h], edx
jz      short loc_10055185
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10055167
movzx   eax, bl
mov     [esi+eax*4+1ch], edx
inc     byte ptr [esi+13h]
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
mov     byte ptr [ecx+8], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
push    ebx
push    esi
mov     esi, [ebp+arg_1c]
movzx   eax, byte ptr [esi]
mov     ecx, [esi+4]
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, [edi+8]
mov     [ebp+var_8], ebx
mov     [ebp+var_18], eax
mov     [ebp+var_c], ecx
test    ebx, ebx
jz      loc_10055391
xor     eax, eax
cmp     [ebp+arg_18], eax
setnl   al
cmp     [ebp+arg_14], 0
mov     [ebp+var_20], eax
jnz     short loc_100551e0
test    eax, eax
jnz     short loc_100551e0
mov     edx, [ebp+arg_20]
mov     eax, [ebp+arg_4]
push    edx
push    eax
mov     eax, ebx
call    sub_10054f90
add     esp, 8
mov     eax, [ebp+arg_10]
test    eax, eax
jle     short loc_100551ec
mov     [ebp+var_4], eax
jmp     short loc_100551f4
mov     ecx, [ebp+arg_8]
mov     edx, [ecx]
mov     [ebp+var_4], edx
cmp     dword ptr [esi+8], 0
jnz     short loc_1005520a
mov     ecx, [edi+4ch]
inc     ecx
mov     [esi+8], ecx
mov     ecx, [ebp+var_4]
mov     [esi+0ch], ecx
add     [edi+4ch], ecx
mov     esi, [esi+8]
mov     [ebp+var_10], esi
test    eax, eax
jle     short loc_1005527c
xor     ecx, ecx
mov     [ebp+var_14], ecx
test    eax, eax
jle     loc_100552a1
mov     eax, [ebx+1ch]
mov     [ebp+var_1c], eax
cmp     [ebx+20h], eax
jg      short loc_10055246
mov     edi, ebx
call    sub_10025810
mov     edi, [ebp+arg_0]
mov     ebx, [ebp+var_8]
mov     esi, [ebp+var_10]
mov     ecx, [ebp+var_14]
test    eax, eax
jnz     short loc_10055271
mov     eax, [ebp+var_1c]
inc     dword ptr [ebx+1ch]
lea     edx, [eax+eax*4]
mov     eax, [ebx+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_c]
mov     [eax+4], edx
lea     edx, [ecx+esi]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1dh
inc     ecx
mov     [ebp+var_14], ecx
cmp     ecx, [ebp+arg_10]
jl      short loc_10055221
jmp     short loc_100552a1
cmp     [ebp+var_18], 3
jz      short loc_100552a1
mov     eax, edi
call    sub_100388c0
xor     eax, eax
cmp     [ebp+var_18], 5
mov     edx, esi
setz    al
push    eax
mov     eax, [ebp+arg_8]
push    edi
call    sub_10039ce0
add     esp, 8
cmp     [ebp+var_20], 0
jz      short loc_100552d9
mov     ecx, [ebp+var_4]
mov     edx, [ebp+arg_20]
mov     eax, [ebp+arg_18]
push    esi
push    ecx
push    edx
push    eax
mov     esi, edi
call    sub_10055090
add     esp, 10h
cmp     [ebp+arg_14], 0
jnz     short loc_100552d6
mov     ecx, [ebp+arg_20]
mov     edx, [ebp+arg_4]
push    ecx
push    edx
mov     eax, ebx
call    sub_10054f90
add     esp, 8
mov     esi, [ebp+var_10]
mov     ecx, [ebp+var_18]
lea     eax, [ecx-1]
cmp     eax, 9
ja      short def_100552e4
jmp     ds:jpt_100552e4[eax*4]
mov     al, [edi+13h]
test    al, al
jnz     short loc_100552fd
inc     dword ptr [edi+4ch]
mov     eax, [edi+4ch]
mov     [ebp+arg_0], eax
jmp     short loc_1005530c
dec     al
movzx   ecx, al
mov     [edi+13h], al
mov     edx, [edi+ecx*4+1ch]
mov     [ebp+arg_0], edx
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_4]
push    eax
push    ecx
push    esi
push    1fh
mov     eax, ebx
call    sub_10025890
mov     esi, [ebp+arg_0]
mov     edx, [ebp+var_c]
push    esi
push    edx
push    61h
mov     eax, ebx
call    sub_10025990
add     esp, 1ch
mov     edx, edi
call    sub_1003ac10
cmp     [ebp+arg_14], 0
jnz     short loc_10055391
mov     ecx, [ebp+arg_4]
mov     ecx, [ecx+8]
mov     [ebp+arg_0], ecx
test    ecx, ecx
jz      short loc_10055391
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_10055365
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_10055391
mov     ebx, [ebp+var_8]
mov     ecx, [ebp+arg_0]
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_24]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     dword ptr [eax+0ch], 0ffffffffh
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 7ah
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
push    eax
push    esi
push    ecx
push    62h
mov     eax, ebx
call    sub_10025890
add     esp, 10h
jmp     short def_100552e4
mov     al, [edi+13h]
test    al, al
jnz     short loc_100553c1
inc     dword ptr [edi+4ch]
mov     edx, [edi+4ch]
mov     [ebp+arg_0], edx
jmp     short loc_100553d0
dec     al
mov     [edi+13h], al
movzx   eax, al
mov     ecx, [edi+eax*4+1ch]
mov     [ebp+arg_0], ecx
mov     edx, [ebp+arg_0]
mov     eax, [ebp+var_4]
push    edx
push    eax
push    esi
push    1fh
mov     eax, ebx
call    sub_10025890
mov     eax, [ebp+arg_14]
add     esp, 10h
test    eax, eax
jz      short loc_10055407
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_4]
push    ecx
push    edx
push    eax
mov     eax, edi
call    sub_10054c00
mov     esi, [ebp+arg_0]
add     esp, 0ch
jmp     loc_10055332
mov     ecx, edi
call    sub_1003abf0
mov     esi, eax
mov     eax, [ebp+var_c]
push    esi
push    eax
push    38h
mov     eax, ebx
call    sub_10025990
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+var_c]
add     esp, 0ch
push    esi
push    ecx
push    edx
push    39h
mov     eax, ebx
call    sub_10025890
mov     eax, [ebx+4]
add     esp, 10h
test    eax, eax
jz      short loc_10055448
mov     ecx, [ebx+1ch]
lea     ecx, [ecx+ecx*4]
mov     byte ptr [eax+ecx*4-11h], 8
mov     edx, edi
call    sub_1003ac10
mov     esi, [ebp+arg_0]
jmp     loc_10055332
mov     edx, [ebp+arg_8]
mov     eax, [edx+8]
mov     ecx, [ebp+arg_1c]
mov     esi, [ebp+arg_4]
mov     bl, [ecx+1]
mov     eax, [eax]
add     esi, 5
call    sub_100359d0
mov     [esi], al
mov     eax, [ebp+arg_14]
test    eax, eax
jz      short loc_10055494
mov     edx, [ebp+var_10]
mov     ecx, [ebp+arg_4]
push    edx
push    ecx
push    eax
mov     eax, edi
call    sub_10054c00
mov     ebx, [ebp+var_8]
add     esp, 0ch
jmp     def_100552e4
mov     ecx, edi
call    sub_1003abf0
mov     edi, [ebp+var_10]
push    1
push    esi
mov     ebx, eax
mov     eax, [ebp+var_8]
push    ebx
push    1
push    edi
push    1fh
call    sub_100259f0
mov     eax, [ebp+arg_0]
mov     ecx, 1
call    sub_100384f0
mov     edx, [ebp+var_c]
mov     eax, [ebp+var_8]
push    ebx
push    edx
push    61h
call    sub_10025990
mov     edx, [ebp+arg_0]
add     esp, 24h
mov     esi, ebx
call    sub_1003ac10
mov     ebx, [ebp+var_8]
jmp     loc_1005533f
mov     eax, [ebp+var_c]
push    eax
push    1
push    7
mov     eax, ebx
call    sub_10025990
add     esp, 0ch
jmp     def_100552e4
mov     eax, [ebp+arg_14]
test    eax, eax
jz      short loc_10055515
mov     ecx, [ebp+arg_4]
push    esi
push    ecx
push    eax
mov     eax, edi
call    sub_10054c00
add     esp, 0ch
jmp     def_100552e4
mov     edx, [ebp+var_c]
push    1
push    edx
mov     ebx, edi
call    sub_10038990
mov     ebx, [ebp+var_8]
add     esp, 8
jmp     loc_1005533f
cmp     [ebp+arg_14], 0
jz      short loc_1005557e
mov     al, [edi+13h]
test    al, al
jnz     short loc_10055545
inc     dword ptr [edi+4ch]
mov     eax, [edi+4ch]
mov     [ebp+arg_0], eax
jmp     short loc_10055554
dec     al
movzx   ecx, al
mov     [edi+13h], al
mov     edx, [edi+ecx*4+1ch]
mov     [ebp+arg_0], edx
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_4]
push    eax
push    ecx
push    esi
push    1fh
mov     eax, ebx
call    sub_10025890
mov     esi, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_14]
push    esi
push    edx
push    eax
mov     eax, edi
call    sub_10054c00
jmp     loc_1005532f
cmp     ecx, 0ah
jnz     short loc_1005559b
mov     ecx, [ebp+arg_1c]
mov     edx, [ecx+4]
push    edx
push    4
mov     eax, ebx
call    sub_10025940
add     esp, 8
jmp     loc_1005533f
mov     eax, [ebp+var_4]
push    eax
push    esi
push    10h
mov     eax, ebx
call    sub_10025990
mov     ecx, [ebp+var_4]
mov     eax, [ebp+arg_0]
add     esp, 0ch
mov     edi, esi
call    sub_100384f0
mov     ebx, [ebp+var_8]
jmp     loc_1005533f
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [ecx]
push    esi
mov     esi, [eax]
push    edi
lea     ecx, [ebx+ebx*4+10h]
mov     [ebp+var_4], esi
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10055692
lea     eax, [ebx+ebx*4+10h]
push    eax
push    0
push    edi
call    memset
mov     eax, esi
lea     edx, [edi+ebx*4+0ch]
mov     [edi+8], edx
mov     [edi+6], bx
mov     ecx, [eax+10h]
mov     edx, [ecx+0ch]
mov     cl, [edx+4dh]
mov     edx, [ebp+arg_4]
mov     [edi+4], cl
mov     [edi], eax
mov     eax, [edx+8]
add     esp, 0ch
xor     esi, esi
mov     [ebp+arg_4], eax
test    ebx, ebx
jle     short loc_10055690
lea     ecx, [edi+0ch]
mov     [ebp+var_8], ecx
mov     edx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     eax, [eax]
push    edx
call    sub_100358d0
add     esp, 4
test    eax, eax
jnz     short loc_10055670
mov     ecx, [ebp+var_4]
mov     eax, [ecx+8]
mov     ecx, [ebp+var_8]
mov     [ecx], eax
mov     eax, [ebp+arg_4]
mov     edx, [edi+8]
mov     al, [eax+0ch]
add     [ebp+arg_4], 14h
mov     [esi+edx], al
inc     esi
add     ecx, 4
mov     [ebp+var_8], ecx
cmp     esi, ebx
jl      short loc_10055655
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sub     eax, 71h
jz      short loc_100556bd
dec     eax
jz      short loc_100556b7
dec     eax
jz      short loc_100556b1
mov     eax, offset aunion
retn
mov     eax, offset aintersect
retn
mov     eax, offset aexcept
retn
mov     eax, offset aunionall
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, ecx
cmp     byte ptr [edi+1d4h], 2
jnz     loc_100557a7
mov     ecx, [edi]
mov     esi, [edi+8]
push    eax
push    offset ausetempbtreefo
push    ecx
call    sub_1000ae80
mov     ebx, [esi+1ch]
mov     edx, [edi+1e4h]
add     esp, 0ch
mov     [ebp+var_4], eax
mov     [ebp+var_8], edx
cmp     [esi+20h], ebx
jg      short loc_10055724
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10055724
mov     ebx, 1
xor     edx, edx
jmp     short loc_1005574a
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_8]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
mov     [eax+4], edx
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 96h
mov     ecx, [esi+4]
mov     edi, [esi]
mov     eax, ebx
cmp     ecx, edx
jz      short loc_1005579c
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005579c
cmp     ebx, edx
jge     short loc_10055763
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*4]
movsx   eax, byte ptr [esi+1]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     eax, [ebp+var_4]
xor     ecx, ecx
mov     [esi+10h], ecx
cmp     eax, ecx
jnz     short loc_1005578e
mov     [esi+10h], ecx
mov     [esi+1], cl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0ffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
or      eax, 0ffffffffh
call    sub_10025e50
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, ecx
cmp     byte ptr [edi+1d4h], 2
jnz     loc_100558c6
cmp     [ebp+arg_8], 0
mov     esi, [edi+8]
mov     ecx, offset ausingtempbtree
jnz     short loc_100557db
mov     ecx, offset dword_100796bc
sub     eax, 71h
jz      short loc_100557fb
dec     eax
jz      short loc_100557f4
dec     eax
jz      short loc_100557ed
mov     eax, offset aunion
jmp     short loc_10055800
mov     eax, offset aintersect
jmp     short loc_10055800
mov     eax, offset aexcept
jmp     short loc_10055800
mov     eax, offset aunionall
mov     edx, [edi]
push    eax
mov     eax, [ebp+arg_4]
push    ecx
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
push    offset acompoundsubque
push    edx
call    sub_1000ae80
mov     ebx, [esi+1ch]
mov     [ebp+var_4], eax
mov     eax, [edi+1e4h]
add     esp, 18h
mov     [ebp+var_8], eax
cmp     [esi+20h], ebx
jg      short loc_10055842
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10055842
mov     ebx, 1
xor     edx, edx
jmp     short loc_10055868
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_8]
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 96h
mov     ecx, [esi+4]
mov     edi, [esi]
mov     eax, ebx
cmp     ecx, edx
jz      short loc_100558bb
cmp     byte ptr [edi+32h], 0
jnz     short loc_100558bb
cmp     ebx, edx
jge     short loc_10055881
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     esi, [ecx+edx*4]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     eax, [ebp+var_4]
xor     ecx, ecx
mov     [esi+10h], ecx
cmp     eax, ecx
jnz     short loc_100558ad
mov     [esi+10h], ecx
mov     [esi+1], cl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0ffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
or      eax, 0ffffffffh
call    sub_10025e50
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 38h
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [esi+24h]
lea     ecx, [edi-1]
lea     eax, [edi+1]
mov     [esi+24h], eax
test    edi, ecx
jnz     short loc_10055923
mov     ebx, [esi+28h]
mov     eax, [esi]
lea     edx, ds:4[edi*8]
push    edx
mov     [ebp+var_30], ebx
mov     [ebp+var_2c], eax
call    sub_10009ac0
xor     ebx, ebx
add     esp, 4
mov     [ebp+var_28], eax
cmp     eax, ebx
jnz     short loc_1005591b
mov     eax, [ebp+var_30]
mov     ecx, [ebp+var_2c]
call    sub_10009810
mov     eax, [ebp+var_28]
mov     [esi+28h], eax
jmp     short loc_10055925
xor     ebx, ebx
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_10055933
mov     dword ptr [eax+edi*4], 0ffffffffh
or      eax, 0ffffffffh
sub     eax, edi
mov     edi, [esi+24h]
lea     edx, [edi-1]
lea     ecx, [edi+1]
mov     [ebp+var_24], eax
mov     [esi+24h], ecx
test    edi, edx
jnz     short loc_1005597c
mov     eax, [esi]
mov     ebx, [esi+28h]
lea     ecx, ds:4[edi*8]
push    ecx
mov     [ebp+var_30], eax
call    sub_10009ac0
add     esp, 4
mov     [ebp+var_2c], eax
test    eax, eax
jnz     short loc_10055977
mov     ecx, [ebp+var_30]
mov     eax, ebx
call    sub_10009810
mov     eax, [ebp+var_2c]
mov     [esi+28h], eax
xor     ebx, ebx
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_1005598a
mov     dword ptr [eax+edi*4], 0ffffffffh
mov     edx, [ebp+arg_4]
mov     ecx, [edx+34h]
or      eax, 0ffffffffh
sub     eax, edi
mov     [ebp+var_1c], eax
mov     eax, [ebp+arg_10]
movzx   edi, byte ptr [eax]
mov     eax, [eax+4]
mov     [ebp+var_18], ecx
mov     ecx, [ecx+4]
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_0]
mov     [ebp+var_c], ecx
mov     cl, [eax+13h]
mov     [ebp+var_14], ebx
mov     [ebp+var_28], edi
cmp     cl, bl
jnz     short loc_100559c5
inc     dword ptr [eax+4ch]
mov     edx, [eax+4ch]
jmp     short loc_100559d1
dec     cl
mov     [eax+13h], cl
movzx   ecx, cl
mov     edx, [eax+ecx*4+1ch]
mov     [ebp+var_4], edx
cmp     edi, 5
jz      short loc_10055a01
cmp     edi, 0ah
jz      short loc_10055a01
mov     cl, [eax+13h]
cmp     cl, bl
jnz     short loc_100559f0
inc     dword ptr [eax+4ch]
mov     ecx, [eax+4ch]
mov     [ebp+var_8], ecx
jmp     short loc_10055a55
dec     cl
movzx   edx, cl
mov     [eax+13h], cl
mov     ecx, [eax+edx*4+1ch]
mov     [ebp+var_8], ecx
jmp     short loc_10055a55
mov     edx, [eax+48h]
lea     ecx, [edx+1]
mov     [eax+48h], ecx
mov     ecx, [esi+1ch]
mov     [ebp+var_14], edx
mov     [ebp+var_30], ecx
cmp     [esi+20h], ecx
jg      short loc_10055a2c
mov     edi, esi
call    sub_10025810
test    eax, eax
mov     eax, [ebp+arg_0]
jnz     short loc_10055a52
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_14]
mov     edi, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [ecx+ecx*4]
lea     ecx, [edi+ecx*4]
mov     [ecx+4], edx
mov     edx, [ebp+var_4]
mov     [ecx+8], edx
mov     edx, [ebp+arg_c]
mov     [ecx+3], bl
mov     [ecx+0ch], edx
mov     [ecx+10h], ebx
mov     word ptr [ecx], 2ch
mov     [ebp+var_8], ebx
mov     ecx, [ebp+arg_4]
test    byte ptr [ecx+6], 40h
jz      loc_10055bc5
inc     dword ptr [eax+4ch]
mov     edx, [eax+4ch]
mov     [ebp+var_2c], edx
mov     edx, [eax+48h]
lea     ecx, [edx+1]
mov     [eax+48h], ecx
mov     eax, [ebp+var_18]
mov     ecx, [eax]
mov     eax, [esi+1ch]
add     ecx, 2
mov     [ebp+var_30], edx
mov     [ebp+var_34], ecx
mov     [ebp+var_20], eax
cmp     [esi+20h], eax
jg      short loc_10055aa1
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10055ac4
mov     eax, [ebp+var_20]
mov     ecx, [ebp+var_34]
mov     edx, [ebp+var_30]
mov     edi, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [eax+eax*4]
lea     eax, [edi+eax*4]
mov     [eax+4], edx
mov     edx, [ebp+var_2c]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 2ch
mov     ecx, [esi+1ch]
mov     [ebp+var_34], ecx
cmp     [esi+20h], ecx
jg      short loc_10055ae4
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10055ae1
mov     ecx, 1
jmp     short loc_10055b0a
mov     ecx, [ebp+var_34]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+var_c]
mov     [eax+4], edx
mov     edx, [ebp+var_24]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 46h
mov     eax, [ebp+var_1c]
inc     ecx
mov     [ebp+var_20], ecx
mov     ecx, [ebp+arg_4]
push    eax
push    ecx
mov     eax, esi
call    sub_10054f90
mov     eax, [esi+1ch]
add     esp, 8
mov     [ebp+var_34], eax
cmp     [esi+20h], eax
jg      short loc_10055b39
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10055b5f
mov     eax, [ebp+var_34]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_c]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_2c]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 3eh
mov     eax, [ebp+var_18]
mov     ecx, [eax]
mov     eax, [esi+1ch]
inc     ecx
mov     [ebp+var_2c], ecx
mov     [ebp+var_34], eax
cmp     [esi+20h], eax
jg      short loc_10055b84
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10055baa
mov     eax, [ebp+var_34]
mov     ecx, [ebp+var_2c]
inc     dword ptr [esi+1ch]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_30]
mov     [eax+8], ecx
mov     ecx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 1dh
mov     ecx, [esi+4]
cmp     ecx, ebx
jz      loc_10055c6c
mov     eax, [esi+1ch]
lea     edx, [eax+eax*4]
mov     byte ptr [ecx+edx*4-11h], 20h
jmp     loc_10055c6c
mov     ecx, [esi+1ch]
mov     [ebp+var_34], ecx
cmp     [esi+20h], ecx
jg      short loc_10055be5
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10055be2
mov     ecx, 1
jmp     short loc_10055c0b
mov     ecx, [ebp+var_34]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+var_c]
mov     [eax+4], edx
mov     edx, [ebp+var_24]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 47h
mov     eax, [ebp+var_1c]
inc     ecx
mov     [ebp+var_20], ecx
mov     ecx, [ebp+arg_4]
push    eax
push    ecx
mov     eax, esi
call    sub_10054f90
mov     edx, [ebp+var_18]
mov     ecx, [edx]
mov     eax, [esi+1ch]
inc     ecx
add     esp, 8
mov     [ebp+var_30], ecx
mov     [ebp+var_34], eax
cmp     [esi+20h], eax
jg      short loc_10055c46
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10055c6c
mov     eax, [ebp+var_34]
mov     ecx, [ebp+var_30]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [eax+eax*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+var_c]
mov     [eax+8], ecx
mov     ecx, [ebp+var_4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 1dh
mov     eax, [ebp+var_28]
add     eax, 0fffffffah
cmp     eax, 3
ja      def_10055c7b
jmp     ds:jpt_10055c7b[eax*4]
mov     edi, [ebp+var_8]
mov     edx, [ebp+var_10]
push    edi
push    edx
push    38h
mov     eax, esi
call    sub_10025990
mov     eax, [ebp+var_10]
add     esp, 0ch
push    edi
mov     edi, [ebp+var_4]
push    edi
push    eax
push    39h
mov     eax, esi
call    sub_10025890
mov     eax, [esi+4]
add     esp, 10h
cmp     eax, ebx
jz      loc_10055e45
mov     ecx, [esi+1ch]
lea     ecx, [ecx+ecx*4]
mov     byte ptr [eax+ecx*4-11h], 8
jmp     loc_10055e45
mov     edx, [ebp+arg_4]
mov     eax, [ebp+var_8]
mov     edi, [ebp+var_4]
push    1
add     edx, 5
push    edx
push    eax
push    1
push    edi
push    1fh
mov     eax, esi
call    sub_100259f0
mov     eax, [ebp+arg_0]
mov     ecx, 1
call    sub_100384f0
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_10]
push    ecx
push    edx
push    61h
mov     eax, esi
call    sub_10025990
add     esp, 24h
jmp     loc_10055e45
mov     eax, [ebp+var_10]
mov     esi, [ebp+var_4]
mov     ebx, [ebp+arg_0]
push    1
push    eax
call    sub_10038990
mov     esi, [ebp+arg_8]
add     esp, 8
xor     ebx, ebx
jmp     loc_10055e42
xor     edx, edx
mov     [ebp+arg_8], edx
cmp     [ebp+arg_c], ebx
jle     short loc_10055d9c
mov     ecx, [ebp+arg_10]
mov     ecx, [ecx+8]
mov     eax, [esi+1ch]
add     ecx, edx
mov     [ebp+var_34], ecx
mov     [ebp+var_30], eax
cmp     [esi+20h], eax
jg      short loc_10055d5a
mov     edi, esi
call    sub_10025810
mov     edx, [ebp+arg_8]
test    eax, eax
jnz     short loc_10055d7d
mov     ecx, [ebp+var_34]
mov     eax, [ebp+var_30]
mov     edi, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [eax+eax*4]
lea     eax, [edi+eax*4]
mov     edi, [ebp+var_14]
mov     [eax+3], bl
mov     [eax+4], edi
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 1dh
cmp     edx, ebx
jnz     short loc_10055d93
mov     ecx, [esi+4]
cmp     ecx, ebx
jz      short loc_10055d93
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [ecx+eax*4-11h], 20h
inc     edx
mov     [ebp+arg_8], edx
cmp     edx, [ebp+arg_c]
jl      short loc_10055d30
cmp     [ebp+var_28], 5
jnz     short loc_10055dfd
mov     ecx, [ebp+arg_10]
mov     eax, [esi+1ch]
mov     edx, [ecx+8]
mov     [ebp+var_34], edx
mov     [ebp+arg_8], eax
cmp     [esi+20h], eax
jg      short loc_10055dc4
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10055dea
mov     eax, [ebp+arg_8]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_34]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_c]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 10h
mov     edx, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
mov     edi, [edx+8]
mov     eax, [ebp+arg_0]
call    sub_100384f0
jmp     short loc_10055e42
mov     eax, [ebp+arg_10]
mov     ecx, [eax+4]
mov     eax, [esi+1ch]
mov     [ebp+arg_8], ecx
mov     [ebp+arg_10], eax
cmp     [esi+20h], eax
jg      short loc_10055e1f
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10055e42
mov     eax, [ebp+arg_10]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+arg_8]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4
mov     edi, [ebp+var_4]
mov     edx, [ebp+arg_0]
cmp     edi, ebx
jz      short loc_10055e74
cmp     byte ptr [edx+13h], 8
jnb     short loc_10055e74
xor     eax, eax
lea     ecx, [edx+64h]
cmp     [ecx+10h], edi
jz      loc_10055ef8
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10055e57
movzx   eax, byte ptr [edx+13h]
mov     [edx+eax*4+1ch], edi
inc     byte ptr [edx+13h]
mov     edi, [ebp+var_8]
cmp     edi, ebx
jz      short loc_10055e9f
cmp     byte ptr [edx+13h], 8
jnb     short loc_10055e9f
xor     eax, eax
lea     ecx, [edx+64h]
cmp     [ecx+10h], edi
jz      short loc_10055f01
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10055e86
movzx   ecx, byte ptr [edx+13h]
mov     [edx+ecx*4+1ch], edi
inc     byte ptr [edx+13h]
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_10055eb7
mov     edx, [ebp+var_1c]
lea     ecx, ds:4[edx*4]
mov     edx, [esi+1ch]
sub     eax, ecx
mov     [eax], edx
mov     eax, [ebp+arg_4]
test    byte ptr [eax+6], 40h
mov     eax, [esi+1ch]
mov     [ebp+arg_0], eax
jz      short loc_10055f07
cmp     [esi+20h], eax
jg      short loc_10055ed9
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10055f40
mov     eax, [ebp+arg_0]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_c]
mov     edx, [ebp+var_20]
mov     [eax+4], ecx
mov     [eax+8], edx
mov     word ptr [eax], 51h
jmp     short loc_10055f37
mov     byte ptr [ecx+8], 1
jmp     loc_10055e74
mov     byte ptr [ecx+8], 1
jmp     short loc_10055e9f
cmp     [esi+20h], eax
jg      short loc_10055f1a
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10055f40
mov     eax, [ebp+arg_0]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_c]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_20]
mov     [eax+4], edx
mov     [eax+8], ecx
mov     word ptr [eax], 5fh
mov     [eax+10h], ebx
mov     [eax+0ch], ebx
mov     [eax+3], bl
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_10055f58
mov     edx, [ebp+var_24]
lea     ecx, ds:4[edx*4]
mov     edx, [esi+1ch]
sub     eax, ecx
mov     [eax], edx
mov     eax, [ebp+var_28]
cmp     eax, 5
jz      short loc_10055f65
cmp     eax, 0ah
jnz     short loc_10055fa1
mov     eax, [esi+1ch]
mov     [ebp+arg_0], eax
cmp     [esi+20h], eax
jg      short loc_10055f7e
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10055fa1
mov     eax, [ebp+arg_0]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_14]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 40h
mov     eax, [ebp+arg_4]
xor     edx, edx
push    ebx
push    esi
push    edi
mov     [ebp+var_c], edx
mov     [ebp+var_10], edx
mov     [ebp+var_14], edx
mov     [ebp+var_8], edx
cmp     eax, edx
jz      loc_10056168
mov     edi, [ebp+arg_0]
cmp     [edi+4], edx
jz      loc_10056168
movzx   ecx, byte ptr [eax]
sub     ecx, 74h
jz      loc_1005610e
sub     ecx, 24h
jz      short loc_10056008
sub     ecx, 2
jnz     loc_10056142
movsx   ebx, word ptr [eax+1ch]
xor     ecx, ecx
mov     [ebp+var_18], ecx
mov     [ebp+var_1c], edx
mov     [ebp+var_20], ebx
test    ecx, ecx
jnz     short loc_1005606e
mov     esi, [edi+4]
movsx   edx, word ptr [esi]
xor     eax, eax
test    edx, edx
jle     short loc_10056042
mov     ecx, [ebp+arg_4]
mov     ebx, [ecx+18h]
lea     ecx, [esi+24h]
cmp     [ecx], ebx
jz      short loc_1005603c
inc     eax
add     ecx, 3ch
cmp     eax, edx
jl      short loc_10056030
mov     ecx, [ebp+var_18]
mov     ebx, [ebp+var_20]
cmp     eax, edx
jge     short loc_1005605f
mov     edx, eax
shl     edx, 4
sub     edx, eax
mov     ecx, [esi+edx*4+10h]
lea     eax, [esi+edx*4]
mov     eax, [eax+14h]
mov     [ebp+var_18], ecx
mov     [ebp+var_1c], eax
jmp     short loc_10056062
mov     edi, [edi+10h]
test    edi, edi
jnz     short loc_10056017
test    ecx, ecx
jz      loc_10056142
mov     edx, [ebp+var_1c]
test    edx, edx
jz      short loc_100560b1
test    ebx, ebx
js      loc_10056142
mov     eax, [edx]
cmp     ebx, [eax]
jge     loc_10056142
mov     eax, [eax+8]
lea     ecx, [ebx+ebx*4]
mov     eax, [eax+ecx*4]
mov     ecx, [edx+24h]
mov     edx, [edi]
mov     [ebp+var_3c], ecx
lea     ecx, [ebp+var_8]
push    ecx
mov     [ebp+var_40], edx
lea     edx, [ebp+var_14]
push    edx
lea     ecx, [ebp+var_10]
push    ecx
push    eax
lea     edx, [ebp+var_40]
push    edx
jmp     loc_10056134
cmp     dword ptr [ecx+44h], 0
jz      loc_10056142
test    ebx, ebx
jns     short loc_100560d6
mov     ebx, [ecx+4]
test    ebx, ebx
jns     short loc_100560d6
mov     [ebp+var_c], offset ainteger_1
mov     [ebp+var_8], offset arowid_2
jmp     short loc_100560ea
mov     edx, [ecx+0ch]
lea     eax, [ebx+ebx*2]
lea     eax, [edx+eax*8]
mov     edx, [eax+0ch]
mov     eax, [eax]
mov     [ebp+var_c], edx
mov     [ebp+var_8], eax
mov     edx, [ecx]
mov     [ebp+var_14], edx
mov     edi, [edi]
test    edi, edi
jz      short loc_10056142
mov     edi, [edi]
mov     esi, [ecx+44h]
mov     ecx, edi
call    sub_10053b80
mov     ecx, [edi+10h]
add     eax, eax
mov     edx, [ecx+eax*8]
mov     [ebp+var_10], edx
jmp     short loc_10056142
mov     eax, [eax+10h]
mov     ecx, [eax]
mov     edx, [ecx+8]
mov     ecx, [edx]
mov     eax, [eax+24h]
mov     edx, [edi]
mov     [ebp+var_3c], eax
lea     eax, [ebp+var_8]
push    eax
mov     [ebp+var_40], edx
lea     edx, [ebp+var_14]
push    edx
lea     eax, [ebp+var_10]
push    eax
push    ecx
lea     ecx, [ebp+var_40]
push    ecx
mov     [ebp+var_30], edi
call    sub_10055fc0
mov     [ebp+var_c], eax
add     esp, 14h
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_1005615e
mov     edx, [ebp+var_10]
mov     ecx, [ebp+var_14]
mov     [eax], edx
mov     eax, [ebp+arg_c]
mov     edx, [ebp+arg_10]
mov     [eax], ecx
mov     eax, [ebp+var_8]
mov     [edx], eax
mov     eax, [ebp+var_c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 40h
push    ebx
push    esi
mov     esi, [eax+8]
mov     [ebp+var_40], eax
mov     eax, [ebp+arg_0]
push    edi
xor     ebx, ebx
xor     edi, edi
mov     [ebp+var_8], esi
mov     [ebp+var_3c], ecx
mov     [ebp+var_c], edi
cmp     [eax], ebx
jle     loc_100564f9
mov     [ebp+var_20], ebx
jmp     short loc_100561b2
xor     ebx, ebx
mov     edx, [eax+8]
mov     eax, [ebp+var_20]
mov     eax, [eax+edx]
lea     ecx, [ebp+var_18]
push    ecx
lea     edx, [ebp+var_14]
push    edx
lea     ecx, [ebp+src]
push    ecx
push    eax
lea     edx, [ebp+var_40]
push    edx
mov     [ebp+src], ebx
mov     [ebp+var_14], ebx
mov     [ebp+var_18], ebx
call    sub_10055fc0
mov     [ebp+var_1c], eax
mov     eax, [esi]
add     esp, 14h
cmp     byte ptr [eax+32h], 0
jnz     loc_1005629e
movzx   ecx, word ptr [esi+2ch]
lea     eax, [edi+ecx*2]
lea     edx, [eax+eax*4]
mov     eax, [esi+10h]
lea     edi, [eax+edx*8]
mov     edx, [ebp+src]
cmp     edx, ebx
jnz     short loc_10056245
test    byte ptr [edi+1ch], 40h
jz      short loc_1005621d
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_1005622b
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
jmp     short loc_1005629e
mov     eax, [edi]
cmp     eax, ebx
jz      short loc_10056250
mov     ecx, [eax+48h]
jmp     short loc_10056255
mov     ecx, 3b9aca00h
test    ecx, ecx
js      short loc_1005626b
lea     esp, [esp+0]
cmp     byte ptr [ebx+edx], 0
jz      short loc_1005626b
inc     ebx
cmp     ebx, ecx
jle     short loc_10056260
lea     eax, [ebx+1]
cmp     ebx, ecx
jg      short loc_1005629e
push    0
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_1005629e
mov     edx, [ebp+src]
lea     eax, [ebx+1]
push    eax
mov     eax, [edi+4]
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
mov     edx, [esi]
cmp     byte ptr [edx+32h], 0
jnz     loc_10056360
movzx   ecx, word ptr [esi+2ch]
mov     eax, [ebp+var_c]
mov     edx, [esi+10h]
lea     eax, [eax+ecx*2]
add     eax, ecx
lea     ecx, [eax+eax*4]
lea     edi, [edx+ecx*8]
mov     ecx, [ebp+var_14]
test    ecx, ecx
jnz     short loc_10056308
test    byte ptr [edi+1ch], 40h
jz      short loc_100562e0
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_100562ee
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
jmp     short loc_10056360
mov     eax, [edi]
test    eax, eax
jz      short loc_10056313
mov     eax, [eax+48h]
jmp     short loc_10056318
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_1005632b
mov     edi, edi
cmp     byte ptr [ebx+ecx], 0
jz      short loc_1005632b
inc     ebx
cmp     ebx, eax
jle     short loc_10056320
lea     esi, [ebx+1]
cmp     ebx, eax
jg      short loc_1005635d
push    0
mov     eax, esi
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_1005635d
mov     edx, [ebp+var_14]
mov     eax, [edi+4]
push    esi
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
mov     esi, [ebp+var_8]
mov     edx, [esi]
cmp     byte ptr [edx+32h], 0
jnz     loc_10056420
movzx   eax, word ptr [esi+2ch]
mov     ecx, [ebp+var_c]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_18]
lea     edx, [eax+eax*4]
mov     eax, [esi+10h]
lea     edi, [eax+edx*8]
test    ecx, ecx
jnz     short loc_100563c8
test    byte ptr [edi+1ch], 40h
jz      short loc_100563a0
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_100563ae
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
jmp     short loc_10056420
mov     eax, [edi]
test    eax, eax
jz      short loc_100563d3
mov     eax, [eax+48h]
jmp     short loc_100563d8
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_100563eb
mov     edi, edi
cmp     byte ptr [ebx+ecx], 0
jz      short loc_100563eb
inc     ebx
cmp     ebx, eax
jle     short loc_100563e0
lea     esi, [ebx+1]
cmp     ebx, eax
jg      short loc_1005641d
push    0
mov     eax, esi
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_1005641d
mov     edx, [ebp+var_18]
mov     eax, [edi+4]
push    esi
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
mov     esi, [ebp+var_8]
mov     edx, [esi]
cmp     byte ptr [edx+32h], 0
jnz     loc_100564e3
movzx   eax, word ptr [esi+2ch]
add     eax, [ebp+var_c]
cmp     [ebp+var_1c], 0
mov     ecx, [esi+10h]
lea     eax, [eax+eax*4]
lea     edi, [ecx+eax*8]
jnz     short loc_10056484
test    byte ptr [edi+1ch], 40h
jz      short loc_1005645c
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_1005646a
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     [edi+1ch], ax
mov     byte ptr [edi+1eh], 5
jmp     short loc_100564e3
mov     eax, [edi]
test    eax, eax
jz      short loc_1005648f
mov     eax, [eax+48h]
jmp     short loc_10056494
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_100564ae
lea     ebx, [ebx+0]
mov     edx, [ebp+var_1c]
cmp     byte ptr [ebx+edx], 0
jz      short loc_100564ae
inc     ebx
cmp     ebx, eax
jle     short loc_100564a0
lea     esi, [ebx+1]
cmp     ebx, eax
jg      short loc_100564e0
push    0
mov     eax, esi
call    sub_10024410
add     esp, 4
test    eax, eax
jnz     short loc_100564e0
mov     eax, [ebp+var_1c]
mov     ecx, [edi+4]
push    esi
push    eax
push    ecx
call    memcpy
add     esp, 0ch
mov     [edi+18h], ebx
mov     dword ptr [edi+1ch], 1030202h
mov     esi, [ebp+var_8]
mov     edi, [ebp+var_c]
mov     eax, [ebp+arg_0]
add     [ebp+var_20], 14h
inc     edi
mov     [ebp+var_c], edi
cmp     edi, [eax]
jl      loc_100561b0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+1d4h], 0
mov     eax, [esi]
push    edi
mov     edi, [esi+8]
mov     [ebp+var_4], edi
mov     [ebp+var_8], eax
jnz     loc_10056690
cmp     byte ptr [esi+10h], 0
jnz     loc_10056690
test    edi, edi
jz      loc_10056690
cmp     byte ptr [eax+32h], 0
jnz     loc_10056690
mov     ebx, [ebp+arg_8]
mov     byte ptr [esi+10h], 1
mov     eax, [eax+18h]
mov     ecx, eax
shr     eax, 0bh
and     eax, 1
shr     ecx, 0ah
and     ecx, 1
mov     [ebp+var_14], eax
mov     eax, [ebx]
mov     [ebp+var_c], ecx
call    sub_10026ff0
xor     edi, edi
cmp     [ebx], edi
jle     loc_10056682
xor     eax, eax
mov     [ebp+var_10], eax
add     eax, [ebx+8]
mov     ecx, [eax]
mov     [ebp+var_18], eax
test    ecx, ecx
jz      loc_1005666a
mov     edx, [eax+4]
test    edx, edx
jz      short loc_10056593
push    0ffffffffh
push    edx
jmp     loc_1005665c
mov     dl, [ecx]
cmp     dl, 98h
jz      short loc_100565a3
cmp     dl, 9ah
jnz     loc_10056646
mov     edx, [ebp+arg_4]
test    edx, edx
jz      loc_10056646
movsx   ebx, word ptr [edx]
movsx   esi, word ptr [ecx+1ch]
xor     eax, eax
test    ebx, ebx
jle     short loc_100565d0
mov     ecx, [ecx+18h]
add     edx, 24h
cmp     [edx], ecx
jz      short loc_100565cd
inc     eax
add     edx, 3ch
cmp     eax, ebx
jl      short loc_100565c1
mov     edx, [ebp+arg_4]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
mov     ecx, [edx+ecx*4+10h]
test    esi, esi
jns     short loc_100565ed
mov     esi, [ecx+4]
test    esi, esi
jns     short loc_100565ed
mov     eax, offset arowid_2
jmp     short loc_100565f6
mov     eax, [ecx+0ch]
lea     edx, [esi+esi*2]
mov     eax, [eax+edx*8]
cmp     [ebp+var_14], 0
jnz     short loc_10056614
cmp     [ebp+var_c], 0
jnz     short loc_1005661a
mov     edx, [ebp+var_18]
mov     ebx, [edx+8]
push    offset sub_10009760
push    ecx
mov     ecx, [ebp+var_8]
push    ecx
jmp     short loc_10056653
cmp     [ebp+var_c], 0
jz      short loc_10056642
push    eax
mov     eax, [ecx]
mov     ecx, [ebp+var_8]
push    eax
push    offset ass_6
push    ecx
call    sub_1000ae80
mov     ecx, [ebp+var_4]
push    offset sub_10009760
push    eax
push    0
push    edi
call    sub_10027070
add     esp, 20h
jmp     short loc_1005666a
push    0ffffffffh
jmp     short loc_1005665b
mov     edx, [ebp+var_8]
mov     ebx, [eax+8]
push    offset sub_10009760
push    ecx
push    edx
call    sub_10009b70
add     esp, 8
push    eax
mov     ecx, [ebp+var_4]
push    0
push    edi
call    sub_10027070
add     esp, 10h
mov     eax, [ebp+var_10]
mov     ebx, [ebp+arg_8]
inc     edi
add     eax, 14h
mov     [ebp+var_10], eax
cmp     edi, [ebx]
jl      loc_10056574
mov     esi, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
push    ebx
mov     eax, esi
call    sub_10056180
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [eax]
xor     eax, eax
push    edi
cmp     ebx, eax
jz      short loc_100566e9
mov     edi, [ebx]
lea     ebx, [edi+edi*2]
add     ebx, ebx
add     ebx, ebx
add     ebx, ebx
mov     ecx, ebx
mov     [ebp+var_18], edi
call    sub_10009a40
mov     [ebp+var_24], eax
test    eax, eax
jz      short loc_100566df
push    ebx
push    0
push    eax
call    memset
mov     eax, [ebp+var_24]
add     esp, 0ch
mov     ebx, [ebp+arg_0]
mov     ecx, eax
mov     [ebp+var_8], ecx
jmp     short loc_100566f3
mov     [ebp+var_18], eax
mov     [ebp+var_8], eax
mov     edi, eax
mov     ecx, eax
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_8]
mov     [edx], edi
xor     edx, edx
mov     [eax], ecx
mov     [ebp+var_c], edx
mov     [ebp+var_24], ecx
cmp     edi, edx
jle     loc_10056927
mov     [ebp+var_14], edx
jmp     short loc_10056718
mov     edx, [ebp+var_14]
mov     ebx, [ebp+arg_0]
mov     ecx, [ebx+8]
mov     edi, [ecx+edx+4]
mov     eax, [ecx+edx]
add     ecx, edx
test    edi, edi
jz      short loc_10056760
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_10056736
nop
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10056730
sub     eax, edi
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [ebp+size], ecx
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1005675c
mov     edx, [ebp+size]
push    edx
push    edi
push    ebx
call    memcpy
add     esp, 0ch
mov     edi, ebx
jmp     short loc_100567c3
cmp     byte ptr [eax], 76h
jnz     short loc_1005676d
mov     eax, [eax+0ch]
cmp     byte ptr [eax], 76h
jz      short loc_10056765
mov     cl, [eax]
cmp     cl, 98h
jnz     short loc_100567a0
mov     ecx, [eax+28h]
test    ecx, ecx
jz      short loc_1005679e
movsx   eax, word ptr [eax+1ch]
test    eax, eax
jns     short loc_1005678a
mov     eax, [ecx+4]
test    eax, eax
js      short loc_10056796
mov     ecx, [ecx+0ch]
lea     eax, [eax+eax*2]
mov     eax, [ecx+eax*8]
push    eax
jmp     short loc_100567b3
mov     eax, offset arowid_2
push    eax
jmp     short loc_100567b3
mov     cl, [eax]
cmp     cl, 1ah
jnz     short loc_100567ab
mov     edx, [eax+4]
push    edx
jmp     short loc_100567b3
mov     eax, [ebx+8]
mov     ecx, [edx+eax+8]
push    ecx
push    offset as
push    esi
call    sub_1000ae80
add     esp, 0ch
mov     edi, eax
cmp     byte ptr [esi+32h], 0
mov     eax, edi
jnz     loc_1005691d
xor     ebx, ebx
cmp     edi, ebx
jnz     short loc_100567da
mov     [ebp+var_1c], ebx
jmp     short loc_100567ef
cmp     [edi], bl
jz      short loc_100567e5
mov     edi, edi
inc     eax
cmp     [eax], bl
jnz     short loc_100567e0
sub     eax, edi
and     eax, 3fffffffh
mov     [ebp+var_1c], eax
mov     [ebp+size], ebx
mov     [ebp+var_10], ebx
cmp     [ebp+var_c], ebx
jle     loc_100568fc
mov     edi, edi
mov     eax, [ebp+var_8]
lea     edx, [ebx+ebx*2]
mov     ecx, [eax+edx*8]
mov     al, [ecx]
mov     edx, edi
test    al, al
jz      short loc_10056831
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_1005682e
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_10056811
mov     ebx, [ebp+var_10]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jnz     loc_100568ef
mov     eax, [ebp+var_1c]
mov     [eax+edi], dl
mov     eax, [ebp+size]
inc     eax
push    eax
push    edi
push    offset asd_0
push    esi
mov     [ebp+size], eax
call    sub_1000ae80
add     esp, 10h
cmp     dword ptr [esi+1e8h], 0
mov     ebx, eax
mov     [ebp+var_10], ebx
jz      short loc_100568b1
test    edi, edi
jz      short loc_1005689d
cmp     edi, [esi+0fch]
jb      short loc_1005689d
cmp     edi, [esi+100h]
jnb     short loc_1005689d
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_100568e4
push    edi
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_100568e4
test    edi, edi
jz      short loc_100568db
cmp     edi, [esi+0fch]
jb      short loc_100568db
cmp     edi, [esi+100h]
jnb     short loc_100568db
mov     ecx, [esi+0f8h]
mov     [edi], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], edi
jmp     short loc_100568e4
push    edi
call    sub_10009770
add     esp, 4
mov     edi, ebx
or      ebx, 0ffffffffh
cmp     [ebp+var_10], 0
jz      short loc_100568fc
inc     ebx
mov     [ebp+var_10], ebx
cmp     ebx, [ebp+var_c]
jl      loc_10056800
mov     eax, [ebp+var_24]
mov     ecx, [ebp+var_c]
add     [ebp+var_14], 14h
inc     ecx
mov     [eax], edi
add     eax, 18h
mov     [ebp+var_c], ecx
mov     [ebp+var_24], eax
cmp     ecx, [ebp+var_18]
jl      loc_10056712
jmp     short loc_10056924
mov     ecx, esi
call    sub_10009810
mov     ecx, [ebp+var_8]
cmp     byte ptr [esi+32h], 0
jz      loc_10056a51
mov     ebx, [ebp+var_c]
test    ebx, ebx
jle     loc_100569be
mov     edi, ecx
cmp     dword ptr [esi+1e8h], 0
mov     eax, [edi]
jz      short loc_10056982
test    eax, eax
jz      short loc_1005696e
cmp     eax, [esi+0fch]
jb      short loc_1005696e
cmp     eax, [esi+100h]
jnb     short loc_1005696e
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_100569b5
push    eax
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_100569b5
test    eax, eax
jz      short loc_100569ac
cmp     eax, [esi+0fch]
jb      short loc_100569ac
cmp     eax, [esi+100h]
jnb     short loc_100569ac
mov     edx, [esi+0f8h]
mov     [eax], edx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
jmp     short loc_100569b8
push    eax
call    sub_10009770
add     esp, 4
mov     ecx, [ebp+var_8]
add     edi, 18h
dec     ebx
jnz     short loc_1005693e
cmp     dword ptr [esi+1e8h], 0
jz      short loc_10056a00
test    ecx, ecx
jz      short loc_100569ec
cmp     ecx, [esi+0fch]
jb      short loc_100569ec
cmp     ecx, [esi+100h]
jnb     short loc_100569ec
movzx   eax, word ptr [esi+0e0h]
mov     esi, [esi+1e8h]
add     [esi], eax
jmp     short loc_10056a33
push    ecx
call    dword_10080258
mov     esi, [esi+1e8h]
add     esp, 4
add     [esi], eax
jmp     short loc_10056a33
test    ecx, ecx
jz      short loc_10056a2a
cmp     ecx, [esi+0fch]
jb      short loc_10056a2a
cmp     ecx, [esi+100h]
jnb     short loc_10056a2a
mov     eax, [esi+0f8h]
mov     [ecx], eax
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], ecx
jmp     short loc_10056a33
push    ecx
call    sub_10009770
add     esp, 4
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
mov     dword ptr [ecx], 0
mov     dword ptr [edx], 0
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 34h
mov     eax, [ebp+arg_0]
mov     eax, [eax]
cmp     byte ptr [eax+32h], 0
push    ebx
push    esi
push    edi
mov     [ebp+var_c], eax
jnz     loc_10056b9a
xor     eax, eax
mov     [ebp+var_30], eax
mov     [ebp+var_34], eax
mov     [ebp+var_2c], eax
mov     [ebp+var_28], eax
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
mov     [ebp+var_1c], eax
mov     [ebp+var_18], eax
mov     eax, [edx+24h]
mov     edx, [edx]
mov     [ebp+var_30], eax
mov     eax, [edx+8]
test    ecx, ecx
jle     loc_10056b9a
mov     esi, [ebp+arg_4]
add     esi, 16h
mov     [ebp+var_4], esi
mov     [ebp+var_8], eax
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_8]
mov     ebx, [eax]
push    0
push    0
push    0
lea     ecx, [ebp+var_34]
push    ebx
push    ecx
mov     [ebp+size], ebx
call    sub_10055fc0
mov     edi, eax
add     esp, 14h
test    edi, edi
jz      short loc_10056b13
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_10056ae6
nop
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10056ae0
mov     esi, [ebp+var_c]
sub     eax, edi
and     eax, 3fffffffh
lea     ebx, [eax+1]
mov     ecx, ebx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10056b0b
push    ebx
push    edi
push    esi
call    memcpy
add     esp, 0ch
mov     ebx, [ebp+size]
mov     eax, esi
mov     esi, [ebp+var_4]
mov     [esi-0ah], eax
mov     eax, ebx
call    sub_100357e0
mov     [esi], al
test    al, al
jnz     short loc_10056b26
mov     byte ptr [esi], 62h
mov     edx, [ebp+arg_0]
push    edx
mov     eax, ebx
call    sub_100358d0
add     esp, 4
test    eax, eax
jz      short loc_10056b87
mov     ebx, [eax]
test    ebx, ebx
jnz     short loc_10056b42
xor     edi, edi
jmp     short loc_10056b7f
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_10056b56
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10056b50
mov     esi, [ebp+var_c]
sub     eax, ebx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [ebp+size], ecx
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10056b7f
mov     eax, [ebp+size]
push    eax
push    ebx
push    edi
call    memcpy
add     esp, 0ch
mov     ecx, [ebp+var_4]
mov     [ecx-6], edi
mov     esi, ecx
add     [ebp+var_8], 14h
add     esi, 18h
dec     [ebp+var_10]
mov     [ebp+var_4], esi
jnz     loc_10056ab7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi]
mov     ebx, eax
mov     eax, [esi+18h]
mov     [ebp+var_4], eax
push    0
and     eax, 0fffffbffh
or      eax, 800h
push    ebx
push    edi
mov     [esi+18h], eax
call    sub_1005acf0
add     esp, 0ch
cmp     dword ptr [edi+44h], 0
jnz     loc_10056c74
mov     eax, [ebx+38h]
test    eax, eax
jz      short loc_10056bf9
mov     ebx, eax
mov     eax, [ebx+38h]
test    eax, eax
jnz     short loc_10056bf0
mov     eax, [ebp+var_4]
mov     ecx, 4ch
mov     [esi+18h], eax
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_10056c74
push    4ch
push    0
push    edi
call    memset
add     esp, 0ch
mov     ecx, 1
mov     [edi+20h], cx
lea     eax, [edi+0ch]
push    eax
mov     eax, [ebp+arg_0]
lea     ecx, [edi+8]
mov     dword ptr [edi], 0
mov     dword ptr [edi+18h], 0f4240h
mov     edx, [ebx]
push    ecx
push    edx
call    sub_100566a0
mov     eax, [edi+0ch]
mov     ecx, [ebp+arg_0]
add     esp, 0ch
push    eax
push    ecx
mov     ecx, [edi+8]
mov     edx, ebx
call    sub_10056a60
add     esp, 8
mov     dword ptr [edi+4], 0ffffffffh
cmp     byte ptr [esi+32h], 0
jz      short loc_10056c7d
push    edi
push    esi
call    sub_1003fba0
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+8]
push    ebx
xor     ebx, ebx
push    esi
push    edi
cmp     eax, ebx
jnz     short loc_10056d1f
mov     esi, [ecx]
mov     ecx, 0c0h
call    sub_10009a40
mov     edi, eax
cmp     edi, ebx
jz      short loc_10056d24
push    0c0h
push    ebx
push    edi
call    memset
mov     [edi], esi
mov     eax, [esi+4]
add     esp, 0ch
cmp     eax, ebx
jz      short loc_10056ccf
mov     [eax+38h], edi
mov     eax, [esi+4]
mov     [edi+3ch], eax
mov     [edi+38h], ebx
mov     [esi+4], edi
mov     dword ptr [edi+30h], 26bceaa5h
mov     ecx, [ebp+arg_0]
mov     [ecx+8], edi
cmp     edi, ebx
jz      short loc_10056d1d
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10056cfd
call    sub_10025810
test    eax, eax
jnz     short loc_10056d1d
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 94h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
xor     edi, edi
jmp     short loc_10056ce2
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     dword ptr [edi+8], 0
mov     ebx, eax
jnz     loc_10056e9c
call    sub_100388c0
cmp     dword ptr [edi+44h], 0
jz      loc_10056e9c
inc     dword ptr [ebx+4ch]
mov     esi, [ebx+4ch]
push    ebx
mov     [ebp+var_8], esi
mov     [edi+8], esi
call    sub_10056c90
mov     edi, eax
add     esp, 4
test    edi, edi
jz      loc_10056e9c
mov     eax, [ebp+arg_0]
mov     eax, [eax+44h]
lea     ecx, [ebp+var_4]
push    ecx
push    eax
call    sub_100371f0
add     esp, 8
test    eax, eax
jz      short loc_10056dcd
mov     edx, [ebp+var_4]
push    esi
push    edx
push    7
mov     eax, edi
call    sub_10025990
add     esp, 0ch
cmp     [ebp+var_4], 0
jnz     short loc_10056db8
mov     eax, [ebp+arg_4]
push    eax
push    0
push    1
mov     eax, edi
call    sub_10025990
add     esp, 0ch
jmp     short loc_10056df9
fild    [ebp+var_4]
mov     ecx, [ebp+arg_0]
fcom    qword ptr [ecx+1ch]
fnstsw  ax
test    ah, 5
jp      short loc_10056df7
fstp    qword ptr [ecx+1ch]
jmp     short loc_10056df9
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+44h]
mov     ecx, ebx
call    sub_100399d0
push    esi
push    15h
mov     eax, edi
call    sub_10025940
mov     edx, [ebp+arg_4]
push    edx
push    esi
push    7ah
mov     eax, edi
call    sub_10025990
add     esp, 14h
jmp     short loc_10056df9
fstp    st
mov     eax, [ebp+arg_0]
cmp     dword ptr [eax+48h], 0
jz      loc_10056e9c
inc     dword ptr [ebx+4ch]
mov     esi, [ebx+4ch]
mov     ecx, eax
mov     [ecx+0ch], esi
inc     dword ptr [ebx+4ch]
mov     edx, eax
mov     eax, [edx+48h]
mov     ecx, ebx
call    sub_100399d0
push    esi
push    15h
mov     eax, edi
call    sub_10025940
push    esi
push    78h
mov     eax, edi
call    sub_10025940
push    esi
mov     ebx, eax
push    0
push    7
mov     eax, edi
call    sub_10025990
add     esp, 1ch
test    ebx, ebx
js      short loc_10056e5a
mov     eax, [edi+1ch]
cmp     eax, ebx
jbe     short loc_10056e5a
mov     edx, [edi+4]
lea     ecx, [ebx+ebx*4]
mov     [edx+ecx*4+8], eax
lea     ebx, [esi+1]
push    ebx
push    esi
mov     esi, [ebp+var_8]
push    esi
push    56h
mov     eax, edi
call    sub_10025890
push    esi
push    78h
mov     eax, edi
call    sub_10025940
push    ebx
mov     esi, eax
push    0ffffffffh
push    7
mov     eax, edi
call    sub_10025990
add     esp, 24h
test    esi, esi
js      short loc_10056e9c
mov     eax, [edi+1ch]
cmp     eax, esi
jbe     short loc_10056e9c
mov     edx, [edi+4]
lea     ecx, [esi+esi*4]
mov     [edx+ecx*4+8], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
mov     eax, [ebx+38h]
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [ebp+arg_0]
test    eax, eax
jz      short loc_10056ef2
push    esi
push    eax
push    edi
call    sub_10056eb0
add     esp, 0ch
test    eax, eax
jnz     short loc_10056eed
mov     ecx, [ebx]
cmp     esi, [ecx]
jge     short loc_10056eed
mov     ecx, [ecx+8]
lea     eax, [esi+esi*4]
mov     eax, [ecx+eax*4]
push    edi
call    sub_100358d0
add     esp, 4
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
xor     eax, eax
jmp     short loc_10056ed5
push    ebp
mov     ebp, esp
sub     esp, 68h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
push    ebx
push    esi
mov     esi, ecx
mov     eax, [esi]
push    edi
mov     edi, [ebp+arg_0]
mov     ecx, [edi]
mov     ebx, edx
mov     edx, [edi+4]
mov     [ebp+var_18], ecx
mov     ecx, [edi+8]
mov     [ebp+var_14], edx
mov     edx, [edi+0ch]
mov     [ebp+var_54], eax
mov     eax, [ebx+38h]
mov     [ebp+var_10], ecx
mov     [ebp+var_c], edx
cmp     dword ptr [eax+34h], 0
mov     [ebp+var_60], esi
mov     [ebp+var_5c], edi
mov     [ebp+var_64], 0
mov     [ebp+var_3c], eax
jz      short loc_10056f93
movzx   eax, byte ptr [ebx+4]
sub     eax, 71h
jz      short loc_10056f73
dec     eax
jz      short loc_10056f6c
dec     eax
jz      short loc_10056f65
mov     eax, offset aunion
jmp     short loc_10056f78
mov     eax, offset aintersect
jmp     short loc_10056f78
mov     eax, offset aexcept
jmp     short loc_10056f78
mov     eax, offset aunionall
push    eax
push    offset aorderbyclauses
push    esi
call    sub_1000bb30
add     esp, 0ch
mov     [ebp+var_4c], 1
jmp     loc_1005763f
cmp     dword ptr [eax+44h], 0
jz      short loc_10056fdc
movzx   eax, byte ptr [ebx+4]
sub     eax, 71h
jz      short loc_10056fcf
dec     eax
jz      short loc_10056fc2
dec     eax
jz      short loc_10056fb5
mov     eax, offset aunion
push    eax
push    offset alimitclausesho
jmp     short loc_10056f7e
mov     eax, offset aintersect
push    eax
push    offset alimitclausesho
jmp     short loc_10056f7e
mov     eax, offset aexcept
push    eax
push    offset alimitclausesho
jmp     short loc_10056f7e
mov     eax, offset aunionall
push    eax
push    offset alimitclausesho
jmp     short loc_10056f7e
push    esi
call    sub_10056c90
add     esp, 4
cmp     byte ptr [ebp+var_18], 9
mov     edi, eax
mov     [ebp+var_68], edi
jnz     short loc_1005701b
mov     eax, [ebx]
mov     ecx, [eax]
mov     edx, [ebp+var_14]
push    ecx
push    edx
push    2ah
mov     eax, edi
call    sub_10025990
mov     eax, [edi+4]
add     esp, 0ch
test    eax, eax
jz      short loc_10057017
mov     ecx, [edi+1ch]
lea     ecx, [ecx+ecx*4]
mov     byte ptr [eax+ecx*4-11h], 8
mov     byte ptr [ebp+var_18], 8
mov     edx, [ebx]
mov     eax, [ebp+var_3c]
mov     ecx, [eax]
mov     edx, [edx]
cmp     edx, [ecx]
jz      short loc_1005706c
test    byte ptr [ebx+6], 80h
jz      short loc_10057048
push    offset aallvaluesmusth
push    esi
call    sub_1000bb30
add     esp, 8
mov     [ebp+var_4c], 1
jmp     loc_1005763c
movzx   eax, byte ptr [ebx+4]
call    sub_100556a0
push    eax
push    offset aselectstothele
push    esi
call    sub_1000bb30
add     esp, 0ch
mov     [ebp+var_4c], 1
jmp     loc_1005763c
xor     edx, edx
cmp     [ebx+34h], edx
jz      short loc_10057092
mov     ecx, [ebp+var_5c]
push    esi
mov     edx, ebx
call    sub_10057b40
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
movzx   ecx, byte ptr [ebx+4]
sub     ecx, 70h
jz      loc_1005736d
dec     ecx
jz      loc_10057299
dec     ecx
jz      loc_1005736d
mov     eax, [esi+48h]
push    edx
push    eax
lea     ecx, [eax+2]
mov     [ebp+var_44], eax
push    2ah
mov     eax, edi
mov     [esi+48h], ecx
call    sub_10025990
mov     edx, [ebp+var_44]
mov     [ebx+10h], eax
mov     eax, [ebx+40h]
or      word ptr [eax+6], 8
add     esp, 0ch
xor     eax, eax
lea     ecx, [ebp+var_38]
mov     [ebp+var_34], edx
mov     edx, [ebp+var_3c]
push    ecx
mov     [ebp+var_30], eax
mov     [ebp+var_2c], eax
mov     eax, [esi+1e8h]
push    edx
push    esi
mov     [ebp+var_38], 1
mov     [ebp+var_58], eax
call    sub_1005b870
add     esp, 0ch
mov     [ebp+var_4c], eax
test    eax, eax
jnz     loc_1005763c
push    eax
mov     eax, [ebp+var_44]
inc     eax
push    eax
push    2ah
mov     eax, edi
call    sub_10025990
mov     ecx, [ebx+44h]
mov     edx, [ebx+48h]
mov     [ebx+14h], eax
xor     eax, eax
mov     [ebx+38h], eax
mov     [ebx+44h], eax
mov     [ebx+48h], eax
mov     eax, [ebp+var_44]
add     esp, 0ch
mov     [ebp+var_40], ecx
lea     ecx, [ebp+var_38]
inc     eax
push    ecx
mov     [ebp+var_34], eax
mov     eax, [esi+1e8h]
push    ebx
push    esi
mov     [ebp+var_50], edx
mov     [ebp+var_48], eax
call    sub_1005b870
mov     ecx, [ebp+var_3c]
mov     edx, [ebx+38h]
mov     [ebx+38h], ecx
fld     qword ptr [ecx+1ch]
fcomp   qword ptr [ebx+1ch]
mov     [ebp+var_4c], eax
add     esp, 0ch
mov     [ebp+var_64], edx
fnstsw  ax
test    ah, 5
jp      short loc_10057177
fld     qword ptr [ecx+1ch]
fstp    qword ptr [ebx+1ch]
mov     eax, [ebx+44h]
mov     ecx, [ebp+var_54]
push    eax
push    ecx
call    sub_10036430
mov     edx, [ebp+var_40]
mov     eax, [ebp+var_50]
add     esp, 8
cmp     byte ptr [ebp+var_18], 5
mov     [ebx+44h], edx
mov     [ebx+48h], eax
jnz     short loc_100571b9
mov     eax, [ebx+38h]
mov     ecx, ebx
test    eax, eax
jz      short loc_100571ab
mov     ecx, eax
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_100571a2
mov     ecx, [ecx]
push    ecx
push    0
push    esi
call    sub_10056500
add     esp, 0ch
mov     eax, edi
call    sub_10025c00
mov     [ebp+var_3c], eax
mov     eax, edi
call    sub_10025c00
mov     edx, [ebp+var_3c]
push    edx
mov     [ebp+var_40], eax
push    ebx
mov     eax, esi
call    sub_10056d30
mov     eax, [ebp+var_3c]
mov     ecx, [ebp+var_44]
push    eax
push    ecx
push    48h
mov     eax, edi
call    sub_10025990
add     esp, 14h
mov     ecx, esi
call    sub_1003abf0
mov     edx, [ebp+var_44]
mov     esi, eax
push    esi
push    edx
push    3fh
mov     eax, edi
call    sub_10025990
add     esp, 0ch
mov     [ebp+var_50], eax
mov     eax, [ebp+var_40]
push    0
push    esi
push    eax
mov     eax, [ebp+var_44]
inc     eax
push    eax
push    33h
mov     eax, edi
call    sub_10025b50
mov     edx, [ebp+var_60]
add     esp, 14h
call    sub_1003ac10
mov     ecx, [ebp+var_3c]
mov     edx, [ebp+var_40]
mov     eax, [ebx]
mov     esi, [ebp+var_44]
push    ecx
push    edx
mov     edx, [eax]
lea     ecx, [ebp+var_18]
push    ecx
push    0ffffffffh
push    0
push    edx
push    esi
push    eax
mov     eax, [ebp+var_60]
push    ebx
push    eax
call    sub_10055190
mov     edx, [ebp+var_40]
mov     ecx, edi
call    sub_10025c70
mov     ecx, [ebp+var_50]
push    ecx
push    esi
push    5fh
mov     eax, edi
call    sub_10025990
mov     edx, [ebp+var_3c]
add     esp, 34h
mov     ecx, edi
call    sub_10025c70
push    0
lea     eax, [esi+1]
push    eax
push    2dh
mov     eax, edi
call    sub_10025990
add     esp, 0ch
push    0
push    esi
push    2dh
mov     eax, edi
call    sub_10025990
mov     esi, [ebp+var_60]
jmp     loc_10057538
mov     [ebp+var_40], edx
mov     edx, [ebx+44h]
mov     [eax+44h], edx
mov     ecx, [ebx+48h]
mov     [eax+48h], ecx
mov     edx, [esi+1e8h]
lea     ecx, [ebp+var_18]
push    ecx
push    eax
push    esi
mov     [ebp+var_58], edx
call    sub_1005b870
xor     ecx, ecx
add     esp, 0ch
mov     [ebp+var_4c], eax
mov     [ebx+44h], ecx
mov     [ebx+48h], ecx
cmp     eax, ecx
jnz     loc_1005763c
mov     eax, [ebp+var_3c]
mov     [ebx+38h], ecx
mov     edx, [eax+8]
mov     [ebx+8], edx
mov     eax, [eax+0ch]
mov     [ebx+0ch], eax
mov     eax, edx
test    eax, eax
jz      short loc_100572fa
push    eax
push    7ah
mov     eax, edi
call    sub_10025940
add     esp, 8
mov     [ebp+var_40], eax
mov     ecx, [esi+1e8h]
lea     edx, [ebp+var_18]
push    edx
push    ebx
push    esi
mov     [ebp+var_48], ecx
call    sub_1005b870
mov     [ebp+var_4c], eax
mov     eax, [ebx+38h]
mov     [ebp+var_64], eax
mov     eax, [ebp+var_3c]
mov     [ebx+38h], eax
fld     qword ptr [eax+1ch]
fadd    qword ptr [ebx+1ch]
add     esp, 0ch
fst     qword ptr [ebx+1ch]
mov     eax, [eax+44h]
test    eax, eax
jz      short loc_10057354
lea     ecx, [ebp+var_50]
push    ecx
push    eax
call    sub_100371f0
add     esp, 8
test    eax, eax
jz      short loc_10057354
fild    [ebp+var_50]
fcom    st(1)
fnstsw  ax
fstp    st(1)
test    ah, 5
jp      short loc_10057354
fstp    qword ptr [ebx+1ch]
jmp     short loc_10057356
fstp    st
mov     eax, [ebp+var_40]
test    eax, eax
jz      loc_1005753b
mov     edx, edi
call    sub_10025e30
jmp     loc_1005753b
cmp     byte ptr [ebp+var_18], 1
jnz     short loc_10057385
cmp     [ebx+44h], edx
jnz     short loc_10057385
cmp     [ebx+48h], edx
jnz     short loc_10057385
mov     ecx, [ebp+var_14]
mov     [ebp+var_44], ecx
jmp     short loc_100573af
mov     eax, [esi+48h]
push    edx
push    eax
lea     ecx, [eax+1]
mov     [ebp+var_44], eax
push    2ah
mov     eax, edi
mov     [esi+48h], ecx
call    sub_10025990
mov     [ebx+10h], eax
mov     eax, [ebx+40h]
or      word ptr [eax+6], 8
mov     eax, [ebp+var_3c]
add     esp, 0ch
xor     edx, edx
mov     ecx, [ebp+var_44]
mov     [ebp+var_24], ecx
lea     ecx, [ebp+var_28]
push    ecx
mov     [ebp+var_20], edx
mov     [ebp+var_1c], edx
mov     edx, [esi+1e8h]
push    eax
push    esi
mov     [ebp+var_28], 1
mov     [ebp+var_58], edx
call    sub_1005b870
add     esp, 0ch
mov     [ebp+var_4c], eax
test    eax, eax
jnz     loc_1005763c
cmp     byte ptr [ebx+4], 72h
mov     edx, [ebx+44h]
setz    al
xor     ecx, ecx
mov     [ebp+var_50], edx
mov     edx, [ebx+48h]
mov     [ebx+38h], ecx
mov     [ebx+44h], ecx
mov     [ebx+48h], ecx
lea     ecx, [ebp+var_28]
inc     al
push    ecx
mov     byte ptr [ebp+var_28], al
mov     eax, [esi+1e8h]
push    ebx
push    esi
mov     [ebp+var_40], edx
mov     [ebp+var_48], eax
call    sub_1005b870
mov     edx, [ebx+34h]
add     esp, 0ch
mov     [ebp+var_4c], eax
mov     eax, [ebp+var_54]
push    edx
push    eax
call    sub_10037020
mov     ecx, [ebx+38h]
mov     eax, [ebp+var_3c]
add     esp, 8
cmp     byte ptr [ebx+4], 70h
mov     [ebp+var_64], ecx
mov     [ebx+38h], eax
mov     dword ptr [ebx+34h], 0
jnz     short loc_10057452
fld     qword ptr [eax+1ch]
fadd    qword ptr [ebx+1ch]
fstp    qword ptr [ebx+1ch]
mov     edx, [ebx+44h]
mov     eax, [ebp+var_54]
push    edx
push    eax
call    sub_10036430
mov     edx, [ebp+var_40]
mov     al, byte ptr [ebp+var_18]
mov     ecx, [ebp+var_50]
mov     [ebx+48h], edx
xor     edx, edx
add     esp, 8
mov     [ebx+44h], ecx
mov     [ebx+8], edx
mov     [ebx+0ch], edx
cmp     al, 1
jz      loc_1005753b
cmp     al, 5
jnz     short loc_100574a6
mov     eax, [ebx+38h]
mov     ecx, ebx
cmp     eax, edx
jz      short loc_10057499
mov     edi, edi
mov     ecx, eax
mov     eax, [ecx+38h]
cmp     eax, edx
jnz     short loc_10057490
mov     eax, [ecx]
push    eax
push    edx
push    esi
call    sub_10056500
add     esp, 0ch
mov     eax, edi
call    sub_10025c00
mov     [ebp+var_3c], eax
mov     eax, edi
call    sub_10025c00
mov     ecx, [ebp+var_3c]
push    ecx
mov     [ebp+var_40], eax
push    ebx
mov     eax, esi
call    sub_10056d30
mov     edx, [ebp+var_3c]
mov     eax, [ebp+var_44]
push    edx
push    eax
push    48h
mov     eax, edi
call    sub_10025990
mov     ecx, [edi+1ch]
mov     edx, [ebp+var_3c]
mov     eax, [ebx]
add     esp, 14h
push    edx
mov     [ebp+var_50], ecx
mov     ecx, [ebp+var_40]
push    ecx
mov     ecx, [eax]
lea     edx, [ebp+var_18]
push    edx
mov     edx, [ebp+var_44]
push    0ffffffffh
push    0
push    ecx
push    edx
push    eax
push    ebx
push    esi
call    sub_10055190
mov     edx, [ebp+var_40]
mov     ecx, edi
call    sub_10025c70
mov     eax, [ebp+var_50]
mov     ecx, [ebp+var_44]
push    eax
push    ecx
push    5fh
mov     eax, edi
call    sub_10025990
mov     edx, [ebp+var_3c]
add     esp, 34h
mov     ecx, edi
call    sub_10025c70
mov     edx, [ebp+var_44]
push    0
push    edx
push    2dh
mov     eax, edi
call    sub_10025990
add     esp, 0ch
mov     al, [ebx+4]
mov     edx, [ebp+var_48]
xor     ecx, ecx
cmp     al, 71h
setnz   cl
movzx   eax, al
push    ecx
mov     ecx, [ebp+var_58]
push    edx
push    ecx
mov     ecx, esi
call    sub_100557b0
add     esp, 0ch
test    byte ptr [ebx+6], 8
jz      loc_1005763c
mov     edx, [ebx]
mov     eax, [edx]
mov     [ebp+var_58], eax
lea     edi, [eax+eax*4+10h]
mov     eax, [ebp+var_54]
call    sub_10009a20
mov     esi, eax
mov     [ebp+var_40], esi
test    esi, esi
jnz     short loc_1005758d
mov     [ebp+var_4c], 7
jmp     loc_1005763c
mov     eax, [ebp+var_54]
mov     ecx, [eax+10h]
mov     edx, [ecx+0ch]
mov     al, [edx+4dh]
mov     [esi+4], al
mov     eax, [ebp+var_58]
xor     edi, edi
lea     ecx, [esi+0ch]
mov     [esi+6], ax
mov     [ebp+var_48], ecx
test    eax, eax
jle     short loc_100575db
nop
mov     edx, [ebp+var_60]
push    edi
push    ebx
push    edx
call    sub_10056eb0
mov     ecx, [ebp+var_48]
add     esp, 0ch
mov     [ecx], eax
test    eax, eax
jnz     short loc_100575cf
mov     eax, [ebp+var_54]
mov     edx, [eax+8]
mov     [ecx], edx
inc     edi
add     ecx, 4
mov     [ebp+var_48], ecx
cmp     edi, [ebp+var_58]
jl      short loc_100575b0
mov     [ebp+var_48], ebx
mov     edi, [ebp+var_48]
xor     ebx, ebx
add     edi, 10h
mov     eax, [edi]
test    eax, eax
js      short loc_10057625
mov     ecx, [ebp+var_68]
cmp     [ecx+1ch], eax
jbe     short loc_10057607
mov     ecx, [ecx+4]
mov     esi, [ebp+var_58]
lea     edx, [eax+eax*4]
mov     [ecx+edx*4+8], esi
mov     esi, [ebp+var_40]
mov     ecx, [ebp+var_68]
push    esi
push    ecx
mov     ecx, 0fffffffah
call    sub_10025f90
mov     dword ptr [edi], 0ffffffffh
inc     ebx
add     esp, 8
add     edi, 4
cmp     ebx, 2
jl      short loc_100575e6
mov     edx, [ebp+var_48]
mov     eax, [edx+38h]
mov     [ebp+var_48], eax
test    eax, eax
jnz     short loc_100575de
mov     ecx, [ebp+var_54]
mov     eax, esi
call    sub_10009810
mov     edi, [ebp+var_5c]
mov     esi, [ebp+var_64]
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_c]
mov     [edi+8], eax
mov     [edi+0ch], ecx
test    esi, esi
jz      short loc_10057668
mov     edi, [ebp+var_54]
push    esi
push    edi
call    sub_10054390
add     esp, 8
mov     eax, esi
mov     ecx, edi
call    sub_10009810
mov     ecx, [ebp+var_8]
mov     eax, [ebp+var_4c]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [eax+8]
mov     ecx, [esi+1ch]
push    edi
mov     edi, [esi+24h]
lea     eax, [edi-1]
lea     edx, [edi+1]
mov     [ebp+var_4], esi
mov     [ebp+var_1c], ecx
mov     [esi+24h], edx
test    edi, eax
jnz     short loc_100576df
mov     ebx, [esi+28h]
mov     eax, [esi]
lea     ecx, ds:4[edi*8]
push    ecx
mov     [ebp+var_10], ebx
mov     [ebp+var_c], eax
call    sub_10009ac0
xor     ebx, ebx
add     esp, 4
mov     [ebp+var_8], eax
cmp     eax, ebx
jnz     short loc_100576da
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_c]
call    sub_10009810
mov     eax, [ebp+var_8]
mov     [esi+28h], eax
jmp     short loc_100576e1
xor     ebx, ebx
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_100576ef
mov     dword ptr [eax+edi*4], 0ffffffffh
or      eax, 0ffffffffh
sub     eax, edi
mov     [ebp+var_8], eax
cmp     [ebp+arg_14], ebx
jz      loc_10057870
mov     ecx, [esi+1ch]
mov     [ebp+var_10], ecx
cmp     [esi+20h], ecx
jg      short loc_10057722
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1005771f
mov     [ebp+var_10], 1
jmp     short loc_10057748
mov     ecx, [ebp+var_10]
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
lea     edx, [ecx+ecx*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_14]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1ch
mov     [ebp+var_10], ecx
mov     eax, [ebp+arg_8]
mov     ecx, [eax+0ch]
mov     edx, [eax+8]
mov     [ebp+var_18], ecx
mov     ecx, [esi+1ch]
mov     [ebp+var_14], edx
mov     [ebp+var_c], ecx
cmp     [esi+20h], ecx
jg      short loc_10057779
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_10057776
mov     [ebp+var_c], 1
jmp     short loc_100577a6
mov     ecx, [ebp+var_c]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ecx+ecx*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+var_14]
mov     [eax+4], edx
mov     edx, [ebp+arg_14]
inc     edx
mov     [eax+8], edx
mov     edx, [ebp+var_18]
mov     [eax+3], bl
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 18h
mov     [ebp+var_c], ecx
mov     eax, [ebp+src]
mov     ecx, [ebp+arg_1c]
push    eax
mov     eax, [ebp+var_c]
push    esi
call    sub_10025f90
mov     eax, [esi+1ch]
add     esp, 8
mov     [ebp+var_18], eax
cmp     [esi+20h], eax
jg      short loc_100577d2
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_100577fb
mov     eax, [ebp+var_18]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_c]
mov     edx, [ebp+var_8]
add     ecx, 2
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 19h
mov     ecx, [ebp+var_10]
cmp     ecx, ebx
jl      short loc_10057813
mov     eax, [esi+1ch]
cmp     eax, ecx
jbe     short loc_10057813
mov     edx, [esi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_14]
push    eax
mov     eax, [ebp+arg_8]
mov     ecx, [eax+0ch]
mov     eax, [eax+8]
inc     edx
call    sub_10038b00
mov     eax, [esi+1ch]
add     esp, 4
mov     [ebp+var_18], eax
cmp     [esi+20h], eax
jg      short loc_10057845
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1005786d
mov     eax, [ebp+var_18]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     ecx, 1
add     [esi+1ch], ecx
mov     [eax+4], ecx
mov     ecx, [ebp+arg_14]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
mov     eax, [ebp+var_8]
mov     edx, [ebp+arg_0]
mov     ecx, [edx]
cmp     [ecx+32h], bl
jz      short loc_10057883
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
push    eax
push    edx
mov     eax, esi
call    sub_10054f90
mov     edi, [ebp+arg_c]
movzx   eax, byte ptr [edi]
add     eax, 0fffffffah
add     esp, 8
cmp     eax, 4
ja      def_100578a4
jmp     ds:jpt_100578a4[eax*4]
mov     ecx, [ebp+arg_0]
call    sub_1003abf0
mov     edx, eax
mov     [ebp+var_10], edx
call    sub_1003abf0
mov     [ebp+arg_14], eax
mov     eax, [ebp+arg_8]
mov     ecx, [eax+0ch]
push    edx
mov     edx, [eax+8]
push    ecx
push    edx
push    1fh
mov     eax, esi
call    sub_10025890
mov     eax, [ebp+arg_14]
mov     ecx, [edi+4]
push    eax
push    ecx
push    38h
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+arg_14]
mov     eax, [ebp+var_10]
mov     ecx, [edi+4]
add     esp, 1ch
push    edx
push    eax
push    ecx
push    39h
mov     eax, esi
call    sub_10025890
mov     eax, [esi+4]
add     esp, 10h
cmp     eax, ebx
jz      short loc_10057913
mov     esi, [esi+1ch]
lea     edx, [esi+esi*4]
mov     byte ptr [eax+edx*4-11h], 8
mov     esi, [ebp+arg_14]
mov     edx, [ebp+arg_0]
call    sub_1003ac10
mov     esi, [ebp+var_10]
call    sub_1003ac10
mov     esi, [ebp+var_4]
jmp     loc_10057a75
mov     eax, [ebp+arg_4]
mov     edx, [eax]
mov     bl, [edi+1]
lea     ecx, [eax+5]
mov     eax, [edx+8]
mov     eax, [eax]
mov     [ebp+arg_14], ecx
call    sub_100359d0
mov     edx, [ebp+arg_14]
mov     ecx, [ebp+arg_0]
mov     [edx], al
call    sub_1003abf0
mov     edi, [ebp+arg_8]
mov     ecx, [edi+8]
push    1
push    edx
mov     ebx, eax
push    ebx
push    1
push    ecx
push    1fh
mov     eax, esi
call    sub_100259f0
mov     edi, [edi+8]
mov     eax, [ebp+arg_0]
mov     ecx, 1
call    sub_100384f0
mov     edx, [ebp+arg_c]
mov     eax, [edx+4]
push    ebx
push    eax
push    61h
mov     eax, esi
call    sub_10025990
mov     edx, [ebp+arg_0]
add     esp, 24h
mov     esi, ebx
call    sub_1003ac10
mov     esi, [ebp+var_4]
xor     ebx, ebx
jmp     loc_10057a75
mov     ecx, [edi+4]
mov     edx, [ebp+arg_8]
mov     esi, [edx+8]
mov     ebx, [ebp+arg_0]
push    1
push    ecx
call    sub_10038990
mov     esi, [ebp+var_4]
add     esp, 8
xor     ebx, ebx
jmp     loc_10057a75
cmp     [edi+8], ebx
jnz     short loc_100579e5
mov     eax, [ebp+arg_8]
mov     esi, [eax+0ch]
mov     ecx, [ebp+arg_0]
call    sub_1003ac40
mov     edx, [ebp+arg_8]
mov     ecx, edi
mov     [ecx+8], eax
mov     eax, [edx+0ch]
mov     [ecx+0ch], eax
mov     ecx, [edi+0ch]
mov     edx, [edi+8]
mov     eax, [ebp+arg_8]
mov     esi, [eax+8]
mov     ebx, [ebp+arg_0]
push    ecx
push    edx
call    sub_10038990
mov     ecx, [ebp+arg_c]
mov     edx, [ecx+4]
mov     eax, [ebp+var_4]
push    edx
push    4
call    sub_10025940
mov     esi, [ebp+var_4]
add     esp, 10h
xor     ebx, ebx
jmp     short loc_10057a75
mov     edx, [ebp+arg_8]
mov     eax, [edx+0ch]
mov     ecx, [edx+8]
mov     [ebp+var_14], eax
mov     eax, [esi+1ch]
mov     [ebp+var_18], ecx
mov     [ebp+arg_14], eax
cmp     [esi+20h], eax
jg      short loc_10057a41
mov     edi, esi
call    sub_10025810
mov     edx, [ebp+arg_8]
test    eax, eax
jnz     short loc_10057a67
mov     eax, [ebp+arg_14]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_18]
mov     [eax+4], ecx
mov     ecx, [ebp+var_14]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 10h
mov     ecx, [edx+0ch]
mov     edi, [edx+8]
mov     eax, [ebp+arg_0]
call    sub_100384f0
mov     edx, [ebp+arg_4]
mov     ecx, [edx+8]
mov     [ebp+arg_0], ecx
cmp     ecx, ebx
jz      short loc_10057ac5
mov     eax, [esi+1ch]
mov     [ebp+arg_14], eax
cmp     [esi+20h], eax
jg      short loc_10057a9e
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10057ac5
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_14]
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [eax+eax*4]
lea     eax, [edx+eax*4]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_20]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     dword ptr [eax+0ch], 0ffffffffh
mov     [eax+10h], ebx
mov     word ptr [eax], 7ah
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_10057add
mov     edx, [ebp+var_8]
lea     ecx, ds:4[edx*4]
mov     edx, [esi+1ch]
sub     eax, ecx
mov     [eax], edx
mov     eax, [esi+1ch]
mov     [ebp+arg_0], eax
cmp     [esi+20h], eax
jg      short loc_10057af6
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10057b19
mov     eax, [ebp+arg_0]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+arg_10]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 3
mov     eax, [ebp+var_1c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 98h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     edi, [eax+8]
mov     esi, [edi+24h]
mov     [ebp+var_90], ecx
mov     ecx, [eax]
xor     ebx, ebx
mov     [ebp+var_48], ecx
mov     [ebp+var_34], eax
lea     ecx, [esi-1]
lea     eax, [esi+1]
mov     [ebp+var_38], edx
mov     [ebp+var_84], ebx
mov     [ebp+var_68], ebx
mov     [ebp+var_3c], edi
mov     [edi+24h], eax
test    esi, ecx
jnz     short loc_10057bbf
mov     eax, [edi]
mov     ebx, [edi+28h]
lea     edx, ds:4[esi*8]
push    edx
mov     [ebp+var_54], eax
call    sub_10009ac0
add     esp, 4
mov     [ebp+src], eax
test    eax, eax
jnz     short loc_10057bb7
mov     ecx, [ebp+var_54]
mov     eax, ebx
call    sub_10009810
mov     eax, [ebp+src]
mov     edx, [ebp+var_38]
mov     [edi+28h], eax
xor     ebx, ebx
mov     eax, [edi+28h]
cmp     eax, ebx
jz      short loc_10057bcd
mov     dword ptr [eax+esi*4], 0ffffffffh
or      eax, 0ffffffffh
sub     eax, esi
mov     esi, [edi+24h]
mov     [ebp+var_74], eax
lea     ecx, [esi-1]
lea     eax, [esi+1]
mov     [edi+24h], eax
test    esi, ecx
jnz     short loc_10057c19
mov     eax, [edi]
mov     ebx, [edi+28h]
lea     edx, ds:4[esi*8]
push    edx
mov     [ebp+var_54], eax
call    sub_10009ac0
add     esp, 4
mov     [ebp+src], eax
test    eax, eax
jnz     short loc_10057c11
mov     ecx, [ebp+var_54]
mov     eax, ebx
call    sub_10009810
mov     eax, [ebp+src]
mov     edx, [ebp+var_38]
mov     [edi+28h], eax
xor     ebx, ebx
mov     eax, [edi+28h]
cmp     eax, ebx
jz      short loc_10057c27
mov     dword ptr [eax+esi*4], 0ffffffffh
movzx   ecx, byte ptr [edx+4]
or      eax, 0ffffffffh
sub     eax, esi
mov     [ebp+var_7c], eax
mov     eax, [edx+38h]
mov     [ebp+var_70], eax
mov     eax, [edx+34h]
mov     edx, [eax]
mov     [ebp+var_6c], ecx
mov     [ebp+var_40], eax
mov     [ebp+var_58], edx
cmp     ecx, 71h
jz      loc_10057d29
mov     eax, [ebp+var_48]
mov     [ebp+var_4c], 1
cmp     [eax+32h], bl
jnz     loc_10057d29
mov     eax, edx
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
mov     [ebp+src], eax
nop
mov     ecx, [ebp+var_38]
mov     edx, [ecx]
mov     eax, [ebp+var_4c]
cmp     eax, [edx]
jg      loc_10057d29
mov     edx, [ebp+var_58]
mov     ecx, [ebp+var_40]
mov     ecx, [ecx+8]
xor     eax, eax
cmp     edx, ebx
jle     short loc_10057ca2
add     ecx, 0eh
movzx   esi, word ptr [ecx]
cmp     esi, [ebp+var_4c]
jz      short loc_10057ca2
inc     eax
add     ecx, 14h
cmp     eax, edx
jl      short loc_10057c92
cmp     eax, edx
jnz     short loc_10057d1a
mov     esi, [ebp+var_48]
mov     ecx, 31h
call    sub_10009a40
mov     esi, eax
cmp     esi, ebx
jz      loc_10057d86
push    31h
push    ebx
push    esi
call    memset
mov     ecx, [ebp+var_4c]
or      edx, 0ffffffffh
mov     byte ptr [esi], 81h
mov     [esi+1eh], dx
mov     [esi+30h], bl
mov     eax, 400h
or      [esi+2], ax
mov     eax, [ebp+var_34]
add     esp, 0ch
mov     [esi+4], ecx
mov     ecx, [ebp+var_40]
push    esi
mov     dword ptr [esi+2ch], 1
call    sub_10036e50
add     esp, 4
mov     [ebp+var_40], eax
cmp     eax, ebx
jz      short loc_10057d1a
mov     edx, [eax+8]
mov     eax, [ebp+src]
mov     cx, word ptr [ebp+var_4c]
inc     [ebp+var_58]
mov     [edx+eax+0eh], cx
add     eax, 14h
mov     [ebp+src], eax
mov     edx, [ebp+var_48]
inc     [ebp+var_4c]
cmp     [edx+32h], bl
jz      loc_10057c70
mov     ecx, [ebp+var_58]
mov     esi, [ebp+var_48]
add     ecx, ecx
add     ecx, ecx
call    sub_10009a40
mov     [ebp+src], eax
cmp     eax, ebx
jz      short loc_10057d7e
mov     edx, [ebp+var_58]
mov     ecx, [ebp+var_40]
mov     ecx, [ecx+8]
xor     eax, eax
cmp     edx, ebx
jle     short loc_10057d66
mov     esi, [ebp+src]
add     ecx, 0eh
movzx   edx, word ptr [ecx]
dec     edx
mov     [esi+eax*4], edx
mov     edx, [ebp+var_58]
inc     eax
add     ecx, 14h
cmp     eax, edx
jl      short loc_10057d54
mov     esi, [ebp+var_48]
lea     edx, [edx+edx*4+10h]
mov     ecx, 1
mov     [ebp+var_30], edx
cmp     esi, ebx
jz      short loc_10057db9
cmp     [esi+32h], bl
jz      short loc_10057d9c
mov     [ebp+var_4c], ebx
jmp     loc_10057f64
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     [esi+0e2h], bl
jz      short loc_10057db9
movzx   eax, word ptr [esi+0e0h]
cmp     edx, eax
jle     loc_10057e72
add     [esi+0f0h], ecx
dec     edx
cmp     edx, 7ffffefeh
ja      loc_10057eca
cmp     dword_10080230, ebx
jz      loc_10057eb8
mov     eax, dword_10081774
cmp     eax, ebx
jz      short loc_10057de5
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+var_30]
lea     ebx, [ebp+var_30]
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10057e03
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+var_30]
xor     ebx, ebx
cmp     eax, ebx
jnz     short loc_10057e14
cmp     esi, ebx
jz      short loc_10057e14
mov     byte ptr [esi+32h], 1
mov     [ebp+var_4c], eax
cmp     eax, ebx
jz      loc_10057f61
mov     ecx, [ebp+var_58]
lea     edx, [eax+ecx*4+0ch]
mov     [eax+8], edx
mov     [eax+6], cx
mov     edx, esi
mov     edx, [edx+10h]
mov     edx, [edx+0ch]
mov     dl, [edx+4dh]
xor     esi, esi
mov     [eax+4], dl
cmp     ecx, ebx
jle     loc_10057f61
mov     ecx, [ebp+var_4c]
xor     eax, eax
add     ecx, 0ch
mov     [ebp+var_30], eax
mov     [ebp+var_64], ecx
mov     edx, [ebp+var_40]
mov     ecx, [edx+8]
mov     ecx, [eax+ecx]
mov     edx, 100h
mov     [ebp+var_54], ecx
test    [ecx+2], dx
jz      short loc_10057ed1
mov     ecx, [ecx+14h]
jmp     loc_10057f35
mov     eax, [esi+0f8h]
cmp     eax, ebx
jnz     short loc_10057e87
add     [esi+0f4h], ecx
jmp     loc_10057db9
mov     edx, [eax]
add     [esi+0e4h], ecx
add     [esi+0ech], ecx
mov     [esi+0f8h], edx
mov     edx, [esi+0e4h]
cmp     edx, [esi+0e8h]
jle     loc_10057e14
mov     [esi+0e8h], edx
jmp     loc_10057e14
mov     eax, [ebp+var_30]
push    eax
call    dword_1008024c
add     esp, 4
jmp     loc_10057e08
xor     eax, eax
jmp     loc_10057e0c
mov     eax, [ebp+src]
mov     ecx, [eax+esi*4]
mov     edx, [ebp+var_38]
mov     eax, [edx+38h]
mov     [ebp+size], ecx
cmp     eax, ebx
jz      loc_10057f91
mov     edx, [ebp+var_34]
push    ecx
push    eax
push    edx
call    sub_10056eb0
add     esp, 0ch
cmp     eax, ebx
jnz     short loc_10057f1d
mov     ecx, [ebp+var_38]
mov     ecx, [ecx]
mov     edx, [ebp+size]
cmp     edx, [ecx]
jge     short loc_10057f1d
mov     ecx, [ecx+8]
mov     eax, edx
mov     edx, [ebp+var_34]
lea     eax, [eax+eax*4]
mov     eax, [ecx+eax*4]
push    edx
call    sub_100358d0
add     esp, 4
mov     ecx, [ebp+var_54]
mov     [ebp+var_78], eax
mov     edx, 100h
or      [ecx+2], dx
mov     [ecx+14h], eax
mov     eax, [ebp+var_30]
mov     ecx, [ebp+var_78]
mov     edx, [ebp+var_64]
add     [ebp+var_64], 4
mov     [edx], ecx
mov     ecx, [ebp+var_40]
mov     edx, [ecx+8]
mov     ecx, [ebp+var_4c]
mov     dl, [eax+edx+0ch]
mov     ecx, [ecx+8]
mov     [esi+ecx], dl
inc     esi
add     eax, 14h
mov     [ebp+var_30], eax
cmp     esi, [ebp+var_58]
jl      loc_10057e53
mov     esi, [ebp+var_48]
mov     eax, [ebp+var_40]
mov     ecx, [ebp+var_38]
mov     edx, [ebp+var_34]
push    ebx
push    eax
mov     [ecx+34h], eax
mov     eax, [edx]
push    eax
call    sub_10036840
mov     ecx, [ebp+var_70]
add     esp, 0ch
cmp     [ebp+var_6c], 71h
mov     [ecx+34h], eax
jnz     short loc_10057f98
mov     [ebp+var_64], ebx
jmp     loc_100581bc
xor     eax, eax
jmp     loc_10057efa
mov     edx, [ebp+var_38]
mov     eax, [edx]
mov     eax, [eax]
lea     ecx, [eax+1]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_34]
mov     edx, [eax+40h]
mov     [ebp+var_44], edx
cmp     ecx, [eax+3ch]
jg      short loc_10057fc2
add     edx, ecx
mov     [eax+40h], edx
mov     edx, [eax+3ch]
sub     edx, ecx
mov     [eax+3ch], edx
jmp     short loc_10057fcf
mov     edx, [eax+4ch]
inc     edx
add     ecx, [eax+4ch]
mov     [ebp+var_44], edx
mov     [eax+4ch], ecx
mov     eax, [ebp+var_44]
mov     ecx, [edi+20h]
mov     [ebp+var_64], eax
mov     eax, [edi+1ch]
mov     [ebp+var_54], eax
cmp     ecx, eax
jg      short loc_10058049
lea     eax, [ecx+ecx]
cmp     ecx, ebx
jnz     short loc_10057fee
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005806e
mov     eax, [edi]
test    eax, eax
jz      short loc_10058028
cmp     ebx, [eax+0fch]
jb      short loc_10058028
cmp     ebx, [eax+100h]
jnb     short loc_10058028
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058034
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [ebp+var_54]
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_44]
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
jmp     short loc_10058070
xor     ebx, ebx
mov     eax, [ebp+var_60]
lea     ecx, [eax+eax*4+10h]
mov     edx, 1
mov     [ebp+size], ecx
cmp     esi, ebx
jz      short loc_100580af
cmp     [esi+32h], bl
jz      short loc_10058092
xor     esi, esi
mov     [ebp+var_50], esi
jmp     loc_10058121
cmp     [esi+0e2h], bl
jz      short loc_100580af
movzx   eax, word ptr [esi+0e0h]
cmp     ecx, eax
jle     loc_10058239
add     [esi+0f0h], edx
dec     ecx
cmp     ecx, 7ffffefeh
ja      loc_10058292
cmp     dword_10080230, ebx
jz      loc_10058280
mov     eax, dword_10081774
cmp     eax, ebx
jz      short loc_100580db
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+size]
lea     ebx, [ebp+var_30]
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_100580f9
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+var_30]
xor     ebx, ebx
cmp     eax, ebx
jnz     short loc_1005810a
cmp     esi, ebx
jz      short loc_1005810a
mov     byte ptr [esi+32h], 1
mov     esi, eax
mov     [ebp+var_50], eax
cmp     esi, ebx
jz      short loc_10058121
mov     eax, [ebp+size]
push    eax
push    ebx
push    esi
call    memset
add     esp, 0ch
mov     [ebp+var_68], esi
cmp     esi, ebx
jz      loc_100581bc
mov     eax, [ebp+var_50]
mov     ecx, [ebp+var_60]
lea     edx, [eax+ecx*4+0ch]
mov     [eax+8], edx
mov     edx, [ebp+var_48]
mov     [eax+6], cx
mov     edx, [edx+10h]
mov     edx, [edx+0ch]
mov     dl, [edx+4dh]
xor     esi, esi
mov     [eax+4], dl
cmp     ecx, ebx
jle     short loc_100581bc
add     eax, 0ch
mov     [ebp+size], ebx
mov     [ebp+var_30], eax
jmp     short loc_10058160
mov     ecx, [ebp+var_38]
mov     eax, [ecx+38h]
cmp     eax, ebx
jz      loc_10058299
mov     edx, [ebp+var_34]
push    esi
push    eax
push    edx
call    sub_10056eb0
add     esp, 0ch
cmp     eax, ebx
jnz     short loc_1005819e
mov     ecx, [ebp+var_38]
mov     ecx, [ecx]
cmp     esi, [ecx]
jge     short loc_1005819e
mov     edx, [ecx+8]
mov     eax, [ebp+var_34]
mov     ecx, [ebp+size]
push    eax
mov     eax, [edx+ecx]
call    sub_100358d0
add     esp, 4
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_50]
add     [ebp+size], 14h
mov     [ecx], eax
mov     eax, [edx+8]
mov     [esi+eax], bl
inc     esi
add     ecx, 4
mov     [ebp+var_30], ecx
cmp     esi, [ebp+var_60]
jl      short loc_10058160
mov     esi, [ebp+var_38]
mov     ecx, [esi+34h]
mov     edx, [ebp+var_34]
push    offset aorder
push    ecx
push    esi
push    edx
mov     [esi+38h], ebx
call    sub_100351c0
mov     eax, [ebp+var_70]
add     esp, 10h
cmp     [eax+38h], ebx
jnz     short loc_100581f6
mov     ecx, [eax+34h]
mov     edx, [ebp+var_34]
push    offset aorder
push    ecx
push    eax
push    edx
call    sub_100351c0
add     esp, 10h
mov     eax, [ebp+var_74]
push    eax
mov     eax, [ebp+var_34]
push    esi
call    sub_10056d30
add     esp, 8
cmp     [esi+8], ebx
jz      loc_100583d6
cmp     [ebp+var_6c], 71h
jnz     loc_100583d6
mov     edx, [ebp+var_34]
mov     ecx, [edx+4ch]
inc     ecx
lea     eax, [ecx+1]
mov     [edx+4ch], eax
mov     [ebp+size], eax
mov     eax, [esi+0ch]
mov     [ebp+var_44], ecx
cmp     eax, ebx
jz      short loc_100582a0
inc     eax
mov     [ebp+var_30], eax
jmp     short loc_100582a6
mov     eax, [esi+0f8h]
cmp     eax, ebx
jnz     short loc_1005824e
add     [esi+0f4h], edx
jmp     loc_100580af
mov     ecx, [eax]
add     [esi+0e4h], edx
add     [esi+0ech], edx
mov     [esi+0f8h], ecx
mov     ecx, [esi+0e4h]
cmp     ecx, [esi+0e8h]
jle     short loc_10058276
mov     [esi+0e8h], ecx
mov     esi, eax
mov     [ebp+var_50], esi
jmp     loc_1005810f
mov     edx, [ebp+size]
push    edx
call    dword_1008024c
add     esp, 4
jmp     loc_100580fe
xor     eax, eax
jmp     loc_10058102
xor     eax, eax
jmp     loc_10058180
mov     edx, [esi+8]
mov     [ebp+var_30], edx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058318
cmp     eax, ebx
jz      short loc_100582b8
add     eax, eax
jmp     short loc_100582bd
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005833d
mov     eax, [edi]
test    eax, eax
jz      short loc_100582f7
cmp     ebx, [eax+0fch]
jb      short loc_100582f7
cmp     ebx, [eax+100h]
jnb     short loc_100582f7
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058303
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     ecx, [ebp+var_44]
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_30]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 0eh
jmp     short loc_1005833f
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_100583ae
cmp     eax, ebx
jz      short loc_10058351
add     eax, eax
jmp     short loc_10058356
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100583de
mov     eax, [edi]
test    eax, eax
jz      short loc_10058390
cmp     ebx, [eax+0fch]
jb      short loc_10058390
cmp     ebx, [eax+100h]
jnb     short loc_10058390
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005839c
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_44]
mov     edx, [ebp+size]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 0eh
jmp     short loc_100583e0
mov     [ebp+size], ebx
mov     [ebp+var_44], ebx
jmp     short loc_100583e0
xor     ebx, ebx
mov     esi, [ebp+var_38]
mov     eax, [esi+44h]
mov     ecx, [ebp+var_48]
push    eax
push    ecx
call    sub_10036430
mov     edx, [esi+48h]
mov     eax, [ebp+var_48]
push    edx
push    eax
mov     [esi+44h], ebx
call    sub_10036430
mov     eax, [ebp+var_34]
mov     [esi+48h], ebx
inc     dword ptr [eax+4ch]
mov     ecx, [eax+4ch]
lea     edx, [ecx+1]
mov     [ebp+var_40], edx
inc     edx
lea     esi, [edx+1]
mov     [ebp+var_50], esi
add     esi, 2
mov     [eax+4ch], esi
mov     [ebp+var_14], ecx
mov     word ptr [ebp+var_18], 0ah
mov     [ebp+var_10], ebx
mov     [ebp+var_c], ebx
mov     [ebp+var_24], edx
mov     word ptr [ebp+var_28], 0ah
mov     [ebp+var_20], ebx
mov     [ebp+var_1c], ebx
mov     eax, [edi+20h]
mov     [ebp+var_78], esi
mov     esi, [edi+1ch]
add     esp, 10h
mov     [ebp+var_60], ecx
cmp     eax, esi
jg      short loc_100584b9
cmp     eax, ebx
jz      short loc_10058458
add     eax, eax
jmp     short loc_1005845d
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1005851d
mov     eax, [edi]
test    eax, eax
jz      short loc_1005849b
cmp     ebx, [eax+0fch]
jb      short loc_1005849b
cmp     ebx, [eax+100h]
jnb     short loc_1005849b
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100584a7
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
mov     [ebp+var_54], esi
mov     ecx, [edi+1ch]
mov     eax, [ebp+var_70]
mov     edx, [ebp+var_44]
mov     [ebp+var_88], ecx
mov     ecx, [ebp+var_34]
mov     [eax+8], edx
mov     edx, [ecx+1e8h]
mov     [ebp+var_98], edx
lea     edx, [ebp+var_18]
push    edx
push    eax
push    ecx
call    sub_1005b870
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
add     esp, 0ch
cmp     eax, esi
jg      short loc_10058585
cmp     eax, ebx
jz      short loc_10058528
add     eax, eax
jmp     short loc_1005852d
mov     [ebp+var_54], 1
xor     ebx, ebx
jmp     short loc_100584dc
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100585af
mov     eax, [edi]
test    eax, eax
jz      short loc_10058567
cmp     ebx, [eax+0fch]
jb      short loc_10058567
cmp     ebx, [eax+100h]
jnb     short loc_10058567
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058573
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
mov     ecx, 1
add     [edi+1ch], ecx
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
mov     ecx, [ebp+var_40]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
jmp     short loc_100585b1
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058620
cmp     eax, ebx
jz      short loc_100585c3
add     eax, eax
jmp     short loc_100585c8
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058645
mov     eax, [edi]
test    eax, eax
jz      short loc_10058602
cmp     ebx, [eax+0fch]
jb      short loc_10058602
cmp     ebx, [eax+100h]
jnb     short loc_10058602
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005860e
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_60]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4
jmp     short loc_10058647
xor     ebx, ebx
mov     esi, [ebp+var_38]
mov     eax, [edi+1ch]
mov     edx, [esi+0ch]
mov     ecx, [esi+8]
mov     [ebp+var_80], eax
mov     eax, [ebp+size]
mov     [ebp+var_44], edx
lea     edx, [ebp+var_28]
mov     [esi+8], eax
mov     eax, [ebp+var_34]
push    edx
mov     [ebp+var_30], ecx
mov     [esi+0ch], ebx
mov     ecx, [eax+1e8h]
push    esi
push    eax
mov     [ebp+var_94], ecx
call    sub_1005b870
mov     eax, [ebp+var_30]
mov     ecx, [ebp+var_44]
mov     [esi+8], eax
mov     [esi+0ch], ecx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
add     esp, 0ch
cmp     eax, esi
jg      short loc_100586fd
cmp     eax, ebx
jz      short loc_100586a0
add     eax, eax
jmp     short loc_100586a5
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058727
mov     eax, [edi]
test    eax, eax
jz      short loc_100586df
cmp     ebx, [eax+0fch]
jb      short loc_100586df
cmp     ebx, [eax+100h]
jnb     short loc_100586df
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100586eb
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
mov     ecx, 1
add     [edi+1ch], ecx
lea     eax, [esi+esi*4]
lea     eax, [edx+eax*4]
mov     [eax+4], ecx
mov     ecx, [ebp+var_50]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
jmp     short loc_10058729
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058798
cmp     eax, ebx
jz      short loc_1005873b
add     eax, eax
jmp     short loc_10058740
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100587be
mov     eax, [edi]
test    eax, eax
jz      short loc_1005877a
cmp     ebx, [eax+0fch]
jb      short loc_1005877a
cmp     ebx, [eax+100h]
jnb     short loc_1005877a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058786
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_40]
inc     ecx
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4
jmp     short loc_100587c0
xor     ebx, ebx
mov     edx, [ebp+var_74]
mov     esi, [ebp+var_68]
mov     eax, [ebp+var_64]
mov     ecx, [ebp+var_90]
push    edx
push    0fffffff0h
push    esi
push    eax
mov     eax, [ebp+var_50]
inc     eax
push    eax
push    ecx
mov     ecx, [ebp+var_34]
lea     edx, [ebp+var_18]
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_38]
push    edx
push    eax
push    ecx
call    sub_10057680
add     esp, 24h
cmp     [ebp+var_6c], 71h
mov     [ebp+var_68], eax
jz      short loc_10058805
mov     eax, [ebp+var_6c]
cmp     eax, 70h
jnz     short loc_10058838
mov     edx, [ebp+var_74]
mov     eax, [ebp+var_64]
mov     ecx, [ebp+var_78]
push    edx
mov     edx, [ebp+var_90]
push    0ffffffefh
push    esi
push    eax
push    ecx
mov     ecx, [ebp+var_38]
push    edx
mov     edx, [ebp+var_34]
lea     eax, [ebp+var_28]
push    eax
push    ecx
push    edx
call    sub_10057680
mov     [ebp+var_84], eax
mov     eax, [ebp+var_6c]
add     esp, 24h
cmp     eax, 72h
jz      loc_10058ae2
cmp     eax, 73h
jz      loc_10058ae2
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_100588b9
cmp     eax, ebx
jz      short loc_1005885c
add     eax, eax
jmp     short loc_10058861
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100588fa
mov     eax, [edi]
test    eax, eax
jz      short loc_1005889b
cmp     ebx, [eax+0fch]
jb      short loc_1005889b
cmp     ebx, [eax+100h]
jnb     short loc_1005889b
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100588a7
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_50]
mov     edx, [ebp+var_74]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1bh
mov     [ebp+size], esi
mov     eax, [ebp+size]
mov     esi, [edi+1ch]
mov     [ebp+var_44], eax
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058962
cmp     eax, ebx
jz      short loc_10058905
add     eax, eax
jmp     short loc_1005890a
mov     [ebp+size], 1
xor     ebx, ebx
jmp     short loc_100588e2
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005898d
mov     eax, [edi]
test    eax, eax
jz      short loc_10058944
cmp     ebx, [eax+0fch]
jb      short loc_10058944
cmp     ebx, [eax+100h]
jnb     short loc_10058944
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058950
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_78]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_84]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2
jmp     short loc_1005898f
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_100589fe
cmp     eax, ebx
jz      short loc_100589a1
add     eax, eax
jmp     short loc_100589a6
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058a24
mov     eax, [edi]
test    eax, eax
jz      short loc_100589e0
cmp     ebx, [eax+0fch]
jb      short loc_100589e0
cmp     ebx, [eax+100h]
jnb     short loc_100589e0
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100589ec
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_40]
inc     ecx
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4
jmp     short loc_10058a26
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058a95
cmp     eax, ebx
jz      short loc_10058a38
add     eax, eax
jmp     short loc_10058a3d
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058acc
mov     eax, [edi]
test    eax, eax
jz      short loc_10058a77
cmp     ebx, [eax+0fch]
jb      short loc_10058a77
cmp     ebx, [eax+100h]
jnb     short loc_10058a77
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058a83
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+size]
mov     edx, [ebp+var_70]
mov     [eax+8], ecx
mov     ecx, [ebp+var_38]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
fld     qword ptr [edx+1ch]
fadd    qword ptr [ecx+1ch]
fstp    qword ptr [ecx+1ch]
jmp     loc_10058b81
mov     edx, [ebp+var_70]
fld     qword ptr [edx+1ch]
mov     ecx, [ebp+var_38]
fadd    qword ptr [ecx+1ch]
xor     ebx, ebx
fstp    qword ptr [ecx+1ch]
jmp     loc_10058b81
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058b55
cmp     eax, ebx
jz      short loc_10058af4
add     eax, eax
jmp     short loc_10058af9
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_10058ba9
mov     eax, [edi]
test    eax, eax
jz      short loc_10058b37
cmp     ebx, [eax+0fch]
jb      short loc_10058b37
cmp     ebx, [eax+100h]
jnb     short loc_10058b37
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058b43
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_74]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
mov     edx, [ebp+var_70]
mov     ecx, [ebp+var_38]
mov     [ebp+var_44], esi
cmp     [ebp+var_6c], 73h
jnz     short loc_10058bb2
fld     qword ptr [edx+1ch]
mov     eax, [ebp+var_44]
fcomp   qword ptr [ecx+1ch]
mov     [ebp+var_30], eax
fnstsw  ax
test    ah, 5
jp      loc_10058e23
fld     qword ptr [edx+1ch]
fstp    qword ptr [ecx+1ch]
jmp     loc_10058e23
mov     esi, 1
xor     ebx, ebx
jmp     short loc_10058b78
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058c21
cmp     eax, ebx
jz      short loc_10058bc4
add     eax, eax
jmp     short loc_10058bc9
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058c62
mov     eax, [edi]
test    eax, eax
jz      short loc_10058c03
cmp     ebx, [eax+0fch]
jb      short loc_10058c03
cmp     ebx, [eax+100h]
jnb     short loc_10058c03
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058c0f
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_40]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_74]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1bh
mov     [ebp+size], esi
mov     eax, [ebp+size]
mov     esi, [edi+1ch]
mov     [ebp+var_30], eax
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058cca
cmp     eax, ebx
jz      short loc_10058c6d
add     eax, eax
jmp     short loc_10058c72
mov     [ebp+size], 1
xor     ebx, ebx
jmp     short loc_10058c4a
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058cf5
mov     eax, [edi]
test    eax, eax
jz      short loc_10058cac
cmp     ebx, [eax+0fch]
jb      short loc_10058cac
cmp     ebx, [eax+100h]
jnb     short loc_10058cac
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058cb8
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_8c]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_68]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2
jmp     short loc_10058cf7
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058d66
cmp     eax, ebx
jz      short loc_10058d09
add     eax, eax
jmp     short loc_10058d0e
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058d8b
mov     eax, [edi]
test    eax, eax
jz      short loc_10058d48
cmp     ebx, [eax+0fch]
jb      short loc_10058d48
cmp     ebx, [eax+100h]
jnb     short loc_10058d48
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058d54
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_60]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4
jmp     short loc_10058d8d
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058dfc
cmp     eax, ebx
jz      short loc_10058d9f
add     eax, eax
jmp     short loc_10058da4
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058e21
mov     eax, [edi]
test    eax, eax
jz      short loc_10058dde
cmp     ebx, [eax+0fch]
jb      short loc_10058dde
cmp     ebx, [eax+100h]
jnb     short loc_10058dde
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058dea
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+size]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
jmp     short loc_10058e23
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058e92
cmp     eax, ebx
jz      short loc_10058e35
add     eax, eax
jmp     short loc_10058e3a
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058ed4
mov     eax, [edi]
test    eax, eax
jz      short loc_10058e74
cmp     ebx, [eax+0fch]
jb      short loc_10058e74
cmp     ebx, [eax+100h]
jnb     short loc_10058e74
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058e80
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_50]
inc     ecx
mov     [eax+4], ecx
mov     ecx, [ebp+var_68]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2
mov     [ebp+size], esi
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
mov     edx, [ebp+size]
mov     [ebp+var_68], edx
cmp     eax, esi
jg      short loc_10058f3c
cmp     eax, ebx
jz      short loc_10058edf
add     eax, eax
jmp     short loc_10058ee4
mov     [ebp+size], 1
xor     ebx, ebx
jmp     short loc_10058ebc
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058f61
mov     eax, [edi]
test    eax, eax
jz      short loc_10058f1e
cmp     ebx, [eax+0fch]
jb      short loc_10058f1e
cmp     ebx, [eax+100h]
jnb     short loc_10058f1e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058f2a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_60]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4
jmp     short loc_10058f63
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10058fd2
cmp     eax, ebx
jz      short loc_10058f75
add     eax, eax
jmp     short loc_10058f7a
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10058ffa
mov     eax, [edi]
test    eax, eax
jz      short loc_10058fb4
cmp     ebx, [eax+0fch]
jb      short loc_10058fb4
cmp     ebx, [eax+100h]
jnb     short loc_10058fb4
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10058fc0
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_40]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_44]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1bh
jmp     short loc_10058ffc
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_1005906b
cmp     eax, ebx
jz      short loc_1005900e
add     eax, eax
jmp     short loc_10059013
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10059090
mov     eax, [edi]
test    eax, eax
jz      short loc_1005904d
cmp     ebx, [eax+0fch]
jb      short loc_1005904d
cmp     ebx, [eax+100h]
jnb     short loc_1005904d
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10059059
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_7c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
jmp     short loc_10059092
xor     ebx, ebx
mov     eax, [ebp+var_6c]
cmp     eax, 71h
jnz     short loc_100590a5
mov     eax, [ebp+size]
mov     [ebp+size], eax
jmp     loc_10059286
cmp     eax, 73h
jnz     short loc_100590b9
mov     eax, [ebp+size]
mov     [ebp+size], eax
inc     eax
mov     [ebp+var_68], eax
jmp     loc_10059286
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10059128
cmp     eax, ebx
jz      short loc_100590cb
add     eax, eax
jmp     short loc_100590d0
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10059160
mov     eax, [edi]
test    eax, eax
jz      short loc_1005910a
cmp     ebx, [eax+0fch]
jb      short loc_1005910a
cmp     ebx, [eax+100h]
jnb     short loc_1005910a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10059116
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_60]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4
mov     eax, [edi+20h]
mov     [ebp+size], esi
mov     esi, [edi+1ch]
cmp     eax, esi
jg      short loc_100591c6
cmp     eax, ebx
jz      short loc_10059169
add     eax, eax
jmp     short loc_1005916e
mov     esi, 1
xor     ebx, ebx
jmp     short loc_1005914b
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100591ee
mov     eax, [edi]
test    eax, eax
jz      short loc_100591a8
cmp     ebx, [eax+0fch]
jb      short loc_100591a8
cmp     ebx, [eax+100h]
jnb     short loc_100591a8
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100591b4
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_40]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_44]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1bh
jmp     short loc_100591f0
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_1005925f
cmp     eax, ebx
jz      short loc_10059202
add     eax, eax
jmp     short loc_10059207
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10059284
mov     eax, [edi]
test    eax, eax
jz      short loc_10059241
cmp     ebx, [eax+0fch]
jb      short loc_10059241
cmp     ebx, [eax+100h]
jnb     short loc_10059241
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005924d
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_7c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
jmp     short loc_10059286
xor     ebx, ebx
mov     eax, [ebp+var_6c]
mov     esi, [edi+1ch]
mov     [ebp+var_8c], esi
cmp     eax, 71h
jz      short loc_100592a0
cmp     eax, 70h
jnz     loc_10059339
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_1005930c
cmp     eax, ebx
jz      short loc_100592af
add     eax, eax
jmp     short loc_100592b4
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10059337
mov     eax, [edi]
test    eax, eax
jz      short loc_100592ee
cmp     ebx, [eax+0fch]
jb      short loc_100592ee
cmp     ebx, [eax+100h]
jnb     short loc_100592ee
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100592fa
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_78]
mov     edx, [ebp+var_84]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2
jmp     short loc_10059339
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_100593a8
cmp     eax, ebx
jz      short loc_1005934b
add     eax, eax
jmp     short loc_10059350
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100593ce
mov     eax, [edi]
test    eax, eax
jz      short loc_1005938a
cmp     ebx, [eax+0fch]
jb      short loc_1005938a
cmp     ebx, [eax+100h]
jnb     short loc_1005938a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10059396
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_40]
inc     ecx
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 4
jmp     short loc_100593d0
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_1005943f
cmp     eax, ebx
jz      short loc_100593e2
add     eax, eax
jmp     short loc_100593e7
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10059467
mov     eax, [edi]
test    eax, eax
jz      short loc_10059421
cmp     ebx, [eax+0fch]
jb      short loc_10059421
cmp     ebx, [eax+100h]
jnb     short loc_10059421
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005942d
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_50]
mov     edx, [ebp+var_30]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1bh
jmp     short loc_10059469
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_100594d8
cmp     eax, ebx
jz      short loc_1005947b
add     eax, eax
jmp     short loc_10059480
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100594fd
mov     eax, [edi]
test    eax, eax
jz      short loc_100594ba
cmp     ebx, [eax+0fch]
jb      short loc_100594ba
cmp     ebx, [eax+100h]
jnb     short loc_100594ba
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100594c6
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_7c]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
jmp     short loc_100594ff
xor     ebx, ebx
mov     eax, [ebp+var_54]
cmp     eax, ebx
jl      short loc_10059517
mov     ecx, [edi+1ch]
cmp     ecx, eax
jbe     short loc_10059517
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
mov     [eax+edx*4+8], ecx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10059586
cmp     eax, ebx
jz      short loc_10059529
add     eax, eax
jmp     short loc_1005952e
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100595ab
mov     eax, [edi]
test    eax, eax
jz      short loc_10059568
cmp     ebx, [eax+0fch]
jb      short loc_10059568
cmp     ebx, [eax+100h]
jnb     short loc_10059568
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10059574
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_40]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
jmp     short loc_100595ad
xor     ebx, ebx
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_100595be
call    sub_10025810
test    eax, eax
jnz     short loc_100595e1
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_50]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_100595f5
call    sub_10025810
mov     edi, [ebp+var_3c]
test    eax, eax
jnz     short loc_1005961e
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_60]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_88]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10059632
call    sub_10025810
mov     edi, [ebp+var_3c]
test    eax, eax
jnz     short loc_10059659
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_80]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_40]
inc     ecx
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1005966d
call    sub_10025810
mov     edi, [ebp+var_3c]
test    eax, eax
jnz     short loc_10059693
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_40]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_44]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1bh
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_100596a7
call    sub_10025810
mov     edi, [ebp+var_3c]
test    eax, eax
jnz     short loc_100596cd
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_50]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_30]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1bh
mov     eax, [edi+28h]
cmp     eax, ebx
jz      short loc_100596e5
mov     ecx, [ebp+var_7c]
lea     edx, ds:4[ecx*4]
mov     ecx, [edi+1ch]
sub     eax, edx
mov     [eax], ecx
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10059700
call    sub_10025810
mov     edi, [ebp+var_3c]
test    eax, eax
jz      short loc_10059700
mov     eax, 1
jmp     short loc_10059722
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 17h
mov     eax, esi
mov     ecx, [ebp+src]
push    ecx
push    edi
mov     ecx, 0fffffff1h
call    sub_10025f90
mov     esi, [edi+1ch]
mov     edx, [ebp+var_20]
mov     eax, [ebp+var_10]
add     esp, 8
mov     [ebp+var_88], edx
mov     [ebp+var_80], eax
cmp     [edi+20h], esi
jg      short loc_1005975e
call    sub_10025810
mov     edi, [ebp+var_3c]
test    eax, eax
jz      short loc_1005975e
mov     esi, 1
jmp     short loc_1005978a
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_80]
mov     edx, [ebp+var_88]
mov     [eax+4], ecx
mov     ecx, [ebp+var_58]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 18h
mov     edx, [ebp+var_4c]
push    edx
push    edi
mov     ecx, 0fffffff0h
mov     eax, esi
call    sub_10025f90
mov     esi, [edi+1ch]
add     esp, 8
cmp     [edi+20h], esi
jg      short loc_100597b2
call    sub_10025810
mov     edi, [ebp+var_3c]
test    eax, eax
jnz     short loc_100597de
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_68]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+size]
mov     [eax+4], edx
mov     edx, [ebp+var_8c]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 19h
mov     eax, [ebp+var_64]
cmp     eax, ebx
jz      short loc_10059806
mov     esi, [ebp+var_58]
inc     esi
mov     edi, eax
mov     eax, [ebp+var_34]
mov     ecx, esi
call    sub_100384f0
mov     edi, [ebp+var_3c]
cmp     esi, [eax+3ch]
jle     short loc_10059806
mov     ecx, [ebp+var_64]
mov     [eax+3ch], esi
mov     [eax+40h], ecx
mov     eax, [edi+28h]
cmp     eax, ebx
jz      short loc_1005981e
mov     edx, [ebp+var_74]
lea     ecx, ds:4[edx*4]
mov     edx, [edi+1ch]
sub     eax, ecx
mov     [eax], edx
mov     eax, [ebp+var_90]
cmp     byte ptr [eax], 5
jnz     short loc_1005984c
mov     ecx, [ebp+var_70]
mov     eax, [ecx+38h]
cmp     eax, ebx
jz      short loc_1005983c
mov     ecx, eax
mov     eax, [ecx+38h]
cmp     eax, ebx
jnz     short loc_10059833
mov     ecx, [ecx]
mov     edx, [ebp+var_34]
push    ecx
push    ebx
push    edx
call    sub_10056500
add     esp, 0ch
mov     edi, [ebp+var_38]
mov     esi, [edi+38h]
cmp     esi, ebx
jz      short loc_1005986d
mov     eax, [ebp+var_48]
push    esi
push    eax
call    sub_10054390
mov     ecx, [ebp+var_48]
add     esp, 8
mov     eax, esi
call    sub_10009810
mov     edx, [ebp+var_94]
mov     eax, [ebp+var_98]
mov     ecx, [ebp+var_70]
push    ebx
push    edx
push    eax
movzx   eax, byte ptr [edi+4]
mov     [edi+38h], ecx
mov     ecx, [ebp+var_34]
call    sub_100557b0
mov     ecx, [ebp+var_8]
add     esp, 0ch
pop     edi
pop     esi
xor     ecx, ebp
xor     eax, eax
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
test    ebx, ebx
jnz     short loc_100598ca
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [ebx], 98h
mov     esi, [ebp+arg_8]
jnz     short loc_1005992f
cmp     [ebx+18h], esi
jnz     short loc_1005992f
movzx   eax, word ptr [ebx+1ch]
test    ax, ax
jns     short loc_100598ec
mov     byte ptr [ebx], 62h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_c]
mov     edx, [ecx+8]
mov     edi, [ebp+arg_0]
cwde
push    0
lea     eax, [eax+eax*4]
mov     eax, [edx+eax*4]
push    0
push    eax
push    edi
call    sub_100365c0
mov     esi, eax
add     esp, 10h
test    esi, esi
jz      short loc_1005991a
mov     eax, [ebx+14h]
test    eax, eax
jz      short loc_1005991a
mov     [esi+14h], eax
push    ebx
push    edi
call    sub_10036430
mov     ebx, esi
add     esp, 8
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+arg_c]
mov     eax, [ebx+8]
mov     ecx, [ebp+arg_0]
push    edi
push    esi
push    eax
push    ecx
call    sub_100598b0
mov     edx, [ebx+0ch]
push    edi
push    esi
mov     [ebx+8], eax
mov     eax, [ebp+arg_0]
push    edx
push    eax
call    sub_100598b0
mov     cx, [ebx+2]
mov     edx, 800h
mov     [ebx+0ch], eax
and     cx, dx
mov     eax, edx
add     esp, 20h
cmp     cx, ax
jnz     short loc_10059987
mov     ecx, [ebx+10h]
mov     edx, [ebp+arg_0]
push    edi
push    esi
push    ecx
push    edx
call    sub_10059b00
add     esp, 10h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebx+10h]
xor     edi, edi
cmp     esi, edi
jz      short loc_100599d1
mov     [esp+10h+var_4], edi
cmp     [esi], edi
jle     short loc_100599d1
jmp     short loc_100599a0
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
mov     edx, [esi+8]
push    eax
mov     eax, [edx+edi]
push    ecx
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
call    sub_100598b0
mov     edx, [esi+8]
mov     [edi+edx], eax
mov     eax, [esp+20h+var_4]
inc     eax
add     esp, 10h
add     edi, 14h
mov     [esp+10h+var_4], eax
cmp     eax, [esi]
jl      short loc_100599a0
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     ecx, [ebp+arg_4]
sub     esp, 0ch
push    ebx
xor     eax, eax
push    esi
push    edi
cmp     ecx, eax
jz      loc_10059af3
mov     [esp+18h+var_8], eax
cmp     [ecx], eax
jle     loc_10059af3
mov     ebx, [ebp+arg_0]
mov     [esp+18h+var_4], eax
mov     edx, [ecx+8]
mov     esi, [eax+edx]
test    esi, esi
jz      loc_10059ad5
cmp     byte ptr [esi], 98h
mov     edi, [ebp+arg_8]
jnz     short loc_10059a71
cmp     [esi+18h], edi
jnz     short loc_10059a71
movzx   eax, word ptr [esi+1ch]
test    ax, ax
jns     short loc_10059a38
mov     byte ptr [esi], 62h
jmp     loc_10059ad1
mov     ecx, [ebp+arg_c]
mov     edx, [ecx+8]
cwde
push    0
lea     eax, [eax+eax*4]
mov     eax, [edx+eax*4]
push    0
push    eax
push    ebx
call    sub_100365c0
mov     edi, eax
add     esp, 10h
test    edi, edi
jz      short loc_10059a63
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_10059a63
mov     [edi+14h], eax
push    esi
push    ebx
call    sub_10036430
add     esp, 8
mov     esi, edi
jmp     short loc_10059ace
mov     eax, [ebp+arg_c]
mov     ecx, [esi+8]
push    eax
push    edi
push    ecx
push    ebx
call    sub_100598b0
mov     edx, [ebp+arg_c]
push    edx
mov     [esi+8], eax
mov     eax, [esi+0ch]
push    edi
push    eax
push    ebx
call    sub_100598b0
mov     cx, [esi+2]
mov     edx, 800h
mov     [esi+0ch], eax
and     cx, dx
mov     eax, edx
add     esp, 20h
cmp     cx, ax
jnz     short loc_10059abc
mov     ecx, [ebp+arg_c]
mov     edx, [esi+10h]
push    ecx
push    edi
push    edx
push    ebx
call    sub_10059b00
jmp     short loc_10059acb
mov     eax, [ebp+arg_c]
mov     ecx, [esi+10h]
push    eax
push    edi
push    ecx
push    ebx
call    sub_100599e0
add     esp, 10h
mov     ecx, [ebp+arg_4]
mov     eax, [esp+18h+var_4]
mov     edx, [ecx+8]
mov     [eax+edx], esi
mov     edx, [esp+18h+var_8]
inc     edx
add     eax, 14h
mov     [esp+18h+var_8], edx
mov     [esp+18h+var_4], eax
cmp     edx, [ecx]
jl      loc_10059a0c
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     ecx, [ebp+arg_4]
sub     esp, 0ch
push    ebx
xor     edx, edx
push    esi
push    edi
cmp     ecx, edx
jz      loc_10059cb6
mov     eax, [ecx]
mov     esi, [ebp+arg_c]
mov     edi, [ebp+arg_8]
mov     ebx, [ebp+arg_0]
mov     [esp+18h+var_8], eax
cmp     eax, edx
jz      short loc_10059b83
mov     [esp+18h+var_4], edx
cmp     [eax], edx
jle     short loc_10059b83
mov     [esp+18h+var_c], edx
jmp     short loc_10059b42
mov     eax, ecx
mov     eax, [eax+8]
mov     ecx, [esp+18h+var_c]
mov     edx, [ecx+eax]
push    esi
push    edi
push    edx
push    ebx
call    sub_100598b0
mov     ecx, [esp+28h+var_8]
mov     edx, [ecx+8]
mov     ecx, [esp+28h+var_c]
mov     [ecx+edx], eax
mov     eax, [esp+28h+var_4]
add     ecx, 14h
inc     eax
mov     [esp+28h+var_c], ecx
mov     ecx, [esp+28h+var_8]
add     esp, 10h
mov     [esp+18h+var_4], eax
cmp     eax, [ecx]
jl      short loc_10059b40
mov     ecx, [ebp+arg_4]
xor     edx, edx
mov     eax, [ecx+2ch]
mov     [esp+18h+var_c], eax
cmp     eax, edx
jz      short loc_10059be5
mov     [esp+18h+var_4], edx
cmp     [eax], edx
jle     short loc_10059be5
mov     [esp+18h+var_8], edx
jmp     short loc_10059ba4
mov     eax, [esp+18h+var_c]
mov     edx, [eax+8]
mov     eax, [esp+18h+var_8]
mov     ecx, [eax+edx]
push    esi
push    edi
push    ecx
push    ebx
call    sub_100598b0
mov     edx, [esp+28h+var_c]
mov     ecx, [esp+28h+var_8]
mov     edx, [edx+8]
mov     [ecx+edx], eax
mov     eax, [esp+28h+var_4]
add     ecx, 14h
inc     eax
mov     [esp+28h+var_8], ecx
mov     ecx, [esp+28h+var_c]
add     esp, 10h
mov     [esp+18h+var_4], eax
cmp     eax, [ecx]
jl      short loc_10059ba0
mov     ecx, [ebp+arg_4]
xor     edx, edx
mov     eax, [ecx+34h]
mov     [esp+18h+var_c], eax
cmp     eax, edx
jz      short loc_10059c43
mov     [esp+18h+var_4], edx
cmp     [eax], edx
jle     short loc_10059c43
mov     [esp+18h+var_8], edx
jmp     short loc_10059c04
mov     eax, [esp+18h+var_c]
mov     edx, [eax+8]
mov     eax, [esp+18h+var_8]
mov     ecx, [eax+edx]
push    esi
push    edi
push    ecx
push    ebx
call    sub_100598b0
mov     edx, [esp+28h+var_c]
mov     ecx, [esp+28h+var_8]
mov     edx, [edx+8]
mov     [ecx+edx], eax
mov     eax, [esp+28h+var_4]
add     ecx, 14h
inc     eax
mov     [esp+28h+var_8], ecx
mov     ecx, [esp+28h+var_c]
add     esp, 10h
mov     [esp+18h+var_4], eax
cmp     eax, [ecx]
jl      short loc_10059c00
mov     ecx, [ebp+arg_4]
mov     edx, [ecx+30h]
push    esi
push    edi
push    edx
push    ebx
call    sub_100598b0
mov     ecx, [ebp+arg_4]
push    esi
mov     [ecx+30h], eax
mov     eax, [ecx+28h]
push    edi
push    eax
push    ebx
call    sub_100598b0
mov     ecx, [ebp+arg_4]
push    esi
mov     [ecx+28h], eax
mov     ecx, [ecx+38h]
push    edi
push    ecx
push    ebx
call    sub_10059b00
mov     edx, [ebp+arg_4]
mov     eax, [edx+24h]
add     esp, 30h
test    eax, eax
jz      short loc_10059cb6
movsx   ecx, word ptr [eax]
mov     [esp+18h+var_4], ecx
test    ecx, ecx
jle     short loc_10059cb6
add     eax, 14h
mov     [esp+18h+var_8], eax
mov     eax, [esp+18h+var_8]
mov     ecx, [eax]
push    esi
push    edi
push    ecx
push    ebx
call    sub_10059b00
mov     eax, [esp+28h+var_4]
add     [esp+28h+var_8], 3ch
dec     eax
add     esp, 10h
mov     [esp+18h+var_4], eax
test    eax, eax
jg      short loc_10059c92
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 34h
push    ebx
push    esi
mov     esi, eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax+204h]
mov     eax, [eax]
test    byte ptr [eax+18h], 1
push    edi
mov     [esp+40h+var_10], ecx
mov     [esp+40h+var_2c], eax
jnz     short loc_10059d18
mov     eax, [ebp+arg_4]
mov     ebx, [esi+24h]
mov     edi, eax
shl     edi, 4
sub     edi, eax
add     edi, edi
add     edi, edi
cmp     [ebp+arg_8], 0
mov     edx, [edi+ebx+24h]
mov     eax, [edi+ebx+14h]
mov     [esp+40h+var_c], edi
mov     [esp+40h+var_24], edx
mov     [esp+40h+var_28], eax
jz      short loc_10059d21
cmp     [ebp+arg_c], 0
jz      short loc_10059d2d
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+arg_c], 0
jz      short loc_10059d2d
cmp     word ptr [ebx], 1
jg      short loc_10059d18
mov     edx, [eax+44h]
mov     ecx, [eax+24h]
test    edx, edx
jz      short loc_10059d3d
cmp     dword ptr [esi+44h], 0
jnz     short loc_10059d18
cmp     dword ptr [eax+48h], 0
jnz     short loc_10059d18
cmp     dword ptr [esi+40h], 0
jz      short loc_10059d4d
test    edx, edx
jnz     short loc_10059d18
cmp     word ptr [ecx], 0
jz      short loc_10059d18
test    byte ptr [eax+6], 1
jnz     short loc_10059d18
test    edx, edx
jz      short loc_10059d69
cmp     word ptr [ebx], 1
jg      short loc_10059d18
cmp     [ebp+arg_8], 0
jnz     short loc_10059d18
mov     cx, [esi+6]
and     cx, 1
mov     [esp+40h+var_2e], cx
jz      short loc_10059d7e
cmp     [ebp+arg_c], 0
jnz     short loc_10059d18
cmp     dword ptr [esi+34h], 0
jz      short loc_10059d8a
cmp     dword ptr [eax+34h], 0
jnz     short loc_10059d18
cmp     [ebp+arg_8], 0
jz      short loc_10059d96
cmp     dword ptr [eax+34h], 0
jnz     short loc_10059d18
test    edx, edx
jz      short loc_10059db1
cmp     dword ptr [esi+28h], 0
jnz     loc_10059d18
test    edx, edx
jz      short loc_10059db1
test    cx, cx
jnz     loc_10059d18
test    byte ptr [edi+ebx+20h], 20h
lea     ecx, [edi+ebx+20h]
mov     [esp+40h+var_8], ecx
jnz     loc_10059d18
cmp     dword ptr [eax+38h], 0
jz      loc_10059e5e
cmp     dword ptr [eax+34h], 0
jnz     loc_10059d18
cmp     [ebp+arg_8], 0
jnz     loc_10059d18
cmp     [esp+40h+var_2e], 0
jnz     loc_10059d18
cmp     word ptr [ebx], 1
jnz     loc_10059d18
test    byte ptr [eax+6], 5
jnz     loc_10059d18
mov     ecx, [eax+38h]
test    ecx, ecx
jz      short loc_10059e13
cmp     byte ptr [eax+4], 71h
jnz     loc_10059d18
mov     edx, [eax+24h]
cmp     word ptr [edx], 1
jl      loc_10059d18
mov     edx, [esp+40h+var_28]
mov     edx, [edx]
mov     eax, [eax]
mov     edx, [edx]
cmp     edx, [eax]
jnz     loc_10059d18
mov     eax, ecx
test    eax, eax
jnz     short loc_10059df8
mov     ecx, [esi+34h]
test    ecx, ecx
jz      short loc_10059e5e
cmp     [ecx], eax
jle     short loc_10059e5e
mov     ecx, [ecx+8]
add     ecx, 0eh
cmp     word ptr [ecx], 0
jz      loc_10059d18
mov     edx, [esi+34h]
inc     eax
add     ecx, 14h
cmp     eax, [edx]
jl      short loc_10059e49
mov     ecx, [edi+ebx+8]
mov     eax, [ebp+arg_0]
push    0
push    0
push    0
push    15h
mov     [eax+204h], ecx
call    sub_1003ee70
mov     eax, [ebp+arg_0]
mov     edx, [esp+50h+var_10]
mov     ecx, [esp+50h+var_28]
mov     [eax+204h], edx
mov     eax, [ecx+38h]
add     esp, 10h
mov     [esp+40h+var_28], eax
test    eax, eax
jz      loc_10059f2a
jmp     short loc_10059ea0
mov     eax, [esi+44h]
mov     edx, [esi+34h]
mov     ecx, [esi+38h]
mov     [esp+40h+var_10], eax
xor     eax, eax
push    eax
mov     [esp+44h+var_18], edx
mov     edx, [esp+44h+var_2c]
push    esi
push    edx
mov     [esp+4ch+var_14], ecx
mov     [esi+34h], eax
mov     [esi+24h], eax
mov     [esi+38h], eax
mov     [esi+44h], eax
call    sub_10036d20
mov     ecx, [esp+4ch+var_10]
mov     edx, [esp+4ch+var_18]
add     esp, 0ch
mov     [esi+44h], ecx
mov     [esi+34h], edx
mov     [esi+24h], ebx
mov     byte ptr [esi+4], 71h
mov     dword ptr [esi+40h], 0
test    eax, eax
jnz     short loc_10059ef8
mov     eax, [esp+40h+var_14]
jmp     short loc_10059f06
mov     ecx, [esp+40h+var_14]
mov     [eax+38h], ecx
mov     dword ptr [eax+40h], 0
mov     edx, [esp+40h+var_2c]
mov     [esi+38h], eax
cmp     byte ptr [edx+32h], 0
jnz     loc_1005a285
mov     eax, [esp+40h+var_28]
mov     eax, [eax+38h]
mov     [esp+40h+var_28], eax
test    eax, eax
jnz     loc_10059ea0
mov     eax, [edi+ebx+14h]
mov     ecx, [esp+40h+var_2c]
mov     [esp+40h+var_4], eax
mov     [esp+40h+var_28], eax
mov     eax, [edi+ebx+4]
call    sub_10009810
mov     eax, [edi+ebx+8]
mov     ecx, [esp+40h+var_2c]
call    sub_10009810
mov     eax, [edi+ebx+0ch]
mov     ecx, [esp+40h+var_2c]
call    sub_10009810
mov     eax, [edi+ebx+10h]
xor     ecx, ecx
mov     [edi+ebx+4], ecx
mov     [edi+ebx+8], ecx
mov     [edi+ebx+0ch], ecx
mov     [edi+ebx+14h], ecx
lea     edi, [edi+ebx+10h]
cmp     eax, ecx
jz      short loc_10059fbb
movzx   ecx, word ptr [eax+20h]
cmp     ecx, 1
jnz     short loc_10059fb0
mov     edx, [ebp+arg_0]
mov     ecx, [edx+1b0h]
test    ecx, ecx
jnz     short loc_10059f93
mov     ecx, edx
mov     edx, [ecx+224h]
mov     [eax+48h], edx
mov     ebx, esi
mov     [ecx+224h], eax
mov     dword ptr [edi], 0
mov     [esp+40h+var_14], ebx
jmp     short loc_10059fc7
dec     ecx
mov     [eax+20h], cx
mov     dword ptr [edi], 0
mov     ebx, esi
mov     [esp+40h+var_14], ebx
jmp     short loc_10059fc7
mov     ebx, [esp+40h+var_14]
mov     eax, [esp+40h+var_28]
mov     eax, [eax+24h]
movsx   esi, word ptr [eax]
mov     edi, [esp+40h+var_2c]
mov     [esp+40h+var_10], eax
mov     eax, [ebx+24h]
mov     byte ptr [esp+40h+var_2e], 0
mov     [esp+40h+var_1c], eax
test    eax, eax
jz      short loc_10059ff5
mov     ecx, [esp+40h+var_8]
mov     dl, [ecx]
mov     byte ptr [esp+40h+var_2e], dl
jmp     short loc_1005a014
push    0
xor     ecx, ecx
xor     eax, eax
mov     edx, edi
call    sub_10043600
add     esp, 4
mov     [ebx+24h], eax
mov     [esp+40h+var_1c], eax
test    eax, eax
jz      loc_1005a26a
cmp     esi, 1
jle     short loc_1005a03c
mov     ecx, [ebp+arg_4]
inc     ecx
push    ecx
lea     edx, [esi-1]
push    edx
push    edi
call    sub_100434e0
add     esp, 0ch
mov     [ebx+24h], eax
cmp     byte ptr [edi+32h], 0
mov     [esp+40h+var_1c], eax
jnz     loc_1005a26a
test    esi, esi
jle     short loc_1005a0a0
mov     eax, [esp+40h+var_10]
mov     ecx, [esp+40h+var_c]
mov     edx, [esp+40h+var_1c]
add     eax, 4
mov     [esp+40h+var_18], eax
lea     eax, [ecx+edx+4]
mov     [esp+40h+var_20], eax
mov     [esp+40h+var_10], esi
nop
mov     ecx, [esp+40h+var_20]
mov     edi, [ecx+28h]
mov     esi, [esp+40h+var_2c]
call    sub_100433b0
mov     eax, [esp+40h+var_18]
mov     edi, [esp+40h+var_20]
mov     esi, eax
mov     ecx, 0fh
rep movsd
mov     esi, 3ch
push    esi
push    0
push    eax
call    memset
add     [esp+4ch+var_20], esi
add     [esp+4ch+var_18], esi
add     esp, 0ch
dec     [esp+40h+var_10]
jnz     short loc_1005a060
mov     eax, [esp+40h+var_1c]
mov     cl, byte ptr [esp+40h+var_2e]
mov     edx, [esp+40h+var_c]
mov     esi, [esp+40h+var_2c]
mov     edi, [esp+40h+var_28]
mov     [edx+eax+20h], cl
mov     ecx, [ebx]
xor     eax, eax
mov     [esp+40h+var_10], ecx
mov     [esp+40h+var_18], eax
cmp     [ecx], eax
jle     short loc_1005a122
mov     [esp+40h+var_1c], eax
lea     esp, [esp+0]
mov     edx, [ecx+8]
mov     eax, [esp+40h+var_1c]
cmp     dword ptr [eax+edx+4], 0
jnz     short loc_1005a110
mov     eax, [eax+edx+8]
test    eax, eax
jz      short loc_1005a110
push    esi
mov     ebx, eax
call    sub_10009b70
mov     ecx, [esp+44h+var_10]
mov     edx, [ecx+8]
mov     ecx, [esp+44h+var_1c]
mov     ebx, [esp+44h+var_14]
mov     edi, [esp+44h+var_28]
mov     esi, [esp+44h+var_2c]
mov     [edx+ecx+4], eax
mov     ecx, [esp+44h+var_10]
add     esp, 4
mov     eax, [esp+40h+var_18]
add     [esp+40h+var_1c], 14h
inc     eax
mov     [esp+40h+var_18], eax
cmp     eax, [ecx]
jl      short loc_1005a0d0
mov     edx, [edi]
mov     eax, [esp+40h+var_24]
mov     ecx, [ebx]
push    edx
push    eax
push    ecx
push    esi
call    sub_100599e0
add     esp, 10h
cmp     [ebp+arg_8], 0
jz      short loc_1005a166
mov     edx, [edi]
mov     eax, [esp+40h+var_24]
mov     ecx, [ebx+2ch]
push    edx
push    eax
push    ecx
push    esi
call    sub_100599e0
mov     edx, [edi]
mov     eax, [esp+50h+var_24]
mov     ecx, [ebx+30h]
push    edx
push    eax
push    ecx
push    esi
call    sub_100598b0
add     esp, 20h
mov     [ebx+30h], eax
mov     eax, [edi+34h]
test    eax, eax
jz      short loc_1005a179
mov     [ebx+34h], eax
mov     dword ptr [edi+34h], 0
jmp     short loc_1005a192
mov     eax, [ebx+34h]
test    eax, eax
jz      short loc_1005a192
mov     edx, [edi]
mov     ecx, [esp+40h+var_24]
push    edx
push    ecx
push    eax
push    esi
call    sub_100599e0
add     esp, 10h
mov     eax, [edi+28h]
test    eax, eax
jz      short loc_1005a1ad
push    0
push    0
push    eax
push    esi
call    sub_100365c0
add     esp, 10h
mov     [esp+40h+var_18], eax
jmp     short loc_1005a1b5
mov     [esp+40h+var_18], 0
cmp     [ebp+arg_c], 0
mov     edx, [ebx+28h]
jz      short loc_1005a20e
mov     eax, [esp+40h+var_18]
mov     [ebx+30h], edx
mov     edx, [esp+40h+var_24]
mov     [ebx+28h], eax
mov     ecx, [edi]
mov     eax, [ebx+30h]
push    ecx
push    edx
push    eax
push    esi
call    sub_100598b0
push    0
mov     [ebx+30h], eax
mov     eax, [edi+30h]
push    0
push    eax
push    esi
call    sub_100365c0
mov     ecx, [ebx+30h]
push    eax
push    ecx
mov     eax, esi
call    sub_10036060
mov     [ebx+30h], eax
mov     edx, [edi+2ch]
push    0
push    edx
push    esi
call    sub_10036840
add     esp, 34h
mov     [ebx+2ch], eax
jmp     short loc_1005a233
mov     eax, [edi]
mov     ecx, [esp+40h+var_24]
push    eax
push    ecx
push    edx
push    esi
call    sub_100598b0
mov     ecx, [esp+50h+var_18]
push    ecx
mov     [ebx+28h], eax
push    eax
mov     eax, esi
call    sub_10036060
add     esp, 18h
mov     [ebx+28h], eax
mov     dx, [edi+6]
and     dx, 1
or      [ebx+6], dx
mov     eax, [edi+44h]
test    eax, eax
jz      short loc_1005a250
mov     [ebx+44h], eax
mov     dword ptr [edi+44h], 0
mov     ebx, [ebx+38h]
mov     eax, [edi+38h]
mov     [esp+40h+var_14], ebx
mov     [esp+40h+var_28], eax
test    ebx, ebx
jnz     loc_10059fc3
mov     edi, [esp+40h+var_2c]
mov     esi, [esp+40h+var_4]
test    esi, esi
jz      short loc_1005a285
push    esi
push    edi
call    sub_10054390
add     esp, 8
mov     eax, esi
mov     ecx, edi
call    sub_10009810
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [eax]
cmp     dword ptr [eax], 1
jz      short loc_1005a2aa
xor     al, al
retn
mov     ecx, [eax+8]
mov     eax, [ecx]
cmp     byte ptr [eax], 99h
jnz     short loc_1005a2a7
mov     dx, [eax+2]
mov     ecx, 800h
and     dx, cx
cmp     dx, cx
jz      short loc_1005a2a7
mov     ecx, [eax+10h]
test    ecx, ecx
jz      short loc_1005a2a7
cmp     dword ptr [ecx], 1
jnz     short loc_1005a2a7
mov     edx, [ecx+8]
mov     ecx, [edx]
cmp     byte ptr [ecx], 9ah
jnz     short loc_1005a2a7
push    esi
mov     esi, [eax+4]
mov     edx, offset amin
mov     ecx, esi
call    sub_1000bca0
test    eax, eax
jnz     short loc_1005a2f3
mov     al, 1
pop     esi
retn
mov     edx, offset amax
mov     ecx, esi
call    sub_1000bca0
neg     eax
sbb     al, al
and     al, 0feh
add     al, 2
pop     esi
retn
cmp     dword ptr [eax+28h], 0
push    esi
mov     esi, ecx
jnz     short loc_1005a366
mov     edx, [eax]
cmp     dword ptr [edx], 1
jnz     short loc_1005a366
mov     eax, [eax+24h]
cmp     word ptr [eax], 1
jnz     short loc_1005a366
cmp     dword ptr [eax+14h], 0
jnz     short loc_1005a366
mov     ecx, [eax+10h]
mov     eax, [edx+8]
mov     eax, [eax]
mov     dl, 10h
test    [ecx+22h], dl
jnz     short loc_1005a366
cmp     byte ptr [eax], 99h
jnz     short loc_1005a366
cmp     dword ptr [esi+24h], 0
jz      short loc_1005a366
mov     esi, [esi+20h]
mov     esi, [esi+4]
test    [esi+3], dl
jz      short loc_1005a366
mov     al, [eax+2]
and     al, dl
movzx   eax, al
neg     eax
sbb     eax, eax
not     eax
and     eax, ecx
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_4]
mov     eax, [ecx+0ch]
push    ebx
push    esi
push    edi
test    eax, eax
jz      loc_1005a404
mov     edi, [ecx+34h]
test    edi, edi
jz      short loc_1005a404
mov     esi, [eax+10h]
test    esi, esi
jz      short loc_1005a3dc
mov     ecx, [esi]
mov     al, [ecx]
mov     edx, edi
test    al, al
jz      short loc_1005a3bd
lea     ecx, [ecx+0]
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_1005a3bd
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_1005a3a0
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_1005a3fe
mov     esi, [esi+14h]
test    esi, esi
jnz     short loc_1005a393
mov     esi, [ebp+arg_0]
push    0
push    edi
push    offset anosuchindexs_0
push    esi
call    sub_1000bb30
mov     eax, 1
add     esp, 10h
mov     [esi+11h], al
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     [eax+38h], esi
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 5ch
mov     eax, [ebp+arg_0]
mov     edx, [eax+8]
mov     eax, [edx]
cmp     byte ptr [eax+32h], 0
push    ebx
push    esi
push    edi
mov     [esp+68h+var_54], edx
mov     [esp+68h+var_50], eax
jz      short loc_1005a43e
mov     eax, 2
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+24h]
mov     [esp+68h+var_44], esi
test    esi, esi
jz      loc_1005ac50
movzx   eax, word ptr [ecx+6]
test    al, 10h
jnz     loc_1005ac50
or      eax, 10h
mov     [ecx+6], ax
mov     ecx, [ecx]
push    esi
push    edx
mov     [esp+70h+var_20], ecx
call    sub_100436c0
lea     eax, [esi+4]
xor     edx, edx
add     esp, 8
mov     [esp+68h+var_4c], 0
mov     [esp+68h+var_c], eax
mov     [esp+68h+var_58], eax
cmp     dx, [esi]
jge     loc_1005a5fc
jmp     short loc_1005a4a4
jmp     short loc_1005a4a0
mov     eax, [esp+68h+var_58]
cmp     dword ptr [eax+0ch], 0
jnz     loc_1005ac50
mov     ebx, [eax+4]
test    ebx, ebx
jnz     loc_1005a554
mov     eax, [esp+68h+var_58]
mov     ebx, [eax+10h]
mov     ecx, [ebp+arg_0]
push    ebx
push    ecx
call    sub_10033f90
mov     esi, [esp+70h+var_50]
add     esp, 8
mov     ecx, 4ch
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1005a4ee
push    4ch
push    0
push    edi
call    memset
add     esp, 0ch
mov     edx, [esp+68h+var_58]
mov     [edx+0ch], edi
test    edi, edi
jz      loc_1005a432
push    edi
mov     eax, 1
push    offset asqlitesubquery
push    esi
mov     [edi+20h], ax
call    sub_1000ae80
mov     [edi], eax
mov     eax, [ebx+38h]
add     esp, 0ch
test    eax, eax
jz      short loc_1005a529
mov     edi, edi
mov     ebx, eax
mov     eax, [ebx+38h]
test    eax, eax
jnz     short loc_1005a520
mov     eax, [ebx]
lea     ecx, [edi+0ch]
push    ecx
lea     edx, [edi+8]
push    edx
push    eax
mov     eax, [esp+74h+var_54]
call    sub_100566a0
add     esp, 0ch
or      byte ptr [edi+22h], 2
mov     dword ptr [edi+4], 0ffffffffh
mov     dword ptr [edi+18h], 0f4240h
jmp     short loc_1005a5c5
mov     ecx, [esp+68h+var_58]
mov     edi, [ecx]
mov     esi, [esp+68h+var_54]
push    0
call    sub_1003f660
mov     edx, [esp+6ch+var_58]
mov     esi, eax
add     esp, 4
mov     [edx+0ch], esi
test    esi, esi
jz      loc_1005a432
inc     word ptr [esi+20h]
cmp     dword ptr [esi+1ch], 0
jnz     short loc_1005a589
test    byte ptr [esi+22h], 10h
jz      short loc_1005a5c5
mov     eax, [esp+68h+var_54]
push    esi
push    eax
call    sub_10041590
add     esp, 8
test    eax, eax
jnz     loc_1005a432
mov     ecx, [esi+1ch]
mov     edx, [esp+68h+var_50]
push    eax
push    ecx
push    edx
call    sub_10036d20
mov     edx, [ebp+arg_0]
mov     ecx, [esp+74h+var_58]
add     esp, 0ch
push    eax
push    edx
mov     [ecx+10h], eax
call    sub_10033f90
add     esp, 8
mov     eax, [esp+68h+var_58]
mov     ecx, [esp+68h+var_54]
push    eax
push    ecx
call    sub_1005a370
add     esp, 8
test    eax, eax
jnz     loc_1005a432
mov     edx, [esp+68h+var_44]
mov     eax, [esp+68h+var_4c]
movsx   ecx, word ptr [edx]
add     [esp+68h+var_58], 3ch
inc     eax
mov     [esp+68h+var_4c], eax
cmp     eax, ecx
jl      loc_1005a4a0
mov     edx, [esp+68h+var_50]
cmp     byte ptr [edx+32h], 0
jnz     loc_1005a432
mov     eax, [ebp+arg_4]
mov     ecx, [esp+68h+var_54]
push    eax
push    ecx
call    sub_100549f0
add     esp, 8
test    eax, eax
jnz     loc_1005a432
mov     ebx, [esp+68h+var_20]
mov     edi, [ebx]
xor     ecx, ecx
test    edi, edi
jle     short loc_1005a64e
mov     esi, [ebx+8]
mov     edx, [esi]
mov     al, [edx]
cmp     al, 71h
jz      short loc_1005a64e
cmp     al, 76h
jnz     short loc_1005a646
mov     edx, [edx+0ch]
cmp     byte ptr [edx], 71h
jz      short loc_1005a64e
inc     ecx
add     esi, 14h
cmp     ecx, edi
jl      short loc_1005a632
cmp     ecx, edi
jge     loc_1005ac21
mov     eax, [ebx+8]
mov     edx, [esp+68h+var_54]
mov     [esp+68h+var_10], eax
mov     eax, [edx]
mov     eax, [eax+18h]
xor     ecx, ecx
mov     [esp+68h+var_40], ecx
test    eax, 400h
jz      short loc_1005a682
mov     [esp+68h+var_30], 1
test    eax, 800h
jz      short loc_1005a686
mov     [esp+68h+var_30], ecx
mov     [esp+68h+var_24], ecx
cmp     edi, ecx
jle     loc_1005ac06
mov     eax, [esp+68h+var_24]
mov     edx, [esp+68h+var_10]
lea     ecx, [eax+eax*4]
mov     eax, [edx+ecx*4]
lea     esi, [edx+ecx*4]
mov     cl, [eax]
cmp     cl, 71h
jz      short loc_1005a6ff
cmp     cl, 76h
jnz     short loc_1005a6b7
mov     edx, [eax+0ch]
cmp     byte ptr [edx], 71h
jz      short loc_1005a6ff
mov     ecx, [esp+68h+var_40]
push    eax
mov     eax, [esp+6ch+var_54]
call    sub_10036e50
mov     ecx, eax
xor     edx, edx
add     esp, 4
mov     [esp+68h+var_40], ecx
cmp     ecx, edx
jz      short loc_1005a6f8
mov     eax, [ecx]
mov     edi, [ecx+8]
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
mov     [edi+eax*4-10h], ebx
mov     eax, [ecx]
mov     ecx, [ecx+8]
mov     edi, [esi+8]
lea     eax, [eax+eax*4]
mov     [ecx+eax*4-0ch], edi
mov     [esi+4], edx
mov     [esi+8], edx
mov     [esi], edx
jmp     loc_1005abf1
mov     [esp+68h+var_14], 0
cmp     cl, 76h
jnz     short loc_1005a714
mov     edx, [eax+8]
mov     ebx, [edx+4]
jmp     short loc_1005a716
xor     ebx, ebx
mov     edx, [esp+68h+var_44]
mov     eax, [esp+68h+var_c]
xor     edi, edi
xor     ecx, ecx
mov     [esp+68h+var_48], ebx
mov     [esp+68h+var_4c], edi
mov     [esp+68h+var_58], eax
cmp     cx, [edx]
jge     loc_1005abc6
jmp     short loc_1005a744
mov     eax, [esp+68h+var_58]
mov     edx, [eax+8]
mov     esi, [eax+0ch]
mov     [esp+68h+var_4], esi
mov     [esp+68h+var_3c], edx
test    edx, edx
jnz     short loc_1005a75c
mov     edx, [esi]
mov     [esp+68h+var_3c], edx
mov     eax, [esp+68h+var_50]
cmp     byte ptr [eax+32h], 0
jnz     loc_1005abbf
test    ebx, ebx
jz      short loc_1005a7bd
mov     al, [ebx]
mov     ecx, ebx
test    al, al
jz      short loc_1005a7a1
jmp     short loc_1005a780
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_1005a79d
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_1005a780
mov     ebx, [esp+68h+var_48]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jnz     loc_1005aba6
cmp     dword ptr [esi+8], 0
mov     [esp+68h+var_14], 1
mov     [esp+68h+var_18], 0
jle     loc_1005aba6
mov     [esp+68h+var_28], 0
nop
mov     eax, [esi+0ch]
mov     ecx, [esp+68h+var_28]
cmp     byte ptr [eax+ecx+17h], 0
mov     esi, [eax+ecx]
mov     [esp+68h+src], esi
jnz     loc_1005ab83
test    edi, edi
jle     short loc_1005a83b
test    ebx, ebx
jnz     short loc_1005a83b
mov     edx, [esp+68h+var_58]
test    byte ptr [edx+1ch], 4
jz      short loc_1005a823
mov     eax, [esp+68h+var_44]
push    ebx
push    ebx
push    esi
push    edi
call    sub_100547d0
add     esp, 10h
test    eax, eax
jnz     loc_1005ab83
mov     eax, [esp+68h+var_58]
mov     ecx, [eax+28h]
push    esi
call    sub_10043460
add     esp, 4
test    eax, eax
jns     loc_1005ab83
test    esi, esi
jz      short loc_1005a857
cmp     byte ptr [esi], 0
mov     eax, esi
jz      short loc_1005a84c
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1005a846
sub     eax, esi
and     eax, 3fffffffh
mov     edi, eax
jmp     short loc_1005a859
xor     edi, edi
mov     esi, [esp+68h+var_50]
lea     ebx, [edi+1]
lea     ecx, [ebx+30h]
call    sub_10009a40
mov     esi, eax
mov     [esp+68h+var_1c], esi
test    esi, esi
jz      short loc_1005a8c4
lea     eax, [ebx+30h]
push    eax
push    0
push    esi
call    memset
or      ecx, 0ffffffffh
add     esp, 0ch
mov     byte ptr [esi], 1ah
mov     [esi+1eh], cx
test    ebx, ebx
jnz     short loc_1005a89d
mov     edx, 400h
or      [esi+2], dx
mov     [esi+4], ebx
jmp     short loc_1005a8bd
lea     eax, [esi+30h]
mov     [esi+4], eax
test    edi, edi
jz      short loc_1005a8b6
mov     ecx, [esp+68h+src]
push    edi
push    ecx
push    eax
call    memcpy
add     esp, 0ch
mov     edx, [esi+4]
mov     byte ptr [edi+edx], 0
mov     dword ptr [esi+2ch], 1
mov     eax, [esp+68h+src]
xor     ebx, ebx
mov     [esp+68h+var_38], eax
mov     [esp+68h+var_34], ebx
cmp     [esp+68h+var_30], ebx
jnz     short loc_1005a91e
mov     ecx, [esp+68h+var_44]
cmp     word ptr [ecx], 1
jg      short loc_1005a91e
mov     [esp+68h+var_1c], esi
mov     esi, [esp+68h+var_34]
mov     edi, [esp+68h+var_50]
mov     ebx, [esp+68h+var_38]
mov     eax, [esp+68h+var_1c]
mov     ecx, [esp+68h+var_40]
push    eax
mov     eax, [esp+6ch+var_54]
call    sub_10036e50
add     esp, 4
mov     [esp+68h+var_40], eax
mov     ecx, ebx
test    ebx, ebx
jnz     loc_1005aa9d
mov     [esp+68h+var_1c], ebx
jmp     loc_1005aab4
mov     ecx, [esp+68h+var_3c]
cmp     ecx, ebx
jz      short loc_1005a93e
mov     eax, ecx
cmp     [ecx], bl
jz      short loc_1005a935
lea     esp, [esp+0]
inc     eax
cmp     [eax], bl
jnz     short loc_1005a930
sub     eax, ecx
and     eax, 3fffffffh
mov     ebx, eax
mov     esi, [esp+68h+var_50]
lea     ecx, [ebx+31h]
mov     [esp+68h+size], ecx
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1005a9aa
mov     edx, [esp+68h+size]
push    edx
push    0
push    edi
call    memset
or      eax, 0ffffffffh
mov     [edi+1eh], ax
lea     eax, [ebx+1]
add     esp, 0ch
mov     byte ptr [edi], 1ah
test    eax, eax
jnz     short loc_1005a983
mov     ecx, 400h
or      [edi+2], cx
mov     [edi+4], eax
jmp     short loc_1005a9a3
lea     eax, [edi+30h]
mov     [edi+4], eax
test    ebx, ebx
jz      short loc_1005a99c
mov     edx, [esp+68h+var_3c]
push    ebx
push    edx
push    eax
call    memcpy
add     esp, 0ch
mov     eax, [edi+4]
mov     byte ptr [ebx+eax], 0
mov     dword ptr [edi+2ch], 1
mov     ecx, [esp+68h+var_54]
mov     esi, [ecx]
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1005a9de
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [ebx], 76h
mov     [ebx+1eh], dx
mov     dword ptr [ebx+2ch], 1
mov     eax, [esp+68h+var_54]
mov     esi, [eax]
test    ebx, ebx
jnz     short loc_1005a9ff
push    edi
push    esi
call    sub_10036430
mov     ecx, [esp+70h+var_1c]
push    ecx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1005aa61
mov     eax, [esp+68h+var_1c]
test    eax, eax
jz      short loc_1005aa21
mov     edx, 100h
mov     [ebx+0ch], eax
test    [eax+2], dx
jz      short loc_1005aa21
mov     ecx, edx
or      [ebx+2], cx
mov     edx, [eax+14h]
mov     [ebx+14h], edx
test    edi, edi
jz      short loc_1005aa3f
mov     eax, 100h
mov     [ebx+8], edi
test    [edi+2], ax
jz      short loc_1005aa3f
mov     ecx, eax
or      [ebx+2], cx
mov     edx, [edi+14h]
mov     [ebx+14h], edx
call    sub_10035cf0
mov     ecx, [esp+68h+var_54]
mov     eax, [ecx]
mov     eax, [eax+54h]
cmp     [ebx+2ch], eax
jle     short loc_1005aa61
push    eax
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
cmp     [esp+68h+var_30], 0
mov     [esp+68h+var_1c], ebx
jz      loc_1005a8e6
mov     ecx, [esp+68h+src]
mov     edx, [esp+68h+var_3c]
mov     edi, [esp+68h+var_50]
push    ecx
push    edx
push    offset ass_6
push    edi
call    sub_1000ae80
mov     ebx, eax
mov     esi, ebx
add     esp, 10h
mov     [esp+68h+var_38], ebx
mov     [esp+68h+var_34], esi
jmp     loc_1005a8f2
cmp     byte ptr [ebx], 0
jz      short loc_1005aaa8
inc     ecx
cmp     byte ptr [ecx], 0
jnz     short loc_1005aaa2
sub     ecx, ebx
and     ecx, 3fffffffh
mov     [esp+68h+var_1c], ecx
test    eax, eax
jz      short loc_1005ab0e
mov     ecx, [eax]
mov     edx, [eax+8]
lea     ecx, [ecx+ecx*4]
lea     eax, [edx+ecx*4-14h]
mov     ecx, [esp+68h+var_54]
mov     [esp+68h+size], eax
mov     eax, [ecx]
test    ebx, ebx
jnz     short loc_1005aad6
xor     eax, eax
jmp     short loc_1005ab07
mov     edi, [esp+68h+var_1c]
lea     ecx, [edi+1]
mov     esi, eax
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1005aafd
mov     edx, [esp+68h+var_38]
push    edi
push    edx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     edi, [esp+68h+var_50]
mov     eax, esi
mov     esi, [esp+68h+var_34]
mov     ecx, [esp+68h+size]
mov     [ecx+4], eax
cmp     dword ptr [edi+1e8h], 0
jz      short loc_1005ab50
test    esi, esi
jz      short loc_1005ab3c
cmp     esi, [edi+0fch]
jb      short loc_1005ab3c
cmp     esi, [edi+100h]
jnb     short loc_1005ab3c
movzx   eax, word ptr [edi+0e0h]
mov     edi, [edi+1e8h]
add     [edi], eax
jmp     short loc_1005ab83
push    esi
call    dword_10080258
mov     edi, [edi+1e8h]
add     esp, 4
add     [edi], eax
jmp     short loc_1005ab83
test    esi, esi
jz      short loc_1005ab7a
cmp     esi, [edi+0fch]
jb      short loc_1005ab7a
cmp     esi, [edi+100h]
jnb     short loc_1005ab7a
mov     edx, [edi+0f8h]
mov     [esi], edx
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], esi
jmp     short loc_1005ab83
push    esi
call    sub_10009770
add     esp, 4
mov     eax, [esp+68h+var_18]
mov     esi, [esp+68h+var_4]
add     [esp+68h+var_28], 18h
mov     ebx, [esp+68h+var_48]
mov     edi, [esp+68h+var_4c]
inc     eax
mov     [esp+68h+var_18], eax
cmp     eax, [esi+8]
jl      loc_1005a7e0
mov     eax, [esp+68h+var_44]
movsx   ecx, word ptr [eax]
add     [esp+68h+var_58], 3ch
inc     edi
mov     [esp+68h+var_4c], edi
cmp     edi, ecx
jl      loc_1005a740
cmp     [esp+68h+var_14], 0
jnz     short loc_1005abf1
test    ebx, ebx
jz      short loc_1005abdf
mov     edx, [esp+68h+var_54]
push    ebx
push    offset anosuchtables
push    edx
call    sub_1000bb30
add     esp, 0ch
jmp     short loc_1005abf1
mov     eax, [esp+68h+var_54]
push    offset anotablesspecif
push    eax
call    sub_1000bb30
add     esp, 8
mov     eax, [esp+68h+var_24]
mov     ecx, [esp+68h+var_20]
inc     eax
mov     [esp+68h+var_24], eax
cmp     eax, [ecx]
jl      loc_1005a692
mov     edx, [esp+68h+var_20]
mov     eax, [esp+68h+var_50]
push    edx
push    eax
call    sub_10037020
mov     ecx, [esp+70h+var_40]
mov     edx, [ebp+arg_4]
add     esp, 8
mov     [edx], ecx
mov     eax, [ebp+arg_4]
mov     eax, [eax]
test    eax, eax
jz      short loc_1005ac47
mov     ecx, [eax]
mov     edx, [esp+68h+var_50]
cmp     ecx, [edx+50h]
jle     short loc_1005ac47
mov     eax, [esp+68h+var_54]
push    offset atoomanycolumns_1
push    eax
call    sub_1000bb30
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     ecx, [ebp+arg_4]
movzx   eax, word ptr [ecx+6]
push    ebx
push    esi
push    edi
test    al, 20h
jnz     short loc_1005acd8
mov     ebx, [ecx+24h]
or      eax, 20h
mov     [ecx+6], ax
mov     eax, [ebp+arg_0]
mov     edx, [eax+8]
xor     eax, eax
xor     edi, edi
mov     [esp+10h+var_4], edx
cmp     ax, [ebx]
jge     short loc_1005acd8
lea     esi, [ebx+14h]
mov     ecx, [esi-4]
test    ecx, ecx
jz      short loc_1005accd
test    byte ptr [ecx+22h], 2
jz      short loc_1005accd
mov     edx, [esi]
mov     eax, [edx+38h]
test    eax, eax
jz      short loc_1005acb9
jmp     short loc_1005acb0
mov     edx, eax
mov     eax, [edx+38h]
test    eax, eax
jnz     short loc_1005acb0
mov     eax, [ecx+0ch]
mov     ecx, [ecx+8]
push    eax
mov     eax, [esp+14h+var_4]
push    eax
call    sub_10056a60
add     esp, 8
movsx   ecx, word ptr [ebx]
inc     edi
add     esi, 3ch
cmp     edi, ecx
jl      short loc_1005ac95
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    edi
mov     edi, [ebp+arg_4]
test    edi, edi
jz      loc_1005ad89
test    byte ptr [edi+6], 20h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, [esi]
jnz     short loc_1005ad87
lea     eax, [ebp+var_14]
push    edi
push    eax
mov     [ebp+var_10], offset sub_1005a410
mov     [ebp+var_14], offset sub_10008f30
mov     [ebp+var_c], esi
call    sub_10033f90
add     esp, 8
cmp     dword ptr [esi+44h], 0
jnz     short loc_1005ad87
cmp     byte ptr [ebx+32h], 0
jnz     short loc_1005ad87
mov     ecx, [ebp+arg_8]
lea     edx, [ebp+var_14]
push    edi
push    edx
mov     [ebp+var_14], offset sub_100349f0
mov     [ebp+var_10], offset sub_100353a0
mov     [ebp+var_c], esi
mov     [ebp+var_4], ecx
call    sub_10033f90
add     esp, 8
cmp     dword ptr [esi+44h], 0
jnz     short loc_1005ad87
cmp     byte ptr [ebx+32h], 0
jnz     short loc_1005ad87
lea     eax, [ebp+var_14]
push    edi
push    eax
mov     [ebp+var_10], offset sub_1005ac60
mov     [ebp+var_14], offset sub_10008f30
mov     [ebp+var_c], esi
call    sub_10033f90
add     esp, 8
pop     esi
pop     ebx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     edx, [ecx+24h]
sub     esp, 14h
push    ebx
push    esi
mov     esi, [eax+8]
mov     eax, [ecx+18h]
add     edx, eax
push    edi
jz      loc_1005afce
xor     edx, edx
mov     [ebp+var_4], edx
cmp     eax, edx
jle     short loc_1005ae19
mov     [ebp+var_8], edx
lea     esp, [esp+0]
mov     eax, [ecx+14h]
mov     ecx, [ebp+var_8]
mov     ebx, [esi+1ch]
mov     edx, [ecx+eax+10h]
mov     [ebp+var_c], edx
cmp     [esi+20h], ebx
jg      short loc_1005ade0
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1005ae06
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_c]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0ah
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_4]
add     [ebp+var_8], 18h
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [ecx+18h]
jl      short loc_1005adc0
cmp     dword ptr [ecx+24h], 0
mov     eax, [ecx+20h]
mov     [ebp+var_8], eax
mov     [ebp+var_4], 0
jle     loc_1005afce
mov     ecx, [ebp+var_8]
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
mov     edx, [ecx+8]
mov     [ebp+var_c], edx
cmp     eax, edi
jg      short loc_1005aea6
test    eax, eax
jz      short loc_1005ae4b
add     eax, eax
jmp     short loc_1005ae50
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005aecc
mov     eax, [esi]
test    eax, eax
jz      short loc_1005ae8a
cmp     ebx, [eax+0fch]
jb      short loc_1005ae8a
cmp     ebx, [eax+100h]
jnb     short loc_1005ae8a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005ae96
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+var_c]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0ah
mov     edi, [ebp+var_8]
cmp     dword ptr [edi+0ch], 0
jl      loc_1005afb7
mov     eax, [edi]
mov     eax, [eax+10h]
test    eax, eax
jz      loc_1005af9f
cmp     dword ptr [eax], 1
jnz     loc_1005af9f
push    eax
mov     eax, [ebp+arg_0]
push    eax
call    sub_100555f0
mov     ebx, [esi+1ch]
mov     ecx, [edi+0ch]
add     esp, 8
mov     [ebp+var_c], eax
mov     [ebp+var_10], ecx
cmp     [esi+20h], ebx
jg      short loc_1005af21
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1005af21
mov     ebx, 1
xor     edx, edx
jmp     short loc_1005af47
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [ebp+var_10]
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4]
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 2ah
mov     ecx, [esi+4]
mov     edi, [esi]
mov     eax, ebx
cmp     ecx, edx
jz      short loc_1005af90
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005af90
cmp     ebx, edx
jge     short loc_1005af60
mov     eax, [esi+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ebx, [ecx+edx*4]
mov     ecx, [ebx+10h]
call    sub_10025e50
mov     eax, [ebp+var_c]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_1005af87
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1005afb7
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0fah
jmp     short loc_1005afb7
mov     ecx, [ebp+var_c]
mov     eax, 0fffffff0h
call    sub_10025e50
jmp     short loc_1005afb7
mov     eax, [ebp+arg_0]
push    offset adistinctaggreg
push    eax
call    sub_1000bb30
add     esp, 8
mov     dword ptr [edi+0ch], 0ffffffffh
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_4]
add     [ebp+var_8], 10h
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [ecx+24h]
jl      loc_1005ae30
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     ecx, [ebp+arg_0]
cmp     dword ptr [ecx+24h], 0
push    ebx
push    esi
mov     esi, [eax+8]
mov     eax, [ecx+20h]
push    edi
mov     [ebp+var_10], 0
mov     [ebp+var_4], eax
jle     loc_1005b13c
jmp     short loc_1005b00b
mov     eax, [ebp+var_4]
mov     ecx, [eax]
mov     ecx, [ecx+10h]
test    ecx, ecx
jz      short loc_1005b01b
mov     edx, [ecx]
mov     [ebp+var_8], edx
jmp     short loc_1005b022
mov     [ebp+var_8], 0
mov     ecx, [eax+4]
mov     edx, [eax+8]
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
mov     [ebp+var_c], ecx
mov     [ebp+var_14], edx
cmp     eax, edi
jg      short loc_1005b09f
test    eax, eax
jz      short loc_1005b040
add     eax, eax
jmp     short loc_1005b045
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1005b108
mov     eax, [esi]
test    eax, eax
jz      short loc_1005b083
cmp     ebx, [eax+0fch]
jb      short loc_1005b083
cmp     ebx, [eax+100h]
jnb     short loc_1005b083
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005b08f
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_14]
mov     edx, [ebp+var_8]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 7ch
mov     eax, edi
mov     ebx, [esi+4]
mov     edi, [esi]
test    ebx, ebx
jz      short loc_1005b118
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005b118
test    eax, eax
jns     short loc_1005b0e1
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
call    sub_10025e50
mov     eax, [ebp+var_c]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_1005b10f
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1005b125
mov     eax, 1
jmp     short loc_1005b0ca
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0fbh
jmp     short loc_1005b125
mov     ecx, [ebp+var_c]
mov     eax, 0fffffffbh
call    sub_10025e50
mov     eax, [ebp+var_10]
mov     ecx, [ebp+arg_0]
add     [ebp+var_4], 10h
inc     eax
mov     [ebp+var_10], eax
cmp     eax, [ecx+24h]
jl      loc_1005b008
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [eax+8]
xor     ebx, ebx
mov     [ebp+var_4], edi
mov     [ebp+var_1c], ebx
mov     [ebp+var_24], ebx
mov     byte ptr [esi], 1
call    sub_100388c0
mov     eax, [esi+20h]
mov     [ebp+var_14], ebx
mov     [ebp+var_c], eax
cmp     [esi+24h], ebx
jle     loc_1005b57c
mov     ecx, [ebp+var_c]
mov     edx, [ecx]
mov     ebx, [edx+10h]
xor     eax, eax
mov     [ebp+var_20], eax
mov     [ebp+var_28], ebx
cmp     ebx, eax
jz      short loc_1005b1d9
mov     eax, [ebp+arg_0]
mov     ecx, [ebx]
mov     esi, [eax+3ch]
mov     edx, [eax+40h]
mov     [ebp+var_8], ecx
cmp     ecx, esi
jg      short loc_1005b1ba
add     ecx, edx
sub     esi, [ebp+var_8]
mov     [eax+40h], ecx
mov     [eax+3ch], esi
jmp     short loc_1005b1c7
mov     edx, [eax+4ch]
mov     ecx, [eax+4ch]
inc     edx
add     ecx, [ebp+var_8]
mov     [eax+4ch], ecx
push    1
push    eax
mov     eax, ebx
mov     [ebp+var_18], edx
call    sub_10039ce0
add     esp, 8
jmp     short loc_1005b1df
mov     [ebp+var_8], eax
mov     [ebp+var_18], eax
mov     edx, [ebp+var_c]
cmp     dword ptr [edx+0ch], 0
jl      short loc_1005b259
mov     esi, [edi+24h]
lea     ecx, [esi-1]
lea     eax, [esi+1]
mov     [edi+24h], eax
test    esi, ecx
jnz     short loc_1005b227
mov     eax, [edi]
mov     ebx, [edi+28h]
lea     edx, ds:4[esi*8]
push    edx
mov     [ebp+var_20], eax
call    sub_10009ac0
add     esp, 4
mov     [ebp+var_10], eax
test    eax, eax
jnz     short loc_1005b224
mov     ecx, [ebp+var_20]
mov     eax, ebx
call    sub_10009810
mov     eax, [ebp+var_10]
mov     [edi+28h], eax
mov     eax, [edi+28h]
test    eax, eax
jz      short loc_1005b235
mov     dword ptr [eax+esi*4], 0ffffffffh
mov     ecx, [ebp+var_18]
mov     edx, [ebp+var_c]
push    ecx
or      eax, 0ffffffffh
sub     eax, esi
mov     esi, [ebp+arg_0]
push    1
push    eax
mov     [ebp+var_20], eax
mov     eax, [edx+0ch]
push    eax
call    sub_10055090
mov     ebx, [ebp+var_28]
add     esp, 10h
mov     ecx, [ebp+var_c]
mov     edx, [ecx+4]
test    byte ptr [edx+3], 8
jz      loc_1005b3bb
mov     ebx, [ebx+8]
xor     esi, esi
mov     [ebp+var_10], esi
cmp     esi, [ebp+var_8]
jge     short loc_1005b291
mov     eax, [ebp+arg_0]
push    eax
mov     eax, [ebx]
call    sub_100358d0
add     esp, 4
inc     esi
add     ebx, 14h
mov     [ebp+var_10], eax
test    eax, eax
jz      short loc_1005b271
jmp     short loc_1005b2a2
cmp     [ebp+var_10], 0
jnz     short loc_1005b2a2
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
mov     eax, [edx+8]
mov     [ebp+var_10], eax
cmp     [ebp+var_1c], 0
jnz     short loc_1005b2bd
mov     ecx, [ebp+arg_4]
cmp     dword ptr [ecx+1ch], 0
jz      short loc_1005b2bd
mov     eax, [ebp+arg_0]
inc     dword ptr [eax+4ch]
mov     edx, [eax+4ch]
mov     [ebp+var_1c], edx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_1005b32e
test    eax, eax
jz      short loc_1005b2cf
add     eax, eax
jmp     short loc_1005b2d4
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1005b399
mov     eax, [edi]
test    eax, eax
jz      short loc_1005b312
cmp     ebx, [eax+0fch]
jb      short loc_1005b312
cmp     ebx, [eax+100h]
jnb     short loc_1005b312
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005b31e
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+20h], edx
mov     [edi+4], ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_1c]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 11h
mov     eax, esi
mov     ebx, [edi+4]
mov     edx, [edi]
test    ebx, ebx
jz      short loc_1005b3a9
cmp     byte ptr [edx+32h], 0
jnz     short loc_1005b3a9
test    eax, eax
jns     short loc_1005b36d
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
mov     edi, edx
call    sub_10025e50
mov     eax, [ebp+var_10]
mov     edi, [ebp+var_4]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_1005b3a0
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1005b3bb
mov     eax, 1
jmp     short loc_1005b356
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0fch
jmp     short loc_1005b3bb
mov     ecx, [ebp+var_10]
mov     eax, 0fffffffch
mov     edi, edx
call    sub_10025e50
mov     edi, [ebp+var_4]
mov     eax, [ebp+var_c]
mov     ecx, [eax+4]
mov     edx, [eax+8]
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
mov     [ebp+var_10], ecx
mov     [ebp+var_28], edx
cmp     eax, esi
jg      short loc_1005b43b
test    eax, eax
jz      short loc_1005b3dc
add     eax, eax
jmp     short loc_1005b3e1
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1005b4a6
mov     eax, [edi]
test    eax, eax
jz      short loc_1005b41f
cmp     ebx, [eax+0fch]
jb      short loc_1005b41f
cmp     ebx, [eax+100h]
jnb     short loc_1005b41f
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005b42b
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+20h], edx
mov     [edi+4], ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+var_18]
xor     ecx, ecx
mov     [eax+8], edx
mov     edx, [ebp+var_28]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     word ptr [eax], 7bh
mov     ebx, [edi+4]
mov     edx, [edi]
mov     eax, esi
test    ebx, ebx
jz      short loc_1005b4b6
cmp     byte ptr [edx+32h], 0
jnz     short loc_1005b4b6
test    esi, esi
jns     short loc_1005b47d
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
mov     edi, edx
call    sub_10025e50
mov     eax, [ebp+var_10]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_1005b4ad
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1005b4c5
mov     esi, 1
jmp     short loc_1005b464
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0fbh
jmp     short loc_1005b4c5
mov     ecx, [ebp+var_10]
mov     eax, 0fffffffbh
mov     edi, edx
call    sub_10025e50
mov     esi, [ebp+var_4]
mov     ecx, [esi+4]
mov     ebx, [ebp+var_8]
test    ecx, ecx
jz      short loc_1005b4dc
mov     eax, [esi+1ch]
lea     edx, [eax+eax*4]
mov     [ecx+edx*4-11h], bl
mov     edi, [ebp+var_18]
mov     eax, [ebp+arg_0]
mov     ecx, ebx
call    sub_100384f0
mov     ecx, ebx
call    sub_100384f0
cmp     ebx, [eax+3ch]
jle     short loc_1005b4fb
mov     [eax+3ch], ebx
mov     [eax+40h], edi
mov     edx, [ebp+var_20]
test    edx, edx
jz      short loc_1005b51c
mov     ecx, [esi+28h]
test    ecx, ecx
jz      short loc_1005b517
lea     edx, ds:4[edx*4]
sub     ecx, edx
mov     edx, [esi+1ch]
mov     [ecx], edx
call    sub_100388c0
mov     eax, [ebp+var_14]
mov     ecx, [ebp+arg_4]
add     [ebp+var_c], 10h
inc     eax
mov     [ebp+var_14], eax
mov     edi, esi
cmp     eax, [ecx+24h]
jl      loc_1005b187
mov     ebx, [ebp+var_1c]
test    ebx, ebx
jz      short loc_1005b57a
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1005b554
call    sub_10025810
test    eax, eax
jz      short loc_1005b554
mov     esi, 1
jmp     short loc_1005b577
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1bh
mov     [ebp+var_24], esi
xor     ebx, ebx
mov     eax, [ebp+arg_0]
call    sub_100388c0
mov     eax, [ebp+arg_4]
mov     ecx, [eax+14h]
mov     [ebp+var_14], ebx
cmp     [eax+1ch], ebx
jle     loc_1005b738
add     ecx, 14h
mov     [ebp+var_1c], ecx
lea     esp, [esp+0]
mov     eax, [ebp+var_1c]
mov     esi, [eax-4]
mov     eax, [eax]
mov     [ebp+var_20], esi
test    eax, eax
jz      loc_1005b660
cmp     byte ptr [eax], 84h
jnz     loc_1005b660
mov     ecx, [eax+18h]
mov     edx, [ebp+arg_0]
mov     esi, [edx+8]
mov     eax, [esi+1ch]
mov     [ebp+var_18], ecx
mov     ecx, [esi+20h]
mov     [ebp+var_28], eax
cmp     ecx, eax
jg      short loc_1005b63e
lea     eax, [ecx+ecx]
test    ecx, ecx
jnz     short loc_1005b5e1
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1005b721
mov     eax, [esi]
test    eax, eax
jz      short loc_1005b61f
cmp     ebx, [eax+0fch]
jb      short loc_1005b61f
cmp     ebx, [eax+100h]
jnb     short loc_1005b61f
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005b62b
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [ebp+var_28]
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_18]
mov     edx, [ebp+var_20]
mov     [eax+4], ecx
mov     [eax+8], edx
mov     word ptr [eax], 0eh
jmp     loc_1005b716
push    esi
push    eax
mov     eax, [ebp+arg_0]
push    eax
call    sub_10038b70
add     esp, 0ch
mov     [ebp+var_18], eax
cmp     eax, esi
jz      loc_1005b721
mov     ecx, [ebp+arg_0]
mov     esi, [ecx+8]
test    esi, esi
jz      loc_1005b721
mov     eax, [esi+1ch]
mov     ecx, [esi+20h]
mov     [ebp+var_28], eax
cmp     ecx, eax
jg      short loc_1005b6f9
lea     eax, [ecx+ecx]
test    ecx, ecx
jnz     short loc_1005b6a0
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005b721
mov     eax, [esi]
test    eax, eax
jz      short loc_1005b6da
cmp     ebx, [eax+0fch]
jb      short loc_1005b6da
cmp     ebx, [eax+100h]
jnb     short loc_1005b6da
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005b6e6
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [ebp+var_28]
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_18]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_20]
mov     [eax+4], edx
mov     [eax+8], ecx
mov     word ptr [eax], 0fh
xor     ecx, ecx
mov     [eax+10h], ecx
mov     [eax+0ch], ecx
mov     [eax+3], cl
mov     eax, [ebp+var_14]
mov     edx, [ebp+arg_4]
add     [ebp+var_1c], 18h
inc     eax
mov     [ebp+var_14], eax
cmp     eax, [edx+1ch]
jl      loc_1005b5a0
mov     eax, [ebp+arg_4]
mov     byte ptr [eax], 0
mov     eax, [ebp+arg_0]
call    sub_100388c0
mov     eax, [ebp+var_24]
test    eax, eax
jz      short loc_1005b760
js      short loc_1005b760
mov     ecx, [edi+1ch]
cmp     ecx, eax
jbe     short loc_1005b760
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
mov     [eax+edx*4+8], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, edx
cmp     byte ptr [esi+1d4h], 2
push    edi
jnz     loc_1005b863
xor     edi, edi
cmp     ecx, edi
jz      short loc_1005b797
mov     edx, [ecx]
mov     ecx, offset ausingcoveringi
jmp     short loc_1005b79e
mov     edx, offset dword_100796bc
mov     ecx, edx
mov     ebx, [eax+18h]
mov     eax, [eax]
push    ebx
push    edx
push    ecx
mov     ecx, [esi]
push    eax
push    offset ascantablesssdr
push    ecx
call    sub_1000ae80
mov     edx, [esi+1e4h]
mov     esi, [esi+8]
mov     ebx, [esi+1ch]
add     esp, 18h
mov     [ebp+var_4], eax
mov     [ebp+var_8], edx
cmp     [esi+20h], ebx
jg      short loc_1005b7e2
mov     edi, esi
call    sub_10025810
test    eax, eax
jz      short loc_1005b7e0
mov     ebx, 1
jmp     short loc_1005b806
xor     edi, edi
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+var_8]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], edi
mov     [eax+0ch], edi
mov     [eax+10h], edi
mov     word ptr [eax], 96h
mov     ecx, [esi+4]
mov     edi, [esi]
mov     eax, ebx
test    ecx, ecx
jz      short loc_1005b858
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005b858
test    ebx, ebx
jns     short loc_1005b81f
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*4]
movsx   eax, byte ptr [esi+1]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     eax, [ebp+var_4]
xor     ecx, ecx
mov     [esi+10h], ecx
cmp     eax, ecx
jnz     short loc_1005b84a
mov     [esi+10h], ecx
mov     [esi+1], cl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0ffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
or      eax, 0ffffffffh
call    sub_10025e50
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ech
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+0ech+var_4], eax
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+1e4h]
mov     [esp+0f4h+var_44], eax
mov     eax, [esi+1e8h]
mov     [esi+1e4h], eax
inc     eax
push    edi
mov     edi, [ebp+arg_8]
mov     [esi+1e8h], eax
mov     eax, [esi]
mov     [esp+0f8h+var_d8], esi
mov     [esp+0f8h+var_8c], ebx
mov     [esp+0f8h+var_ac], edi
mov     [esp+0f8h+var_c4], 1
mov     [esp+0f8h+var_cc], eax
test    ebx, ebx
jz      loc_1005dae6
cmp     byte ptr [eax+32h], 0
jnz     loc_1005dae6
cmp     dword ptr [esi+44h], 0
jnz     loc_1005dae6
push    0
push    0
push    0
push    15h
mov     eax, esi
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1005dae6
cmp     byte ptr [edi], 4
mov     [esp+0f8h+var_6c], eax
mov     [esp+0f8h+var_68], eax
mov     [esp+0f8h+var_64], eax
mov     [esp+0f8h+var_60], eax
mov     [esp+0f8h+var_5c], eax
mov     [esp+0f8h+var_58], eax
mov     [esp+0f8h+var_54], eax
mov     [esp+0f8h+var_50], eax
mov     [esp+0f8h+var_4c], eax
mov     [esp+0f8h+var_48], eax
ja      short loc_1005b972
mov     ecx, [ebx+34h]
mov     edx, [esp+0f8h+var_cc]
push    ecx
push    edx
call    sub_10037020
mov     eax, 0fffeh
add     esp, 8
and     [ebx+6], ax
mov     dword ptr [ebx+34h], 0
push    0
push    ebx
push    esi
call    sub_1005acf0
mov     ecx, [ebx+34h]
mov     edi, [ebx+24h]
mov     edx, [ebx]
add     esp, 0ch
cmp     dword ptr [esi+44h], 0
mov     [esp+0f8h+var_bc], ecx
mov     [esp+0f8h+var_78], edi
mov     [esp+0f8h+var_b0], edx
jnz     loc_1005d349
mov     eax, [esp+0f8h+var_cc]
cmp     byte ptr [eax+32h], 0
jnz     loc_1005d349
movzx   eax, word ptr [ebx+6]
shr     eax, 2
and     eax, 1
push    esi
mov     [esp+0fch+var_e0], eax
call    sub_10056c90
add     esp, 4
mov     [esp+0f8h+var_e8], eax
test    eax, eax
jz      loc_1005d349
mov     edx, [esp+0f8h+var_b0]
cmp     dword ptr [edx], 1
mov     ecx, [esp+0f8h+var_ac]
movzx   eax, byte ptr [ecx]
jle     short loc_1005b9fd
cmp     eax, 6
jz      short loc_1005b9ea
cmp     eax, 7
jnz     short loc_1005b9fd
push    offset aonlyasingleres
push    esi
call    sub_1000bb30
add     esp, 8
jmp     loc_1005d349
xor     eax, eax
mov     [esp+0f8h+var_c0], eax
cmp     [ebx+38h], eax
jnz     loc_1005bc1d
jmp     short loc_1005ba1b
mov     edi, [esp+0f8h+var_78]
mov     eax, [esp+0f8h+var_c0]
movsx   ecx, word ptr [edi]
cmp     eax, ecx
jge     loc_1005bc1d
mov     edx, eax
shl     edx, 4
sub     edx, eax
lea     eax, [edi+edx*4+4]
mov     [esp+0f8h+var_dc], eax
mov     eax, [eax+10h]
mov     [esp+0f8h+var_e4], eax
test    eax, eax
jz      loc_1005bc0f
mov     ecx, [esp+0f8h+var_dc]
mov     eax, [ecx+14h]
test    eax, eax
jz      short loc_1005ba67
push    eax
mov     eax, [ecx+18h]
push    eax
mov     eax, [esp+100h+var_e8]
push    2
call    sub_10025990
add     esp, 0ch
jmp     loc_1005bc0f
lea     edi, [esp+0f8h+var_d4]
mov     eax, ebx
mov     [esp+0f8h+var_d4], 0
call    sub_10035c00
mov     ecx, [esp+0f8h+var_d4]
add     [esi+1e0h], ecx
mov     edx, [esp+0f8h+var_e4]
movzx   edi, word ptr [edx+6]
mov     eax, [esp+0f8h+var_e0]
mov     ecx, [esp+0f8h+var_c0]
shr     edi, 2
and     edi, 1
push    edi
push    eax
push    ecx
push    esi
mov     eax, ebx
call    sub_10059cc0
add     esp, 10h
test    eax, eax
jz      short loc_1005baca
test    edi, edi
jz      short loc_1005babd
or      word ptr [ebx+6], 4
mov     [esp+0f8h+var_e0], 1
mov     [esp+0f8h+var_c0], 0ffffffffh
jmp     loc_1005bbca
mov     eax, [esi+4ch]
mov     edi, [esp+0f8h+var_dc]
inc     eax
push    eax
mov     [esi+4ch], eax
mov     [edi+18h], eax
mov     eax, [esp+0fch+var_e8]
push    0
push    7
mov     [esp+104h+var_c8], 0
call    sub_10025990
mov     [esp+104h+var_d4], eax
inc     eax
add     esp, 0ch
cmp     byte ptr [edi+1eh], 0
mov     [edi+14h], eax
jnz     short loc_1005bb0a
mov     eax, esi
call    sub_10037400
mov     [esp+0f8h+var_c8], eax
mov     eax, [edi+20h]
mov     ecx, [esp+0f8h+var_e4]
mov     dl, [esi+1e8h]
mov     [esp+0f8h+var_10], eax
xor     eax, eax
mov     [esp+0f8h+var_c], eax
mov     [esp+0f8h+var_8], eax
lea     eax, [esp+0f8h+var_14]
push    eax
push    ecx
mov     [esp+100h+var_14], 9
push    esi
mov     [edi+1fh], dl
call    sub_1005b870
fnstcw  word ptr [esp+104h+var_d0]
movzx   eax, word ptr [esp+104h+var_d0]
mov     edx, [esp+104h+var_e4]
mov     ecx, [edi+0ch]
or      eax, 0c00h
fld     qword ptr [edx+1ch]
mov     [esp+104h+var_dc], eax
add     esp, 0ch
cmp     [esp+0f8h+var_c8], 0
fldcw   word ptr [esp+0f8h+var_dc]
fistp   [esp+0f8h+var_20]
mov     eax, dword ptr [esp+0f8h+var_20]
mov     [ecx+18h], eax
fldcw   word ptr [esp+0f8h+var_d0]
jz      short loc_1005bb96
mov     eax, [esp+0f8h+var_c8]
mov     edx, [esp+0f8h+var_e8]
call    sub_10025e30
mov     edx, [edi+18h]
mov     eax, [esp+0f8h+var_e8]
push    edx
push    3
call    sub_10025940
mov     ecx, [esp+100h+var_d4]
mov     edx, [esp+100h+var_e8]
add     esp, 8
cmp     [edx+1ch], ecx
jbe     short loc_1005bbbf
mov     edx, [edx+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+4], eax
mov     byte ptr [esi+13h], 0
mov     dword ptr [esi+3ch], 0
mov     edi, [esp+0f8h+var_cc]
cmp     byte ptr [edi+32h], 0
jnz     loc_1005d34d
lea     edi, [esp+0f8h+var_d4]
mov     eax, ebx
mov     [esp+0f8h+var_d4], 0
call    sub_10035c00
mov     eax, [esp+0f8h+var_d4]
sub     [esi+1e0h], eax
mov     edx, [esp+0f8h+var_ac]
cmp     byte ptr [edx], 4
mov     ecx, [ebx+24h]
mov     [esp+0f8h+var_78], ecx
jbe     short loc_1005bc0f
mov     eax, [ebx+34h]
mov     [esp+0f8h+var_bc], eax
inc     [esp+0f8h+var_c0]
cmp     dword ptr [ebx+38h], 0
jz      loc_1005ba10
mov     eax, [ebx+30h]
mov     ecx, [ebx]
mov     edx, [ebx+28h]
mov     [esp+0f8h+var_d4], eax
movzx   eax, word ptr [ebx+6]
mov     [esp+0f8h+var_b0], ecx
mov     ecx, [ebx+2ch]
and     eax, 1
cmp     dword ptr [ebx+38h], 0
mov     [esp+0f8h+var_94], edx
mov     [esp+0f8h+var_d0], ecx
mov     [esp+0f8h+var_88], eax
jz      short loc_1005bcba
cmp     dword ptr [ebx+40h], 0
jnz     short loc_1005bc87
xor     ecx, ecx
xor     edx, edx
mov     eax, ebx
mov     [eax+3ch], ecx
mov     [eax+40h], ebx
mov     ecx, eax
mov     eax, [eax+38h]
inc     edx
test    eax, eax
jnz     short loc_1005bc55
mov     ecx, [esp+0f8h+var_cc]
mov     eax, [ecx+58h]
test    eax, eax
jz      short loc_1005bc87
cmp     edx, eax
jle     short loc_1005bc87
push    offset atoomanytermsin_1
push    esi
call    sub_1000bb30
add     esp, 8
jmp     loc_1005d349
mov     edx, [esp+0f8h+var_ac]
push    edx
mov     edx, ebx
mov     ecx, esi
call    sub_10056f00
mov     ecx, [esp+0fch+var_44]
add     esp, 4
mov     [esi+1e4h], ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0ech+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     edx, [esp+0f8h+var_bc]
push    edx
mov     edi, ecx
call    sub_1003a690
add     esp, 4
test    eax, eax
jnz     short loc_1005bcdf
mov     eax, [esp+0f8h+var_cc]
test    byte ptr [eax+18h], 20h
jnz     short loc_1005bcdf
mov     [esp+0f8h+var_bc], 0
mov     cl, [ebx+6]
mov     edi, [esp+0f8h+var_bc]
and     cl, 5
cmp     cl, 1
jnz     loc_1005bdf4
mov     edx, [ebx]
push    edx
call    sub_1003a690
add     esp, 4
test    eax, eax
jnz     loc_1005bdf0
mov     ecx, [ebx]
mov     edx, [esp+0f8h+var_cc]
push    0
push    ecx
mov     eax, 0fffeh
and     [ebx+6], ax
push    edx
call    sub_10036840
add     esp, 0ch
mov     [ebx+2ch], eax
mov     [esp+0f8h+var_d0], eax
mov     [esp+0f8h+var_bc], 0
mov     [esp+0f8h+var_a0], 0ffffffffh
mov     eax, [esp+0f8h+var_ac]
cmp     byte ptr [eax], 9
mov     edi, [esp+0f8h+var_e8]
jnz     short loc_1005bd5b
mov     ecx, [esp+0f8h+var_b0]
mov     edx, [ecx]
mov     eax, [eax+4]
push    edx
push    eax
push    2ah
mov     eax, edi
call    sub_10025990
add     esp, 0ch
mov     eax, edi
call    sub_10025c00
fld     ds:dbl_1007cfb0
push    eax
fstp    qword ptr [ebx+1ch]
mov     dword ptr [esp+0fch+var_20], eax
push    ebx
mov     eax, esi
call    sub_10056d30
add     esp, 8
cmp     dword ptr [ebx+8], 0
jnz     short loc_1005bd9b
mov     eax, [esp+0f8h+var_a0]
test    eax, eax
js      short loc_1005bd9b
mov     ecx, edi
call    sub_100260e0
mov     byte ptr [eax], 2bh
or      word ptr [ebx+6], 40h
test    byte ptr [ebx+6], 1
jz      loc_1005be35
mov     edi, [esi+48h]
lea     ecx, [edi+1]
mov     [esi+48h], ecx
mov     edx, [ebx]
push    edx
push    esi
mov     [esp+100h+var_70], edi
call    sub_100555f0
push    0fffffff0h
push    eax
push    0
push    0
push    edi
mov     edi, [esp+114h+var_e8]
push    2ah
mov     eax, edi
call    sub_100259f0
mov     [esp+118h+var_dc], eax
mov     eax, [edi+4]
add     esp, 20h
test    eax, eax
jz      short loc_1005be43
mov     ecx, edi
mov     ecx, [ecx+1ch]
lea     edx, [ecx+ecx*4]
mov     byte ptr [eax+edx*4-11h], 8
jmp     short loc_1005be43
mov     edi, [esp+0f8h+var_bc]
test    edi, edi
jz      loc_1005bd2f
push    edi
push    esi
call    sub_100555f0
mov     ecx, [esi+48h]
push    0fffffff0h
push    eax
mov     [edi+4], ecx
inc     dword ptr [esi+48h]
mov     edx, [edi]
mov     eax, [edi+4]
push    0
add     edx, 2
push    edx
push    eax
mov     eax, [esp+114h+var_e8]
push    2ah
call    sub_100259f0
add     esp, 20h
mov     [esp+0f8h+var_a0], eax
mov     [ebx+18h], eax
jmp     loc_1005bd37
or      eax, 0ffffffffh
mov     [esp+0f8h+var_dc], eax
mov     [esp+0f8h+var_70], eax
mov     edi, [esp+0f8h+var_d0]
xor     edx, edx
cmp     [esp+0f8h+var_e0], edx
jnz     loc_1005c0fa
cmp     edi, edx
jnz     loc_1005c0fa
cmp     [esp+0f8h+var_88], edx
jz      short loc_1005be65
mov     eax, [ebx]
jmp     short loc_1005be67
xor     eax, eax
mov     ecx, [esp+0f8h+var_94]
mov     edx, [esp+0f8h+var_78]
push    0
push    0
push    eax
lea     eax, [esp+104h+var_bc]
push    eax
push    ecx
push    edx
push    esi
call    sub_10069990
mov     edi, eax
add     esp, 1ch
mov     [esp+0f8h+var_94], edi
test    edi, edi
jz      loc_1005d349
fld     qword ptr [ebx+1ch]
fcomp   qword ptr [edi+2ch]
fnstsw  ax
test    ah, 41h
jnz     short loc_1005bea8
fld     qword ptr [edi+2ch]
fstp    qword ptr [ebx+1ch]
cmp     [esp+0f8h+var_a0], 0
jl      short loc_1005beca
cmp     [esp+0f8h+var_bc], 0
jnz     short loc_1005beca
mov     ecx, [esp+0f8h+var_a0]
mov     edx, [esp+0f8h+var_e8]
call    sub_10025f50
mov     dword ptr [ebx+18h], 0ffffffffh
cmp     byte ptr [edi+8], 0
jz      loc_1005c0be
mov     eax, [esp+0f8h+var_dc]
mov     ecx, [esp+0f8h+var_e8]
call    sub_100260e0
cmp     byte ptr [edi+8], 2
mov     [esp+0f8h+var_70], 0ffffffffh
jnz     loc_1005c0bb
inc     dword ptr [esi+4ch]
mov     edi, [esi+4ch]
mov     ecx, [esp+0f8h+var_b0]
mov     ecx, [ecx]
lea     edx, [edi+1]
mov     [esp+0f8h+var_98], edx
add     edx, ecx
mov     [esp+0f8h+var_dc], edx
lea     edx, [edi+ecx*2]
mov     [esi+4ch], edx
mov     edx, [esp+0f8h+var_98]
mov     byte ptr [eax], 7
mov     dword ptr [eax+4], 1
mov     [eax+8], edi
mov     eax, [esp+0f8h+var_b0]
push    1
push    esi
mov     [esp+100h+var_a0], edi
call    sub_10039ce0
mov     eax, [esp+100h+var_e8]
mov     edx, [esp+100h+var_b0]
mov     ecx, [eax+1ch]
mov     edx, [edx]
lea     ecx, [ecx+edx+3]
mov     [esp+100h+var_84], ecx
dec     ecx
push    ecx
push    edi
push    1bh
call    sub_10025990
mov     eax, [esp+10ch+var_b0]
add     esp, 14h
cmp     dword ptr [eax], 0
mov     [esp+0f8h+var_d4], 0
jle     loc_1005c06b
mov     ecx, [esp+0f8h+var_98]
mov     eax, [esp+0f8h+var_dc]
sub     eax, ecx
mov     [esp+0f8h+var_b4], ecx
mov     [esp+0f8h+var_e0], 0
mov     [esp+0f8h+var_9c], eax
jmp     short loc_1005bf90
mov     ecx, [esp+0f8h+var_b0]
mov     edx, [ecx+8]
mov     eax, [esp+0f8h+var_e0]
mov     eax, [eax+edx]
push    esi
call    sub_100358d0
mov     ecx, [esp+0fch+var_9c]
mov     edx, [esp+0fch+var_84]
mov     edi, [esp+0fch+var_e8]
mov     [esp+0fch+var_c8], eax
mov     eax, [esp+0fch+var_b4]
add     esp, 4
add     ecx, eax
push    ecx
push    edx
push    eax
push    4bh
mov     eax, edi
call    sub_10025890
mov     ecx, [edi+4]
mov     edx, [edi]
add     esp, 10h
test    ecx, ecx
jz      short loc_1005c027
cmp     byte ptr [edx+32h], 0
jnz     short loc_1005c027
mov     eax, edi
mov     eax, [eax+1ch]
lea     eax, [eax+eax*4-5]
lea     ecx, [ecx+eax*4]
movsx   eax, byte ptr [ecx+1]
mov     [esp+0f8h+var_e4], ecx
mov     ecx, [ecx+10h]
mov     edi, edx
call    sub_10025e50
cmp     [esp+0f8h+var_c8], 0
mov     ecx, [esp+0f8h+var_e4]
mov     dword ptr [ecx+10h], 0
mov     eax, ecx
jnz     short loc_1005c01a
mov     dword ptr [eax+10h], 0
mov     byte ptr [eax+1], 0
jmp     short loc_1005c037
mov     edx, [esp+0f8h+var_c8]
mov     [eax+10h], edx
mov     byte ptr [eax+1], 0fch
jmp     short loc_1005c037
mov     ecx, [esp+0f8h+var_c8]
mov     eax, 0fffffffch
mov     edi, edx
call    sub_10025e50
mov     eax, [esp+0f8h+var_e8]
mov     ecx, [eax+4]
test    ecx, ecx
jz      short loc_1005c04d
mov     eax, [eax+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [ecx+eax*4-11h], 80h
mov     eax, [esp+0f8h+var_d4]
mov     ecx, [esp+0f8h+var_b0]
add     [esp+0f8h+var_e0], 14h
inc     [esp+0f8h+var_b4]
inc     eax
mov     [esp+0f8h+var_d4], eax
cmp     eax, [ecx]
jl      loc_1005bf90
mov     edx, [esp+0f8h+var_94]
mov     eax, [edx+14h]
mov     edi, [esp+0f8h+var_e8]
push    eax
push    0
push    1
mov     eax, edi
call    sub_10025990
mov     ecx, [esp+104h+var_a0]
add     esp, 0ch
push    ecx
push    0
push    7
mov     eax, edi
call    sub_10025990
mov     edx, [esp+104h+var_b0]
mov     eax, [edx]
mov     ecx, [esp+104h+var_dc]
mov     edx, [esp+104h+var_98]
add     esp, 0ch
push    eax
push    ecx
push    edx
push    0dh
mov     eax, edi
call    sub_10025890
mov     edi, [esp+108h+var_94]
add     esp, 10h
jmp     short loc_1005c0be
mov     byte ptr [eax], 95h
mov     eax, [edi+18h]
mov     ecx, [edi+14h]
mov     edx, [esp+0f8h+var_ac]
push    eax
mov     eax, [esp+0fch+var_70]
push    ecx
mov     ecx, [esp+100h+var_bc]
push    edx
mov     edx, [esp+104h+var_b0]
push    eax
push    ecx
push    0
push    0
push    edx
push    ebx
push    esi
call    sub_10055190
push    edi
call    sub_1006a540
mov     edi, [esp+124h+var_e8]
add     esp, 2ch
jmp     loc_1005d2e1
mov     [esp+0f8h+var_b4], edx
mov     [esp+0f8h+var_e0], edx
cmp     edi, edx
jz      short loc_1005c152
mov     ecx, [ebx]
mov     eax, [ecx]
mov     ecx, [ecx+8]
cmp     eax, edx
jle     short loc_1005c121
add     ecx, 10h
xor     edx, edx
mov     [ecx], dx
dec     eax
add     ecx, 14h
test    eax, eax
jg      short loc_1005c114
mov     eax, [edi]
mov     ecx, [edi+8]
test    eax, eax
jle     short loc_1005c13d
add     ecx, 10h
lea     ecx, [ecx+0]
xor     edx, edx
mov     [ecx], dx
dec     eax
add     ecx, 14h
test    eax, eax
jg      short loc_1005c130
fld     ds:dbl_1007d020
fcom    qword ptr [ebx+1ch]
fnstsw  ax
test    ah, 5
jp      short loc_1005c159
fstp    qword ptr [ebx+1ch]
jmp     short loc_1005c15b
fld1
fstp    qword ptr [ebx+1ch]
jmp     short loc_1005c15b
fstp    st
mov     eax, [esp+0f8h+var_e8]
call    sub_10025c00
mov     ecx, [esp+0f8h+var_78]
mov     [esp+0f8h+var_7c], eax
xor     eax, eax
lea     edx, [esp+0f8h+var_6c]
mov     [esp+0f8h+var_40], eax
mov     [esp+0f8h+var_3c], eax
mov     [esp+0f8h+var_34], eax
mov     [esp+0f8h+var_38], eax
mov     [esp+0f8h+var_30], eax
mov     [esp+0f8h+var_2c], eax
mov     [esp+0f8h+var_28], eax
mov     [esp+0f8h+var_24], eax
mov     [esp+0f8h+var_40], esi
mov     [esp+0f8h+var_3c], ecx
mov     [esp+0f8h+var_34], edx
cmp     edi, eax
jz      short loc_1005c1cc
mov     eax, [edi]
inc     eax
mov     ecx, [esp+0f8h+var_d0]
mov     ebx, [esp+0f8h+var_b0]
lea     edx, [esp+0f8h+var_40]
push    edx
mov     [esp+0fch+var_60], eax
mov     [esp+0fch+var_5c], ecx
call    sub_1003ab90
mov     ebx, [esp+0fch+var_bc]
lea     eax, [esp+0fch+var_40]
add     esp, 4
push    eax
call    sub_1003ab90
mov     ecx, [esp+0fch+var_d4]
xor     edi, edi
add     esp, 4
cmp     ecx, edi
jz      short loc_1005c220
lea     edx, [esp+0f8h+var_40]
push    edx
call    sub_1003ab50
add     esp, 4
mov     eax, [esp+0f8h+var_54]
mov     [esp+0f8h+var_50], eax
cmp     [esp+0f8h+var_48], edi
jle     short loc_1005c27b
mov     [esp+0f8h+var_e4], edi
mov     ecx, [esp+0f8h+var_4c]
or      byte ptr [esp+0f8h+var_24], 8
mov     edx, [esp+0f8h+var_e4]
mov     eax, [edx+ecx]
mov     ebx, [eax+10h]
lea     ecx, [esp+0f8h+var_40]
push    ecx
call    sub_1003ab90
and     byte ptr [esp+0fch+var_24], 0f7h
add     [esp+0fch+var_e4], 10h
inc     edi
add     esp, 4
cmp     edi, [esp+0f8h+var_48]
jl      short loc_1005c23b
mov     edx, [esp+0f8h+var_cc]
cmp     byte ptr [edx+32h], 0
jnz     loc_1005d349
cmp     [esp+0f8h+var_d0], 0
jz      loc_1005d3c9
mov     eax, [esi+48h]
mov     ebx, [esp+0f8h+var_d0]
mov     [esp+0f8h+var_68], eax
inc     eax
push    ebx
push    esi
mov     [esi+48h], eax
call    sub_100555f0
mov     ecx, [esp+100h+var_68]
mov     edi, [esp+100h+var_e8]
push    0fffffff0h
push    eax
mov     [esp+108h+src], eax
mov     eax, [esp+108h+var_60]
push    0
push    eax
push    ecx
push    2bh
mov     eax, edi
call    sub_100259f0
inc     dword ptr [esi+4ch]
mov     [esp+118h+var_b8], eax
mov     eax, [esi+4ch]
mov     [esp+118h+var_9c], eax
inc     eax
mov     [esp+118h+var_74], eax
inc     eax
mov     [esp+118h+var_98], eax
mov     [esi+4ch], eax
mov     eax, edi
call    sub_10025c00
inc     dword ptr [esi+4ch]
mov     edx, [esi+4ch]
mov     [esp+118h+var_84], eax
mov     eax, edi
mov     [esp+118h+var_a0], edx
call    sub_10025c00
mov     [esp+118h+var_dc], eax
mov     eax, [esi+4ch]
lea     ecx, [eax+1]
add     eax, [ebx]
mov     [esp+118h+var_a4], ecx
mov     [esi+4ch], eax
mov     edx, [ebx]
lea     ecx, [eax+1]
add     edx, eax
mov     eax, [esp+118h+var_74]
push    eax
push    0
push    7
mov     eax, edi
mov     [esp+124h+var_c8], ecx
mov     [esi+4ch], edx
call    sub_10025990
mov     ecx, [esp+124h+var_9c]
add     esp, 2ch
push    ecx
push    0
push    7
mov     eax, edi
call    sub_10025990
mov     eax, [esp+104h+var_a4]
mov     edx, [ebx]
add     esp, 0ch
lea     ecx, [edx+eax-1]
push    ecx
push    eax
push    0
push    0ah
mov     eax, edi
call    sub_10025890
mov     edx, [esp+108h+var_dc]
mov     eax, [esp+108h+var_a0]
push    edx
push    eax
push    2
mov     eax, edi
call    sub_10025990
add     esp, 1ch
push    0
push    0
mov     edx, [esp+100h+var_94]
mov     eax, [esp+100h+var_78]
push    0
lea     ecx, [esp+104h+var_d0]
push    ecx
push    edx
push    eax
push    esi
call    sub_10069990
add     esp, 1ch
mov     [esp+0f8h+var_94], eax
test    eax, eax
jz      loc_1005d349
mov     ebx, [esp+0f8h+var_d0]
test    ebx, ebx
jnz     short loc_1005c3d6
mov     ecx, [esp+0f8h+var_8c]
mov     edx, [ecx+2ch]
mov     [esp+0f8h+var_d0], edx
mov     [esp+0f8h+var_e4], ebx
jmp     loc_1005c770
cmp     [esp+0f8h+var_88], 0
jz      short loc_1005c3ec
mov     eax, [esp+0f8h+var_8c]
test    byte ptr [eax+6], 1
mov     eax, offset adistinct
jz      short loc_1005c3f1
mov     eax, offset agroupby
mov     ecx, esi
call    sub_100556d0
mov     eax, [ebx]
mov     edx, [esp+0f8h+var_54]
mov     [esp+0f8h+var_e0], eax
inc     eax
mov     [esp+0f8h+var_e4], 1
mov     [esp+0f8h+var_b4], eax
mov     ecx, eax
mov     [esp+0f8h+var_c4], eax
test    edx, edx
jle     short loc_1005c436
mov     ebx, [esp+0f8h+var_58]
add     ebx, 0ch
cmp     [ebx], eax
jl      short loc_1005c42c
inc     ecx
inc     eax
add     ebx, 18h
dec     edx
jnz     short loc_1005c426
mov     [esp+0f8h+var_c4], ecx
mov     eax, [esi+3ch]
mov     ebx, [esi+40h]
mov     [esp+0f8h+var_88], ebx
cmp     ecx, eax
jg      short loc_1005c451
lea     edx, [ebx+ecx]
sub     eax, ecx
mov     [esi+40h], edx
mov     [esi+3ch], eax
jmp     short loc_1005c460
mov     eax, [esi+4ch]
lea     ebx, [eax+1]
add     ecx, eax
mov     [esp+0f8h+var_88], ebx
mov     [esi+4ch], ecx
mov     eax, esi
call    sub_100388c0
mov     eax, [esp+0f8h+var_d0]
push    0
push    esi
mov     edx, ebx
call    sub_10039ce0
add     ebx, [esp+100h+var_e0]
mov     ecx, [esp+100h+var_68]
push    ebx
push    ecx
push    37h
mov     eax, edi
call    sub_10025990
mov     edx, [esp+10ch+var_b4]
add     esp, 14h
cmp     [esp+0f8h+var_54], 0
mov     [esp+0f8h+var_b4], edx
mov     [esp+0f8h+var_c0], 0
jle     loc_1005c560
mov     ebx, [esp+0f8h+var_88]
mov     eax, [esp+0f8h+var_58]
add     ebx, edx
mov     [esp+0f8h+var_e0], 0
mov     edx, [esp+0f8h+var_b4]
mov     ecx, [esp+0f8h+var_e0]
cmp     [ecx+eax+0ch], edx
jl      short loc_1005c545
mov     edx, [ecx+eax+4]
push    0
push    ebx
push    edx
mov     edx, [ecx+eax]
mov     eax, [ecx+eax+8]
push    edx
mov     edi, esi
call    sub_10038820
add     esp, 10h
mov     [esp+0f8h+var_a8], eax
cmp     ebx, eax
jz      short loc_1005c535
mov     edi, [esp+0f8h+var_e8]
mov     eax, [edi+1ch]
mov     [esp+0f8h+var_80], eax
cmp     [edi+20h], eax
jg      short loc_1005c50e
call    sub_10025810
test    eax, eax
jnz     short loc_1005c535
mov     eax, [esp+0f8h+var_80]
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [esp+0f8h+var_a8]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0fh
inc     [esp+0f8h+var_b4]
mov     eax, [esp+0f8h+var_58]
mov     edi, [esp+0f8h+var_e8]
inc     ebx
mov     ecx, [esp+0f8h+var_c0]
add     [esp+0f8h+var_e0], 18h
inc     ecx
mov     [esp+0f8h+var_c0], ecx
cmp     ecx, [esp+0f8h+var_54]
jl      loc_1005c4c1
mov     al, [esi+13h]
test    al, al
jnz     short loc_1005c573
inc     dword ptr [esi+4ch]
mov     eax, [esi+4ch]
mov     [esp+0f8h+var_e0], eax
jmp     short loc_1005c583
dec     al
movzx   ecx, al
mov     [esi+13h], al
mov     edx, [esi+ecx*4+1ch]
mov     [esp+0f8h+var_e0], edx
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_1005c598
mov     edi, [esp+0f8h+var_e8]
call    sub_10025810
test    eax, eax
jnz     short loc_1005c5cd
mov     eax, [esp+0f8h+var_e8]
mov     edx, [eax+4]
inc     dword ptr [eax+1ch]
lea     ecx, [ebx+ebx*4]
lea     eax, [edx+ecx*4]
mov     ecx, [esp+0f8h+var_88]
mov     edx, [esp+0f8h+var_c4]
mov     [eax+4], ecx
mov     ecx, [esp+0f8h+var_e0]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1fh
mov     ebx, [esp+0f8h+var_e8]
mov     eax, [ebx+1ch]
mov     edx, [esp+0f8h+var_68]
mov     [esp+0f8h+var_80], edx
mov     [esp+0f8h+var_a8], eax
cmp     [ebx+20h], eax
jg      short loc_1005c5f7
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_1005c624
mov     eax, [esp+0f8h+var_a8]
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [esp+0f8h+var_80]
mov     edi, [esp+0f8h+var_e0]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], edi
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 60h
jmp     short loc_1005c628
mov     edi, [esp+0f8h+var_e0]
test    edi, edi
jz      short loc_1005c658
mov     dl, [esi+13h]
cmp     dl, 8
jnb     short loc_1005c658
xor     eax, eax
lea     ecx, [esi+64h]
lea     esp, [esp+0]
cmp     [ecx+10h], edi
jz      short loc_1005c6aa
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_1005c640
movzx   eax, dl
mov     [esi+eax*4+1ch], edi
inc     byte ptr [esi+13h]
mov     ecx, [esp+0f8h+var_c4]
mov     edi, [esp+0f8h+var_88]
mov     eax, esi
call    sub_100384f0
mov     ecx, [esp+0f8h+var_c4]
cmp     ecx, [esi+3ch]
jle     short loc_1005c67a
mov     edx, ecx
mov     eax, edi
mov     [esi+3ch], edx
mov     [esi+40h], eax
mov     ecx, [esp+0f8h+var_94]
push    ecx
call    sub_1006a540
mov     ecx, [esi+48h]
mov     al, [esi+13h]
add     esp, 4
lea     edx, [ecx+1]
mov     [esp+0f8h+var_b4], ecx
mov     [esp+0f8h+var_64], ecx
mov     [esi+48h], edx
test    al, al
jnz     short loc_1005c6b0
inc     dword ptr [esi+4ch]
mov     eax, [esi+4ch]
jmp     short loc_1005c6bc
mov     byte ptr [ecx+8], 1
jmp     short loc_1005c658
dec     al
movzx   edx, al
mov     [esi+13h], al
mov     eax, [esi+edx*4+1ch]
mov     [esp+0f8h+var_e0], eax
mov     eax, [ebx+1ch]
mov     [esp+0f8h+var_a8], eax
cmp     [ebx+20h], eax
jg      short loc_1005c6df
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_1005c70c
mov     ecx, [esp+0f8h+var_b4]
mov     eax, [esp+0f8h+var_a8]
inc     dword ptr [ebx+1ch]
lea     edx, [eax+eax*4]
mov     eax, [ebx+4]
lea     eax, [eax+edx*4]
mov     edx, [esp+0f8h+var_c4]
mov     [eax+4], ecx
mov     ecx, [esp+0f8h+var_e0]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 2ch
mov     eax, [esp+0f8h+var_68]
mov     [esp+0f8h+var_80], eax
mov     eax, [ebx+1ch]
mov     [esp+0f8h+var_a8], eax
cmp     [ebx+20h], eax
jg      short loc_1005c732
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_1005c75d
mov     eax, [esp+0f8h+var_a8]
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [esp+0f8h+var_80]
mov     edx, [esp+0f8h+var_7c]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 46h
mov     eax, esi
mov     byte ptr [esp+0f8h+var_6c+1], 1
call    sub_100388c0
mov     edi, [esp+0f8h+var_e8]
mov     eax, [edi+1ch]
mov     [esp+0f8h+var_80], eax
mov     eax, esi
call    sub_100388c0
cmp     [esp+0f8h+var_e4], 0
jz      short loc_1005c7ca
mov     eax, [esp+0f8h+var_e8]
mov     esi, [eax+1ch]
mov     ebx, [esp+0f8h+var_68]
mov     edi, eax
cmp     [eax+20h], esi
jg      short loc_1005c7a3
call    sub_10025810
test    eax, eax
jnz     short loc_1005c7ca
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [esp+0f8h+var_e0]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 3eh
mov     edx, [esp+0f8h+var_d0]
mov     edi, [esp+0f8h+var_e8]
xor     ebx, ebx
cmp     [edx], ebx
jle     loc_1005c876
lea     esp, [esp+0]
cmp     [esp+0f8h+var_e4], 0
jz      short loc_1005c840
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1005c7f8
call    sub_10025810
test    eax, eax
jnz     short loc_1005c828
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [esp+0f8h+var_b4]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+0f8h+var_c8]
mov     [eax+4], edx
lea     edx, [ebx+ecx]
mov     byte ptr [eax+3], 0
mov     [eax+8], ebx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1dh
test    ebx, ebx
jnz     short loc_1005c869
mov     ecx, [edi+4]
test    ecx, ecx
jz      short loc_1005c869
mov     eax, [edi+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [ecx+eax*4-11h], 20h
jmp     short loc_1005c869
mov     ecx, [esp+0f8h+var_c8]
mov     eax, [esp+0f8h+var_d0]
mov     byte ptr [esp+0f8h+var_6c], 1
lea     esi, [ebx+ecx]
mov     ecx, [eax+8]
lea     edx, [ebx+ebx*4]
mov     eax, [ecx+edx*4]
mov     ecx, [esp+0f8h+var_d8]
call    sub_100399d0
mov     edi, [esp+0f8h+var_e8]
mov     edx, [esp+0f8h+var_d0]
inc     ebx
cmp     ebx, [edx]
jl      loc_1005c7e0
mov     eax, [esp+0f8h+var_d0]
mov     ecx, [eax]
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
mov     [esp+0f8h+var_a8], ecx
cmp     eax, esi
jg      short loc_1005c8f9
test    eax, eax
jz      short loc_1005c892
add     eax, eax
jmp     short loc_1005c897
mov     eax, 33h
mov     edi, [esp+0f8h+var_e8]
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1005c959
mov     eax, [edi]
test    eax, eax
jz      short loc_1005c8d9
cmp     ebx, [eax+0fch]
jb      short loc_1005c8d9
cmp     ebx, [eax+100h]
jnb     short loc_1005c8d9
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005c8e5
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+20h], edx
mov     [edi+4], ebx
mov     edi, [esp+0f8h+var_e8]
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [esp+0f8h+var_a4]
mov     edi, [esp+0f8h+var_e8]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+0f8h+var_c8]
mov     [eax+4], edx
mov     edx, [esp+0f8h+var_a8]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 18h
mov     eax, [esp+0f8h+src]
push    eax
push    edi
mov     ecx, 0fffffffah
mov     eax, esi
call    sub_10025f90
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
add     esp, 8
mov     [esp+0f8h+var_e0], esi
cmp     eax, esi
jg      short loc_1005c9bb
test    eax, eax
jz      short loc_1005c960
add     eax, eax
jmp     short loc_1005c965
mov     esi, 1
jmp     short loc_1005c92e
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005c9e3
mov     eax, [edi]
test    eax, eax
jz      short loc_1005c99f
cmp     ebx, [eax+0fch]
jb      short loc_1005c99f
cmp     ebx, [eax+100h]
jnb     short loc_1005c99f
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005c9ab
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+20h], edx
mov     [edi+4], ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [esp+0f8h+var_e0]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
inc     ecx
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], edx
mov     word ptr [eax], 19h
mov     ecx, [esp+0f8h+var_d0]
mov     edx, [ecx]
mov     eax, [esp+0f8h+var_a4]
mov     esi, [esp+0f8h+var_c8]
mov     ebx, [esp+0f8h+var_d8]
push    edx
push    eax
call    sub_10038990
mov     esi, [esp+100h+var_e8]
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
add     esp, 8
cmp     eax, edi
jg      short loc_1005ca82
test    eax, eax
jz      short loc_1005ca15
add     eax, eax
jmp     short loc_1005ca1a
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
xor     ebx, ebx
add     esp, 4
mov     [esp+0f8h+var_a4], eax
cmp     eax, ebx
jz      short loc_1005caac
mov     eax, [esi]
cmp     eax, ebx
jz      short loc_1005ca5c
mov     ecx, [esp+0f8h+var_a4]
cmp     ecx, [eax+0fch]
jb      short loc_1005ca5c
cmp     ecx, [eax+100h]
jnb     short loc_1005ca5c
movzx   edx, word ptr [eax+0e0h]
jmp     short loc_1005ca70
mov     edx, [esp+0f8h+var_a4]
push    edx
call    dword_10080258
mov     ecx, [esp+0fch+var_a4]
add     esp, 4
mov     edx, eax
mov     eax, 0cccccccdh
mul     edx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ecx
jmp     short loc_1005ca84
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [esp+0f8h+var_98]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+0f8h+var_84]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1005cb1b
cmp     eax, ebx
jz      short loc_1005cabe
add     eax, eax
jmp     short loc_1005cac3
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005cb48
mov     eax, [esi]
test    eax, eax
jz      short loc_1005cafd
cmp     ebx, [eax+0fch]
jb      short loc_1005cafd
cmp     ebx, [eax+100h]
jnb     short loc_1005cafd
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005cb09
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [esp+0f8h+var_74]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+0f8h+var_7c]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 78h
jmp     short loc_1005cb4a
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1005cbb9
cmp     eax, ebx
jz      short loc_1005cb5c
add     eax, eax
jmp     short loc_1005cb61
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005cbe3
mov     eax, [esi]
test    eax, eax
jz      short loc_1005cb9b
cmp     ebx, [eax+0fch]
jb      short loc_1005cb9b
cmp     ebx, [eax+100h]
jnb     short loc_1005cb9b
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005cba7
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [esp+0f8h+var_a0]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+0f8h+var_dc]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2
jmp     short loc_1005cbe5
xor     ebx, ebx
mov     eax, [esp+0f8h+var_e0]
cmp     eax, ebx
jl      short loc_1005cbfe
mov     ecx, [esi+1ch]
cmp     ecx, eax
jbe     short loc_1005cbfe
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
mov     [eax+edx*4+8], ecx
mov     edx, [esp+0f8h+var_d8]
lea     ecx, [esp+0f8h+var_6c]
push    ecx
push    edx
call    sub_1005b150
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
add     esp, 8
cmp     eax, edi
jg      short loc_1005cc82
cmp     eax, ebx
jz      short loc_1005cc25
add     eax, eax
jmp     short loc_1005cc2a
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005ccad
mov     eax, [esi]
test    eax, eax
jz      short loc_1005cc64
cmp     ebx, [eax+0fch]
jb      short loc_1005cc64
cmp     ebx, [eax+100h]
jnb     short loc_1005cc64
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005cc70
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     eax, [esi+4]
mov     ecx, 1
add     [esi+1ch], ecx
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
mov     ecx, [esp+0f8h+var_9c]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
jmp     short loc_1005ccaf
xor     ebx, ebx
cmp     [esp+0f8h+var_e4], ebx
jz      short loc_1005cd05
mov     eax, [esi+1ch]
mov     edx, [esp+0f8h+var_68]
mov     [esp+0f8h+var_a8], edx
mov     [esp+0f8h+src], eax
cmp     [esi+20h], eax
jg      short loc_1005ccd7
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1005cd4a
mov     ecx, [esi+4]
mov     eax, [esp+0f8h+src]
inc     dword ptr [esi+1ch]
mov     edx, [esp+0f8h+var_a8]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+0f8h+var_80]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 51h
jmp     short loc_1005cd4a
mov     edx, [esp+0f8h+var_94]
push    edx
call    sub_1006a540
mov     ecx, [esi+4]
add     esp, 4
cmp     ecx, ebx
jz      short loc_1005cd4a
mov     eax, [esp+0f8h+var_b8]
mov     edi, [esi]
lea     eax, [eax+eax*4]
lea     ecx, [ecx+eax*4]
movsx   eax, byte ptr [ecx+1]
mov     [esp+0f8h+var_b8], ecx
mov     ecx, [ecx+10h]
call    sub_10025e50
mov     eax, [esp+0f8h+var_b8]
mov     [eax], ebx
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     byte ptr [eax], 95h
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1005cdb9
cmp     eax, ebx
jz      short loc_1005cd5c
add     eax, eax
jmp     short loc_1005cd61
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005cde3
mov     eax, [esi]
test    eax, eax
jz      short loc_1005cd9b
cmp     ebx, [eax+0fch]
jb      short loc_1005cd9b
cmp     ebx, [eax+100h]
jnb     short loc_1005cd9b
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005cda7
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [esp+0f8h+var_98]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [esp+0f8h+var_84]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2
jmp     short loc_1005cde5
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1005ce54
cmp     eax, ebx
jz      short loc_1005cdf7
add     eax, eax
jmp     short loc_1005cdfc
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005ce7a
mov     eax, [esi]
test    eax, eax
jz      short loc_1005ce36
cmp     ebx, [eax+0fch]
jb      short loc_1005ce36
cmp     ebx, [eax+100h]
jnb     short loc_1005ce36
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005ce42
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [esp+0f8h+var_7c]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 1
jmp     short loc_1005ce7c
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
mov     [esp+0f8h+src], edi
cmp     eax, edi
jg      short loc_1005ceef
cmp     eax, ebx
jz      short loc_1005ce92
add     eax, eax
jmp     short loc_1005ce97
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005cf1d
mov     eax, [esi]
test    eax, eax
jz      short loc_1005ced1
cmp     ebx, [eax+0fch]
jb      short loc_1005ced1
cmp     ebx, [eax+100h]
jnb     short loc_1005ced1
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005cedd
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
mov     ecx, 1
add     [esi+1ch], ecx
lea     eax, [edi+edi*4]
lea     eax, [edx+eax*4]
mov     [eax+4], ecx
mov     ecx, [esp+0f8h+var_74]
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7
jmp     short loc_1005cf1f
xor     ebx, ebx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1005cf8e
cmp     eax, ebx
jz      short loc_1005cf31
add     eax, eax
jmp     short loc_1005cf36
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005cfb4
mov     eax, [esi]
test    eax, eax
jz      short loc_1005cf70
cmp     ebx, [eax+0fch]
jb      short loc_1005cf70
cmp     ebx, [eax+100h]
jnb     short loc_1005cf70
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005cf7c
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [esp+0f8h+var_98]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 3
jmp     short loc_1005cfb6
xor     ebx, ebx
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_1005cfcf
mov     ecx, [esp+0f8h+var_84]
lea     edx, ds:4[ecx*4]
mov     ecx, [esi+1ch]
sub     eax, edx
mov     [eax], ecx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1005d03e
cmp     eax, ebx
jz      short loc_1005cfe1
add     eax, eax
jmp     short loc_1005cfe6
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005d067
mov     eax, [esi]
test    eax, eax
jz      short loc_1005d020
cmp     ebx, [eax+0fch]
jb      short loc_1005d020
cmp     ebx, [eax+100h]
jnb     short loc_1005d020
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005d02c
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [esp+0f8h+var_9c]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
lea     ecx, [edi+2]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 78h
jmp     short loc_1005d069
xor     ebx, ebx
mov     eax, [esi+1ch]
mov     ecx, [esi+20h]
mov     [esp+0f8h+var_b8], eax
cmp     ecx, eax
jg      short loc_1005d0df
lea     eax, [ecx+ecx]
cmp     ecx, ebx
jnz     short loc_1005d083
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005d105
mov     eax, [esi]
test    eax, eax
jz      short loc_1005d0bd
cmp     ebx, [eax+0fch]
jb      short loc_1005d0bd
cmp     ebx, [eax+100h]
jnb     short loc_1005d0bd
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005d0c9
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [esp+0f8h+var_b8]
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [esp+0f8h+var_98]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 3
jmp     short loc_1005d107
xor     ebx, ebx
lea     eax, [esp+0f8h+var_6c]
push    eax
mov     eax, [esp+0fch+var_d8]
call    sub_1005afe0
mov     ecx, [esp+0fch+var_d4]
mov     edx, [esp+0fch+var_d8]
add     esp, 4
push    8
inc     edi
push    edi
push    ecx
push    edx
call    sub_1003a1c0
mov     eax, [esp+108h+src]
mov     ecx, [esp+108h+var_ac]
mov     edx, [esp+108h+var_70]
push    eax
mov     eax, [esp+10ch+var_bc]
push    edi
push    ecx
push    edx
mov     edx, [esp+118h+var_d8]
push    eax
mov     eax, [esp+11ch+var_8c]
mov     ecx, [eax]
push    ebx
push    ebx
push    ecx
push    eax
push    edx
call    sub_10055190
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
add     esp, 38h
cmp     eax, edi
jg      short loc_1005d1cf
cmp     eax, ebx
jz      short loc_1005d172
add     eax, eax
jmp     short loc_1005d177
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1005d1f5
mov     eax, [esi]
test    eax, eax
jz      short loc_1005d1b1
cmp     ebx, [eax+0fch]
jb      short loc_1005d1b1
cmp     ebx, [eax+100h]
jnb     short loc_1005d1b1
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005d1bd
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     [esi+20h], edx
xor     ebx, ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [esp+0f8h+var_98]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 3
jmp     short loc_1005d1f7
xor     ebx, ebx
mov     eax, [esi+28h]
cmp     eax, ebx
jz      short loc_1005d210
mov     edx, [esp+0f8h+var_dc]
lea     ecx, ds:4[edx*4]
mov     edx, [esi+1ch]
sub     eax, ecx
mov     [eax], edx
mov     ecx, [esp+0f8h+var_d8]
lea     eax, [esp+0f8h+var_6c]
push    eax
push    ecx
call    sub_1005ad90
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
add     esp, 8
cmp     eax, edi
jg      short loc_1005d29c
cmp     eax, ebx
jz      short loc_1005d237
add     eax, eax
jmp     short loc_1005d23c
mov     eax, 33h
mov     ebx, [esi+4]
lea     edx, [eax+eax*4]
mov     eax, [esi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_1005d2c0
mov     ebx, [esp+0f8h+var_e8]
mov     eax, [ebx]
test    eax, eax
jz      short loc_1005d27a
cmp     esi, [eax+0fch]
jb      short loc_1005d27a
cmp     esi, [eax+100h]
jnb     short loc_1005d27a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1005d286
push    esi
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [ebx+4], esi
mov     esi, [esp+0f8h+var_e8]
mov     [ebx+20h], edx
xor     ebx, ebx
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [esp+0f8h+var_a0]
lea     eax, [edi+edi*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 3
mov     esi, [esp+0f8h+var_d8]
mov     edi, [esp+0f8h+var_e8]
mov     eax, [edi+28h]
test    eax, eax
jz      short loc_1005d2e1
mov     ecx, [esp+0f8h+var_7c]
lea     edx, ds:4[ecx*4]
mov     ecx, [edi+1ch]
sub     eax, edx
mov     [eax], ecx
cmp     [esp+0f8h+var_70], 0
jl      short loc_1005d2f7
mov     eax, offset adistinct
mov     ecx, esi
call    sub_100556d0
cmp     [esp+0f8h+var_bc], 0
jz      short loc_1005d325
mov     eax, offset aorderby
mov     ecx, esi
call    sub_100556d0
mov     edx, [esp+0f8h+var_ac]
mov     eax, [esp+0f8h+var_b0]
mov     ecx, [eax]
push    edx
mov     edx, [esp+0fch+var_8c]
push    ecx
push    edi
push    edx
push    esi
call    sub_100558d0
add     esp, 14h
mov     eax, [edi+28h]
test    eax, eax
jz      short loc_1005d341
mov     ecx, dword ptr [esp+0f8h+var_20]
lea     edx, ds:4[ecx*4]
mov     ecx, [edi+1ch]
sub     eax, edx
mov     [eax], ecx
mov     [esp+0f8h+var_c4], 0
mov     edi, [esp+0f8h+var_cc]
mov     ebx, [esp+0f8h+var_c4]
mov     edx, [esp+0f8h+var_44]
mov     [esi+1e4h], edx
test    ebx, ebx
jnz     short loc_1005d381
mov     eax, [esp+0f8h+var_ac]
cmp     byte ptr [eax], 5
jnz     short loc_1005d381
mov     ecx, [esp+0f8h+var_b0]
mov     edx, [esp+0f8h+var_78]
push    ecx
push    edx
push    esi
call    sub_10056500
add     esp, 0ch
cmp     dword ptr [edi+1e8h], 0
mov     eax, [esp+0f8h+var_58]
jz      loc_1005d9e1
test    eax, eax
jz      loc_1005d9cd
cmp     eax, [edi+0fch]
jb      loc_1005d9cd
cmp     eax, [edi+100h]
jnb     loc_1005d9cd
movzx   eax, word ptr [edi+0e0h]
mov     ecx, [edi+1e8h]
add     [ecx], eax
jmp     loc_1005da14
mov     edi, [esp+0f8h+var_8c]
lea     ecx, [esp+0f8h+var_6c]
mov     eax, edi
mov     [esp+0f8h+var_9c], 0
call    sub_1005a310
mov     ebx, eax
mov     [esp+0f8h+src], ebx
test    ebx, ebx
jz      loc_1005d5dd
mov     edi, [esp+0f8h+var_d8]
mov     esi, [ebx+44h]
mov     ecx, [edi]
call    sub_10053b80
mov     ecx, [edi+48h]
mov     [esp+0f8h+var_dc], ecx
inc     ecx
mov     [edi+48h], ecx
mov     ecx, [ebx+14h]
mov     [esp+0f8h+var_74], eax
xor     esi, esi
push    eax
mov     eax, edi
mov     [esp+0fch+var_e4], esi
mov     [esp+0fch+var_a4], esi
mov     [esp+0fch+var_84], ecx
call    sub_10043c40
mov     edx, [ebx]
mov     eax, [ebx+14h]
mov     ecx, [esp+0fch+var_74]
add     esp, 4
push    edx
push    esi
push    eax
push    ecx
mov     eax, edi
call    sub_1003ef00
mov     eax, [ebx+10h]
add     esp, 10h
test    eax, eax
jz      short loc_1005d490
mov     edi, edi
cmp     byte ptr [eax+2eh], 0
jnz     short loc_1005d464
test    esi, esi
jz      short loc_1005d462
mov     edx, [eax+24h]
cmp     edx, [esi+24h]
jge     short loc_1005d464
mov     esi, eax
mov     eax, [eax+14h]
test    eax, eax
jnz     short loc_1005d450
mov     [esp+0f8h+var_a4], esi
test    esi, esi
jz      short loc_1005d490
mov     eax, [esi+24h]
cmp     eax, [ebx+8]
jge     short loc_1005d490
mov     ecx, [esi+28h]
push    esi
push    edi
mov     [esp+100h+var_84], ecx
call    sub_10044250
add     esp, 8
mov     [esp+0f8h+var_e4], eax
mov     esi, [esp+0f8h+var_e8]
mov     eax, [esi+1ch]
mov     [esp+0f8h+var_b8], eax
cmp     [esi+20h], eax
jg      short loc_1005d4ab
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1005d4e3
mov     eax, [esp+0f8h+var_b8]
inc     dword ptr [esi+1ch]
mov     ecx, [esp+0f8h+var_dc]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [esp+0f8h+var_84]
mov     [eax+4], ecx
mov     ecx, [esp+0f8h+var_74]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 27h
cmp     [esp+0f8h+var_e4], 0
jz      short loc_1005d52f
mov     ecx, [esi+4]
mov     edi, [esi]
test    ecx, ecx
jz      short loc_1005d521
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005d521
mov     eax, [esi+1ch]
lea     edx, [eax+eax*4-5]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     ebx, [ecx+edx*4]
mov     ecx, [ebx+10h]
call    sub_10025e50
mov     eax, [esp+0f8h+var_e4]
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0fah
mov     ebx, [esp+0f8h+src]
jmp     short loc_1005d52f
mov     ecx, [esp+0f8h+var_e4]
mov     eax, 0fffffff0h
call    sub_10025e50
mov     ecx, [esp+0f8h+var_4c]
mov     eax, [esi+1ch]
mov     edx, [ecx+8]
mov     [esp+0f8h+src], edx
mov     [esp+0f8h+var_b8], eax
cmp     [esi+20h], eax
jg      short loc_1005d554
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1005d583
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     eax, [esp+0f8h+var_b8]
mov     edx, [esp+0f8h+var_dc]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+0f8h+src]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 20h
mov     eax, [esi+1ch]
mov     [esp+0f8h+var_b8], eax
cmp     [esi+20h], eax
jg      short loc_1005d59a
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1005d5c5
mov     eax, [esp+0f8h+var_b8]
inc     dword ptr [esi+1ch]
mov     ecx, [esp+0f8h+var_dc]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 2dh
mov     ecx, [esp+0f8h+var_a4]
mov     edx, [esp+0f8h+var_d8]
mov     eax, ebx
call    sub_1005b770
mov     esi, [esp+0f8h+var_d8]
jmp     loc_1005d6cb
mov     eax, edi
mov     [esp+0f8h+var_dc], 0
call    sub_1005a2a0
mov     bl, al
test    bl, bl
jz      short loc_1005d632
mov     edx, [edi]
mov     eax, [edx+8]
mov     ecx, [eax]
mov     edx, [ecx+10h]
mov     edi, [esp+0f8h+var_cc]
push    0
push    edx
push    edi
call    sub_10036840
add     esp, 0ch
mov     [esp+0f8h+var_dc], eax
mov     [esp+0f8h+var_9c], eax
test    eax, eax
jz      short loc_1005d632
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005d632
mov     edx, [eax+8]
cmp     bl, 1
setnz   cl
mov     [edx+0ch], cl
mov     eax, [eax+8]
mov     ecx, [eax]
mov     byte ptr [ecx], 98h
lea     edx, [esp+0f8h+var_6c]
push    edx
push    esi
call    sub_1005ad90
mov     eax, [esp+100h+var_94]
push    0
movzx   ecx, bl
push    ecx
mov     ecx, [esp+108h+var_78]
push    0
lea     edx, [esp+10ch+var_dc]
push    edx
push    eax
push    ecx
push    esi
call    sub_10069990
mov     edi, eax
add     esp, 24h
test    edi, edi
jnz     short loc_1005d680
mov     edx, [esp+0f8h+var_9c]
mov     eax, [esp+0f8h+var_cc]
push    edx
push    eax
call    sub_10037020
add     esp, 8
jmp     loc_1005d349
lea     ecx, [esp+0f8h+var_6c]
push    ecx
push    esi
call    sub_1005b150
add     esp, 8
cmp     [esp+0f8h+var_dc], 0
jnz     short loc_1005d6b0
test    bl, bl
jz      short loc_1005d6b0
mov     edx, [edi+18h]
mov     eax, [esp+0f8h+var_e8]
push    edx
push    0
push    1
call    sub_10025990
add     esp, 0ch
push    edi
call    sub_1006a540
lea     eax, [esp+0fch+var_6c]
add     esp, 4
push    eax
mov     eax, esi
call    sub_1005afe0
add     esp, 4
mov     ecx, [esp+0f8h+var_7c]
mov     edx, [esp+0f8h+var_d4]
push    8
push    ecx
push    edx
push    esi
mov     [esp+108h+var_bc], 0
call    sub_1003a1c0
mov     eax, [esp+108h+var_8c]
mov     ecx, [eax]
mov     eax, [esi+8]
mov     [esp+108h+var_d4], ecx
mov     ecx, [esp+108h+var_ac]
movzx   edx, byte ptr [ecx]
mov     ecx, [ecx+4]
add     esp, 10h
mov     [esp+0f8h+var_c0], eax
mov     [esp+0f8h+var_e4], edx
mov     [esp+0f8h+var_c4], ecx
test    eax, eax
jz      loc_1005d9b6
mov     edx, [esp+0f8h+var_7c]
mov     eax, [esp+0f8h+var_8c]
mov     ebx, [esp+0f8h+var_c0]
push    edx
push    eax
mov     eax, ebx
call    sub_10054f90
mov     ecx, [esp+100h+var_d4]
mov     eax, [ecx]
mov     ecx, [esp+100h+var_ac]
add     esp, 8
cmp     dword ptr [ecx+8], 0
mov     [esp+0f8h+var_c8], eax
jnz     short loc_1005d74c
mov     edx, [esi+4ch]
inc     edx
mov     [ecx+8], edx
mov     [ecx+0ch], eax
add     [esi+4ch], eax
cmp     [esp+0f8h+var_e4], 3
mov     eax, ecx
mov     edi, [eax+8]
jz      short loc_1005d779
mov     eax, esi
call    sub_100388c0
mov     eax, [esp+0f8h+var_d4]
xor     ecx, ecx
cmp     [esp+0f8h+var_e4], 5
mov     edx, edi
setz    cl
push    ecx
push    esi
call    sub_10039ce0
add     esp, 8
mov     eax, [esp+0f8h+var_e4]
dec     eax
cmp     eax, 9
ja      def_1005d787
jmp     ds:jpt_1005d787[eax*4]
mov     al, [esi+13h]
test    al, al
jnz     short loc_1005d79d
inc     dword ptr [esi+4ch]
mov     esi, [esi+4ch]
jmp     short loc_1005d7a9
dec     al
movzx   edx, al
mov     [esi+13h], al
mov     esi, [esi+edx*4+1ch]
mov     eax, [esp+0f8h+var_c8]
push    esi
push    eax
push    edi
push    1fh
mov     eax, ebx
call    sub_10025890
mov     ecx, [esp+108h+var_c4]
push    esi
push    ecx
push    61h
mov     eax, ebx
call    sub_10025990
mov     edx, [esp+114h+var_d8]
add     esp, 1ch
call    sub_1003ac10
mov     esi, edx
jmp     def_1005d787
mov     edx, [esp+0f8h+var_c8]
mov     eax, [esp+0f8h+var_c4]
push    edx
push    edi
push    eax
push    62h
mov     eax, ebx
call    sub_10025890
add     esp, 10h
jmp     def_1005d787
mov     al, [esi+13h]
test    al, al
jnz     short loc_1005d80a
inc     dword ptr [esi+4ch]
mov     ecx, [esi+4ch]
mov     [esp+0f8h+var_e4], ecx
jmp     short loc_1005d81a
dec     al
movzx   edx, al
mov     [esi+13h], al
mov     eax, [esi+edx*4+1ch]
mov     [esp+0f8h+var_e4], eax
mov     ecx, [esp+0f8h+var_e4]
mov     edx, [esp+0f8h+var_c8]
push    ecx
push    edx
push    edi
push    1fh
mov     eax, ebx
call    sub_10025890
mov     ecx, esi
call    sub_1003abf0
mov     edi, [esp+108h+var_c4]
mov     esi, eax
push    esi
push    edi
push    38h
mov     eax, ebx
call    sub_10025990
mov     eax, [esp+114h+var_e4]
add     esp, 1ch
push    esi
push    eax
push    edi
push    39h
mov     eax, ebx
call    sub_10025890
mov     eax, [ebx+4]
add     esp, 10h
test    eax, eax
jz      short loc_1005d86e
mov     ebx, [ebx+1ch]
lea     ecx, [ebx+ebx*4]
mov     byte ptr [eax+ecx*4-11h], 8
mov     edx, [esp+0f8h+var_d8]
call    sub_1003ac10
mov     esi, [esp+0f8h+var_e4]
call    sub_1003ac10
mov     esi, edx
jmp     def_1005d787
mov     edx, [esp+0f8h+var_8c]
mov     eax, [esp+0f8h+var_d4]
mov     ecx, [eax+8]
mov     eax, [ecx]
add     edx, 5
mov     [esp+0f8h+var_b8], edx
mov     edx, [esp+0f8h+var_ac]
mov     bl, [edx+1]
call    sub_100359d0
mov     edx, [esp+0f8h+var_b8]
mov     ecx, esi
mov     [edx], al
call    sub_1003abf0
push    1
push    edx
mov     ebx, eax
mov     eax, [esp+100h+var_c0]
push    ebx
push    1
push    edi
push    1fh
call    sub_100259f0
mov     ecx, 1
mov     eax, esi
call    sub_100384f0
mov     eax, [esp+110h+var_c4]
push    ebx
push    eax
mov     eax, [esp+118h+var_c0]
push    61h
call    sub_10025990
mov     edx, [esp+11ch+var_d8]
add     esp, 24h
mov     esi, ebx
call    sub_1003ac10
mov     esi, edx
jmp     short def_1005d787
mov     ecx, [esp+0f8h+var_c4]
push    ecx
push    1
push    7
mov     eax, ebx
call    sub_10025990
add     esp, 0ch
jmp     short def_1005d787
mov     edx, [esp+0f8h+var_c4]
mov     ebx, [esp+0f8h+var_d8]
push    1
push    edx
mov     esi, edi
call    sub_10038990
add     esp, 8
mov     esi, ebx
jmp     short def_1005d787
cmp     [esp+0f8h+var_e4], 0ah
jnz     short loc_1005d942
mov     eax, [esp+0f8h+var_ac]
mov     ecx, [eax+4]
push    ecx
push    4
mov     eax, ebx
call    sub_10025940
add     esp, 8
jmp     short def_1005d787
mov     ebx, [esp+0f8h+var_c8]
mov     eax, [esp+0f8h+var_c0]
push    ebx
push    edi
push    10h
call    sub_10025990
add     esp, 0ch
mov     ecx, ebx
mov     eax, esi
call    sub_100384f0
mov     edx, [esp+0f8h+var_8c]
mov     ecx, [edx+8]
mov     [esp+0f8h+var_b8], ecx
test    ecx, ecx
jz      short loc_1005d9b6
mov     eax, [esp+0f8h+var_c0]
mov     ebx, [eax+1ch]
mov     edi, eax
cmp     [eax+20h], ebx
jg      short loc_1005d989
call    sub_10025810
test    eax, eax
jnz     short loc_1005d9b6
mov     ecx, [esp+0f8h+var_b8]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [ebx+ebx*4]
lea     eax, [edx+eax*4]
mov     [eax+4], ecx
mov     ecx, [esp+0f8h+var_7c]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     dword ptr [eax+0ch], 0ffffffffh
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 7ah
mov     edx, [esp+0f8h+var_9c]
mov     eax, [esp+0f8h+var_cc]
push    edx
push    eax
call    sub_10037020
add     esp, 8
jmp     loc_1005d2c4
push    eax
call    dword_10080258
mov     ecx, [edi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1005da14
test    eax, eax
jz      short loc_1005da0b
cmp     eax, [edi+0fch]
jb      short loc_1005da0b
cmp     eax, [edi+100h]
jnb     short loc_1005da0b
mov     ecx, [edi+0f8h]
mov     [eax], ecx
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], eax
jmp     short loc_1005da14
push    eax
call    sub_10009770
add     esp, 4
cmp     dword ptr [edi+1e8h], 0
mov     eax, [esp+0f8h+var_4c]
jz      short loc_1005da87
test    eax, eax
jz      short loc_1005da5e
cmp     eax, [edi+0fch]
jb      short loc_1005da5e
cmp     eax, [edi+100h]
jnb     short loc_1005da5e
movzx   eax, word ptr [edi+0e0h]
mov     edi, [edi+1e8h]
add     [edi], eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0ech+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    eax
call    dword_10080258
mov     edi, [edi+1e8h]
add     esp, 4
add     [edi], eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0ech+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jz      short loc_1005dac6
cmp     eax, [edi+0fch]
jb      short loc_1005dac6
cmp     eax, [edi+100h]
jnb     short loc_1005dac6
mov     edx, [edi+0f8h]
mov     [eax], edx
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0ech+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    eax
call    sub_10009770
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+0ech+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esp+0f8h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
mov     eax, 1
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
cmp     dword ptr [esi+0ch], 0
push    edi
jnz     short loc_1005db53
cmp     [ebp+arg_8], 0
jz      short loc_1005db53
mov     edi, [ebp+arg_4]
lea     eax, [edi+edi]
jmp     short loc_1005db58
mov     eax, [ebp+arg_4]
mov     edi, eax
mov     edx, [esi+14h]
mov     ecx, [esi+8]
add     edx, eax
cmp     edx, ecx
jle     short loc_1005db9c
lea     eax, [eax+ecx*2]
mov     [esi+8], eax
lea     ebx, ds:0[eax*4]
mov     eax, [esi]
mov     [esp+18h+var_4], eax
call    sub_1006edd0
test    eax, eax
jnz     loc_1005dd09
mov     ecx, [esp+18h+var_4]
push    ebx
push    ecx
call    sub_10009890
add     esp, 8
test    eax, eax
jz      loc_1005dd09
mov     [esi], eax
cmp     dword ptr [esi+0ch], 0
jnz     short loc_1005dc05
xor     ebx, ebx
mov     [esi+10h], edi
test    edi, edi
jle     short loc_1005dbdc
jmp     short loc_1005dbb0
mov     edx, [ebp+arg_c]
mov     eax, [edx+ebx*4]
push    eax
push    offset as
call    sub_1000b020
add     esp, 8
test    eax, eax
jz      loc_1005dd09
mov     ecx, [esi+14h]
mov     edx, [esi]
mov     [edx+ecx*4], eax
inc     dword ptr [esi+14h]
inc     ebx
cmp     ebx, edi
jl      short loc_1005dbb0
cmp     [ebp+arg_8], 0
jz      loc_1005dce8
xor     ebx, ebx
mov     [esp+18h+var_4], ebx
test    edi, edi
jle     loc_1005dce5
mov     ecx, [ebp+arg_8]
mov     ecx, [ecx+ebx*4]
test    ecx, ecx
jnz     short loc_1005dc32
xor     eax, eax
jmp     loc_1005dccd
cmp     [esi+10h], edi
jz      short loc_1005dbdc
mov     eax, [esi+4]
push    eax
call    sub_10009770
push    offset asqlite3gettabl
call    sub_1000b020
mov     [esi+4], eax
mov     eax, 1
add     esp, 8
mov     [esi+18h], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_1005dc46
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1005dc40
sub     eax, ecx
and     eax, 3fffffffh
lea     edi, [eax+1]
call    sub_1006edd0
test    eax, eax
jnz     loc_1005dd09
lea     edx, [edi-1]
cmp     edx, 7ffffefeh
ja      loc_1005dd01
cmp     dword_10080230, eax
jz      short loc_1005dcf1
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1005dc87
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [esp+18h+var_8]
mov     eax, edi
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_1005dca5
push    eax
call    dword_10080284
add     esp, 4
mov     ebx, [esp+18h+var_4]
mov     eax, [esp+18h+var_8]
mov     [esp+18h+var_4], eax
test    eax, eax
jz      short loc_1005dd09
mov     ecx, [ebp+arg_8]
mov     ecx, [ecx+ebx*4]
push    edi
push    ecx
push    eax
call    memcpy
mov     edi, [ebp+arg_4]
mov     eax, [esp+24h+var_4]
add     esp, 0ch
mov     edx, [esi+14h]
mov     ecx, [esi]
inc     ebx
mov     [ecx+edx*4], eax
inc     dword ptr [esi+14h]
mov     [esp+18h+var_4], ebx
cmp     ebx, edi
jl      loc_1005dbf4
inc     dword ptr [esi+0ch]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    edi
call    dword_1008024c
add     esp, 4
mov     [esp+18h+var_8], eax
jmp     short loc_1005dcad
xor     eax, eax
mov     [esp+18h+var_8], eax
jmp     short loc_1005dcad
pop     edi
mov     dword ptr [esi+18h], 7
pop     esi
mov     eax, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+arg_8]
sub     esp, 1ch
push    ebx
push    esi
push    edi
xor     edi, edi
mov     [eax], edi
mov     eax, [ebp+arg_10]
cmp     eax, edi
jz      short loc_1005dd3c
mov     [eax], edi
mov     eax, [ebp+arg_c]
cmp     eax, edi
jz      short loc_1005dd45
mov     [eax], edi
mov     esi, [ebp+arg_14]
cmp     esi, edi
jz      short loc_1005dd4e
mov     [esi], edi
mov     [esp+28h+var_18], edi
mov     [esp+28h+var_10], edi
mov     [esp+28h+var_c], edi
mov     [esp+28h+var_8], 1
mov     [esp+28h+var_14], 14h
mov     [esp+28h+var_4], edi
call    sub_1006edd0
test    eax, eax
jz      short loc_1005dd7b
xor     eax, eax
jmp     short loc_1005dd85
push    50h
call    sub_100094a0
add     esp, 4
mov     [esp+28h+var_1c], eax
cmp     eax, edi
jnz     short loc_1005dd9f
mov     ecx, [ebp+arg_0]
mov     eax, 7
mov     [ecx+28h], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
lea     edx, [esp+2ch+var_1c]
push    edx
mov     [eax], edi
mov     eax, [ebp+arg_4]
mov     edi, [ebp+arg_0]
push    offset sub_1005db30
push    eax
push    edi
call    sub_1004ff10
mov     ecx, [esp+3ch+var_8]
mov     edx, [esp+3ch+var_1c]
mov     ebx, eax
add     esp, 14h
mov     [edx], ecx
cmp     bl, 4
jnz     short loc_1005de1f
mov     eax, [esp+28h+var_1c]
add     eax, 4
push    eax
call    sub_1005ded0
add     esp, 4
cmp     [esp+28h+var_18], 0
jz      short loc_1005de11
test    esi, esi
jz      short loc_1005de04
mov     ecx, [esi]
push    ecx
call    sub_10009770
mov     edx, [esp+2ch+var_18]
push    edx
push    offset as
call    sub_1000b020
add     esp, 0ch
mov     [esi], eax
mov     eax, [esp+28h+var_18]
push    eax
call    sub_10009770
add     esp, 4
mov     eax, [esp+28h+var_4]
mov     [edi+28h], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esp+28h+var_18]
push    ecx
call    sub_10009770
add     esp, 4
test    ebx, ebx
jz      short loc_1005de49
mov     edx, [esp+28h+var_1c]
add     edx, 4
push    edx
call    sub_1005ded0
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+28h+var_8]
cmp     [esp+28h+var_14], eax
jle     short loc_1005de94
mov     ebx, [esp+28h+var_1c]
lea     esi, ds:0[eax*4]
call    sub_1006edd0
test    eax, eax
jnz     short loc_1005de75
push    esi
push    ebx
call    sub_10009890
add     esp, 8
test    eax, eax
jnz     short loc_1005de98
mov     eax, [esp+28h+var_1c]
add     eax, 4
push    eax
call    sub_1005ded0
mov     eax, 7
add     esp, 4
mov     [edi+28h], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+28h+var_1c]
mov     ecx, [ebp+arg_8]
add     eax, 4
mov     [ecx], eax
mov     eax, [ebp+arg_10]
test    eax, eax
jz      short loc_1005dead
mov     edx, [esp+28h+var_c]
mov     [eax], edx
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_1005deba
mov     ecx, [esp+28h+var_10]
mov     [eax], ecx
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
test    ebx, ebx
jz      loc_1005dfa2
mov     eax, [ebx-4]
sub     ebx, 4
push    edi
mov     edi, 1
mov     [ebp+arg_0], eax
cmp     eax, edi
jle     loc_1005df98
mov     eax, dword_10081774
push    esi
lea     esp, [esp+0]
mov     esi, [ebx+edi*4]
test    esi, esi
jz      loc_1005df8d
cmp     dword_10080230, 0
jz      short loc_1005df7e
test    eax, eax
jz      short loc_1005df22
push    eax
call    dword_1008027c
add     esp, 4
push    esi
call    dword_10080258
mov     ecx, dword_10081668
neg     eax
add     ecx, eax
add     esp, 4
mov     dword_10081668, ecx
cmp     ecx, dword_10081690
jle     short loc_1005df4a
mov     dword_10081690, ecx
mov     eax, dword_1008168c
dec     eax
mov     dword_1008168c, eax
cmp     eax, dword_100816b4
jle     short loc_1005df62
mov     dword_100816b4, eax
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
test    eax, eax
jz      short loc_1005df8d
push    eax
call    dword_10080284
jmp     short loc_1005df85
push    esi
call    dword_10080250
mov     eax, dword_10081774
add     esp, 4
inc     edi
cmp     edi, [ebp+arg_0]
jl      loc_1005df00
pop     esi
push    ebx
call    sub_10009770
add     esp, 4
pop     edi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    edi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      loc_1005e0e7
push    esi
jmp     short loc_1005dfc8
mov     edi, [ebp+arg_0]
mov     ecx, [edi+14h]
mov     eax, [edi+20h]
push    ecx
push    ebx
mov     [ebp+var_4], edi
mov     [ebp+arg_0], eax
call    sub_10036430
mov     edx, [edi+18h]
push    edx
push    ebx
call    sub_10037020
mov     esi, [edi+8]
add     esp, 10h
mov     [ebp+var_8], esi
test    esi, esi
jz      short loc_1005e05e
mov     eax, [esi]
push    eax
push    ebx
call    sub_10037020
mov     ecx, [esi+24h]
push    ecx
mov     eax, ebx
call    sub_10043720
mov     edx, [esi+28h]
push    edx
push    ebx
call    sub_10036430
mov     eax, [esi+2ch]
push    eax
push    ebx
call    sub_10037020
mov     ecx, [esi+30h]
push    ecx
push    ebx
call    sub_10036430
mov     edx, [esi+34h]
push    edx
push    ebx
call    sub_10037020
mov     esi, [esi+38h]
mov     edi, ebx
call    sub_100545e0
mov     esi, [ebp+var_8]
mov     eax, [esi+44h]
push    eax
push    ebx
call    sub_10036430
mov     ecx, [esi+48h]
push    ecx
push    ebx
call    sub_10036430
add     esp, 3ch
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
mov     edi, [ebp+var_4]
mov     edi, [edi+1ch]
mov     esi, ebx
call    sub_100433b0
mov     eax, [ebp+var_4]
test    ebx, ebx
jz      short loc_1005e0d3
cmp     dword ptr [ebx+1e8h], 0
jz      short loc_1005e0ad
cmp     eax, [ebx+0fch]
jb      short loc_1005e099
cmp     eax, [ebx+100h]
jnb     short loc_1005e099
movzx   eax, word ptr [ebx+0e0h]
mov     ecx, [ebx+1e8h]
add     [ecx], eax
jmp     short loc_1005e0dc
push    eax
call    dword_10080258
mov     ecx, [ebx+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1005e0dc
cmp     eax, [ebx+0fch]
jb      short loc_1005e0d3
cmp     eax, [ebx+100h]
jnb     short loc_1005e0d3
mov     edx, [ebx+0f8h]
mov     [eax], edx
dec     dword ptr [ebx+0e4h]
mov     [ebx+0f8h], eax
jmp     short loc_1005e0dc
push    eax
call    sub_10009770
add     esp, 4
cmp     [ebp+arg_0], 0
jnz     loc_1005dfc5
pop     esi
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [eax]
mov     edx, [ecx+10h]
mov     ecx, [edx+1ch]
push    edi
xor     edi, edi
cmp     byte ptr [eax+1cah], 0
jz      short loc_1005e10c
xor     eax, eax
pop     edi
pop     ebp
retn
mov     eax, [ebp+arg_0]
push    ebx
cmp     ecx, [eax+44h]
jz      short loc_1005e160
mov     ebx, [ecx+30h]
test    ebx, ebx
jz      short loc_1005e160
push    esi
lea     ecx, [ecx+0]
mov     esi, [ebx+8]
mov     ecx, [esi+18h]
cmp     ecx, [eax+44h]
jnz     short loc_1005e14f
mov     edx, [eax]
mov     ecx, [esi+4]
call    sub_1000bca0
test    eax, eax
jnz     short loc_1005e14c
test    edi, edi
jz      short loc_1005e141
mov     eax, edi
jmp     short loc_1005e147
mov     edx, [ebp+arg_0]
mov     eax, [edx+40h]
mov     [esi+20h], eax
mov     edi, esi
mov     eax, [ebp+arg_0]
mov     ebx, [ebx]
test    ebx, ebx
jnz     short loc_1005e120
pop     esi
test    edi, edi
jz      short loc_1005e160
pop     ebx
mov     eax, edi
pop     edi
pop     ebp
retn
mov     eax, [eax+40h]
pop     ebx
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 2ch
push    ebx
mov     ebx, [ebp+arg_0]
mov     ecx, [ebx]
push    esi
push    edi
xor     edi, edi
mov     esi, eax
mov     eax, [ebp+arg_4]
mov     [esp+38h+var_1c], edi
mov     [esp+38h+var_28], edi
mov     [esp+38h+var_2c], ecx
cmp     [ebp+arg_1c], edi
jz      short loc_1005e1bf
cmp     [eax+4], edi
jbe     short loc_1005e1b1
push    offset atemporarytrigg
push    ebx
call    sub_1000bb30
add     esp, 8
jmp     loc_1005e53b
mov     [esp+38h+var_24], 1
mov     [esp+38h+var_20], esi
jmp     short loc_1005e222
cmp     eax, edi
jz      short loc_1005e20a
cmp     [eax+4], edi
jbe     short loc_1005e20a
cmp     byte ptr [ecx+79h], 0
jz      short loc_1005e1e4
push    offset acorruptdatabas
push    ebx
call    sub_1000bb30
add     esp, 8
inc     dword ptr [ebx+44h]
jmp     loc_1005e53b
mov     [esp+38h+var_20], eax
mov     eax, esi
call    sub_1003ffb0
cmp     eax, edi
jge     short loc_1005e212
push    esi
push    offset aunknowndatabas_0
push    ebx
call    sub_1000bb30
add     esp, 0ch
inc     dword ptr [ebx+44h]
jmp     loc_1005e53b
movzx   eax, byte ptr [ecx+78h]
mov     [esp+38h+var_20], esi
mov     [esp+38h+var_24], eax
cmp     eax, edi
jl      loc_1005e53b
mov     ecx, [esp+38h+var_2c]
mov     esi, [ebp+arg_14]
cmp     esi, edi
jz      loc_1005e53b
cmp     byte ptr [ecx+32h], 0
jnz     loc_1005e53b
cmp     byte ptr [ecx+79h], 0
jz      short loc_1005e24f
cmp     [esp+38h+var_24], 1
jz      short loc_1005e24f
mov     eax, [esi+4]
call    sub_10009810
mov     [esi+4], edi
mov     eax, esi
mov     esi, ebx
call    sub_10044bd0
mov     edi, [esp+38h+var_2c]
cmp     byte ptr [edi+79h], 0
jnz     short loc_1005e282
mov     ecx, [ebp+arg_4]
cmp     dword ptr [ecx+4], 0
jnz     short loc_1005e282
test    eax, eax
jz      short loc_1005e282
mov     edx, [edi+10h]
mov     eax, [eax+44h]
cmp     eax, [edx+1ch]
jnz     short loc_1005e282
mov     [esp+38h+var_24], 1
cmp     byte ptr [edi+32h], 0
jnz     loc_1005e53b
mov     ecx, [esp+38h+var_20]
mov     eax, [esp+38h+var_24]
push    ecx
push    offset atrigger
lea     ecx, [esp+40h+var_10]
call    sub_1003e930
add     esp, 8
test    eax, eax
jz      short loc_1005e2c1
mov     edx, [ebp+arg_14]
push    edx
mov     eax, ecx
push    eax
call    sub_1003e970
add     esp, 8
test    eax, eax
jnz     loc_1005e53b
mov     eax, [ebp+arg_14]
call    sub_10044bd0
mov     [esp+38h+var_18], eax
test    eax, eax
jnz     short loc_1005e2e4
cmp     byte ptr [edi+78h], 1
jnz     loc_1005e53b
mov     byte ptr [edi+7ah], 1
jmp     loc_1005e53b
test    byte ptr [eax+22h], 10h
jz      short loc_1005e2fd
push    offset acannotcreatetr
push    ebx
call    sub_1000bb30
add     esp, 8
jmp     loc_1005e53b
mov     eax, [esp+38h+var_20]
push    edi
call    sub_1003fe10
add     esp, 4
mov     [esp+38h+var_28], eax
test    eax, eax
jz      loc_1005e53b
mov     edi, eax
call    sub_10040080
test    eax, eax
jnz     loc_1005e53b
mov     ecx, [esp+38h+var_2c]
mov     edx, [esp+38h+var_24]
mov     edi, [ecx+10h]
mov     ecx, [esp+38h+var_28]
shl     edx, 4
mov     [esp+38h+var_14], edx
call    sub_1000ba20
mov     edx, [edx+edi+0ch]
push    ecx
add     edx, 28h
push    edx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
test    eax, eax
jz      short loc_1005e389
cmp     [ebp+arg_20], 0
jnz     short loc_1005e375
mov     eax, [esp+38h+var_20]
push    eax
push    offset atriggertalread
push    ebx
call    sub_1000bb30
add     esp, 0ch
jmp     loc_1005e53b
mov     ecx, [esp+38h+var_24]
push    ecx
mov     eax, ebx
call    sub_10043c40
add     esp, 4
jmp     loc_1005e53b
mov     esi, [esp+38h+var_18]
mov     eax, [esi]
push    7
push    offset asqlite_0
push    eax
mov     [esp+44h+var_20], eax
call    sub_1000bcf0
add     esp, 0ch
test    eax, eax
jnz     short loc_1005e3bd
push    offset acannotcreatetr_0
push    ebx
call    sub_1000bb30
add     esp, 8
inc     dword ptr [ebx+44h]
jmp     loc_1005e53b
mov     eax, [esi+1ch]
mov     ecx, [ebp+arg_8]
test    eax, eax
jz      short loc_1005e3f9
cmp     ecx, 30h
jz      short loc_1005e3f5
mov     eax, offset abefore
cmp     ecx, 22h
jz      short loc_1005e3db
mov     eax, offset aafter
mov     edx, [ebp+arg_14]
push    0
push    edx
push    eax
push    offset acannotcreatest
push    ebx
call    sub_1000bb30
add     esp, 14h
jmp     loc_1005e53b
test    eax, eax
jnz     short loc_1005e417
cmp     ecx, 30h
jnz     short loc_1005e417
mov     eax, [ebp+arg_14]
push    0
push    eax
push    offset acannotcreatein
push    ebx
call    sub_1000bb30
add     esp, 10h
jmp     loc_1005e53b
mov     esi, [esi+44h]
mov     ecx, [esp+38h+var_2c]
call    sub_10053b80
mov     edx, [ebp+arg_1c]
mov     esi, eax
mov     ecx, esi
add     ecx, ecx
mov     ecx, [edi+ecx*8]
mov     eax, 7
mov     [esp+38h+var_24], ecx
test    edx, edx
jz      short loc_1005e441
mov     edi, [edi+10h]
jmp     short loc_1005e443
mov     edi, ecx
cmp     esi, 1
jz      short loc_1005e44c
test    edx, edx
jz      short loc_1005e451
mov     eax, 5
mov     edx, [esp+38h+var_20]
mov     ecx, [esp+38h+var_28]
push    edi
push    edx
push    ecx
push    eax
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1005e53b
mov     eax, offset asqlitetempmast
cmp     esi, 1
jz      short loc_1005e47e
mov     eax, offset asqlitemaster
mov     edx, [esp+38h+var_24]
push    edx
push    0
push    eax
push    12h
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1005e53b
cmp     [ebp+arg_8], 30h
jnz     short loc_1005e4a7
mov     [ebp+arg_8], 22h
mov     esi, [esp+38h+var_2c]
mov     edi, 24h
mov     eax, esi
call    sub_10009a20
mov     [esp+38h+var_1c], eax
test    eax, eax
jz      short loc_1005e53b
mov     eax, [esp+38h+var_28]
mov     edi, [esp+38h+var_1c]
mov     ecx, [ebp+arg_14]
mov     [edi], eax
mov     ebx, [ecx+8]
push    esi
mov     [esp+3ch+var_28], 0
call    sub_10009b70
mov     [edi+4], eax
mov     eax, [esp+3ch+var_14]
mov     ebx, esi
mov     edx, [ebx+10h]
mov     ecx, [edx+eax+0ch]
mov     edx, [esp+3ch+var_18]
add     esp, 4
cmp     [ebp+arg_8], 22h
mov     [edi+14h], ecx
mov     eax, [edx+44h]
mov     cl, [ebp+arg_c]
push    0
mov     [edi+18h], eax
mov     eax, [ebp+src]
push    1
setnz   dl
push    eax
inc     dl
push    ebx
mov     [edi+8], cl
mov     [edi+9], dl
call    sub_100365c0
mov     ecx, [ebp+arg_10]
push    ecx
push    ebx
mov     [edi+0ch], eax
call    sub_10036c40
mov     edx, [ebp+arg_0]
mov     [edi+10h], eax
add     esp, 18h
mov     [edx+200h], edi
mov     ebx, edx
mov     eax, [esp+38h+var_28]
mov     ecx, [esp+38h+var_2c]
call    sub_10009810
mov     eax, [ebp+arg_14]
push    eax
mov     eax, [esp+3ch+var_2c]
call    sub_10043720
mov     edi, [ebp+arg_10]
mov     esi, [esp+3ch+var_2c]
add     esp, 4
call    sub_100433b0
mov     ecx, [ebp+src]
push    ecx
push    esi
call    sub_10036430
add     esp, 8
cmp     dword ptr [ebx+200h], 0
jnz     short loc_1005e5c5
mov     eax, [esp+38h+var_1c]
test    eax, eax
jz      short loc_1005e5c5
mov     edx, [eax+1ch]
push    edx
mov     ebx, esi
call    sub_1005dfb0
mov     ebx, [esp+3ch+var_1c]
mov     eax, [ebx]
add     esp, 4
mov     ecx, esi
call    sub_10009810
mov     eax, [ebx+4]
mov     ecx, esi
call    sub_10009810
mov     eax, [ebx+0ch]
push    eax
push    esi
call    sub_10036430
mov     edi, [ebx+10h]
add     esp, 8
call    sub_100433b0
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 38h
mov     edx, [ebp+arg_0]
mov     eax, [edx]
push    ebx
push    esi
mov     esi, [edx+200h]
xor     ecx, ecx
push    edi
mov     [ebp+var_10], esi
mov     [ebp+var_8], eax
mov     [edx+200h], ecx
cmp     [edx+44h], ecx
jnz     loc_1005e7b8
cmp     esi, ecx
jz      loc_1005e801
mov     edi, [esi]
mov     ebx, [esi+14h]
mov     [ebp+var_14], edi
mov     edi, 0fff0bdc0h
mov     [ebp+var_c], edi
cmp     ebx, ecx
jz      short loc_1005e63f
mov     [ebp+var_c], ecx
mov     ecx, [eax+14h]
test    ecx, ecx
jle     short loc_1005e63c
mov     eax, [eax+10h]
add     eax, 0ch
cmp     [eax], ebx
jz      short loc_1005e63c
mov     edx, [ebp+var_c]
inc     edx
add     eax, 10h
mov     [ebp+var_c], edx
cmp     edx, ecx
mov     edx, [ebp+arg_0]
jl      short loc_1005e627
mov     edi, [ebp+var_c]
mov     eax, [ebp+arg_4]
mov     [esi+1ch], eax
test    eax, eax
jz      short loc_1005e659
mov     eax, [ebp+arg_4]
mov     [eax+4], esi
mov     eax, [eax+20h]
mov     [ebp+arg_4], eax
test    eax, eax
jnz     short loc_1005e649
mov     ecx, [esi]
mov     [ebp+var_24], ecx
mov     eax, ecx
test    ecx, ecx
jz      short loc_1005e67d
cmp     byte ptr [ecx], 0
jz      short loc_1005e676
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1005e670
sub     eax, ecx
and     eax, 3fffffffh
mov     [ebp+var_20], eax
test    edi, edi
js      short loc_1005e6c3
cmp     edi, 1
jz      short loc_1005e6c3
mov     eax, [edx]
mov     [ebp+var_34], edx
mov     edx, [eax+10h]
mov     ecx, edi
add     ecx, ecx
mov     eax, [edx+ecx*8]
lea     ecx, [ebp+var_24]
mov     [ebp+var_30], eax
mov     [ebp+var_2c], offset atrigger
mov     [ebp+var_28], ecx
mov     edx, [esi+1ch]
push    edx
lea     eax, [ebp+var_34]
push    eax
call    sub_1003ebc0
add     esp, 8
test    eax, eax
jnz     loc_1005e7b8
mov     edx, [ebp+arg_0]
mov     ecx, [ebp+var_8]
cmp     byte ptr [ecx+79h], 0
jnz     loc_1005e77c
push    edx
call    sub_10056c90
add     esp, 4
mov     [ebp+var_1c], eax
test    eax, eax
jz      loc_1005e7b8
mov     eax, [ebp+arg_0]
push    0
call    sub_10043d50
mov     eax, [ebp+arg_8]
mov     edi, [eax+4]
mov     ebx, [eax]
mov     edx, [ebp+var_8]
add     esp, 4
call    sub_10009bc0
mov     edi, [ebp+var_c]
mov     [ebp+var_18], eax
mov     ecx, offset asqlitetempmast
cmp     edi, 1
jz      short loc_1005e716
mov     ecx, offset asqlitemaster
mov     edx, [esi+4]
mov     ebx, [ebp+var_8]
mov     esi, [ebp+arg_0]
push    eax
mov     eax, [ebp+var_14]
push    edx
mov     edx, [ebx+10h]
push    eax
push    ecx
mov     ecx, edi
add     ecx, ecx
mov     eax, [edx+ecx*8]
push    eax
push    offset ainsertintoqsva_0
push    esi
call    sub_1003f410
mov     eax, [ebp+var_18]
add     esp, 1ch
mov     ecx, ebx
call    sub_10009810
push    edi
call    sub_10040c40
mov     ecx, [ebp+var_14]
add     esp, 4
push    ecx
mov     edx, ebx
push    offset atypetriggerand_0
push    edx
call    sub_1000ae80
mov     esi, [ebp+var_1c]
add     esp, 0ch
push    eax
mov     eax, [ebp+var_c]
push    eax
call    sub_10025a60
mov     esi, [ebp+var_10]
mov     edi, [ebp+var_c]
add     esp, 8
mov     ecx, [ebp+var_8]
cmp     byte ptr [ecx+79h], 0
jz      short loc_1005e7b8
mov     edx, ecx
mov     eax, [edx+10h]
mov     ecx, [ebp+var_14]
add     edi, edi
mov     edx, [eax+edi*8+0ch]
push    esi
mov     ebx, esi
call    sub_1000ba20
push    eax
push    ecx
lea     eax, [edx+28h]
call    sub_1000cfc0
add     esp, 0ch
mov     [ebp+var_10], eax
test    eax, eax
jz      short loc_1005e817
mov     ecx, [ebp+var_8]
mov     byte ptr [ecx+32h], 1
mov     esi, eax
test    esi, esi
jz      short loc_1005e801
mov     eax, [esi+1ch]
mov     ebx, [ebp+var_8]
push    eax
call    sub_1005dfb0
mov     eax, [esi]
mov     edi, ebx
add     esp, 4
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+4]
mov     ecx, edi
call    sub_10009810
mov     ecx, [esi+0ch]
push    ecx
push    edi
call    sub_10036430
mov     edi, [esi+10h]
add     esp, 8
mov     esi, ebx
call    sub_100433b0
mov     eax, [ebp+var_10]
mov     ecx, ebx
call    sub_10009810
mov     edx, [ebp+arg_4]
mov     ebx, [ebp+var_8]
push    edx
call    sub_1005dfb0
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebx+18h]
cmp     [ebx+14h], edx
jnz     short loc_1005e801
mov     ecx, [ebx+4]
call    sub_1000ba20
push    ecx
add     edx, 8
push    edx
mov     esi, eax
call    sub_1000cf50
mov     edx, [eax+40h]
mov     [ebx+20h], edx
add     esp, 8
mov     [eax+40h], ebx
jmp     short loc_1005e801
push    esi
mov     esi, eax
mov     ecx, 28h
call    sub_10009a40
test    eax, eax
jz      short loc_1005e88a
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     [eax+1ch], ecx
mov     [eax+20h], ecx
mov     [eax+24h], ecx
mov     [eax+8], edi
mov     word ptr [eax], 6374h
pop     esi
retn
test    edi, edi
jz      short loc_1005e8a1
push    edi
push    esi
call    sub_10054390
add     esp, 8
mov     eax, edi
mov     ecx, esi
call    sub_10009810
xor     eax, eax
pop     esi
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, eax
mov     eax, [ebp+arg_0]
push    edi
mov     edi, [eax+4]
add     edi, 28h
mov     ecx, edi
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1005e931
push    edi
push    0
push    ebx
call    memset
mov     eax, [ebp+arg_0]
mov     ecx, [eax+4]
mov     edx, [eax]
add     esp, 0ch
push    ecx
push    edx
lea     edi, [ebx+28h]
push    edi
call    memcpy
mov     eax, [ebp+arg_0]
add     esp, 0ch
mov     [ebx+0ch], edi
mov     edi, [ebp+arg_c]
mov     ecx, [eax+4]
push    1
push    edi
push    esi
mov     [ebx+10h], ecx
mov     byte ptr [ebx], 69h
call    sub_10036d20
mov     edx, [ebp+arg_4]
add     esp, 0ch
mov     [ebx+8], eax
mov     eax, [ebp+arg_8]
push    1
push    eax
push    esi
mov     [ebx+1ch], edx
call    sub_10036840
mov     cl, [ebp+arg_10]
add     esp, 0ch
mov     [ebx+18h], eax
mov     [ebx+1], cl
jmp     short loc_1005e93c
mov     edi, [ebp+arg_4]
call    sub_100433b0
mov     edi, [ebp+arg_c]
mov     edx, [ebp+arg_8]
push    edx
push    esi
call    sub_10037020
add     esp, 8
test    edi, edi
jz      short loc_1005e960
push    edi
push    esi
call    sub_10054390
add     esp, 8
mov     eax, edi
mov     ecx, esi
call    sub_10009810
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, eax
mov     eax, [ebp+arg_0]
mov     ebx, [eax+4]
add     ebx, 28h
push    edi
mov     ecx, ebx
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1005e9ef
push    ebx
push    0
push    edi
call    memset
mov     eax, [ebp+arg_0]
mov     ecx, [eax+4]
mov     edx, [eax]
add     esp, 0ch
push    ecx
push    edx
lea     ebx, [edi+28h]
push    ebx
call    memcpy
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
add     esp, 0ch
push    1
mov     [edi+0ch], ebx
mov     ecx, [eax+4]
push    edx
push    esi
mov     [edi+10h], ecx
mov     byte ptr [edi], 6bh
call    sub_10036840
add     esp, 0ch
push    0
mov     [edi+18h], eax
mov     eax, [ebp+src]
push    1
push    eax
push    esi
call    sub_100365c0
mov     cl, [ebp+arg_c]
add     esp, 10h
mov     [edi+14h], eax
mov     [edi+1], cl
mov     edx, [ebp+arg_4]
push    edx
push    esi
call    sub_10037020
mov     eax, [ebp+src]
push    eax
push    esi
call    sub_10036430
add     esp, 10h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_4]
push    ebx
mov     ebx, [eax+4]
push    esi
mov     esi, [ebp+arg_0]
add     ebx, 28h
push    edi
mov     ecx, ebx
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1005ea7c
push    ebx
push    0
push    edi
call    memset
mov     esi, [ebp+arg_4]
mov     ecx, [esi+4]
mov     edx, [esi]
add     esp, 0ch
push    ecx
push    edx
lea     ebx, [edi+28h]
push    ebx
call    memcpy
mov     ecx, [ebp+src]
mov     edx, [ebp+arg_0]
add     esp, 0ch
push    0
push    1
mov     [edi+0ch], ebx
mov     eax, [esi+4]
push    ecx
push    edx
mov     [edi+10h], eax
mov     byte ptr [edi], 6ah
call    sub_100365c0
add     esp, 10h
mov     [edi+14h], eax
mov     byte ptr [edi+1], 63h
mov     eax, [ebp+src]
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
call    sub_10036430
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi]
xor     ebx, ebx
mov     [ebp+var_8], ebx
mov     [ebp+var_4], esi
cmp     [esi+32h], bl
jnz     loc_1005ebbe
cmp     [esi+79h], bl
jnz     short loc_1005eae0
lea     eax, [edi+4]
push    eax
push    esi
call    sub_100537d0
add     esp, 8
cmp     eax, ebx
jz      short loc_1005eae0
inc     dword ptr [edi+44h]
mov     [edi+0ch], eax
jmp     loc_1005ebbe
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+8]
mov     edx, [ecx+4]
mov     [ebp+var_10], edx
mov     [ebp+var_14], esi
mov     eax, esi
cmp     esi, ebx
jnz     short loc_1005eafa
mov     [ebp+var_c], ebx
jmp     short loc_1005eb0f
cmp     [esi], bl
jz      short loc_1005eb05
mov     edi, edi
inc     eax
cmp     [eax], bl
jnz     short loc_1005eb00
sub     eax, esi
and     eax, 3fffffffh
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+14h]
mov     [ebp+var_18], eax
cmp     eax, ebx
jle     short loc_1005eb7b
mov     edi, ebx
cmp     ebx, 2
jge     short loc_1005eb26
xor     edi, 1
mov     edx, [ebp+var_10]
test    edx, edx
jz      short loc_1005eb43
mov     eax, [ebp+var_4]
mov     eax, [eax+10h]
mov     ecx, edi
add     ecx, ecx
mov     ecx, [eax+ecx*8]
call    sub_1000bca0
test    eax, eax
jnz     short loc_1005eb69
mov     ecx, [ebp+var_4]
mov     edx, [ecx+10h]
add     edi, edi
mov     eax, [edx+edi*8+0ch]
push    esi
mov     esi, [ebp+var_c]
add     eax, 28h
push    eax
call    sub_1000cf50
add     esp, 8
mov     [ebp+var_8], eax
test    eax, eax
jnz     short loc_1005ebae
mov     esi, [ebp+var_14]
inc     ebx
cmp     ebx, [ebp+var_18]
jl      short loc_1005eb1c
cmp     [ebp+var_8], 0
jnz     short loc_1005ebab
mov     edi, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
cmp     [ebp+arg_8], 0
jnz     short loc_1005eb98
push    0
push    ecx
push    offset anosuchtriggers
push    edi
call    sub_1000bb30
add     esp, 10h
mov     byte ptr [edi+11h], 1
jmp     short loc_1005ebbb
mov     ecx, [ebp+var_10]
push    ecx
push    edi
call    sub_10043d00
add     esp, 8
mov     byte ptr [edi+11h], 1
jmp     short loc_1005ebbb
mov     eax, [ebp+var_8]
mov     edx, [ebp+arg_0]
push    eax
push    edx
call    sub_1005ebe0
add     esp, 8
mov     esi, [ebp+var_4]
mov     eax, [ebp+arg_4]
push    eax
mov     eax, esi
call    sub_10043720
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, [ebp+arg_0]
mov     eax, [eax]
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebx+14h]
push    edi
mov     edi, 0fff0bdc0h
mov     [ebp+var_4], edi
test    esi, esi
jz      short loc_1005ec29
mov     edx, [eax+14h]
mov     [ebp+var_4], 0
test    edx, edx
jle     short loc_1005ec26
mov     eax, [eax+10h]
add     eax, 0ch
cmp     [eax], esi
jz      short loc_1005ec26
mov     ecx, [ebp+var_4]
inc     ecx
add     eax, 10h
mov     [ebp+var_4], ecx
cmp     ecx, edx
jl      short loc_1005ec14
mov     edi, [ebp+var_4]
mov     ecx, [ebx+4]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1005ec44
cmp     byte ptr [ecx], 0
jz      short loc_1005ec3d
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1005ec37
sub     eax, ecx
and     eax, 3fffffffh
push    ecx
mov     ecx, [ebx+18h]
add     ecx, 8
push    ecx
mov     esi, eax
call    sub_1000cf50
mov     edx, [ebp+arg_0]
mov     edx, [edx]
mov     edx, [edx+10h]
mov     esi, edi
add     esi, esi
mov     esi, [edx+esi*8]
add     esp, 8
mov     ecx, 10h
cmp     edi, 1
jnz     loc_1005ed56
mov     [ebp+var_8], offset asqlitetempmast
lea     ecx, [edi+0dh]
mov     eax, [eax]
mov     edx, [ebx]
mov     ebx, [ebp+arg_0]
push    esi
push    eax
push    edx
push    ecx
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1005ee19
push    esi
push    eax
mov     eax, [ebp+var_8]
push    eax
push    9
mov     eax, ebx
call    sub_1003ee70
add     esp, 10h
test    eax, eax
jnz     loc_1005ee19
push    ebx
call    sub_10056c90
mov     ebx, eax
add     esp, 4
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      loc_1005ee19
mov     eax, [ebp+arg_0]
mov     esi, [eax+1b0h]
test    esi, esi
jnz     short loc_1005ecd9
mov     esi, eax
push    edi
call    sub_10043c40
mov     eax, [ebp+arg_0]
mov     ecx, edi
mov     edx, 1
add     esp, 4
shl     edx, cl
push    edi
push    eax
or      [esi+154h], edx
call    sub_1003fe70
push    offset dword_10076ec0
push    9
push    ebx
call    sub_10025d70
mov     ecx, [ebp+arg_4]
mov     esi, [ebx+4]
mov     ecx, [ecx]
mov     edi, [ebx]
mov     [ebp+var_10], eax
add     esp, 14h
inc     eax
mov     [ebp+var_c], ecx
test    esi, esi
jz      short loc_1005ed81
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005ed81
test    eax, eax
jns     short loc_1005ed2e
mov     eax, [ebx+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [esi+edx*4+1]
mov     ecx, [esi+edx*4+10h]
lea     esi, [esi+edx*4]
call    sub_10025e50
mov     ecx, [ebp+var_c]
xor     eax, eax
mov     [esi+10h], eax
cmp     ecx, eax
jnz     short loc_1005ed62
mov     [esi+10h], eax
mov     [esi+1], al
jmp     short loc_1005ed88
mov     [ebp+var_8], offset asqlitemaster
jmp     loc_1005ec7d
call    sub_1000ba20
mov     edi, eax
mov     eax, [ebp+var_8]
mov     edx, [eax]
mov     ebx, ecx
call    sub_10009bc0
mov     ebx, [ebp+var_8]
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0ffh
jmp     short loc_1005ed88
xor     eax, eax
call    sub_10025e50
mov     eax, [ebp+var_10]
mov     ecx, [ebx+4]
mov     edi, [ebx]
add     eax, 4
test    ecx, ecx
jz      short loc_1005edc5
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005edc5
test    eax, eax
jns     short loc_1005eda5
mov     eax, [ebx+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [ecx+edx*4+1]
lea     esi, [ecx+edx*4]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     dword ptr [esi+10h], offset atrigger
mov     byte ptr [esi+1], 0feh
jmp     short loc_1005edd4
mov     ecx, offset atrigger
mov     eax, 0fffffffeh
call    sub_10025e50
mov     edi, [ebp+var_4]
mov     esi, [ebp+arg_0]
push    edi
call    sub_10040c40
add     esp, 4
push    0
push    0
push    2dh
mov     eax, ebx
call    sub_10025990
mov     eax, [ebp+arg_4]
mov     ecx, [eax]
add     esp, 0ch
push    0
push    ecx
push    0
push    0
push    edi
push    6eh
mov     eax, ebx
call    sub_100259f0
mov     eax, 3
add     esp, 18h
cmp     [esi+4ch], eax
jge     short loc_1005ee19
mov     [esi+4ch], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+10h]
add     eax, eax
mov     ebx, [edx+eax*8+0ch]
add     ebx, 28h
push    edi
mov     [ebp+var_8], ebx
mov     eax, esi
test    esi, esi
jz      short loc_1005ee55
cmp     byte ptr [esi], 0
jz      short loc_1005ee4e
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1005ee48
sub     eax, esi
and     eax, 3fffffffh
cmp     dword ptr [ebx], 0
mov     [ebp+var_4], eax
jz      short loc_1005ee9a
mov     edx, eax
xor     eax, eax
mov     ecx, esi
cmp     edx, eax
jle     short loc_1005ee8e
jmp     short loc_1005ee70
movzx   edi, byte ptr [ecx]
movzx   edi, ds:byte_10076030[edi]
lea     ebx, ds:0[eax*8]
xor     edi, ebx
dec     edx
xor     eax, edi
inc     ecx
test    edx, edx
jg      short loc_1005ee70
mov     ebx, [ebp+var_8]
xor     edx, edx
div     dword ptr [ebx]
mov     eax, [ebp+var_4]
mov     [ebp+var_8], edx
jmp     short loc_1005eea1
mov     [ebp+var_8], 0
mov     edx, [ebp+var_8]
push    eax
push    esi
mov     eax, ebx
call    sub_1000ce60
add     esp, 8
test    eax, eax
jz      loc_1005ef6a
mov     edi, [eax+8]
mov     edx, [ebp+var_8]
mov     ecx, ebx
mov     [ebp+var_4], edi
call    sub_1000cf00
test    edi, edi
jz      loc_1005ef6a
mov     edx, [edi+18h]
cmp     [edi+14h], edx
jnz     short loc_1005ef20
mov     ecx, [edi+4]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1005eef3
cmp     byte ptr [ecx], 0
jz      short loc_1005eeec
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1005eee6
sub     eax, ecx
and     eax, 3fffffffh
push    ecx
add     edx, 8
push    edx
mov     esi, eax
call    sub_1000cf50
mov     ecx, [eax+40h]
add     eax, 40h
add     esp, 8
cmp     ecx, edi
jz      short loc_1005ef19
lea     esp, [esp+0]
lea     eax, [ecx+20h]
mov     ecx, [eax]
cmp     ecx, edi
jnz     short loc_1005ef10
mov     ecx, [eax]
mov     edx, [ecx+20h]
mov     [eax], edx
mov     eax, [edi+1ch]
mov     esi, [ebp+arg_0]
push    eax
mov     ebx, esi
call    sub_1005dfb0
mov     eax, [edi]
add     esp, 4
mov     ecx, esi
call    sub_10009810
mov     eax, [edi+4]
mov     ecx, esi
call    sub_10009810
mov     ecx, [edi+0ch]
push    ecx
push    esi
call    sub_10036430
mov     edi, [edi+10h]
add     esp, 8
call    sub_100433b0
mov     eax, [ebp+var_4]
mov     ecx, esi
call    sub_10009810
or      dword ptr [esi+18h], 200h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
sub     esp, 14h
push    esi
xor     esi, esi
cmp     ecx, esi
jz      loc_1005f06d
cmp     eax, esi
jz      loc_1005f06d
mov     edx, [eax]
push    ebx
push    edi
mov     [ebp+var_c], esi
mov     [ebp+var_14], edx
cmp     edx, esi
jle     loc_1005f058
mov     edx, [ecx+4]
mov     [ebp+var_8], edx
mov     [ebp+var_4], esi
jmp     short loc_1005efd6
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
xor     edi, edi
cmp     [ebp+var_8], edi
jle     short loc_1005f044
mov     eax, [eax+8]
mov     edx, [ebp+var_4]
mov     eax, [eax+edx+4]
mov     esi, [ecx]
mov     [ebp+var_10], eax
lea     esp, [esp+0]
mov     ecx, [esi]
mov     al, [ecx]
mov     edx, [ebp+var_10]
test    al, al
jz      short loc_1005f01d
jmp     short loc_1005f000
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_1005f01d
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_1005f000
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_1005f040
inc     edi
add     esi, 8
cmp     edi, [ebp+var_8]
jl      short loc_1005eff0
jmp     short loc_1005f044
test    edi, edi
jns     short loc_1005f061
mov     eax, [ebp+var_c]
add     [ebp+var_4], 14h
inc     eax
mov     [ebp+var_c], eax
cmp     eax, [ebp+var_14]
jl      loc_1005efd0
pop     edi
pop     ebx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     ebx
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [eax]
push    ebx
push    edi
xor     ebx, ebx
xor     edi, edi
test    dword ptr [ecx+18h], 40000000h
jz      short loc_1005f09f
push    edx
call    sub_1005e0f0
add     esp, 4
mov     edi, eax
push    esi
mov     esi, edi
test    edi, edi
jz      short loc_1005f0d0
movzx   eax, byte ptr [esi+8]
cmp     eax, [ebp+arg_0]
jnz     short loc_1005f0c9
mov     ecx, [ebp+arg_4]
mov     edx, [esi+10h]
push    ecx
push    edx
call    sub_1005ef90
add     esp, 8
test    eax, eax
jz      short loc_1005f0c9
movzx   eax, byte ptr [esi+9]
or      ebx, eax
mov     esi, [esi+20h]
test    esi, esi
jnz     short loc_1005f0a6
mov     eax, [ebp+arg_8]
pop     esi
test    eax, eax
jz      short loc_1005f0da
mov     [eax], ebx
neg     ebx
sbb     eax, eax
and     eax, edi
pop     edi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [eax]
push    edi
mov     ecx, 40h
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1005f148
push    40h
push    0
push    edi
call    memset
mov     ecx, 1
mov     [edi+2], cx
movsx   edx, word ptr [edi]
add     esp, 0ch
push    edx
push    ecx
push    esi
mov     eax, edi
call    sub_100434e0
add     esp, 0ch
cmp     byte ptr [esi+32h], 0
mov     ebx, eax
mov     [ebp+var_4], ebx
jz      short loc_1005f151
push    ebx
mov     eax, esi
call    sub_10043720
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
movsx   eax, word ptr [ebx]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
mov     eax, [ebp+arg_4]
push    esi
add     eax, 0ch
lea     edi, [ebx+ecx*4-38h]
call    sub_1003fe10
add     esp, 4
mov     [edi+4], eax
push    esi
xor     eax, eax
call    sub_1003fe10
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
mov     [edi], eax
mov     eax, [edx+4]
mov     edx, [eax+14h]
mov     esi, [ecx]
add     esp, 4
test    edx, edx
jz      short loc_1005f209
mov     edi, [esi+14h]
xor     eax, eax
test    edi, edi
jle     short loc_1005f1b5
mov     ecx, [esi+10h]
add     ecx, 0ch
nop
cmp     [ecx], edx
jz      short loc_1005f1ac
inc     eax
add     ecx, 10h
cmp     eax, edi
jl      short loc_1005f1a0
test    eax, eax
jz      short loc_1005f1b5
cmp     eax, 2
jl      short loc_1005f209
mov     edx, [esi+10h]
add     eax, eax
mov     edi, [edx+eax*8]
test    edi, edi
jnz     short loc_1005f1c5
xor     esi, esi
jmp     short loc_1005f1fb
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_1005f1d6
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_1005f1d0
sub     eax, edi
and     eax, 3fffffffh
lea     ebx, [eax+1]
mov     ecx, ebx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1005f1f8
push    ebx
push    edi
push    esi
call    memcpy
add     esp, 0ch
mov     ebx, [ebp+var_4]
movsx   eax, word ptr [ebx]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
mov     [ebx+ecx*4-38h], esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 20h
push    esi
mov     esi, eax
mov     eax, [ebx+8]
push    edi
mov     edi, [ebx]
mov     [esp+28h+var_18], eax
mov     [esp+28h+var_14], edi
test    esi, esi
jz      loc_1005f3d4
mov     eax, [ebp+arg_0]
cmp     eax, 63h
jnz     short loc_1005f250
movzx   ecx, byte ptr [esi+1]
jmp     short loc_1005f253
movzx   ecx, al
mov     [ebx+1c9h], cl
movzx   eax, byte ptr [esi]
sub     eax, 69h
jz      loc_1005f332
dec     eax
push    0
jz      loc_1005f30b
dec     eax
jz      short loc_1005f2cc
mov     ecx, [esi+8]
push    ecx
push    edi
call    sub_10036d20
add     esp, 0ch
lea     edx, [esp+28h+var_10]
push    edx
xor     ecx, ecx
push    eax
push    ebx
mov     [esp+34h+var_1c], eax
mov     [esp+34h+var_c], ecx
mov     [esp+34h+var_10], 4
mov     [esp+34h+var_8], ecx
mov     [esp+34h+var_4], ecx
call    sub_1005b870
mov     eax, [esp+34h+var_1c]
add     esp, 0ch
test    eax, eax
jz      loc_1005f37a
push    eax
push    edi
call    sub_10054390
mov     eax, [esp+30h+var_1c]
add     esp, 8
mov     ecx, edi
call    sub_10009810
jmp     loc_1005f37a
mov     eax, [esi+14h]
push    0
push    eax
push    edi
call    sub_100365c0
movzx   ecx, byte ptr [ebx+1c9h]
mov     edx, [esi+18h]
add     esp, 10h
push    ecx
push    eax
push    0
push    edx
push    edi
call    sub_10036840
add     esp, 0ch
push    eax
push    ecx
push    esi
push    ebx
call    sub_1005f0f0
add     esp, 0ch
push    eax
push    ebx
call    sub_1005fa40
add     esp, 14h
jmp     short loc_1005f37a
mov     eax, [esi+14h]
push    0
push    eax
push    edi
call    sub_100365c0
add     esp, 10h
push    eax
push    ecx
push    esi
push    ebx
call    sub_1005f0f0
add     esp, 0ch
push    eax
push    ebx
call    sub_10044e90
add     esp, 0ch
jmp     short loc_1005f37a
movzx   eax, cl
push    eax
push    ecx
mov     ecx, [esi+1ch]
push    ecx
push    edi
call    sub_10036c40
mov     edx, [esi+8]
add     esp, 0ch
push    eax
push    0
push    edx
push    edi
call    sub_10036d20
add     esp, 0ch
push    eax
mov     eax, [esi+18h]
push    ecx
push    0
push    eax
push    edi
call    sub_10036840
add     esp, 10h
push    eax
push    esi
push    ebx
call    sub_1005f0f0
add     esp, 8
push    eax
push    ebx
call    sub_1004cbc0
add     esp, 18h
cmp     byte ptr [esi], 74h
jz      short loc_1005f3c9
mov     eax, [esp+28h+var_18]
mov     ecx, [eax+1ch]
mov     [esp+28h+var_1c], ecx
cmp     [eax+20h], ecx
jg      short loc_1005f3a6
mov     edi, eax
call    sub_10025810
mov     edi, [esp+28h+var_14]
test    eax, eax
jnz     short loc_1005f3c9
mov     ecx, [esp+28h+var_1c]
mov     eax, [esp+28h+var_18]
inc     dword ptr [eax+1ch]
mov     edx, [eax+4]
lea     ecx, [ecx+ecx*4]
lea     eax, [edx+ecx*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 3ch
mov     esi, [esi+20h]
test    esi, esi
jnz     loc_1005f242
pop     edi
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     ecx, [ebp+arg_0]
sub     esp, 3ch
push    ebx
mov     ebx, [ecx+1b0h]
push    esi
push    edi
mov     eax, ebx
test    ebx, ebx
jnz     short loc_1005f3fd
mov     eax, ecx
mov     eax, [eax+228h]
test    eax, eax
jz      short loc_1005f421
mov     edx, [ebp+arg_4]
cmp     [eax], edx
jnz     short loc_1005f41a
mov     edx, [ebp+arg_c]
cmp     [eax+0ch], edx
jz      loc_1005f714
mov     eax, [eax+4]
test    eax, eax
jnz     short loc_1005f407
test    ebx, ebx
jz      short loc_1005f42b
mov     [esp+48h+var_38], ebx
jmp     short loc_1005f431
mov     [esp+48h+var_38], ecx
mov     ebx, ecx
mov     esi, [ecx]
mov     ecx, 18h
mov     [esp+48h+var_3c], esi
mov     [esp+48h+var_30], 0
call    sub_10009a40
mov     edi, eax
xor     eax, eax
mov     [esp+48h+var_28], edi
test    edi, edi
jz      loc_1005f714
mov     [edi], eax
mov     [edi+4], eax
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     [edi+10h], eax
mov     [edi+14h], eax
mov     eax, [ebx+228h]
mov     [edi+4], eax
mov     ecx, 1ch
mov     [ebx+228h], edi
call    sub_10009a40
mov     [esp+48h+var_2c], eax
test    eax, eax
jz      short loc_1005f4a1
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     [edi+8], eax
test    eax, eax
jnz     short loc_1005f4b1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebx+8]
mov     edx, [ecx+0b4h]
mov     [eax+18h], edx
mov     [ecx+0b4h], eax
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_c]
mov     [edi], eax
or      eax, 0ffffffffh
mov     [edi+0ch], ecx
mov     ecx, 22ch
mov     [edi+10h], eax
mov     [edi+14h], eax
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1005f4a8
push    22ch
push    0
push    ebx
call    memset
mov     ecx, [esp+54h+var_38]
xor     eax, eax
mov     [esp+54h+var_20], eax
mov     [esp+54h+var_1c], eax
mov     [esp+54h+var_18], eax
mov     [esp+54h+var_14], eax
mov     [esp+54h+var_10], eax
mov     [esp+54h+var_c], eax
mov     [esp+54h+var_8], eax
mov     [esp+54h+var_4], eax
mov     eax, [ebp+arg_8]
mov     [esp+54h+var_20], ebx
mov     [ebx+1b4h], eax
mov     eax, [ebp+arg_4]
mov     [ebx+1b0h], ecx
mov     ecx, [ebp+arg_0]
mov     edx, esi
mov     [ebx], edx
mov     edx, [eax]
mov     [ebx+204h], edx
mov     al, [eax+8]
mov     [ebx+1c8h], al
fld     qword ptr [ecx+1b8h]
add     esp, 0ch
fstp    qword ptr [ebx+1b8h]
push    ebx
call    sub_10056c90
mov     esi, eax
add     esp, 4
mov     [esp+48h+var_34], esi
test    esi, esi
jz      loc_1005f707
mov     edx, [ebp+arg_4]
mov     eax, [edx]
mov     ecx, [esp+48h+var_3c]
push    eax
push    offset atriggers
push    ecx
call    sub_1000ae80
mov     edx, [esi+4]
mov     edi, [esi]
add     esp, 0ch
mov     [esp+48h+var_24], eax
test    edx, edx
jz      short loc_1005f5ce
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005f5ce
mov     esi, [esi+1ch]
lea     eax, [esi+esi*4-5]
mov     ecx, [edx+eax*4+10h]
lea     esi, [edx+eax*4]
movsx   eax, byte ptr [esi+1]
call    sub_10025e50
mov     eax, [esp+48h+var_24]
xor     ecx, ecx
mov     [esi+10h], ecx
cmp     eax, ecx
jnz     short loc_1005f5c5
mov     [esi+10h], ecx
mov     [esi+1], cl
jmp     short loc_1005f5d8
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0ffh
jmp     short loc_1005f5d8
mov     ecx, eax
or      eax, 0ffffffffh
call    sub_10025e50
mov     ecx, [ebp+arg_4]
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_1005f635
mov     edx, [esp+48h+var_3c]
push    0
push    0
push    eax
push    edx
call    sub_100365c0
add     esp, 10h
mov     edi, eax
lea     esi, [esp+48h+var_20]
call    sub_10035700
test    eax, eax
jnz     short loc_1005f627
mov     eax, [esp+48h+var_3c]
cmp     byte ptr [eax+32h], 0
jnz     short loc_1005f627
mov     eax, [esp+48h+var_34]
call    sub_10025c00
push    8
push    eax
push    edi
push    ebx
mov     [esp+58h+var_30], eax
call    sub_1003a1c0
add     esp, 10h
mov     ecx, [esp+48h+var_3c]
push    edi
push    ecx
call    sub_10036430
add     esp, 8
mov     edx, [ebp+arg_c]
mov     eax, [ebp+arg_4]
mov     eax, [eax+1ch]
push    edx
call    sub_1005f220
mov     ecx, [esp+4ch+var_30]
mov     edi, [esp+4ch+var_34]
add     esp, 4
test    ecx, ecx
jz      short loc_1005f668
mov     eax, [edi+28h]
test    eax, eax
jz      short loc_1005f668
mov     edx, [edi+1ch]
lea     ecx, ds:4[ecx*4]
sub     eax, ecx
mov     [eax], edx
push    6
mov     eax, edi
call    sub_100258f0
mov     eax, [ebp+arg_0]
add     esp, 4
cmp     dword ptr [eax+44h], 0
jnz     short loc_1005f68b
mov     ecx, [ebx+4]
mov     [eax+4], ecx
mov     edx, [ebx+44h]
mov     [eax+44h], edx
jmp     short loc_1005f695
mov     eax, [ebx+4]
mov     ecx, [ebx]
call    sub_10009810
mov     eax, [esp+48h+var_3c]
cmp     byte ptr [eax+32h], 0
jnz     short loc_1005f6ca
mov     ecx, [esp+48h+var_38]
mov     esi, [edi+4]
add     ecx, 198h
push    ecx
call    sub_10025c90
mov     edx, [edi+1ch]
mov     eax, [esp+4ch+var_2c]
mov     [eax+4], edx
mov     dword ptr [edi+4], 0
add     esp, 4
mov     [eax], esi
jmp     short loc_1005f6ce
mov     eax, [esp+48h+var_2c]
mov     ecx, [ebx+4ch]
mov     [eax+8], ecx
mov     edx, [ebx+48h]
mov     [eax+0ch], edx
mov     ecx, [ebx+54h]
mov     edx, [ebp+arg_4]
mov     [eax+10h], ecx
mov     [eax+14h], edx
mov     ecx, [ebx+1c0h]
mov     eax, [esp+48h+var_28]
mov     [eax+10h], ecx
mov     edx, [ebx+1c4h]
mov     ecx, edi
mov     [eax+14h], edx
call    sub_10028430
mov     edi, [esp+48h+var_28]
mov     ecx, [esp+48h+var_3c]
mov     eax, ebx
call    sub_10009810
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
push    edi
call    sub_10056c90
mov     ecx, [ebp+arg_8]
mov     ebx, [ebp+arg_4]
add     esp, 4
mov     esi, eax
mov     eax, [ebp+arg_10]
push    eax
push    ecx
push    ebx
push    edi
call    sub_1005f3e0
add     esp, 10h
mov     [esp+18h+var_4], eax
test    eax, eax
jz      loc_1005f836
cmp     dword ptr [ebx], 0
jz      short loc_1005f773
mov     edx, [edi]
test    dword ptr [edx+18h], 2000000h
mov     [esp+18h+var_c], 1
jz      short loc_1005f77b
mov     [esp+18h+var_c], 0
mov     ebx, [edi+4ch]
inc     ebx
mov     [edi+4ch], ebx
mov     eax, [esi+1ch]
mov     [esp+18h+var_8], eax
cmp     [esi+20h], eax
jg      short loc_1005f79d
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_1005f7c8
mov     eax, [esp+18h+var_8]
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [ebp+arg_c]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+arg_14]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 73h
mov     edx, [esp+18h+var_4]
mov     ebx, [esi+4]
mov     ecx, [edx+8]
mov     edi, [esi]
mov     [esp+18h+var_4], ecx
test    ebx, ebx
jz      short loc_1005f817
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005f817
mov     eax, [esi+1ch]
lea     eax, [eax+eax*4-5]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
call    sub_10025e50
mov     eax, [esp+18h+var_4]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_1005f80e
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1005f821
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0eeh
jmp     short loc_1005f821
mov     eax, 0ffffffeeh
call    sub_10025e50
mov     eax, [esi+4]
test    eax, eax
jz      short loc_1005f836
mov     esi, [esi+1ch]
mov     dl, byte ptr [esp+18h+var_c]
lea     ecx, [esi+esi*4]
mov     [eax+ecx*4-11h], dl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
test    esi, esi
jz      short loc_1005f89b
mov     edi, [ebp+arg_20]
mov     ebx, [ebp+arg_1c]
movzx   eax, byte ptr [esi+8]
cmp     eax, [ebp+arg_8]
jnz     short loc_1005f894
movzx   ecx, byte ptr [esi+9]
cmp     ecx, [ebp+arg_10]
jnz     short loc_1005f894
mov     edx, [ebp+arg_c]
mov     eax, [esi+10h]
push    edx
push    eax
call    sub_1005ef90
add     esp, 8
test    eax, eax
jz      short loc_1005f894
mov     ecx, [ebp+arg_18]
mov     edx, [ebp+arg_14]
mov     eax, [ebp+arg_0]
push    edi
push    ebx
push    ecx
push    edx
push    esi
push    eax
call    sub_1005f720
add     esp, 18h
mov     esi, [esi+20h]
test    esi, esi
jnz     short loc_1005f857
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     edx, [ebp+arg_4]
push    esi
mov     esi, eax
xor     eax, eax
test    edx, edx
setnz   al
mov     [ebp+var_4], esi
add     eax, 6ah
mov     [ebp+var_c], eax
xor     eax, eax
mov     [ebp+var_8], eax
test    esi, esi
jz      loc_1005f970
push    ebx
push    edi
jmp     short loc_1005f8e6
mov     esi, [ebp+var_4]
mov     edx, [ebp+arg_4]
movzx   ecx, byte ptr [esi+8]
cmp     ecx, [ebp+var_c]
jnz     short loc_1005f95d
mov     al, [ebp+arg_c]
test    [esi+9], al
jz      short loc_1005f95d
mov     ecx, [esi+10h]
mov     [ebp+var_10], ecx
test    ecx, ecx
jz      short loc_1005f93a
test    edx, edx
jz      short loc_1005f93a
mov     ebx, [edx]
xor     edi, edi
test    ebx, ebx
jle     short loc_1005f95d
mov     edx, [ebp+arg_4]
mov     esi, [edx+8]
add     esi, 4
jmp     short loc_1005f91b
mov     ecx, [ebp+var_10]
mov     eax, [esi]
push    eax
call    sub_10043460
add     esp, 4
test    eax, eax
jns     short loc_1005f937
inc     edi
add     esi, 14h
cmp     edi, ebx
jl      short loc_1005f918
mov     esi, [ebp+var_4]
jmp     short loc_1005f95d
mov     esi, [ebp+var_4]
mov     ecx, [ebp+arg_14]
mov     edx, [ebp+arg_10]
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    esi
push    eax
call    sub_1005f3e0
add     esp, 10h
test    eax, eax
jz      short loc_1005f95d
mov     ecx, [ebp+arg_8]
mov     edx, [eax+ecx*4+10h]
or      [ebp+var_8], edx
mov     esi, [esi+20h]
mov     [ebp+var_4], esi
test    esi, esi
jnz     loc_1005f8e0
mov     eax, [ebp+var_8]
pop     edi
pop     ebx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, eax
mov     eax, [ebp+arg_4]
cmp     dword ptr [eax+1ch], 0
push    esi
push    edi
jnz     loc_1005fa33
mov     eax, [eax+0ch]
mov     esi, [ebp+arg_0]
mov     ecx, [esi]
lea     ebx, [ebx+ebx*2]
add     ebx, ebx
add     ebx, ebx
lea     edx, [ebp+var_4]
push    edx
add     ebx, ebx
movzx   edx, byte ptr [eax+ebx+16h]
mov     eax, [eax+ebx+4]
push    edx
mov     edx, [ecx+10h]
mov     edx, [edx+0ch]
movzx   edx, byte ptr [edx+4dh]
push    edx
push    eax
push    ecx
call    sub_100254b0
mov     ecx, [ebp+var_4]
add     esp, 14h
test    ecx, ecx
jz      short loc_1005fa12
mov     edx, [esi+4]
mov     edi, [esi]
test    edx, edx
jz      short loc_1005fa08
cmp     byte ptr [edi+32h], 0
jnz     short loc_1005fa08
mov     eax, [esi+1ch]
lea     ecx, [eax+eax*4-5]
movsx   eax, byte ptr [edx+ecx*4+1]
lea     esi, [edx+ecx*4]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     edx, [ebp+var_4]
mov     [esi+10h], edx
mov     byte ptr [esi+1], 0f8h
mov     esi, [ebp+arg_0]
jmp     short loc_1005fa12
mov     eax, 0fffffff8h
call    sub_10025e50
mov     eax, [ebp+arg_8]
test    eax, eax
js      short loc_1005fa33
mov     ecx, [ebp+arg_4]
mov     edx, [ecx+0ch]
cmp     byte ptr [ebx+edx+16h], 65h
jnz     short loc_1005fa33
push    eax
push    16h
mov     eax, esi
call    sub_10025940
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 90h
xor     eax, eax
push    ebx
mov     ebx, [ebp+arg_0]
mov     ecx, [ebx]
push    esi
push    edi
mov     [ebp+var_48], eax
mov     [ebp+var_30], eax
mov     [ebp+var_38], eax
mov     [ebp+var_5c], eax
mov     [ebp+var_60], eax
mov     [ebp+var_58], eax
mov     [ebp+var_70], eax
mov     [ebp+var_6c], eax
mov     [ebp+var_4c], ecx
cmp     [ebx+44h], eax
jnz     loc_10061999
cmp     [ecx+32h], al
jnz     loc_10061999
mov     eax, [ebp+arg_4]
mov     esi, ebx
call    sub_10044bd0
mov     edi, eax
mov     [ebp+var_c], edi
test    edi, edi
jz      loc_10061999
mov     esi, [edi+44h]
mov     ecx, [ebx]
call    sub_10053b80
mov     ecx, [ebp+arg_8]
mov     [ebp+var_3c], eax
lea     eax, [ebp+var_68]
push    eax
push    ecx
push    6bh
mov     edx, edi
mov     eax, ebx
call    sub_1005f080
xor     edx, edx
add     esp, 0ch
cmp     [edi+1ch], edx
push    edi
setnz   dl
push    ebx
mov     [ebp+var_54], eax
mov     [ebp+var_50], edx
call    sub_10041590
add     esp, 8
test    eax, eax
jnz     loc_10061999
mov     eax, [ebp+var_68]
mov     ecx, edi
push    eax
mov     edi, ebx
call    sub_10044ca0
add     esp, 4
test    eax, eax
jnz     loc_10061999
mov     edi, [ebp+var_c]
mov     ecx, [edi+8]
mov     esi, [ebp+var_4c]
add     ecx, ecx
add     ecx, ecx
call    sub_10009a40
xor     esi, esi
mov     [ebp+var_30], eax
cmp     eax, esi
jz      loc_10061999
xor     eax, eax
cmp     [edi+8], esi
jle     short loc_1005fb30
jmp     short loc_1005fb20
mov     ecx, [ebp+var_30]
mov     dword ptr [ecx+eax*4], 0ffffffffh
inc     eax
cmp     eax, [edi+8]
jl      short loc_1005fb20
mov     eax, [ebx+48h]
mov     edx, [ebp+arg_4]
mov     [edx+24h], eax
inc     dword ptr [ebx+48h]
mov     ecx, [ebx+48h]
mov     [ebp+var_1c], eax
mov     eax, [edi+10h]
cmp     eax, esi
jz      short loc_1005fb5b
lea     esp, [esp+0]
inc     ecx
mov     [ebx+48h], ecx
mov     eax, [eax+14h]
cmp     eax, esi
jnz     short loc_1005fb50
xor     eax, eax
mov     [ebp+var_8c], eax
mov     [ebp+var_8c], edx
mov     edx, [ebp+arg_8]
mov     [ebp+var_90], eax
mov     [ebp+var_88], eax
mov     [ebp+var_84], eax
mov     [ebp+var_80], eax
mov     [ebp+var_7c], eax
mov     [ebp+var_78], eax
mov     [ebp+var_74], eax
mov     [ebp+var_90], ebx
mov     [ebp+var_40], esi
mov     [ebp+var_18], esi
cmp     [edx], esi
jle     loc_1005fdc3
mov     [ebp+var_20], esi
mov     eax, [ebp+arg_8]
mov     ecx, [eax+8]
mov     edx, [ebp+var_20]
mov     edi, [edx+ecx]
lea     esi, [ebp+var_90]
call    sub_10035700
test    eax, eax
jnz     loc_10061999
mov     ecx, [ebp+var_c]
mov     eax, [ecx+8]
xor     esi, esi
mov     [ebp+var_10], esi
mov     [ebp+var_34], eax
test    eax, eax
jle     loc_1005fc66
mov     eax, [ebp+arg_8]
mov     edx, [eax+8]
mov     eax, [ebp+var_20]
mov     edi, [ecx+0ch]
add     eax, edx
mov     edx, [eax+4]
mov     [ebp+var_28], eax
mov     [ebp+var_2c], edx
lea     ecx, [ecx+0]
mov     ecx, [edi]
mov     al, [ecx]
mov     edx, [ebp+var_2c]
test    al, al
jz      short loc_1005fc20
jmp     short loc_1005fc00
movzx   esi, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[esi]
jnz     short loc_1005fc1d
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_1005fc00
mov     esi, [ebp+var_10]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[ecx]
movzx   ecx, byte ptr [edx]
movzx   edx, ds:byte_10076030[ecx]
sub     eax, edx
jz      short loc_1005fc46
inc     esi
add     edi, 18h
mov     [ebp+var_10], esi
cmp     esi, [ebp+var_34]
jl      short loc_1005fbf0
jmp     short loc_1005fc66
mov     eax, [ebp+var_c]
cmp     esi, [eax+4]
jnz     short loc_1005fc5d
mov     ecx, [ebp+var_28]
mov     edx, [ecx]
mov     [ebp+var_40], 1
mov     [ebp+var_38], edx
mov     eax, [ebp+var_30]
mov     ecx, [ebp+var_18]
mov     [eax+esi*4], ecx
mov     edx, [ebp+var_c]
cmp     esi, [edx+8]
jl      loc_1005fd3b
mov     eax, [ebp+arg_8]
mov     ecx, [eax+8]
mov     edx, [ebp+var_20]
mov     edi, [edx+ecx+4]
lea     eax, [edx+ecx]
mov     cl, [edi]
mov     [ebp+var_28], eax
mov     eax, edi
mov     esi, offset arowid
test    cl, cl
jz      short loc_1005fcb4
mov     dl, cl
movzx   ebx, byte ptr [esi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[ebx]
jnz     short loc_1005fcb1
mov     dl, [eax+1]
inc     eax
inc     esi
test    dl, dl
jnz     short loc_1005fc94
mov     ebx, [ebp+arg_0]
movzx   eax, byte ptr [eax]
movzx   edx, byte ptr [esi]
movzx   edx, ds:byte_10076030[edx]
movzx   eax, ds:byte_10076030[eax]
sub     eax, edx
jz      short loc_1005fd29
mov     edx, edi
mov     esi, offset arowid_0
test    cl, cl
jz      short loc_1005fcfd
mov     al, cl
lea     esp, [esp+0]
movzx   ecx, byte ptr [esi]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ecx]
jnz     short loc_1005fcfd
mov     al, [edx+1]
inc     edx
inc     esi
test    al, al
jnz     short loc_1005fce0
movzx   ecx, byte ptr [esi]
movzx   eax, ds:byte_10076030[ecx]
movzx   ecx, byte ptr [edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_1005fd29
mov     edx, offset aoid
mov     ecx, edi
call    sub_1000bca0
test    eax, eax
jnz     loc_1005fe21
mov     eax, [ebp+var_28]
mov     ecx, [eax]
mov     esi, [ebp+var_10]
mov     [ebp+var_40], 1
mov     [ebp+var_38], ecx
mov     eax, [ebp+var_4c]
mov     edx, [ebp+var_3c]
mov     ecx, [eax+10h]
mov     eax, [ebp+var_c]
add     edx, edx
mov     ecx, [ecx+edx*8]
lea     edx, [esi+esi*2]
mov     esi, [eax+0ch]
mov     edx, [esi+edx*8]
mov     esi, [eax]
mov     eax, [ebx]
cmp     byte ptr [eax+79h], 0
jnz     short loc_1005fdad
cmp     byte ptr [ebx+1d5h], 0
jnz     short loc_1005fdad
mov     edi, [eax+104h]
test    edi, edi
jz      short loc_1005fdad
mov     ebx, [ebx+204h]
mov     eax, [eax+108h]
push    ebx
push    ecx
push    edx
push    esi
push    17h
push    eax
call    edi
add     esp, 18h
cmp     eax, 1
jz      short loc_1005fde7
test    eax, eax
jz      short loc_1005fd98
cmp     eax, 2
jnz     short loc_1005fe04
mov     ebx, [ebp+arg_0]
cmp     eax, 2
jnz     short loc_1005fdad
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_30]
mov     dword ptr [edx+ecx*4], 0ffffffffh
mov     eax, [ebp+var_18]
mov     ecx, [ebp+arg_8]
add     [ebp+var_20], 14h
inc     eax
mov     [ebp+var_18], eax
cmp     eax, [ecx]
jl      loc_1005fba1
mov     eax, [ebx]
test    dword ptr [eax+18h], 4000000h
mov     edi, [ebp+var_c]
jz      short loc_1005fe49
mov     ecx, [ebp+var_40]
mov     edx, [ebp+var_30]
push    ecx
push    edx
push    edi
call    sub_1004a660
add     esp, 0ch
mov     [ebp+var_20], eax
jmp     short loc_1005fe50
mov     esi, [ebp+arg_0]
push    offset anotauthorized
push    esi
call    sub_1000bb30
add     esp, 8
mov     dword ptr [esi+0ch], 17h
jmp     loc_10061999
mov     esi, [ebp+arg_0]
push    offset aauthorizermalf
push    esi
call    sub_1000bb30
add     esp, 8
mov     dword ptr [esi+0ch], 1
jmp     loc_10061999
mov     eax, [ebp+var_18]
lea     edx, [eax+eax*4]
mov     eax, [ebp+arg_8]
mov     ecx, [eax+8]
mov     edx, [ecx+edx*4+4]
push    edx
push    offset anosuchcolumns_0
push    ebx
call    sub_1000bb30
add     esp, 0ch
mov     byte ptr [ebx+11h], 1
jmp     loc_10061999
mov     [ebp+var_20], 0
mov     eax, [edi+10h]
xor     ecx, ecx
test    eax, eax
jz      short loc_1005fe83
lea     esp, [esp+0]
mov     eax, [eax+14h]
inc     ecx
test    eax, eax
jnz     short loc_1005fe60
test    ecx, ecx
jle     short loc_1005fe83
mov     esi, [ebp+var_4c]
add     ecx, ecx
add     ecx, ecx
call    sub_10009a40
mov     [ebp+var_48], eax
test    eax, eax
jz      loc_10061999
mov     esi, [edi+10h]
test    esi, esi
jz      short loc_1005fee3
mov     eax, [ebp+var_48]
mov     [ebp+var_34], eax
cmp     [ebp+var_20], 0
jnz     short loc_1005fecb
cmp     [ebp+var_40], 0
jnz     short loc_1005fecb
mov     edx, [esi+24h]
xor     ecx, ecx
xor     eax, eax
mov     [ebp+var_2c], ecx
test    edx, edx
jle     short loc_1005fed1
mov     ecx, [esi+4]
mov     edi, [ebp+var_30]
mov     ebx, [ecx]
cmp     dword ptr [edi+ebx*4], 0
jge     short loc_1005fec8
inc     eax
add     ecx, 4
cmp     eax, edx
jl      short loc_1005feb0
mov     ebx, [ebp+arg_0]
mov     ecx, [ebp+var_2c]
jmp     short loc_1005fed1
mov     ebx, [ebp+arg_0]
inc     dword ptr [ebx+4ch]
mov     ecx, [ebx+4ch]
mov     eax, [ebp+var_34]
mov     [eax], ecx
mov     esi, [esi+14h]
add     eax, 4
mov     [ebp+var_34], eax
test    esi, esi
jnz     short loc_1005fe90
mov     ecx, [ebp+arg_0]
push    ecx
call    sub_10056c90
mov     ebx, eax
add     esp, 4
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      loc_10061999
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+12h], 0
jnz     short loc_1005ff09
mov     byte ptr [ebx+5eh], 1
mov     edi, [esi+1b0h]
test    edi, edi
jnz     short loc_1005ff15
mov     edi, esi
mov     edx, [ebp+var_3c]
push    edx
mov     eax, esi
call    sub_10043c40
mov     ecx, [ebp+var_3c]
or      byte ptr [edi+17h], 1
mov     eax, 1
shl     eax, cl
mov     ecx, [ebp+var_c]
add     esp, 4
or      [edi+154h], eax
test    byte ptr [ecx+22h], 10h
jz      short loc_1005ff6f
mov     edx, [ebp+arg_10]
mov     eax, [ebp+src]
push    edx
mov     edx, [ebp+var_30]
push    eax
mov     eax, [ebp+var_38]
push    edx
mov     edx, [ebp+arg_8]
push    eax
mov     eax, [ebp+arg_4]
push    edx
push    ecx
push    eax
push    esi
call    sub_100619f0
add     esp, 20h
xor     eax, eax
mov     [ebp+src], eax
mov     [ebp+arg_4], eax
jmp     loc_10061999
inc     dword ptr [esi+4ch]
mov     eax, [esi+4ch]
mov     edi, [ebp+var_54]
mov     [ebp+var_34], eax
inc     eax
mov     [esi+4ch], eax
mov     [ebp+var_28], eax
mov     [ebp+var_24], eax
test    edi, edi
jnz     short loc_1005ff8e
cmp     [ebp+var_20], edi
jz      short loc_1005ff9c
lea     edx, [eax+1]
mov     [ebp+var_58], edx
mov     edx, [ecx+8]
add     edx, eax
mov     [esi+4ch], edx
cmp     [ebp+var_40], 0
jnz     short loc_1005ffab
test    edi, edi
jnz     short loc_1005ffab
cmp     [ebp+var_20], edi
jz      short loc_1005ffb4
inc     dword ptr [esi+4ch]
mov     eax, [esi+4ch]
mov     [ebp+var_28], eax
mov     eax, [esi+4ch]
lea     edx, [eax+1]
mov     [ebp+var_44], edx
mov     edx, [ecx+8]
add     edx, eax
cmp     [ebp+var_50], 0
mov     [esi+4ch], edx
jz      short loc_1005fff1
mov     eax, [esi+204h]
mov     edx, [ecx]
mov     [ebp+var_70], eax
mov     eax, [ebp+var_1c]
push    eax
mov     [esi+204h], edx
mov     edx, [ebp+src]
push    edx
push    ecx
push    esi
mov     [ebp+var_6c], esi
call    sub_10044d30
add     esp, 10h
mov     edi, [ebp+src]
lea     esi, [ebp+var_90]
call    sub_10035700
test    eax, eax
jnz     loc_10061999
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_1006001a
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_10060043
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_34]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     [eax+8], edx
mov     edx, [ebp+var_24]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     word ptr [eax], 0ah
mov     eax, [ebp+src]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    0
push    4
push    0
push    0
push    eax
push    ecx
push    edx
call    sub_10069990
add     esp, 1ch
mov     [ebp+var_2c], eax
test    eax, eax
jz      loc_10061999
movzx   eax, byte ptr [eax+6]
mov     esi, [ebx+1ch]
mov     [ebp+var_64], eax
cmp     [ebx+20h], esi
jg      short loc_10060084
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_100600ad
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+var_24]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 41h
cmp     [ebp+var_64], 0
jnz     short loc_100600ef
mov     esi, [ebx+1ch]
cmp     [ebx+20h], esi
jg      short loc_100600c6
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_100600ef
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_34]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_24]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 70h
mov     edx, [ebp+var_2c]
push    edx
call    sub_1006a540
mov     eax, [ebp+var_4c]
add     esp, 4
test    dword ptr [eax+18h], 1000h
jz      short loc_10060157
mov     ecx, [ebp+arg_0]
cmp     dword ptr [ecx+1b4h], 0
jnz     short loc_10060157
mov     eax, ecx
inc     dword ptr [eax+4ch]
mov     esi, [ebx+1ch]
mov     edx, [eax+4ch]
mov     [ebp+var_60], edx
cmp     [ebx+20h], esi
jg      short loc_10060131
mov     edi, ebx
call    sub_10025810
test    eax, eax
jnz     short loc_10060157
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_60]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 7
xor     edi, edi
cmp     [ebp+var_50], edi
jnz     loc_10060310
mov     esi, [ebp+var_c]
cmp     [ebp+var_64], edi
jnz     short loc_10060180
mov     eax, [ebp+var_3c]
mov     ecx, [ebp+var_1c]
push    28h
push    esi
push    eax
mov     eax, [ebp+arg_0]
push    ecx
call    sub_1004b860
add     esp, 10h
mov     ecx, 5
cmp     [ebp+arg_10], ecx
jz      short loc_100601a2
mov     eax, [esi+10h]
mov     [ebp+var_5c], edi
cmp     eax, edi
jz      short loc_100601a9
cmp     [eax+2ch], cl
jz      short loc_100601a2
mov     eax, [eax+14h]
cmp     eax, edi
jnz     short loc_10060194
jmp     short loc_100601a9
mov     [ebp+var_5c], 1
mov     eax, [esi+10h]
mov     [ebp+var_18], edi
mov     [ebp+var_10], eax
cmp     eax, edi
jz      loc_10060310
lea     ebx, [ebx+0]
cmp     [ebp+var_5c], 0
jnz     short loc_100601d6
mov     edx, [ebp+var_48]
mov     eax, [ebp+var_18]
cmp     dword ptr [edx+eax*4], 0
jle     loc_100602fc
mov     esi, [ebp+var_10]
mov     ecx, [ebp+arg_0]
push    esi
push    ecx
call    sub_10044250
mov     edx, [esi+28h]
mov     esi, [ebx+1ch]
mov     [ebp+var_2c], eax
mov     eax, [ebx+20h]
add     esp, 8
mov     [ebp+var_14], edx
cmp     eax, esi
jg      short loc_10060266
test    eax, eax
jz      short loc_10060201
add     eax, eax
jmp     short loc_10060206
mov     eax, 33h
mov     edi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_100602dc
mov     eax, [edi]
test    eax, eax
jz      short loc_10060247
cmp     ebx, [eax+0fch]
jb      short loc_10060247
cmp     ebx, [eax+100h]
jnb     short loc_10060247
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060253
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+var_18]
mov     ecx, [ebp+var_1c]
lea     ecx, [ecx+edx+1]
mov     edx, [ebp+var_14]
mov     [eax+4], ecx
mov     ecx, [ebp+var_3c]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 28h
mov     eax, esi
mov     esi, [ebx+4]
mov     edi, [ebx]
test    esi, esi
jz      short loc_100602ef
cmp     byte ptr [edi+32h], 0
jnz     short loc_100602ef
test    eax, eax
jns     short loc_100602b4
mov     eax, [ebx+1ch]
dec     eax
lea     edx, [eax+eax*4]
movsx   eax, byte ptr [esi+edx*4+1]
mov     ecx, [esi+edx*4+10h]
lea     esi, [esi+edx*4]
call    sub_10025e50
mov     eax, [ebp+var_2c]
xor     ecx, ecx
mov     [esi+10h], ecx
cmp     eax, ecx
jnz     short loc_100602e6
mov     [esi+10h], ecx
mov     [esi+1], cl
jmp     short loc_100602fc
mov     ebx, [ebp+var_8]
mov     eax, 1
jmp     short loc_1006029d
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0fah
jmp     short loc_100602fc
mov     ecx, [ebp+var_2c]
mov     eax, 0fffffff0h
call    sub_10025e50
mov     eax, [ebp+var_10]
mov     eax, [eax+14h]
inc     [ebp+var_18]
mov     [ebp+var_10], eax
test    eax, eax
jnz     loc_100601c0
cmp     [ebp+var_64], 0
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
jz      loc_10060496
cmp     eax, esi
jg      short loc_1006038d
test    eax, eax
jz      short loc_1006032c
add     eax, eax
jmp     short loc_10060331
mov     eax, 33h
mov     edi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100603ca
mov     eax, [edi]
test    eax, eax
jz      short loc_1006036e
cmp     ebx, [eax+0fch]
jb      short loc_1006036e
cmp     ebx, [eax+100h]
jnb     short loc_1006036e
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006037a
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_24]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 4ah
mov     [ebp+var_3c], esi
mov     edx, esi
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1006043f
test    eax, eax
jz      short loc_100603d7
add     eax, eax
jmp     short loc_100603dc
mov     ebx, [ebp+var_8]
mov     edx, 1
mov     [ebp+var_3c], edx
jmp     short loc_100603b8
mov     eax, 33h
mov     edi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_10060489
mov     eax, [edi]
test    eax, eax
jz      short loc_1006041d
cmp     ebx, [eax+0fch]
jb      short loc_1006041d
cmp     ebx, [eax+100h]
jnb     short loc_1006041d
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060429
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+20h], edx
mov     edx, [ebp+var_3c]
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
mov     eax, esi
mov     [ebp+var_10], eax
test    edx, edx
js      loc_1006052f
mov     eax, [ebx+1ch]
cmp     eax, edx
jbe     loc_1006052f
mov     ecx, [ebx+4]
lea     edx, [edx+edx*4]
mov     [ecx+edx*4+8], eax
jmp     loc_1006052f
mov     ebx, [ebp+var_8]
mov     edx, [ebp+var_3c]
mov     eax, 1
jmp     short loc_10060464
cmp     eax, esi
jg      short loc_10060503
test    eax, eax
jz      short loc_100604a2
add     eax, eax
jmp     short loc_100604a7
mov     eax, 33h
mov     edi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10060541
mov     eax, [edi]
test    eax, eax
jz      short loc_100604e4
cmp     ebx, [eax+0fch]
jb      short loc_100604e4
cmp     ebx, [eax+100h]
jnb     short loc_100604e4
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100604f0
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_34]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+4], edx
mov     edx, [ebp+var_24]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     word ptr [eax], 71h
mov     [ebp+var_10], esi
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_100605b1
test    eax, eax
jz      short loc_1006054d
add     eax, eax
jmp     short loc_10060552
mov     ebx, [ebp+var_8]
mov     [ebp+var_10], 1
jmp     short loc_1006052f
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100605e1
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10060592
cmp     ebx, [eax+0fch]
jb      short loc_10060592
cmp     ebx, [eax+100h]
jnb     short loc_10060592
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006059e
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_1c]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_10]
mov     [eax+4], ecx
mov     ecx, [ebp+var_24]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 36h
jmp     short loc_100605e4
mov     ebx, [ebp+var_8]
cmp     [ebp+var_40], 0
mov     esi, [ebp+arg_0]
mov     eax, [ebp+var_38]
jz      loc_1006072b
test    eax, eax
jz      short loc_10060636
cmp     byte ptr [eax], 84h
jnz     short loc_10060636
mov     edi, [esi+8]
mov     esi, [edi+1ch]
mov     edx, [eax+18h]
mov     [ebp+var_14], edx
cmp     [edi+20h], esi
jg      short loc_10060617
call    sub_10025810
test    eax, eax
jnz     short loc_1006068b
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_14]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_28]
mov     [eax+4], edx
mov     [eax+8], ecx
mov     word ptr [eax], 0eh
jmp     short loc_10060680
mov     edi, [ebp+var_28]
push    edi
push    eax
push    esi
call    sub_10038b70
add     esp, 0ch
mov     [ebp+var_14], eax
cmp     eax, edi
jz      short loc_1006068b
mov     edi, [esi+8]
test    edi, edi
jz      short loc_1006068b
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10060663
call    sub_10025810
test    eax, eax
jnz     short loc_1006068b
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_14]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_28]
mov     [eax+4], ecx
mov     [eax+8], edx
mov     word ptr [eax], 0fh
xor     ecx, ecx
mov     [eax+10h], ecx
mov     [eax+0ch], ecx
mov     [eax+3], cl
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_10060701
test    eax, eax
jz      short loc_1006069d
add     eax, eax
jmp     short loc_100606a2
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10060728
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_100606e2
cmp     ebx, [eax+0fch]
jb      short loc_100606e2
cmp     ebx, [eax+100h]
jnb     short loc_100606e2
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100606ee
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     eax, [ebx+4]
xor     ecx, ecx
inc     dword ptr [ebx+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_28]
mov     [eax+3], cl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 15h
jmp     short loc_1006072b
mov     ebx, [ebp+var_8]
xor     esi, esi
cmp     [ebp+var_20], esi
jnz     loc_10060801
cmp     [ebp+var_54], esi
jz      loc_10060acc
mov     edi, [ebp+var_c]
mov     [ebp+var_38], esi
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+arg_8]
mov     eax, [ebp+arg_0]
push    ecx
push    edi
push    3
push    esi
push    edx
push    eax
mov     eax, [ebp+var_54]
call    sub_1005f8b0
or      [ebp+var_38], eax
add     esp, 18h
cmp     [edi+8], esi
jle     loc_10060a1e
lea     esp, [esp+0]
mov     ecx, [ebp+var_30]
xor     edi, edi
cmp     [ecx+esi*4], edi
jl      loc_10060869
mov     eax, [ebp+var_38]
cmp     eax, 0ffffffffh
jz      loc_10060869
cmp     esi, 20h
jge     short loc_100607a0
mov     edx, 1
mov     ecx, esi
shl     edx, cl
test    eax, edx
jnz     loc_10060869
mov     eax, [ebx+1ch]
mov     ecx, [ebx+20h]
mov     [ebp+var_14], eax
cmp     ecx, eax
jg      loc_1006083d
lea     eax, [ecx+ecx]
cmp     ecx, edi
jnz     short loc_100607bd
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_10060a0e
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10060819
cmp     ebx, [eax+0fch]
jb      short loc_10060819
cmp     ebx, [eax+100h]
jnb     short loc_10060819
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060825
mov     edi, [ebp+var_c]
mov     eax, [ebp+arg_0]
push    edi
push    eax
call    sub_1004a570
add     esp, 8
mov     [ebp+var_38], eax
jmp     loc_10060745
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [ebp+var_14]
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
xor     edi, edi
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_58]
lea     edx, [eax+eax*4]
mov     eax, [ebx+4]
lea     eax, [eax+edx*4]
lea     edx, [esi+ecx]
mov     byte ptr [eax+3], 0
mov     [eax+4], edi
mov     [eax+8], edx
mov     [eax+0ch], edi
mov     [eax+10h], edi
mov     word ptr [eax], 0ah
jmp     loc_10060a11
cmp     esi, edi
jl      loc_10060946
mov     eax, [ebp+var_c]
cmp     esi, [eax+4]
jz      loc_10060946
mov     al, [eax+22h]
mov     edx, [ebx+20h]
and     al, 10h
movzx   ecx, al
mov     eax, [ebx+1ch]
neg     ecx
sbb     ecx, ecx
and     ecx, 6ch
add     ecx, 1dh
mov     [ebp+var_14], ecx
mov     [ebp+var_2c], eax
cmp     edx, eax
jg      short loc_10060916
lea     eax, [edx+edx]
cmp     edx, edi
jnz     short loc_100608ab
mov     eax, 33h
mov     edx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edx]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_100609ef
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_100608ef
cmp     ebx, [eax+0fch]
jb      short loc_100608ef
cmp     ebx, [eax+100h]
jnb     short loc_100608ef
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100608fb
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     ecx, [ebp+var_14]
mov     eax, [ebp+var_2c]
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
xor     edi, edi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     eax, [eax+eax*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+var_58]
mov     [eax], cl
mov     ecx, [ebp+var_1c]
mov     [eax+4], ecx
lea     ecx, [esi+edx]
mov     byte ptr [eax+3], 0
mov     [eax+8], esi
mov     [eax+0ch], ecx
mov     [eax+10h], edi
mov     byte ptr [eax+1], 0
jmp     loc_100609f2
mov     eax, [ebx+1ch]
mov     ecx, [ebx+20h]
mov     [ebp+var_14], eax
cmp     ecx, eax
jg      short loc_100609c3
lea     eax, [ecx+ecx]
cmp     ecx, edi
jnz     short loc_1006095f
mov     eax, 33h
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_8]
mov     eax, [eax]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100609ef
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_1006099f
cmp     ebx, [eax+0fch]
jb      short loc_1006099f
cmp     ebx, [eax+100h]
jnb     short loc_1006099f
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100609ab
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [ebp+var_14]
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
xor     edi, edi
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+var_58]
mov     [eax+4], ecx
lea     ecx, [esi+edx]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edi
mov     [eax+10h], edi
mov     word ptr [eax], 41h
jmp     short loc_100609f2
mov     ebx, [ebp+var_8]
test    esi, esi
js      short loc_10060a11
mov     edx, [ebp+var_58]
mov     ecx, [ebp+var_c]
lea     eax, [esi+edx]
push    eax
push    ecx
push    ebx
mov     eax, esi
call    sub_1005f980
add     esp, 0ch
jmp     short loc_10060a11
mov     ebx, [ebp+var_8]
mov     edx, [ebp+var_c]
inc     esi
cmp     esi, [edx+8]
jl      loc_10060770
cmp     [ebp+var_40], 0
jnz     loc_10060acc
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_10060a9e
test    eax, eax
jz      short loc_10060a3a
add     eax, eax
jmp     short loc_10060a3f
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10060ac9
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10060a7f
cmp     ebx, [eax+0fch]
jb      short loc_10060a7f
cmp     ebx, [eax+100h]
jnb     short loc_10060a7f
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060a8b
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_24]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_28]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0eh
jmp     short loc_10060acc
mov     ebx, [ebp+var_8]
mov     eax, [ebp+arg_10]
mov     esi, [ebp+var_c]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_0]
push    eax
mov     eax, [ebp+var_54]
push    esi
push    1
push    1
push    ecx
push    edx
call    sub_1005f8b0
mov     ecx, [ebp+var_44]
mov     [ebp+var_34], eax
mov     eax, [esi+8]
mov     esi, [ebx+1ch]
lea     edx, [ecx+eax-1]
mov     eax, [ebx+20h]
add     esp, 18h
mov     [ebp+var_14], edx
cmp     eax, esi
jg      short loc_10060b71
test    eax, eax
jz      short loc_10060b0d
add     eax, eax
jmp     short loc_10060b12
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10060b9c
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10060b52
cmp     ebx, [eax+0fch]
jb      short loc_10060b52
cmp     ebx, [eax+100h]
jnb     short loc_10060b52
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060b5e
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_44]
xor     ecx, ecx
mov     [eax+8], edx
mov     edx, [ebp+var_14]
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     word ptr [eax], 0ah
jmp     short loc_10060b9f
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_c]
xor     edi, edi
mov     [ebp+var_18], edi
cmp     [eax+8], edi
jle     loc_10060e62
mov     ecx, [ebp+var_c]
cmp     edi, [ecx+4]
jz      loc_10060e52
mov     edx, [ebp+var_30]
mov     eax, [edx+edi*4]
test    eax, eax
js      loc_10060d6a
mov     ecx, [ebp+arg_8]
mov     edx, [ecx+8]
lea     eax, [eax+eax*4]
mov     eax, [edx+eax*4]
test    eax, eax
jz      loc_10060c98
cmp     byte ptr [eax], 84h
jnz     loc_10060c98
mov     eax, [eax+18h]
mov     ecx, [ebp+arg_0]
mov     edi, [ecx+8]
mov     esi, [edi+1ch]
mov     [ebp+var_14], eax
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10060c67
test    eax, eax
jz      short loc_10060c05
add     eax, eax
jmp     short loc_10060c0a
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_10060e4c
mov     eax, [edi]
test    eax, eax
jz      short loc_10060c48
cmp     ebx, [eax+0fch]
jb      short loc_10060c48
cmp     ebx, [eax+100h]
jnb     short loc_10060c48
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060c54
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_14]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_44]
add     ecx, [ebp+var_18]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
xor     ecx, ecx
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0eh
jmp     loc_10060e4f
mov     esi, [ebp+var_44]
mov     edx, [ebp+arg_0]
add     esi, edi
push    esi
push    eax
push    edx
call    sub_10038b70
mov     ecx, eax
add     esp, 0ch
mov     [ebp+var_2c], ecx
cmp     ecx, esi
jz      loc_10060e52
mov     eax, [ebp+arg_0]
mov     edi, [eax+8]
test    edi, edi
jz      loc_10060e4f
mov     eax, [edi+1ch]
mov     edx, [edi+20h]
mov     [ebp+var_14], eax
cmp     edx, eax
jg      short loc_10060d42
lea     eax, [edx+edx]
test    edx, edx
jnz     short loc_10060cdf
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_10060e4c
mov     eax, [edi]
test    eax, eax
jz      short loc_10060d1d
cmp     ebx, [eax+0fch]
jb      short loc_10060d1d
cmp     ebx, [eax+100h]
jnb     short loc_10060d1d
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060d29
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_2c]
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
inc     dword ptr [edi+1ch]
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], esi
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0fh
jmp     loc_10060e4f
test    [ebp+var_68], 1
jz      short loc_10060d8a
cmp     edi, 1fh
jg      short loc_10060d8a
mov     edx, 1
mov     ecx, edi
shl     edx, cl
test    [ebp+var_34], edx
jz      loc_10060e52
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_10060e03
test    eax, eax
jz      short loc_10060d9c
add     eax, eax
jmp     short loc_10060da1
mov     eax, 33h
mov     edx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edx]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10060e32
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10060de1
cmp     ebx, [eax+0fch]
jb      short loc_10060de1
cmp     ebx, [eax+100h]
jnb     short loc_10060de1
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060ded
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     edi, [ebp+var_18]
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_1c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_44]
add     ecx, edi
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], edi
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1dh
jmp     short loc_10060e35
mov     ebx, [ebp+var_8]
mov     edx, [ebp+var_44]
mov     eax, [ebp+var_c]
add     edx, edi
push    edx
push    eax
push    ebx
mov     eax, edi
call    sub_1005f980
add     esp, 0ch
jmp     short loc_10060e52
mov     ebx, [ebp+var_8]
mov     edi, [ebp+var_18]
mov     ecx, [ebp+var_c]
inc     edi
mov     [ebp+var_18], edi
cmp     edi, [ecx+8]
jl      loc_10060bb0
test    byte ptr [ebp+var_68], 1
jz      loc_100610e8
mov     edx, [ebp+var_c]
mov     eax, [edx+8]
mov     esi, [ebx+1ch]
mov     [ebp+var_14], eax
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_10060eeb
test    eax, eax
jz      short loc_10060e87
add     eax, eax
jmp     short loc_10060e8c
mov     eax, 33h
mov     edx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edx]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10060f16
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10060ecc
cmp     ebx, [eax+0fch]
jb      short loc_10060ecc
cmp     ebx, [eax+100h]
jnb     short loc_10060ecc
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060ed8
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_44]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_14]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1eh
jmp     short loc_10060f19
mov     ebx, [ebp+var_8]
mov     esi, [ebp+var_c]
push    ebx
mov     eax, esi
call    sub_1004b9b0
mov     edx, [ebp+var_10]
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+var_24]
add     esp, 4
push    edx
mov     edx, [ebp+arg_8]
push    eax
mov     eax, [ebp+var_54]
push    ecx
mov     ecx, [ebp+arg_0]
push    esi
push    1
push    edx
push    6bh
push    eax
push    ecx
call    sub_1005f840
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
add     esp, 24h
cmp     eax, esi
jg      short loc_10060fc2
test    eax, eax
jz      short loc_10060f5e
add     eax, eax
jmp     short loc_10060f63
mov     eax, 33h
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_8]
mov     eax, [eax]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10060ff2
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10060fa3
cmp     ebx, [eax+0fch]
jb      short loc_10060fa3
cmp     ebx, [eax+100h]
jnb     short loc_10060fa3
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10060faf
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+var_10]
mov     [eax+4], ecx
mov     ecx, [ebp+var_24]
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 36h
jmp     short loc_10060ff5
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_c]
xor     esi, esi
cmp     [eax+8], esi
jle     loc_100610e8
mov     edx, [ebp+var_30]
cmp     dword ptr [edx+esi*4], 0
jge     loc_100610de
cmp     esi, [eax+4]
jz      loc_100610de
mov     eax, [ebx+1ch]
mov     ecx, [ebx+20h]
mov     [ebp+var_14], eax
cmp     ecx, eax
jg      short loc_10061094
lea     eax, [ecx+ecx]
test    ecx, ecx
jnz     short loc_10061032
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100610c3
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10061072
cmp     ebx, [eax+0fch]
jb      short loc_10061072
cmp     ebx, [eax+100h]
jnb     short loc_10061072
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006107e
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [ebp+var_14]
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_1c]
lea     edx, [eax+eax*4]
mov     eax, [ebx+4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_44]
add     edx, esi
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], esi
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 1dh
jmp     short loc_100610c6
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_44]
mov     ecx, [ebp+var_c]
add     eax, esi
push    eax
push    ecx
push    ebx
mov     eax, esi
call    sub_1005f980
mov     eax, [ebp+var_c]
add     esp, 0ch
inc     esi
cmp     esi, [eax+8]
jl      loc_10061003
cmp     [ebp+var_50], 0
jnz     loc_1006132c
mov     edx, [ebp+var_10]
mov     ecx, [ebp+var_40]
mov     eax, [ebp+arg_10]
mov     esi, [ebp+var_24]
mov     edi, [ebp+var_c]
push    0
push    edx
mov     edx, [ebp+var_48]
push    eax
mov     eax, [ebp+var_28]
neg     ecx
push    1
sbb     ecx, ecx
and     ecx, esi
push    ecx
mov     ecx, [ebp+var_1c]
push    edx
mov     edx, [ebp+arg_0]
push    eax
push    ecx
push    edi
push    edx
call    sub_1004deb0
add     esp, 28h
cmp     [ebp+var_20], 0
jz      short loc_1006113f
mov     ebx, [ebp+arg_0]
push    0
push    esi
push    edi
call    sub_1004a080
mov     ebx, [ebp+var_8]
add     esp, 0ch
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_100611b6
test    eax, eax
jz      short loc_10061151
add     eax, eax
jmp     short loc_10061156
mov     eax, 33h
mov     edi, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1006121d
mov     eax, [edi]
test    eax, eax
jz      short loc_10061197
cmp     ebx, [eax+0fch]
jb      short loc_10061197
cmp     ebx, [eax+100h]
jnb     short loc_10061197
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100611a3
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+var_24]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ecx
mov     word ptr [eax], 36h
mov     [ebp+var_50], esi
mov     edi, esi
mov     eax, [ebp+var_48]
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+arg_0]
push    eax
mov     eax, [ebp+var_c]
push    ecx
push    edx
call    sub_10045700
add     esp, 0ch
cmp     [ebp+var_20], 0
jnz     short loc_1006120b
cmp     [ebp+var_40], 0
jz      loc_100612bc
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_10061291
test    eax, eax
jz      short loc_1006122a
add     eax, eax
jmp     short loc_1006122f
mov     ebx, [ebp+var_8]
mov     edi, 1
mov     [ebp+var_50], edi
jmp     short loc_100611e4
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100612b9
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_1006126f
cmp     ebx, [eax+0fch]
jb      short loc_1006126f
cmp     ebx, [eax+100h]
jnb     short loc_1006126f
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006127b
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     edi, [ebp+var_50]
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     ecx, [ebp+var_1c]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 3bh
jmp     short loc_100612bc
mov     ebx, [ebp+var_8]
test    edi, edi
js      short loc_100612d1
mov     eax, [ebx+1ch]
cmp     eax, edi
jbe     short loc_100612d1
mov     ecx, [ebx+4]
lea     edx, [edi+edi*4]
mov     [ecx+edx*4+8], eax
cmp     [ebp+var_20], 0
jz      short loc_100612ef
mov     edx, [ebp+var_28]
mov     eax, [ebp+var_c]
mov     ebx, [ebp+arg_0]
push    edx
push    0
push    eax
call    sub_1004a080
mov     ebx, [ebp+var_8]
add     esp, 0ch
mov     ecx, [ebp+var_48]
mov     edx, [ebp+var_28]
mov     eax, [ebp+var_1c]
mov     edi, [ebp+var_c]
mov     esi, [ebp+arg_0]
push    0
push    0
push    1
push    ecx
push    edx
push    eax
push    edi
push    esi
call    sub_1004f3b0
add     esp, 20h
cmp     [ebp+var_20], 0
jz      short loc_1006132c
mov     ecx, [ebp+var_24]
mov     edx, [ebp+arg_8]
push    ecx
push    edx
mov     ebx, esi
call    sub_1004b680
mov     ebx, [ebp+var_8]
add     esp, 8
mov     eax, [ebp+var_4c]
test    dword ptr [eax+18h], 1000h
jz      loc_100613f2
mov     ecx, [ebp+arg_0]
cmp     dword ptr [ecx+1b4h], 0
jnz     loc_100613f2
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_100613c2
test    eax, eax
jz      short loc_1006135e
add     eax, eax
jmp     short loc_10061363
mov     eax, 33h
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_8]
mov     eax, [eax]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100613ef
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_100613a3
cmp     ebx, [eax+0fch]
jb      short loc_100613a3
cmp     ebx, [eax+100h]
jnb     short loc_100613a3
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100613af
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     eax, [ebx+4]
mov     ecx, 1
add     [ebx+1ch], ecx
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_60]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 14h
jmp     short loc_100613f2
mov     ebx, [ebp+var_8]
mov     edi, [ebp+var_10]
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+var_24]
mov     edx, [ebp+var_c]
push    edi
push    eax
mov     eax, [ebp+arg_8]
push    ecx
mov     ecx, [ebp+var_54]
push    edx
mov     edx, [ebp+arg_0]
push    2
push    eax
push    6bh
push    ecx
push    edx
call    sub_1005f840
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
add     esp, 24h
cmp     eax, esi
jg      short loc_10061493
test    eax, eax
jz      short loc_1006142c
add     eax, eax
jmp     short loc_10061431
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100614b8
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10061471
cmp     ebx, [eax+0fch]
jb      short loc_10061471
cmp     ebx, [eax+100h]
jnb     short loc_10061471
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006147d
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     edi, [ebp+var_10]
mov     eax, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edi
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
jmp     short loc_100614bb
mov     ebx, [ebp+var_8]
test    edi, edi
js      short loc_100614d0
mov     eax, [ebx+1ch]
cmp     eax, edi
jbe     short loc_100614d0
mov     edx, [ebx+4]
lea     ecx, [edi+edi*4]
mov     [edx+ecx*4+8], eax
mov     eax, [ebp+var_c]
mov     eax, [eax+10h]
xor     edi, edi
mov     [ebp+var_18], edi
mov     [ebp+var_10], eax
test    eax, eax
jz      loc_100615b6
cmp     [ebp+var_5c], 0
jnz     short loc_100614f9
mov     ecx, [ebp+var_48]
cmp     dword ptr [ecx+edi*4], 0
jle     loc_100615a1
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_10061572
test    eax, eax
jz      short loc_1006150b
add     eax, eax
jmp     short loc_10061510
mov     eax, 33h
mov     ebx, [ebx+4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+var_8]
mov     eax, [eax]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1006159e
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_10061550
cmp     ebx, [eax+0fch]
jb      short loc_10061550
cmp     ebx, [eax+100h]
jnb     short loc_10061550
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006155c
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     edi, [ebp+var_18]
mov     edx, [ebx+4]
inc     dword ptr [ebx+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_1c]
lea     edx, [ecx+edi+1]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 2dh
jmp     short loc_100615a1
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_10]
mov     eax, [eax+14h]
inc     edi
mov     [ebp+var_10], eax
mov     [ebp+var_18], edi
test    eax, eax
jnz     loc_100614e6
mov     esi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, esi
jg      short loc_1006162c
test    eax, eax
jz      short loc_100615c8
add     eax, eax
jmp     short loc_100615cd
mov     eax, 33h
mov     edx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edx]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10061654
mov     edi, [ebp+var_8]
mov     eax, [edi]
test    eax, eax
jz      short loc_1006160d
cmp     ebx, [eax+0fch]
jb      short loc_1006160d
cmp     ebx, [eax+100h]
jnb     short loc_1006160d
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10061619
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     ebx, [ebp+var_8]
mov     [edi+20h], edx
mov     ecx, [ebx+4]
inc     dword ptr [ebx+1ch]
mov     edx, [ebp+var_1c]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 2dh
jmp     short loc_10061657
mov     ebx, [ebp+var_8]
mov     esi, [ebp+arg_0]
cmp     byte ptr [esi+12h], 0
jnz     short loc_10061672
cmp     dword ptr [esi+1b4h], 0
jnz     short loc_10061672
push    esi
call    sub_1004c3c0
add     esp, 4
mov     eax, [ebp+var_4c]
test    dword ptr [eax+18h], 1000h
jz      loc_10061999
cmp     dword ptr [esi+1b4h], 0
jnz     loc_10061999
cmp     byte ptr [esi+12h], 0
jnz     loc_10061999
mov     edi, [ebx+1ch]
mov     eax, [ebx+20h]
cmp     eax, edi
jg      short loc_1006170f
test    eax, eax
jz      short loc_100616ab
add     eax, eax
jmp     short loc_100616b0
mov     eax, 33h
mov     edx, [ebp+var_8]
mov     ebx, [ebx+4]
lea     ecx, [eax+eax*4]
mov     eax, [edx]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1006173c
mov     esi, [ebp+var_8]
mov     eax, [esi]
test    eax, eax
jz      short loc_100616f0
cmp     ebx, [eax+0fch]
jb      short loc_100616f0
cmp     ebx, [eax+100h]
jnb     short loc_100616f0
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100616fc
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+4], ebx
mov     ebx, [ebp+var_8]
mov     [esi+20h], edx
mov     edx, [ebx+4]
mov     ecx, 1
add     [ebx+1ch], ecx
lea     eax, [edi+edi*4]
lea     eax, [edx+eax*4]
mov     edx, [ebp+var_60]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 10h
jmp     short loc_1006173f
mov     ebx, [ebp+var_8]
movzx   eax, word ptr [ebx+2ch]
mov     ecx, [ebx+10h]
mov     esi, [ebx]
lea     eax, [eax+eax*4]
mov     edi, 1
call    sub_10026500
mov     eax, [ebx+10h]
test    esi, esi
jz      short loc_100617c8
cmp     dword ptr [esi+1e8h], 0
jz      short loc_1006179e
test    eax, eax
jz      short loc_1006178a
cmp     eax, [esi+0fch]
jb      short loc_1006178a
cmp     eax, [esi+100h]
jnb     short loc_1006178a
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_100617d1
push    eax
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_100617d1
test    eax, eax
jz      short loc_100617c8
cmp     eax, [esi+0fch]
jb      short loc_100617c8
cmp     eax, [esi+100h]
jnb     short loc_100617c8
mov     ecx, [esi+0f8h]
mov     [eax], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
jmp     short loc_100617d1
push    eax
call    sub_10009770
add     esp, 4
mov     edx, edi
mov     [ebx+2ch], dx
test    esi, esi
jz      short loc_10061809
cmp     byte ptr [esi+32h], 0
jz      short loc_100617e8
xor     esi, esi
jmp     loc_10061876
cmp     byte ptr [esi+0e2h], 0
jz      short loc_10061809
mov     eax, 0c8h
cmp     ax, [esi+0e0h]
jbe     loc_100618d6
add     [esi+0f0h], edi
cmp     dword_10080230, 0
jz      loc_1006191c
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10061829
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [ebp+arg_0]
mov     eax, 0c8h
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10061849
push    eax
call    dword_10080284
add     esp, 4
mov     ebx, [ebp+var_8]
mov     eax, [ebp+arg_0]
test    eax, eax
jnz     short loc_1006185b
test    esi, esi
jz      short loc_1006185b
mov     byte ptr [esi+32h], 1
mov     edi, 1
mov     esi, eax
test    esi, esi
jz      short loc_10061876
push    0c8h
push    0
push    esi
call    memset
add     esp, 0ch
mov     [ebx+10h], esi
test    esi, esi
jz      short loc_100618bc
mov     edx, edi
mov     [esi+1ch], dx
mov     eax, [ebx]
mov     [esi], eax
mov     ecx, edi
mov     [esi+44h], cx
mov     edx, [ebx]
mov     [esi+28h], edx
mov     eax, edi
mov     [esi+6ch], ax
mov     ecx, [ebx]
mov     edx, edi
mov     [esi+50h], ecx
mov     [esi+94h], dx
mov     eax, [ebx]
mov     ecx, edi
mov     [esi+78h], eax
mov     [esi+0bch], cx
mov     edx, [ebx]
mov     [esi+0a0h], edx
mov     eax, [ebx]
cmp     byte ptr [eax+32h], 0
jnz     loc_10061999
mov     ebx, [ebx+10h]
mov     eax, [ebx]
test    eax, eax
jz      short loc_1006192f
mov     eax, [eax+48h]
jmp     short loc_10061934
mov     eax, [esi+0f8h]
test    eax, eax
jnz     short loc_100618eb
add     [esi+0f4h], edi
jmp     loc_10061809
mov     ecx, [eax]
add     [esi+0e4h], edi
add     [esi+0ech], edi
mov     [esi+0f8h], ecx
mov     ecx, [esi+0e4h]
cmp     ecx, [esi+0e8h]
jle     loc_10061860
mov     [esi+0e8h], ecx
jmp     loc_10061860
push    0c8h
call    dword_1008024c
add     esp, 4
jmp     loc_1006184f
mov     eax, 3b9aca00h
xor     esi, esi
test    eax, eax
js      short loc_1006194f
lea     ebx, [ebx+0]
cmp     ds:byte_1007c380[esi], 0
jz      short loc_1006194f
add     esi, edi
cmp     esi, eax
jle     short loc_10061940
xor     ecx, ecx
mov     edi, 202h
push    ebx
cmp     ecx, offset sub_10009760
jnz     short loc_10061971
call    sub_100247d0
mov     eax, offset byte_1007c380
mov     [ebx+4], eax
mov     [ebx+24h], eax
jmp     short loc_10061982
call    sub_100247d0
mov     dword ptr [ebx+4], offset byte_1007c380
mov     edi, 0a02h
mov     dword ptr [ebx+20h], 0
add     esp, 4
mov     [ebx+18h], esi
mov     [ebx+1ch], di
mov     word ptr [ebx+1eh], 103h
mov     eax, [ebp+var_6c]
test    eax, eax
jz      short loc_100619a9
mov     edx, [ebp+var_70]
mov     [eax+204h], edx
mov     esi, [ebp+var_4c]
mov     eax, [ebp+var_48]
mov     ecx, esi
call    sub_10009810
mov     eax, [ebp+var_30]
mov     ecx, esi
call    sub_10009810
mov     eax, [ebp+arg_4]
push    eax
mov     eax, esi
call    sub_10043720
mov     ecx, [ebp+arg_8]
add     esp, 4
push    ecx
push    esi
call    sub_10037020
mov     edx, [ebp+src]
push    edx
push    esi
call    sub_10036430
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 34h
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_8]
push    ebx
push    esi
push    edi
mov     edi, [eax+8]
mov     eax, [eax]
mov     [esp+40h+var_2c], eax
mov     eax, [ecx+34h]
xor     ebx, ebx
mov     [esp+40h+var_14], edi
mov     [esp+40h+var_1c], eax
cmp     eax, ebx
jz      short loc_10061a37
jmp     short loc_10061a24
mov     eax, [esp+40h+var_1c]
mov     edx, [esp+40h+var_2c]
cmp     [eax], edx
jz      short loc_10061a37
mov     eax, [eax+18h]
mov     [esp+40h+var_1c], eax
cmp     eax, ebx
jnz     short loc_10061a20
mov     eax, offset arowid_3
lea     esp, [esp+0]
inc     eax
cmp     [eax], bl
jnz     short loc_10061a40
mov     esi, [esp+40h+var_2c]
sub     eax, offset arowid_3
and     eax, 3fffffffh
lea     ecx, [eax+31h]
mov     [esp+40h+var_c], eax
mov     [esp+40h+size], ecx
call    sub_10009a40
mov     [esp+40h+var_24], eax
cmp     eax, ebx
jz      short loc_10061acb
mov     eax, [esp+40h+size]
mov     esi, [esp+40h+var_24]
push    eax
push    ebx
push    esi
call    memset
mov     eax, [esp+4ch+var_c]
or      ecx, 0ffffffffh
mov     [esi+1eh], cx
lea     ecx, [eax+1]
add     esp, 0ch
mov     byte ptr [esi], 1ah
cmp     ecx, ebx
jnz     short loc_10061aa1
mov     edx, 400h
or      [esi+2], dx
mov     [esi+4], ebx
jmp     short loc_10061ac4
lea     ecx, [esi+30h]
mov     [esi+4], ecx
cmp     eax, ebx
jz      short loc_10061abe
push    eax
push    offset arowid_3
push    ecx
call    memcpy
mov     eax, [esp+4ch+var_c]
add     esp, 0ch
mov     ecx, [esi+4]
mov     [eax+ecx], bl
mov     dword ptr [esi+2ch], 1
mov     edx, [ebp+arg_0]
mov     esi, [edx]
mov     ecx, 0ch
call    sub_10009a40
mov     [esp+40h+var_30], eax
cmp     eax, ebx
jz      short loc_10061aff
mov     [eax], ebx
mov     [eax+4], ebx
mov     ecx, 14h
mov     [eax+8], ebx
call    sub_10009a40
mov     ecx, [esp+40h+var_30]
mov     [ecx+8], eax
cmp     eax, ebx
jnz     short loc_10061b1e
mov     edx, [esp+40h+var_24]
push    edx
push    esi
call    sub_10036430
mov     eax, [esp+48h+var_30]
push    eax
push    esi
call    sub_10037020
add     esp, 10h
mov     [esp+40h+var_30], ebx
jmp     short loc_10061b46
mov     edx, [esp+40h+var_30]
mov     ecx, [edx]
mov     esi, [edx+8]
lea     eax, [ecx+ecx*4]
lea     eax, [esi+eax*4]
inc     ecx
mov     [edx], ecx
mov     ecx, [esp+40h+var_24]
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     [eax], ecx
mov     [esp+40h+var_30], edx
cmp     [ebp+arg_10], ebx
jz      short loc_10061b73
mov     edx, [ebp+arg_10]
mov     eax, [esp+40h+var_2c]
push    ebx
push    ebx
push    edx
push    eax
call    sub_100365c0
mov     esi, [ebp+arg_0]
mov     ecx, [esp+50h+var_30]
push    eax
mov     eax, esi
call    sub_10036e50
add     esp, 14h
mov     [esp+40h+var_30], eax
jmp     short loc_10061b76
mov     esi, [ebp+arg_0]
mov     ecx, [ebp+arg_8]
mov     [esp+40h+var_24], ebx
cmp     [ecx+8], ebx
jle     loc_10061c92
mov     [esp+40h+var_20], ebx
mov     edx, [ebp+arg_14]
mov     eax, [esp+40h+var_24]
mov     eax, [edx+eax*4]
cmp     eax, ebx
jl      short loc_10061bb9
mov     edx, [ebp+arg_c]
lea     ecx, [eax+eax*4]
mov     eax, [edx+8]
mov     eax, [eax+ecx*4]
mov     ecx, [esp+40h+var_2c]
push    ebx
push    ebx
push    eax
push    ecx
call    sub_100365c0
add     esp, 10h
jmp     loc_10061c65
mov     edx, [ebp+arg_8]
mov     eax, [edx+0ch]
mov     ecx, [esp+40h+var_20]
mov     ecx, [ecx+eax]
mov     [esp+40h+src], ecx
cmp     ecx, ebx
jz      short loc_10061be6
mov     eax, ecx
cmp     [ecx], bl
jz      short loc_10061bd9
inc     eax
cmp     [eax], bl
jnz     short loc_10061bd4
sub     eax, ecx
and     eax, 3fffffffh
mov     [esp+40h+var_28], eax
jmp     short loc_10061bea
mov     [esp+40h+var_28], ebx
mov     ecx, [esp+40h+var_28]
mov     esi, [esp+40h+var_2c]
add     ecx, 31h
mov     [esp+40h+size], ecx
call    sub_10009a40
mov     esi, eax
cmp     esi, ebx
jz      short loc_10061c60
mov     edx, [esp+40h+size]
push    edx
push    ebx
push    esi
call    memset
or      eax, 0ffffffffh
mov     [esi+1eh], ax
mov     eax, [esp+4ch+var_28]
lea     ecx, [eax+1]
add     esp, 0ch
mov     byte ptr [esi], 1ah
cmp     ecx, ebx
jnz     short loc_10061c36
mov     ecx, 400h
or      [esi+2], cx
mov     [esi+4], ebx
jmp     short loc_10061c59
lea     ecx, [esi+30h]
mov     [esi+4], ecx
cmp     eax, ebx
jz      short loc_10061c53
mov     edx, [esp+40h+src]
push    eax
push    edx
push    ecx
call    memcpy
mov     eax, [esp+4ch+var_28]
add     esp, 0ch
mov     ecx, [esi+4]
mov     [eax+ecx], bl
mov     dword ptr [esi+2ch], 1
mov     eax, esi
mov     esi, [ebp+arg_0]
mov     ecx, [esp+40h+var_30]
push    eax
mov     eax, esi
call    sub_10036e50
mov     edx, [ebp+arg_8]
add     [esp+44h+var_20], 18h
mov     [esp+44h+var_30], eax
mov     eax, [esp+44h+var_24]
inc     eax
add     esp, 4
mov     [esp+40h+var_24], eax
cmp     eax, [edx+8]
jl      loc_10061b8a
mov     eax, [ebp+arg_18]
mov     ecx, [ebp+arg_4]
mov     edx, [esp+40h+var_30]
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    eax
push    ecx
push    edx
mov     ecx, esi
call    sub_10054420
mov     ecx, [ebp+arg_8]
mov     [esp+64h+var_24], eax
mov     eax, [esi+48h]
mov     [esp+64h+var_30], eax
inc     eax
mov     [esi+48h], eax
mov     edx, [ecx+8]
mov     esi, [edi+1ch]
xor     eax, eax
add     esp, 24h
cmp     [ebp+arg_10], ebx
setnz   al
mov     [esp+40h+size], eax
lea     eax, [eax+edx+1]
mov     [esp+40h+src], eax
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10061d47
cmp     eax, ebx
jz      short loc_10061cea
add     eax, eax
jmp     short loc_10061cef
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10061d71
mov     eax, [edi]
test    eax, eax
jz      short loc_10061d29
cmp     ebx, [eax+0fch]
jb      short loc_10061d29
cmp     ebx, [eax+100h]
jnb     short loc_10061d29
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10061d35
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [esp+40h+var_30]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [esp+40h+src]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2ah
jmp     short loc_10061d73
xor     ebx, ebx
mov     ecx, [edi+4]
mov     dl, 8
cmp     ecx, ebx
jz      short loc_10061d86
mov     eax, [edi+1ch]
lea     eax, [eax+eax*4]
mov     [ecx+eax*4-11h], dl
mov     eax, [esp+40h+var_24]
mov     ecx, [esp+40h+var_30]
mov     esi, [ebp+arg_0]
mov     byte ptr [esp+40h+src], dl
lea     edx, [esp+40h+src]
push    edx
push    eax
push    esi
mov     [esp+4ch+var_c], ecx
mov     byte ptr [esp+4ch+src+1], bl
mov     [esp+4ch+var_8], ebx
mov     [esp+4ch+var_4], ebx
call    sub_1005b870
inc     dword ptr [esi+4ch]
mov     eax, [esi+4ch]
mov     ecx, [ebp+arg_8]
mov     edx, [ecx+8]
mov     [esp+4ch+var_28], eax
lea     eax, [eax+edx+1]
mov     [esi+4ch], eax
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
add     esp, 0ch
cmp     eax, esi
jg      short loc_10061e3a
cmp     eax, ebx
jz      short loc_10061ddd
add     eax, eax
jmp     short loc_10061de2
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10061e74
mov     eax, [edi]
test    eax, eax
jz      short loc_10061e1c
cmp     ebx, [eax+0fch]
jb      short loc_10061e1c
cmp     ebx, [eax+100h]
jnb     short loc_10061e1c
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10061e28
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [esp+40h+var_30]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 48h
mov     [esp+40h+var_20], esi
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10061edd
cmp     eax, ebx
jz      short loc_10061e80
add     eax, eax
jmp     short loc_10061e85
mov     [esp+40h+var_20], 1
xor     ebx, ebx
jmp     short loc_10061e62
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10061f07
mov     eax, [edi]
test    eax, eax
jz      short loc_10061ebf
cmp     ebx, [eax+0fch]
jb      short loc_10061ebf
cmp     ebx, [eax+100h]
jnb     short loc_10061ebf
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10061ecb
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [esp+40h+var_30]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+40h+var_28]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 1dh
jmp     short loc_10061f09
xor     ebx, ebx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10061f78
cmp     eax, ebx
jz      short loc_10061f1b
add     eax, eax
jmp     short loc_10061f20
mov     eax, 33h
mov     ebx, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [edi]
add     edx, edx
add     edx, edx
push    edx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10061fa7
mov     eax, [edi]
test    eax, eax
jz      short loc_10061f5a
cmp     ebx, [eax+0fch]
jb      short loc_10061f5a
cmp     ebx, [eax+100h]
jnb     short loc_10061f5a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10061f66
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [esp+40h+var_30]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+40h+size]
mov     [eax+4], edx
mov     edx, [esp+40h+var_28]
inc     edx
mov     [eax+3], bl
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], ebx
mov     word ptr [eax], 1dh
jmp     short loc_10061fa9
xor     ebx, ebx
mov     eax, [ebp+arg_8]
xor     esi, esi
cmp     [eax+8], ebx
jle     loc_1006207b
jmp     short loc_10061fc0
mov     eax, [edi+1ch]
mov     ecx, [edi+20h]
mov     [esp+40h+src], eax
cmp     ecx, eax
jg      short loc_10062036
lea     eax, [ecx+ecx]
cmp     ecx, ebx
jnz     short loc_10061fda
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1006206c
mov     eax, [edi]
test    eax, eax
jz      short loc_10062014
cmp     ebx, [eax+0fch]
jb      short loc_10062014
cmp     ebx, [eax+100h]
jnb     short loc_10062014
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10062020
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     eax, [esp+40h+src]
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
inc     dword ptr [edi+1ch]
mov     ecx, [esp+40h+var_30]
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
lea     eax, [eax+edx*4]
mov     edx, [esp+40h+size]
mov     [eax+4], ecx
lea     ecx, [edx+esi+1]
mov     edx, [esp+40h+var_28]
mov     [eax+8], ecx
lea     ecx, [edx+esi+2]
mov     [eax+3], bl
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 1dh
jmp     short loc_1006206e
xor     ebx, ebx
mov     edx, [ebp+arg_8]
inc     esi
cmp     esi, [edx+8]
jl      loc_10061fc0
mov     esi, [ebp+arg_8]
mov     eax, [ebp+arg_0]
push    esi
call    sub_10063df0
mov     ecx, [esi+8]
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
add     ecx, 2
add     esp, 4
mov     [esp+40h+src], ecx
cmp     eax, esi
jg      short loc_1006210b
cmp     eax, ebx
jz      short loc_100620a6
add     eax, eax
jmp     short loc_100620ab
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_10062172
mov     eax, [edi]
test    eax, eax
jz      short loc_100620e9
cmp     ebx, [eax+0fch]
jb      short loc_100620e9
cmp     ebx, [eax+100h]
jnb     short loc_100620e9
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100620f5
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     ecx, [esp+40h+src]
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+8], ecx
mov     ecx, [esp+40h+var_28]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 8ch
mov     ecx, [edi+4]
mov     edx, [edi]
mov     eax, esi
cmp     ecx, ebx
jz      short loc_10062185
cmp     [edx+32h], bl
jnz     short loc_10062185
cmp     esi, ebx
jge     short loc_10062147
mov     eax, [edi+1ch]
dec     eax
lea     eax, [eax+eax*4]
lea     esi, [ecx+eax*4]
movsx   eax, byte ptr [esi+1]
mov     ecx, [esi+10h]
mov     edi, edx
call    sub_10025e50
mov     eax, [esp+40h+var_1c]
mov     edi, [esp+40h+var_14]
mov     [esi+10h], ebx
cmp     eax, ebx
jnz     short loc_1006217b
mov     [esi+10h], ebx
mov     [esi+1], bl
jmp     short loc_10062185
mov     esi, 1
xor     ebx, ebx
jmp     short loc_1006212f
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0f6h
inc     dword ptr [eax+0ch]
mov     edx, [ebp+arg_1c]
cmp     edx, 63h
jnz     short loc_10062192
mov     edx, 2
mov     ecx, [edi+4]
cmp     ecx, ebx
jz      short loc_100621a3
mov     eax, [edi+1ch]
lea     eax, [eax+eax*4]
mov     [ecx+eax*4-11h], dl
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+1b0h]
cmp     eax, ebx
jnz     short loc_100621b2
mov     eax, ecx
mov     byte ptr [eax+18h], 1
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_10062225
cmp     eax, ebx
jz      short loc_100621c8
add     eax, eax
jmp     short loc_100621cd
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10062250
mov     eax, [edi]
test    eax, eax
jz      short loc_10062207
cmp     ebx, [eax+0fch]
jb      short loc_10062207
cmp     ebx, [eax+100h]
jnb     short loc_10062207
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10062213
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [esp+40h+var_30]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [esp+40h+var_20]
inc     edx
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 5fh
jmp     short loc_10062252
xor     ebx, ebx
mov     eax, [esp+40h+var_20]
cmp     eax, ebx
jl      short loc_1006226b
mov     ecx, [edi+1ch]
cmp     ecx, eax
jbe     short loc_1006226b
mov     edx, [edi+4]
lea     eax, [eax+eax*4]
mov     [edx+eax*4+8], ecx
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_100622da
cmp     eax, ebx
jz      short loc_1006227d
add     eax, eax
jmp     short loc_10062282
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10062300
mov     eax, [edi]
test    eax, eax
jz      short loc_100622bc
cmp     ebx, [eax+0fch]
jb      short loc_100622bc
cmp     ebx, [eax+100h]
jnb     short loc_100622bc
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100622c8
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [esp+40h+var_30]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
jmp     short loc_10062302
xor     ebx, ebx
cmp     [esp+40h+var_24], ebx
jz      loc_100623f9
mov     esi, [esp+40h+var_24]
mov     edx, [esi]
mov     edi, [esp+40h+var_2c]
push    edx
push    edi
call    sub_10037020
mov     eax, [esi+24h]
push    eax
mov     eax, edi
call    sub_10043720
mov     ecx, [esi+28h]
add     esp, 0ch
push    ecx
push    edi
call    sub_10036430
mov     edx, [esi+2ch]
push    edx
push    edi
call    sub_10037020
mov     eax, [esi+30h]
push    eax
push    edi
call    sub_10036430
mov     ecx, [esi+34h]
push    ecx
push    edi
call    sub_10037020
mov     esi, [esi+38h]
call    sub_100545e0
mov     edi, [esp+60h+var_24]
mov     edx, [edi+44h]
mov     esi, [esp+60h+var_2c]
push    edx
push    esi
call    sub_10036430
mov     eax, [edi+48h]
push    eax
push    esi
call    sub_10036430
add     esp, 30h
cmp     esi, ebx
jz      short loc_100623f0
cmp     [esi+1e8h], ebx
jz      short loc_100623c5
cmp     edi, [esi+0fch]
jb      short loc_100623ac
cmp     edi, [esi+100h]
jnb     short loc_100623ac
movzx   eax, word ptr [esi+0e0h]
mov     esi, [esi+1e8h]
add     [esi], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    edi
call    dword_10080258
mov     esi, [esi+1e8h]
add     esp, 4
add     [esi], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     edi, [esi+0fch]
jb      short loc_100623f0
cmp     edi, [esi+100h]
jnb     short loc_100623f0
mov     ecx, [esi+0f8h]
mov     [edi], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    edi
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+30h]
push    edi
xor     edi, edi
mov     ebx, ecx
cmp     eax, 0bdf20da3h
jz      short loc_1006241d
cmp     eax, 519c2973h
jnz     short loc_10062424
call    sub_10027d40
mov     edi, eax
mov     ecx, [esi+38h]
mov     eax, [esi]
test    ecx, ecx
jz      short loc_10062435
mov     edx, [esi+3ch]
mov     [ecx+3ch], edx
jmp     short loc_1006243b
mov     ecx, [esi+3ch]
mov     [eax+4], ecx
mov     ecx, [esi+3ch]
test    ecx, ecx
jz      short loc_10062448
mov     edx, [esi+38h]
mov     [ecx+38h], edx
push    esi
mov     dword ptr [esi+30h], 0b606c3c8h
mov     dword ptr [esi], 0
call    sub_10027f40
add     esp, 4
test    edi, edi
jz      short loc_10062479
push    ebx
call    sub_10070900
add     esp, 4
mov     esi, ebx
mov     ebx, [ebp+arg_0]
push    eax
call    sub_10009bf0
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     ebx, ecx
test    eax, eax
jnz     short loc_10062499
mov     eax, 7
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    0
push    0
push    0
push    0ffffffffh
push    eax
lea     esi, [ebp+var_4]
mov     eax, edi
call    sub_10054100
add     esp, 14h
test    eax, eax
jz      short loc_100624d6
push    edi
call    sub_10070900
add     esp, 4
push    eax
mov     esi, edi
call    sub_10009bf0
add     esp, 4
push    edi
call    sub_10070bc0
add     esp, 4
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+var_4]
push    esi
call    sub_10029be0
add     esp, 4
push    ebx
mov     eax, esi
mov     ecx, edi
call    sub_10062400
add     esp, 4
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    0
push    0
push    0
push    0ffffffffh
push    eax
mov     eax, [ebp+arg_0]
lea     esi, [ebp+var_4]
call    sub_10054100
add     esp, 14h
test    eax, eax
jnz     loc_10062730
mov     edi, [ebp+var_4]
push    edi
call    sub_10029be0
add     esp, 4
cmp     eax, 64h
jnz     loc_1006271f
lea     ecx, [ecx+0]
test    edi, edi
jz      loc_1006262c
cmp     dword ptr [edi+14h], 0
jz      loc_10062607
xor     ecx, ecx
cmp     cx, [edi+2ch]
jnb     loc_10062607
mov     edx, [edi]
mov     eax, [edx+0ch]
test    eax, eax
jz      short loc_10062571
push    eax
call    dword_1008027c
add     esp, 4
mov     ebx, [edi+14h]
test    ebx, ebx
jz      loc_1006264d
movzx   ecx, word ptr [ebx+1ch]
test    cl, 1
jnz     loc_1006264d
mov     eax, ecx
shr     eax, 3
and     eax, 2
or      eax, ecx
mov     [ebx+1ch], ax
test    eax, 4000h
jz      short loc_100625a5
mov     eax, ebx
call    sub_10024590
test    byte ptr [ebx+1ch], 2
jz      loc_10062636
cmp     byte ptr [ebx+1fh], 1
jz      short loc_100625c0
push    1
push    ebx
call    sub_1000b360
add     esp, 8
movzx   eax, word ptr [ebx+1ch]
test    eax, 200h
jnz     short loc_10062642
test    al, 2
jz      short loc_10062642
mov     eax, [ebx+18h]
push    1
add     eax, 2
mov     edi, ebx
call    sub_10024410
mov     edi, [ebp+var_4]
add     esp, 4
test    eax, eax
jnz     short loc_10062642
mov     ecx, [ebx+18h]
mov     edx, [ebx+4]
mov     [ecx+edx], al
mov     eax, [ebx+18h]
mov     ecx, [ebx+4]
mov     edx, 200h
mov     byte ptr [eax+ecx+1], 0
or      [ebx+1ch], dx
jmp     short loc_10062642
mov     eax, [edi]
test    eax, eax
jz      short loc_1006262c
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_1006261e
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [edi]
push    0
push    19h
call    sub_1000ba40
add     esp, 8
mov     ebx, offset dword_100767a8
jmp     loc_1006257c
mov     esi, 1
mov     eax, ebx
call    sub_10024640
cmp     byte ptr [ebx+1fh], 1
jnz     short loc_1006264d
mov     ebx, [ebx+4]
jmp     short loc_1006264f
xor     ebx, ebx
test    edi, edi
jz      short loc_100626a3
mov     esi, [edi]
mov     ecx, [edi+58h]
test    esi, esi
jz      short loc_10062686
cmp     byte ptr [esi+32h], 0
jnz     short loc_1006266a
cmp     ecx, 0c0ah
jnz     short loc_10062681
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     ecx, 7
mov     eax, [esi+2ch]
jmp     short loc_1006268b
mov     eax, 0ffh
and     eax, ecx
mov     [edi+58h], eax
mov     eax, [edi]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_100626a3
push    eax
call    dword_10080284
add     esp, 4
test    ebx, ebx
jz      loc_10062737
push    0
push    0
push    0
push    0ffffffffh
push    ebx
mov     ebx, [ebp+arg_0]
lea     esi, [ebp+var_8]
mov     eax, ebx
call    sub_10054100
add     esp, 14h
test    eax, eax
jz      short loc_100626eb
push    ebx
call    sub_10070900
add     esp, 4
mov     esi, ebx
mov     ebx, [ebp+arg_4]
push    eax
call    sub_10009bf0
add     esp, 4
mov     ecx, esi
push    ecx
call    sub_10070bc0
mov     ebx, esi
jmp     short loc_10062704
mov     esi, [ebp+var_8]
push    esi
call    sub_10029be0
mov     edx, [ebp+arg_4]
add     esp, 4
push    edx
mov     eax, esi
mov     ecx, ebx
call    sub_10062400
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_1006273f
push    edi
call    sub_10029be0
add     esp, 4
cmp     eax, 64h
jz      loc_10062540
mov     ecx, [ebp+arg_4]
push    ecx
mov     ecx, [ebp+arg_0]
mov     eax, edi
call    sub_10062400
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [ebp+arg_0]
mov     esi, 7
mov     eax, [ebp+arg_4]
push    eax
mov     eax, edi
mov     ecx, ebx
call    sub_10062400
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
push    eax
call    sub_10056c90
mov     edi, eax
xor     ebx, ebx
add     esp, 4
cmp     edi, ebx
jz      short loc_100627a5
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10062785
call    sub_10025810
test    eax, eax
jnz     short loc_100627a5
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     [eax+3], bl
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 7fh
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
push    ebx
push    esi
push    edi
mov     ebx, ecx
xor     ecx, ecx
mov     edi, eax
mov     [ebp+var_10], ecx
cmp     [edi+30h], cl
jnz     short loc_100627e2
push    offset acannotvacuumfr
mov     esi, edi
call    sub_10009bf0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword ptr [edi+7ch], 1
jle     short loc_10062803
push    offset acannotvacuumsq
mov     esi, edi
call    sub_10009bf0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [edi+18h]
mov     edx, [edi+40h]
mov     [ebp+var_18], eax
and     eax, 0faffffffh
or      eax, 10050000h
cmp     byte ptr [edi+31h], 2
mov     [ebp+var_1c], edx
mov     edx, [edi+44h]
mov     [edi+18h], eax
mov     eax, [edi+10h]
mov     [ebp+var_20], edx
mov     edx, [edi+90h]
mov     [edi+90h], ecx
mov     eax, [eax+4]
mov     ecx, [eax+4]
mov     [ebp+var_24], edx
mov     edx, [ecx]
mov     ecx, [edi+14h]
mov     [ebp+var_4], eax
movzx   eax, byte ptr [edx+0eh]
mov     [ebp+var_14], eax
mov     [ebp+var_c], ecx
mov     eax, offset aattachmemoryas
jz      short loc_1006285c
mov     eax, offset aattachasvacuum
mov     ecx, ebx
call    sub_10062480
mov     esi, eax
mov     eax, [edi+14h]
cmp     eax, [ebp+var_c]
jle     short loc_1006287b
mov     ecx, [edi+10h]
mov     edx, eax
add     edx, edx
lea     edx, [ecx+edx*8-10h]
mov     [ebp+var_10], edx
test    esi, esi
jnz     loc_10062aa7
mov     ecx, [edi+10h]
add     eax, eax
mov     eax, [ecx+eax*8-0ch]
mov     [ebp+var_8], eax
call    sub_1001cd80
mov     eax, [ebp+var_4]
call    sub_1001b7a0
mov     [ebp+var_c], eax
mov     eax, offset apragmavacuumdb
mov     ecx, ebx
call    sub_10062480
mov     esi, eax
test    esi, esi
jnz     loc_10062aa7
mov     eax, offset abegin_0
mov     ecx, ebx
call    sub_10062480
mov     esi, eax
test    esi, esi
jnz     loc_10062aa7
mov     edx, [ebp+var_4]
push    2
push    edx
call    sub_1001be00
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_10062aa7
mov     eax, [ebp+var_4]
mov     ecx, [eax+4]
mov     edx, [ecx]
cmp     byte ptr [edx+5], 5
jnz     short loc_100628f4
mov     [edi+38h], esi
mov     ecx, [ebp+var_c]
mov     eax, [eax+4]
mov     esi, [ebp+var_8]
mov     eax, [eax+20h]
push    0
push    ecx
push    esi
call    sub_1001b6c0
add     esp, 0ch
test    eax, eax
jnz     loc_10062aa2
cmp     [ebp+var_14], eax
jnz     short loc_10062932
mov     edx, [ebp+var_c]
push    eax
mov     eax, [edi+38h]
push    edx
push    esi
call    sub_1001b6c0
add     esp, 0ch
test    eax, eax
jnz     loc_10062aa2
cmp     byte ptr [edi+32h], 0
jnz     loc_10062aa2
mov     al, [edi+34h]
test    al, al
js      short loc_10062948
movsx   eax, al
jmp     short loc_10062950
mov     eax, [ebp+var_4]
call    sub_1001b920
push    eax
mov     eax, esi
call    sub_1001b8a0
add     esp, 4
push    ebx
push    edi
mov     eax, offset aselectcreateta
call    sub_10062500
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_10062aa7
push    ebx
push    edi
mov     eax, offset aselectcreatein
call    sub_10062500
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_10062aa7
push    ebx
push    edi
mov     eax, offset aselectcreateun
call    sub_10062500
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_10062aa7
push    ebx
push    edi
mov     eax, offset aselectinsertin
call    sub_10062500
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_10062aa7
push    ebx
push    edi
mov     eax, offset aselectdeletefr
call    sub_10062500
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_10062aa7
push    ebx
push    edi
mov     eax, offset aselectinsertin_0
call    sub_10062500
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_10062aa7
mov     eax, offset ainsertintovacu
mov     ecx, ebx
call    sub_10062480
mov     esi, eax
test    esi, esi
jnz     loc_10062aa7
xor     ebx, ebx
lea     esp, [esp+0]
movzx   ecx, ds:byte_10076ee4[ebx]
lea     eax, [ebp+var_14]
push    eax
mov     eax, [ebp+var_4]
push    ecx
call    sub_100218e0
movzx   edx, ds:byte_10076ee5[ebx]
add     edx, [ebp+var_14]
movzx   eax, ds:byte_10076ee4[ebx]
push    edx
push    eax
mov     eax, [ebp+var_8]
call    sub_10021950
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     short loc_10062aa7
add     ebx, 2
cmp     ebx, 8
jl      short loc_10062a10
mov     ecx, [ebp+var_4]
mov     ebx, [ebp+var_8]
push    ecx
mov     esi, ebx
call    sub_100242b0
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_10062aa7
mov     eax, ebx
call    sub_1001cd80
mov     esi, eax
test    esi, esi
jnz     short loc_10062aa7
mov     eax, ebx
call    sub_1001b920
mov     esi, [ebp+var_4]
push    eax
mov     eax, esi
call    sub_1001b8a0
mov     ecx, [ebp+var_c]
mov     edx, [ebx+4]
mov     eax, [edx+20h]
add     esp, 4
push    1
push    ecx
push    esi
call    sub_1001b6c0
add     esp, 0ch
mov     esi, eax
jmp     short loc_10062aa7
mov     esi, 7
mov     eax, [ebp+var_1c]
mov     edx, [ebp+var_18]
mov     ecx, [ebp+var_20]
mov     [edi+40h], eax
mov     eax, [ebp+var_4]
push    1
mov     [edi+18h], edx
mov     edx, [ebp+var_24]
push    0ffffffffh
push    eax
or      eax, 0ffffffffh
mov     [edi+44h], ecx
mov     [edi+90h], edx
call    sub_1001b6c0
mov     eax, [ebp+var_10]
add     esp, 0ch
mov     byte ptr [edi+30h], 1
test    eax, eax
jz      short loc_10062af3
mov     ebx, [eax+4]
call    sub_1001b4a0
mov     eax, [ebp+var_10]
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+0ch], ecx
mov     eax, edi
call    sub_1003fad0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [edi+0ch]
mov     [ebp+var_4], 0
test    eax, eax
jz      short loc_10062b32
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+src]
mov     ebx, eax
test    eax, eax
jz      short loc_10062b4e
cmp     byte ptr [eax], 0
jz      short loc_10062b46
inc     ebx
cmp     byte ptr [ebx], 0
jnz     short loc_10062b40
sub     ebx, eax
and     ebx, 3fffffffh
lea     ecx, [edi+11ch]
push    eax
push    ecx
mov     esi, ebx
call    sub_1000cf50
add     esp, 8
test    eax, eax
jz      short loc_10062b86
push    offset ac0d89d4a975292
push    188edh
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     [ebp+var_4], 15h
jmp     short loc_10062be1
lea     ecx, [ebx+11h]
mov     esi, edi
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10062be1
mov     ecx, [ebp+src]
lea     eax, [ebx+1]
push    eax
push    ecx
lea     edi, [esi+10h]
push    edi
call    memcpy
mov     eax, [ebp+arg_c]
mov     edx, [ebp+arg_8]
mov     ecx, [ebp+arg_10]
mov     [esi+8], eax
mov     eax, [ebp+arg_0]
push    esi
push    ebx
push    edi
add     eax, 11ch
mov     [esi+4], edi
mov     [esi], edx
mov     [esi+0ch], ecx
call    sub_1000cfc0
add     esp, 18h
test    eax, eax
jz      short loc_10062bde
mov     ecx, [ebp+arg_0]
mov     byte ptr [ecx+32h], 1
call    sub_10009810
mov     edi, [ebp+arg_0]
cmp     byte ptr [edi+32h], 0
mov     eax, [ebp+var_4]
jnz     short loc_10062bf1
cmp     eax, 0c0ah
jnz     short loc_10062c08
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     esi, [edi+2ch]
and     esi, eax
jz      short loc_10062c1f
mov     eax, [ebp+arg_10]
test    eax, eax
jz      short loc_10062c1f
mov     edx, [ebp+arg_c]
push    edx
call    eax
add     esp, 4
mov     edi, [edi+0ch]
test    edi, edi
jz      short loc_10062c30
push    edi
call    dword_10080284
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+src]
push    0
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    eax
call    sub_10062b10
add     esp, 14h
pop     ebp
retn
push    ebp
mov     ebp, esp
pop     ebp
jmp     sub_10062b10
dec     dword ptr [esi+0ch]
push    edi
mov     edi, [esi]
jnz     short loc_10062c94
mov     eax, [esi+8]
test    eax, eax
jz      short loc_10062c8a
mov     ecx, [eax]
mov     edx, [ecx+10h]
push    eax
call    edx
add     esp, 4
mov     ecx, edi
mov     eax, esi
pop     edi
jmp     sub_10009810
pop     edi
retn
push    ebp
mov     ebp, esp
mov     ecx, [edi+34h]
xor     eax, eax
mov     [edi+34h], eax
cmp     ecx, eax
jz      short loc_10062ce0
push    ebx
push    esi
mov     edx, [ecx]
mov     esi, [ecx+18h]
cmp     edx, [ebp+arg_0]
jnz     short loc_10062cc9
mov     [edi+34h], ecx
mov     eax, ecx
mov     dword ptr [ecx+18h], 0
jmp     short loc_10062cd8
mov     ebx, [edx+134h]
mov     [ecx+18h], ebx
mov     [edx+134h], ecx
mov     ecx, esi
test    esi, esi
jnz     short loc_10062cb1
pop     esi
pop     ebx
pop     ebp
retn
push    esi
mov     esi, [eax+134h]
mov     dword ptr [eax+134h], 0
test    esi, esi
jz      short loc_10062d4d
mov     eax, [eax+4]
test    eax, eax
jz      short loc_10062d1a
mov     cl, 1
mov     edi, edi
mov     [eax+5fh], cl
mov     eax, [eax+3ch]
test    eax, eax
jnz     short loc_10062d10
push    ebx
push    edi
lea     esp, [esp+0]
dec     dword ptr [esi+0ch]
mov     edi, [esi+18h]
mov     ebx, [esi]
jnz     short loc_10062d45
mov     eax, [esi+8]
test    eax, eax
jz      short loc_10062d3c
mov     ecx, [eax]
mov     edx, [ecx+10h]
push    eax
call    edx
add     esp, 4
mov     eax, esi
mov     ecx, ebx
call    sub_10009810
mov     esi, edi
test    edi, edi
jnz     short loc_10062d20
pop     edi
pop     ebx
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [esi+3ch]
push    edi
mov     edi, [esi+38h]
lea     eax, [edi+1]
mov     [esi+38h], eax
lea     eax, ds:4[eax*4]
push    eax
mov     eax, [ebp+arg_0]
call    sub_10009ac0
xor     ebx, ebx
add     esp, 4
mov     [ebp+var_4], eax
cmp     eax, ebx
jnz     short loc_10062dc1
cmp     edi, ebx
jle     short loc_10062d97
mov     eax, [esi+3ch]
mov     eax, [eax+ebx*4]
mov     ecx, [ebp+arg_0]
call    sub_10009810
inc     ebx
cmp     ebx, edi
jl      short loc_10062d84
mov     edi, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+3ch]
mov     ecx, edi
call    sub_10009810
mov     ecx, [ebp+var_4]
mov     dword ptr [esi+38h], 0
mov     [esi+3ch], ecx
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
mov     [eax+edi*4+4], ebx
mov     [eax+edi*4], edx
pop     edi
mov     [esi+3ch], eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     ecx, [ebp+arg_4]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    eax
mov     eax, [ebp+arg_8]
push    1
push    0
push    0
push    ecx
mov     ecx, esi
call    sub_100400d0
mov     eax, [esi+1fch]
add     esp, 14h
mov     [ebp+var_4], eax
test    eax, eax
jz      loc_10062f94
mov     edi, [esi]
mov     esi, [eax+44h]
mov     [ebp+var_10], edi
mov     ebx, 0fff0bdc0h
test    esi, esi
jz      short loc_10062e41
mov     edx, [edi+14h]
xor     ebx, ebx
test    edx, edx
jle     short loc_10062e41
mov     ecx, [edi+10h]
add     ecx, 0ch
cmp     [ecx], esi
jz      short loc_10062e41
inc     ebx
add     ecx, 10h
cmp     ebx, edx
jl      short loc_10062e35
mov     ecx, [ebp+arg_c]
or      byte ptr [eax+22h], 10h
mov     dword ptr [eax+38h], 0
test    ecx, ecx
jz      short loc_10062ea7
mov     eax, [ecx+4]
mov     ecx, [ecx]
mov     [ebp+size], eax
mov     [ebp+src], ecx
test    ecx, ecx
jnz     short loc_10062e73
xor     esi, esi
mov     edi, esi
call    sub_1000bbf0
mov     edi, [ebp+var_10]
mov     eax, [ebp+var_4]
jmp     short loc_10062ea9
lea     ecx, [eax+1]
mov     esi, edi
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10062e98
mov     edi, [ebp+size]
mov     edx, [ebp+src]
push    edi
push    edx
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+edi], 0
mov     edi, esi
call    sub_1000bbf0
mov     edi, [ebp+var_10]
mov     eax, [ebp+var_4]
jmp     short loc_10062ea9
xor     esi, esi
push    esi
push    edi
mov     esi, eax
call    sub_10062d50
mov     eax, [edi+10h]
shl     ebx, 4
mov     [ebp+src], ebx
mov     ebx, [ebx+eax]
add     esp, 8
test    ebx, ebx
jnz     short loc_10062ec9
xor     esi, esi
jmp     short loc_10062efe
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_10062ed6
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10062ed0
sub     eax, ebx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     esi, edi
mov     [ebp+var_10], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10062efe
mov     ecx, [ebp+var_10]
push    ecx
push    ebx
push    esi
call    memcpy
add     esp, 0ch
push    esi
mov     esi, [ebp+var_4]
push    edi
call    sub_10062d50
mov     ebx, [esi]
add     esp, 8
test    ebx, ebx
jnz     short loc_10062f15
xor     esi, esi
jmp     short loc_10062f4e
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_10062f26
lea     esp, [esp+0]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10062f20
sub     eax, ebx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     esi, edi
mov     [ebp+var_10], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10062f4e
mov     edx, [ebp+var_10]
push    edx
push    ebx
push    esi
call    memcpy
add     esp, 0ch
push    esi
mov     esi, [ebp+var_4]
push    edi
call    sub_10062d50
mov     eax, [ebp+arg_c]
mov     ecx, [eax+4]
mov     edx, [ebp+arg_4]
sub     ecx, [edx]
add     esp, 8
add     ecx, [eax]
mov     eax, [ebp+arg_0]
mov     [eax+20ch], ecx
mov     ecx, [esi+3ch]
test    ecx, ecx
jz      short loc_10062f94
mov     edx, [eax]
mov     edx, [edx+10h]
mov     edi, [ebp+src]
mov     edx, [edx+edi]
mov     ecx, [ecx]
push    edx
mov     edx, [esi]
push    ecx
push    edx
push    1dh
call    sub_1003ee70
add     esp, 10h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     edi, eax
mov     ebx, [edi+1fch]
mov     esi, [edi]
mov     [ebp+var_4], esi
test    ebx, ebx
jz      loc_10063184
mov     eax, [edi+218h]
mov     [ebp+src], eax
test    eax, eax
jz      short loc_10063014
test    ebx, ebx
jz      short loc_10063014
mov     eax, [edi+21ch]
lea     ecx, [eax+1]
mov     [ebp+size], eax
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10062ffe
mov     eax, [ebp+size]
mov     ecx, [ebp+src]
push    eax
push    ecx
push    esi
call    memcpy
mov     edx, [ebp+size]
add     esp, 0ch
mov     byte ptr [esi+edx], 0
mov     eax, [ebp+var_4]
push    esi
mov     esi, [edi+1fch]
push    eax
call    sub_10062d50
mov     esi, [ebp+var_4]
add     esp, 8
mov     dword ptr [edi+218h], 0
cmp     dword ptr [ebx+38h], 1
jl      loc_10063184
cmp     byte ptr [esi+79h], 0
jnz     loc_1006313b
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_1006304a
mov     ecx, [eax+4]
sub     ecx, [edi+208h]
add     ecx, [eax]
mov     [edi+20ch], ecx
lea     edx, [edi+208h]
push    edx
push    offset acreatevirtualt
push    esi
call    sub_1000ae80
mov     esi, [ebx+44h]
mov     ecx, [ebp+var_4]
add     esp, 0ch
mov     [ebp+size], eax
call    sub_10053b80
mov     esi, eax
mov     [ebp+var_10], esi
mov     ecx, offset asqlitetempmast
cmp     esi, 1
jz      short loc_10063081
mov     ecx, offset asqlitemaster
mov     edx, [edi+190h]
mov     eax, [ebx]
push    edx
mov     edx, [ebp+size]
push    edx
push    eax
push    eax
push    ecx
mov     ecx, [ebp+var_4]
mov     edx, [ecx+10h]
mov     eax, esi
add     eax, eax
mov     eax, [edx+eax*8]
push    eax
push    offset aupdateqssettyp_0
push    edi
call    sub_1003f410
mov     eax, [ebp+size]
mov     ecx, [ebp+var_4]
call    sub_10009810
push    edi
call    sub_10056c90
add     esp, 24h
push    esi
mov     esi, edi
mov     [ebp+src], eax
call    sub_10040c40
mov     esi, [ebp+src]
add     esp, 4
push    0
push    0
push    81h
mov     eax, esi
call    sub_10025990
mov     ecx, [ebx]
mov     edx, [ebp+var_4]
add     esp, 0ch
push    ecx
push    offset anameqandtypeta
push    edx
call    sub_1000ae80
mov     edi, [ebp+var_10]
add     esp, 0ch
push    eax
push    edi
call    sub_10025a60
mov     ebx, [ebx]
add     esp, 8
mov     eax, ebx
test    ebx, ebx
jz      short loc_1006311d
cmp     byte ptr [ebx], 0
jz      short loc_10063116
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10063110
sub     eax, ebx
and     eax, 3fffffffh
inc     eax
push    eax
push    ebx
push    0
push    0
push    edi
push    85h
mov     eax, esi
call    sub_100259f0
add     esp, 18h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebx]
mov     edx, [ebx+44h]
mov     eax, ecx
test    ecx, ecx
jz      short loc_1006315d
cmp     byte ptr [ecx], 0
jz      short loc_10063156
jmp     short loc_10063150
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10063150
sub     eax, ecx
and     eax, 3fffffffh
push    ebx
push    eax
push    ecx
lea     eax, [edx+8]
call    sub_1000cfc0
add     esp, 0ch
test    eax, eax
jz      short loc_1006317a
mov     byte ptr [esi+32h], 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dword ptr [edi+1fch], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [edi+218h]
xor     ecx, ecx
push    ebx
push    esi
mov     [ebp+src], eax
cmp     eax, ecx
jz      short loc_10063201
cmp     [edi+1fch], ecx
jz      short loc_10063201
mov     ebx, [edi+21ch]
mov     esi, [edi]
lea     ecx, [ebx+1]
mov     [ebp+var_8], esi
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_100631da
mov     eax, [ebp+src]
push    ebx
push    eax
push    esi
call    memcpy
add     esp, 0ch
mov     byte ptr [esi+ebx], 0
mov     ecx, [ebp+var_8]
push    esi
mov     esi, [edi+1fch]
push    ecx
call    sub_10062d50
add     esp, 8
xor     eax, eax
mov     [edi+218h], eax
mov     [edi+21ch], eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     esi
mov     [edi+21ch], ecx
mov     [edi+218h], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ecx+218h]
test    edx, edx
jnz     short loc_1006323c
mov     edx, [eax]
mov     [ecx+218h], edx
mov     eax, [eax+4]
mov     [ecx+21ch], eax
retn
push    esi
mov     esi, [eax+4]
sub     esi, edx
add     esi, [eax]
mov     [ecx+21ch], esi
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 30h
push    ebx
mov     ebx, [ebp+arg_4]
mov     edx, [ebx]
mov     eax, [ebx+3ch]
mov     ecx, [ebx+38h]
push    esi
push    edi
mov     edi, [ebp+arg_0]
push    edx
push    offset as
push    edi
mov     [ebp+var_20], eax
mov     [ebp+var_1c], ecx
mov     [ebp+var_10], 0
call    sub_1000ae80
add     esp, 0ch
mov     [ebp+var_18], eax
test    eax, eax
jz      loc_10063312
mov     ecx, 1ch
mov     esi, edi
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10063308
mov     ecx, [ebp+arg_8]
xor     eax, eax
mov     [esi], eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
mov     [esi+10h], eax
mov     [esi+14h], eax
mov     [esi+18h], eax
mov     [esi], edi
mov     [esi+4], ecx
mov     eax, [edi+12ch]
lea     edx, [ebp+var_2c]
mov     [edi+12ch], edx
mov     [ebp+var_14], eax
lea     edx, [ebp+var_10]
push    edx
mov     edx, [ebp+var_1c]
lea     eax, [esi+8]
push    eax
mov     eax, [ebp+var_20]
push    eax
mov     eax, [ecx+8]
push    edx
push    eax
push    edi
mov     [ebp+var_28], ebx
mov     [ebp+var_2c], esi
call    [ebp+arg_c]
mov     ecx, [ebp+var_14]
add     esp, 18h
mov     [ebp+var_20], eax
mov     [edi+12ch], ecx
cmp     eax, 7
jnz     short loc_1006331e
mov     byte ptr [edi+32h], 1
jmp     short loc_10063324
mov     eax, [ebp+var_18]
mov     ecx, edi
call    sub_10009810
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     ecx, ecx
cmp     eax, ecx
jz      short loc_1006339c
mov     eax, [ebp+var_10]
test    eax, eax
jnz     short loc_1006335f
mov     edx, [ebp+var_18]
push    edx
push    offset avtableconstruc
push    edi
call    sub_1000ae80
mov     ecx, [ebp+arg_10]
mov     [ecx], eax
add     esp, 0ch
mov     eax, esi
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+var_18]
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+var_20]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    eax
push    offset as
push    edi
call    sub_1000ae80
mov     edx, [ebp+arg_10]
mov     [edx], eax
mov     eax, [ebp+var_10]
add     esp, 0ch
push    eax
call    sub_10009770
add     esp, 4
mov     eax, esi
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+var_18]
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+var_20]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+8]
cmp     eax, ecx
jz      loc_1006352e
mov     edx, [ebp+arg_8]
mov     edx, [edx]
mov     [eax], edx
mov     dword ptr [esi+0ch], 1
cmp     [ebp+var_28], ecx
jz      short loc_100633f0
mov     eax, [ebx]
push    eax
push    offset avtableconstruc_0
push    edi
call    sub_1000ae80
mov     ecx, [ebp+arg_10]
add     esp, 0ch
mov     [ecx], eax
call    sub_10062c70
mov     eax, [ebp+var_18]
mov     ecx, edi
mov     [ebp+var_20], 1
call    sub_10009810
mov     eax, [ebp+var_20]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebx+34h]
mov     [esi+18h], edx
mov     [ebx+34h], esi
mov     [ebp+var_1c], ecx
cmp     [ebx+8], ecx
jle     loc_1006352e
mov     [ebp+var_c], ecx
jmp     short loc_10063412
mov     ebx, ecx
mov     eax, [ebx+0ch]
mov     ecx, [ebp+var_c]
mov     edi, [ecx+eax+0ch]
xor     ebx, ebx
mov     [ebp+var_8], edi
test    edi, edi
jz      loc_10063514
mov     ecx, edi
call    sub_1000ba20
push    6
mov     esi, eax
push    edi
push    offset ahidden
mov     [ebp+var_14], esi
call    sub_1000bcf0
add     esp, 0ch
test    eax, eax
jnz     short loc_10063454
mov     al, [edi+6]
test    al, al
jz      short loc_100634cc
cmp     al, 20h
jz      short loc_100634cc
xor     ebx, ebx
test    esi, esi
jle     loc_10063514
jmp     short loc_10063463
mov     edi, [ebp+var_8]
mov     eax, 7
mov     ecx, offset ahidden_0
lea     esi, [ebx+edi]
mov     dl, [ecx]
dec     eax
test    dl, dl
jz      short loc_10063492
movzx   edi, byte ptr [esi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[edi]
jnz     short loc_10063492
inc     ecx
inc     esi
test    eax, eax
jg      short loc_10063470
dec     eax
test    eax, eax
js      short loc_100634ae
movzx   eax, byte ptr [esi]
movzx   edx, ds:byte_10076030[eax]
movzx   eax, byte ptr [ecx]
movzx   ecx, ds:byte_10076030[eax]
sub     ecx, edx
jnz     short loc_100634bd
mov     edx, [ebp+var_8]
mov     al, [ebx+edx+7]
test    al, al
jz      short loc_100634c5
cmp     al, 20h
jz      short loc_100634c5
inc     ebx
cmp     ebx, [ebp+var_14]
jl      short loc_10063460
jmp     short loc_10063514
mov     edi, [ebp+var_8]
mov     esi, [ebp+var_14]
inc     ebx
cmp     ebx, esi
jge     short loc_10063514
xor     ecx, ecx
add     edi, ebx
cmp     [edi+6], cl
setnz   cl
lea     eax, [ecx+ebx+6]
cmp     eax, esi
jg      short loc_100634f9
lea     esi, [ecx+6]
sub     esi, [ebp+var_8]
mov     eax, edi
mov     dl, [eax+ecx+6]
mov     [eax], dl
inc     eax
lea     edx, [esi+eax]
cmp     edx, [ebp+var_14]
jle     short loc_100634ea
cmp     byte ptr [edi], 0
jnz     short loc_10063506
test    ebx, ebx
jle     short loc_10063506
mov     byte ptr [edi-1], 0
mov     eax, [ebp+arg_4]
mov     ecx, [eax+0ch]
mov     edx, [ebp+var_c]
mov     byte ptr [edx+ecx+17h], 1
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+arg_4]
add     [ebp+var_c], 18h
inc     eax
mov     [ebp+var_1c], eax
cmp     eax, [ecx+8]
jl      loc_10063410
mov     edi, [ebp+arg_0]
mov     eax, [ebp+var_18]
mov     ecx, edi
call    sub_10009810
mov     eax, [ebp+var_20]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_4]
test    byte ptr [ecx+22h], 10h
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [eax]
push    esi
push    edi
jz      loc_1006361f
mov     eax, [ecx+34h]
test    eax, eax
jz      short loc_1006357f
cmp     [eax], ebx
jz      loc_1006361f
mov     eax, [eax+18h]
test    eax, eax
jnz     short loc_10063570
mov     ecx, [ecx+3ch]
mov     edi, [ecx]
mov     eax, edi
test    edi, edi
jz      short loc_1006359d
cmp     byte ptr [edi], 0
jz      short loc_10063596
nop
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10063590
sub     eax, edi
and     eax, 3fffffffh
lea     edx, [ebx+11ch]
push    edi
push    edx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
test    eax, eax
jnz     short loc_100635d3
mov     eax, [ebp+arg_0]
push    edi
push    offset anosuchmodules
push    eax
call    sub_1000bb30
mov     esi, 1
add     esp, 0ch
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [eax]
lea     ecx, [ebp+var_4]
push    ecx
mov     ecx, [edx+8]
mov     edx, [ebp+arg_4]
push    ecx
push    eax
push    edx
push    ebx
mov     [ebp+var_4], 0
call    sub_10063250
mov     edi, [ebp+var_4]
mov     esi, eax
add     esp, 14h
test    esi, esi
jz      short loc_1006360d
mov     eax, [ebp+arg_0]
push    edi
push    offset as
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     eax, edi
mov     ecx, ebx
call    sub_10009810
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ecx
mov     ecx, [esi+118h]
push    ebx
mov     eax, ecx
push    edi
cdq
mov     edi, 5
idiv    edi
test    edx, edx
jnz     short loc_10063689
mov     ebx, [esi+130h]
lea     eax, ds:14h[ecx*4]
push    eax
mov     eax, esi
call    sub_10009ac0
add     esp, 4
test    eax, eax
jnz     short loc_1006366a
lea     eax, [edi+2]
pop     edi
pop     ebx
pop     ecx
retn
mov     edx, [esi+118h]
xor     ecx, ecx
lea     edx, [eax+edx*4]
mov     [edx], ecx
mov     [edx+4], ecx
mov     [edx+8], ecx
mov     [edx+0ch], ecx
mov     [edx+10h], ecx
mov     [esi+130h], eax
pop     edi
xor     eax, eax
pop     ebx
pop     ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     ecx, [edi+10h]
push    ebx
add     eax, eax
mov     edx, [ecx+eax*8]
mov     eax, [ebp+arg_0]
push    esi
push    edx
push    eax
push    edi
call    sub_1003f510
mov     ecx, [eax+3ch]
mov     ebx, [ecx]
add     esp, 0ch
mov     [ebp+var_4], eax
mov     eax, ebx
test    ebx, ebx
jz      short loc_100636ce
cmp     byte ptr [ebx], 0
jz      short loc_100636c7
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100636c1
sub     eax, ebx
and     eax, 3fffffffh
lea     edx, [edi+11ch]
push    ebx
push    edx
mov     esi, eax
call    sub_1000cf50
add     esp, 8
test    eax, eax
jnz     short loc_10063703
push    ebx
push    offset anosuchmodules
push    edi
call    sub_1000ae80
mov     ecx, [ebp+arg_4]
mov     [ecx], eax
add     esp, 0ch
mov     eax, 1
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
mov     ecx, [eax]
mov     ebx, [ebp+var_4]
push    edx
mov     edx, [ecx+4]
push    edx
push    eax
push    ebx
push    edi
call    sub_10063250
add     esp, 14h
test    eax, eax
jnz     short loc_10063778
mov     ecx, [ebx+34h]
test    ecx, ecx
jz      short loc_10063778
cmp     [ecx], edi
jz      short loc_10063737
mov     ecx, [ecx+18h]
test    ecx, ecx
jnz     short loc_10063726
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, edi
call    sub_10063630
test    eax, eax
jnz     short loc_10063778
mov     ecx, [ebx+34h]
test    ecx, ecx
jz      short loc_1006375b
lea     esp, [esp+0]
cmp     [ecx], edi
jz      short loc_1006375b
mov     ecx, [ecx+18h]
test    ecx, ecx
jnz     short loc_10063750
mov     edx, [edi+118h]
mov     esi, [edi+130h]
mov     [esi+edx*4], ecx
mov     edx, 1
add     [edi+118h], edx
add     [ecx+0ch], edx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
xor     edi, edi
mov     [ebp+var_8], edi
mov     [ebp+var_4], edi
cmp     eax, edi
jz      short loc_100637a5
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [esi+12ch]
cmp     eax, edi
jz      loc_10063900
mov     ebx, [eax+4]
cmp     ebx, edi
jz      loc_10063900
mov     ecx, 22ch
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      loc_10063858
push    22ch
push    0
push    edi
call    memset
fld1
mov     ecx, [ebp+arg_4]
fstp    qword ptr [edi+1b8h]
add     esp, 0ch
lea     eax, [ebp+var_4]
push    eax
push    ecx
push    edi
mov     byte ptr [edi+1d5h], 1
mov     [edi], esi
call    sub_1006e390
add     esp, 0ch
test    eax, eax
jnz     short loc_1006385f
mov     eax, [edi+1fch]
xor     ecx, ecx
cmp     eax, ecx
jz      short loc_1006385f
cmp     [esi+32h], cl
jnz     short loc_1006385f
cmp     [eax+1ch], ecx
jnz     short loc_1006385f
test    byte ptr [eax+22h], 10h
jnz     short loc_1006385f
cmp     [ebx+0ch], ecx
jnz     short loc_1006384d
mov     edx, [eax+0ch]
mov     [ebx+0ch], edx
mov     eax, [edi+1fch]
mov     edx, [eax+8]
mov     [ebx+8], edx
mov     eax, [edi+1fch]
mov     [eax+8], ecx
mov     edx, [edi+1fch]
mov     [edx+0ch], ecx
mov     eax, [esi+12ch]
mov     [eax+4], ecx
jmp     short loc_1006388e
mov     eax, 7
jmp     short loc_100638bd
mov     ebx, [ebp+var_4]
mov     ecx, ebx
neg     ecx
sbb     ecx, ecx
push    ebx
and     ecx, offset as
push    ecx
push    1
mov     eax, esi
call    sub_1000ba40
add     esp, 0ch
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
mov     [ebp+var_8], 1
xor     ecx, ecx
mov     eax, [edi+8]
mov     byte ptr [edi+1d5h], 0
cmp     eax, ecx
jz      short loc_100638a1
call    sub_10027e90
mov     edx, [edi+1fch]
push    edx
push    esi
call    sub_1003fba0
add     esp, 8
mov     eax, edi
mov     ecx, esi
call    sub_10009810
mov     eax, [ebp+var_8]
cmp     byte ptr [esi+32h], 0
jnz     short loc_100638ca
cmp     eax, 0c0ah
jnz     short loc_100638e1
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
test    esi, esi
jz      short loc_100638f7
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    edi
push    15h
mov     eax, esi
call    sub_1000ba40
mov     esi, [esi+0ch]
add     esp, 8
cmp     esi, edi
jz      short loc_1006391e
push    esi
call    dword_10080284
add     esp, 4
push    offset ac0d89d4a975292
push    18b7bh
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
pop     edi
pop     esi
mov     eax, 15h
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [esi+10h]
add     eax, eax
mov     edx, [ecx+eax*8]
mov     eax, [ebp+arg_0]
push    edi
push    edx
push    eax
push    esi
xor     ebx, ebx
call    sub_1003f510
mov     edi, eax
add     esp, 0ch
test    edi, edi
jz      short loc_100639c4
cmp     [edi+34h], ebx
jz      short loc_100639c4
push    esi
call    sub_10062ca0
mov     esi, eax
mov     ecx, [esi+4]
mov     edx, [ecx]
mov     eax, [esi+8]
mov     ecx, [edx+14h]
push    eax
call    ecx
mov     ebx, eax
xor     ecx, ecx
add     esp, 8
cmp     ebx, ecx
jnz     short loc_100639c6
mov     [esi+8], ecx
mov     [edi+34h], ecx
dec     dword ptr [esi+0ch]
mov     edi, [esi]
jnz     short loc_100639c6
mov     eax, [esi+8]
cmp     eax, ecx
jz      short loc_100639bb
mov     edx, [eax]
push    eax
mov     eax, [edx+10h]
call    eax
add     esp, 4
mov     eax, esi
mov     ecx, edi
call    sub_10009810
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
cmp     dword ptr [edi+130h], 0
jz      loc_10063a65
push    ebx
xor     ebx, ebx
cmp     [edi+118h], ebx
jle     short loc_10063a49
push    esi
lea     ecx, [ecx+0]
mov     eax, [edi+130h]
mov     esi, [eax+ebx*4]
mov     eax, [esi+8]
test    eax, eax
jz      short loc_10063a12
mov     ecx, [eax]
mov     edx, [ebp+arg_0]
mov     ecx, [edx+ecx]
test    ecx, ecx
jz      short loc_10063a12
push    eax
call    ecx
add     esp, 4
dec     dword ptr [esi+0ch]
mov     eax, [esi]
mov     dword ptr [esi+14h], 0
mov     [ebp+var_4], eax
jnz     short loc_10063a3f
mov     eax, [esi+8]
test    eax, eax
jz      short loc_10063a35
mov     ecx, [eax]
mov     edx, [ecx+10h]
push    eax
call    edx
add     esp, 4
mov     ecx, [ebp+var_4]
mov     eax, esi
call    sub_10009810
inc     ebx
cmp     ebx, [edi+118h]
jl      short loc_100639f0
pop     esi
mov     eax, [edi+130h]
mov     ecx, edi
call    sub_10009810
xor     eax, eax
mov     [edi+118h], eax
mov     [edi+130h], eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
xor     eax, eax
push    edi
mov     edi, [esi+130h]
xor     edx, edx
mov     [ebp+var_10], edi
mov     [esi+130h], eax
mov     [ebp+var_4], edx
cmp     edx, [esi+118h]
jge     loc_10063b36
mov     ecx, [edi+edx*4]
mov     ebx, [ecx+8]
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_10063b2a
mov     ecx, [ebx]
mov     ecx, [ecx+3ch]
test    ecx, ecx
jz      short loc_10063b2a
push    ebx
call    ecx
mov     edx, [ebp+arg_4]
mov     [ebp+var_c], eax
mov     eax, [edx]
add     esp, 4
mov     ecx, esi
call    sub_10009810
mov     edi, [ebx+8]
test    edi, edi
jnz     short loc_10063ad4
xor     eax, eax
jmp     short loc_10063b10
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_10063ae6
jmp     short loc_10063ae0
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10063ae0
sub     eax, edi
and     eax, 3fffffffh
lea     ebx, [eax+1]
mov     ecx, ebx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10063b08
push    ebx
push    edi
push    esi
call    memcpy
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     eax, esi
mov     esi, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     [ecx], eax
mov     edx, [ebx+8]
push    edx
call    sub_10009770
mov     eax, [ebp+var_c]
mov     edx, [ebp+var_4]
mov     edi, [ebp+var_10]
add     esp, 4
inc     edx
mov     [ebp+var_4], edx
test    eax, eax
jz      loc_10063a92
mov     [esi+130h], edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [esi+118h]
xor     eax, eax
test    ebx, ebx
jle     short loc_10063b73
cmp     [esi+130h], eax
jnz     short loc_10063b73
mov     eax, 6
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    edi, edi
jnz     short loc_10063b7e
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edi+8]
mov     ecx, [ecx]
mov     [ebp+var_4], ecx
cmp     [ecx+38h], eax
jz      loc_10063c2f
xor     eax, eax
test    ebx, ebx
jle     short loc_10063bac
mov     ecx, [esi+130h]
jmp     short loc_10063ba0
cmp     [ecx], edi
jz      short loc_10063b77
inc     eax
add     ecx, 4
cmp     eax, ebx
jl      short loc_10063ba0
mov     eax, ebx
cdq
mov     ecx, 5
idiv    ecx
test    edx, edx
jnz     short loc_10063bff
lea     eax, ds:14h[ebx*4]
mov     ebx, [esi+130h]
push    eax
mov     eax, esi
call    sub_10009ac0
add     esp, 4
test    eax, eax
jnz     short loc_10063be0
mov     eax, 7
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [esi+118h]
xor     ecx, ecx
lea     edx, [eax+edx*4]
mov     [edx], ecx
mov     [edx+4], ecx
mov     [edx+8], ecx
mov     [edx+0ch], ecx
mov     [edx+10h], ecx
mov     [esi+130h], eax
mov     eax, [edi+8]
mov     ecx, [ebp+var_4]
mov     edx, [ecx+38h]
push    eax
call    edx
add     esp, 4
test    eax, eax
jnz     short loc_10063c2f
mov     ecx, [esi+118h]
mov     edx, [esi+130h]
mov     [edx+ecx*4], edi
mov     ecx, 1
add     [esi+118h], ecx
add     [edi+0ch], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
xor     eax, eax
cmp     [ecx+130h], eax
jz      short loc_10063cc1
push    ebx
push    esi
push    edi
xor     ebx, ebx
jmp     short loc_10063c63
jmp     short loc_10063c60
mov     ecx, [ebp+arg_0]
cmp     ebx, [ecx+118h]
jge     short loc_10063cbe
mov     ecx, [ecx+130h]
mov     ecx, [ecx+ebx*4]
mov     edi, [ecx+8]
mov     edx, [ecx+4]
mov     edx, [edx]
test    edi, edi
jz      short loc_10063cb9
cmp     dword ptr [edx], 2
jl      short loc_10063cb9
mov     esi, [ebp+arg_4]
sub     esi, 0
jz      short loc_10063c9c
sub     esi, 2
jz      short loc_10063c97
mov     edx, [edx+54h]
jmp     short loc_10063ca6
mov     edx, [edx+58h]
jmp     short loc_10063ca6
mov     esi, [ebp+arg_8]
mov     edx, [edx+50h]
inc     esi
mov     [ecx+14h], esi
test    edx, edx
jz      short loc_10063cb9
mov     esi, [ebp+arg_8]
cmp     [ecx+14h], esi
jle     short loc_10063cb9
push    esi
push    edi
call    edx
add     esp, 8
inc     ebx
test    eax, eax
jz      short loc_10063c60
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
xor     ecx, ecx
push    esi
push    edi
mov     [ebp+var_4], ecx
mov     [ebp+var_8], ecx
cmp     eax, ecx
jnz     short loc_10063cef
mov     eax, [ebp+arg_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [eax], 98h
jnz     short loc_10063ce5
mov     eax, [eax+28h]
cmp     eax, ecx
jz      short loc_10063ce5
test    byte ptr [eax+22h], 10h
jz      short loc_10063ce5
mov     eax, [eax+34h]
cmp     eax, ecx
jz      short loc_10063d16
mov     edx, [eax]
cmp     edx, [ebp+arg_0]
jz      short loc_10063d16
mov     eax, [eax+18h]
cmp     eax, ecx
jnz     short loc_10063d08
mov     esi, [eax+8]
mov     eax, [esi]
mov     [ebp+var_c], eax
cmp     [eax+48h], ecx
jz      short loc_10063ce5
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     ebx, [ecx+18h]
push    eax
call    sub_10009b70
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_10063ce5
cmp     byte ptr [edi], 0
jz      short loc_10063d51
movzx   edx, byte ptr [eax]
mov     cl, ds:byte_10076030[edx]
mov     [eax], cl
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10063d40
mov     ecx, [ebp+arg_8]
lea     edx, [ebp+var_8]
push    edx
mov     edx, [ebp+var_c]
lea     eax, [ebp+var_4]
push    eax
mov     eax, [edx+48h]
push    edi
push    ecx
push    esi
call    eax
mov     ecx, [ebp+arg_0]
mov     ebx, eax
add     esp, 14h
mov     eax, edi
call    sub_10009810
test    ebx, ebx
jz      loc_10063ce5
mov     esi, [ebp+arg_4]
mov     ecx, [esi+18h]
call    sub_1000ba20
lea     edi, [eax+25h]
mov     eax, [ebp+arg_0]
call    sub_10009a20
mov     ebx, eax
test    ebx, ebx
jnz     short loc_10063da3
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, 9
mov     edi, ebx
rep movsd
mov     ecx, [ebp+arg_4]
lea     edx, [ebx+24h]
mov     [ebx+18h], edx
mov     ecx, [ecx+18h]
call    sub_1000ba20
inc     eax
push    eax
push    ecx
push    edx
call    memcpy
mov     edx, [ebp+var_4]
add     esp, 0ch
mov     [ebx+0ch], edx
mov     eax, [ebp+var_8]
or      byte ptr [ebx+3], 4
pop     edi
mov     [ebx+4], eax
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, eax
mov     eax, [esi+1b0h]
push    edi
test    eax, eax
jz      short loc_10063e04
mov     esi, eax
mov     edx, [esi+1d8h]
xor     eax, eax
test    edx, edx
jle     short loc_10063e25
mov     ecx, [esi+220h]
mov     edi, [ebp+arg_0]
cmp     edi, [ecx]
jz      short loc_10063e6c
inc     eax
add     ecx, 4
cmp     eax, edx
jl      short loc_10063e16
mov     ebx, [esi+220h]
lea     edi, ds:4[edx*4]
call    sub_1006edd0
test    eax, eax
jnz     short loc_10063e66
push    edi
push    ebx
call    sub_10009890
add     esp, 8
test    eax, eax
jz      short loc_10063e66
mov     ecx, [esi+1d8h]
mov     edx, [ebp+arg_0]
mov     [esi+220h], eax
mov     [eax+ecx*4], edx
inc     dword ptr [esi+1d8h]
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [esi]
mov     byte ptr [eax+32h], 1
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
movzx   ecx, byte ptr [eax+36h]
movzx   eax, ds:byte_10076eeb[ecx]
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
xor     edi, edi
test    eax, eax
jz      short loc_10063ebb
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
dec     eax
jz      short loc_10063f03
push    offset ac0d89d4a975292
push    18cfbh
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     edi, 15h
push    0
push    edi
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10063efd
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
mov     eax, [esi+12ch]
test    eax, eax
jnz     short loc_10063f19
push    offset ac0d89d4a975292
push    18cf3h
jmp     short loc_10063ecb
mov     eax, [eax]
mov     cl, [ebp+arg_8]
mov     [eax+10h], cl
jmp     short loc_10063eec
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
mov     eax, [ecx]
mov     edx, [eax]
push    esi
mov     esi, [ecx+20h]
push    edi
mov     edi, [ecx+18h]
dec     edi
mov     [ebp+var_4], edx
js      short loc_10063f90
push    ebx
lea     ebx, [ebx+0]
test    byte ptr [esi+12h], 1
jz      short loc_10063f65
mov     eax, [esi]
mov     ecx, [ebp+var_4]
push    eax
push    ecx
call    sub_10036430
add     esp, 8
mov     al, [esi+12h]
test    al, 10h
jnz     short loc_10063f70
test    al, 20h
jz      short loc_10063f86
mov     ebx, [esi+0ch]
push    ebx
call    sub_10063f30
mov     ecx, [ebp+var_4]
add     esp, 4
mov     eax, ebx
call    sub_10009810
add     esi, 28h
dec     edi
jns     short loc_10063f50
mov     ecx, [ebp+arg_0]
pop     ebx
mov     eax, [ecx+20h]
add     ecx, 24h
pop     edi
pop     esi
cmp     eax, ecx
jz      short loc_10063fa4
mov     ecx, [ebp+var_4]
call    sub_10009810
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [edi+1ch]
push    ebx
push    esi
cmp     [edi+18h], eax
jl      loc_1006405a
mov     ecx, [edi]
mov     esi, [ecx]
mov     ebx, [edi+20h]
lea     ecx, [eax+eax*4]
shl     ecx, 4
call    sub_10009a40
mov     [edi+20h], eax
test    eax, eax
jnz     short loc_10063ff6
test    [ebp+arg_4], 1
jz      short loc_10063fed
mov     edx, [ebp+arg_0]
push    edx
push    esi
call    sub_10036430
add     esp, 8
mov     [edi+20h], ebx
xor     eax, eax
pop     esi
pop     ebx
pop     ebp
retn
mov     ecx, [edi+18h]
lea     ecx, [ecx+ecx*4]
add     ecx, ecx
add     ecx, ecx
add     ecx, ecx
push    ecx
push    ebx
push    eax
call    memcpy
lea     edx, [edi+24h]
add     esp, 0ch
cmp     ebx, edx
jz      short loc_1006401d
mov     eax, ebx
mov     ecx, esi
call    sub_10009810
mov     eax, [edi+20h]
test    esi, esi
jz      short loc_10064041
test    eax, eax
jz      short loc_10064041
cmp     eax, [esi+0fch]
jb      short loc_10064041
cmp     eax, [esi+100h]
jnb     short loc_10064041
movzx   ecx, word ptr [esi+0e0h]
jmp     short loc_1006404d
push    eax
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 5
mov     [edi+1ch], edx
mov     eax, [edi+18h]
mov     edx, [edi+20h]
lea     ecx, [eax+eax*4]
lea     ecx, [edx+ecx*8]
lea     edx, [eax+1]
mov     [edi+18h], edx
mov     edx, [ebp+arg_0]
mov     [ecx], edx
mov     dl, [ebp+arg_4]
pop     esi
mov     [ecx+12h], dl
mov     [ecx+14h], edi
mov     dword ptr [ecx+4], 0ffffffffh
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [ebp+arg_0]
mov     [edi+14h], bl
test    esi, esi
jz      short loc_100640d5
movzx   eax, byte ptr [esi]
cmp     eax, ebx
jnz     short loc_100640ca
mov     ecx, [esi+8]
push    ebx
push    ecx
push    edi
call    sub_10064090
mov     esi, [esi+0ch]
add     esp, 0ch
mov     [edi+14h], bl
test    esi, esi
jnz     short loc_100640a6
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    0
push    esi
call    sub_10063fb0
add     esp, 8
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [edx]
xor     ecx, ecx
test    eax, eax
jle     short loc_100640fc
add     edx, 4
jmp     short loc_100640f0
cmp     [edx], esi
jz      short loc_10064101
inc     ecx
add     edx, 4
cmp     ecx, eax
jl      short loc_100640f0
xor     eax, eax
xor     edx, edx
retn
mov     eax, 1
xor     edx, edx
jmp     __allshl
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
test    esi, esi
jnz     short loc_1006412e
xor     eax, eax
xor     edx, edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [esi], 98h
jnz     short loc_1006416e
mov     eax, [ebp+arg_0]
mov     edx, [eax]
xor     ecx, ecx
test    edx, edx
jle     short loc_10064123
mov     esi, [esi+18h]
add     eax, 4
cmp     [eax], esi
jz      short loc_1006415b
inc     ecx
add     eax, 4
cmp     ecx, edx
jl      short loc_10064144
xor     eax, eax
xor     edx, edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
xor     edx, edx
call    __allshl
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+0ch]
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
call    sub_10064110
mov     edi, edx
mov     edx, [esi+8]
mov     ebx, eax
mov     eax, [ebp+arg_0]
push    edx
push    eax
call    sub_10064110
mov     cx, [esi+2]
or      edi, edx
or      ebx, eax
mov     edx, 800h
and     cx, dx
mov     eax, edx
add     esp, 10h
mov     [esp+20h+var_8], ebx
mov     [esp+20h+var_4], edi
cmp     cx, ax
jnz     short loc_100641cd
mov     ecx, [esi+10h]
mov     edx, [ebp+arg_0]
push    ecx
push    edx
call    sub_10064350
or      ebx, eax
add     esp, 8
or      edi, edx
mov     eax, ebx
mov     edx, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [esi+10h]
xor     eax, eax
mov     [esp+20h+var_10], eax
mov     [esp+20h+var_c], eax
cmp     esi, eax
jz      short loc_10064211
xor     edi, edi
cmp     [esi], eax
jle     short loc_1006420d
xor     ebx, ebx
mov     eax, [esi+8]
mov     ecx, [ebx+eax]
mov     edx, [ebp+arg_0]
push    ecx
push    edx
call    sub_10064110
or      [esp+28h+var_10], eax
or      [esp+28h+var_c], edx
inc     edi
add     esp, 8
add     ebx, 14h
cmp     edi, [esi]
jl      short loc_100641e6
mov     ebx, [esp+20h+var_8]
mov     edi, [esp+20h+var_4]
or      ebx, [esp+20h+var_10]
or      edi, [esp+20h+var_c]
mov     eax, ebx
mov     edx, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
mov     ebx, [ebp+arg_4]
xor     eax, eax
xor     edx, edx
push    esi
push    edi
mov     [esp+20h+var_8], eax
mov     [esp+20h+var_4], edx
cmp     ebx, eax
jz      loc_1006433b
mov     [esp+20h+var_c], eax
cmp     [ebx], eax
jle     loc_1006433b
mov     [esp+20h+var_10], eax
mov     eax, [ebx+8]
mov     ecx, [esp+20h+var_10]
mov     esi, [ecx+eax]
test    esi, esi
jnz     short loc_1006427a
xor     edi, edi
xor     eax, eax
jmp     loc_10064315
cmp     byte ptr [esi], 98h
mov     eax, [ebp+arg_0]
jnz     short loc_100642b8
mov     edx, [eax]
xor     ecx, ecx
test    edx, edx
jle     short loc_1006429c
mov     esi, [esi+18h]
add     eax, 4
cmp     [eax], esi
jz      short loc_100642a6
inc     ecx
add     eax, 4
cmp     ecx, edx
jl      short loc_10064290
xor     eax, eax
xor     edx, edx
mov     edi, eax
mov     eax, edx
jmp     short loc_10064315
mov     eax, 1
xor     edx, edx
call    __allshl
mov     edi, eax
mov     eax, edx
jmp     short loc_10064315
mov     edx, [esi+0ch]
push    edx
push    eax
call    sub_10064110
mov     ecx, [esi+8]
mov     ebx, edx
mov     edx, [ebp+arg_0]
push    ecx
push    edx
mov     edi, eax
call    sub_10064110
or      edi, eax
mov     ax, [esi+2]
mov     ecx, 800h
or      ebx, edx
and     ax, cx
mov     edx, ecx
add     esp, 10h
cmp     ax, dx
jnz     short loc_100642fc
mov     eax, [esi+10h]
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
call    sub_10064350
jmp     short loc_10064309
mov     edx, [esi+10h]
mov     eax, [ebp+arg_0]
push    edx
push    eax
call    sub_10064230
or      edi, eax
add     esp, 8
or      ebx, edx
mov     eax, ebx
mov     ebx, [ebp+arg_4]
or      [esp+20h+var_4], eax
mov     eax, [esp+20h+var_c]
or      [esp+20h+var_8], edi
add     [esp+20h+var_10], 14h
inc     eax
mov     [esp+20h+var_c], eax
cmp     eax, [ebx]
jl      loc_10064263
mov     eax, [esp+20h+var_8]
mov     edx, [esp+20h+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 2ch
mov     eax, [ebp+arg_4]
push    ebx
xor     ebx, ebx
xor     ecx, ecx
xor     edx, edx
push    esi
push    edi
mov     [esp+38h+var_20], ecx
mov     [esp+38h+var_1c], edx
cmp     eax, ebx
jz      loc_10064515
mov     esi, [ebp+arg_0]
jmp     short loc_10064385
mov     eax, [ebp+arg_4]
xor     ebx, ebx
mov     edi, [eax]
mov     ecx, [eax+24h]
mov     [esp+38h+var_24], ecx
mov     [esp+38h+var_18], ebx
mov     [esp+38h+var_14], ebx
cmp     edi, ebx
jz      short loc_100643cd
cmp     [edi], ebx
jle     short loc_100643cd
mov     [esp+38h+var_28], ebx
mov     edx, [edi+8]
mov     eax, [esp+38h+var_28]
mov     ecx, [edx+eax]
push    ecx
push    esi
call    sub_10064110
or      [esp+40h+var_18], eax
or      [esp+40h+var_14], edx
add     [esp+40h+var_28], 14h
inc     ebx
add     esp, 8
cmp     ebx, [edi]
jl      short loc_100643a2
mov     eax, [ebp+arg_4]
xor     ebx, ebx
mov     edx, [esp+38h+var_18]
mov     ecx, [esp+38h+var_14]
mov     edi, [eax+2ch]
or      [esp+38h+var_20], edx
or      [esp+38h+var_1c], ecx
mov     [esp+38h+var_10], ebx
mov     [esp+38h+var_c], ebx
cmp     edi, ebx
jz      short loc_1006441f
cmp     [edi], ebx
jle     short loc_1006441f
mov     [esp+38h+var_28], ebx
mov     edx, [edi+8]
mov     eax, [esp+38h+var_28]
mov     ecx, [eax+edx]
push    ecx
push    esi
call    sub_10064110
or      [esp+40h+var_10], eax
or      [esp+40h+var_c], edx
add     [esp+40h+var_28], 14h
inc     ebx
add     esp, 8
cmp     ebx, [edi]
jl      short loc_100643f4
mov     eax, [ebp+arg_4]
xor     ebx, ebx
mov     edx, [esp+38h+var_10]
mov     ecx, [esp+38h+var_c]
mov     edi, [eax+34h]
or      [esp+38h+var_20], edx
or      [esp+38h+var_1c], ecx
mov     [esp+38h+var_8], ebx
mov     [esp+38h+var_4], ebx
cmp     edi, ebx
jz      short loc_1006446f
cmp     [edi], ebx
jle     short loc_1006446f
mov     [esp+38h+var_28], ebx
mov     edx, [edi+8]
mov     eax, [esp+38h+var_28]
mov     ecx, [edx+eax]
push    ecx
push    esi
call    sub_10064110
or      [esp+40h+var_8], eax
or      [esp+40h+var_4], edx
add     [esp+40h+var_28], 14h
inc     ebx
add     esp, 8
cmp     ebx, [edi]
jl      short loc_10064446
mov     eax, [ebp+arg_4]
mov     edx, [eax+28h]
push    edx
push    esi
call    sub_10064110
or      eax, [esp+40h+var_8]
mov     edi, [esp+40h+var_20]
or      edx, [esp+40h+var_4]
mov     ebx, [esp+40h+var_1c]
or      edi, eax
mov     eax, [ebp+arg_4]
mov     ecx, [eax+30h]
push    ecx
push    esi
or      ebx, edx
call    sub_10064110
or      edi, eax
or      ebx, edx
add     esp, 10h
cmp     [esp+38h+var_24], 0
mov     [esp+38h+var_20], edi
mov     [esp+38h+var_1c], ebx
jz      short loc_100644f5
mov     edi, [esp+38h+var_24]
xor     edx, edx
xor     ebx, ebx
cmp     dx, [edi]
jge     short loc_100644f5
add     edi, 28h
mov     eax, [edi-14h]
push    eax
push    esi
call    sub_10064350
mov     ecx, [edi]
or      [esp+40h+var_20], eax
or      [esp+40h+var_1c], edx
push    ecx
push    esi
call    sub_10064110
or      [esp+48h+var_1c], edx
or      [esp+48h+var_20], eax
mov     edx, [esp+48h+var_24]
movsx   eax, word ptr [edx]
inc     ebx
add     esp, 10h
add     edi, 3ch
cmp     ebx, eax
jl      short loc_100644c0
mov     ecx, [ebp+arg_4]
mov     eax, [ecx+38h]
mov     [ebp+arg_4], eax
test    eax, eax
jnz     loc_10064380
mov     eax, [esp+38h+var_20]
mov     edx, [esp+38h+var_1c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     eax, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [esi+0ch]
movzx   ecx, word ptr [eax+2]
mov     edx, 100h
and     cx, dx
push    ebx
movzx   ebx, cx
mov     ecx, [esi+8]
mov     dx, [ecx+2]
mov     ecx, 100h
and     dx, cx
movzx   edx, dx
push    edi
mov     [ebp+var_4], edx
call    sub_100358d0
mov     ecx, [esi+0ch]
add     esp, 4
mov     [ecx+14h], eax
mov     eax, [esi+8]
push    edi
call    sub_100358d0
mov     edx, [esi+8]
mov     [edx+14h], eax
mov     eax, [esi+0ch]
mov     ecx, [eax+14h]
mov     edx, [esi+8]
mov     edx, [edx+14h]
mov     [eax+14h], edx
mov     eax, [esi+8]
mov     [eax+14h], ecx
mov     eax, [esi+0ch]
movzx   ecx, word ptr [eax+2]
mov     edx, 0feffh
and     cx, dx
or      cx, word ptr [ebp+var_4]
add     esp, 4
mov     [eax+2], cx
mov     eax, [esi+8]
movzx   ecx, word ptr [eax+2]
and     cx, dx
or      cx, bx
mov     [eax+2], cx
mov     eax, [esi+0ch]
mov     ecx, [esi+8]
mov     [esi+8], eax
mov     al, [esi]
mov     [esi+0ch], ecx
cmp     al, 4dh
jb      short loc_100645c4
sub     al, 4dh
xor     al, 2
add     al, 4dh
mov     [esi], al
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     eax, 48h
jnz     short loc_100645db
mov     eax, 1
retn
cmp     eax, 49h
jnz     short loc_100645e6
mov     eax, 80h
retn
lea     ecx, [eax-4ch]
mov     eax, 2
shl     ax, cl
movzx   eax, ax
retn
push    ebp
mov     ebp, esp
and     [ebp+arg_10], 0fffh
sub     esp, 10h
cmp     [ebp+arg_0], 0
push    esi
push    edi
jz      loc_1006472c
mov     eax, [ebp+arg_0]
mov     ecx, [eax+18h]
mov     edx, [eax+20h]
mov     [ebp+var_8], edx
mov     [ebp+var_c], ecx
test    ecx, ecx
jz      loc_1006471e
mov     eax, [ebp+arg_4]
cmp     [edx+8], eax
jnz     loc_10064706
mov     eax, [edx+18h]
mov     ecx, [edx+1ch]
and     eax, [ebp+arg_8]
and     ecx, [ebp+arg_c]
or      eax, ecx
jnz     loc_10064706
cmp     [edx+0ch], ebx
jnz     loc_10064706
movzx   ecx, word ptr [edx+10h]
test    [ebp+arg_10], ecx
jz      loc_10064706
test    ebx, ebx
js      loc_10064737
mov     eax, [ebp+arg_14]
test    eax, eax
jz      loc_10064737
mov     esi, 80h
cmp     cx, si
jz      loc_10064737
mov     ecx, [eax+0ch]
mov     edi, [edx]
mov     eax, [ecx+0ch]
lea     edx, [ebx+ebx*2]
mov     cl, [eax+edx*8+16h]
mov     esi, edi
mov     [ebp+var_1], cl
call    sub_10035a00
movsx   eax, al
sub     eax, 61h
jz      short loc_100646b6
dec     eax
jz      short loc_100646c3
xor     eax, eax
cmp     [ebp+var_1], 63h
setnl   al
jmp     short loc_100646bf
xor     eax, eax
cmp     [ebp+var_1], 61h
setz    al
test    eax, eax
jz      short loc_10064703
mov     edx, [ebp+arg_0]
mov     esi, [edi+0ch]
mov     eax, [edi+8]
mov     edi, [edx]
call    sub_10035a60
mov     esi, [ebp+arg_14]
mov     edx, [esi+4]
xor     ecx, ecx
cmp     [edx], ebx
jz      short loc_100646ee
mov     edi, [esi+24h]
cmp     ecx, edi
jge     short loc_1006472c
add     edx, 4
inc     ecx
cmp     [edx], ebx
jnz     short loc_100646e2
test    eax, eax
jz      short loc_10064734
mov     edx, [esi+20h]
mov     edx, [edx+ecx*4]
mov     ecx, [eax]
call    sub_1000bca0
test    eax, eax
jz      short loc_10064734
mov     edx, [ebp+var_8]
mov     eax, [ebp+var_c]
dec     eax
add     edx, 28h
mov     [ebp+var_c], eax
mov     [ebp+var_8], edx
test    eax, eax
jnz     loc_10064630
mov     eax, [ebp+arg_0]
mov     eax, [eax+10h]
mov     [ebp+arg_0], eax
test    eax, eax
jnz     loc_10064619
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_8]
pop     edi
mov     eax, edx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
mov     ebx, eax
mov     eax, [ebp+arg_0]
mov     eax, [eax]
push    edi
push    ecx
mov     [ebp+var_14], eax
push    eax
xor     edi, edi
lea     esi, [ebp+var_4]
mov     eax, ebx
mov     [ebp+var_8], edi
call    sub_100489e0
add     esp, 8
test    eax, eax
jz      loc_10064925
mov     ebx, [ebx+10h]
mov     esi, [ebx+8]
mov     ebx, [esi+14h]
cmp     byte ptr [ebx], 98h
jnz     loc_10064925
mov     eax, ebx
call    sub_100357e0
cmp     al, 61h
jnz     loc_10064925
mov     edx, [ebx+28h]
test    byte ptr [edx+22h], 10h
jnz     loc_10064925
mov     esi, [esi]
movzx   eax, byte ptr [esi]
mov     [ebp+var_10], esi
mov     [ebp+var_c], eax
cmp     eax, 84h
jnz     short loc_100647b6
movzx   eax, byte ptr [esi+23h]
mov     [ebp+var_c], eax
cmp     eax, 85h
jnz     short loc_100647fd
movsx   esi, word ptr [esi+1ch]
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+1f0h]
mov     ecx, esi
call    sub_10028f10
mov     ebx, eax
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_100647ee
cmp     byte ptr [ebx+1eh], 3
jnz     short loc_100647ee
mov     bl, 1
mov     edi, eax
call    sub_100253e0
mov     ebx, [ebp+var_8]
mov     edi, eax
mov     edx, [ebp+arg_0]
mov     eax, [edx+8]
mov     ecx, esi
call    sub_10028fd0
jmp     short loc_1006480c
cmp     eax, 5eh
jnz     loc_10064917
mov     edi, [esi+4]
mov     ebx, [ebp+var_8]
test    edi, edi
jz      loc_10064901
movsx   eax, byte ptr [edi]
xor     ebx, ebx
test    eax, eax
jz      loc_100648fc
mov     cl, [ebp+var_2]
mov     dl, [ebp+var_3]
movsx   esi, [ebp+var_4]
cmp     eax, esi
jz      short loc_10064847
movsx   esi, dl
cmp     eax, esi
jz      short loc_10064847
movsx   esi, cl
cmp     eax, esi
jz      short loc_10064847
movsx   eax, byte ptr [ebx+edi+1]
inc     ebx
test    eax, eax
jnz     short loc_10064827
test    ebx, ebx
jz      loc_100648fc
cmp     byte ptr [ebx+edi-1], 0ffh
jz      loc_100648fc
movsx   ecx, [ebp+var_4]
cmp     eax, ecx
jnz     short loc_10064870
cmp     byte ptr [ebx+edi+1], 0
jnz     short loc_10064870
mov     eax, 1
jmp     short loc_10064872
xor     eax, eax
mov     esi, [ebp+arg_8]
mov     [esi], eax
mov     eax, [ebp+var_14]
push    5eh
push    eax
mov     ecx, edi
call    sub_10035ee0
add     esp, 8
test    eax, eax
jz      short loc_10064892
mov     ecx, [eax+4]
mov     byte ptr [ebx+ecx], 0
cmp     [ebp+var_c], 85h
mov     edx, [ebp+arg_4]
mov     [edx], eax
jnz     short loc_100648fe
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_10]
mov     ebx, [eax+8]
movsx   ecx, word ptr [ecx+1ch]
mov     eax, ebx
call    sub_10028fd0
cmp     dword ptr [esi], 0
jz      short loc_100648fe
mov     edx, [ebp+var_10]
mov     eax, [edx+4]
cmp     byte ptr [eax+1], 0
jz      short loc_100648fe
mov     ecx, [ebp+arg_0]
call    sub_1003abf0
mov     esi, eax
push    esi
push    edx
push    ecx
call    sub_10038b70
mov     eax, [ebx+1ch]
lea     ecx, [eax-1]
add     esp, 0ch
cmp     eax, ecx
jbe     short loc_100648f2
lea     eax, [ecx+ecx*4]
mov     ecx, [ebx+4]
mov     dword ptr [ecx+eax*4+0ch], 0
mov     edx, [ebp+arg_0]
call    sub_1003ac10
jmp     short loc_100648fe
xor     edi, edi
mov     ebx, [ebp+var_8]
test    ebx, ebx
jz      short loc_10064917
push    ebx
call    sub_100247d0
mov     ecx, [ebx]
add     esp, 4
mov     eax, ebx
call    sub_10009810
xor     eax, eax
test    edi, edi
setnz   al
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 4ch
mov     ecx, [ebp+arg_4]
mov     eax, [ecx]
push    ebx
mov     ebx, [ecx+20h]
mov     ecx, [ecx+4]
mov     [esp+50h+var_28], eax
push    esi
mov     esi, [eax]
mov     eax, [ebp+arg_8]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
add     eax, eax
add     ebx, eax
mov     [esp+54h+var_14], eax
mov     eax, [ebx]
mov     [esp+54h+var_4c], ecx
push    edi
mov     ecx, 16ch
mov     [esp+58h+var_40], esi
mov     [esp+58h+var_38], ebx
mov     [esp+58h+var_24], eax
call    sub_10009a40
mov     edi, eax
xor     esi, esi
mov     [esp+58h+var_3c], edi
cmp     edi, esi
jz      short loc_100649a6
push    16ch
push    esi
push    edi
call    memset
add     esp, 0ch
mov     [ebx+0ch], edi
cmp     edi, esi
jz      loc_10064fb8
or      byte ptr [ebx+12h], 10h
mov     ecx, [ebp+arg_4]
movzx   eax, word ptr [ecx+16h]
mov     edx, [ecx]
mov     ecx, [esp+58h+var_4c]
mov     [edi+16h], ax
mov     eax, [esp+58h+var_24]
push    44h
mov     [edi], edx
push    eax
lea     edx, [edi+24h]
push    edi
mov     [edi+4], ecx
mov     [edi+10h], esi
mov     [edi+18h], esi
mov     dword ptr [edi+1ch], 8
mov     [edi+20h], edx
mov     [edi+8], esi
mov     [edi+0ch], esi
call    sub_10064090
mov     esi, [edi+18h]
add     esp, 0ch
dec     esi
js      short loc_10064a11
lea     ebx, [ebx+0]
mov     ecx, [ebp+arg_0]
push    esi
push    edi
push    ecx
call    sub_100650c0
add     esp, 0ch
dec     esi
jns     short loc_10064a00
mov     edx, [esp+58h+var_40]
cmp     byte ptr [edx+32h], 0
jnz     loc_10064fb8
mov     eax, [ebp+arg_4]
mov     ecx, [eax+8]
mov     eax, [eax+0ch]
not     ecx
not     eax
mov     [esp+58h+var_10], ecx
mov     ecx, edi
mov     edi, [ecx+20h]
mov     [esp+58h+var_c], eax
mov     eax, [ecx+18h]
or      edx, 0ffffffffh
or      esi, 0ffffffffh
dec     eax
mov     [esp+58h+var_20], edx
mov     [esp+58h+var_1c], esi
mov     [esp+58h+var_48], eax
js      loc_10064c3f
mov     eax, edx
or      eax, esi
jz      loc_10064c3f
movzx   eax, word ptr [edi+10h]
test    al, al
jnz     loc_10064bba
mov     esi, [esp+58h+var_40]
xor     eax, eax
mov     ecx, 164h
mov     [esp+58h+var_10], eax
mov     [esp+58h+var_c], eax
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      loc_10064c23
or      byte ptr [edi+12h], 20h
mov     [edi+0ch], esi
mov     edx, 200h
mov     [edi+10h], dx
mov     edx, [ebp+arg_4]
movzx   eax, word ptr [edx+16h]
mov     edx, [edx]
mov     [esi], edx
mov     edx, [esp+58h+var_4c]
xor     ecx, ecx
mov     [esi+4], edx
lea     edx, [esi+24h]
mov     [esi+10h], ecx
mov     [esi+18h], ecx
mov     dword ptr [esi+1ch], 8
mov     [esi+20h], edx
mov     [esi+8], ecx
mov     [esi+0ch], ecx
mov     [esi+16h], ax
mov     eax, [edi]
push    45h
push    eax
push    esi
mov     [esp+64h+var_30], ecx
mov     [esp+64h+var_2c], ecx
call    sub_10064090
mov     ebx, [esi+18h]
add     esp, 0ch
dec     ebx
js      short loc_10064b01
lea     ebx, [ebx+0]
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
push    ecx
call    sub_100650c0
add     esp, 0ch
dec     ebx
jns     short loc_10064af0
mov     edx, [ebp+arg_4]
mov     eax, [esp+58h+var_40]
mov     [esi+10h], edx
cmp     byte ptr [eax+32h], 0
jnz     loc_10064ba8
cmp     dword ptr [esi+18h], 0
mov     ecx, [esi+20h]
mov     [esp+58h+var_44], ecx
jle     loc_10064ba8
mov     edx, [esi+18h]
mov     ebx, [esp+58h+var_30]
mov     [esp+58h+var_34], edx
mov     eax, [esp+58h+var_44]
mov     ecx, [eax]
movzx   eax, byte ptr [ecx]
cmp     eax, 48h
jz      short loc_10064b4e
cmp     eax, 4ch
jl      short loc_10064b49
cmp     eax, 50h
jle     short loc_10064b4e
cmp     eax, 49h
jnz     short loc_10064b7e
mov     edx, [esp+58h+var_4c]
mov     edx, [edx]
xor     ecx, ecx
test    edx, edx
jle     short loc_10064b74
mov     eax, [esp+58h+var_44]
mov     esi, [eax+8]
mov     eax, [esp+58h+var_4c]
add     eax, 4
cmp     [eax], esi
jz      short loc_10064b9a
inc     ecx
add     eax, 4
cmp     ecx, edx
jl      short loc_10064b68
xor     eax, eax
xor     edx, edx
or      ebx, eax
or      [esp+58h+var_2c], edx
add     [esp+58h+var_44], 28h
dec     [esp+58h+var_34]
jnz     short loc_10064b31
mov     ecx, [esp+58h+var_2c]
and     [esp+58h+var_20], ebx
and     [esp+58h+var_1c], ecx
jmp     loc_10064c1f
mov     eax, 1
xor     edx, edx
call    __allshl
jmp     short loc_10064b78
mov     ebx, [esp+58h+var_30]
mov     ecx, [esp+58h+var_2c]
and     [esp+58h+var_20], ebx
and     [esp+58h+var_1c], ecx
jmp     short loc_10064c1f
test    byte ptr [edi+12h], 8
jnz     short loc_10064c23
mov     esi, [edi+8]
mov     edx, [esp+58h+var_4c]
call    sub_100640e0
test    byte ptr [edi+12h], 2
mov     ebx, eax
mov     [esp+58h+var_4], edx
jz      short loc_10064bf8
mov     eax, [edi+4]
lea     edx, [eax+eax*4]
mov     eax, [esp+58h+var_3c]
mov     ecx, [eax+20h]
mov     esi, [ecx+edx*8+8]
mov     edx, [esp+58h+var_4c]
call    sub_100640e0
or      ebx, eax
or      [esp+58h+var_4], edx
mov     eax, [esp+58h+var_4]
and     [esp+58h+var_20], ebx
and     [esp+58h+var_1c], eax
cmp     word ptr [edi+10h], 2
jz      short loc_10064c17
xor     eax, eax
mov     [esp+58h+var_10], eax
mov     [esp+58h+var_c], eax
jmp     short loc_10064c1f
and     [esp+58h+var_10], ebx
and     [esp+58h+var_c], eax
mov     ebx, [esp+58h+var_38]
mov     eax, [esp+58h+var_48]
mov     esi, [esp+58h+var_1c]
mov     edx, [esp+58h+var_20]
dec     eax
add     edi, 28h
mov     [esp+58h+var_48], eax
test    eax, eax
jns     loc_10064a55
mov     eax, [esp+58h+var_3c]
mov     [eax+164h], edx
or      edx, esi
mov     [eax+168h], esi
jnz     short loc_10064c57
xor     eax, eax
jmp     short loc_10064c5c
mov     eax, 100h
mov     edx, [esp+58h+var_10]
or      edx, [esp+58h+var_c]
mov     [ebx+10h], ax
jz      loc_10064fb8
xor     eax, eax
mov     [esp+58h+var_44], eax
mov     [esp+58h+var_34], 0ffffffffh
mov     [esp+58h+var_30], eax
cmp     [esp+58h+var_44], 0
jnz     loc_10064e66
mov     eax, [esp+58h+var_3c]
mov     ebx, [eax+18h]
mov     esi, [eax+20h]
dec     ebx
mov     [esp+58h+var_48], ebx
js      loc_10064fb8
mov     edi, [esi+8]
and     byte ptr [esi+12h], 0bfh
cmp     edi, [esp+58h+var_34]
jz      short loc_10064cdc
mov     eax, [esp+58h+var_4c]
mov     edx, [eax]
xor     ecx, ecx
test    edx, edx
jle     short loc_10064ccc
add     eax, 4
lea     esp, [esp+0]
cmp     [eax], edi
jz      short loc_10064cef
inc     ecx
add     eax, 4
cmp     ecx, edx
jl      short loc_10064cc0
xor     eax, eax
xor     edx, edx
and     eax, [esp+58h+var_10]
and     edx, [esp+58h+var_c]
or      eax, edx
jnz     short loc_10064cfd
dec     ebx
add     esi, 28h
mov     [esp+58h+var_48], ebx
test    ebx, ebx
jns     short loc_10064ca0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
xor     edx, edx
call    __allshl
jmp     short loc_10064cd0
mov     ecx, [esi+0ch]
mov     [esp+58h+var_20], ecx
mov     [esp+58h+var_34], edi
test    ebx, ebx
js      loc_10064fb8
mov     [esp+58h+var_44], 1
lea     ebx, [esi+12h]
cmp     [esp+58h+var_44], 0
jz      loc_10064e49
mov     eax, [esp+58h+var_34]
cmp     [ebx-0ah], eax
jz      short loc_10064d37
and     byte ptr [ebx], 0bfh
jmp     loc_10064e35
mov     ecx, [esp+58h+var_20]
cmp     [ebx-6], ecx
jz      short loc_10064d4d
mov     [esp+58h+var_44], 0
jmp     loc_10064e35
mov     edi, [ebx-12h]
mov     eax, [edi+0ch]
movzx   ecx, byte ptr [eax]
cmp     ecx, 74h
jnz     short loc_10064d6c
mov     edx, [eax+10h]
mov     eax, [edx]
mov     ecx, [eax+8]
mov     eax, [ecx]
call    sub_100357e0
jmp     short loc_10064db5
cmp     ecx, 25h
jnz     short loc_10064d7b
mov     eax, [eax+4]
call    sub_10040670
jmp     short loc_10064db5
cmp     ecx, 9ah
jz      short loc_10064d93
cmp     ecx, 98h
jz      short loc_10064d93
cmp     ecx, 84h
jnz     short loc_10064db2
mov     ecx, [eax+28h]
test    ecx, ecx
jz      short loc_10064db2
movsx   eax, word ptr [eax+1ch]
test    eax, eax
jns     short loc_10064da6
mov     al, 64h
jmp     short loc_10064db5
lea     edx, [eax+eax*2]
mov     eax, [ecx+0ch]
mov     al, [eax+edx*8+16h]
jmp     short loc_10064db5
mov     al, [eax+1]
movsx   esi, al
mov     eax, [edi+8]
movzx   ecx, byte ptr [eax]
cmp     ecx, 74h
jnz     short loc_10064dd4
mov     ecx, [eax+10h]
mov     edx, [ecx]
mov     eax, [edx+8]
mov     eax, [eax]
call    sub_100357e0
jmp     short loc_10064e1d
cmp     ecx, 25h
jnz     short loc_10064de3
mov     eax, [eax+4]
call    sub_10040670
jmp     short loc_10064e1d
cmp     ecx, 9ah
jz      short loc_10064dfb
cmp     ecx, 98h
jz      short loc_10064dfb
cmp     ecx, 84h
jnz     short loc_10064e1a
mov     ecx, [eax+28h]
test    ecx, ecx
jz      short loc_10064e1a
movsx   eax, word ptr [eax+1ch]
test    eax, eax
jns     short loc_10064e0e
mov     al, 64h
jmp     short loc_10064e1d
lea     edx, [eax+eax*2]
mov     eax, [ecx+0ch]
mov     al, [eax+edx*8+16h]
jmp     short loc_10064e1d
mov     al, [eax+1]
test    esi, esi
jz      short loc_10064e32
movsx   ecx, al
cmp     esi, ecx
jz      short loc_10064e32
mov     [esp+58h+var_44], 0
jmp     short loc_10064e35
or      byte ptr [ebx], 40h
mov     eax, [esp+58h+var_48]
dec     eax
add     ebx, 28h
mov     [esp+58h+var_48], eax
test    eax, eax
jns     loc_10064d1b
mov     eax, [esp+58h+var_30]
inc     eax
mov     [esp+58h+var_30], eax
cmp     eax, 2
jl      loc_10064c80
cmp     [esp+58h+var_44], 0
jz      loc_10064fb8
mov     ecx, [esp+58h+var_3c]
mov     ebx, [ecx+18h]
mov     esi, [ecx+20h]
mov     edi, [esp+58h+var_40]
xor     eax, eax
dec     ebx
mov     [esp+58h+var_44], eax
js      short loc_10064eb7
lea     ecx, [ecx+0]
test    byte ptr [esi+12h], 40h
jz      short loc_10064eb1
mov     edx, [esi]
mov     eax, [edx+0ch]
push    0
push    0
push    eax
push    edi
call    sub_100365c0
mov     ecx, [esp+68h+var_44]
push    eax
mov     eax, [ebp+arg_4]
mov     eax, [eax]
call    sub_10036e50
mov     ecx, [esi]
mov     [esp+6ch+var_44], eax
mov     eax, [ecx+8]
add     esp, 14h
add     esi, 28h
dec     ebx
jns     short loc_10064e80
push    0
push    0
push    eax
push    edi
call    sub_100365c0
mov     edx, [esp+68h+var_28]
mov     esi, [edx]
add     esp, 10h
mov     [esp+58h+var_34], eax
test    esi, esi
jz      short loc_10064f01
cmp     byte ptr [esi+32h], 0
jz      short loc_10064ee0
xor     ebx, ebx
jmp     loc_10064f76
cmp     byte ptr [esi+0e2h], 0
jz      short loc_10064f01
mov     eax, 30h
cmp     ax, [esi+0e0h]
jbe     loc_10064fbf
inc     dword ptr [esi+0f0h]
cmp     dword_10080230, 0
jz      loc_1006500a
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10064f21
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [esp+58h+var_30]
mov     eax, 30h
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10064f42
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esp+58h+var_30]
test    eax, eax
jnz     short loc_10064f52
test    esi, esi
jz      short loc_10064f52
mov     byte ptr [esi+32h], 1
mov     ebx, eax
test    ebx, ebx
jz      short loc_10064f76
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [ebx], 48h
mov     [ebx+1eh], dx
mov     dword ptr [ebx+2ch], 1
mov     edi, [esp+58h+var_28]
mov     esi, [edi]
mov     eax, [esp+58h+var_34]
test    ebx, ebx
jnz     loc_1006501a
push    eax
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
mov     eax, [esp+68h+var_44]
mov     ecx, [esp+68h+var_40]
add     esp, 10h
push    eax
push    ecx
call    sub_10037020
mov     ecx, [esp+60h+var_38]
mov     edx, 800h
add     esp, 8
mov     [ecx+10h], dx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [esi+0f8h]
test    ebx, ebx
jnz     short loc_10064fd4
inc     dword ptr [esi+0f4h]
jmp     loc_10064f01
mov     ecx, [ebx]
mov     [esi+0f8h], ecx
mov     ecx, 1
add     [esi+0e4h], ecx
mov     eax, [esi+0e4h]
add     [esi+0ech], ecx
cmp     eax, [esi+0e8h]
jle     loc_10064f54
mov     [esi+0e8h], eax
jmp     loc_10064f54
push    30h
call    dword_1008024c
add     esp, 4
jmp     loc_10064f46
test    eax, eax
jz      short loc_10065038
mov     ecx, 100h
mov     [ebx+8], eax
test    [eax+2], cx
jz      short loc_10065038
mov     edx, ecx
or      [ebx+2], dx
mov     eax, [eax+14h]
mov     [ebx+14h], eax
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [ebx+2ch], eax
jle     short loc_10065056
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     eax, [esp+58h+var_24]
mov     dx, [eax+2]
mov     ecx, [esp+58h+var_44]
mov     edi, [ebp+arg_4]
and     dx, 1
or      [ebx+2], dx
mov     ax, [eax+20h]
push    3
push    ebx
mov     [ebx+20h], ax
mov     [ebx+10h], ecx
call    sub_10063fb0
mov     edx, [ebp+arg_0]
mov     esi, eax
push    esi
push    edi
push    edx
call    sub_100650c0
mov     eax, [edi+20h]
mov     ecx, [esp+6ch+var_14]
add     esp, 14h
lea     edx, [esi+esi*4]
mov     esi, [ebp+arg_8]
mov     [eax+edx*8+4], esi
pop     edi
add     ecx, eax
mov     edx, 800h
pop     esi
mov     byte ptr [ecx+13h], 1
mov     [ecx+10h], dx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 3ch
xor     eax, eax
mov     [esp+3ch+var_10], eax
mov     [esp+3ch+var_c], eax
mov     [esp+3ch+src], eax
mov     [esp+3ch+var_24], eax
mov     [esp+3ch+var_20], eax
mov     eax, [ebp+arg_4]
mov     eax, [eax]
push    ebx
mov     [esp+40h+var_3c], eax
mov     eax, [eax]
cmp     byte ptr [eax+32h], 0
push    esi
push    edi
mov     [esp+48h+var_38], eax
jnz     loc_100658af
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
mov     ebx, [ecx+20h]
mov     esi, [ecx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
add     eax, eax
mov     edi, [ebx+eax]
mov     ecx, [edi+8]
add     ebx, eax
push    ecx
push    esi
mov     [esp+50h+var_30], eax
mov     [esp+50h+var_1c], esi
mov     [esp+50h+var_34], edi
call    sub_10064110
mov     [esp+50h+var_8], eax
movzx   eax, byte ptr [edi]
add     esp, 8
mov     [esp+48h+var_4], edx
mov     [esp+48h+var_28], eax
cmp     eax, 48h
jnz     short loc_1006516d
mov     dx, [edi+2]
mov     eax, 800h
and     dx, ax
mov     ecx, eax
cmp     dx, cx
jnz     short loc_10065161
mov     edx, [edi+10h]
push    edx
push    esi
call    sub_10064350
jmp     short loc_10065183
mov     eax, [edi+10h]
push    eax
push    esi
call    sub_10064230
jmp     short loc_10065183
cmp     eax, 49h
jnz     short loc_10065179
xor     eax, eax
mov     [ebx+1ch], eax
jmp     short loc_10065189
mov     ecx, [edi+0ch]
push    ecx
push    esi
call    sub_10064110
add     esp, 8
mov     [ebx+1ch], edx
push    edi
push    esi
mov     [ebx+18h], eax
call    sub_10064110
add     esp, 8
test    byte ptr [edi+2], 1
mov     [esp+48h+var_18], eax
mov     [esp+48h+var_14], edx
jz      short loc_100651dd
mov     eax, [esi]
xor     ecx, ecx
test    eax, eax
jle     short loc_100651c3
movsx   edx, word ptr [edi+20h]
add     esi, 4
cmp     [esi], edx
jz      loc_1006528f
inc     ecx
add     esi, 4
cmp     ecx, eax
jl      short loc_100651b3
xor     eax, eax
xor     edx, edx
or      [esp+48h+var_18], eax
or      [esp+48h+var_14], edx
add     eax, 0ffffffffh
adc     edx, 0ffffffffh
mov     [esp+48h+var_10], eax
mov     [esp+48h+var_c], edx
mov     eax, [esp+48h+var_14]
mov     edx, [esp+48h+var_18]
mov     [ebx+24h], eax
or      eax, 0ffffffffh
mov     [ebx+8], eax
mov     [ebx+4], eax
mov     eax, [esp+48h+var_28]
xor     ecx, ecx
mov     [ebx+20h], edx
mov     [ebx+10h], cx
cmp     eax, 48h
jz      short loc_10065216
cmp     eax, 4ch
jl      short loc_1006520d
cmp     eax, 50h
jle     short loc_10065216
cmp     eax, 49h
jnz     loc_10065338
mov     ecx, [ebx+18h]
mov     edx, [ebx+1ch]
and     ecx, [esp+48h+var_8]
and     edx, [esp+48h+var_4]
or      ecx, edx
jnz     loc_10065338
mov     ecx, [edi+8]
cmp     byte ptr [ecx], 98h
mov     edx, [edi+0ch]
jnz     short loc_1006524d
mov     esi, [ecx+18h]
mov     [ebx+8], esi
movsx   ecx, word ptr [ecx+1ch]
mov     [ebx+0ch], ecx
call    sub_100645d0
mov     [ebx+10h], ax
test    edx, edx
jz      loc_10065414
cmp     byte ptr [edx], 98h
jnz     loc_10065414
cmp     dword ptr [ebx+8], 0
jl      short loc_100652dc
push    0
push    0
push    edi
mov     edi, [esp+54h+var_38]
push    edi
call    sub_100365c0
add     esp, 10h
cmp     byte ptr [edi+32h], 0
mov     esi, eax
jz      short loc_100652a0
push    esi
push    edi
call    sub_10036430
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
xor     edx, edx
call    __allshl
jmp     loc_100651c7
mov     edi, [ebp+arg_4]
push    3
push    esi
call    sub_10063fb0
add     esp, 8
test    eax, eax
jz      loc_100658af
lea     edx, [eax+eax*4]
mov     ecx, edi
mov     eax, [ecx+20h]
lea     eax, [eax+edx*8]
mov     edx, [ebp+arg_8]
mov     [eax+4], edx
mov     ebx, [ecx+20h]
add     ebx, [esp+48h+var_30]
mov     [esp+48h+var_28], eax
or      byte ptr [ebx+12h], 8
mov     byte ptr [ebx+13h], 1
jmp     short loc_100652e2
mov     esi, edi
mov     [esp+48h+var_28], ebx
mov     edi, [esp+48h+var_3c]
call    sub_10064520
mov     eax, [esi+8]
mov     ecx, [eax+18h]
mov     edx, [esp+48h+var_28]
mov     [edx+8], ecx
movsx   eax, word ptr [eax+1ch]
mov     ecx, [esp+48h+var_4]
or      ecx, [esp+48h+var_c]
mov     [edx+0ch], eax
mov     eax, [esp+48h+var_8]
or      eax, [esp+48h+var_10]
mov     [edx+1ch], ecx
mov     ecx, [esp+48h+var_18]
mov     [edx+18h], eax
mov     eax, [esp+48h+var_14]
mov     [edx+20h], ecx
mov     [edx+24h], eax
movzx   eax, byte ptr [esi]
call    sub_100645d0
mov     edi, [esp+48h+var_34]
mov     [edx+10h], ax
jmp     loc_10065414
mov     al, [edi]
cmp     al, 47h
jnz     loc_100653f5
mov     ecx, [ebp+arg_4]
cmp     byte ptr [ecx+14h], 45h
jnz     loc_100653f5
mov     edx, edi
mov     eax, [edx+10h]
xor     esi, esi
mov     [esp+48h+var_18], eax
mov     [esp+48h+var_28], esi
mov     edi, edi
mov     ecx, [esp+48h+var_18]
mov     edx, [ecx+8]
mov     eax, [esi+edx]
mov     ebx, [esp+48h+var_38]
push    0
push    0
push    eax
push    ebx
call    sub_100365c0
mov     edi, eax
mov     eax, [esp+58h+var_34]
mov     eax, [eax+8]
push    0
push    0
push    eax
push    ebx
call    sub_100365c0
mov     ecx, [esp+68h+var_28]
mov     edx, [esp+68h+var_3c]
push    0
push    eax
movzx   eax, ds:byte_10076ef4[ecx]
push    edx
mov     ecx, edi
call    sub_10035f90
mov     ebx, [ebp+arg_4]
add     esp, 2ch
push    3
push    eax
mov     edi, ebx
call    sub_10063fb0
mov     edi, eax
mov     eax, [ebp+arg_0]
push    edi
push    ebx
push    eax
call    sub_100650c0
mov     eax, [ebx+20h]
mov     ecx, [esp+5ch+var_30]
inc     [esp+5ch+var_28]
lea     ebx, [eax+ecx]
mov     ecx, [ebp+arg_8]
add     esi, 14h
add     esp, 14h
lea     edx, [edi+edi*4]
mov     [eax+edx*8+4], ecx
cmp     esi, 28h
jl      loc_10065360
mov     edi, [esp+48h+var_34]
mov     byte ptr [ebx+13h], 2
jmp     short loc_10065414
cmp     al, 44h
jnz     short loc_10065414
mov     edx, [ebp+arg_8]
mov     esi, [ebp+arg_4]
mov     eax, [ebp+arg_0]
push    edx
push    esi
push    eax
call    sub_10064940
mov     ebx, [esi+20h]
add     esp, 0ch
add     ebx, [esp+48h+var_30]
mov     ecx, [ebp+arg_4]
cmp     byte ptr [ecx+14h], 45h
jnz     loc_10065721
mov     ecx, [esp+48h+var_3c]
lea     edx, [esp+48h+var_24]
push    edx
lea     eax, [esp+4ch+src]
push    eax
push    ecx
lea     ecx, [esp+54h+var_20]
mov     eax, edi
call    sub_10064740
add     esp, 0ch
test    eax, eax
jz      loc_10065721
mov     edx, [edi+10h]
mov     ecx, [esp+48h+src]
mov     eax, [edx+8]
mov     ebx, [eax+14h]
mov     esi, [esp+48h+var_38]
push    0
push    0
push    ecx
push    esi
mov     [esp+58h+var_18], ebx
call    sub_100365c0
add     esp, 10h
cmp     byte ptr [esi+32h], 0
mov     esi, [esp+48h+var_20]
mov     [esp+48h+var_28], eax
jnz     short loc_100654b6
mov     ecx, [eax+4]
mov     eax, ecx
test    ecx, ecx
jz      short loc_10065492
cmp     byte ptr [ecx], 0
jz      short loc_1006548b
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10065485
sub     eax, ecx
and     eax, 3fffffffh
mov     dl, [eax+ecx-1]
test    esi, esi
jz      short loc_100654b0
cmp     dl, 40h
jnz     short loc_100654a7
mov     [esp+48h+var_24], 0
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
inc     dl
mov     [eax+ecx-1], dl
mov     ecx, offset anocase
test    esi, esi
jnz     short loc_100654c4
mov     ecx, offset abinary
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_100654d6
jmp     short loc_100654d0
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100654d0
mov     edi, [esp+48h+var_38]
sub     eax, ecx
push    ecx
and     eax, 3fffffffh
lea     ecx, [edi+194h]
push    ecx
mov     esi, eax
call    sub_1000cf50
push    0
push    0
mov     esi, eax
push    ebx
push    edi
mov     [esp+60h+var_20], esi
call    sub_100365c0
mov     edi, eax
add     esp, 18h
test    edi, edi
jz      short loc_1006551a
test    esi, esi
jz      short loc_1006551a
mov     edx, 100h
or      [edi+2], dx
mov     [edi+14h], esi
mov     ebx, [esp+48h+var_3c]
mov     esi, [ebx]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006554e
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      eax, 0ffffffffh
mov     byte ptr [esi], 50h
mov     [esi+1eh], ax
mov     dword ptr [esi+2ch], 1
mov     ebx, [ebx]
test    esi, esi
jnz     short loc_1006556b
push    edi
push    ebx
call    sub_10036430
mov     ecx, [esp+50h+src]
push    ecx
push    ebx
call    sub_10036430
add     esp, 10h
jmp     short loc_100655d3
mov     eax, [esp+48h+src]
test    eax, eax
jz      short loc_1006558d
mov     edx, 100h
mov     [esi+0ch], eax
test    [eax+2], dx
jz      short loc_1006558d
mov     ecx, edx
or      [esi+2], cx
mov     edx, [eax+14h]
mov     [esi+14h], edx
test    edi, edi
jz      short loc_100655ab
mov     eax, 100h
mov     [esi+8], edi
test    [edi+2], ax
jz      short loc_100655ab
mov     ecx, eax
or      [esi+2], cx
mov     edx, [edi+14h]
mov     [esi+14h], edx
mov     ebx, esi
call    sub_10035cf0
mov     eax, [esp+48h+var_3c]
mov     ecx, [eax]
mov     eax, [ecx+54h]
cmp     [esi+2ch], eax
jle     short loc_100655d3
mov     edx, [esp+48h+var_3c]
push    eax
push    offset aexpressiontree
push    edx
call    sub_1000bb30
add     esp, 0ch
mov     edi, [ebp+arg_4]
push    3
push    esi
call    sub_10063fb0
push    eax
mov     [esp+54h+src], eax
mov     eax, [ebp+arg_0]
push    edi
push    eax
call    sub_100650c0
mov     ecx, [esp+5ch+var_18]
mov     edx, [esp+5ch+var_38]
add     esp, 14h
push    0
push    0
push    ecx
push    edx
call    sub_100365c0
mov     edi, eax
add     esp, 10h
test    edi, edi
jz      short loc_10065620
mov     eax, [esp+48h+var_20]
test    eax, eax
jz      short loc_10065620
mov     [edi+14h], eax
mov     eax, 100h
or      [edi+2], ax
mov     ebx, [esp+48h+var_3c]
mov     esi, [ebx]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10065654
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 4fh
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     ebx, [ebx]
test    esi, esi
jnz     short loc_10065671
push    edi
push    ebx
call    sub_10036430
mov     edx, [esp+50h+var_28]
push    edx
push    ebx
call    sub_10036430
add     esp, 10h
jmp     short loc_100656d7
mov     eax, [esp+48h+var_28]
test    eax, eax
jz      short loc_10065693
mov     ecx, 100h
mov     [esi+0ch], eax
test    [eax+2], cx
jz      short loc_10065693
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
test    edi, edi
jz      short loc_100656b1
mov     ecx, 100h
mov     [esi+8], edi
test    [edi+2], cx
jz      short loc_100656b1
mov     edx, ecx
or      [esi+2], dx
mov     eax, [edi+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [esp+48h+var_3c]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_100656d7
push    eax
mov     eax, ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     edi, [ebp+arg_4]
push    3
push    esi
call    sub_10063fb0
mov     ecx, [ebp+arg_0]
mov     esi, eax
push    esi
push    edi
push    ecx
call    sub_100650c0
mov     ebx, [edi+20h]
add     ebx, [esp+5ch+var_30]
add     esp, 14h
cmp     [esp+48h+var_24], 0
jz      short loc_10065721
mov     eax, [esp+48h+src]
lea     edx, [eax+eax*4]
mov     eax, [ebp+arg_8]
mov     ecx, edi
mov     edi, [ecx+20h]
mov     [edi+edx*8+4], eax
mov     ecx, [ecx+20h]
lea     edx, [esi+esi*4]
mov     [ecx+edx*8+4], eax
mov     byte ptr [ebx+13h], 2
mov     esi, [esp+48h+var_34]
cmp     byte ptr [esi], 97h
jnz     loc_100658a1
mov     ecx, [esi+4]
mov     edx, offset amatch
call    sub_1000bca0
test    eax, eax
jnz     loc_100658a1
mov     eax, [esi+10h]
cmp     dword ptr [eax], 2
jnz     loc_100658a1
mov     edx, [eax+8]
mov     eax, [edx+14h]
cmp     byte ptr [eax], 98h
jnz     loc_100658a1
mov     ecx, [esi+10h]
mov     eax, [ecx+8]
mov     esi, [eax]
mov     edx, [esp+48h+var_1c]
mov     edi, [eax+14h]
push    esi
push    edx
mov     [esp+50h+var_18], edi
call    sub_10064110
mov     [esp+50h+var_8], eax
mov     eax, [esp+50h+var_1c]
push    edi
push    eax
mov     [esp+58h+var_4], edx
call    sub_10064110
and     eax, [esp+58h+var_8]
and     edx, [esp+58h+var_4]
add     esp, 10h
or      eax, edx
jnz     loc_100658a1
mov     ecx, [esp+48h+var_38]
push    eax
push    eax
push    esi
push    ecx
call    sub_100365c0
mov     edx, [esp+58h+var_3c]
mov     esi, [edx]
add     esp, 10h
mov     ecx, 30h
mov     edi, eax
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_100657e4
push    30h
push    0
push    ebx
call    memset
add     esp, 0ch
or      eax, 0ffffffffh
mov     byte ptr [ebx], 32h
mov     [ebx+1eh], ax
mov     dword ptr [ebx+2ch], 1
mov     ecx, [esp+48h+var_3c]
mov     esi, [ecx]
test    ebx, ebx
jnz     short loc_10065801
push    ebx
push    esi
call    sub_10036430
push    edi
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_10065841
test    edi, edi
jz      short loc_1006581f
mov     edx, 100h
mov     [ebx+0ch], edi
test    [edi+2], dx
jz      short loc_1006581f
mov     eax, edx
or      [ebx+2], ax
mov     ecx, [edi+14h]
mov     [ebx+14h], ecx
call    sub_10035cf0
mov     eax, [esp+48h+var_3c]
mov     edx, [eax]
mov     ecx, [edx+54h]
cmp     [ebx+2ch], ecx
jle     short loc_10065841
push    ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     edi, [ebp+arg_4]
push    3
push    ebx
call    sub_10063fb0
mov     ecx, [edi+20h]
mov     edx, [esp+50h+var_8]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*8]
mov     ecx, [esp+50h+var_4]
mov     [eax+1ch], ecx
mov     ecx, [esp+50h+var_18]
mov     [eax+18h], edx
mov     edx, [ecx+18h]
mov     [eax+8], edx
movsx   ecx, word ptr [ecx+1ch]
mov     [eax+0ch], ecx
mov     ecx, [ebp+arg_8]
mov     [eax+4], ecx
mov     edx, 40h
mov     [eax+10h], dx
mov     ebx, [edi+20h]
add     ebx, [esp+50h+var_30]
add     esp, 8
mov     edx, [ebx+20h]
or      byte ptr [ebx+12h], 8
mov     byte ptr [ebx+13h], 1
mov     [eax+20h], edx
mov     ecx, [ebx+24h]
mov     [eax+24h], ecx
mov     edx, [esp+48h+var_10]
mov     eax, [esp+48h+var_c]
or      [ebx+18h], edx
or      [ebx+1ch], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
push    ebx
push    esi
mov     esi, eax
mov     eax, [edx]
xor     ecx, ecx
push    edi
test    eax, eax
jle     short loc_100658e2
add     edx, 4
cmp     [edx], esi
jz      short loc_10065934
inc     ecx
add     edx, 4
cmp     ecx, eax
jl      short loc_100658d6
xor     eax, eax
xor     edx, edx
mov     esi, [ebp+arg_8]
not     eax
mov     edi, eax
mov     eax, [ebp+arg_0]
not     edx
mov     ebx, edx
cmp     esi, [eax]
jge     short loc_1006592d
lea     esi, [esi+esi*4]
add     esi, esi
add     esi, esi
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+8]
mov     eax, [esi+edx]
push    eax
mov     eax, [ebp+arg_4]
push    eax
call    sub_10064110
inc     [ebp+arg_8]
and     eax, edi
and     edx, ebx
add     esp, 8
add     esi, 14h
or      eax, edx
jnz     short loc_10065942
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_8]
cmp     edx, [ecx]
jl      short loc_100658ff
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, 1
xor     edx, edx
call    __allshl
jmp     short loc_100658e6
pop     edi
pop     esi
mov     eax, 1
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_8]
mov     ecx, [eax+20h]
mov     edx, [ecx+ebx*4]
push    edi
xor     edi, edi
mov     [ebp+var_8], edx
cmp     [esi], edi
jle     short loc_100659b8
mov     [ebp+var_4], edi
mov     eax, [esi+8]
mov     ecx, [ebp+var_4]
mov     eax, [ecx+eax]
cmp     byte ptr [eax], 98h
jnz     short loc_100659af
mov     edx, [ebp+arg_8]
mov     ecx, [edx+4]
movsx   edx, word ptr [eax+1ch]
cmp     edx, [ecx+ebx*4]
jnz     short loc_100659af
mov     ecx, [ebp+arg_4]
cmp     [eax+18h], ecx
jnz     short loc_100659af
mov     edx, [ebp+arg_0]
push    edx
call    sub_100358d0
add     esp, 4
test    eax, eax
jz      short loc_100659af
mov     edx, [ebp+var_8]
mov     ecx, [eax]
call    sub_1000bca0
test    eax, eax
jz      short loc_100659c0
add     [ebp+var_4], 14h
inc     edi
cmp     edi, [esi]
jl      short loc_1006596c
or      eax, 0ffffffffh
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     eax, [ebp+arg_8]
push    ebx
push    esi
push    edi
xor     edi, edi
mov     [ebp+var_18], edi
mov     [ebp+var_14], edi
cmp     [eax], edi
jz      loc_10065b16
mov     ecx, [ebp+arg_10]
cmp     ecx, edi
jz      loc_10065b16
mov     ecx, [ecx]
cmp     ecx, 40h
jge     loc_10065b16
mov     [ebp+var_4], edi
cmp     ecx, edi
jle     loc_10065aac
mov     [ebp+var_8], edi
mov     eax, [ebp+arg_10]
mov     ecx, [eax+8]
mov     edx, [ebp+var_8]
mov     esi, [edx+ecx]
cmp     byte ptr [esi], 98h
mov     [ebp+var_c], esi
jnz     loc_10065b16
mov     eax, [esi+18h]
mov     ecx, [ebp+arg_4]
movsx   ebx, word ptr [esi+1ch]
push    0
push    2
push    0ffffffffh
push    0ffffffffh
push    eax
push    ecx
call    sub_10064600
add     esp, 18h
test    eax, eax
jz      short loc_10065a70
mov     eax, [eax]
mov     esi, [eax+0ch]
mov     eax, [eax+8]
mov     edi, [ebp+arg_0]
call    sub_10035a60
mov     esi, eax
mov     eax, [ebp+var_c]
push    edi
call    sub_100358d0
mov     edi, [ebp+var_18]
add     esp, 4
cmp     esi, eax
jz      short loc_10065a93
mov     esi, [ebp+var_c]
mov     edx, [ebp+arg_c]
cmp     [esi+18h], edx
jnz     loc_10065b16
mov     ecx, [ebp+var_4]
mov     eax, 1
xor     edx, edx
call    __allshl
or      edi, eax
or      [ebp+var_14], edx
mov     [ebp+var_18], edi
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_10]
add     [ebp+var_8], 14h
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [ecx]
jl      loc_10065a10
mov     eax, [ebp+arg_8]
mov     ebx, [ebp+arg_14]
mov     edx, edi
or      edx, [ebp+var_14]
jz      short loc_10065b0a
jmp     short loc_10065abb
mov     eax, [ebp+arg_8]
cmp     ebx, [eax+24h]
jge     short loc_10065b05
mov     ecx, [ebp+arg_0]
mov     esi, [ebp+arg_10]
push    eax
mov     eax, [ebp+arg_c]
push    eax
push    ecx
call    sub_10065950
mov     ecx, eax
add     esp, 0ch
test    ecx, ecx
js      short loc_10065b05
mov     eax, 1
xor     edx, edx
call    __allshl
not     eax
and     edi, eax
mov     eax, [ebp+var_14]
not     edx
and     eax, edx
mov     edx, edi
inc     ebx
or      edx, eax
mov     [ebp+var_14], eax
jnz     short loc_10065ab8
lea     eax, [edx+1]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
or      edi, [ebp+var_14]
jnz     short loc_10065b16
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
cmp     word ptr [eax], 1
push    ebx
push    esi
push    edi
jnz     loc_10065c15
mov     edi, [eax+24h]
mov     ebx, [eax+10h]
mov     eax, [ebp+arg_8]
mov     edx, [eax]
xor     ecx, ecx
mov     [ebp+var_8], edi
mov     [ebp+var_c], ebx
test    edx, edx
jle     short loc_10065b6f
mov     esi, [eax+8]
lea     ecx, [ecx+0]
mov     eax, [esi]
cmp     byte ptr [eax], 98h
jnz     short loc_10065b67
cmp     [eax+18h], edi
jnz     short loc_10065b67
cmp     word ptr [eax+1ch], 0
jl      loc_10065bf6
inc     ecx
add     esi, 14h
cmp     ecx, edx
jl      short loc_10065b50
mov     edi, [ebx+10h]
test    edi, edi
jz      loc_10065c15
lea     ebx, [ebx+0]
cmp     byte ptr [edi+2ch], 0
jz      loc_10065c0a
xor     esi, esi
mov     [ebp+var_4], esi
cmp     esi, [edi+24h]
jge     short loc_10065c08
mov     ecx, [ebp+var_8]
mov     eax, [edi+4]
mov     edx, [ebp+arg_4]
mov     ebx, [eax+esi*4]
push    edi
push    2
push    0ffffffffh
push    0ffffffffh
push    ecx
push    edx
call    sub_10064600
add     esp, 18h
test    eax, eax
jnz     short loc_10065beb
mov     eax, [ebp+var_8]
mov     ecx, [ebp+arg_0]
push    edi
push    eax
mov     ebx, esi
mov     esi, [ebp+arg_8]
push    ecx
call    sub_10065950
add     esp, 0ch
test    eax, eax
js      short loc_10065c02
mov     edx, [edi+4]
mov     eax, [ebp+var_4]
mov     eax, [edx+eax*4]
mov     edx, [ebp+var_c]
lea     ecx, [eax+eax*2]
mov     eax, [edx+0ch]
cmp     byte ptr [eax+ecx*8+14h], 0
jz      short loc_10065c02
mov     esi, [ebp+var_4]
inc     esi
mov     [ebp+var_4], esi
cmp     esi, [edi+24h]
jl      short loc_10065b94
jmp     short loc_10065c05
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+var_4]
cmp     esi, [edi+24h]
jz      short loc_10065bf6
mov     edi, [edi+14h]
test    edi, edi
jnz     loc_10065b80
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     eax, [ebp+arg_10]
push    ebx
xor     ebx, ebx
push    esi
push    edi
mov     [ebp+var_c], ebx
mov     [ebp+var_14], ecx
cmp     eax, ebx
jz      loc_10065d09
test    [ebp+arg_18], 40000h
jnz     loc_10065d09
mov     edi, [ebp+arg_8]
cmp     [edi+2eh], bl
jnz     loc_10065d09
mov     ecx, [eax]
mov     edx, [eax+8]
mov     [ebp+var_10], ecx
mov     [ebp+var_4], ebx
mov     [ebp+var_8], edx
cmp     ecx, ebx
jle     loc_10065d64
cmp     ebx, [edi+24h]
jg      loc_10065d64
mov     eax, [ebp+var_8]
mov     eax, [eax]
cmp     byte ptr [eax], 98h
mov     [ebp+var_18], eax
jnz     loc_10065d64
mov     ecx, [eax+18h]
cmp     ecx, [ebp+arg_c]
jnz     loc_10065d64
mov     edx, [ebp+arg_0]
push    edx
call    sub_100358d0
add     esp, 4
test    eax, eax
jnz     short loc_10065cac
mov     eax, [ebp+var_14]
mov     eax, [eax+8]
cmp     dword ptr [edi], 0
jz      short loc_10065cd9
cmp     ebx, [edi+24h]
jge     short loc_10065cd9
mov     ecx, [edi+4]
mov     esi, [ecx+ebx*4]
mov     edx, [edi+0ch]
cmp     esi, [edx+4]
jnz     short loc_10065cc7
or      esi, 0ffffffffh
mov     ecx, [edi+1ch]
mov     edx, [ebp+arg_8]
movzx   edi, byte ptr [ecx+ebx]
mov     ecx, [edx+20h]
mov     edx, [ecx+ebx*4]
jmp     short loc_10065ce0
mov     edx, [eax]
or      esi, 0ffffffffh
xor     edi, edi
mov     ecx, [ebp+var_18]
movsx   ecx, word ptr [ecx+1ch]
cmp     ecx, esi
jnz     short loc_10065d43
mov     ecx, [eax]
call    sub_1000bca0
test    eax, eax
jnz     short loc_10065d43
mov     edx, [ebp+var_8]
movzx   eax, byte ptr [edx+0ch]
xor     eax, edi
cmp     ebx, [ebp+arg_14]
jle     short loc_10065d12
cmp     eax, [ebp+var_c]
jz      short loc_10065d15
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_c], eax
inc     [ebp+var_4]
add     [ebp+var_8], 14h
test    esi, esi
jns     short loc_10065d48
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_10]
push    eax
mov     eax, [ebp+arg_c]
push    ecx
push    edx
call    sub_100658c0
add     esp, 0ch
test    eax, eax
jnz     short loc_10065d48
mov     eax, [ebp+var_10]
mov     [ebp+var_4], eax
jmp     short loc_10065d48
cmp     ebx, [ebp+arg_14]
jge     short loc_10065d5a
mov     ecx, [ebp+var_10]
mov     edi, [ebp+arg_8]
inc     ebx
cmp     [ebp+var_4], ecx
jl      loc_10065c70
jmp     short loc_10065d64
mov     edx, [ebp+arg_8]
cmp     ebx, [edx+24h]
jnz     short loc_10065d09
mov     edi, edx
mov     ecx, [ebp+arg_1c]
xor     eax, eax
cmp     [ebp+var_c], eax
setnz   al
mov     [ecx], eax
mov     eax, [ebp+var_4]
cmp     eax, [ebp+var_10]
jl      short loc_10065d85
mov     eax, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [edi+2ch], 0
jz      loc_10065d09
cmp     ebx, [edi+24h]
jnz     loc_10065d09
test    [ebp+arg_18], 80000h
jnz     loc_10065d09
mov     edx, [ebp+arg_4]
push    eax
mov     eax, [ebp+arg_10]
push    edx
push    eax
mov     eax, [ebp+arg_c]
call    sub_100658c0
add     esp, 0ch
test    eax, eax
jnz     loc_10065d09
mov     ecx, [edi+0ch]
mov     ebx, [ecx+0ch]
mov     ecx, [ebp+arg_14]
mov     esi, [edi+24h]
cmp     ecx, esi
jge     short loc_10065df4
mov     edx, [edi+4]
lea     edx, [edx+ecx*4]
jmp     short loc_10065de0
mov     eax, [edx]
lea     eax, [eax+eax*2]
cmp     byte ptr [ebx+eax*8+14h], 0
jz      short loc_10065df4
inc     ecx
add     edx, 4
cmp     ecx, esi
jl      short loc_10065de0
xor     eax, eax
pop     edi
cmp     ecx, esi
pop     esi
setz    al
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
fld1
fld     st
fld     ds:dbl_1007cf00
fld     st
fld     [ebp+arg_0]
fcom    st(2)
fnstsw  ax
test    ah, 41h
jz      short loc_10065e39
fstp    st(1)
fstp    st(1)
fstp    st(2)
fstp    st(1)
pop     ebp
retn
fxch    st(1)
fxch    st(3)
fxch    st(3)
fadd    st, st(4)
fxch    st(1)
fmul    st, st(2)
fcom    st(3)
fnstsw  ax
test    ah, 5
jnp     short loc_10065e35
fstp    st
fstp    st(1)
fstp    st(2)
fstp    st
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 1f4h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1f4h+var_4], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_20]
push    ebx
mov     ebx, [ebp+arg_4]
mov     edx, [ebx+4]
push    esi
push    edi
mov     edi, [ebp+arg_8]
mov     esi, [edi+20h]
mov     [esp+200h+var_1c0], eax
mov     eax, [edx]
mov     [esp+200h+var_1b8], ecx
xor     ecx, ecx
mov     [esp+200h+var_1bc], edi
mov     [esp+200h+var_19c], esi
test    eax, eax
jle     short loc_10065ec0
add     edx, 4
lea     ebx, [ebx+0]
cmp     [edx], esi
jz      loc_10065fa2
inc     ecx
add     edx, 4
cmp     ecx, eax
jl      short loc_10065eb0
xor     eax, eax
mov     [esp+200h+var_1cc], eax
cmp     byte ptr [edi+1dh], 0
mov     esi, [ebx+20h]
mov     [esp+200h+var_1d0], eax
mov     eax, [ebx+18h]
lea     edx, [eax+eax*4]
lea     eax, [esi+edx*8]
mov     [esp+200h+var_1b4], eax
jnz     loc_100660f2
cmp     dword ptr [edi+38h], 0
jnz     loc_100660f2
test    byte ptr [ebx+16h], 80h
jnz     loc_100660f2
mov     [esp+200h+var_1c4], esi
cmp     esi, eax
jnb     loc_100660f2
fldz
mov     eax, 100h
cmp     [esi+10h], ax
jnz     loc_100660df
mov     eax, [esp+200h+var_1d0]
mov     ecx, [esp+200h+var_1cc]
not     eax
and     eax, [ebp+arg_c]
not     ecx
and     ecx, [ebp+arg_10]
and     eax, [esi+20h]
and     ecx, [esi+24h]
or      eax, ecx
jnz     loc_100660df
mov     ecx, [esi+0ch]
mov     eax, [ecx+164h]
mov     edx, [ecx+168h]
and     eax, [esp+200h+var_1d0]
and     edx, [esp+200h+var_1cc]
or      eax, edx
jz      loc_100660df
mov     edi, [ecx+20h]
fld     st
mov     ecx, [ecx+18h]
fst     [esp+200h+var_1a8]
lea     ecx, [ecx+ecx*4]
fxch    st(1)
lea     eax, [edi+ecx*8]
fst     [esp+200h+var_1b0]
xor     ecx, ecx
mov     [esp+200h+var_198], eax
mov     [esp+200h+var_1d8], ecx
mov     [esp+200h+var_1d4], ecx
cmp     edi, eax
jnb     loc_10066088
mov     edx, 200h
cmp     [edi+10h], dx
jnz     short loc_10065fb7
mov     eax, [ebp+arg_18]
mov     ecx, [ebp+arg_14]
mov     edx, [ebp+arg_10]
push    eax
mov     eax, [ebp+arg_c]
push    ecx
push    edx
mov     edx, [edi+0ch]
push    eax
jmp     short loc_10066019
mov     eax, 1
xor     edx, edx
call    __allshl
mov     [esp+200h+var_1cc], edx
jmp     loc_10065ec6
mov     ecx, [esp+200h+var_19c]
cmp     [edi+8], ecx
jnz     loc_1006607d
mov     edx, [ebx]
mov     eax, [ebx+4]
mov     [esp+200h+var_170], edx
mov     edx, [ebp+arg_18]
push    edx
mov     edx, [ebp+arg_c]
xor     ecx, ecx
mov     [esp+204h+var_16c], eax
mov     eax, [ebp+arg_14]
mov     [esp+204h+var_15a], cx
mov     ecx, [ebp+arg_10]
push    eax
push    ecx
push    edx
mov     [esp+210h+var_160], ebx
mov     [esp+210h+var_15c], 45h
mov     [esp+210h+var_150], edi
mov     [esp+210h+var_158], 1
lea     edx, [esp+210h+var_170]
mov     eax, [esp+210h+var_1bc]
fstp    st(1)
mov     esi, [esp+210h+var_1c0]
fstp    st
lea     ecx, [esp+210h+var_194]
call    sub_10067930
fld     [esp+210h+var_180]
fadd    [esp+210h+var_1a8]
mov     edx, [esp+210h+var_1b8]
mov     eax, [esp+210h+var_178]
or      [esp+210h+var_1d8], eax
mov     ecx, [esp+210h+var_174]
fst     [esp+210h+var_1a8]
fld     [esp+210h+var_18c]
or      [esp+210h+var_1d4], ecx
fadd    [esp+210h+var_1b0]
mov     esi, [esp+210h+var_1c4]
add     esp, 10h
fst     [esp+200h+var_1b0]
fld     qword ptr [edx+14h]
fcomp   st(2)
fnstsw  ax
test    ah, 41h
jnp     short loc_10066088
mov     eax, [esp+200h+var_198]
add     edi, 28h
cmp     edi, eax
jb      loc_10065f82
cmp     [ebp+arg_1c], 0
jz      short loc_100660ac
fstp    st(1)
sub     esp, 8
fstp    [esp+208h+var_208]
call    sub_10065e10
fld     [esp+208h+var_1b0]
add     esp, 8
fmul    st(1), st
fxch    st(1)
fadd    [esp+200h+var_1a8]
fxch    st(1)
mov     ecx, [esp+200h+var_1b8]
fld     qword ptr [ecx+14h]
fcomp   st(2)
fnstsw  ax
test    ah, 41h
jnz     short loc_100660dd
mov     eax, [esp+200h+var_1d8]
fxch    st(1)
mov     edx, [esp+200h+var_1d4]
fstp    qword ptr [ecx+14h]
mov     [ecx+1ch], eax
fstp    qword ptr [ecx+8]
mov     [ecx+20h], edx
mov     dword ptr [ecx], 10000000h
mov     [ecx+10h], esi
jmp     short loc_100660e1
fstp    st(1)
fstp    st
add     esi, 28h
mov     [esp+200h+var_1c4], esi
cmp     esi, [esp+200h+var_1b4]
jb      loc_10065f04
mov     ecx, [esp+200h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     ecx, [eax+8]
cmp     ecx, [esi+20h]
jz      short loc_10066123
xor     eax, eax
pop     esi
pop     ebp
retn
cmp     word ptr [eax+10h], 2
jnz     short loc_1006611e
mov     ecx, [eax+18h]
mov     edx, [eax+1ch]
and     ecx, [ebp+arg_0]
and     edx, [ebp+arg_4]
or      ecx, edx
jnz     short loc_1006611e
mov     ecx, [eax+0ch]
lea     edx, [ecx+ecx*2]
mov     ecx, [esi+0ch]
mov     ecx, [ecx+0ch]
mov     esi, [eax]
push    ebx
mov     bl, [ecx+edx*8+16h]
call    sub_10035a00
movsx   eax, al
sub     eax, 61h
jz      short loc_10066167
dec     eax
jz      short loc_10066177
xor     eax, eax
cmp     bl, 63h
setnl   al
jmp     short loc_1006616f
xor     eax, eax
cmp     bl, 61h
setz    al
test    eax, eax
jnz     short loc_10066177
pop     ebx
pop     esi
pop     ebp
retn
pop     ebx
mov     eax, 1
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
fld1
sub     esp, 0ch
fcomp   qword ptr [edx+1b8h]
push    esi
push    edi
fnstsw  ax
test    ah, 1
jz      loc_10066244
mov     eax, [edx]
test    dword ptr [eax+18h], 8000000h
jz      loc_10066244
mov     esi, [ebp+arg_8]
test    dword ptr [esi], 100f3000h
jnz     loc_10066244
cmp     byte ptr [ebx+1dh], 0
jnz     loc_10066244
cmp     byte ptr [ebx+1eh], 0
jnz     short loc_10066244
mov     eax, [ebx+0ch]
mov     eax, [eax+18h]
mov     [ebp+var_8], eax
fild    [ebp+var_8]
test    eax, eax
jns     short loc_100661df
fadd    ds:dbl_1007cf80
sub     esp, 8
fst     qword ptr [ebp-0ch]
fstp    [esp+1ch+var_1c]
call    sub_10065e10
fld     qword ptr [ebp-0ch]
add     esp, 8
fdiv    qword ptr [edx+1b8h]
fld1
fadd    st(1), st
fld     st(2)
fadd    st, st
fmulp   st(2), st
fld     qword ptr [esi+14h]
fcomp   st(2)
fnstsw  ax
test    ah, 41h
jnp     short loc_1006623e
mov     esi, [ecx+20h]
mov     eax, [ecx+18h]
lea     ecx, [eax+eax*4]
lea     edi, [esi+ecx*8]
cmp     esi, edi
jnb     short loc_1006623e
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
push    edx
push    eax
mov     ecx, ebx
mov     eax, esi
call    sub_10066110
add     esp, 8
test    eax, eax
jnz     short loc_1006624a
add     esi, 28h
cmp     esi, edi
jb      short loc_1006621f
fstp    st(2)
fstp    st
fstp    st
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
fxch    st(1)
fstp    qword ptr [eax+14h]
mov     dword ptr [eax], 20000000h
pop     edi
faddp   st(1), st
fstp    qword ptr [eax+8]
mov     ecx, [esi+18h]
mov     [eax+1ch], ecx
mov     edx, [esi+1ch]
mov     [eax+20h], edx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 44h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+8]
push    edi
push    esi
mov     [ebp+var_8], eax
call    sub_10056c90
mov     ebx, [esi+54h]
mov     edi, eax
lea     ecx, [ebx+1]
mov     [esi+54h], ecx
mov     esi, [edi+1ch]
add     esp, 4
cmp     [edi+20h], esi
jg      short loc_100662b2
call    sub_10025810
test    eax, eax
jz      short loc_100662b2
mov     [ebp+var_30], 1
xor     ecx, ecx
jmp     short loc_100662d7
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
xor     ecx, ecx
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], cl
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1ah
mov     [ebp+var_30], esi
mov     edx, [ebp+arg_8]
mov     eax, [edx+0ch]
mov     [ebp+var_1c], eax
mov     eax, [ebp+arg_4]
mov     edi, [eax+20h]
mov     eax, [eax+18h]
lea     edx, [eax+eax*4]
lea     eax, [edi+edx*8]
xor     ebx, ebx
mov     [ebp+var_10], ecx
mov     [ebp+var_20], eax
mov     [ebp+var_38], ecx
cmp     edi, eax
jnb     loc_100663ae
mov     eax, [ebp+arg_8]
mov     ecx, [eax+20h]
mov     [ebp+var_2c], ecx
jmp     short loc_10066310
mov     edx, [ebp+var_2c]
cmp     [edi+8], edx
jnz     loc_100663a2
cmp     word ptr [edi+10h], 2
jnz     short loc_100663a2
mov     eax, [edi+18h]
mov     ecx, [edi+1ch]
and     eax, [ebp+arg_c]
and     ecx, [ebp+arg_10]
or      eax, ecx
jnz     short loc_100663a2
mov     ecx, [ebp+var_1c]
mov     eax, [edi+0ch]
mov     edx, [ecx+0ch]
mov     esi, [edi]
lea     eax, [eax+eax*2]
mov     al, [edx+eax*8+16h]
mov     [ebp+var_1], al
call    sub_10035a00
movsx   eax, al
sub     eax, 61h
jz      short loc_10066363
dec     eax
jz      short loc_10066370
xor     eax, eax
cmp     [ebp+var_1], 63h
setnl   al
jmp     short loc_1006636c
xor     eax, eax
cmp     [ebp+var_1], 61h
setz    al
test    eax, eax
jz      short loc_100663a2
mov     ecx, [edi+0ch]
cmp     ecx, 40h
jl      short loc_10066381
xor     eax, eax
mov     edx, 80000000h
jmp     short loc_1006638d
mov     eax, 1
xor     edx, edx
call    __allshl
mov     ecx, eax
and     ecx, [ebp+var_38]
mov     esi, edx
and     esi, ebx
or      ecx, esi
jnz     short loc_100663a2
inc     [ebp+var_10]
or      [ebp+var_38], eax
or      ebx, edx
add     edi, 28h
cmp     edi, [ebp+var_20]
jb      loc_10066310
mov     ecx, [ebp+arg_14]
mov     esi, [ebp+var_10]
mov     eax, [ebp+arg_8]
mov     edi, [ebp+var_38]
mov     edx, [ebp+var_1c]
mov     [ecx+4], esi
mov     ecx, [eax+2ch]
mov     eax, [eax+30h]
not     ebx
not     edi
and     edi, ecx
mov     ecx, [edx+8]
or      ebx, 80000000h
and     ebx, eax
mov     [ebp+var_24], eax
mov     [ebp+var_40], edi
mov     [ebp+var_3c], ebx
mov     [ebp+var_2c], ecx
cmp     ecx, 3fh
jl      short loc_100663f2
mov     edx, 3fh
mov     [ebp+var_18], edx
jmp     short loc_100663f7
mov     edx, ecx
mov     [ebp+var_18], ecx
xor     ebx, ebx
test    edx, edx
jle     short loc_10066427
lea     ecx, [ecx+0]
mov     eax, 1
xor     edx, edx
mov     ecx, ebx
call    __allshl
and     edx, [ebp+var_3c]
and     eax, edi
or      eax, edx
jz      short loc_10066418
inc     esi
inc     ebx
cmp     ebx, [ebp+var_18]
jl      short loc_10066400
mov     eax, [ebp+var_24]
mov     ecx, [ebp+var_2c]
mov     [ebp+var_10], esi
and     eax, 80000000h
xor     edx, edx
or      edx, eax
jz      short loc_10066439
lea     esi, [esi+ecx-3fh]
mov     [ebp+var_10], esi
mov     ebx, [ebp+arg_14]
or      dword ptr [ebx], 810002h
mov     eax, [ebp+arg_0]
mov     edi, [eax]
lea     edx, [esi+esi*8+30h]
mov     [ebp+size], edx
test    edi, edi
jz      short loc_1006647a
cmp     byte ptr [edi+32h], 0
jnz     loc_10066c53
cmp     byte ptr [edi+0e2h], 0
jz      short loc_1006647a
movzx   ecx, word ptr [edi+0e0h]
cmp     edx, ecx
jle     loc_100665b0
inc     dword ptr [edi+0f0h]
lea     eax, [edx-1]
cmp     eax, 7ffffefeh
ja      loc_10066605
cmp     dword_10080230, 0
jz      loc_100665f6
mov     eax, dword_10081774
test    eax, eax
jz      short loc_100664a8
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+size]
lea     ebx, [ebp+var_c]
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_100664c6
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [ebp+var_c]
mov     edx, [ebp+size]
test    eax, eax
jnz     short loc_100664d8
test    edi, edi
jz      short loc_100664d8
mov     byte ptr [edi+32h], 1
mov     esi, [ebp+var_10]
mov     ebx, [ebp+arg_14]
mov     edi, eax
mov     [ebp+var_2c], edi
test    edi, edi
jz      loc_10066c53
push    edx
push    0
push    edi
call    memset
mov     edx, [ebp+var_1c]
mov     [ebx+10h], edi
lea     eax, [edi+30h]
mov     [edi+20h], eax
lea     eax, [eax+esi*4]
lea     ecx, [eax+esi*4]
mov     [edi+4], eax
xor     eax, eax
mov     [ebp+size], eax
mov     [ebp+var_38], eax
mov     [ebp+var_34], eax
mov     eax, [ebp+arg_4]
mov     [edi+1ch], ecx
mov     dword ptr [edi], offset aautoindex
mov     [edi+24h], esi
mov     [edi+0ch], edx
mov     eax, [eax+20h]
add     esp, 0ch
mov     [ebp+var_c], eax
cmp     eax, [ebp+var_20]
jnb     loc_100667e3
jmp     short loc_10066540
mov     ecx, [ebp+var_c]
mov     edx, [ecx+8]
mov     eax, [ebp+arg_8]
cmp     edx, [eax+20h]
jnz     loc_100667d1
cmp     word ptr [ecx+10h], 2
jnz     loc_100667d1
mov     eax, [ecx+18h]
mov     ecx, [ecx+1ch]
and     eax, [ebp+arg_c]
and     ecx, [ebp+arg_10]
or      eax, ecx
jnz     loc_100667d1
mov     ecx, [ebp+var_c]
mov     eax, [ecx+0ch]
mov     edx, [ebp+arg_8]
mov     edx, [edx+0ch]
mov     edx, [edx+0ch]
mov     ecx, [ecx]
lea     eax, [eax+eax*2]
mov     al, [edx+eax*8+16h]
mov     byte ptr [ebp+arg_4+3], al
mov     eax, [ecx+8]
mov     [ebp+var_24], ecx
movzx   ecx, byte ptr [eax]
cmp     ecx, 74h
jnz     short loc_1006660c
mov     ecx, [eax+10h]
mov     edx, [ecx]
mov     eax, [edx+8]
mov     eax, [eax]
call    sub_100357e0
mov     bl, al
jmp     loc_10066657
mov     eax, [edi+0f8h]
test    eax, eax
jnz     short loc_100665c5
inc     dword ptr [edi+0f4h]
jmp     loc_1006647a
mov     ecx, [eax]
inc     dword ptr [edi+0e4h]
inc     dword ptr [edi+0ech]
mov     [edi+0f8h], ecx
mov     ecx, [edi+0e4h]
cmp     ecx, [edi+0e8h]
jle     loc_100664de
mov     [edi+0e8h], ecx
jmp     loc_100664de
push    edx
call    dword_1008024c
add     esp, 4
jmp     loc_100664c9
xor     eax, eax
jmp     loc_100664d0
cmp     ecx, 25h
jnz     short loc_1006661d
mov     eax, [eax+4]
call    sub_10040670
mov     bl, al
jmp     short loc_10066657
cmp     ecx, 9ah
jz      short loc_10066635
cmp     ecx, 98h
jz      short loc_10066635
cmp     ecx, 84h
jnz     short loc_10066654
mov     ecx, [eax+28h]
test    ecx, ecx
jz      short loc_10066654
movsx   eax, word ptr [eax+1ch]
test    eax, eax
jns     short loc_10066648
mov     bl, 64h
jmp     short loc_10066657
lea     edx, [eax+eax*2]
mov     eax, [ecx+0ch]
mov     bl, [eax+edx*8+16h]
jmp     short loc_10066657
mov     bl, [eax+1]
mov     ecx, [ebp+var_24]
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_100666d8
movzx   ecx, byte ptr [eax]
cmp     ecx, 74h
jnz     short loc_1006667a
mov     ecx, [eax+10h]
mov     edx, [ecx]
mov     eax, [edx+8]
mov     eax, [eax]
call    sub_100357e0
jmp     short loc_100666c3
cmp     ecx, 25h
jnz     short loc_10066689
mov     eax, [eax+4]
call    sub_10040670
jmp     short loc_100666c3
cmp     ecx, 9ah
jz      short loc_100666a1
cmp     ecx, 98h
jz      short loc_100666a1
cmp     ecx, 84h
jnz     short loc_100666c0
mov     ecx, [eax+28h]
test    ecx, ecx
jz      short loc_100666c0
movsx   eax, word ptr [eax+1ch]
test    eax, eax
jns     short loc_100666b4
mov     al, 64h
jmp     short loc_100666c7
lea     edx, [eax+eax*2]
mov     eax, [ecx+0ch]
mov     al, [eax+edx*8+16h]
jmp     short loc_100666c3
mov     al, [eax+1]
test    al, al
jz      short loc_100666fa
test    bl, bl
jz      short loc_100666fe
cmp     al, 63h
jge     short loc_100666d4
cmp     bl, 63h
jl      short loc_10066706
mov     bl, 63h
jmp     short loc_10066708
mov     dx, [ecx+2]
mov     eax, 800h
and     dx, ax
cmp     dx, ax
jnz     short loc_10066702
mov     ecx, [ecx+10h]
mov     edx, [ecx]
mov     eax, [edx+8]
mov     eax, [eax]
call    sub_100357e0
jmp     short loc_100666c3
test    bl, bl
jz      short loc_10066706
add     bl, al
jmp     short loc_10066708
test    bl, bl
jnz     short loc_10066708
mov     bl, 62h
movsx   eax, bl
sub     eax, 61h
jz      short loc_1006671e
dec     eax
jz      short loc_1006672f
xor     eax, eax
cmp     byte ptr [ebp+arg_4+3], 63h
setnl   al
jmp     short loc_10066727
xor     eax, eax
cmp     byte ptr [ebp+arg_4+3], 61h
setz    al
test    eax, eax
jz      loc_100667d1
mov     ecx, [ebp+var_c]
mov     ecx, [ecx+0ch]
cmp     ecx, 40h
jl      short loc_10066743
xor     eax, eax
mov     edx, 80000000h
jmp     short loc_1006674f
mov     eax, 1
xor     edx, edx
call    __allshl
mov     ecx, eax
and     ecx, [ebp+var_38]
mov     esi, edx
and     esi, [ebp+var_34]
or      ecx, esi
jnz     short loc_100667d1
or      [ebp+var_38], eax
or      [ebp+var_34], edx
mov     eax, [ebp+var_c]
mov     eax, [eax+0ch]
mov     edx, [edi+4]
mov     ecx, [ebp+size]
mov     [edx+ecx*4], eax
mov     eax, [ebp+var_24]
mov     esi, [eax+0ch]
mov     eax, [eax+8]
mov     edx, 100h
test    [eax+2], dx
jz      short loc_1006678b
mov     eax, [eax+14h]
jmp     short loc_100667b7
test    esi, esi
jz      short loc_1006679c
mov     ecx, edx
test    [esi+2], cx
jz      short loc_1006679c
mov     eax, [esi+14h]
jmp     short loc_100667b7
mov     ebx, [ebp+arg_0]
push    ebx
call    sub_100358d0
add     esp, 4
test    eax, eax
jnz     short loc_100667bb
push    ebx
mov     eax, esi
call    sub_100358d0
add     esp, 4
test    eax, eax
jz      short loc_100667bf
mov     eax, [eax]
jmp     short loc_100667c4
mov     eax, offset abinary
mov     ecx, [ebp+size]
mov     edx, [edi+20h]
mov     [edx+ecx*4], eax
inc     ecx
mov     [ebp+size], ecx
mov     eax, [ebp+var_c]
add     eax, 28h
mov     [ebp+var_c], eax
cmp     eax, [ebp+var_20]
jb      loc_10066540
mov     ebx, [ebp+size]
xor     esi, esi
cmp     [ebp+var_18], esi
jle     short loc_1006681f
lea     ecx, [ecx+0]
mov     eax, 1
xor     edx, edx
mov     ecx, esi
call    __allshl
and     eax, [ebp+var_40]
and     edx, [ebp+var_3c]
or      eax, edx
jz      short loc_10066819
mov     eax, [edi+4]
mov     [eax+ebx*4], esi
mov     ecx, [edi+20h]
mov     dword ptr [ecx+ebx*4], offset abinary
inc     ebx
inc     esi
cmp     esi, [ebp+var_18]
jl      short loc_100667f0
mov     edx, [ebp+arg_8]
mov     ecx, [edx+30h]
and     ecx, 80000000h
xor     eax, eax
or      eax, ecx
jz      short loc_1006685e
mov     edx, [ebp+var_1c]
mov     eax, 3fh
cmp     [edx+8], eax
jle     short loc_1006685e
lea     ecx, ds:0[ebx*4]
mov     esi, [edi+4]
mov     [ecx+esi], eax
mov     esi, [edi+20h]
mov     dword ptr [ecx+esi], offset abinary
inc     eax
add     ecx, 4
cmp     eax, [edx+8]
jl      short loc_10066845
mov     eax, [ebp+arg_0]
push    edi
push    eax
call    sub_10044250
mov     ecx, [ebp+arg_14]
mov     edx, [ecx+1ch]
mov     [ebp+arg_8], eax
mov     eax, [ebp+var_8]
mov     edi, [eax+1ch]
mov     eax, [eax+20h]
add     esp, 8
mov     [ebp+arg_4], edx
cmp     eax, edi
jg      short loc_100668f0
test    eax, eax
jz      short loc_1006688c
add     eax, eax
jmp     short loc_10066891
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ecx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
mov     esi, ecx
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_10066960
mov     eax, [esi]
test    eax, eax
jz      short loc_100668d4
cmp     ebx, [eax+0fch]
jb      short loc_100668d4
cmp     ebx, [eax+100h]
jnb     short loc_100668d4
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100668e0
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     eax, [ebp+var_8]
inc     dword ptr [eax+1ch]
mov     eax, [eax+4]
mov     ecx, [ebp+arg_4]
mov     esi, [ebp+var_8]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+var_10]
mov     [eax+4], ecx
inc     edx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 29h
mov     eax, edi
mov     ebx, [esi+4]
mov     edi, [esi]
test    ebx, ebx
jz      short loc_10066970
cmp     byte ptr [edi+32h], 0
jnz     short loc_10066970
test    eax, eax
jns     short loc_10066939
mov     eax, [esi+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [ebx+eax*4+10h]
lea     ebx, [ebx+eax*4]
movsx   eax, byte ptr [ebx+1]
call    sub_10025e50
mov     eax, [ebp+arg_8]
xor     ecx, ecx
mov     [ebx+10h], ecx
cmp     eax, ecx
jnz     short loc_10066967
mov     [ebx+10h], ecx
mov     [ebx+1], cl
jmp     short loc_1006697d
mov     eax, 1
jmp     short loc_10066922
mov     [ebx+10h], eax
mov     byte ptr [ebx+1], 0fah
jmp     short loc_1006697d
mov     ecx, [ebp+arg_8]
mov     eax, 0fffffff0h
call    sub_10025e50
mov     edi, [esi+1ch]
mov     ecx, [ebp+arg_14]
mov     esi, [esi+20h]
mov     edx, [ecx+18h]
mov     [ebp+arg_8], edx
cmp     esi, edi
jg      short loc_100669f7
lea     eax, [esi+esi]
test    esi, esi
jnz     short loc_1006699c
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [ecx+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
mov     esi, ecx
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10066a3b
mov     eax, [esi]
test    eax, eax
jz      short loc_100669db
cmp     ebx, [eax+0fch]
jb      short loc_100669db
cmp     ebx, [eax+100h]
jnb     short loc_100669db
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100669e7
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     eax, [ebp+var_8]
inc     dword ptr [eax+1ch]
mov     eax, [eax+4]
mov     ecx, [ebp+arg_8]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     [ebp+arg_4], edi
mov     edi, [ebp+var_8]
mov     byte ptr [eax+3], 0
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 48h
mov     ebx, [ebp+arg_0]
mov     al, [ebx+13h]
test    al, al
jnz     short loc_10066a46
inc     dword ptr [ebx+4ch]
mov     edx, [ebx+4ch]
mov     [ebp+arg_8], edx
jmp     short loc_10066a55
mov     [ebp+arg_4], 1
mov     edi, esi
jmp     short loc_10066a26
dec     al
mov     [ebx+13h], al
movzx   eax, al
mov     ecx, [ebx+eax*4+1ch]
mov     [ebp+arg_8], ecx
mov     edx, [ebp+arg_8]
mov     esi, [ebp+arg_14]
mov     eax, [esi+18h]
mov     ecx, [ebp+var_2c]
push    1
push    edx
push    eax
push    ecx
push    ebx
call    sub_100457b0
mov     edx, [esi+1ch]
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
add     esp, 14h
mov     [ebp+var_2c], edx
cmp     eax, esi
jg      short loc_10066aed
test    eax, eax
jz      short loc_10066a87
add     eax, eax
jmp     short loc_10066a8c
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_10066b18
mov     ebx, [ebp+var_8]
mov     eax, [ebx]
test    eax, eax
jz      short loc_10066acc
cmp     edi, [eax+0fch]
jb      short loc_10066acc
cmp     edi, [eax+100h]
jnb     short loc_10066acc
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10066ad8
push    edi
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [ebx+4], edi
mov     [ebx+20h], edx
mov     edi, ebx
mov     ebx, [ebp+arg_0]
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+var_2c]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [ebp+arg_8]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 61h
jmp     short loc_10066b1e
mov     ebx, [ebp+arg_0]
mov     edi, [ebp+var_8]
mov     ecx, [edi+4]
test    ecx, ecx
jz      short loc_10066b30
mov     eax, [edi+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [ecx+eax*4-11h], 10h
mov     ecx, [ebp+arg_14]
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
mov     edx, [ecx+18h]
mov     [ebp+arg_14], edx
cmp     eax, esi
jg      short loc_10066bb1
test    eax, eax
jz      short loc_10066b4b
add     eax, eax
jmp     short loc_10066b50
mov     eax, 33h
mov     ecx, [ebp+var_8]
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ecx]
call    sub_10009ac0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_10066bdf
mov     ebx, [ebp+var_8]
mov     eax, [ebx]
test    eax, eax
jz      short loc_10066b90
cmp     edi, [eax+0fch]
jb      short loc_10066b90
cmp     edi, [eax+100h]
jnb     short loc_10066b90
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10066b9c
push    edi
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [ebx+4], edi
mov     [ebx+20h], edx
mov     edi, ebx
mov     ebx, [ebp+arg_0]
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
mov     ecx, [ebp+arg_14]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+4], ecx
mov     ecx, [ebp+arg_4]
lea     edx, [ecx+1]
mov     [eax+8], edx
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 5fh
jmp     short loc_10066be8
mov     ebx, [ebp+arg_0]
mov     edi, [ebp+var_8]
mov     ecx, [ebp+arg_4]
mov     edx, [edi+4]
test    edx, edx
jz      short loc_10066bfa
mov     eax, [edi+1ch]
lea     eax, [eax+eax*4]
mov     byte ptr [edx+eax*4-11h], 3
test    ecx, ecx
js      short loc_10066c0f
mov     eax, [edi+1ch]
cmp     eax, ecx
jbe     short loc_10066c0f
mov     edx, [edi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
mov     esi, [ebp+arg_8]
test    esi, esi
jz      short loc_10066c3b
mov     dl, [ebx+13h]
cmp     dl, 8
jnb     short loc_10066c3b
xor     eax, eax
lea     ecx, [ebx+64h]
cmp     [ecx+10h], esi
jz      short loc_10066c5a
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10066c23
movzx   eax, dl
mov     [ebx+eax*4+1ch], esi
inc     byte ptr [ebx+13h]
mov     eax, [ebp+var_30]
test    eax, eax
js      short loc_10066c53
mov     ecx, [edi+1ch]
cmp     ecx, eax
jbe     short loc_10066c53
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
mov     [eax+edx*4+8], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [ecx+8], 1
jmp     short loc_10066c3b
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_4]
mov     ecx, [eax+20h]
mov     eax, [eax+18h]
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, [ebp+arg_8]
mov     [ebp+var_4], ebx
test    eax, eax
jle     short loc_10066c98
mov     edx, [edi+20h]
add     ecx, 10h
cmp     [ecx-8], edx
jnz     short loc_10066c8f
test    byte ptr [ecx], 81h
jnz     short loc_10066c8f
inc     ebx
add     ecx, 28h
dec     eax
jnz     short loc_10066c84
mov     [ebp+var_4], ebx
mov     ecx, [ebp+arg_c]
mov     [ebp+var_8], 0
test    ecx, ecx
jz      short loc_10066ccf
mov     esi, [ecx]
xor     eax, eax
test    esi, esi
jle     short loc_10066cc8
mov     edx, [ecx+8]
mov     ecx, [edx]
cmp     byte ptr [ecx], 98h
jnz     short loc_10066cc8
mov     ecx, [ecx+18h]
cmp     ecx, [edi+20h]
jnz     short loc_10066cc8
inc     eax
add     edx, 14h
cmp     eax, esi
jl      short loc_10066cb1
cmp     eax, esi
jnz     short loc_10066ccf
mov     [ebp+var_8], esi
mov     eax, [ebp+var_8]
add     eax, eax
add     eax, eax
add     eax, eax
lea     edx, [ebx+ebx*4]
lea     edi, [eax+edx*4+2ch]
mov     eax, [ebp+arg_0]
mov     esi, [eax]
test    esi, esi
jz      short loc_10066d10
cmp     byte ptr [esi+32h], 0
jnz     loc_10066e90
cmp     byte ptr [esi+0e2h], 0
jz      short loc_10066d10
movzx   ecx, word ptr [esi+0e0h]
cmp     edi, ecx
jle     loc_10066e2f
inc     dword ptr [esi+0f0h]
lea     eax, [edi-1]
cmp     eax, 7ffffefeh
ja      loc_10066e89
cmp     dword_10080230, 0
jz      loc_10066e7a
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10066d3e
push    eax
call    dword_1008027c
add     esp, 4
lea     ebx, [ebp+var_c]
mov     eax, edi
call    sub_100093d0
mov     eax, dword_10081774
test    eax, eax
jz      short loc_10066d5b
push    eax
call    dword_10080284
add     esp, 4
mov     ebx, [ebp+var_4]
mov     eax, [ebp+var_c]
test    eax, eax
jnz     short loc_10066d6d
test    esi, esi
jz      short loc_10066d6d
mov     byte ptr [esi+32h], 1
mov     esi, eax
test    esi, esi
jz      loc_10066e90
push    edi
push    0
push    esi
call    memset
mov     eax, [ebp+var_4]
lea     edx, [ebx+ebx*2]
mov     ebx, [ebp+var_8]
lea     ecx, [esi+2ch]
lea     edi, [ecx+edx*4]
mov     [esi], eax
mov     eax, [ebp+arg_4]
lea     edx, [edi+ebx*8]
mov     [esi+10h], edx
mov     [esi+8], ebx
mov     [esi+4], ecx
mov     [esi+0ch], edi
mov     eax, [eax+20h]
mov     [ebp+arg_0], eax
mov     eax, [ebp+arg_4]
xor     edx, edx
add     esp, 0ch
cmp     [eax+18h], edx
jle     short loc_10066df7
mov     eax, [ebp+arg_0]
add     eax, 10h
add     ecx, 4
mov     [ebp+arg_0], ecx
mov     ecx, [eax-8]
mov     ebx, [ebp+arg_8]
cmp     ecx, [ebx+20h]
jnz     short loc_10066de8
test    byte ptr [eax], 81h
jnz     short loc_10066de8
mov     ecx, [ebp+arg_0]
mov     ebx, [eax-4]
mov     [ecx-4], ebx
mov     [ecx+4], edx
mov     bl, [eax]
mov     [ecx], bl
add     ecx, 0ch
mov     [ebp+arg_0], ecx
mov     ecx, [ebp+arg_4]
inc     edx
add     eax, 28h
cmp     edx, [ecx+18h]
jl      short loc_10066dc2
mov     ebx, [ebp+var_8]
xor     eax, eax
test    ebx, ebx
jle     short loc_10066e26
xor     ecx, ecx
nop
mov     edx, [ebp+arg_c]
mov     edx, [edx+8]
mov     edx, [ecx+edx]
movsx   edx, word ptr [edx+1ch]
mov     [edi+eax*8], edx
mov     edx, [ebp+arg_c]
mov     edx, [edx+8]
mov     dl, [ecx+edx+0ch]
mov     [edi+eax*8+4], dl
inc     eax
add     ecx, 14h
cmp     eax, ebx
jl      short loc_10066e00
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+0f8h]
test    eax, eax
jnz     short loc_10066e44
inc     dword ptr [esi+0f4h]
jmp     loc_10066d10
mov     edx, [eax]
mov     [esi+0f8h], edx
mov     edx, 1
add     [esi+0e4h], edx
mov     ecx, [esi+0e4h]
add     [esi+0ech], edx
cmp     ecx, [esi+0e8h]
jle     loc_10066d6d
mov     [esi+0e8h], ecx
jmp     loc_10066d6d
push    edi
call    dword_1008024c
add     esp, 4
jmp     loc_10066d61
xor     eax, eax
jmp     loc_10066d65
mov     ecx, [ebp+arg_0]
push    offset aoutofmemory
push    ecx
call    sub_1000bb30
add     esp, 8
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     eax, [eax+34h]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
test    eax, eax
jz      short loc_10066ecf
mov     ecx, [ebx]
cmp     [eax], ecx
jz      short loc_10066ecf
mov     eax, [eax+18h]
test    eax, eax
jnz     short loc_10066ec4
mov     esi, [eax+8]
mov     ecx, [esi]
mov     edx, [ecx+0ch]
push    edi
push    esi
call    edx
add     esp, 8
test    eax, eax
jz      short loc_10066f2f
cmp     eax, 7
jnz     short loc_10066eef
mov     eax, [ebx]
mov     byte ptr [eax+32h], 1
jmp     short loc_10066f2f
mov     ecx, [esi+8]
test    ecx, ecx
jnz     short loc_10066f20
mov     ecx, offset aunknownerror
cmp     eax, 204h
jz      short loc_10066f1b
and     eax, 0ffh
cmp     eax, 1ah
ja      short loc_10066f20
mov     eax, ds:off_100794a0[eax*4]
test    eax, eax
jz      short loc_10066f20
mov     ecx, eax
jmp     short loc_10066f20
mov     ecx, offset aabortduetoroll
push    ecx
push    offset as
push    ebx
call    sub_1000bb30
add     esp, 0ch
mov     ecx, [esi+8]
push    ecx
call    sub_10009770
mov     dword ptr [esi+8], 0
xor     esi, esi
add     esp, 4
cmp     [edi], esi
jle     short loc_10066f8c
xor     ebx, ebx
lea     ebx, [ebx+0]
mov     edx, [edi+4]
cmp     byte ptr [edx+ebx+5], 0
jnz     short loc_10066f7a
mov     eax, [edi+10h]
cmp     dword ptr [eax+esi*8], 0
jle     short loc_10066f7a
mov     ecx, [ebp+arg_4]
mov     edx, [ecx]
mov     eax, [ebp+arg_0]
push    edx
push    offset atablesxbestind
push    eax
call    sub_1000bb30
add     esp, 0ch
inc     esi
add     ebx, 0ch
cmp     esi, [edi]
jl      short loc_10066f50
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+44h]
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [ebx+44h]
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
mov     ecx, [ebp+arg_8]
mov     eax, [ecx+0ch]
push    ebx
mov     ebx, [ebp+arg_24]
push    esi
mov     esi, [ebp+arg_20]
mov     [esp+1ch+var_8], eax
xor     eax, eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
mov     [esi+10h], eax
mov     [esi+14h], eax
mov     [esi+18h], eax
mov     [esi+1ch], eax
mov     [esi+20h], eax
push    edi
mov     dword ptr [esi], 8000000h
mov     edi, [ebx]
test    edi, edi
jnz     short loc_10067003
mov     edx, [ebp+arg_1c]
mov     eax, [ebp+arg_4]
push    edx
push    ecx
mov     ecx, [ebp+arg_0]
push    eax
push    ecx
call    sub_10066c60
mov     edi, eax
add     esp, 10h
mov     [ebx], edi
test    edi, edi
jz      loc_100671aa
cmp     dword ptr [edi], 0
mov     edx, [edi+10h]
mov     eax, [edi+4]
mov     [esp+20h+var_c], edx
mov     [esp+20h+var_10], 0
jle     short loc_10067059
lea     ebx, [eax+5]
lea     ecx, [ecx+0]
mov     eax, [ebx+3]
lea     edx, [eax+eax*4]
mov     eax, [ebp+arg_4]
mov     ecx, [eax+20h]
mov     eax, [ecx+edx*8+18h]
mov     ecx, [ecx+edx*8+1ch]
and     eax, [ebp+arg_c]
and     ecx, [ebp+arg_10]
or      eax, ecx
jz      short loc_10067042
xor     eax, eax
jmp     short loc_10067047
mov     eax, 1
mov     [ebx], al
mov     eax, [esp+20h+var_10]
inc     eax
add     ebx, 0ch
mov     [esp+20h+var_10], eax
cmp     eax, [edi]
jl      short loc_10067020
mov     ecx, [edi]
mov     edx, [esp+20h+var_c]
add     ecx, ecx
add     ecx, ecx
add     ecx, ecx
push    ecx
push    0
push    edx
call    memset
xor     ebx, ebx
add     esp, 0ch
cmp     [edi+1ch], ebx
jz      short loc_10067084
mov     eax, [edi+18h]
push    eax
call    sub_10009770
add     esp, 4
fld     ds:dbl_1007d018
mov     ecx, [edi+8]
fstp    qword ptr [edi+24h]
mov     [edi+18h], ebx
mov     [edi+14h], ebx
mov     [edi+1ch], ebx
mov     [edi+20h], ebx
mov     [esp+20h+var_4], ecx
cmp     [ebp+arg_1c], ebx
jnz     short loc_100670a8
mov     [edi+8], ebx
mov     edx, [esp+20h+var_8]
mov     eax, [ebp+arg_0]
push    edx
push    eax
call    sub_10066eb0
add     esp, 8
test    eax, eax
jnz     loc_100671aa
mov     eax, [edi+4]
xor     edx, edx
cmp     [edi], ebx
jle     short loc_10067105
add     eax, 8
mov     [esp+20h+var_10], eax
mov     ecx, [esp+20h+var_c]
cmp     [ecx+edx*8], ebx
jle     short loc_100670f5
mov     eax, [eax]
lea     ecx, [eax+eax*4]
mov     eax, [ebp+arg_4]
mov     eax, [eax+20h]
mov     ebx, [eax+ecx*8+18h]
or      [esi+1ch], ebx
mov     ecx, [eax+ecx*8+1ch]
or      [esi+20h], ecx
xor     ebx, ebx
mov     eax, [esp+20h+var_10]
inc     edx
add     eax, 0ch
mov     [esp+20h+var_10], eax
cmp     edx, [edi]
jl      short loc_100670d1
mov     ecx, [ebp+arg_1c]
fld     qword ptr [edi+24h]
cmp     ecx, ebx
jz      short loc_10067154
cmp     [edi+20h], ebx
jnz     short loc_10067154
fld1
fld     st
fld     ds:dbl_1007cf00
fld     st
fxch    st(4)
fcom    st(1)
fnstsw  ax
test    ah, 41h
jz      short loc_10067137
fstp    st(4)
fstp    st
fstp    st(1)
jmp     short loc_10067150
fxch    st(4)
fxch    st(2)
fxch    st(2)
fadd    st, st(3)
fxch    st(4)
fmul    st, st(1)
fcom    st(2)
fnstsw  ax
test    ah, 5
jnp     short loc_10067133
fstp    st
fstp    st
fstp    st(1)
fxch    st(1)
fmul    st, st(1)
faddp   st(1), st
fld     ds:dbl_1007d018
fcom    st(1)
fnstsw  ax
test    ah, 5
jp      short loc_10067167
fstp    st(1)
jmp     short loc_10067169
fstp    st
fstp    qword ptr [esi+14h]
mov     [esi+10h], edi
cmp     [edi+20h], ebx
jz      short loc_1006717a
or      dword ptr [esi], 1000000h
mov     eax, [ebp+arg_18]
mov     edx, [esp+20h+var_4]
push    esi
push    ecx
mov     ecx, [ebp+arg_14]
push    eax
mov     eax, [ebp+arg_c]
push    ecx
mov     ecx, [ebp+arg_8]
mov     [esi+4], ebx
mov     [edi+8], edx
mov     edx, [ebp+arg_10]
push    edx
mov     edx, [ebp+arg_4]
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    eax
call    sub_10065e60
add     esp, 24h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ach
mov     ecx, [ebp+arg_24]
fld     ds:dbl_1007d010
push    ebx
push    esi
mov     esi, [ebp+arg_8]
mov     eax, [esi+20h]
mov     [ebp+var_18], eax
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+1ch], eax
mov     [ecx+20h], eax
fstp    qword ptr [ecx+14h]
mov     cl, [esi+1ch]
mov     eax, [esi+38h]
not     cl
movzx   ecx, cl
and     ecx, 8
shl     ecx, 4
or      ecx, 3
push    edi
mov     [ebp+var_5c], 0ffffffffh
mov     [ebp+var_64], ecx
test    eax, eax
jz      short loc_1006722b
mov     [ebp+var_28], eax
mov     [ebp+var_8], eax
mov     [ebp+var_38], 0ffffcfffh
mov     [ebp+var_30], ecx
jmp     short loc_1006729e
push    30h
lea     edx, [ebp+var_a8]
push    0
push    edx
call    memset
lea     eax, [ebp+var_5c]
lea     edx, [ebp+var_6c]
mov     [ebp+var_a4], eax
mov     eax, [esi+0ch]
mov     ecx, 1
mov     [ebp+var_a0], edx
mov     edx, [eax+18h]
add     esp, 0ch
cmp     byte ptr [esi+1dh], 0
mov     [ebp+var_84], ecx
mov     [ebp+var_7c], 5
mov     [ebp+var_9c], eax
mov     [ebp+var_6c], edx
mov     [ebp+var_68], ecx
jnz     short loc_10067280
mov     eax, [eax+10h]
mov     [ebp+var_94], eax
lea     ecx, [ebp+var_a8]
mov     [ebp+var_28], ecx
mov     [ebp+var_38], 0fff0ffffh
mov     [ebp+var_30], 3
mov     [ebp+var_8], 0
fld1
xor     edx, edx
cmp     [ebp+arg_1c], edx
setnz   dl
xor     eax, eax
cmp     [ebp+arg_20], eax
setnz   al
mov     [ebp+var_60], edx
mov     [ebp+var_58], eax
mov     esi, [ebp+var_28]
fstp    [ebp+var_50]
mov     ecx, [esi+8]
mov     edx, [ebp+var_60]
mov     eax, [ebp+var_58]
xor     edi, edi
mov     [ebp+var_14], ecx
mov     [ebp+var_4], edi
mov     [ebp+var_20], edi
mov     [ebp+var_1c], edi
mov     [ebp+var_24], edi
mov     [ebp+var_c], 1
mov     [ebp+var_10], edi
mov     [ebp+var_44], edx
mov     [ebp+var_40], eax
mov     [ebp+var_34], edi
mov     [ebp+var_2c], edi
cmp     [esi+24h], edi
jle     loc_10067395
mov     ecx, [esi+4]
mov     edx, [ebp+var_8]
mov     ebx, [ecx+edi*4]
mov     eax, [ebp+var_30]
mov     ecx, [ebp+arg_10]
push    edx
mov     edx, [ebp+arg_c]
push    eax
mov     eax, [ebp+var_18]
push    ecx
mov     ecx, [ebp+arg_4]
push    edx
push    eax
push    ecx
call    sub_10064600
add     esp, 18h
test    eax, eax
jz      short loc_10067392
movzx   ecx, word ptr [eax+10h]
or      [ebp+var_4], 11000h
test    cl, 1
jz      short loc_10067371
mov     ecx, [eax]
mov     dx, [ecx+2]
or      [ebp+var_4], 40000h
mov     ebx, 800h
and     dx, bx
cmp     dx, bx
jnz     short loc_1006735b
mov     ecx, [ebp+var_c]
imul    ecx, 19h
mov     [ebp+var_c], ecx
mov     [ebp+var_24], 1
jmp     short loc_1006737c
mov     ecx, [ecx+10h]
test    ecx, ecx
jz      short loc_1006737c
mov     ecx, [ecx]
test    ecx, ecx
jz      short loc_1006737c
imul    ecx, [ebp+var_c]
mov     [ebp+var_c], ecx
jmp     short loc_1006737c
test    cl, cl
jns     short loc_1006737c
or      [ebp+var_4], 80000h
mov     edx, [eax+18h]
mov     eax, [eax+1ch]
or      [ebp+var_20], edx
or      [ebp+var_1c], eax
inc     edi
cmp     edi, [esi+24h]
jl      loc_100672f5
mov     [ebp+var_2c], edi
mov     eax, [esi+24h]
cmp     edi, eax
jnz     short loc_100673bb
cmp     byte ptr [esi+2ch], 0
jz      short loc_100673bb
test    [ebp+var_4], 0c0000h
jnz     loc_10067498
or      [ebp+var_4], 4000000h
jmp     loc_10067498
cmp     byte ptr [esi+2eh], 0
jnz     loc_10067498
cmp     edi, eax
jnz     short loc_100673ce
or      ebx, 0ffffffffh
jmp     short loc_100673d4
mov     ecx, [esi+4]
mov     ebx, [ecx+edi*4]
mov     edx, [ebp+var_8]
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
push    edx
mov     edx, [ebp+var_18]
push    3ch
push    eax
mov     eax, [ebp+arg_4]
push    ecx
push    edx
push    eax
call    sub_10064600
add     esp, 18h
test    eax, eax
jz      loc_10067498
mov     ecx, [ebp+var_8]
mov     edx, [ebp+arg_10]
mov     eax, [ebp+arg_c]
push    ecx
mov     ecx, [ebp+var_18]
push    18h
push    edx
mov     edx, [ebp+arg_4]
push    eax
push    ecx
push    edx
call    sub_10064600
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+arg_c]
mov     esi, eax
mov     eax, [ebp+var_8]
push    eax
mov     eax, [ebp+var_18]
push    24h
push    ecx
mov     ecx, [ebp+arg_4]
push    edx
push    eax
push    ecx
call    sub_10064600
fld1
add     esp, 30h
fst     [ebp+var_50]
test    eax, eax
jz      short loc_10067449
fstp    st
fld     ds:dbl_1007cef8
fst     [ebp+var_50]
test    esi, esi
jz      short loc_10067472
fmul    ds:dbl_1007cef8
mov     edx, [esi+18h]
mov     ecx, [esi+1ch]
or      [ebp+var_4], 100000h
or      [ebp+var_20], edx
fstp    [ebp+var_50]
or      [ebp+var_1c], ecx
mov     [ebp+var_10], 1
jmp     short loc_10067474
fstp    st
test    eax, eax
jz      short loc_1006748e
mov     edx, [eax+18h]
mov     eax, [eax+1ch]
inc     [ebp+var_10]
or      [ebp+var_4], 200000h
or      [ebp+var_20], edx
or      [ebp+var_1c], eax
or      [ebp+var_4], 22000h
mov     esi, [ebp+var_28]
mov     edx, [ebp+var_4]
mov     eax, [ebp+arg_1c]
mov     ebx, [ebp+arg_4]
lea     ecx, [ebp+var_54]
push    ecx
mov     ecx, [ebp+var_18]
push    edx
mov     edx, [ebx+4]
push    edi
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    esi
push    edx
push    eax
call    sub_10065c20
add     esp, 20h
test    eax, eax
jz      short loc_100674de
mov     ecx, [ebp+var_54]
neg     ecx
sbb     ecx, ecx
and     ecx, 2000000h
or      ecx, 1022000h
or      [ebp+var_4], ecx
mov     [ebp+var_44], 0
mov     edx, [ebp+arg_20]
mov     eax, [ebp+var_18]
mov     ecx, [ebp+arg_0]
push    edi
push    edx
push    eax
push    esi
push    ebx
push    ecx
call    sub_100659d0
add     esp, 18h
test    eax, eax
jz      short loc_10067510
test    [ebp+var_4], 40000h
jnz     short loc_10067510
or      [ebp+var_4], 40022000h
mov     [ebp+var_40], 0
cmp     [ebp+var_8], 0
jz      short loc_1006756c
cmp     [ebp+var_4], 0
jz      short loc_1006756c
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+var_8]
mov     ebx, [eax+2ch]
mov     edi, [eax+30h]
mov     eax, [ecx+24h]
test    eax, eax
jle     short loc_10067558
mov     esi, [ecx+4]
mov     [ebp+var_3c], eax
mov     ecx, [esi]
cmp     ecx, 3fh
jge     short loc_10067550
mov     eax, 1
xor     edx, edx
call    __allshl
not     eax
not     edx
and     ebx, eax
and     edi, edx
add     esi, 4
dec     [ebp+var_3c]
jnz     short loc_10067535
or      ebx, edi
jnz     short loc_10067565
or      [ebp+var_4], 800000h
jmp     short loc_1006756c
mov     [ebp+var_34], 1
mov     edx, [ebp+var_14]
mov     eax, [ebp+var_2c]
mov     ecx, [edx+eax*4]
mov     edx, ecx
imul    edx, [ebp+var_c]
mov     [ebp+var_3c], edx
fild    [ebp+var_3c]
test    edx, edx
jns     short loc_1006758b
fadd    ds:dbl_1007cf80
cmp     [ebp+var_24], 0
jz      loc_1006762d
mov     eax, [ebp+var_14]
fld     st
mov     edx, [eax]
fld     ds:dbl_1007d008
mov     eax, edx
fmul    st(1), st
mov     [ebp+var_24], eax
fild    [ebp+var_24]
test    eax, eax
jns     short loc_100675b6
fadd    ds:dbl_1007cf80
fcomp   st(2)
fnstsw  ax
fstp    st(1)
test    ah, 5
jp      short loc_100675ef
shr     edx, 1
fstp    st(1)
mov     [ebp+var_24], edx
fild    [ebp+var_24]
jns     short loc_100675d3
fadd    ds:dbl_1007cf80
mov     [ebp+var_24], ecx
fild    [ebp+var_24]
test    ecx, ecx
jns     short loc_100675e3
fadd    ds:dbl_1007cf80
fdivr   st, st(1)
call    __ftol2_sse
fxch    st(1)
mov     [ebp+var_c], eax
fxch    st(1)
fdiv    [ebp+var_50]
fld1
fcom    st(1)
fnstsw  ax
test    ah, 41h
jnz     short loc_10067605
fstp    st(1)
fld     st
fxch    st(1)
test    [ebp+var_4], 100f3000h
jnz     short loc_10067635
mov     ecx, [ebp+var_14]
mov     edx, [ecx]
add     edx, edx
add     edx, edx
mov     [ebp+var_34], edx
fild    [ebp+var_34]
jns     short loc_10067625
fadd    ds:dbl_1007cf80
fld     ds:dbl_1007cf00
jmp     short loc_10067691
fld     ds:dbl_1007d008
jmp     short loc_100675ef
mov     eax, [ebp+var_14]
fld     st
fld     ds:dbl_1007cf00
mov     ecx, [eax]
fld     st
fild    dword ptr [eax]
test    ecx, ecx
jns     short loc_10067650
fadd    ds:dbl_1007cf80
fcom    st(2)
fnstsw  ax
test    ah, 41h
jz      short loc_10067663
fstp    st(1)
fstp    st
jmp     short loc_10067678
fxch    st(1)
fxch    st(3)
fxch    st(3)
fadd    st, st(4)
fxch    st(1)
fmul    st, st(2)
fcom    st(3)
fnstsw  ax
test    ah, 5
jnp     short loc_1006765f
fstp    st
fstp    st(2)
cmp     [ebp+var_8], 0
fild    [ebp+var_c]
jz      short loc_10067689
cmp     [ebp+var_34], 0
jz      short loc_10067689
fadd    st, st(4)
fmulp   st(2), st
fxch    st(1)
fadd    st, st(3)
fxch    st(1)
cmp     [ebp+var_44], 0
jz      short loc_100676e1
fld     st(2)
fld     st(1)
fxch    st(5)
fcom    st(2)
fnstsw  ax
test    ah, 41h
jz      short loc_100676bc
fstp    st(5)
fmul    st, st(4)
fld     ds:dbl_1007d000
fmul    st(1), st
fxch    st(1)
faddp   st(3), st
jmp     short loc_100676e7
fxch    st(5)
fxch    st(1)
fxch    st(1)
fadd    st, st(4)
fxch    st(5)
fmul    st, st(2)
fcom    st(1)
fnstsw  ax
test    ah, 5
jnp     short loc_100676b8
fstp    st
fxch    st(4)
fmul    st, st(4)
fld     ds:dbl_1007d000
fmul    st(1), st
fxch    st(1)
faddp   st(3), st
jmp     short loc_100676e7
fld     ds:dbl_1007d000
cmp     [ebp+var_40], 0
jz      short loc_10067729
fstp    st(5)
fld     st(2)
fld     st(1)
fxch    st(5)
fcom    st(2)
fnstsw  ax
test    ah, 41h
jz      short loc_10067706
fstp    st(5)
jmp     short loc_1006771b
fxch    st(5)
fxch    st(1)
fxch    st(1)
fadd    st, st(4)
fxch    st(5)
fmul    st, st(2)
fcom    st(1)
fnstsw  ax
test    ah, 5
jnp     short loc_10067702
fstp    st
fxch    st(4)
fmul    st, st(4)
fmul    st, st(5)
faddp   st(2), st
fld     ds:dbl_1007d008
fxch    st(5)
fxch    st(4)
fcom    st(5)
fnstsw  ax
test    ah, 41h
jnz     loc_10067828
mov     edx, [ebp+arg_24]
fld     qword ptr [edx+14h]
fcomp   st(3)
fnstsw  ax
test    ah, 1
jnz     loc_10067828
mov     eax, [ebp+var_2c]
mov     edi, [ebp+arg_4]
mov     ecx, [ebp+var_10]
mov     edx, [edi+4]
mov     [ebp+var_14], eax
mov     eax, [edx]
mov     [ebp+var_10], ecx
xor     ecx, ecx
test    eax, eax
jle     short loc_10067777
mov     esi, [ebp+var_18]
add     edx, 4
cmp     [edx], esi
jz      short loc_10067790
inc     ecx
add     edx, 4
cmp     ecx, eax
jl      short loc_1006776b
xor     ebx, ebx
mov     [ebp+var_74], ebx
mov     esi, [edi+20h]
fld     ds:dbl_1007cf78
mov     edi, [edi+18h]
mov     edx, [ebp+arg_14]
add     esi, 10h
jmp     short loc_100677a5
mov     eax, 1
xor     edx, edx
call    __allshl
mov     ebx, eax
mov     [ebp+var_74], edx
jmp     short loc_1006777c
fxch    st(1)
test    edi, edi
jz      short loc_10067822
test    byte ptr [esi+2], 2
jnz     short loc_100677db
mov     eax, [esi+10h]
mov     ecx, [esi+14h]
and     ecx, [ebp+arg_18]
and     eax, edx
cmp     eax, ebx
jnz     short loc_100677db
cmp     ecx, [ebp+var_74]
jnz     short loc_100677db
movzx   eax, word ptr [esi]
test    al, 83h
jz      short loc_100677ff
cmp     [ebp+var_14], 0
jz      short loc_100677d5
dec     [ebp+var_14]
jmp     short loc_100677db
fxch    st(1)
fdiv    st, st(2)
fxch    st(1)
fxch    st(1)
dec     edi
fcom    st(6)
add     esi, 28h
fnstsw  ax
test    ah, 41h
jz      short loc_100677a3
fstp    st(2)
fstp    st
fstp    st(3)
fxch    st(2)
fcom    st(3)
fnstsw  ax
test    ah, 5
jp      short loc_10067830
fstp    st
jmp     short loc_10067832
test    al, 3ch
jz      short loc_10067814
cmp     [ebp+var_10], 0
jz      short loc_1006780e
dec     [ebp+var_10]
jmp     short loc_100677db
fxch    st(1)
fdiv    st, st(5)
jmp     short loc_100677d9
mov     ecx, 800h
cmp     ax, cx
jz      short loc_100677db
fmul    st(1), st
jmp     short loc_100677db
fstp    st(2)
fstp    st(1)
jmp     short loc_100677ee
fstp    st(1)
fstp    st(3)
fstp    st(3)
jmp     short loc_10067838
fstp    st(3)
fxch    st(1)
fxch    st(2)
fxch    st(1)
mov     edx, [ebp+var_8]
mov     ecx, [ebp+var_4]
test    edx, edx
jz      short loc_10067846
test    ecx, ecx
jz      short loc_10067891
mov     esi, [ebp+arg_24]
fld     qword ptr [esi+14h]
fcomp   st(3)
fnstsw  ax
test    ah, 41h
jz      short loc_1006786d
fld     qword ptr [esi+14h]
fcomp   st(3)
fnstsw  ax
test    ah, 1
jnz     short loc_10067894
fld     qword ptr [esi+8]
fcomp   st(2)
fnstsw  ax
test    ah, 41h
jnz     short loc_10067894
and     ecx, [ebp+var_38]
fxch    st(2)
mov     eax, [ebp+var_20]
fstp    qword ptr [esi+14h]
mov     [esi+1ch], eax
mov     eax, [ebp+var_1c]
fstp    qword ptr [esi+8]
mov     [esi], ecx
mov     ecx, [ebp+var_2c]
mov     [esi+20h], eax
mov     [esi+4], ecx
mov     [esi+10h], edx
jmp     short loc_10067898
mov     esi, [ebp+arg_24]
fstp    st(1)
fstp    st(1)
mov     ebx, [ebp+arg_8]
cmp     dword ptr [ebx+38h], 0
jnz     short loc_100678c5
mov     eax, [ebp+var_28]
mov     eax, [eax+14h]
mov     edx, [ebp+var_64]
mov     [ebp+var_38], 0ffffcfffh
mov     [ebp+var_30], edx
mov     [ebp+var_28], eax
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_100672b6
mov     esi, [ebp+arg_24]
mov     eax, [ebp+arg_1c]
fstp    st
mov     edi, [ebp+arg_0]
test    eax, eax
jnz     short loc_100678e2
mov     ecx, [edi]
test    dword ptr [ecx+18h], 1000000h
jz      short loc_100678e2
or      dword ptr [esi], 2000000h
mov     edx, [ebp+arg_18]
mov     ecx, [ebp+arg_10]
push    esi
push    eax
mov     eax, [ebp+arg_14]
push    edx
mov     edx, [ebp+arg_c]
push    eax
mov     eax, [ebp+arg_4]
push    ecx
push    edx
push    ebx
push    eax
push    edi
call    sub_10065e60
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+arg_c]
add     esp, 24h
push    esi
push    ecx
mov     ecx, [ebp+arg_4]
push    edx
mov     edx, edi
call    sub_10066180
mov     eax, [ebp+var_30]
add     esp, 0ch
or      [esi], eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    edi
mov     edi, [eax+0ch]
test    byte ptr [edi+22h], 10h
jz      short loc_1006798b
lea     edi, [ebp+var_4]
push    edi
push    ecx
mov     ecx, [ebp+arg_c]
push    0
push    ecx
mov     ecx, [ebp+arg_8]
push    ecx
mov     ecx, [ebp+arg_4]
push    ecx
mov     ecx, [ebp+arg_0]
push    ecx
push    eax
push    edx
push    esi
mov     [ebp+var_4], 0
call    sub_10066fa0
mov     eax, [ebp+var_4]
add     esp, 28h
cmp     dword ptr [eax+1ch], 0
jz      short loc_1006797f
mov     edx, [eax+18h]
push    edx
call    sub_10009770
mov     eax, [ebp+var_4]
add     esp, 4
mov     ecx, [esi]
call    sub_10009810
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ecx
mov     ecx, [ebp+arg_c]
push    0
push    0
push    ecx
mov     ecx, [ebp+arg_8]
push    ecx
mov     ecx, [ebp+arg_4]
push    ecx
mov     ecx, [ebp+arg_0]
push    ecx
push    eax
push    edx
push    esi
call    sub_100671c0
add     esp, 28h
pop     edi
mov     esp, ebp
pop     ebp
retn
test    eax, eax
jz      short locret_100679ed
mov     dl, 0ffh
push    edi
mov     cl, [eax+12h]
test    cl, 4
jnz     short loc_100679ec
cmp     dword ptr [esi+14h], 0
jz      short loc_100679cd
mov     edi, [eax]
test    byte ptr [edi+2], 1
jz      short loc_100679ec
or      cl, 4
mov     [eax+12h], cl
mov     ecx, [eax+4]
test    ecx, ecx
js      short loc_100679ec
mov     eax, [eax+14h]
mov     eax, [eax+20h]
lea     ecx, [ecx+ecx*4]
add     [eax+ecx*8+13h], dl
lea     eax, [eax+ecx*8]
jz      short loc_100679b7
pop     edi
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     ebx, eax
mov     eax, [ebp+arg_0]
push    edi
mov     edi, [eax+8]
mov     esi, ecx
test    ebx, ebx
jz      loc_10067a8b
mov     al, 62h
test    esi, esi
jle     short loc_10067a1d
nop
cmp     [ebx], al
jnz     short loc_10067a1d
inc     [ebp+arg_4]
dec     esi
inc     ebx
test    esi, esi
jg      short loc_10067a10
cmp     esi, 1
jle     short loc_10067a2e
cmp     [ebx+esi-1], al
jnz     short loc_10067a2e
dec     esi
cmp     esi, 1
jg      short loc_10067a22
test    esi, esi
jle     short loc_10067a8b
mov     eax, [edi+1ch]
mov     [ebp+var_4], eax
cmp     [edi+20h], eax
jg      short loc_10067a49
call    sub_10025810
test    eax, eax
jnz     short loc_10067a6f
mov     eax, [ebp+var_4]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+arg_4]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], esi
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1eh
push    ebx
push    edi
mov     ecx, esi
or      eax, 0ffffffffh
call    sub_10025f90
mov     edi, [ebp+arg_4]
mov     eax, [ebp+arg_0]
add     esp, 8
mov     ecx, esi
call    sub_100384f0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
mov     ebx, eax
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [eax]
mov     al, [esi]
push    edi
mov     edi, [ebx+8]
cmp     al, 4ch
jnz     short loc_10067ae2
mov     ecx, [ebp+arg_8]
mov     edx, [esi+0ch]
push    ecx
push    edx
push    ebx
call    sub_10038b70
add     esp, 0ch
mov     [ebp+var_4], eax
mov     esi, [ebp+arg_4]
mov     eax, [ebp+arg_0]
call    sub_100679b0
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     al, 49h
jnz     short loc_10067b21
mov     esi, [edi+1ch]
mov     ebx, [ebp+arg_8]
mov     [ebp+var_4], ebx
cmp     [edi+20h], esi
jg      short loc_10067afd
call    sub_10025810
test    eax, eax
jnz     short loc_10067acd
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     [eax+3], cl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0ah
jmp     short loc_10067acd
mov     edx, [ebp+arg_8]
push    0
push    esi
mov     [ebp+var_4], edx
call    sub_10037460
mov     [ebp+var_14], eax
mov     eax, [esi+18h]
mov     esi, [edi+1ch]
add     esp, 8
mov     [ebp+var_8], eax
cmp     [edi+20h], esi
jg      short loc_10067b4c
call    sub_10025810
test    eax, eax
jnz     short loc_10067b73
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     edx, [ebp+var_8]
xor     ecx, ecx
mov     [eax+3], cl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 48h
jmp     short loc_10067b75
xor     ecx, ecx
mov     esi, [ebp+arg_4]
cmp     [esi+3ch], ecx
jnz     short loc_10067b87
mov     eax, edi
call    sub_10025c00
mov     [esi+24h], eax
inc     dword ptr [esi+3ch]
mov     eax, [esi+3ch]
mov     edx, [esi+40h]
lea     ecx, ds:0[eax*8]
mov     eax, [ebx]
push    ecx
mov     ebx, edx
mov     [ebp+var_c], edx
mov     [ebp+var_10], eax
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jnz     short loc_10067bbb
mov     eax, [ebp+var_c]
mov     ecx, [ebp+var_10]
call    sub_10009810
mov     [esi+40h], ebx
test    ebx, ebx
jz      short loc_10067c1f
cmp     [ebp+var_14], 1
mov     eax, [esi+3ch]
lea     ebx, [ebx+eax*8-8]
mov     eax, [ebp+var_8]
mov     [ebx], eax
jnz     short loc_10067be7
mov     ecx, [ebp+arg_8]
push    ecx
push    eax
push    41h
mov     eax, edi
call    sub_10025990
add     esp, 0ch
jmp     short loc_10067bfa
mov     edx, [ebp+arg_8]
push    edx
push    0
push    eax
push    1dh
mov     eax, edi
call    sub_10025890
add     esp, 10h
mov     [ebx+4], eax
mov     eax, [ebp+arg_8]
push    eax
push    49h
mov     eax, edi
call    sub_10025940
mov     eax, [ebp+arg_0]
add     esp, 8
call    sub_100679b0
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
mov     dword ptr [esi+3ch], 0
call    sub_100679b0
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     eax, [ebp+arg_4]
mov     edx, [eax+4]
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [eax+18h]
mov     [ebp+var_10], edx
add     edx, [ebp+size]
mov     [ebp+var_18], esi
mov     esi, [eax+10h]
mov     eax, [ecx+4ch]
lea     ebx, [eax+1]
add     eax, edx
push    edi
mov     edi, [ecx+8]
mov     [ecx+4ch], eax
mov     eax, edi
mov     [ebp+var_14], esi
mov     [ebp+var_8], ebx
mov     [ebp+var_1c], edx
call    sub_1004b940
mov     ebx, eax
mov     eax, [ebp+arg_0]
mov     esi, [eax]
test    ebx, ebx
jnz     short loc_10067c8f
mov     [ebp+var_4], ebx
jmp     short loc_10067cc9
cmp     byte ptr [ebx], 0
mov     eax, ebx
jz      short loc_10067c9c
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10067c96
sub     eax, ebx
and     eax, 3fffffffh
lea     ecx, [eax+1]
mov     [ebp+size], ecx
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_10067cc2
mov     ecx, [ebp+size]
push    ecx
push    ebx
push    esi
call    memcpy
add     esp, 0ch
mov     [ebp+var_4], esi
test    esi, esi
jnz     short loc_10067cd2
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     byte ptr [eax+32h], 1
cmp     [ebp+var_10], 0
mov     [ebp+size], 0
jle     loc_10067ed1
mov     eax, [ebp+var_14]
mov     ecx, [eax+4]
mov     edx, [ebp+size]
mov     ebx, [ecx+edx*4]
mov     edx, [ebp+arg_10]
push    eax
mov     eax, [ebp+arg_4]
mov     ecx, [eax]
mov     eax, [ebp+arg_c]
push    ecx
mov     ecx, [ebp+var_18]
push    edx
mov     edx, [ebp+arg_8]
push    eax
push    ecx
push    edx
call    sub_10064600
mov     esi, eax
add     esp, 18h
mov     [ebp+var_c], esi
test    esi, esi
jz      loc_10067ebf
mov     ebx, [ebp+size]
add     ebx, [ebp+var_8]
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
push    ebx
push    edx
push    esi
call    sub_10067aa0
mov     edx, eax
add     esp, 0ch
mov     [ebp+var_20], edx
cmp     edx, ebx
jz      loc_10067dc4
cmp     [ebp+var_1c], 1
jnz     short loc_10067d8a
mov     ebx, [ebp+var_8]
test    ebx, ebx
jz      short loc_10067d7c
mov     ecx, [ebp+arg_0]
cmp     byte ptr [ecx+13h], 8
jnb     short loc_10067d7c
xor     eax, eax
add     ecx, 64h
lea     ebx, [ebx+0]
cmp     [ecx+10h], ebx
jz      short loc_10067d81
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_10067d60
mov     eax, [ebp+arg_0]
movzx   ecx, byte ptr [eax+13h]
mov     [eax+ecx*4+1ch], ebx
inc     byte ptr [eax+13h]
mov     [ebp+var_8], edx
jmp     short loc_10067dc4
mov     byte ptr [ecx+8], 1
mov     [ebp+var_8], edx
jmp     short loc_10067dc4
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_10067d9e
call    sub_10025810
test    eax, eax
jnz     short loc_10067dc1
mov     edx, [ebp+var_20]
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 0fh
mov     esi, [ebp+var_c]
test    byte ptr [esi+10h], 81h
jnz     loc_10067e9d
mov     edx, [esi]
mov     eax, [edx+0ch]
mov     ecx, [ebp+arg_4]
mov     edx, [ecx+20h]
mov     [ebp+var_c], eax
mov     [ebp+var_20], edx
nop
mov     cl, [eax]
cmp     cl, 9dh
jz      short loc_10067dec
cmp     cl, 9ch
jnz     short loc_10067df1
mov     eax, [eax+8]
jmp     short loc_10067de0
mov     cl, [eax]
cmp     cl, 84h
jnz     short loc_10067dfb
mov     cl, [eax+23h]
cmp     cl, 5eh
jz      short loc_10067e4c
cmp     cl, 80h
jbe     short loc_10067e0a
cmp     cl, 83h
jbe     short loc_10067e4c
mov     ebx, [edi+1ch]
cmp     [edi+20h], ebx
jg      short loc_10067e1b
call    sub_10025810
test    eax, eax
jnz     short loc_10067e4c
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_8]
mov     esi, [ebp+size]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
lea     ecx, [esi+edx]
mov     edx, [ebp+var_20]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 49h
jmp     short loc_10067e4f
mov     esi, [ebp+size]
mov     eax, [ebp+var_4]
test    eax, eax
jz      short loc_10067ea0
mov     bl, [esi+eax]
mov     eax, [ebp+var_c]
call    sub_100357e0
test    al, al
jz      short loc_10067e74
test    bl, bl
jz      short loc_10067e78
cmp     al, 63h
jge     short loc_10067e85
cmp     bl, 63h
jl      short loc_10067e7e
jmp     short loc_10067e85
test    bl, bl
jz      short loc_10067e7e
add     al, bl
cmp     al, 62h
jnz     short loc_10067e85
mov     eax, [ebp+var_4]
mov     byte ptr [esi+eax], 62h
mov     ebx, [ebp+var_4]
mov     dl, [esi+ebx]
mov     ecx, [ebp+var_c]
call    sub_100372b0
test    eax, eax
jz      short loc_10067ea0
mov     byte ptr [esi+ebx], 62h
jmp     short loc_10067ea0
mov     esi, [ebp+size]
inc     esi
mov     [ebp+size], esi
cmp     esi, [ebp+var_10]
jl      loc_10067ce3
mov     ecx, [ebp+arg_18]
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_8]
mov     [ecx], edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_18]
mov     ecx, [ebp+var_4]
mov     [eax], ecx
mov     eax, [ebp+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
mov     edx, [ebp+arg_18]
pop     edi
pop     esi
mov     [edx], eax
mov     eax, [ebp+var_8]
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, [ebp+arg_4]
mov     ecx, [eax+10h]
push    ebx
mov     ebx, [edx+0ch]
push    esi
push    edi
mov     edi, [eax+4]
mov     [ebp+var_c], ecx
mov     ecx, [ecx+4]
xor     esi, esi
mov     [ebp+var_8], ebx
mov     [ebp+var_4], ecx
cmp     edi, esi
jnz     short loc_10067f28
test    dword ptr [eax], 300000h
jnz     short loc_10067f28
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_0]
push    2
push    offset asc_1007c98c
lea     eax, [ebp+var_28]
mov     [ebp+src], esi
mov     [ebp+var_20], esi
mov     [ebp+var_1c], esi
mov     [ebp+var_18], esi
mov     [ebp+var_14], 3b9aca00h
mov     [ebp+var_f], 1
mov     [ebp+var_10], 0
mov     [ebp+var_28], edx
call    sub_1000ac50
add     esp, 8
test    edi, edi
jle     short loc_10067fb7
mov     eax, [ebp+var_4]
mov     eax, [eax+esi*4]
lea     ecx, [eax+eax*2]
mov     ebx, [ebx+ecx*8]
test    esi, esi
jz      short loc_10067f83
push    5
push    offset aand_0
lea     eax, [ebp+var_28]
call    sub_1000ac50
add     esp, 8
push    0ffffffffh
push    ebx
lea     eax, [ebp+var_28]
call    sub_1000ac50
push    1
push    offset asc_1007c990
lea     eax, [ebp+var_28]
call    sub_1000ac50
push    1
push    offset asc_10075f74
lea     eax, [ebp+var_28]
call    sub_1000ac50
mov     ebx, [ebp+var_8]
inc     esi
add     esp, 18h
cmp     esi, edi
jl      short loc_10067f61
mov     edx, [ebp+arg_4]
test    dword ptr [edx], 200000h
mov     eax, esi
mov     [ebp+var_8], eax
jz      short loc_10068028
mov     eax, [ebp+var_c]
cmp     esi, [eax+24h]
jnz     short loc_10067fd6
mov     edi, offset arowid_2
jmp     short loc_10067fe2
mov     ecx, [ebp+var_4]
mov     eax, [ecx+esi*4]
lea     edx, [eax+eax*2]
mov     edi, [ebx+edx*8]
test    esi, esi
jz      short loc_10067ff8
push    5
push    offset aand_0
lea     eax, [ebp+var_28]
call    sub_1000ac50
add     esp, 8
push    0ffffffffh
push    edi
lea     eax, [ebp+var_28]
call    sub_1000ac50
push    1
push    offset asc_1007c994
lea     eax, [ebp+var_28]
call    sub_1000ac50
push    1
push    offset asc_10075f74
lea     eax, [ebp+var_28]
call    sub_1000ac50
mov     eax, [ebp+var_8]
add     esp, 18h
inc     esi
mov     ecx, [ebp+arg_4]
test    dword ptr [ecx], 100000h
jz      short loc_10068090
mov     edx, [ebp+var_c]
cmp     eax, [edx+24h]
jnz     short loc_10068042
mov     ebx, offset arowid_2
jmp     short loc_1006804e
mov     ecx, [ebp+var_4]
mov     eax, [ecx+eax*4]
lea     edx, [eax+eax*2]
mov     ebx, [ebx+edx*8]
test    esi, esi
jz      short loc_10068064
push    5
push    offset aand_0
lea     eax, [ebp+var_28]
call    sub_1000ac50
add     esp, 8
push    0ffffffffh
push    ebx
lea     eax, [ebp+var_28]
call    sub_1000ac50
push    1
push    offset asc_1007c998
lea     eax, [ebp+var_28]
call    sub_1000ac50
push    1
push    offset asc_10075f74
lea     eax, [ebp+var_28]
call    sub_1000ac50
add     esp, 18h
push    1
push    offset asc_1007afbc
lea     eax, [ebp+var_28]
call    sub_1000ac50
mov     esi, [ebp+var_20]
add     esp, 8
test    esi, esi
jz      short loc_100680e9
mov     al, byte ptr [ebp+var_f]
mov     edi, [ebp+var_1c]
mov     byte ptr [edi+esi], 0
test    al, al
jz      short loc_100680e9
mov     ebx, [ebp+src]
cmp     esi, ebx
jnz     short loc_100680e9
inc     edi
cmp     al, 1
jnz     short loc_100680cf
mov     esi, [ebp+var_28]
mov     ecx, edi
call    sub_10009a40
jmp     short loc_100680d8
push    edi
call    sub_10009510
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_100680e9
push    edi
push    ebx
push    esi
call    memcpy
add     esp, 0ch
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
cmp     byte ptr [eax+1d4h], 2
push    ebx
push    esi
push    edi
jnz     loc_10068359
mov     edx, [ebp+arg_4]
movzx   ecx, byte ptr [edx+30h]
mov     esi, [edx]
mov     edi, ecx
shl     edi, 4
sub     edi, ecx
mov     ecx, [ebp+arg_0]
lea     ebx, [ecx+edi*4+4]
mov     ecx, [eax+8]
mov     edi, [eax]
mov     eax, [eax+1e4h]
mov     [ebp+var_4], esi
mov     [ebp+var_c], ecx
mov     [ebp+var_8], eax
test    esi, 10000000h
jnz     loc_10068359
mov     al, [ebp+arg_10]
test    al, 40h
jnz     loc_10068359
cmp     dword ptr [edx+4], 0
ja      short loc_1006816a
test    esi, 300000h
jnz     short loc_1006816a
test    al, 3
jz      short loc_10068171
mov     eax, offset asearch
jmp     short loc_10068176
mov     eax, offset ascan
push    eax
push    offset as
push    edi
call    sub_1000ae80
add     esp, 0ch
cmp     dword ptr [ebx+10h], 0
jz      short loc_10068198
movzx   ecx, byte ptr [ebx+1fh]
push    ecx
push    eax
push    offset assubqueryd
jmp     short loc_100681a2
mov     edx, [ebx+4]
push    edx
push    eax
push    offset astables
push    eax
push    edi
call    sub_1000af00
mov     esi, eax
mov     eax, [ebx+8]
add     esp, 14h
test    eax, eax
jz      short loc_100681c8
push    eax
push    esi
push    offset asass
push    esi
push    edi
call    sub_1000af00
add     esp, 14h
mov     esi, eax
mov     eax, [ebp+var_4]
test    eax, 0f0000h
jz      loc_1006825d
mov     eax, [ebp+arg_4]
mov     edx, [ebx+0ch]
push    eax
push    edi
call    sub_10067ef0
mov     ecx, [ebp+var_4]
mov     ebx, eax
mov     eax, ecx
add     esp, 8
and     eax, 20000000h
jz      short loc_100681fb
mov     edx, offset dword_100796bc
jmp     short loc_10068203
mov     edx, [ebp+arg_4]
mov     edx, [edx+10h]
mov     edx, [edx]
mov     [ebp+var_4], offset dword_100796bc
test    eax, eax
jnz     short loc_10068215
mov     [ebp+var_4], offset asc_1007ab88
test    ecx, 800000h
mov     ecx, offset acovering
jnz     short loc_10068227
mov     ecx, offset dword_100796bc
test    eax, eax
mov     eax, offset aautomatic
jnz     short loc_10068235
mov     eax, offset dword_100796bc
push    ebx
push    edx
mov     edx, [ebp+var_4]
push    edx
push    ecx
push    eax
push    esi
push    offset asusingssindexs
push    esi
push    edi
call    sub_1000af00
mov     esi, eax
add     esp, 24h
mov     eax, ebx
mov     ecx, edi
call    sub_10009810
jmp     loc_10068311
test    eax, 3000h
jz      loc_100682ea
push    esi
push    offset asusingintegerp
push    esi
push    edi
call    sub_1000af00
mov     esi, eax
mov     eax, [ebp+var_4]
add     esp, 10h
test    eax, 1000h
jz      short loc_10068296
push    esi
push    offset asrowid
push    esi
push    edi
call    sub_1000af00
add     esp, 10h
jmp     short loc_1006830f
mov     ecx, eax
and     ecx, 300000h
cmp     ecx, 300000h
jnz     short loc_100682b8
push    esi
push    offset asrowidandrowid
push    esi
push    edi
call    sub_1000af00
add     esp, 10h
jmp     short loc_1006830f
test    eax, 200000h
jz      short loc_100682d1
push    esi
push    offset asrowid_0
push    esi
push    edi
call    sub_1000af00
add     esp, 10h
jmp     short loc_1006830f
test    eax, 100000h
jz      short loc_10068311
push    esi
push    offset asrowid_1
push    esi
push    edi
call    sub_1000af00
add     esp, 10h
jmp     short loc_1006830f
test    eax, 8000000h
jz      short loc_10068311
mov     edx, [ebp+arg_4]
mov     eax, [edx+10h]
mov     ecx, [eax+18h]
mov     edx, [eax+14h]
push    ecx
push    edx
push    esi
push    offset asvirtualtablei
push    esi
push    edi
call    sub_1000af00
add     esp, 18h
mov     esi, eax
test    [ebp+arg_10], 3
jz      short loc_10068320
mov     eax, 1
xor     edx, edx
jmp     short loc_1006832b
mov     eax, [ebp+arg_4]
fld     qword ptr [eax+8]
call    __ftol2
push    edx
push    eax
push    esi
push    offset aslldrows
push    esi
push    edi
call    sub_1000af00
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
push    0ffffffffh
push    eax
mov     eax, [ebp+var_8]
push    ecx
push    edx
push    eax
mov     eax, [ebp+var_c]
push    96h
call    sub_100259f0
add     esp, 30h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 64h
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
push    ebx
mov     [esp+68h+var_60], ecx
push    esi
mov     esi, [ecx+8]
mov     ecx, [eax+20h]
mov     [esp+6ch+var_50], ecx
mov     ecx, [ebp+arg_4]
lea     ecx, [ecx+ecx*8]
push    edi
lea     edi, [eax+ecx*8+34h]
movzx   ecx, byte ptr [edi+30h]
mov     eax, [eax+0ch]
mov     ebx, ecx
shl     ebx, 4
sub     ebx, ecx
mov     ecx, [eax+ebx*4+24h]
lea     eax, [eax+ebx*4+4]
mov     [esp+70h+var_3c], eax
mov     [esp+70h+var_58], ecx
mov     ecx, [edi]
mov     eax, ecx
shr     eax, 19h
xor     edx, edx
and     eax, 1
mov     [esp+70h+var_44], edx
mov     [esp+70h+var_54], esi
mov     [esp+70h+var_5c], edi
mov     [esp+70h+var_4c], eax
test    ecx, 800000h
jz      short loc_100683d9
test    byte ptr [ebp+arg_8], 20h
mov     [esp+70h+var_10], 1
jz      short loc_100683dd
mov     [esp+70h+var_10], edx
mov     ecx, [esi+24h]
lea     eax, [ecx+1]
mov     [esi+24h], eax
lea     eax, [ecx-1]
mov     [esp+70h+var_34], ecx
test    ecx, eax
jnz     short loc_1006842a
mov     eax, [esi]
mov     ebx, [esi+28h]
lea     edx, ds:4[ecx*8]
push    edx
mov     [esp+74h+src], eax
call    sub_10009ac0
add     esp, 4
mov     [esp+70h+var_18], eax
test    eax, eax
jnz     short loc_10068421
mov     ecx, [esp+70h+src]
mov     eax, ebx
call    sub_10009810
mov     eax, [esp+70h+var_18]
mov     ecx, [esp+70h+var_34]
mov     [esi+28h], eax
xor     edx, edx
mov     eax, [esi+28h]
cmp     eax, edx
jz      short loc_10068438
mov     dword ptr [eax+ecx*4], 0ffffffffh
or      eax, 0ffffffffh
sub     eax, ecx
mov     [edi+24h], eax
mov     [edi+20h], eax
mov     [esp+70h+var_30], eax
mov     eax, [esi+24h]
lea     ecx, [eax+1]
mov     [esi+24h], ecx
lea     ecx, [eax-1]
mov     [esp+70h+var_34], eax
test    eax, ecx
jnz     short loc_10068498
mov     edx, [esp+70h+var_34]
mov     eax, [esi]
mov     ebx, [esi+28h]
lea     ecx, ds:4[edx*8]
push    ecx
mov     [esp+74h+src], eax
call    sub_10009ac0
add     esp, 4
mov     [esp+70h+var_18], eax
test    eax, eax
jnz     short loc_1006848f
mov     ecx, [esp+70h+src]
mov     eax, ebx
call    sub_10009810
mov     eax, [esp+70h+var_18]
mov     [esi+28h], eax
mov     eax, [esp+70h+var_34]
xor     edx, edx
mov     ecx, [esi+28h]
cmp     ecx, edx
jz      short loc_100684a6
mov     dword ptr [ecx+eax*4], 0ffffffffh
or      ecx, 0ffffffffh
sub     ecx, eax
cmp     byte ptr [edi+30h], 0
mov     [esp+70h+var_20], ecx
mov     [edi+28h], ecx
jbe     short loc_10068512
mov     eax, [esp+70h+var_3c]
test    byte ptr [eax+1ch], 8
jz      short loc_10068512
mov     edi, [esp+70h+var_60]
mov     ecx, [edi+4ch]
mov     eax, [esp+70h+var_5c]
inc     ecx
mov     [edi+4ch], ecx
mov     [eax+14h], ecx
mov     ebx, [esi+1ch]
mov     [esp+70h+var_2c], ecx
cmp     [esi+20h], ebx
jg      short loc_100684f1
mov     edi, esi
call    sub_10025810
xor     edx, edx
test    eax, eax
jnz     short loc_10068512
mov     ecx, [esp+70h+var_2c]
mov     edi, [esi+4]
inc     dword ptr [esi+1ch]
lea     eax, [ebx+ebx*4]
lea     eax, [edi+eax*4]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 7
mov     edi, [esp+70h+var_5c]
mov     eax, [edi]
test    eax, 8000000h
jz      loc_10068999
mov     edi, [edi+10h]
mov     ecx, [edi+10h]
mov     edx, [edi+4]
mov     ebx, [edi]
mov     eax, [esp+70h+var_60]
inc     dword ptr [eax+5ch]
mov     [esp+70h+var_40], ecx
mov     [esp+70h+var_24], edx
mov     edx, [eax+3ch]
lea     ecx, [ebx+2]
mov     [esp+70h+var_28], edi
mov     edi, [eax+40h]
mov     [esp+70h+var_2c], ebx
mov     [esp+70h+var_18], ecx
mov     [esp+70h+var_38], edi
cmp     ecx, edx
jg      short loc_10068566
add     edi, ecx
sub     edx, ecx
mov     [eax+40h], edi
mov     [eax+3ch], edx
jmp     short loc_10068575
mov     edx, [eax+4ch]
lea     edi, [edx+1]
add     ecx, edx
mov     [esp+70h+var_38], edi
mov     [eax+4ch], ecx
mov     [esp+70h+var_3c], 1
cmp     ebx, 1
jl      loc_100686b4
jmp     short loc_10068590
cmp     [esp+70h+var_2c], 0
mov     [esp+70h+var_34], 0
jle     loc_10068699
mov     eax, [esp+70h+var_34]
mov     ecx, [esp+70h+var_3c]
mov     edx, [esp+70h+var_2c]
mov     edi, [esp+70h+var_40]
cmp     [edi+eax*8], ecx
jz      short loc_100685c6
inc     eax
cmp     eax, edx
jl      short loc_100685b3
mov     [esp+70h+var_34], eax
jmp     loc_10068699
mov     ecx, [esp+70h+var_3c]
mov     [esp+70h+var_34], eax
mov     eax, [esp+70h+var_38]
lea     ebx, [eax+ecx+1]
mov     eax, [esp+70h+var_34]
lea     edx, [eax+eax*2]
mov     eax, [esp+70h+var_24]
mov     eax, [eax+edx*4+8]
mov     edx, [esp+70h+var_50]
lea     ecx, [eax+eax*4]
mov     eax, [edx+20h]
mov     ecx, [eax+ecx*8]
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_10068638
cmp     byte ptr [eax], 84h
jnz     short loc_10068638
mov     edx, [eax+18h]
mov     eax, [esp+70h+var_60]
mov     edi, [eax+8]
mov     eax, [edi+1ch]
mov     [esp+70h+src], edx
mov     [esp+70h+var_10], eax
cmp     [edi+20h], eax
jg      short loc_10068625
call    sub_10025810
test    eax, eax
jnz     short loc_10068699
mov     eax, [esp+70h+var_10]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     word ptr [eax], 0eh
jmp     short loc_10068684
mov     edx, [esp+70h+var_60]
push    ebx
push    eax
push    edx
call    sub_10038b70
add     esp, 0ch
mov     [esp+70h+src], eax
cmp     eax, ebx
jz      short loc_10068699
mov     eax, [esp+70h+var_60]
mov     edi, [eax+8]
test    edi, edi
jz      short loc_10068699
mov     eax, [edi+1ch]
mov     [esp+70h+var_10], eax
cmp     [edi+20h], eax
jg      short loc_10068673
call    sub_10025810
test    eax, eax
jnz     short loc_10068699
mov     eax, [esp+70h+var_10]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     word ptr [eax], 0fh
mov     ecx, [esp+70h+src]
mov     [eax+4], ecx
xor     ecx, ecx
mov     [eax+10h], ecx
mov     [eax+0ch], ecx
mov     [eax+8], ebx
mov     [eax+3], cl
mov     ecx, [esp+70h+var_2c]
cmp     [esp+70h+var_34], ecx
jz      short loc_100686b4
mov     eax, [esp+70h+var_3c]
inc     eax
mov     [esp+70h+var_3c], eax
cmp     eax, ecx
jle     loc_10068590
mov     edx, [esp+70h+var_28]
mov     eax, [edx+14h]
mov     edi, [esi+1ch]
mov     [esp+70h+var_10], eax
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1006872c
test    eax, eax
jz      short loc_100686d1
add     eax, eax
jmp     short loc_100686d6
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10068757
mov     eax, [esi]
test    eax, eax
jz      short loc_10068710
cmp     ebx, [eax+0fch]
jb      short loc_10068710
cmp     ebx, [eax+100h]
jnb     short loc_10068710
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006871c
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [esp+70h+var_10]
lea     edx, [edi+edi*4]
lea     eax, [eax+edx*4]
mov     edx, [esp+70h+var_38]
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 7
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_100687c4
test    eax, eax
jz      short loc_10068769
add     eax, eax
jmp     short loc_1006876e
mov     eax, 33h
mov     ebx, [esi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [esi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_100687f1
mov     eax, [esi]
test    eax, eax
jz      short loc_100687a8
cmp     ebx, [eax+0fch]
jb      short loc_100687a8
cmp     ebx, [eax+100h]
jnb     short loc_100687a8
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_100687b4
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, [esi+4]
inc     dword ptr [esi+1ch]
lea     ecx, [edi+edi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [esp+70h+var_3c]
mov     edx, [esp+70h+var_38]
dec     ecx
inc     edx
mov     [eax+4], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 7
mov     eax, [esp+70h+var_28]
mov     edi, [eax+1ch]
mov     eax, [eax+18h]
mov     ecx, [esi+1ch]
neg     edi
sbb     edi, edi
mov     [esp+70h+src], eax
mov     eax, [esi+20h]
and     edi, 0fffffff7h
mov     [esp+70h+var_10], ecx
cmp     eax, ecx
jg      short loc_1006887b
test    eax, eax
jz      short loc_1006881c
add     eax, eax
jmp     short loc_10068821
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1006898f
mov     eax, [esi]
test    eax, eax
jz      short loc_1006885f
cmp     ebx, [eax+0fch]
jb      short loc_1006885f
cmp     ebx, [eax+100h]
jnb     short loc_1006885f
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006886b
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     eax, [esi+4]
mov     ecx, [esp+70h+var_10]
inc     dword ptr [esi+1ch]
lea     edx, [ecx+ecx*4]
lea     eax, [eax+edx*4]
mov     edx, [esp+70h+var_58]
mov     [eax+4], edx
mov     edx, [esp+70h+var_30]
mov     [eax+8], edx
mov     edx, [esp+70h+var_38]
mov     byte ptr [eax+3], 0
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 88h
mov     eax, ecx
mov     ecx, [esp+70h+src]
push    ecx
push    esi
lea     ecx, [edi-2]
call    sub_10025f90
mov     eax, [esp+78h+var_2c]
mov     edx, [esp+78h+var_28]
add     esp, 8
mov     dword ptr [edx+1ch], 0
test    eax, eax
jle     short loc_10068952
mov     edi, [esp+70h+var_24]
mov     ebx, [esp+70h+var_40]
add     edi, 8
add     ebx, 4
mov     [esp+70h+var_24], eax
cmp     byte ptr [ebx], 0
jz      short loc_10068946
mov     eax, [edi]
mov     ecx, [esp+70h+var_50]
mov     edx, [ecx+20h]
lea     eax, [eax+eax*4]
lea     eax, [edx+eax*8]
test    eax, eax
jz      short loc_10068946
mov     cl, [eax+12h]
test    cl, 4
jnz     short loc_10068946
mov     edx, [esp+70h+var_5c]
cmp     dword ptr [edx+14h], 0
jz      short loc_1006891a
mov     edx, [eax]
test    byte ptr [edx+2], 1
jz      short loc_10068946
or      cl, 4
mov     [eax+12h], cl
mov     ecx, [eax+4]
test    ecx, ecx
js      short loc_10068946
mov     eax, [eax+14h]
mov     edx, [eax+20h]
lea     ecx, [ecx+ecx*4]
dec     byte ptr [edx+ecx*8+13h]
lea     eax, [edx+ecx*8]
jnz     short loc_10068946
mov     esi, [esp+70h+var_5c]
call    sub_100679b0
mov     esi, [esp+70h+var_54]
add     ebx, 8
add     edi, 0ch
dec     [esp+70h+var_24]
jnz     short loc_100688e8
mov     eax, [esp+70h+var_5c]
mov     ecx, [esp+70h+var_58]
mov     ebx, [esp+70h+var_18]
mov     edi, [esp+70h+var_38]
mov     [eax+34h], ecx
mov     byte ptr [eax+31h], 8ah
mov     edx, [esi+1ch]
mov     [eax+38h], edx
mov     eax, [esp+70h+var_60]
mov     ecx, ebx
call    sub_100384f0
cmp     ebx, [eax+3ch]
jle     short loc_10068985
mov     [eax+3ch], ebx
mov     [eax+40h], edi
call    sub_100385f0
jmp     loc_100696ff
mov     eax, 1
jmp     loc_100688b2
test    eax, 1000h
jz      loc_10068ab4
mov     eax, [esp+70h+var_60]
mov     cl, [eax+13h]
test    cl, cl
jnz     short loc_100689bb
inc     dword ptr [eax+4ch]
mov     eax, [eax+4ch]
mov     [esp+70h+var_44], eax
jmp     short loc_100689cb
dec     cl
mov     [eax+13h], cl
movzx   ecx, cl
mov     edx, [eax+ecx*4+1ch]
mov     [esp+70h+var_44], edx
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
mov     edx, [esp+70h+var_58]
push    0
push    3
push    eax
mov     eax, [esp+7ch+var_50]
push    ecx
push    edx
push    eax
or      ebx, 0ffffffffh
call    sub_10064600
mov     ecx, [esp+88h+var_44]
push    ecx
push    edi
push    eax
mov     eax, [esp+94h+var_60]
call    sub_10067aa0
mov     ebx, [esi+1ch]
mov     edx, [edi+24h]
add     esp, 24h
mov     [esp+70h+var_28], eax
mov     [esp+70h+var_38], edx
cmp     [esi+20h], ebx
jg      short loc_10068a1a
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10068a46
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [esp+70h+var_28]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
mov     ecx, [esp+70h+var_38]
xor     ebx, ebx
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 15h
jmp     short loc_10068a48
xor     ebx, ebx
mov     eax, [esi+1ch]
mov     [esp+70h+var_10], eax
cmp     [esi+20h], eax
jg      short loc_10068a63
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10068a8f
mov     eax, [esp+70h+var_10]
inc     dword ptr [esi+1ch]
mov     ecx, [esp+70h+var_58]
lea     edx, [eax+eax*4]
mov     eax, [esi+4]
lea     eax, [eax+edx*4]
mov     edx, [esp+70h+var_38]
mov     [eax+4], ecx
mov     ecx, [esp+70h+var_28]
mov     [eax+3], bl
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ebx
mov     word ptr [eax], 36h
mov     edx, [esp+70h+var_28]
mov     eax, [esp+70h+var_58]
push    edx
mov     edx, [esp+74h+var_60]
push    0ffffffffh
push    eax
call    sub_100383e0
mov     ecx, [esp+7ch+var_5c]
add     esp, 0ch
mov     byte ptr [ecx+31h], 95h
jmp     loc_100696ff
test    eax, 2000h
jz      loc_10068ceb
mov     edx, [ebp+arg_10]
mov     eax, [ebp+arg_c]
mov     edi, [esp+70h+var_58]
mov     ecx, [esp+70h+var_50]
push    0
push    24h
push    edx
push    eax
push    edi
push    ecx
or      ebx, 0ffffffffh
mov     [esp+88h+var_34], 95h
mov     [esp+88h+var_24], 0
call    sub_10064600
mov     edx, [ebp+arg_10]
mov     ecx, [esp+88h+var_50]
push    0
push    18h
push    edx
mov     [esp+94h+var_38], eax
mov     eax, [ebp+arg_c]
push    eax
push    edi
push    ecx
or      ebx, ebx
call    sub_10064600
mov     [esp+0a0h+var_3c], eax
mov     eax, [esp+0a0h+var_4c]
add     esp, 30h
test    eax, eax
jz      short loc_10068b29
mov     ecx, [esp+70h+var_38]
mov     edx, [esp+70h+var_3c]
mov     [esp+70h+var_38], edx
mov     [esp+70h+var_3c], ecx
cmp     [esp+70h+var_38], 0
jz      short loc_10068ba2
mov     eax, [esp+70h+var_38]
mov     edi, [eax]
mov     esi, [esp+70h+var_60]
lea     ecx, [esp+70h+var_10]
push    ecx
mov     ecx, [edi+0ch]
mov     [esp+74h+var_2c], 302e2f31h
call    sub_10039950
movzx   ecx, byte ptr [edi]
mov     edx, [esp+74h+var_30]
add     esp, 4
mov     esi, eax
mov     eax, [esp+70h+var_58]
push    esi
push    edx
movzx   edx, [esp+ecx+78h+var_79]
push    eax
mov     eax, [esp+7ch+var_54]
push    edx
call    sub_10025890
mov     eax, [esp+80h+var_60]
add     esp, 10h
mov     ecx, 1
mov     edi, esi
call    sub_100384f0
mov     esi, [esp+70h+var_10]
mov     edx, eax
call    sub_1003ac10
mov     eax, [esp+70h+var_38]
mov     esi, [esp+70h+var_5c]
call    sub_100679b0
mov     esi, [esp+70h+var_54]
jmp     short loc_10068bbd
mov     ecx, [esp+70h+var_30]
neg     eax
sbb     eax, eax
push    ecx
and     eax, 0fffffffbh
add     eax, 48h
push    edi
push    eax
mov     eax, esi
call    sub_10025990
add     esp, 0ch
cmp     [esp+70h+var_3c], 0
mov     eax, [esp+70h+var_5c]
mov     edi, [esp+70h+var_60]
jz      short loc_10068c33
mov     edx, [esp+70h+var_3c]
mov     ebx, [edx]
inc     dword ptr [edi+4ch]
mov     edi, [edi+4ch]
mov     eax, [ebx+0ch]
mov     ecx, [esp+70h+var_60]
mov     esi, edi
mov     [esp+70h+var_24], edi
call    sub_100399d0
mov     bl, [ebx]
cmp     bl, 4fh
jz      short loc_10068c09
cmp     bl, 4dh
jz      short loc_10068c09
xor     eax, eax
cmp     [esp+70h+var_4c], eax
setnz   al
lea     eax, [eax+eax+4dh]
mov     [esp+70h+var_34], eax
jmp     short loc_10068c1a
xor     ecx, ecx
cmp     [esp+70h+var_4c], ecx
setz    cl
lea     ecx, [ecx+ecx+4eh]
mov     [esp+70h+var_34], ecx
mov     eax, [esp+70h+var_3c]
mov     esi, [esp+70h+var_5c]
call    sub_100679b0
mov     esi, [esp+70h+var_54]
mov     edi, [esp+70h+var_60]
mov     eax, [esp+70h+var_5c]
mov     edx, [esp+70h+var_4c]
mov     ecx, [esi+1ch]
neg     edx
sbb     dl, dl
and     dl, 0fdh
add     dl, 5fh
cmp     [esp+70h+var_38], 0
mov     [eax+31h], dl
mov     edx, [esp+70h+var_58]
mov     [eax+34h], edx
mov     [eax+38h], ecx
jnz     short loc_10068c63
cmp     [esp+70h+var_3c], 0
jnz     short loc_10068c63
mov     byte ptr [eax+32h], 1
cmp     [esp+70h+var_34], 95h
jz      loc_100696ff
mov     al, [edi+13h]
test    al, al
jnz     short loc_10068c84
inc     dword ptr [edi+4ch]
mov     ebx, [edi+4ch]
mov     [esp+70h+var_44], ebx
jmp     short loc_10068c96
dec     al
mov     [edi+13h], al
movzx   eax, al
mov     ecx, [edi+eax*4+1ch]
mov     [esp+70h+var_44], ecx
mov     ebx, ecx
push    ebx
push    edx
push    41h
mov     eax, esi
call    sub_10025990
mov     eax, [esp+7ch+var_58]
add     esp, 0ch
push    ebx
push    0ffffffffh
push    eax
mov     edx, edi
call    sub_100383e0
mov     ecx, [esp+7ch+var_30]
mov     edx, [esp+7ch+var_24]
mov     eax, [esp+7ch+var_34]
add     esp, 0ch
push    ebx
push    ecx
push    edx
push    eax
mov     eax, esi
call    sub_10025890
mov     eax, [esi+4]
add     esp, 10h
test    eax, eax
jz      loc_100696ff
mov     ecx, [esi+1ch]
lea     ecx, [ecx+ecx*4]
mov     byte ptr [eax+ecx*4-11h], 6bh
jmp     loc_100696ff
test    eax, 30000h
jz      loc_100691f9
mov     ebx, [edi+1ch]
mov     ecx, [edi+4]
mov     [esp+70h+var_1c], edx
mov     [esp+70h+var_34], edx
mov     [esp+70h+var_48], edx
mov     edx, [edi+10h]
mov     [esp+70h+var_18], ebx
mov     ebx, [edx+24h]
xor     eax, eax
mov     [esp+70h+var_30], ecx
mov     [esp+70h+var_28], edx
mov     [esp+70h+src], ebx
cmp     ecx, ebx
jnz     short loc_10068d29
or      ebx, 0ffffffffh
jmp     short loc_10068d2f
mov     edx, [edx+4]
mov     ebx, [edx+ecx*4]
test    byte ptr [ebp+arg_8], 1
jz      short loc_10068d4c
test    dword ptr [edi], 1000000h
jz      short loc_10068d4c
cmp     [esp+70h+src], ecx
jle     short loc_10068d4c
mov     eax, 1
mov     [esp+70h+var_1c], eax
test    dword ptr [edi], 100000h
jz      short loc_10068d7e
mov     eax, [esp+70h+var_28]
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+arg_c]
push    eax
mov     eax, [esp+74h+var_58]
push    18h
push    ecx
mov     ecx, [esp+7ch+var_50]
push    edx
push    eax
push    ecx
call    sub_10064600
mov     [esp+88h+var_48], eax
add     esp, 18h
mov     eax, 1
test    dword ptr [edi], 200000h
jz      short loc_10068db0
mov     edx, [esp+70h+var_28]
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
push    edx
mov     edx, [esp+74h+var_58]
push    24h
push    eax
mov     eax, [esp+7ch+var_50]
push    ecx
push    edx
push    eax
call    sub_10064600
mov     [esp+88h+var_34], eax
add     esp, 18h
mov     eax, 1
mov     edx, [ebp+arg_10]
mov     edi, [esp+70h+var_5c]
mov     ebx, [esp+70h+var_60]
lea     ecx, [esp+70h+var_2c]
push    ecx
mov     ecx, [esp+74h+var_50]
push    eax
mov     eax, [ebp+arg_c]
push    edx
push    eax
push    ecx
push    edi
push    ebx
call    sub_10067c40
mov     edx, [ebx]
mov     ebx, [esp+8ch+var_2c]
add     esp, 1ch
push    edx
mov     [esp+74h+var_3c], eax
call    sub_10009b70
mov     ecx, [esp+74h+var_28]
mov     [esp+74h+var_40], eax
mov     eax, [edi+24h]
mov     edi, [esp+74h+var_30]
mov     [esp+74h+var_38], eax
mov     eax, [ecx+24h]
add     esp, 4
cmp     edi, eax
jge     short loc_10068e15
mov     edx, ecx
mov     ecx, [edx+1ch]
xor     edx, edx
cmp     [edi+ecx], dl
setz    dl
cmp     [esp+70h+var_4c], edx
jz      short loc_10068e20
cmp     [esp+70h+var_4c], 0
jz      short loc_10068e30
cmp     eax, edi
jnz     short loc_10068e30
mov     eax, [esp+70h+var_48]
mov     ecx, [esp+70h+var_34]
mov     [esp+70h+var_48], ecx
mov     [esp+70h+var_34], eax
mov     eax, [esp+70h+var_34]
xor     ebx, ebx
cmp     eax, ebx
jz      short loc_10068e49
test    byte ptr [eax+10h], 28h
jnz     short loc_10068e49
mov     [esp+70h+var_28], ebx
lea     ecx, [ebx+1]
jmp     short loc_10068e52
mov     ecx, 1
mov     [esp+70h+var_28], ecx
mov     edx, [esp+70h+var_48]
cmp     edx, ebx
jz      short loc_10068e64
test    byte ptr [edx+10h], 28h
mov     [esp+70h+src], ebx
jz      short loc_10068e68
mov     [esp+70h+src], ecx
cmp     eax, ebx
jnz     short loc_10068e74
mov     [esp+70h+var_24], ebx
cmp     edi, ebx
jle     short loc_10068e78
mov     [esp+70h+var_24], ecx
mov     ebx, edi
test    eax, eax
jz      loc_10068f16
mov     edx, [esp+70h+var_34]
mov     eax, [edx]
mov     ebx, [eax+0ch]
mov     esi, [esp+70h+var_3c]
mov     ecx, [esp+70h+var_60]
add     esi, edi
mov     eax, ebx
mov     [esp+70h+var_1c], ebx
call    sub_100399d0
mov     eax, ebx
mov     cl, [eax]
cmp     cl, 9dh
jz      short loc_10068eae
cmp     cl, 9ch
jnz     short loc_10068eb3
mov     eax, [eax+8]
jmp     short loc_10068ea2
mov     cl, [eax]
cmp     cl, 84h
jnz     short loc_10068ebd
mov     cl, [eax+23h]
cmp     cl, 5eh
jz      short loc_10068ede
cmp     cl, 80h
jbe     short loc_10068ecc
cmp     cl, 83h
jbe     short loc_10068ede
mov     edx, [esp+70h+var_38]
mov     eax, [esp+70h+var_54]
push    edx
push    esi
call    sub_10037260
add     esp, 8
cmp     [esp+70h+var_2c], 0
jz      short loc_10068f10
mov     esi, [esp+70h+var_2c]
mov     bl, [esi+edi]
mov     eax, [esp+70h+var_1c]
call    sub_100359d0
cmp     al, 62h
jnz     short loc_10068efc
mov     [esi+edi], al
mov     dl, [esi+edi]
mov     ecx, [esp+70h+var_1c]
call    sub_100372b0
test    eax, eax
jz      short loc_10068f10
mov     byte ptr [esi+edi], 62h
mov     esi, [esp+70h+var_54]
jmp     short loc_10068f42
cmp     [esp+70h+var_1c], 0
jz      short loc_10068f45
mov     eax, [esp+70h+var_3c]
add     eax, edi
push    eax
push    0
push    0ah
mov     eax, esi
call    sub_10025990
add     esp, 0ch
mov     [esp+70h+var_28], 0
mov     [esp+70h+var_24], 1
lea     ebx, [edi+1]
mov     ecx, [esp+70h+var_3c]
mov     edx, [esp+70h+var_60]
mov     eax, [esp+70h+var_2c]
push    ecx
push    edx
mov     ecx, ebx
call    sub_100679f0
mov     eax, [esp+78h+var_3c]
mov     ecx, [esp+78h+var_38]
mov     edx, [esp+78h+var_28]
push    ebx
mov     ebx, [esp+7ch+var_18]
push    eax
mov     eax, [esp+80h+var_24]
push    ecx
lea     ecx, [edx+eax*2]
mov     edx, [esp+84h+var_4c]
movzx   eax, ds:byte_10076ef8[edx+ecx*2]
push    ebx
push    eax
mov     eax, esi
call    sub_10025b50
add     esp, 1ch
cmp     [esp+70h+var_48], 0
mov     [esp+70h+var_1c], edi
jz      loc_10069071
mov     ecx, [esp+70h+var_48]
mov     edx, [ecx]
mov     esi, [esp+70h+var_3c]
mov     ebx, [edx+0ch]
mov     eax, [esp+70h+var_60]
add     esi, edi
mov     ecx, 1
mov     edi, esi
mov     [esp+70h+var_1c], ebx
call    sub_100384f0
mov     ecx, [esp+70h+var_60]
mov     eax, ebx
call    sub_100399d0
lea     esp, [esp+0]
mov     al, [ebx]
cmp     al, 9dh
jz      short loc_10068fda
cmp     al, 9ch
jnz     short loc_10068fdf
mov     ebx, [ebx+8]
jmp     short loc_10068fd0
mov     al, [ebx]
cmp     al, 84h
jnz     short loc_10068fe8
mov     al, [ebx+23h]
cmp     al, 5eh
jz      short loc_10069006
cmp     al, 80h
jbe     short loc_10068ff4
cmp     al, 83h
jbe     short loc_10069006
mov     edx, [esp+70h+var_38]
mov     eax, [esp+70h+var_54]
push    edx
push    esi
call    sub_10037260
add     esp, 8
cmp     [esp+70h+var_40], 0
mov     esi, [esp+70h+var_30]
jz      short loc_10069048
mov     eax, [esp+70h+var_40]
mov     bl, [eax+esi]
mov     edi, [esp+70h+var_1c]
mov     eax, edi
call    sub_100359d0
cmp     al, 62h
jnz     short loc_1006902e
mov     ecx, [esp+70h+var_40]
mov     [ecx+esi], al
mov     edx, [esp+70h+var_40]
mov     dl, [edx+esi]
mov     ecx, edi
call    sub_100372b0
test    eax, eax
jz      short loc_10069048
mov     eax, [esp+70h+var_40]
mov     byte ptr [eax+esi], 62h
mov     ecx, [esp+70h+var_3c]
mov     edx, [esp+70h+var_60]
mov     eax, [esp+70h+var_40]
push    ecx
inc     esi
push    edx
mov     ecx, esi
call    sub_100679f0
mov     edi, [esp+78h+var_30]
mov     ebx, [esp+78h+var_18]
mov     [esp+78h+var_1c], esi
mov     esi, [esp+78h+var_54]
add     esp, 8
mov     ecx, [esp+70h+var_60]
mov     eax, [esp+70h+var_2c]
mov     ecx, [ecx]
call    sub_10009810
mov     edx, [esp+70h+var_60]
mov     eax, [esp+70h+var_40]
mov     ecx, [edx]
call    sub_10009810
cmp     [esp+70h+var_48], 0
mov     eax, [esi+1ch]
mov     ecx, [esp+70h+var_5c]
mov     [ecx+38h], eax
jnz     short loc_100690a8
test    edi, edi
jnz     short loc_100690a8
xor     eax, eax
jmp     short loc_100690ad
mov     eax, 1
mov     edx, [esp+70h+var_4c]
inc     edx
imul    edx, eax
movzx   eax, ds:byte_10076f00[edx]
cmp     eax, 95h
jz      short loc_100690fa
mov     ecx, [esp+70h+var_1c]
mov     edx, [esp+70h+var_3c]
push    ecx
mov     ecx, [esp+74h+var_38]
push    edx
push    ecx
push    ebx
push    eax
mov     eax, esi
call    sub_10025b50
mov     eax, [esi+4]
add     esp, 14h
test    eax, eax
jz      short loc_100690fa
mov     edx, [esp+70h+var_4c]
cmp     [esp+70h+src], edx
mov     ecx, [esi+1ch]
setnz   dl
lea     ecx, [ecx+ecx*4]
mov     [eax+ecx*4-11h], dl
mov     ecx, [esp+70h+var_60]
mov     al, [ecx+13h]
test    al, al
jnz     short loc_10069111
inc     dword ptr [ecx+4ch]
mov     edx, [ecx+4ch]
mov     [esp+70h+var_28], edx
jmp     short loc_10069121
dec     al
mov     [ecx+13h], al
movzx   eax, al
mov     ecx, [ecx+eax*4+1ch]
mov     [esp+70h+var_28], ecx
mov     edx, [esp+70h+var_5c]
test    dword ptr [edx], 300000h
jz      short loc_10069153
mov     eax, [esp+70h+var_28]
push    eax
push    edi
push    ebx
push    1dh
mov     eax, esi
call    sub_10025890
mov     ecx, [esp+80h+var_20]
mov     edx, [esp+80h+var_28]
push    ecx
push    edx
push    49h
mov     eax, esi
call    sub_10025990
add     esp, 1ch
mov     esi, [esp+70h+var_28]
mov     edx, [esp+70h+var_60]
call    sub_1003ac10
mov     eax, [esp+70h+var_34]
mov     esi, [esp+70h+var_5c]
call    sub_100679b0
mov     eax, [esp+70h+var_48]
call    sub_100679b0
cmp     [esp+70h+var_10], 0
jnz     short loc_100691c4
mov     ecx, [esp+70h+var_60]
call    sub_1003abf0
mov     edi, eax
mov     eax, [esp+70h+var_54]
push    edi
push    ebx
push    63h
mov     [esp+7ch+var_44], edi
call    sub_10025990
mov     eax, [esp+7ch+var_58]
mov     edx, [esp+7ch+var_60]
add     esp, 0ch
push    edi
push    0ffffffffh
push    eax
call    sub_100383e0
mov     ecx, [esp+7ch+var_58]
mov     eax, [esp+7ch+var_54]
add     esp, 0ch
push    edi
push    ecx
push    32h
call    sub_10025990
add     esp, 0ch
test    dword ptr [esi], 4000000h
jz      short loc_100691dc
mov     byte ptr [esi+31h], 95h
mov     [esi+34h], ebx
mov     esi, [esp+70h+var_54]
jmp     loc_100696ff
mov     edx, [esp+70h+var_4c]
neg     edx
sbb     dl, dl
and     dl, 0fdh
add     dl, 5fh
mov     [esi+31h], dl
mov     [esi+34h], ebx
mov     esi, [esp+70h+var_54]
jmp     loc_100696ff
test    eax, 10000000h
jz      loc_100696cb
mov     ebx, [esp+70h+var_60]
mov     eax, [ebx+48h]
inc     dword ptr [ebx+4ch]
mov     [esp+70h+var_1c], eax
inc     eax
mov     [ebx+48h], eax
mov     eax, [ebx+4ch]
xor     ecx, ecx
mov     [esp+70h+var_2c], eax
mov     eax, esi
mov     [esp+70h+var_28], ecx
mov     [esp+70h+var_18], ecx
mov     [esp+70h+src], ecx
call    sub_10025c00
mov     edx, [esp+70h+var_2c]
mov     [esp+70h+var_48], eax
xor     eax, eax
mov     [esp+70h+var_4c], eax
mov     [esp+70h+var_34], eax
mov     eax, [edi+10h]
mov     ecx, [eax+0ch]
mov     [esp+70h+var_40], ecx
mov     ecx, [ebp+arg_0]
mov     [esp+70h+var_4], eax
mov     byte ptr [edi+31h], 3
mov     [edi+34h], edx
mov     eax, [ecx+1ch]
cmp     eax, 1
jle     loc_1006941b
sub     eax, [ebp+arg_4]
mov     esi, [ebx]
dec     eax
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
lea     ecx, ds:40h[ecx*4]
mov     [esp+70h+var_10], eax
call    sub_10009a40
mov     [esp+70h+var_38], eax
test    eax, eax
jz      loc_100698db
mov     eax, [esp+70h+var_10]
mov     ebx, [esp+70h+var_38]
mov     esi, [esp+70h+var_3c]
mov     edx, [ebp+arg_0]
lea     ecx, [eax+1]
mov     [ebx+2], cx
mov     [ebx], cx
lea     edi, [ebx+4]
mov     ecx, 0fh
rep movsd
mov     ecx, [edx+0ch]
add     ecx, 4
mov     [esp+70h+var_24], ecx
cmp     eax, 1
jl      short loc_100692f7
mov     edx, [esp+70h+var_5c]
add     ebx, 40h
add     edx, 78h
mov     [esp+70h+var_10], eax
movzx   eax, byte ptr [edx]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
mov     eax, [esp+70h+var_24]
lea     esi, [eax+ecx*4]
mov     edi, ebx
mov     ecx, 0fh
add     edx, 48h
add     ebx, 3ch
dec     [esp+70h+var_10]
rep movsd
jnz     short loc_100692d1
mov     edi, [esp+70h+var_60]
mov     esi, [esp+70h+var_54]
mov     eax, [ebp+arg_8]
and     eax, 8
mov     [esp+70h+var_c], eax
jnz     short loc_1006932c
mov     eax, [edi+4ch]
inc     eax
push    eax
lea     ecx, [eax+1]
mov     [esp+74h+var_18], eax
push    0
push    0ah
mov     eax, esi
mov     [edi+4ch], ecx
mov     [esp+7ch+src], ecx
call    sub_10025990
add     esp, 0ch
mov     edx, [esp+70h+var_2c]
push    edx
xor     ebx, ebx
push    ebx
push    7
mov     eax, esi
call    sub_10025990
mov     [esp+7ch+var_8], eax
mov     eax, [esp+7ch+var_50]
mov     eax, [eax+18h]
add     esp, 0ch
cmp     eax, 1
jle     loc_1006946f
mov     [esp+70h+var_10], ebx
cmp     eax, ebx
jle     loc_1006946f
mov     [esp+70h+var_24], ebx
mov     ecx, [esp+70h+var_50]
mov     eax, [esp+70h+var_24]
add     eax, [ecx+20h]
mov     ecx, [eax]
test    byte ptr [ecx+2], 1
jnz     short loc_100693a3
test    byte ptr [eax+12h], 12h
jnz     short loc_100693a3
mov     edx, 0fffh
test    [eax+10h], dx
jz      short loc_100693a3
mov     eax, [edi]
push    0
push    0
push    ecx
push    eax
call    sub_100365c0
push    eax
mov     eax, [edi]
push    ebx
call    sub_10036060
add     esp, 18h
mov     ebx, eax
mov     eax, [esp+70h+var_10]
mov     ecx, [esp+70h+var_50]
add     [esp+70h+var_24], 28h
inc     eax
mov     [esp+70h+var_10], eax
cmp     eax, [ecx+18h]
jl      short loc_10069364
mov     [esp+70h+var_34], ebx
test    ebx, ebx
jz      loc_1006946f
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_100693f6
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [esi], 45h
mov     [esi+1eh], dx
mov     dword ptr [esi+2ch], 1
mov     edi, [esp+70h+var_60]
mov     eax, [edi]
mov     [esp+70h+var_10], eax
test    esi, esi
jnz     short loc_10069429
push    esi
push    eax
call    sub_10036430
mov     eax, [esp+78h+var_10]
push    ebx
push    eax
call    sub_10036430
add     esp, 10h
jmp     short loc_10069463
mov     ecx, [ecx+0ch]
mov     [esp+70h+var_38], ecx
mov     edi, ebx
jmp     loc_100692ff
mov     ecx, 100h
mov     [esi+0ch], ebx
test    [ebx+2], cx
jz      short loc_10069443
mov     edx, ecx
or      [esi+2], dx
mov     eax, [ebx+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [edi]
mov     eax, [ecx+54h]
cmp     [esi+2ch], eax
jle     short loc_10069463
push    eax
push    offset aexpressiontree
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     [esp+70h+var_34], esi
mov     esi, [esp+70h+var_54]
mov     ebx, [esp+70h+var_34]
mov     eax, [esp+70h+var_40]
xor     ecx, ecx
mov     [esp+70h+var_30], ecx
cmp     [eax+18h], ecx
jle     loc_100695fd
mov     [esp+70h+var_24], ecx
mov     eax, [eax+20h]
add     eax, [esp+70h+var_24]
mov     edx, [eax+8]
cmp     edx, [esp+70h+var_58]
jz      short loc_100694a5
mov     ecx, 200h
cmp     [eax+10h], cx
jnz     loc_100695e2
mov     eax, [eax]
test    ebx, ebx
jz      short loc_100694b0
mov     [ebx+8], eax
mov     eax, ebx
mov     edx, [esp+70h+var_1c]
push    edx
push    0f0h
push    0
push    0
push    eax
mov     eax, [esp+84h+var_38]
push    eax
push    edi
call    sub_10069990
add     esp, 1ch
mov     [esp+70h+var_10], eax
test    eax, eax
jz      loc_100695e2
mov     ecx, [esp+70h+var_5c]
movzx   edx, byte ptr [ecx+30h]
mov     ecx, [ebp+arg_4]
push    0
push    edx
mov     edx, [esp+78h+var_38]
add     eax, 34h
push    ecx
push    eax
push    edx
mov     eax, edi
call    sub_10068100
add     esp, 14h
cmp     word ptr [esp+70h+var_c], 0
jnz     short loc_10069554
mov     eax, [esp+70h+var_40]
mov     ecx, [eax+18h]
dec     ecx
cmp     [esp+70h+var_30], ecx
jnz     short loc_10069516
or      ebx, 0ffffffffh
jmp     short loc_1006951a
mov     ebx, [esp+70h+var_30]
mov     edx, [esp+70h+src]
mov     eax, [esp+70h+var_58]
mov     ecx, [esp+70h+var_3c]
mov     edi, [esp+70h+var_60]
push    0
push    edx
mov     edx, [ecx+0ch]
push    eax
push    edx
or      eax, 0ffffffffh
call    sub_10038820
mov     ecx, [esp+80h+var_18]
push    ebx
push    eax
mov     eax, [esi+1ch]
add     eax, 2
push    eax
push    ecx
push    72h
mov     eax, esi
call    sub_10025b50
add     esp, 24h
mov     ebx, [esi+1ch]
cmp     [esi+20h], ebx
jg      short loc_10069567
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10069594
mov     eax, [esi+4]
inc     dword ptr [esi+1ch]
mov     ecx, [esp+70h+var_2c]
lea     edx, [ebx+ebx*4]
lea     eax, [eax+edx*4]
mov     edx, [esp+70h+var_48]
mov     [eax+8], edx
xor     edx, edx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     word ptr [eax], 2
jmp     short loc_10069596
xor     edx, edx
mov     eax, [esp+70h+var_10]
cmp     byte ptr [eax+7], 0
jz      short loc_100695a8
mov     [esp+70h+var_4c], 1
mov     ecx, [eax+34h]
test    ecx, 0f0000h
jz      short loc_100695cd
test    ecx, 20000000h
jnz     short loc_100695cd
cmp     [esp+70h+var_30], edx
jz      short loc_100695ca
mov     ecx, [esp+70h+var_28]
cmp     [eax+44h], ecx
jnz     short loc_100695cd
mov     edx, [eax+44h]
push    eax
mov     [esp+74h+var_28], edx
call    sub_1006a540
mov     ebx, [esp+74h+var_34]
mov     edi, [esp+74h+var_60]
add     esp, 4
mov     ecx, [esp+70h+var_30]
mov     eax, [esp+70h+var_40]
add     [esp+70h+var_24], 28h
inc     ecx
mov     [esp+70h+var_30], ecx
cmp     ecx, [eax+18h]
jl      loc_10069486
mov     edx, [esp+70h+var_5c]
mov     eax, [esp+70h+var_28]
mov     ecx, [esp+70h+var_1c]
mov     [edx+3ch], eax
mov     [edx+1ch], ecx
test    ebx, ebx
jz      short loc_1006962a
mov     dword ptr [ebx+8], 0
mov     edx, [edi]
push    ebx
push    edx
call    sub_10036430
mov     edx, [esp+78h+var_5c]
add     esp, 8
mov     eax, [esi+1ch]
mov     ecx, [esp+70h+var_8]
cmp     eax, ecx
jbe     short loc_1006963f
mov     edi, [esi+4]
lea     ecx, [ecx+ecx*4]
mov     [edi+ecx*4+4], eax
mov     ebx, [esi+1ch]
mov     edx, [edx+20h]
mov     [esp+70h+var_8], edx
cmp     [esi+20h], ebx
jg      short loc_10069659
mov     edi, esi
call    sub_10025810
test    eax, eax
jnz     short loc_10069680
mov     ecx, [esi+4]
inc     dword ptr [esi+1ch]
mov     edx, [esp+70h+var_8]
lea     eax, [ebx+ebx*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
mov     eax, [esi+28h]
test    eax, eax
jz      short loc_10069699
mov     ecx, [esp+70h+var_48]
lea     edx, ds:4[ecx*4]
mov     ecx, [esi+1ch]
sub     eax, edx
mov     [eax], ecx
mov     edx, [ebp+arg_0]
cmp     dword ptr [edx+1ch], 1
jle     short loc_100696b1
mov     ecx, [esp+70h+var_60]
mov     eax, [esp+70h+var_38]
mov     ecx, [ecx]
call    sub_10009810
cmp     [esp+70h+var_4c], 0
jnz     short loc_100696ff
mov     eax, [esp+70h+var_4]
mov     esi, [esp+70h+var_5c]
call    sub_100679b0
mov     esi, [esp+70h+var_54]
jmp     short loc_100696ff
mov     ecx, [esp+70h+var_4c]
mov     dl, ds:byte_10076f04[ecx]
mov     eax, [esp+70h+var_58]
mov     [edi+31h], dl
mov     edx, [esp+70h+var_30]
push    edx
push    eax
mov     [edi+34h], eax
movzx   eax, ds:byte_10076f08[ecx]
push    eax
mov     eax, esi
call    sub_10025990
add     esp, 0ch
inc     eax
mov     [edi+38h], eax
mov     byte ptr [edi+32h], 1
mov     ebx, [esp+70h+var_50]
mov     edx, [ebx+4]
mov     eax, [edx]
xor     ecx, ecx
test    eax, eax
jle     short loc_10069721
add     edx, 4
mov     edi, [edx]
cmp     edi, [esp+70h+var_58]
jz      short loc_1006975f
inc     ecx
add     edx, 4
cmp     ecx, eax
jl      short loc_10069711
xor     eax, eax
xor     edx, edx
mov     edi, [ebx+20h]
mov     ebx, [ebx+18h]
not     eax
and     [ebp+arg_c], eax
not     edx
and     [ebp+arg_10], edx
test    ebx, ebx
jle     short loc_100697a0
lea     esp, [esp+0]
test    byte ptr [edi+12h], 6
jnz     short loc_10069798
mov     eax, [edi+20h]
mov     ecx, [edi+24h]
and     eax, [ebp+arg_c]
and     ecx, [ebp+arg_10]
or      eax, ecx
jz      short loc_1006976d
mov     ecx, [ebp+arg_0]
mov     byte ptr [ecx+7], 1
jmp     short loc_10069798
mov     eax, 1
xor     edx, edx
call    __allshl
jmp     short loc_10069725
mov     edx, [esp+70h+var_5c]
cmp     dword ptr [edx+14h], 0
mov     eax, [edi]
jz      short loc_1006977f
test    byte ptr [eax+2], 1
jz      short loc_10069798
mov     ecx, [esp+70h+var_20]
mov     edx, [esp+70h+var_60]
push    8
push    ecx
push    eax
push    edx
call    sub_1003a1c0
add     esp, 10h
or      byte ptr [edi+12h], 4
dec     ebx
add     edi, 28h
test    ebx, ebx
jg      short loc_10069740
mov     eax, [esp+70h+var_5c]
mov     ecx, [eax+14h]
mov     [esp+70h+var_4], ecx
test    ecx, ecx
jz      loc_100698aa
mov     edx, [esi+1ch]
mov     [eax+2ch], edx
mov     edi, [esi+1ch]
mov     eax, [esi+20h]
cmp     eax, edi
jg      short loc_1006982a
test    eax, eax
jz      short loc_100697cb
add     eax, eax
jmp     short loc_100697d0
mov     eax, 33h
mov     ebx, [esi+4]
lea     ecx, [eax+eax*4]
mov     eax, [esi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_10069852
mov     eax, [esi]
test    eax, eax
jz      short loc_1006980a
cmp     ebx, [eax+0fch]
jb      short loc_1006980a
cmp     ebx, [eax+100h]
jnb     short loc_1006980a
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_10069816
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     ecx, [esp+70h+var_4]
shr     edx, 4
mov     [esi+20h], edx
mov     [esi+4], ebx
mov     edx, 1
add     [esi+1ch], edx
mov     esi, [esi+4]
lea     eax, [edi+edi*4]
lea     eax, [esi+eax*4]
mov     [eax+8], ecx
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 7
mov     eax, [esp+70h+var_60]
call    sub_100388c0
mov     ebx, [esp+70h+var_50]
mov     esi, [ebx+20h]
xor     edi, edi
cmp     [ebx+18h], edi
jle     short loc_100698aa
lea     esp, [esp+0]
test    byte ptr [esi+12h], 6
jnz     short loc_100698a1
mov     eax, [esi+20h]
mov     ecx, [esi+24h]
and     eax, [ebp+arg_c]
and     ecx, [ebp+arg_10]
or      eax, ecx
jnz     short loc_100698a1
mov     ecx, [esp+70h+var_20]
mov     edx, [esi]
mov     eax, [esp+70h+var_60]
push    8
push    ecx
push    edx
push    eax
call    sub_1003a1c0
add     esp, 10h
or      byte ptr [esi+12h], 4
inc     edi
add     esi, 28h
cmp     edi, [ebx+18h]
jl      short loc_10069870
mov     esi, [esp+70h+var_44]
test    esi, esi
jz      short loc_100698db
mov     edx, [esp+70h+var_60]
mov     bl, [edx+13h]
cmp     bl, 8
jnb     short loc_100698db
xor     eax, eax
lea     ecx, [edx+64h]
cmp     [ecx+10h], esi
jz      short loc_100698e8
inc     eax
add     ecx, 18h
cmp     eax, 0ah
jl      short loc_100698c3
movzx   ecx, bl
mov     [edx+ecx*4+1ch], esi
inc     byte ptr [edx+13h]
mov     edx, [ebp+arg_10]
mov     eax, [ebp+arg_c]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_10]
mov     eax, [ebp+arg_c]
pop     edi
pop     esi
mov     byte ptr [ecx+8], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_4]
test    edi, edi
jz      short loc_10069986
push    ebx
xor     ebx, ebx
cmp     [edi+1ch], ebx
jle     short loc_1006996d
add     edi, 34h
push    esi
mov     esi, [edi+44h]
test    esi, esi
jz      short loc_1006993a
cmp     dword ptr [esi+1ch], 0
jz      short loc_10069930
mov     eax, [esi+18h]
push    eax
call    sub_10009770
add     esp, 4
mov     ecx, [ebp+arg_0]
mov     eax, esi
call    sub_10009810
test    dword ptr [edi], 20000000h
jz      short loc_1006995e
mov     esi, [edi+10h]
test    esi, esi
jz      short loc_1006995e
mov     eax, [esi+10h]
mov     ecx, [ebp+arg_0]
call    sub_10009810
mov     ecx, [ebp+arg_0]
mov     eax, esi
call    sub_10009810
mov     ecx, [ebp+arg_4]
inc     ebx
add     edi, 48h
cmp     ebx, [ecx+1ch]
jl      short loc_10069917
mov     edi, ecx
pop     esi
mov     edx, [edi+20h]
push    edx
call    sub_10063f30
mov     ecx, [ebp+arg_0]
add     esp, 4
pop     ebx
mov     eax, edi
pop     edi
pop     ebp
jmp     sub_10009810
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ach
mov     ecx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx+8]
mov     [esp+0b0h+var_94], eax
movzx   eax, word ptr [ecx]
push    esi
push    edi
cmp     ax, 40h
jle     short loc_100699ce
push    40h
push    offset aatmostdtablesi
push    ebx
call    sub_1000bb30
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_14]
and     ecx, 40h
mov     [esp+0b8h+var_7c], ecx
jz      short loc_100699e1
mov     eax, 1
jmp     short loc_100699e2
cwde
mov     esi, [ebx]
lea     edi, [eax+eax*8]
lea     edi, ds:3bh[edi*8]
and     edi, 0fffffff8h
lea     ecx, [edi+268h]
mov     [esp+0b8h+var_90], eax
mov     [esp+0b8h+var_84], esi
call    sub_10009a40
mov     esi, eax
mov     [esp+0b8h+var_a8], esi
test    esi, esi
jz      short loc_10069a20
lea     eax, [edi+268h]
push    eax
push    0
push    esi
call    memset
add     esp, 0ch
mov     edx, [esp+0b8h+var_84]
cmp     byte ptr [edx+32h], 0
jz      short loc_10069a3c
mov     eax, esi
mov     ecx, edx
call    sub_10009810
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esp+0b8h+var_90]
mov     ecx, [ebp+arg_4]
mov     [esi+1ch], eax
mov     eax, [esp+0b8h+var_94]
mov     [esi], ebx
mov     [esi+0ch], ecx
call    sub_10025c00
mov     dx, word ptr [ebp+arg_14]
add     edi, esi
mov     [esi+18h], eax
mov     eax, [esp+0b8h+var_84]
mov     [esi+20h], edi
mov     [esi+4], dx
fld     qword ptr [ebx+1b8h]
fstp    qword ptr [esi+24h]
test    byte ptr [eax+18h], 80h
mov     [esp+0b8h+var_80], edi
jz      short loc_10069a82
mov     [ebp+arg_10], 0
push    104h
lea     eax, [edi+164h]
push    0
push    eax
call    memset
mov     dx, word ptr [ebp+arg_14]
lea     eax, [edi+164h]
mov     [edi+4], eax
xor     eax, eax
lea     ecx, [edi+24h]
add     esp, 0ch
mov     [edi], ebx
mov     [edi+10h], eax
mov     [edi+18h], eax
mov     dword ptr [edi+1ch], 8
mov     [edi+20h], ecx
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     [edi+16h], dx
cmp     [ebx+15ch], eax
jnz     short loc_10069afb
mov     eax, [ebx]
test    byte ptr [eax+18h], 40h
jnz     short loc_10069afb
mov     ecx, [ebp+arg_8]
push    ecx
lea     edx, [esp+0bch+var_54]
push    edx
mov     [esp+0c0h+var_54], offset sub_10039bb0
mov     [esp+0c0h+var_50], 0
mov     dword ptr [esp+0c0h+var_4c], ebx
call    sub_10033e00
add     esp, 8
mov     eax, [ebp+arg_8]
push    45h
push    eax
push    edi
call    sub_10064090
add     esp, 0ch
cmp     [ebp+arg_8], 0
jz      short loc_10069b36
cmp     [esp+0b8h+var_90], 0
jz      short loc_10069b23
mov     eax, [ebp+arg_8]
call    sub_100371c0
test    eax, eax
jz      short loc_10069b36
mov     ecx, [esi+18h]
mov     edx, [ebp+arg_8]
push    8
push    ecx
push    edx
push    ebx
call    sub_1003a1c0
add     esp, 10h
mov     esi, [ebp+arg_4]
xor     eax, eax
xor     ebx, ebx
cmp     ax, [esi]
jge     short loc_10069b94
add     esi, 10h
jmp     short loc_10069b50
mov     ecx, [edi+164h]
mov     edx, [esi+14h]
mov     [edi+ecx*4+168h], edx
inc     dword ptr [edi+164h]
mov     eax, [esi]
test    eax, eax
jz      short loc_10069b86
test    byte ptr [eax+22h], 10h
jz      short loc_10069b86
mov     eax, 1
xor     edx, edx
mov     ecx, ebx
call    __allshl
or      [edi+8], eax
or      [edi+0ch], edx
mov     eax, [ebp+arg_4]
movsx   ecx, word ptr [eax]
inc     ebx
add     esi, 3ch
cmp     ebx, ecx
jl      short loc_10069b50
mov     esi, [edi+18h]
dec     esi
js      short loc_10069bae
mov     ebx, [ebp+arg_4]
lea     ecx, [ecx+0]
push    esi
push    edi
push    ebx
call    sub_100650c0
add     esp, 0ch
dec     esi
jns     short loc_10069ba0
mov     edx, [esp+0b8h+var_84]
cmp     byte ptr [edx+32h], 0
jnz     loc_1006a098
mov     eax, [ebp+arg_10]
xor     ebx, ebx
cmp     eax, ebx
jz      short loc_10069be9
mov     ecx, [ebp+arg_0]
push    eax
mov     eax, [esp+0bch+var_80]
push    eax
mov     eax, [ebp+arg_4]
push    ecx
call    sub_10065b20
add     esp, 0ch
test    eax, eax
jz      short loc_10069be9
mov     edx, [esp+0b8h+var_a8]
mov     [ebp+arg_10], ebx
mov     byte ptr [edx+8], 1
or      eax, 0ffffffffh
mov     [esp+0b8h+var_a0], eax
mov     [esp+0b8h+var_9c], eax
mov     [esp+0b8h+var_88], eax
mov     eax, [esp+0b8h+var_a8]
add     eax, 34h
mov     [esp+0b8h+var_5c], ebx
mov     [esp+0b8h+var_78], ebx
mov     [esp+0b8h+var_98], eax
cmp     [esp+0b8h+var_90], ebx
jle     loc_1006a041
jmp     short loc_10069c20
mov     ecx, [esp+0b8h+var_90]
fld     ds:dbl_1007d010
xor     eax, eax
xor     edx, edx
dec     ecx
cmp     ebx, ecx
setl    dl
mov     dword ptr [esp+0b8h+var_40], eax
mov     dword ptr [esp+0b8h+var_40+4], eax
fstp    [esp+0b8h+var_40]
mov     [esp+0b8h+var_74], 0ffffffffh
mov     [esp+0b8h+var_54], eax
mov     [esp+0b8h+var_50], eax
mov     dword ptr [esp+0b8h+var_4c], eax
mov     ecx, edx
mov     dword ptr [esp+0b8h+var_4c+4], eax
mov     [esp+0b8h+var_44], eax
mov     [esp+0b8h+var_38], eax
mov     [esp+0b8h+var_34], eax
mov     [esp+0b8h+var_6c], eax
mov     [esp+0b8h+var_68], eax
mov     [esp+0b8h+var_64], eax
mov     [esp+0b8h+var_70], ecx
cmp     ecx, eax
jl      loc_10069f04
cmp     [esp+0b8h+var_74], 0
jge     loc_10069f04
mov     ecx, [ebp+arg_4]
mov     eax, ebx
shl     eax, 4
sub     eax, ebx
lea     edx, [ecx+eax*4+4]
mov     [esp+0b8h+var_8c], ebx
mov     [esp+0b8h+var_a4], edx
cmp     ebx, [esp+0b8h+var_90]
jge     loc_10069efa
mov     ecx, [esp+0b8h+var_a8]
lea     eax, [ebx+ebx*8]
lea     edx, [ecx+eax*8+78h]
mov     [esp+0b8h+var_58], edx
mov     edi, edi
mov     eax, [esp+0b8h+var_a4]
test    byte ptr [eax+1ch], 0ah
mov     eax, 0
setnz   al
mov     [esp+0b8h+var_28], eax
cmp     [esp+0b8h+var_8c], ebx
jz      short loc_10069ce5
test    eax, eax
jnz     loc_10069efa
mov     esi, [esp+0b8h+var_80]
xor     ecx, ecx
cmp     [esi+164h], ecx
jle     short loc_10069d10
mov     edx, [esp+0b8h+var_a4]
mov     edx, [edx+20h]
lea     eax, [esi+168h]
cmp     [eax], edx
jz      short loc_10069d3f
inc     ecx
add     eax, 4
cmp     ecx, [esi+164h]
jl      short loc_10069d00
xor     edi, edi
xor     esi, esi
mov     eax, edi
and     eax, [esp+0b8h+var_a0]
mov     ecx, esi
and     ecx, [esp+0b8h+var_9c]
mov     [esp+0b8h+var_2c], esi
or      eax, ecx
jnz     short loc_10069d51
cmp     [esp+0b8h+var_8c], ebx
jnz     loc_10069edd
inc     ebx
mov     [esp+0b8h+var_5c], ebx
jmp     loc_10069edd
mov     eax, 1
xor     edx, edx
call    __allshl
mov     edi, eax
mov     esi, edx
jmp     short loc_10069d14
cmp     [esp+0b8h+var_70], 0
jz      short loc_10069d5c
mov     edx, edi
jmp     short loc_10069d64
mov     edx, [esp+0b8h+var_a0]
mov     esi, [esp+0b8h+var_9c]
mov     eax, [esp+0b8h+var_78]
test    eax, eax
jnz     short loc_10069d77
mov     ecx, [ebp+arg_c]
test    ecx, ecx
jz      short loc_10069d77
mov     ecx, [ecx]
jmp     short loc_10069d79
xor     ecx, ecx
mov     ebx, [esp+0b8h+var_a4]
neg     eax
sbb     eax, eax
not     eax
and     eax, [ebp+arg_10]
cmp     dword ptr [ebx+38h], 0
jnz     short loc_10069d90
inc     [esp+0b8h+var_6c]
mov     ebx, [esp+0b8h+var_a4]
mov     ebx, [ebx+0ch]
test    byte ptr [ebx+22h], 10h
jz      short loc_10069dcc
mov     eax, [esp+0b8h+var_58]
push    eax
lea     eax, [esp+0bch+var_24]
push    eax
mov     eax, [esp+0c0h+var_a0]
push    ecx
mov     ecx, [esp+0c4h+var_9c]
push    ecx
mov     ecx, [esp+0c8h+var_a4]
push    eax
mov     eax, [ebp+arg_0]
push    esi
push    edx
mov     edx, [esp+0d4h+var_80]
push    ecx
push    edx
push    eax
call    sub_10066fa0
jmp     short loc_10069df5
lea     ebx, [esp+0b8h+var_24]
push    ebx
push    eax
mov     eax, [esp+0c0h+var_a0]
push    ecx
mov     ecx, [esp+0c4h+var_9c]
push    ecx
mov     ecx, [esp+0c8h+var_a4]
push    eax
mov     eax, [ebp+arg_0]
push    esi
push    edx
mov     edx, [esp+0d4h+var_80]
push    ecx
push    edx
push    eax
call    sub_100671c0
mov     esi, [esp+0e0h+var_24]
mov     edx, [esp+0e0h+var_2c]
add     esp, 28h
cmp     [esp+0b8h+var_70], 0
jz      short loc_10069e1d
test    esi, 100f3000h
jnz     short loc_10069e1d
or      [esp+0b8h+var_68], edi
or      [esp+0b8h+var_64], edx
mov     eax, [esp+0b8h+var_8]
mov     ecx, [esp+0b8h+var_4]
and     eax, [esp+0b8h+var_a0]
and     ecx, [esp+0b8h+var_9c]
or      eax, ecx
jnz     loc_10069ecf
mov     ecx, [esp+0b8h+var_74]
test    ecx, ecx
js      short loc_10069e63
and     edi, [esp+0b8h+var_68]
and     edx, [esp+0b8h+var_64]
mov     eax, edi
or      eax, edx
jnz     short loc_10069e63
test    [esp+0b8h+var_54], 100f3000h
jz      short loc_10069e63
test    esi, 100f3000h
jz      short loc_10069ecf
cmp     [esp+0b8h+var_6c], 0
jz      short loc_10069e7c
mov     edx, [esp+0b8h+var_a4]
cmp     dword ptr [edx+38h], 0
jz      short loc_10069e7c
test    esi, 100f3000h
jz      short loc_10069ecf
test    ecx, ecx
js      short loc_10069eb5
fld     [esp+0b8h+var_40]
fld     [esp+0b8h+var_10]
fcom    st(1)
fnstsw  ax
test    ah, 5
jnp     short loc_10069eb1
fcompp
fnstsw  ax
test    ah, 41h
jp      short loc_10069ecf
fld     [esp+0b8h+var_4c]
fcomp   [esp+0b8h+var_1c]
fnstsw  ax
test    ah, 41h
jnz     short loc_10069ecf
jmp     short loc_10069eb5
fstp    st(1)
fstp    st
mov     eax, [esp+0b8h+var_8c]
mov     ecx, 9
lea     esi, [esp+0b8h+var_24]
lea     edi, [esp+0b8h+var_54]
rep movsd
mov     [esp+0b8h+var_74], eax
cmp     [esp+0b8h+var_28], 0
mov     ebx, [esp+0b8h+var_5c]
jnz     short loc_10069efa
mov     eax, [esp+0b8h+var_8c]
add     [esp+0b8h+var_58], 48h
add     [esp+0b8h+var_a4], 3ch
inc     eax
mov     [esp+0b8h+var_8c], eax
cmp     eax, [esp+0b8h+var_90]
jl      loc_10069cc0
dec     [esp+0b8h+var_70]
jns     loc_10069c84
mov     ecx, [esp+0b8h+var_54]
test    ecx, 1000000h
jz      short loc_10069f1d
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_10069f1d
mov     dword ptr [eax], 0
test    ecx, 40000000h
jz      short loc_10069f2d
mov     edx, [esp+0b8h+var_a8]
mov     byte ptr [edx+8], 2
mov     eax, [esp+0b8h+var_98]
mov     edx, [esp+0b8h+var_50]
and     [esp+0b8h+var_88], ecx
mov     [eax], ecx
mov     [eax+4], edx
mov     edx, dword ptr [esp+0b8h+var_4c]
mov     [eax+8], edx
mov     edx, dword ptr [esp+0b8h+var_4c+4]
mov     [eax+0ch], edx
mov     edx, [esp+0b8h+var_44]
mov     [eax+10h], edx
test    ecx, 200f0000h
jz      short loc_10069f81
cmp     word ptr [esp+0b8h+var_7c], 0
jz      short loc_10069f73
test    ecx, 20000000h
jnz     short loc_10069f73
mov     ecx, [ebp+arg_18]
mov     [eax+1ch], ecx
jmp     short loc_10069f88
mov     edi, [ebp+arg_0]
mov     edx, [edi+48h]
mov     [eax+1ch], edx
inc     dword ptr [edi+48h]
jmp     short loc_10069f8b
mov     dword ptr [eax+1ch], 0ffffffffh
mov     edi, [ebp+arg_0]
mov     eax, [esp+0b8h+var_80]
xor     ecx, ecx
cmp     [eax+164h], ecx
jle     short loc_10069fc1
mov     edx, [esp+0b8h+var_74]
mov     esi, [ebp+arg_4]
shl     edx, 4
sub     edx, [esp+0b8h+var_74]
mov     esi, [esi+edx*4+24h]
lea     edx, [eax+168h]
cmp     [edx], esi
jz      short loc_10069ffb
inc     ecx
add     edx, 4
cmp     ecx, [eax+164h]
jl      short loc_10069fb1
xor     eax, eax
xor     edx, edx
fld1
mov     ecx, [esp+0b8h+var_74]
fld     [esp+0b8h+var_4c]
not     eax
and     [esp+0b8h+var_a0], eax
fcom    st(1)
mov     eax, [esp+0b8h+var_98]
mov     [eax+30h], cl
not     edx
and     [esp+0b8h+var_9c], edx
fnstsw  ax
fstp    st(1)
test    ah, 1
jnz     short loc_1006a009
fmul    qword ptr [edi+1b8h]
fstp    qword ptr [edi+1b8h]
jmp     short loc_1006a00b
mov     eax, 1
xor     edx, edx
call    __allshl
jmp     short loc_10069fc5
fstp    st
mov     edx, [ebp+arg_4]
lea     eax, [ecx+1]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
mov     eax, [edx+ecx*4]
test    eax, eax
jz      short loc_1006a029
test    [esp+0b8h+var_54], 0f0000h
jz      short loc_1006a087
mov     eax, [esp+0b8h+var_78]
add     [esp+0b8h+var_98], 48h
inc     eax
mov     [esp+0b8h+var_78], eax
cmp     eax, [esp+0b8h+var_90]
jl      loc_10069c20
mov     ecx, [ebp+arg_0]
cmp     dword ptr [ecx+44h], 0
jnz     short loc_1006a098
mov     edx, [esp+0b8h+var_84]
cmp     byte ptr [edx+32h], 0
jnz     short loc_1006a098
mov     eax, [esp+0b8h+var_88]
and     eax, 4000000h
jz      short loc_1006a06c
mov     ecx, [ebp+arg_c]
test    ecx, ecx
jz      short loc_1006a06c
mov     dword ptr [ecx], 0
test    byte ptr [ebp+arg_14], 4
jz      short loc_1006a0bf
test    eax, eax
jz      short loc_1006a0bf
mov     ebx, [esp+0b8h+var_a8]
and     dword ptr [ebx+34h], 0ff7fffffh
mov     byte ptr [ebx+6], 1
jmp     short loc_1006a0c3
mov     eax, [eax]
push    eax
push    offset acannotuseindex
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     eax, [esp+0b8h+var_a8]
mov     edx, [esp+0b8h+var_84]
fld     qword ptr [eax+24h]
mov     ecx, [ebp+arg_0]
push    eax
fstp    qword ptr [ecx+1b8h]
push    edx
call    sub_10069900
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [esp+0b8h+var_a8]
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+1b0h]
test    eax, eax
jz      short loc_1006a0d6
mov     [esp+0b8h+var_88], eax
jmp     short loc_1006a0dc
mov     [esp+0b8h+var_88], ecx
mov     eax, ecx
cmp     dword ptr [eax+15ch], 0
jnz     short loc_1006a13a
push    eax
call    sub_10056c90
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_1006a13a
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1006a10c
call    sub_10025810
test    eax, eax
jz      short loc_1006a10c
mov     esi, 1
jmp     short loc_1006a12f
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
xor     ecx, ecx
mov     byte ptr [eax+3], 0
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 1
mov     edx, [esp+0b8h+var_88]
inc     esi
mov     [edx+15ch], esi
fld1
or      eax, 0ffffffffh
mov     [esp+0b8h+var_a0], eax
fstp    qword ptr [ebx+2ch]
mov     [esp+0b8h+var_9c], eax
lea     eax, [ebx+34h]
mov     [esp+0b8h+var_98], eax
mov     eax, [esp+0b8h+var_90]
test    eax, eax
jle     loc_1006a4a6
mov     [esp+0b8h+var_78], eax
mov     ecx, [esp+0b8h+var_98]
movzx   eax, byte ptr [ecx+30h]
fld     qword ptr [ecx+8]
mov     edx, eax
shl     edx, 4
sub     edx, eax
mov     eax, [ebp+arg_4]
mov     esi, [eax+edx*4+10h]
lea     edi, [eax+edx*4+4]
mov     edx, [edi+20h]
mov     [ecx+18h], edx
mov     eax, 0fff0bdc0h
fmul    qword ptr [ebx+2ch]
mov     [esp+0b8h+var_a4], edi
mov     [esp+0b8h+var_8c], eax
fstp    qword ptr [ebx+2ch]
mov     edx, [esi+44h]
test    edx, edx
jz      short loc_1006a1cf
mov     ecx, [esp+0b8h+var_84]
mov     ecx, [ecx+14h]
xor     eax, eax
mov     [esp+0b8h+var_8c], eax
mov     [esp+0b8h+var_7c], ecx
test    ecx, ecx
jle     short loc_1006a1cf
mov     ecx, [esp+0b8h+var_84]
mov     ecx, [ecx+10h]
add     ecx, 0ch
cmp     [ecx], edx
jz      short loc_1006a1cb
inc     eax
add     ecx, 10h
cmp     eax, [esp+0b8h+var_7c]
jl      short loc_1006a1bd
mov     [esp+0b8h+var_8c], eax
test    byte ptr [esi+22h], 2
jnz     loc_1006a33e
cmp     dword ptr [esi+1ch], 0
jnz     loc_1006a33e
mov     edx, [esp+0b8h+var_98]
mov     ecx, [edx]
test    ecx, 8000000h
jz      loc_1006a2be
mov     ebx, [esi+34h]
xor     ecx, ecx
cmp     ebx, ecx
jz      short loc_1006a20d
mov     eax, [esp+0b8h+var_84]
cmp     [ebx], eax
jz      short loc_1006a20d
mov     ebx, [ebx+18h]
cmp     ebx, ecx
jnz     short loc_1006a202
mov     eax, [esp+0b8h+var_a4]
mov     edx, [eax+20h]
mov     eax, [esp+0b8h+var_94]
mov     esi, [eax+1ch]
mov     [esp+0b8h+var_7c], edx
cmp     [eax+20h], esi
jg      short loc_1006a23a
mov     edi, eax
call    sub_10025810
test    eax, eax
jz      short loc_1006a236
mov     eax, 1
jmp     short loc_1006a261
xor     ecx, ecx
mov     eax, edi
inc     dword ptr [eax+1ch]
mov     eax, [eax+4]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     edx, [esp+0b8h+var_7c]
mov     byte ptr [eax+3], 0
mov     [eax+4], edx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     word ptr [eax], 87h
mov     eax, esi
mov     ecx, [esp+0b8h+var_94]
mov     esi, [ecx+4]
mov     edi, [ecx]
test    esi, esi
jz      loc_1006a33e
cmp     byte ptr [edi+32h], 0
jnz     loc_1006a33e
test    eax, eax
jns     short loc_1006a286
mov     eax, ecx
mov     eax, [eax+1ch]
dec     eax
lea     ecx, [eax+eax*4]
movsx   eax, byte ptr [esi+ecx*4+1]
lea     esi, [esi+ecx*4]
mov     ecx, [esi+10h]
call    sub_10025e50
mov     dword ptr [esi+10h], 0
test    ebx, ebx
jnz     short loc_1006a2af
mov     [esi+10h], ebx
mov     [esi+1], bl
jmp     loc_1006a33e
mov     [esi+10h], ebx
mov     byte ptr [esi+1], 0f6h
inc     dword ptr [ebx+0ch]
jmp     loc_1006a33e
test    ecx, 800000h
jnz     short loc_1006a329
test    byte ptr [ebp+arg_14], 10h
jnz     short loc_1006a329
xor     edx, edx
cmp     [ebx+6], dl
setnz   dl
add     edx, 27h
push    edx
push    esi
push    eax
mov     eax, [edi+20h]
push    eax
mov     eax, [ebp+arg_0]
call    sub_1004b860
add     esp, 10h
cmp     byte ptr [ebx+6], 0
jnz     short loc_1006a33e
cmp     dword ptr [esi+8], 40h
jge     short loc_1006a33e
mov     eax, [edi+2ch]
mov     ecx, [edi+30h]
mov     esi, eax
xor     edx, edx
or      esi, ecx
jz      short loc_1006a310
shrd    eax, ecx, 1
shr     ecx, 1
mov     esi, eax
inc     edx
or      esi, ecx
jnz     short loc_1006a303
mov     ecx, [esp+0b8h+var_94]
mov     eax, [ecx+1ch]
push    edx
push    ecx
dec     eax
mov     ecx, 0fffffff2h
call    sub_10025f90
add     esp, 8
jmp     short loc_1006a33e
mov     ecx, [esi]
mov     edx, [esi+14h]
push    ecx
push    0
push    edx
push    eax
mov     eax, [ebp+arg_0]
call    sub_1003ef00
add     esp, 10h
mov     eax, [esp+0b8h+var_98]
mov     eax, [eax]
test    eax, 20000000h
jz      short loc_1006a375
mov     ecx, [esp+0b8h+var_98]
mov     edx, [esp+0b8h+var_9c]
mov     eax, [esp+0b8h+var_a0]
push    ecx
mov     ecx, [esp+0bch+var_a4]
push    edx
mov     edx, [esp+0c0h+var_80]
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    eax
call    sub_10066270
add     esp, 18h
jmp     loc_1006a44a
test    eax, 0f0000h
jz      loc_1006a44a
mov     edi, [esp+0b8h+var_98]
mov     esi, [edi+10h]
mov     ecx, [ebp+arg_0]
push    esi
push    ecx
call    sub_10044250
mov     edx, [esi+28h]
mov     ebx, [edi+1ch]
mov     [esp+0c0h+var_88], eax
mov     eax, [esp+0c0h+var_94]
mov     esi, [eax+1ch]
add     esp, 8
mov     [esp+0b8h+var_7c], edx
cmp     [eax+20h], esi
jg      short loc_1006a3c2
mov     edi, eax
call    sub_10025810
test    eax, eax
jz      short loc_1006a3c0
mov     eax, 1
jmp     short loc_1006a3f1
mov     eax, edi
mov     edx, [eax+4]
inc     dword ptr [eax+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [esp+0b8h+var_7c]
mov     edx, [esp+0b8h+var_8c]
mov     byte ptr [eax+3], 0
mov     [eax+4], ebx
mov     [eax+8], ecx
mov     [eax+0ch], edx
mov     dword ptr [eax+10h], 0
mov     word ptr [eax], 27h
mov     eax, esi
mov     ecx, [esp+0b8h+var_94]
mov     esi, [ecx+4]
mov     edi, [ecx]
xor     ebx, ebx
cmp     esi, ebx
jz      short loc_1006a43c
cmp     [edi+32h], bl
jnz     short loc_1006a43c
cmp     eax, ebx
jge     short loc_1006a40d
mov     eax, [ecx+1ch]
dec     eax
lea     eax, [eax+eax*4]
mov     ecx, [esi+eax*4+10h]
lea     esi, [esi+eax*4]
movsx   eax, byte ptr [esi+1]
call    sub_10025e50
mov     eax, [esp+0b8h+var_88]
mov     [esi+10h], ebx
cmp     eax, ebx
jnz     short loc_1006a433
mov     [esi+10h], ebx
mov     [esi+1], bl
jmp     short loc_1006a44a
mov     [esi+10h], eax
mov     byte ptr [esi+1], 0fah
jmp     short loc_1006a44a
mov     ecx, [esp+0b8h+var_88]
mov     eax, 0fffffff0h
call    sub_10025e50
mov     ecx, [esp+0b8h+var_8c]
mov     eax, [ebp+arg_0]
push    ecx
call    sub_10043c40
mov     edx, [esp+0bch+var_80]
mov     edx, [edx+4]
mov     eax, [edx]
add     esp, 4
xor     ecx, ecx
test    eax, eax
jle     short loc_1006a483
mov     esi, [esp+0b8h+var_a4]
mov     esi, [esi+20h]
add     edx, 4
cmp     [edx], esi
jz      loc_1006a52d
inc     ecx
add     edx, 4
cmp     ecx, eax
jl      short loc_1006a473
xor     eax, eax
xor     edx, edx
add     [esp+0b8h+var_98], 48h
mov     ebx, [esp+0b8h+var_a8]
not     eax
and     [esp+0b8h+var_a0], eax
not     edx
and     [esp+0b8h+var_9c], edx
dec     [esp+0b8h+var_78]
jnz     loc_1006a161
mov     eax, [esp+0b8h+var_94]
mov     ecx, [eax+1ch]
mov     edx, [esp+0b8h+var_84]
mov     [ebx+10h], ecx
cmp     byte ptr [edx+32h], 0
jnz     loc_1006a098
or      ebx, 0ffffffffh
xor     esi, esi
mov     [esp+0b8h+var_9c], ebx
cmp     [esp+0b8h+var_90], esi
jle     short loc_1006a522
mov     edi, [esp+0b8h+var_a8]
add     edi, 5ch
mov     eax, [ebp+arg_14]
movzx   ecx, byte ptr [edi+8]
push    eax
mov     eax, [ebp+arg_4]
push    ecx
push    esi
lea     edx, [edi-28h]
push    edx
push    eax
mov     eax, [ebp+arg_0]
call    sub_10068100
mov     ecx, [esp+0cch+var_9c]
mov     edx, [ebp+arg_14]
mov     eax, [esp+0cch+var_a8]
add     esp, 14h
push    ecx
push    ebx
push    edx
push    esi
push    eax
call    sub_10068360
mov     ecx, [edi]
mov     [esp+0cch+var_9c], edx
mov     edx, [esp+0cch+var_a8]
inc     esi
add     esp, 14h
add     edi, 48h
mov     ebx, eax
mov     [edx+14h], ecx
cmp     esi, [esp+0b8h+var_90]
jl      short loc_1006a4d4
mov     eax, [esp+0b8h+var_a8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
xor     edx, edx
call    __allshl
jmp     loc_1006a487
push    ebp
mov     ebp, esp
sub     esp, 28h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi]
mov     ebx, [esi+0ch]
mov     ecx, [eax]
push    edi
mov     edi, [eax+8]
mov     [ebp+var_28], eax
mov     [ebp+var_24], ebx
mov     [ebp+var_14], ecx
call    sub_100388c0
mov     eax, [esi+1ch]
dec     eax
mov     [ebp+var_c], eax
js      loc_1006a9e4
mov     edx, eax
shl     edx, 4
sub     edx, eax
lea     ecx, [ebx+edx*4+24h]
lea     edx, [eax+eax*8+9]
lea     eax, [esi+edx*8]
mov     [ebp+var_10], ecx
mov     [ebp+var_4], eax
lea     esp, [esp+0]
mov     eax, [edi+28h]
xor     ebx, ebx
cmp     eax, ebx
jz      short loc_1006a5ad
mov     ecx, [ebp+var_4]
mov     edx, [ecx+14h]
lea     ecx, ds:4[edx*4]
mov     edx, [edi+1ch]
sub     eax, ecx
mov     [eax], edx
mov     eax, [ebp+var_4]
mov     al, [eax+1dh]
cmp     al, 95h
jz      short loc_1006a61d
mov     ecx, [ebp+var_4]
mov     edx, [ecx+24h]
mov     esi, [edi+1ch]
mov     ecx, [ecx+20h]
mov     [ebp+var_1c], edx
movzx   edx, al
mov     [ebp+var_8], ecx
mov     [ebp+var_18], edx
cmp     [edi+20h], esi
jg      short loc_1006a5dd
call    sub_10025810
test    eax, eax
jnz     short loc_1006a606
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     dl, byte ptr [ebp+var_18]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_8]
mov     [eax], dl
mov     edx, [ebp+var_1c]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     [eax+1], bl
mov     ecx, [edi+4]
cmp     ecx, ebx
jz      short loc_1006a61d
mov     eax, [edi+1ch]
mov     edx, [ebp+var_4]
mov     dl, [edx+1eh]
lea     eax, [eax+eax*4]
mov     [ecx+eax*4-11h], dl
mov     eax, [ebp+var_4]
test    dword ptr [eax-14h], 0f1000h
jz      loc_1006a7d7
mov     ecx, eax
cmp     [ecx+28h], ebx
jle     loc_1006a7d7
mov     eax, [edi+28h]
cmp     eax, ebx
jz      short loc_1006a650
mov     edx, [ecx+10h]
lea     edx, ds:4[edx*4]
sub     eax, edx
mov     edx, [edi+1ch]
mov     [eax], edx
mov     eax, [ecx+28h]
mov     ecx, [ecx+2ch]
lea     edx, [ecx+eax*8-8]
mov     [ebp+var_18], eax
mov     [ebp+var_8], edx
cmp     eax, ebx
jle     loc_1006a756
mov     eax, [ebp+var_8]
mov     eax, [eax+4]
inc     eax
js      short loc_1006a682
mov     ecx, [edi+1ch]
cmp     ecx, eax
jbe     short loc_1006a682
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
mov     [eax+edx*4+8], ecx
mov     eax, [ebp+var_8]
mov     ecx, [eax+4]
mov     edx, [eax]
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
mov     [ebp+var_20], ecx
mov     [ebp+var_1c], edx
cmp     eax, esi
jg      short loc_1006a6ff
cmp     eax, ebx
jz      short loc_1006a6a2
add     eax, eax
jmp     short loc_1006a6a7
mov     eax, 33h
mov     ebx, [edi+4]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, eax
push    eax
mov     eax, [edi]
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_1006a727
mov     eax, [edi]
test    eax, eax
jz      short loc_1006a6e1
cmp     ebx, [eax+0fch]
jb      short loc_1006a6e1
cmp     ebx, [eax+100h]
jnb     short loc_1006a6e1
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006a6ed
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+var_20]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 5fh
jmp     short loc_1006a729
xor     ebx, ebx
mov     eax, [ebp+var_8]
mov     eax, [eax+4]
dec     eax
js      short loc_1006a743
mov     ecx, [edi+1ch]
cmp     ecx, eax
jbe     short loc_1006a743
lea     edx, [eax+eax*4]
mov     eax, [edi+4]
mov     [eax+edx*4+8], ecx
mov     eax, [ebp+var_18]
sub     [ebp+var_8], 8
dec     eax
mov     [ebp+var_18], eax
cmp     eax, ebx
jg      loc_1006a668
mov     esi, [ebp+var_14]
mov     ecx, [ebp+var_4]
mov     eax, [ecx+2ch]
cmp     esi, ebx
jz      short loc_1006a7ce
cmp     [esi+1e8h], ebx
jz      short loc_1006a7a4
cmp     eax, ebx
jz      short loc_1006a790
cmp     eax, [esi+0fch]
jb      short loc_1006a790
cmp     eax, [esi+100h]
jnb     short loc_1006a790
movzx   eax, word ptr [esi+0e0h]
mov     esi, [esi+1e8h]
add     [esi], eax
jmp     short loc_1006a7d7
push    eax
call    dword_10080258
mov     esi, [esi+1e8h]
add     esp, 4
add     [esi], eax
jmp     short loc_1006a7d7
cmp     eax, ebx
jz      short loc_1006a7ce
cmp     eax, [esi+0fch]
jb      short loc_1006a7ce
cmp     eax, [esi+100h]
jnb     short loc_1006a7ce
mov     edx, [esi+0f8h]
mov     [eax], edx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
jmp     short loc_1006a7d7
push    eax
call    sub_10009770
add     esp, 4
mov     eax, [edi+28h]
cmp     eax, ebx
jz      short loc_1006a7f2
mov     ecx, [ebp+var_4]
mov     edx, [ecx+0ch]
lea     ecx, ds:4[edx*4]
mov     edx, [edi+1ch]
sub     eax, ecx
mov     [eax], edx
mov     eax, [ebp+var_4]
mov     ecx, [eax]
mov     [ebp+var_20], ecx
cmp     ecx, ebx
jz      loc_1006a9c8
mov     esi, [edi+1ch]
mov     eax, [edi+20h]
cmp     eax, esi
jg      short loc_1006a878
cmp     eax, ebx
jz      short loc_1006a814
add     eax, eax
jmp     short loc_1006a819
mov     eax, 33h
mov     ebx, [edi+4]
lea     ecx, [eax+eax*4]
mov     eax, [edi]
add     ecx, ecx
add     ecx, ecx
push    ecx
call    sub_10009ac0
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_1006a969
mov     eax, [edi]
test    eax, eax
jz      short loc_1006a857
cmp     ebx, [eax+0fch]
jb      short loc_1006a857
cmp     ebx, [eax+100h]
jnb     short loc_1006a857
movzx   ecx, word ptr [eax+0e0h]
jmp     short loc_1006a863
push    ebx
call    dword_10080258
add     esp, 4
mov     ecx, eax
mov     eax, 0cccccccdh
mul     ecx
mov     ecx, [ebp+var_20]
shr     edx, 4
mov     [edi+4], ebx
mov     [edi+20h], edx
xor     ebx, ebx
mov     eax, [edi+4]
inc     dword ptr [edi+1ch]
lea     edx, [esi+esi*4]
lea     eax, [eax+edx*4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 78h
mov     [ebp+var_8], esi
mov     ecx, [ebp+var_4]
test    dword ptr [ecx-14h], 800000h
jnz     short loc_1006a8e3
mov     edx, [ebp+var_10]
mov     esi, [edi+1ch]
mov     eax, [edx]
mov     [ebp+var_20], eax
cmp     [edi+20h], esi
jg      short loc_1006a8c0
call    sub_10025810
test    eax, eax
jnz     short loc_1006a8e3
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     ecx, [esi+esi*4]
lea     eax, [edx+ecx*4]
mov     ecx, [ebp+var_20]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 42h
mov     edx, [ebp+var_4]
mov     ecx, [edx+8]
mov     [ebp+var_20], ecx
cmp     ecx, ebx
jl      short loc_1006a924
mov     esi, [edi+1ch]
cmp     [edi+20h], esi
jg      short loc_1006a904
call    sub_10025810
test    eax, eax
jnz     short loc_1006a924
mov     ecx, [ebp+var_20]
mov     edx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [esi+esi*4]
lea     eax, [edx+eax*4]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 42h
mov     eax, [ebp+var_4]
cmp     byte ptr [eax+1dh], 3
mov     esi, [edi+1ch]
jnz     short loc_1006a977
mov     ecx, [eax+18h]
mov     edx, [eax+20h]
mov     [ebp+var_1c], ecx
mov     [ebp+var_20], edx
cmp     [edi+20h], esi
jg      short loc_1006a94a
call    sub_10025810
test    eax, eax
jnz     short loc_1006a9ae
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_20]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_1c]
mov     [eax+4], edx
mov     [eax+8], ecx
mov     word ptr [eax], 2
jmp     short loc_1006a9a5
mov     [ebp+var_8], 1
xor     ebx, ebx
jmp     loc_1006a89b
mov     edx, [eax+18h]
mov     [ebp+var_20], edx
cmp     [edi+20h], esi
jg      short loc_1006a98b
call    sub_10025810
test    eax, eax
jnz     short loc_1006a9ae
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_20]
lea     eax, [esi+esi*4]
lea     eax, [ecx+eax*4]
mov     [eax+4], ebx
mov     [eax+8], edx
mov     word ptr [eax], 1
mov     [eax+10h], ebx
mov     [eax+0ch], ebx
mov     [eax+3], bl
cmp     [ebp+var_8], ebx
jl      short loc_1006a9c8
mov     eax, [edi+1ch]
cmp     eax, [ebp+var_8]
jbe     short loc_1006a9c8
mov     ecx, [ebp+var_8]
mov     edx, [edi+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4+8], eax
mov     eax, [ebp+var_c]
sub     [ebp+var_4], 48h
sub     [ebp+var_10], 3ch
dec     eax
mov     [ebp+var_c], eax
cmp     eax, ebx
jge     loc_1006a590
mov     esi, [ebp+arg_0]
jmp     short loc_1006a9e6
xor     ebx, ebx
mov     eax, [edi+28h]
cmp     eax, ebx
jz      short loc_1006a9fe
mov     ecx, [esi+18h]
lea     edx, ds:4[ecx*4]
mov     ecx, [edi+1ch]
sub     eax, edx
mov     [eax], ecx
mov     edx, [ebp+arg_0]
lea     esi, [edx+34h]
mov     [ebp+var_c], ebx
mov     [ebp+var_8], esi
cmp     [edx+1ch], ebx
jle     loc_1006abd0
movzx   eax, byte ptr [esi+30h]
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
mov     eax, [ebp+var_24]
lea     ecx, [eax+ecx*4+4]
mov     eax, [ecx+0ch]
test    byte ptr [eax+22h], 2
jnz     loc_1006aaed
cmp     [eax+1ch], ebx
jnz     loc_1006aaed
test    byte ptr [edx+4], 10h
jnz     loc_1006aaed
mov     eax, [ebp+arg_0]
mov     edx, [esi]
mov     [ebp+var_18], edx
cmp     [eax+6], bl
jnz     short loc_1006aa9d
test    edx, 800000h
jnz     short loc_1006aa9d
mov     eax, [edi+1ch]
mov     ecx, [ecx+20h]
mov     [ebp+var_1c], ecx
mov     [ebp+var_20], eax
cmp     [edi+20h], eax
jg      short loc_1006aa7a
call    sub_10025810
mov     edx, [ebp+var_18]
test    eax, eax
jnz     short loc_1006aa9d
mov     eax, [ebp+var_20]
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     ecx, [ebp+var_1c]
mov     [eax+3], bl
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
test    edx, 0f0000h
jz      short loc_1006aaed
test    edx, 20000000h
jnz     short loc_1006aaed
mov     eax, [edi+1ch]
mov     edx, [esi+1ch]
mov     [ebp+var_1c], edx
mov     [ebp+var_20], eax
cmp     [edi+20h], eax
jg      short loc_1006aaca
call    sub_10025810
test    eax, eax
jnz     short loc_1006aaed
mov     eax, [ebp+var_20]
mov     ecx, [edi+4]
inc     dword ptr [edi+1ch]
mov     edx, [ebp+var_1c]
lea     eax, [eax+eax*4]
lea     eax, [ecx+eax*4]
mov     [eax+3], bl
mov     [eax+4], edx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
mov     word ptr [eax], 2dh
mov     eax, [esi]
test    eax, 0f0000h
jz      short loc_1006aafb
mov     eax, [esi+10h]
jmp     short loc_1006ab09
test    eax, 10000000h
jz      loc_1006abb7
mov     eax, [esi+3ch]
mov     [ebp+var_10], eax
cmp     eax, ebx
jz      loc_1006abb7
mov     eax, [ebp+var_14]
cmp     [eax+32h], bl
jnz     loc_1006abb7
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx+10h]
mov     eax, ecx
cmp     eax, ebx
jge     short loc_1006ab30
mov     eax, [edi+1ch]
dec     eax
mov     edx, [edi]
cmp     [edx+32h], bl
jz      short loc_1006ab3e
mov     edx, offset dword_10081398
jmp     short loc_1006ab47
mov     edx, [edi+4]
lea     eax, [eax+eax*4]
lea     edx, [edx+eax*4]
mov     eax, [edi+1ch]
cmp     ecx, eax
jge     short loc_1006abb7
add     edx, 4
sub     eax, ecx
mov     [ebp+var_18], eax
mov     eax, [edx]
cmp     eax, [esi+18h]
jnz     short loc_1006abaf
mov     al, [edx-4]
cmp     al, 1dh
jnz     short loc_1006aba2
mov     ecx, [ebp+var_10]
mov     ecx, [ecx+24h]
xor     eax, eax
mov     [ebp+var_20], ecx
cmp     ecx, ebx
jle     short loc_1006abaf
mov     ecx, [ebp+var_10]
mov     ecx, [ecx+4]
lea     esp, [esp+0]
mov     esi, [edx+4]
cmp     esi, [ecx]
jz      short loc_1006ab95
inc     eax
add     ecx, 4
cmp     eax, [ebp+var_20]
jl      short loc_1006ab80
mov     esi, [ebp+var_8]
jmp     short loc_1006abaf
mov     esi, [ebp+var_8]
mov     [edx+4], eax
mov     eax, [esi+1ch]
mov     [edx], eax
jmp     short loc_1006abaf
cmp     al, 41h
jnz     short loc_1006abaf
mov     ecx, [esi+1ch]
mov     [edx], ecx
mov     byte ptr [edx-4], 63h
add     edx, 14h
dec     [ebp+var_18]
jnz     short loc_1006ab56
mov     eax, [ebp+var_c]
mov     edx, [ebp+arg_0]
inc     eax
add     esi, 48h
mov     [ebp+var_c], eax
mov     [ebp+var_8], esi
cmp     eax, [edx+1ch]
jl      loc_1006aa13
mov     eax, [ebp+arg_0]
mov     edx, [ebp+var_14]
fld     qword ptr [eax+24h]
mov     ecx, [ebp+var_28]
push    eax
fstp    qword ptr [ecx+1b8h]
push    edx
call    sub_10069900
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     ecx, [esi]
push    ebx
push    1
push    eax
push    ecx
mov     eax, edi
call    sub_10035dd0
mov     ebx, eax
mov     eax, [esi]
add     esp, 0ch
mov     [ebp+var_4], eax
test    ebx, ebx
jnz     short loc_1006ac38
push    ebx
push    eax
call    sub_10036430
mov     edx, [ebp+var_4]
push    ebx
push    edx
call    sub_10036430
add     esp, 10h
jmp     short loc_1006ac56
call    sub_10035cf0
mov     eax, [esi]
mov     eax, [eax+54h]
cmp     [ebx+2ch], eax
jle     short loc_1006ac56
push    eax
push    offset aexpressiontree
push    esi
call    sub_1000bb30
add     esp, 0ch
mov     ecx, [ebp+arg_0]
mov     eax, [edi]
mov     edx, [edi+4]
add     edx, eax
mov     [ecx], ebx
mov     [ecx+4], eax
mov     [ecx+8], edx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebx]
push    0
push    eax
mov     eax, [ebp+arg_0]
push    ecx
mov     ecx, [edi]
call    sub_10035f90
mov     edx, [ebx+4]
mov     [esi], eax
mov     eax, [edi+8]
add     esp, 0ch
mov     [esi+4], edx
mov     [esi+8], eax
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+arg_c]
push    ebx
push    esi
mov     esi, [ecx]
push    edi
mov     edi, [eax]
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1006ace0
push    30h
push    0
push    ebx
call    memset
mov     dl, [ebp+arg_8]
add     esp, 0ch
or      eax, 0ffffffffh
mov     [ebx], dl
mov     [ebx+1eh], ax
mov     dword ptr [ebx+2ch], 1
mov     ecx, [ebp+arg_4]
mov     esi, [ecx]
test    ebx, ebx
jnz     short loc_1006acfc
push    edi
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006ad3b
test    edi, edi
jz      short loc_1006ad1a
mov     edx, 100h
mov     [ebx+8], edi
test    [edi+2], dx
jz      short loc_1006ad1a
mov     eax, edx
or      [ebx+2], ax
mov     ecx, [edi+14h]
mov     [ebx+14h], ecx
call    sub_10035cf0
mov     ecx, [ebp+arg_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1006ad3b
push    eax
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ecx, [ebp+arg_c]
mov     eax, [ebp+arg_0]
mov     edx, [ecx+4]
mov     ecx, [ebp+arg_10]
mov     [eax+4], edx
mov     edx, [ecx+4]
add     edx, [ecx]
pop     edi
pop     esi
mov     [eax], ebx
mov     [eax+8], edx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [eax]
cmp     byte ptr [eax+32h], 0
jnz     short loc_1006ad89
cmp     byte ptr [ecx], 62h
jnz     short loc_1006ad89
mov     ecx, [esi+0ch]
mov     dl, [ebp+arg_0]
push    ecx
push    eax
mov     [esi], dl
call    sub_10036430
add     esp, 8
mov     dword ptr [esi+0ch], 0
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
mov     eax, [ebp+arg_c]
push    ebx
push    esi
mov     esi, [ecx]
push    edi
mov     edi, [eax]
mov     ecx, 30h
call    sub_10009a40
mov     ebx, eax
test    ebx, ebx
jz      short loc_1006add0
push    30h
push    0
push    ebx
call    memset
mov     dl, [ebp+arg_8]
add     esp, 0ch
or      eax, 0ffffffffh
mov     [ebx], dl
mov     [ebx+1eh], ax
mov     dword ptr [ebx+2ch], 1
mov     ecx, [ebp+arg_4]
mov     esi, [ecx]
test    ebx, ebx
jnz     short loc_1006adec
push    edi
push    esi
call    sub_10036430
push    ebx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006ae2b
test    edi, edi
jz      short loc_1006ae0a
mov     edx, 100h
mov     [ebx+8], edi
test    [edi+2], dx
jz      short loc_1006ae0a
mov     eax, edx
or      [ebx+2], ax
mov     ecx, [edi+14h]
mov     [ebx+14h], ecx
call    sub_10035cf0
mov     ecx, [ebp+arg_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [ebx+2ch], eax
jle     short loc_1006ae2b
push    eax
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ecx, [ebp+arg_10]
mov     eax, [ebp+arg_0]
mov     edx, [ecx]
mov     ecx, [ebp+arg_c]
pop     edi
mov     [eax+4], edx
mov     edx, [ecx+8]
pop     esi
mov     [eax], ebx
mov     [eax+8], edx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [eax+8]
movzx   eax, [ebp+arg_0]
add     eax, 0ffffff60h
push    esi
mov     esi, ecx
cmp     eax, 51h
ja      def_1006ae74
movzx   ecx, ds:byte_1006af48[eax]
push    edi
jmp     ds:jpt_1006ae74[ecx*4]
mov     esi, [esi]
mov     edi, [ebx]
call    sub_100545e0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edx, [esi]
mov     eax, [ebx]
push    edx
push    eax
call    sub_10036430
add     esp, 8
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     ecx, [esi]
mov     edx, [ebx]
push    ecx
push    edx
call    sub_10037020
add     esp, 8
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [esi]
push    eax
mov     eax, [ebx]
call    sub_10043720
add     esp, 4
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     ecx, [esi]
mov     edx, [ebx]
push    ecx
push    edx
call    sub_10036430
add     esp, 8
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, [esi]
mov     esi, [ebx]
call    sub_100433b0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [esi]
mov     ecx, [ebx]
push    eax
push    ecx
call    sub_10037020
mov     esi, [esi+4]
mov     edi, [ebx]
add     esp, 8
call    sub_100545e0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edx, [esi]
mov     ebx, [ebx]
push    edx
call    sub_1005dfb0
add     esp, 4
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edi, [esi+4]
mov     esi, [ebx]
call    sub_100433b0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
test    esi, esi
jz      short locret_1006afde
cmp     dword ptr [esi], 0
jl      short loc_1006afd7
lea     esp, [esp+0]
mov     eax, [esi]
mov     ecx, eax
add     ecx, ecx
lea     edx, [esi+ecx*8+0ch]
test    eax, eax
js      short loc_1006afd2
lea     ecx, [edx+4]
movzx   edx, byte ptr [edx+2]
push    edx
mov     eax, esi
call    sub_1006ae50
add     esp, 4
dec     dword ptr [esi]
cmp     dword ptr [esi], 0
jge     short loc_1006afb0
push    esi
call    sub_10009770
pop     ecx
retn
mov     edx, [eax]
add     edx, edx
push    esi
movzx   esi, word ptr [eax+edx*8+0ch]
cmp     esi, 1a0h
jg      short loc_1006b030
movsx   eax, ds:word_10078178[esi*2]
cmp     eax, 0ffffffbah
jz      short loc_1006b030
movzx   edx, cl
add     eax, edx
cmp     eax, 61bh
ja      short loc_1006b013
cmp     ds:byte_10077b50[eax], cl
jz      short loc_1006b04d
test    cl, cl
jz      short loc_1006b030
cmp     cl, 43h
jnb     short loc_1006b03a
mov     dl, ds:byte_10078c48[edx]
test    dl, dl
jz      short loc_1006b03a
mov     cl, dl
cmp     esi, 1a0h
jle     short loc_1006aff2
movzx   eax, ds:word_10078760[esi*2]
pop     esi
retn
movzx   ecx, cl
sub     eax, ecx
add     eax, 43h
js      short loc_1006b030
cmp     ds:byte_10077b50[eax], 43h
jnz     short loc_1006b030
movzx   eax, ds:word_10076f18[eax*2]
pop     esi
retn
dec     dword ptr [esi]
mov     eax, [esi]
push    edi
mov     edi, [esi+8]
js      short loc_1006b097
lea     ebx, [ebx+0]
mov     ecx, eax
add     ecx, ecx
lea     edx, [esi+ecx*8+0ch]
test    eax, eax
js      short loc_1006b092
lea     ecx, [edx+4]
movzx   edx, byte ptr [edx+2]
push    edx
mov     eax, esi
call    sub_1006ae50
add     esp, 4
dec     dword ptr [esi]
mov     eax, [esi]
cmp     dword ptr [esi], 0
jge     short loc_1006b070
push    offset aparserstackove
push    edi
call    sub_1000bb30
add     esp, 8
mov     [esi+8], edi
pop     edi
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, eax
inc     dword ptr [esi]
mov     eax, [esi]
cmp     eax, 64h
jl      short loc_1006b0c9
call    sub_1006b060
pop     esi
pop     ecx
pop     ebp
retn
mov     dx, [ebp+arg_0]
add     eax, eax
lea     eax, [esi+eax*8+0ch]
mov     [eax], dx
mov     dl, [ebp+arg_4]
mov     [eax+2], dl
mov     edx, [ecx]
mov     [eax+4], edx
mov     edx, [ecx+4]
mov     ecx, [ecx+8]
mov     [eax+8], edx
mov     [eax+0ch], ecx
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 34h
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     edx, ds:dword_10076f0c
push    ebx
add     ecx, ecx
lea     ebx, [eax+ecx*8+0ch]
mov     ecx, ds:dword_10076f14
push    esi
push    edi
mov     edi, [eax+8]
mov     eax, ds:dword_10076f10
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_4]
add     eax, 0fffffffbh
mov     [ebp+var_4], edi
mov     [ebp+var_8], ebx
mov     [ebp+var_34], edx
mov     [ebp+var_2c], ecx
cmp     eax, 13eh
ja      def_1006b14f
movzx   edx, ds:byte_1006d99c[eax]
jmp     ds:jpt_1006b14f[edx*4]
mov     byte ptr [edi+1d4h], 0
mov     dword ptr [edi+1cch], 0
jmp     def_1006b14f
mov     byte ptr [edi+1d4h], 1
mov     dword ptr [edi+1cch], 0
jmp     def_1006b14f
mov     byte ptr [edi+1d4h], 2
mov     dword ptr [edi+1cch], 0
jmp     def_1006b14f
push    edi
call    sub_1003f170
add     esp, 4
jmp     def_1006b14f
mov     eax, [ebx-0ch]
push    eax
mov     eax, edi
call    sub_10043920
add     esp, 4
jmp     def_1006b14f
mov     [ebp+var_34], 7
jmp     def_1006b14f
movzx   ecx, byte ptr [ebx+2]
mov     [ebp+var_34], ecx
jmp     def_1006b14f
mov     eax, edi
call    sub_10043a20
jmp     def_1006b14f
mov     eax, edi
call    sub_10043a90
jmp     def_1006b14f
push    0
lea     eax, [ebx+4]
push    edi
call    sub_10043b00
add     esp, 8
jmp     def_1006b14f
push    1
lea     eax, [ebx+4]
push    edi
call    sub_10043b00
add     esp, 8
jmp     def_1006b14f
push    2
lea     eax, [ebx+4]
push    edi
call    sub_10043b00
add     esp, 8
jmp     def_1006b14f
mov     edx, [ebx-1ch]
mov     eax, [ebx-3ch]
push    edx
push    0
push    0
push    eax
lea     ecx, [ebx-0ch]
push    ecx
lea     eax, [ebx+4]
mov     ecx, edi
call    sub_100400d0
add     esp, 14h
jmp     def_1006b14f
mov     edx, [edi]
mov     byte ptr [edx+0e2h], 0
mov     eax, [ebx+4]
mov     ecx, [ebx+8]
mov     [ebp+var_34], eax
mov     [ebp+var_30], ecx
jmp     def_1006b14f
mov     [ebp+var_34], 0
jmp     def_1006b14f
mov     [ebp+var_34], 1
jmp     def_1006b14f
lea     edx, [ebx+4]
push    edx
lea     eax, [ebx-0ch]
push    eax
xor     edx, edx
mov     ecx, edi
call    sub_10041030
add     esp, 8
jmp     def_1006b14f
mov     edx, [ebx+4]
push    0
push    0
mov     ecx, edi
call    sub_10041030
mov     esi, [ebx+4]
mov     edi, [edi]
add     esp, 8
call    sub_100545e0
jmp     def_1006b14f
mov     eax, [edi+214h]
mov     ecx, [ebx-1ch]
add     eax, [edi+210h]
mov     [ebp+var_34], ecx
sub     eax, ecx
mov     [ebp+var_30], eax
jmp     def_1006b14f
lea     esi, [ebx+4]
push    esi
push    edi
call    sub_10040540
mov     ecx, [esi]
mov     edx, [esi+4]
add     esp, 8
mov     [ebp+var_34], ecx
mov     [ebp+var_30], edx
mov     dword ptr [edi+1a0h], 0
jmp     def_1006b14f
lea     edx, [ebx+4]
push    edx
mov     edx, edi
call    sub_10040730
add     esp, 4
jmp     def_1006b14f
mov     eax, [ebx+8]
mov     ecx, [ebx-2ch]
add     eax, [ebx+4]
mov     [ebp+var_34], ecx
sub     eax, ecx
mov     [ebp+var_30], eax
jmp     def_1006b14f
mov     eax, [ebx+8]
mov     ecx, [ebx-4ch]
add     eax, [ebx+4]
mov     [ebp+var_34], ecx
sub     eax, ecx
mov     [ebp+var_30], eax
jmp     def_1006b14f
mov     eax, [ebx+8]
mov     ecx, [ebx-0ch]
add     eax, [ebx+4]
mov     [ebp+var_34], ecx
sub     eax, ecx
mov     [ebp+var_30], eax
jmp     def_1006b14f
mov     eax, [ebx+4]
mov     [edi+19ch], eax
mov     ecx, [ebx+8]
mov     [edi+1a0h], ecx
jmp     def_1006b14f
lea     edx, [ebx+4]
push    edx
push    edi
call    sub_10040770
add     esp, 8
jmp     def_1006b14f
lea     eax, [ebx-0ch]
push    eax
push    edi
call    sub_10040770
add     esp, 8
jmp     def_1006b14f
mov     ecx, [ebx+4]
mov     esi, [edi]
mov     [ebp+var_10], ecx
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006b3b8
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [esi], 9ch
mov     [esi+1eh], dx
mov     dword ptr [esi+2ch], 1
mov     edi, [edi]
mov     eax, [ebp+var_10]
test    esi, esi
jnz     short loc_1006b3d4
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006b41a
test    eax, eax
jz      short loc_1006b3f2
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      short loc_1006b3f2
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006b417
push    eax
mov     eax, ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     ecx, [ebx-0ch]
mov     edx, [ebx+0ch]
lea     eax, [ebp+var_24]
mov     [ebp+var_20], ecx
mov     ecx, [ebp+var_4]
push    eax
push    ecx
mov     [ebp+var_24], esi
mov     [ebp+var_1c], edx
call    sub_10040770
add     esp, 8
jmp     def_1006b14f
mov     esi, [ebp+var_4]
lea     edx, [ebp+var_24]
lea     edi, [ebx+4]
push    edx
mov     eax, 5eh
call    sub_1006ac00
add     esp, 4
lea     eax, [ebp+var_24]
push    eax
mov     ecx, esi
push    ecx
call    sub_10040770
add     esp, 8
jmp     def_1006b14f
mov     edi, [edi+1fch]
test    edi, edi
jz      def_1006b14f
mov     eax, [edi+8]
cmp     eax, 1
jl      def_1006b14f
mov     cl, [ebx+4]
lea     edx, [eax+eax*2]
mov     eax, [edi+0ch]
mov     [eax+edx*8-4], cl
jmp     def_1006b14f
mov     edx, [ebx-1ch]
mov     eax, [ebx+4]
mov     ecx, [ebx-0ch]
push    edx
push    eax
push    ecx
push    0
push    edi
call    sub_10040880
add     esp, 14h
jmp     def_1006b14f
mov     edx, [ebx+4]
push    0
push    0
push    0
push    0
push    edx
push    0
push    0
push    0
push    0
push    edi
call    sub_100428b0
add     esp, 28h
jmp     def_1006b14f
mov     eax, [ebx-0ch]
mov     ecx, edi
call    sub_10040a30
jmp     def_1006b14f
mov     eax, [ebx+4]
mov     ecx, [ebx-0ch]
push    eax
push    ecx
lea     edx, [ebx-1ch]
push    edx
push    0
push    edi
call    sub_10042070
add     esp, 14h
jmp     def_1006b14f
mov     eax, [ebx+4]
push    eax
mov     eax, edi
call    sub_100423d0
add     esp, 4
jmp     def_1006b14f
lea     eax, [ebx+4]
push    edi
call    sub_10040ae0
add     esp, 4
jmp     def_1006b14f
mov     eax, [ebx+8]
not     eax
and     eax, [ebx-0ch]
or      eax, [ebx+4]
mov     [ebp+var_34], eax
jmp     def_1006b14f
xor     eax, eax
mov     [ebp+var_34], eax
mov     [ebp+var_30], eax
jmp     def_1006b14f
mov     ecx, [ebx+4]
mov     [ebp+var_34], ecx
mov     [ebp+var_30], 0ffh
jmp     def_1006b14f
mov     eax, [ebx+4]
shl     eax, 8
mov     [ebp+var_34], eax
mov     [ebp+var_30], 0ff00h
jmp     def_1006b14f
mov     [ebp+var_34], 8
jmp     def_1006b14f
mov     [ebp+var_34], 9
jmp     def_1006b14f
mov     [ebp+var_34], 6
jmp     def_1006b14f
mov     edx, [ebx+4]
mov     [ebp+var_34], edx
jmp     def_1006b14f
xor     eax, eax
mov     [ebp+var_30], eax
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     eax, [ebx-0ch]
mov     ecx, [ebx-8]
mov     [ebp+var_34], eax
mov     [ebp+var_30], ecx
jmp     def_1006b14f
mov     edx, [ebx-1ch]
mov     eax, [ebx+4]
mov     ecx, [ebx-2ch]
push    0
push    edx
push    eax
push    ecx
push    edi
call    sub_10040880
add     esp, 14h
jmp     def_1006b14f
mov     edx, [ebx+4]
mov     eax, [ebx-1ch]
push    0
push    0
push    0
push    0
push    edx
push    eax
push    0
push    0
push    0
push    edi
call    sub_100428b0
add     esp, 28h
jmp     def_1006b14f
mov     eax, [ebx-1ch]
mov     ecx, edi
call    sub_10040a30
jmp     def_1006b14f
mov     ecx, [ebx-0ch]
mov     edx, [ebx-1ch]
push    ecx
mov     ecx, [ebx-5ch]
push    edx
lea     eax, [ebx-2ch]
push    eax
push    ecx
push    edi
call    sub_10042070
mov     edx, [ebx+4]
add     esp, 14h
push    edx
mov     eax, edi
call    sub_100423d0
add     esp, 4
jmp     def_1006b14f
mov     [ebp+var_34], 63h
jmp     def_1006b14f
mov     byte ptr [ebp+var_34], 63h
jmp     def_1006b14f
mov     al, [ebx+4]
mov     byte ptr [ebp+var_34], al
jmp     def_1006b14f
mov     [ebp+var_34], 4
jmp     def_1006b14f
mov     [ebp+var_34], 5
jmp     def_1006b14f
mov     ecx, [ebx-0ch]
mov     edx, [ebx+4]
push    ecx
push    0
push    edx
mov     eax, edi
call    sub_10041e30
add     esp, 0ch
jmp     def_1006b14f
mov     eax, [ebx-3ch]
mov     ecx, [ebx-5ch]
mov     edx, [ebx+4]
push    eax
push    ecx
push    edx
lea     ecx, [ebx-2ch]
push    ecx
lea     edx, [ebx-6ch]
lea     eax, [ebx-1ch]
push    edx
mov     ecx, edi
call    sub_10041400
add     esp, 14h
jmp     def_1006b14f
mov     eax, [ebx-0ch]
mov     ecx, [ebx+4]
push    eax
push    1
push    ecx
mov     eax, edi
call    sub_10041e30
add     esp, 0ch
jmp     def_1006b14f
xor     eax, eax
lea     edx, [ebp+var_28]
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
mov     [ebp+var_1c], eax
mov     eax, [ebx+4]
push    edx
push    eax
push    edi
mov     [ebp+var_28], 5
call    sub_1005b870
mov     esi, [ebx+4]
mov     edi, [edi]
add     esp, 0ch
call    sub_100545e0
jmp     def_1006b14f
mov     ecx, [ebx+4]
mov     [ebp+var_34], ecx
jmp     def_1006b14f
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_1006b71e
mov     dl, [ebx-0ch]
mov     [eax+4], dl
mov     eax, [ebx+4]
mov     ecx, [ebx-1ch]
mov     [eax+38h], ecx
mov     eax, [ebx+4]
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     esi, [ebx-1ch]
mov     edx, edi
mov     edi, [edx]
call    sub_100545e0
mov     eax, [ebx+4]
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     [ebp+var_34], 71h
jmp     def_1006b14f
mov     ecx, [ebx+8]
mov     edx, [ebx+4]
mov     eax, [ebx-6ch]
push    ecx
mov     ecx, [ebx-0ch]
push    edx
mov     edx, [ebx-1ch]
push    eax
mov     eax, [ebx-2ch]
push    ecx
mov     ecx, [ebx-3ch]
push    edx
mov     edx, [ebx-4ch]
push    eax
mov     eax, [ebx-5ch]
push    ecx
push    edx
push    eax
mov     ecx, edi
call    sub_10054420
add     esp, 24h
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     ecx, [ebx-0ch]
mov     [ebp+var_34], ecx
jmp     def_1006b14f
mov     edx, [ebx-0ch]
mov     ecx, [ebx-1ch]
push    edx
mov     eax, edi
call    sub_10036e50
add     esp, 4
cmp     dword ptr [ebx+8], 0
mov     esi, eax
mov     [ebp+var_34], esi
jbe     short loc_1006b7ae
push    1
lea     edx, [ebx+4]
push    edi
mov     ecx, esi
call    sub_10036f00
add     esp, 8
lea     edx, [ebx-0ch]
mov     ecx, esi
mov     eax, edi
call    sub_10036f70
jmp     def_1006b14f
mov     esi, [edi]
mov     ecx, 31h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006b7f8
push    31h
push    0
push    esi
call    memset
add     esp, 0ch
or      eax, 0ffffffffh
mov     [esi+1eh], ax
lea     eax, [esi+30h]
mov     byte ptr [esi], 71h
mov     [esi+4], eax
mov     byte ptr [eax], 0
mov     dword ptr [esi+2ch], 1
mov     ecx, [ebx-0ch]
push    esi
mov     eax, edi
call    sub_10036e50
add     esp, 4
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     ecx, [edi]
push    1
push    71h
lea     eax, [ebx+4]
push    ecx
call    sub_10035dd0
mov     edi, [edi]
mov     esi, eax
add     esp, 0ch
mov     [ebp+var_c], esi
test    esi, esi
jnz     short loc_1006b83e
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006b866
mov     ebx, esi
call    sub_10035cf0
mov     edx, [ebp+var_4]
mov     eax, [edx]
mov     eax, [eax+54h]
cmp     [esi+2ch], eax
jle     short loc_1006b863
push    eax
mov     ecx, edx
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     esi, [ebp+var_4]
mov     edx, [esi]
push    1
push    1ah
lea     eax, [ebx-1ch]
push    edx
call    sub_10035dd0
mov     esi, [esi]
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     short loc_1006b896
push    eax
push    esi
call    sub_10036430
push    edi
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006b8bf
mov     ebx, edi
call    sub_10035cf0
mov     eax, [ebp+var_4]
mov     ecx, [eax]
mov     eax, [ecx+54h]
cmp     [edi+2ch], eax
jle     short loc_1006b8bc
mov     edx, [ebp+var_4]
push    eax
push    offset aexpressiontree
push    edx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_4]
mov     esi, [eax]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006b8f2
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 76h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     edx, [ebp+var_4]
mov     eax, [edx]
mov     [ebp+var_10], eax
test    esi, esi
jnz     short loc_1006b919
mov     ecx, eax
push    edi
push    ecx
call    sub_10036430
mov     edx, [ebp+var_c]
mov     eax, [ebp+var_10]
push    edx
push    eax
call    sub_10036430
add     esp, 10h
jmp     short loc_1006b980
mov     eax, [ebp+var_c]
test    eax, eax
jz      short loc_1006b93a
mov     ecx, 100h
mov     [esi+0ch], eax
test    [eax+2], cx
jz      short loc_1006b93a
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
test    edi, edi
jz      short loc_1006b958
mov     ecx, 100h
mov     [esi+8], edi
test    [edi+2], cx
jz      short loc_1006b958
mov     edx, ecx
or      [esi+2], dx
mov     eax, [edi+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006b97d
push    eax
mov     eax, ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     ecx, [ebx-2ch]
mov     eax, [ebp+var_4]
push    esi
call    sub_10036e50
add     esp, 4
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     ecx, [ebp+var_4]
mov     eax, [ecx]
mov     edi, 40h
call    sub_10009a20
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     esi, [ebx+4]
mov     [ebp+var_34], esi
call    sub_100438f0
jmp     def_1006b14f
mov     eax, [ebx-0ch]
mov     [ebp+var_34], eax
test    eax, eax
jz      def_1006b14f
mov     edx, eax
movzx   eax, word ptr [edx]
test    ax, ax
jle     def_1006b14f
mov     dl, [ebx+4]
cwde
mov     ecx, eax
shl     ecx, 4
sub     ecx, eax
mov     eax, [ebp+var_34]
mov     [eax+ecx*4-1ch], dl
jmp     def_1006b14f
mov     ecx, [ebx+4]
mov     edx, [ebx-0ch]
push    ecx
push    edx
push    0
lea     eax, [ebx-2ch]
push    eax
mov     eax, [ebx-5ch]
lea     ecx, [ebx-3ch]
push    ecx
lea     edx, [ebx-4ch]
push    edx
mov     ecx, edi
call    sub_100437d0
mov     edx, eax
lea     eax, [ebx-1ch]
push    edi
mov     [ebp+var_34], edx
call    sub_100438a0
add     esp, 1ch
jmp     def_1006b14f
mov     eax, [ebx+4]
mov     ecx, [ebx-0ch]
mov     edx, [ebx-3ch]
push    eax
push    ecx
push    edx
lea     eax, [ebx-1ch]
push    eax
mov     eax, [ebx-5ch]
push    0
push    0
mov     ecx, edi
call    sub_100437d0
add     esp, 18h
mov     [ebp+var_34], eax
jmp     def_1006b14f
cmp     dword ptr [ebx-5ch], 0
jnz     short loc_1006ba73
cmp     dword ptr [ebx-18h], 0
jnz     short loc_1006ba73
cmp     dword ptr [ebx-0ch], 0
jnz     short loc_1006ba73
cmp     dword ptr [ebx+4], 0
jnz     short loc_1006ba73
mov     ecx, [ebx-3ch]
mov     [ebp+var_34], ecx
jmp     def_1006b14f
mov     esi, [ebx-3ch]
call    sub_100438f0
mov     edx, [ebx-3ch]
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    edx
push    0
mov     ecx, edi
call    sub_10054420
mov     ecx, [ebx+4]
mov     edx, [ebx-0ch]
add     esp, 24h
push    ecx
push    edx
push    eax
jmp     short loc_1006ba33
lea     edx, [ebx-0ch]
push    edx
mov     edx, [edi]
lea     ecx, [ebx+4]
xor     eax, eax
call    sub_10043600
add     esp, 4
mov     [ebp+var_34], eax
jmp     def_1006b14f
push    0
push    0
lea     eax, [ebx-0ch]
push    eax
push    edi
call    sub_10054600
add     esp, 10h
mov     [ebp+var_34], eax
jmp     def_1006b14f
push    0
lea     ecx, [ebx-0ch]
push    ecx
lea     edx, [ebx-1ch]
push    edx
push    edi
call    sub_10054600
add     esp, 10h
mov     [ebp+var_34], eax
jmp     def_1006b14f
lea     eax, [ebx-0ch]
push    eax
lea     ecx, [ebx-1ch]
push    ecx
lea     edx, [ebx-2ch]
push    edx
push    edi
call    sub_10054600
add     esp, 10h
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     [ebp+var_34], 0
mov     [ebp+var_30], 1
jmp     def_1006b14f
mov     eax, [ebx-0ch]
mov     ecx, [ebx-2ch]
push    eax
mov     eax, edi
call    sub_10036e50
add     esp, 4
mov     [ebp+var_34], eax
test    eax, eax
jz      def_1006b14f
mov     ecx, [eax]
mov     edx, [eax+8]
mov     al, [ebx+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4-8], al
jmp     def_1006b14f
mov     ecx, [ebx-0ch]
push    ecx
xor     ecx, ecx
mov     eax, edi
call    sub_10036e50
add     esp, 4
mov     [ebp+var_34], eax
test    eax, eax
jz      def_1006b14f
mov     edx, eax
mov     eax, [edx+8]
test    eax, eax
jz      def_1006b14f
mov     cl, [ebx+4]
mov     [eax+0ch], cl
jmp     def_1006b14f
mov     edx, [ebx+4]
mov     [ebp+var_34], edx
mov     [ebp+var_30], 0
jmp     def_1006b14f
mov     eax, [ebx-1ch]
mov     ecx, [ebx+4]
mov     [ebp+var_34], eax
mov     [ebp+var_30], ecx
jmp     def_1006b14f
mov     edx, [ebx-1ch]
mov     eax, [ebx+4]
mov     [ebp+var_30], edx
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     edx, [ebx-1ch]
lea     eax, [ebx-0ch]
push    edi
call    sub_100438a0
mov     ecx, [ebx+4]
mov     edx, [ebx-1ch]
add     esp, 4
push    ecx
push    edx
push    edi
call    sub_10044e90
add     esp, 0ch
jmp     def_1006b14f
mov     edx, [ebx-3ch]
lea     eax, [ebx-2ch]
push    edi
call    sub_100438a0
mov     eax, [ebx-0ch]
add     esp, 4
push    offset asetlist
mov     ecx, edi
call    sub_10036ff0
movzx   eax, byte ptr [ebx-4ch]
mov     ecx, [ebx+4]
mov     edx, [ebx-0ch]
add     esp, 4
push    eax
mov     eax, [ebx-3ch]
push    ecx
push    edx
push    eax
push    edi
call    sub_1005fa40
add     esp, 14h
jmp     def_1006b14f
mov     ecx, [ebx+4]
push    ecx
mov     ecx, [ebx-3ch]
mov     eax, edi
call    sub_10036e50
add     esp, 4
push    1
lea     edx, [ebx-1ch]
push    edi
mov     ecx, eax
mov     [ebp+var_34], eax
call    sub_10036f00
add     esp, 8
jmp     def_1006b14f
mov     edx, [ebx+4]
push    edx
xor     ecx, ecx
jmp     short loc_1006bc26
movzx   eax, byte ptr [ebx-3ch]
mov     ecx, [ebx-0ch]
mov     edx, [ebx+8]
push    eax
mov     eax, [ebx+4]
push    ecx
mov     ecx, [ebx-1ch]
push    edx
push    eax
push    ecx
push    edi
call    sub_1004cbc0
add     esp, 18h
jmp     def_1006b14f
movzx   edx, byte ptr [ebx-3ch]
mov     eax, [ebx-0ch]
mov     ecx, [ebx+4]
push    edx
mov     edx, [ebx-1ch]
push    eax
push    ecx
push    0
push    edx
push    edi
call    sub_1004cbc0
add     esp, 18h
jmp     def_1006b14f
movzx   eax, byte ptr [ebx-4ch]
mov     ecx, [ebx-1ch]
mov     edx, [ebx-2ch]
push    eax
push    ecx
push    0
push    0
push    edx
push    edi
call    sub_1004cbc0
add     esp, 18h
jmp     def_1006b14f
mov     byte ptr [ebp+var_34], 5
jmp     def_1006b14f
mov     ecx, [ebx-0ch]
mov     [ebp+var_34], ecx
mov     [ebp+var_30], 0
jmp     def_1006b14f
mov     edx, [ebx-0ch]
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    edx
mov     ecx, edi
call    sub_10054420
mov     esi, eax
mov     eax, [ebx-3ch]
add     esp, 24h
test    eax, eax
jz      short loc_1006bd1a
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    eax
mov     ecx, edi
call    sub_10054420
add     esp, 24h
mov     [ebx-38h], eax
mov     dword ptr [ebx-3ch], 0
cmp     dword ptr [ebx-38h], 0
mov     [ebp+var_34], 0
jz      short loc_1006bd4c
test    esi, esi
jz      short loc_1006bd4c
mov     byte ptr [esi+4], 71h
mov     eax, [ebx-38h]
mov     ecx, 80h
or      [esi+6], cx
mov     edx, ecx
mov     [esi+38h], eax
or      [eax+6], dx
mov     [ebp+var_30], esi
jmp     def_1006b14f
mov     eax, edi
mov     edi, [eax]
call    sub_100545e0
mov     ecx, [ebp+var_4]
mov     esi, [ebx-38h]
mov     edi, [ecx]
call    sub_100545e0
mov     [ebp+var_30], 0
jmp     def_1006b14f
mov     eax, [edi]
lea     edx, [ebx+4]
push    edx
push    eax
mov     eax, [ebx-1ch]
call    sub_10043310
add     esp, 8
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     esi, [edi]
mov     ecx, 8
mov     [ebp+var_10], esi
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1006bdfe
xor     eax, eax
mov     esi, eax
mov     [edi], eax
mov     [edi+4], eax
mov     ecx, [edi]
lea     edx, [esi-1]
mov     [ebp+var_c], ecx
test    esi, edx
jnz     short loc_1006bde1
lea     eax, [esi+1]
test    esi, esi
jz      short loc_1006bdbc
lea     eax, [esi+esi]
add     eax, eax
add     eax, eax
add     eax, eax
push    eax
mov     eax, [ebp+var_10]
mov     ebx, ecx
call    sub_10009ac0
mov     ebx, [ebp+var_8]
add     esp, 4
test    eax, eax
jnz     short loc_1006bddc
or      esi, 0ffffffffh
jmp     short loc_1006bded
mov     [ebp+var_c], eax
mov     ecx, eax
xor     eax, eax
mov     [ecx+esi*8], eax
mov     [ecx+esi*8+4], eax
inc     dword ptr [edi+4]
mov     ecx, [ebp+var_c]
mov     [edi], ecx
test    esi, esi
jns     short loc_1006be08
mov     esi, [ebp+var_10]
call    sub_100433b0
xor     edi, edi
mov     [ebp+var_34], edi
jmp     def_1006b14f
mov     edx, [ebp+var_10]
lea     eax, [ebx+4]
push    edx
call    sub_1003fe10
mov     ecx, [edi]
add     esp, 4
mov     [ecx+esi*8], eax
mov     [ebp+var_34], edi
jmp     def_1006b14f
mov     edx, [ebx+4]
mov     eax, [ebx+8]
mov     ecx, [ebx+0ch]
mov     [ebp+var_34], edx
mov     [ebp+var_30], eax
mov     [ebp+var_2c], ecx
jmp     def_1006b14f
mov     eax, [ebx-1ch]
mov     edx, [ebx-0ch]
mov     [ebp+var_30], eax
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     [ebp+var_34], edx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
movzx   eax, byte ptr [ebx+2]
mov     esi, [ebp+var_4]
lea     ecx, [ebp+var_34]
lea     edi, [ebx+4]
push    ecx
call    sub_1006ac00
add     esp, 4
jmp     def_1006b14f
mov     esi, [ebp+var_4]
lea     edx, [ebp+var_34]
lea     edi, [ebx+4]
push    edx
mov     eax, 1ah
call    sub_1006ac00
add     esp, 4
jmp     def_1006b14f
mov     ecx, [edi]
push    1
lea     eax, [ebx-1ch]
push    1ah
push    ecx
mov     [ebp+var_18], eax
call    sub_10035dd0
mov     edi, [edi]
mov     esi, eax
add     esp, 0ch
mov     [ebp+var_14], esi
test    esi, esi
jnz     short loc_1006bebf
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006bee7
mov     ebx, esi
call    sub_10035cf0
mov     edx, [ebp+var_4]
mov     eax, [edx]
mov     eax, [eax+54h]
cmp     [esi+2ch], eax
jle     short loc_1006bee4
push    eax
mov     ecx, edx
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     esi, [ebp+var_4]
mov     edx, [esi]
push    1
lea     eax, [ebx+4]
push    1ah
push    edx
mov     [ebp+var_c], eax
call    sub_10035dd0
mov     esi, [esi]
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     short loc_1006bf1a
push    eax
push    esi
call    sub_10036430
push    edi
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006bf43
mov     ebx, edi
call    sub_10035cf0
mov     eax, [ebp+var_4]
mov     ecx, [eax]
mov     eax, [ecx+54h]
cmp     [edi+2ch], eax
jle     short loc_1006bf40
mov     edx, [ebp+var_4]
push    eax
push    offset aexpressiontree
push    edx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_4]
mov     esi, [eax]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006bf76
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 76h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     edx, [ebp+var_4]
mov     eax, [edx]
mov     [ebp+var_10], eax
test    esi, esi
jnz     short loc_1006bf9d
mov     ecx, [ebp+var_14]
push    ecx
mov     edx, eax
push    edx
call    sub_10036430
mov     eax, [ebp+var_10]
push    edi
push    eax
call    sub_10036430
add     esp, 10h
jmp     short loc_1006c002
test    edi, edi
jz      short loc_1006bfbb
mov     ecx, 100h
mov     [esi+0ch], edi
test    [edi+2], cx
jz      short loc_1006bfbb
mov     edx, ecx
or      [esi+2], dx
mov     eax, [edi+14h]
mov     [esi+14h], eax
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_1006bfdc
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      short loc_1006bfdc
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006bfff
push    eax
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_18]
mov     ecx, [eax]
mov     [ebp+var_30], ecx
mov     ecx, [ebp+var_c]
mov     eax, [ecx+4]
add     eax, [ecx]
mov     [ebp+var_34], esi
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     edx, [edi]
push    1
lea     eax, [ebx-3ch]
push    1ah
push    edx
mov     [ebp+var_1c], eax
call    sub_10035dd0
mov     edi, [edi]
mov     esi, eax
add     esp, 0ch
mov     [ebp+var_18], esi
test    esi, esi
jnz     short loc_1006c050
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006c079
mov     ebx, esi
call    sub_10035cf0
mov     eax, [ebp+var_4]
mov     ecx, [eax]
mov     eax, [ecx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006c076
mov     edx, [ebp+var_4]
push    eax
push    offset aexpressiontree
push    edx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     edi, [ebp+var_4]
mov     ecx, [edi]
push    1
push    1ah
lea     eax, [ebx-1ch]
push    ecx
call    sub_10035dd0
mov     edi, [edi]
mov     esi, eax
add     esp, 0ch
mov     [ebp+var_10], esi
test    esi, esi
jnz     short loc_1006c0ac
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006c0d4
mov     ebx, esi
call    sub_10035cf0
mov     edx, [ebp+var_4]
mov     eax, [edx]
mov     eax, [eax+54h]
cmp     [esi+2ch], eax
jle     short loc_1006c0d1
push    eax
mov     ecx, edx
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     edi, [ebp+var_4]
mov     edx, [edi]
push    1
lea     eax, [ebx+4]
push    1ah
push    edx
mov     [ebp+var_c], eax
call    sub_10035dd0
mov     edi, [edi]
mov     esi, eax
add     esp, 0ch
mov     [ebp+var_14], esi
test    esi, esi
jnz     short loc_1006c10a
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006c133
mov     ebx, esi
call    sub_10035cf0
mov     eax, [ebp+var_4]
mov     ecx, [eax]
mov     eax, [ecx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006c130
mov     edx, [ebp+var_4]
push    eax
push    offset aexpressiontree
push    edx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_4]
mov     esi, [eax]
mov     ecx, 30h
call    sub_10009a40
mov     edi, eax
test    edi, edi
jz      short loc_1006c166
push    30h
push    0
push    edi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [edi], 76h
mov     [edi+1eh], cx
mov     dword ptr [edi+2ch], 1
mov     edx, [ebp+var_4]
mov     esi, [edx]
test    edi, edi
jnz     short loc_1006c188
mov     eax, [ebp+var_10]
push    eax
push    esi
call    sub_10036430
mov     ecx, [ebp+var_14]
push    ecx
push    esi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006c1f2
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_1006c1a9
mov     edx, 100h
mov     [edi+0ch], eax
test    [eax+2], dx
jz      short loc_1006c1a9
mov     ecx, edx
or      [edi+2], cx
mov     edx, [eax+14h]
mov     [edi+14h], edx
mov     eax, [ebp+var_10]
test    eax, eax
jz      short loc_1006c1ca
mov     ecx, 100h
mov     [edi+8], eax
test    [eax+2], cx
jz      short loc_1006c1ca
mov     edx, ecx
or      [edi+2], dx
mov     eax, [eax+14h]
mov     [edi+14h], eax
mov     ebx, edi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [edi+2ch], eax
jle     short loc_1006c1ef
push    eax
mov     eax, ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     esi, [ecx]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006c225
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [esi], 76h
mov     [esi+1eh], dx
mov     dword ptr [esi+2ch], 1
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     [ebp+var_14], eax
test    esi, esi
jnz     short loc_1006c250
mov     ecx, [ebp+var_18]
push    ecx
push    eax
call    sub_10036430
mov     edx, [ebp+var_14]
push    edi
push    edx
call    sub_10036430
mov     eax, [ebp+var_1c]
add     esp, 10h
jmp     loc_1006c005
test    edi, edi
jz      short loc_1006c26e
mov     eax, 100h
mov     [esi+0ch], edi
test    [edi+2], ax
jz      short loc_1006c26e
mov     ecx, eax
or      [esi+2], cx
mov     edx, [edi+14h]
mov     [esi+14h], edx
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_1006c28f
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      short loc_1006c28f
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006c2b2
push    eax
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     eax, [ebp+var_1c]
jmp     loc_1006c005
cmp     byte ptr [edi+12h], 0
lea     esi, [ebx+4]
jnz     short loc_1006c2ee
push    esi
push    offset aneartsyntaxerr
push    edi
call    sub_1000bb30
mov     eax, [esi]
mov     [ebp+var_30], eax
mov     eax, [esi+4]
add     esp, 0ch
add     eax, [esi]
mov     [ebp+var_34], 0
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     edx, [edi]
push    1
push    84h
push    edx
mov     eax, esi
call    sub_10035dd0
mov     edi, [edi]
add     esp, 0ch
mov     [ebp+var_18], eax
test    eax, eax
jnz     short loc_1006c322
push    eax
push    edi
call    sub_10036430
push    0
push    edi
call    sub_10036430
mov     edi, [ebp+var_18]
add     esp, 10h
jmp     short loc_1006c34a
mov     edi, eax
mov     ebx, edi
call    sub_10035cf0
mov     eax, [ebp+var_4]
mov     ecx, [eax]
mov     ecx, [ecx+54h]
cmp     [edi+2ch], ecx
jle     short loc_1006c347
push    ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     [ebp+var_34], edi
test    edi, edi
jz      short loc_1006c361
mov     edx, [esi]
add     edi, 18h
inc     edx
push    edi
push    edx
call    sub_1000c450
add     esp, 8
mov     eax, [esi]
mov     [ebp+var_30], eax
mov     eax, [esi+4]
add     eax, [esi]
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     esi, [ebp+var_4]
lea     ecx, [ebp+var_34]
lea     edi, [ebx+4]
push    ecx
mov     eax, 85h
call    sub_1006ac00
mov     edx, [ebp+var_34]
add     esp, 4
push    edx
mov     eax, esi
push    eax
call    sub_100361b0
mov     ecx, [edi]
mov     eax, [edi+4]
add     esp, 8
add     eax, ecx
mov     [ebp+var_30], ecx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     edx, [ebx-1ch]
push    edx
push    edi
lea     eax, [ebx+4]
call    sub_10035840
mov     [ebp+var_34], eax
mov     eax, [ebx-18h]
mov     [ebp+var_30], eax
mov     eax, [ebx+8]
add     esp, 8
add     eax, [ebx+4]
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     edx, [edi]
mov     ecx, [ebx-2ch]
push    1
push    25h
lea     eax, [ebx-0ch]
push    edx
mov     [ebp+var_18], ecx
call    sub_10035dd0
mov     edi, [edi]
mov     esi, eax
mov     eax, [ebp+var_18]
add     esp, 0ch
test    esi, esi
jnz     short loc_1006c41d
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
mov     eax, [ebx-4ch]
mov     [ebp+var_30], eax
mov     eax, [ebx+8]
add     esp, 10h
add     eax, [ebx+4]
mov     [ebp+var_34], esi
mov     [ebp+var_2c], eax
jmp     def_1006b14f
test    eax, eax
jz      short loc_1006c43b
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      short loc_1006c43b
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006c45e
push    eax
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     eax, [ebx-4ch]
mov     [ebp+var_30], eax
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     [ebp+var_34], esi
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     eax, [ebx-0ch]
test    eax, eax
jz      short loc_1006c49a
mov     ecx, [edi]
mov     edx, [eax]
cmp     edx, [ecx+60h]
jle     short loc_1006c49a
lea     eax, [ebx-3ch]
push    eax
push    offset atoomanyargumen
push    edi
call    sub_1000bb30
add     esp, 0ch
mov     ecx, [ebx-0ch]
push    ecx
lea     eax, [ebx-3ch]
call    sub_10036150
mov     edx, [ebx-3ch]
mov     [ebp+var_34], eax
mov     eax, [ebx+8]
add     eax, [ebx+4]
add     esp, 4
cmp     dword ptr [ebx-1ch], 0
mov     [ebp+var_30], edx
mov     [ebp+var_2c], eax
jz      def_1006b14f
cmp     [ebp+var_34], 0
jz      def_1006b14f
mov     eax, [ebp+var_34]
or      word ptr [eax+2], 10h
jmp     def_1006b14f
push    0
lea     eax, [ebx-2ch]
call    sub_10036150
mov     [ebp+var_34], eax
mov     eax, [ebx-2ch]
mov     [ebp+var_30], eax
mov     eax, [ebx+8]
add     esp, 4
add     eax, [ebx+4]
mov     [ebp+var_2c], eax
jmp     def_1006b14f
push    0
lea     eax, [ebx+4]
call    sub_10036150
add     esp, 4
mov     [ebp+var_34], eax
test    eax, eax
jz      short loc_1006c517
mov     byte ptr [eax], 9bh
mov     ecx, [ebx+4]
mov     eax, [ebx+8]
add     eax, ecx
mov     [ebp+var_30], ecx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     edx, [ebp+var_8]
movzx   eax, byte ptr [edx-0eh]
mov     ecx, [ebp+var_4]
lea     edi, [ebx+4]
add     ebx, 0ffffffe4h
push    eax
lea     esi, [ebp+var_34]
call    sub_1006ac70
mov     ebx, [ebp+var_8]
add     esp, 4
jmp     def_1006b14f
mov     ecx, [ebx+4]
mov     edx, [ebx+8]
mov     [ebp+var_34], ecx
mov     [ebp+var_30], edx
mov     [ebp+var_2c], 0
jmp     def_1006b14f
mov     eax, [ebx+4]
mov     ecx, [ebx+8]
mov     [ebp+var_34], eax
mov     [ebp+var_30], ecx
mov     [ebp+var_2c], 1
jmp     def_1006b14f
mov     edx, [ebx+4]
push    edx
xor     ecx, ecx
mov     eax, edi
call    sub_10036e50
mov     ecx, [ebx-1ch]
add     esp, 4
push    ecx
mov     ecx, eax
mov     eax, edi
call    sub_10036e50
add     esp, 4
push    eax
lea     eax, [ebx-0ch]
call    sub_10036150
add     esp, 4
cmp     dword ptr [ebx-4], 0
mov     edi, eax
mov     [ebp+var_34], edi
jz      loc_1006c659
mov     edx, [ebp+var_4]
mov     esi, [edx]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006c5ec
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      eax, 0ffffffffh
mov     byte ptr [esi], 13h
mov     [esi+1eh], ax
mov     dword ptr [esi+2ch], 1
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     [ebp+var_18], edx
test    esi, esi
jnz     short loc_1006c610
mov     eax, edx
push    edi
push    eax
call    sub_10036430
mov     ecx, [ebp+var_18]
push    esi
push    ecx
call    sub_10036430
add     esp, 10h
jmp     short loc_1006c654
test    edi, edi
jz      short loc_1006c62e
mov     edx, 100h
mov     [esi+8], edi
test    [edi+2], dx
jz      short loc_1006c62e
mov     eax, edx
or      [esi+2], ax
mov     ecx, [edi+14h]
mov     [esi+14h], ecx
mov     ebx, esi
call    sub_10035cf0
mov     eax, [ebp+var_4]
mov     edx, [eax]
mov     ecx, [edx+54h]
cmp     [esi+2ch], ecx
jle     short loc_1006c651
push    ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     [ebp+var_34], esi
mov     edi, esi
mov     eax, [ebx-18h]
mov     ecx, [ebx+0ch]
mov     [ebp+var_30], eax
mov     [ebp+var_2c], ecx
test    edi, edi
jz      def_1006b14f
mov     eax, [ebp+var_34]
mov     edx, 80h
or      [eax+2], dx
jmp     def_1006b14f
mov     eax, [ebx-1ch]
push    eax
xor     ecx, ecx
mov     eax, edi
call    sub_10036e50
mov     ecx, [ebx-3ch]
add     esp, 4
push    ecx
mov     ecx, eax
mov     eax, edi
call    sub_10036e50
mov     edx, [ebx+4]
add     esp, 4
mov     ecx, eax
push    edx
mov     eax, edi
call    sub_10036e50
add     esp, 4
push    eax
lea     eax, [ebx-2ch]
call    sub_10036150
add     esp, 4
cmp     dword ptr [ebx-24h], 0
mov     edi, eax
mov     [ebp+var_34], edi
jz      loc_1006c769
mov     eax, [ebp+var_4]
mov     esi, [eax]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006c6fc
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 13h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     edx, [ebp+var_4]
mov     eax, [edx]
mov     [ebp+var_18], eax
test    esi, esi
jnz     short loc_1006c720
mov     ecx, eax
push    edi
push    ecx
call    sub_10036430
mov     edx, [ebp+var_18]
push    esi
push    edx
call    sub_10036430
add     esp, 10h
jmp     short loc_1006c764
test    edi, edi
jz      short loc_1006c73e
mov     eax, 100h
mov     [esi+8], edi
test    [edi+2], ax
jz      short loc_1006c73e
mov     ecx, eax
or      [esi+2], cx
mov     edx, [edi+14h]
mov     [esi+14h], edx
mov     ebx, esi
call    sub_10035cf0
mov     eax, [ebp+var_4]
mov     ecx, [eax]
mov     ecx, [ecx+54h]
cmp     [esi+2ch], ecx
jle     short loc_1006c761
push    ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     [ebp+var_34], esi
mov     edi, esi
mov     edx, [ebx-38h]
mov     eax, [ebx+0ch]
mov     [ebp+var_30], edx
mov     [ebp+var_2c], eax
test    edi, edi
jz      def_1006b14f
mov     eax, [ebp+var_34]
mov     ecx, 80h
or      [eax+2], cx
jmp     def_1006b14f
movzx   ecx, byte ptr [ebx+2]
lea     edx, [ebx+4]
push    edx
lea     eax, [ebx-0ch]
push    eax
push    ecx
lea     edx, [ebp+var_34]
push    edi
push    edx
call    sub_1006aca0
add     esp, 14h
jmp     def_1006b14f
lea     eax, [ebx+4]
push    eax
lea     ecx, [ebx-1ch]
push    ecx
push    4ah
lea     edx, [ebp+var_34]
push    edi
push    edx
call    sub_1006aca0
add     esp, 14h
jmp     def_1006b14f
mov     ecx, [ebp+var_4]
lea     edi, [ebx+4]
add     ebx, 0ffffffe4h
push    46h
lea     esi, [ebp+var_34]
call    sub_1006ac70
add     esp, 4
push    49h
mov     esi, [ebp+var_34]
mov     ecx, [edi]
mov     eax, [ebp+var_4]
call    sub_1006ad60
mov     ebx, [ebp+var_8]
add     esp, 4
jmp     def_1006b14f
mov     ecx, [ebp+var_4]
lea     edi, [ebx+4]
add     ebx, 0ffffffd4h
push    92h
lea     esi, [ebp+var_34]
call    sub_1006ac70
add     esp, 4
push    4ah
jmp     short loc_1006c7e1
movzx   edx, byte ptr [ebx-0eh]
lea     eax, [ebx-0ch]
push    eax
lea     ecx, [ebx+4]
push    ecx
push    edx
lea     eax, [ebp+var_34]
push    edi
push    eax
call    sub_1006ad90
add     esp, 14h
jmp     def_1006b14f
lea     ecx, [ebx-0ch]
push    ecx
lea     edx, [ebx+4]
push    edx
push    9ch
lea     eax, [ebp+var_34]
push    edi
push    eax
call    sub_1006ad90
add     esp, 14h
jmp     def_1006b14f
lea     ecx, [ebx-0ch]
push    ecx
lea     edx, [ebx+4]
push    edx
push    9dh
lea     eax, [ebp+var_34]
push    edi
push    eax
call    sub_1006ad90
add     esp, 14h
jmp     def_1006b14f
mov     ecx, [ebx-1ch]
push    ecx
xor     ecx, ecx
mov     eax, edi
call    sub_10036e50
mov     edx, [ebx+4]
add     esp, 4
mov     ecx, eax
push    edx
mov     eax, edi
call    sub_10036e50
mov     esi, [edi]
mov     [ebp+var_14], eax
mov     eax, [ebx-3ch]
add     esp, 4
mov     ecx, 30h
mov     [ebp+var_18], eax
call    sub_10009a40
mov     [ebp+var_c], eax
test    eax, eax
jz      short loc_1006c8cf
push    30h
mov     esi, eax
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 47h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     esi, [ebp+var_c]
mov     edi, [edi]
test    esi, esi
jnz     short loc_1006c8ee
mov     edx, [ebp+var_18]
push    edx
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006c937
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_1006c90f
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      short loc_1006c90f
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006c934
push    eax
mov     eax, ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     edi, [ebp+var_4]
mov     [ebp+var_34], esi
test    esi, esi
jz      short loc_1006c949
mov     ecx, [ebp+var_14]
mov     [esi+10h], ecx
jmp     short loc_1006c958
mov     edx, [ebp+var_14]
mov     eax, [edi]
push    edx
push    eax
call    sub_10037020
add     esp, 8
cmp     dword ptr [ebx-2ch], 0
jz      loc_1006ca0a
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006c992
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 13h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     edi, [edi]
test    esi, esi
jnz     short loc_1006c9c0
mov     edx, [ebp+var_c]
push    edx
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
mov     eax, [ebx-38h]
mov     ecx, [ebx+0ch]
add     esp, 10h
mov     [ebp+var_34], esi
mov     [ebp+var_30], eax
mov     [ebp+var_2c], ecx
jmp     def_1006b14f
mov     eax, [ebp+var_c]
test    eax, eax
jz      short loc_1006c9e1
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      short loc_1006c9e1
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006ca04
push    eax
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     [ebp+var_34], esi
mov     eax, [ebx-38h]
mov     ecx, [ebx+0ch]
mov     [ebp+var_30], eax
mov     [ebp+var_2c], ecx
jmp     def_1006b14f
cmp     dword ptr [ebx-0ch], 0
jnz     loc_1006caae
mov     eax, [ebx-2ch]
mov     edx, [edi]
push    1
push    81h
lea     eax, off_10076230[eax*8]
push    edx
call    sub_10035dd0
mov     edi, [edi]
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_1006ca5c
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006ca85
mov     ebx, esi
call    sub_10035cf0
mov     eax, [ebp+var_4]
mov     ecx, [eax]
mov     eax, [ecx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006ca82
mov     edx, [ebp+var_4]
push    eax
push    offset aexpressiontree
push    edx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     eax, [ebx-3ch]
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
push    eax
push    edx
mov     [ebp+var_34], esi
call    sub_10036430
mov     eax, [ebx-38h]
mov     [ebp+var_30], eax
mov     eax, [ebx+8]
add     esp, 8
add     eax, [ebx+4]
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     eax, [ebx-3ch]
mov     esi, [edi]
mov     ecx, 30h
mov     [ebp+var_18], eax
call    sub_10009a40
mov     [ebp+var_c], eax
test    eax, eax
jz      short loc_1006cae7
push    30h
mov     esi, eax
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 48h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     esi, [ebp+var_c]
mov     edi, [edi]
test    esi, esi
jnz     short loc_1006cb06
mov     edx, [ebp+var_18]
push    edx
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006cb4f
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_1006cb27
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      short loc_1006cb27
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006cb4c
push    eax
mov     eax, ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     [ebp+var_34], esi
test    esi, esi
jz      short loc_1006cb6a
mov     ecx, [ebx-0ch]
mov     edi, esi
mov     esi, [ebp+var_4]
mov     eax, edi
mov     [edi+10h], ecx
call    sub_10035da0
jmp     short loc_1006cb7e
mov     edx, [ebx-0ch]
mov     eax, [ebp+var_4]
mov     ecx, [eax]
push    edx
push    ecx
call    sub_10037020
add     esp, 8
mov     edi, esi
cmp     dword ptr [ebx-2ch], 0
jz      loc_1006cc3b
mov     edx, [ebp+var_4]
mov     esi, [edx]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006cbbb
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      eax, 0ffffffffh
mov     byte ptr [esi], 13h
mov     [esi+1eh], ax
mov     dword ptr [esi+2ch], 1
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     [ebp+var_18], edx
test    esi, esi
jnz     short loc_1006cbf4
mov     eax, edx
push    edi
push    eax
call    sub_10036430
mov     ecx, [ebp+var_18]
push    esi
push    ecx
call    sub_10036430
mov     eax, [ebx-38h]
mov     [ebp+var_30], eax
mov     eax, [ebx+8]
add     esp, 10h
add     eax, [ebx+4]
mov     [ebp+var_34], esi
mov     [ebp+var_2c], eax
jmp     def_1006b14f
test    edi, edi
jz      short loc_1006cc12
mov     edx, 100h
mov     [esi+8], edi
test    [edi+2], dx
jz      short loc_1006cc12
mov     eax, edx
or      [esi+2], ax
mov     ecx, [edi+14h]
mov     [esi+14h], ecx
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006cc35
push    eax
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     [ebp+var_34], esi
mov     eax, [ebx-38h]
mov     [ebp+var_30], eax
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006cc7f
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 74h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     edi, [edi]
test    esi, esi
jnz     short loc_1006cc98
push    esi
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006ccc0
mov     ebx, esi
call    sub_10035cf0
mov     edx, [ebp+var_4]
mov     eax, [edx]
mov     eax, [eax+54h]
cmp     [esi+2ch], eax
jle     short loc_1006ccbd
push    eax
mov     ecx, edx
push    offset aexpressiontree
push    ecx
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     [ebp+var_34], esi
test    esi, esi
jz      short loc_1006ccf4
mov     edx, [ebx-0ch]
mov     [esi+10h], edx
mov     eax, 800h
or      [esi+2], ax
mov     eax, esi
mov     esi, [ebp+var_4]
call    sub_10035da0
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     edx, [ebx-1ch]
mov     [ebp+var_30], edx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     ecx, [ebp+var_4]
mov     esi, [ebx-0ch]
mov     edi, [ecx]
call    sub_100545e0
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     edx, [ebx-1ch]
mov     [ebp+var_30], edx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     eax, [ebx-3ch]
mov     esi, [edi]
mov     ecx, 30h
mov     [ebp+var_18], eax
call    sub_10009a40
mov     [ebp+var_c], eax
test    eax, eax
jz      short loc_1006cd4e
push    30h
mov     esi, eax
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 48h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     esi, [ebp+var_c]
mov     eax, [edi]
mov     [ebp+var_1c], eax
test    esi, esi
jnz     short loc_1006cd73
mov     edx, [ebp+var_18]
push    edx
push    eax
call    sub_10036430
mov     eax, [ebp+var_1c]
push    esi
push    eax
call    sub_10036430
add     esp, 10h
jmp     short loc_1006cdbf
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_1006cd94
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      short loc_1006cd94
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, edi
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006cdba
push    eax
mov     eax, ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
jmp     short loc_1006cdbc
mov     edi, ecx
mov     ebx, [ebp+var_8]
mov     [ebp+var_34], esi
test    esi, esi
jz      short loc_1006cde0
mov     ecx, [ebx-0ch]
mov     eax, esi
mov     edx, 800h
mov     [eax+10h], ecx
or      [eax+2], dx
mov     esi, edi
call    sub_10035da0
jmp     short loc_1006cdf0
mov     eax, [ebp+var_4]
mov     esi, [ebx-0ch]
mov     edi, [eax]
call    sub_100545e0
mov     edi, [ebp+var_4]
cmp     dword ptr [ebx-2ch], 0
jz      loc_1006cc3b
mov     esi, [edi]
mov     ecx, 30h
call    sub_10009a40
mov     esi, eax
test    esi, esi
jz      short loc_1006ce2a
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      ecx, 0ffffffffh
mov     byte ptr [esi], 13h
mov     [esi+1eh], cx
mov     dword ptr [esi+2ch], 1
mov     edi, [edi]
test    esi, esi
jnz     short loc_1006ce49
mov     edx, [ebp+var_c]
push    edx
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     loc_1006cc38
mov     eax, [ebp+var_c]
test    eax, eax
jz      loc_1006cc12
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      loc_1006cc12
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
jmp     loc_1006cc12
mov     edx, [edi]
lea     eax, [ebx-0ch]
lea     ecx, [ebx+4]
mov     [ebp+var_1c], eax
push    eax
xor     eax, eax
mov     [ebp+var_c], ecx
call    sub_10043600
mov     ecx, [ebx-2ch]
mov     esi, [edi]
mov     [ebp+var_18], ecx
add     esp, 4
mov     ecx, 30h
mov     [ebp+var_14], eax
call    sub_10009a40
mov     [ebp+var_10], eax
mov     esi, eax
test    eax, eax
jz      short loc_1006cecc
push    30h
push    0
push    esi
call    memset
add     esp, 0ch
or      edx, 0ffffffffh
mov     byte ptr [esi], 48h
mov     [esi+1eh], dx
mov     dword ptr [esi+2ch], 1
mov     edi, [edi]
mov     eax, [ebp+var_18]
test    esi, esi
jnz     short loc_1006cee8
push    eax
push    edi
call    sub_10036430
push    esi
push    edi
call    sub_10036430
add     esp, 10h
jmp     short loc_1006cf2e
test    eax, eax
jz      short loc_1006cf06
mov     ecx, 100h
mov     [esi+8], eax
test    [eax+2], cx
jz      short loc_1006cf06
mov     edx, ecx
or      [esi+2], dx
mov     eax, [eax+14h]
mov     [esi+14h], eax
mov     ebx, esi
call    sub_10035cf0
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
mov     eax, [edx+54h]
cmp     [esi+2ch], eax
jle     short loc_1006cf2b
push    eax
mov     eax, ecx
push    offset aexpressiontree
push    eax
call    sub_1000bb30
add     esp, 0ch
mov     ebx, [ebp+var_8]
mov     [ebp+var_34], esi
test    esi, esi
jz      short loc_1006cf6e
mov     ecx, [ebp+var_14]
mov     esi, [ebp+var_4]
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    ecx
push    0
mov     ecx, esi
call    sub_10054420
mov     edi, [ebp+var_10]
mov     [edi+10h], eax
mov     edx, 800h
or      [edi+2], dx
add     esp, 24h
mov     eax, edi
call    sub_10035da0
jmp     short loc_1006cf82
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_4]
push    eax
mov     eax, [ecx]
call    sub_10043720
mov     edi, [ebp+var_10]
add     esp, 4
cmp     dword ptr [ebx-1ch], 0
jz      short loc_1006cf9f
mov     edx, [ebp+var_4]
push    0
xor     ecx, ecx
push    edi
push    edx
lea     eax, [ecx+13h]
call    sub_10035f90
add     esp, 0ch
mov     [ebp+var_34], eax
mov     ecx, [ebp+var_c]
mov     ecx, [ecx]
mov     eax, [ebx-28h]
mov     [ebp+var_30], eax
test    ecx, ecx
jz      short loc_1006cfbb
mov     eax, [ebx+8]
add     eax, ecx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     eax, [ebx-8]
mov     edx, [ebp+var_1c]
add     eax, [edx]
mov     [ebp+var_2c], eax
jmp     def_1006b14f
push    0
xor     ecx, ecx
push    0
push    edi
lea     eax, [ecx+14h]
call    sub_10035f90
add     esp, 0ch
mov     [ebp+var_34], eax
test    eax, eax
jz      short loc_1006d00e
mov     ecx, [ebx-0ch]
mov     edx, 800h
or      [eax+2], dx
mov     esi, edi
mov     [eax+10h], ecx
call    sub_10035da0
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     ecx, [ebx-2ch]
mov     [ebp+var_30], ecx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     esi, [ebx-0ch]
mov     eax, edi
mov     edi, [eax]
call    sub_100545e0
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     ecx, [ebx-2ch]
mov     [ebp+var_30], ecx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     edx, [ebx-2ch]
mov     ecx, [ebx-0ch]
push    0
push    edx
push    edi
mov     eax, 86h
call    sub_10035f90
add     esp, 0ch
mov     [ebp+var_34], eax
test    eax, eax
jz      short loc_1006d06d
mov     ecx, [ebx-1ch]
mov     esi, edi
mov     [eax+10h], ecx
call    sub_10035da0
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     ecx, [ebx-3ch]
mov     [ebp+var_30], ecx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     edx, [ebx-1ch]
mov     eax, [edi]
push    edx
push    eax
call    sub_10037020
mov     eax, [ebx+8]
mov     ecx, [ebx-3ch]
add     esp, 8
add     eax, [ebx+4]
mov     [ebp+var_30], ecx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     ecx, [ebx-3ch]
mov     edx, [ebx-1ch]
push    edx
mov     eax, edi
call    sub_10036e50
mov     ecx, [ebx+4]
add     esp, 4
push    ecx
mov     ecx, eax
mov     eax, edi
call    sub_10036e50
add     esp, 4
mov     [ebp+var_34], eax
jmp     def_1006b14f
xor     ecx, ecx
jmp     short loc_1006d093
mov     edx, [ebx+4]
mov     ecx, [ebx-1ch]
push    edx
mov     eax, edi
call    sub_10036e50
add     esp, 4
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     eax, [ebx+4]
push    eax
xor     ecx, ecx
mov     eax, edi
call    sub_10036e50
add     esp, 4
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     ecx, [ebx-6ch]
push    ecx
mov     ecx, [ebx-8ch]
push    0
lea     edx, [ebx+4]
push    edx
mov     edx, [ebx-0ch]
lea     eax, [ebx-9ch]
push    eax
push    ecx
push    edx
mov     edx, [edi]
lea     eax, [ebx-2ch]
push    eax
xor     ecx, ecx
xor     eax, eax
call    sub_10043600
add     esp, 4
push    eax
lea     ecx, [ebx-4ch]
push    ecx
lea     edx, [ebx-5ch]
push    edx
push    edi
call    sub_100428b0
add     esp, 28h
jmp     def_1006b14f
mov     [ebp+var_34], 2
jmp     def_1006b14f
xor     esi, esi
cmp     [ebx-8], esi
jbe     short loc_1006d16f
mov     eax, [edi]
push    esi
push    98h
push    eax
lea     eax, [ebp+var_20]
mov     [ebp+var_20], esi
mov     [ebp+var_1c], esi
call    sub_10035dd0
mov     esi, eax
add     esp, 0ch
push    esi
lea     eax, [ebx-0ch]
push    edi
call    sub_10035840
add     esp, 8
mov     ecx, [ebx-3ch]
push    esi
mov     eax, edi
call    sub_10036e50
add     esp, 4
mov     esi, eax
push    1
lea     edx, [ebx-1ch]
push    edi
mov     ecx, esi
mov     [ebp+var_34], esi
call    sub_10036f00
push    offset aindex
mov     eax, esi
mov     ecx, edi
call    sub_10036ff0
add     esp, 0ch
test    esi, esi
jz      def_1006b14f
mov     eax, esi
mov     ecx, [eax]
mov     edx, [eax+8]
mov     al, [ebx+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4-8], al
jmp     def_1006b14f
xor     esi, esi
cmp     [ebx-8], esi
jbe     short loc_1006d1e6
push    esi
push    esi
push    edi
xor     ecx, ecx
mov     eax, 98h
call    sub_10035f90
mov     esi, eax
add     esp, 0ch
push    esi
lea     eax, [ebx-0ch]
push    edi
call    sub_10035840
add     esp, 8
push    esi
xor     ecx, ecx
mov     eax, edi
call    sub_10036e50
add     esp, 4
mov     esi, eax
push    1
lea     edx, [ebx-1ch]
push    edi
mov     ecx, esi
mov     [ebp+var_34], esi
call    sub_10036f00
push    offset aindex
mov     eax, esi
mov     ecx, edi
call    sub_10036ff0
add     esp, 0ch
test    esi, esi
jz      def_1006b14f
mov     eax, esi
mov     ecx, [eax]
mov     edx, [eax+8]
mov     al, [ebx+4]
lea     ecx, [ecx+ecx*4]
mov     [edx+ecx*4-8], al
jmp     def_1006b14f
mov     ecx, [ebx-0ch]
mov     edx, [ebx+4]
push    ecx
push    edx
push    edi
call    sub_10043140
add     esp, 0ch
jmp     def_1006b14f
mov     eax, edi
call    sub_10062760
jmp     def_1006b14f
push    0
push    0
lea     eax, [ebx+4]
push    eax
lea     ecx, [ebx-0ch]
push    ecx
push    edi
call    sub_100510a0
add     esp, 14h
jmp     def_1006b14f
push    0
lea     edx, [ebx+4]
push    edx
lea     eax, [ebx-1ch]
push    eax
lea     ecx, [ebx-2ch]
push    ecx
push    edi
call    sub_100510a0
add     esp, 14h
jmp     def_1006b14f
push    0
lea     edx, [ebx-0ch]
push    edx
lea     eax, [ebx-2ch]
push    eax
lea     ecx, [ebx-3ch]
push    ecx
push    edi
call    sub_100510a0
add     esp, 14h
jmp     def_1006b14f
push    1
jmp     short loc_1006d272
push    1
lea     edx, [ebx-0ch]
push    edx
lea     eax, [ebx-2ch]
push    eax
lea     ecx, [ebx-3ch]
push    ecx
push    edi
call    sub_100510a0
add     esp, 14h
jmp     def_1006b14f
mov     edx, [ebx+8]
mov     eax, [ebx-2ch]
add     edx, [ebx+4]
mov     ecx, [ebx-0ch]
sub     edx, eax
mov     [ebp+var_20], eax
lea     eax, [ebp+var_20]
push    eax
push    ecx
push    edi
mov     [ebp+var_1c], edx
call    sub_1005e5d0
add     esp, 0ch
jmp     def_1006b14f
mov     edx, [ebx-7ch]
mov     ecx, [ebx-9ch]
push    edx
mov     edx, [ebx+4]
push    ecx
mov     ecx, [ebx-1ch]
push    edx
mov     edx, [ebx-38h]
push    ecx
mov     ecx, [ebx-3ch]
push    edx
mov     edx, [ebx-4ch]
push    ecx
push    edx
lea     esi, [ebx-5ch]
push    esi
lea     eax, [ebx-6ch]
push    edi
call    sub_1005e170
add     esp, 24h
cmp     dword ptr [ebx-58h], 0
jnz     short loc_1006d335
mov     eax, [ebx-6ch]
mov     esi, [ebx-68h]
mov     [ebp+var_34], eax
mov     [ebp+var_30], esi
jmp     def_1006b14f
mov     eax, [esi]
mov     esi, [esi+4]
mov     [ebp+var_34], eax
mov     [ebp+var_30], esi
jmp     def_1006b14f
mov     [ebp+var_34], 22h
jmp     def_1006b14f
mov     [ebp+var_34], 1eh
jmp     def_1006b14f
mov     [ebp+var_34], 30h
jmp     def_1006b14f
movzx   eax, byte ptr [ebx+2]
mov     [ebp+var_34], eax
mov     [ebp+var_30], 0
jmp     def_1006b14f
mov     ecx, [ebx+4]
mov     [ebp+var_34], 6bh
mov     [ebp+var_30], ecx
jmp     def_1006b14f
mov     eax, [ebx-1ch]
mov     ecx, [eax+24h]
mov     edx, [ebx-0ch]
mov     [ecx+20h], edx
mov     eax, [ebx-1ch]
mov     ecx, [ebx-0ch]
mov     [eax+24h], ecx
mov     edx, [ebx-1ch]
mov     [ebp+var_34], edx
jmp     def_1006b14f
mov     eax, [ebx-0ch]
mov     [eax+24h], eax
mov     eax, [ebx-0ch]
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     ecx, [ebx+4]
mov     edx, [ebx+8]
push    offset aqualifiedtable
push    edi
mov     [ebp+var_34], ecx
mov     [ebp+var_30], edx
call    sub_1000bb30
add     esp, 8
jmp     def_1006b14f
push    offset atheindexedbycl
push    edi
call    sub_1000bb30
add     esp, 8
jmp     def_1006b14f
push    offset athenotindexedc
push    edi
call    sub_1000bb30
add     esp, 8
jmp     def_1006b14f
movzx   eax, byte ptr [ebx-4ch]
mov     ecx, [ebx+4]
mov     edx, [ebx-0ch]
push    eax
push    ecx
push    edx
lea     eax, [ebx-3ch]
push    eax
mov     eax, [edi]
call    sub_1005e970
add     esp, 10h
mov     [ebp+var_34], eax
jmp     def_1006b14f
movzx   ecx, byte ptr [ebx-3ch]
mov     edx, [ebx+8]
mov     eax, [ebx+4]
push    ecx
mov     ecx, [ebx-0ch]
push    edx
push    eax
mov     eax, [edi]
push    ecx
lea     edx, [ebx-1ch]
push    edx
call    sub_1005e8b0
add     esp, 14h
mov     [ebp+var_34], eax
jmp     def_1006b14f
movzx   eax, byte ptr [ebx-3ch]
mov     ecx, [ebx+4]
mov     edx, [ebx-0ch]
push    eax
push    ecx
push    0
push    edx
lea     eax, [ebx-1ch]
push    eax
mov     eax, [edi]
call    sub_1005e8b0
add     esp, 14h
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     ecx, [ebx+4]
mov     eax, [edi]
push    ecx
lea     edx, [ebx-1ch]
push    edx
push    eax
call    sub_1005ea10
add     esp, 0ch
mov     [ebp+var_34], eax
jmp     def_1006b14f
mov     ecx, [ebp+var_4]
mov     edi, [ebx+4]
mov     eax, [ecx]
call    sub_1005e850
mov     [ebp+var_34], eax
jmp     def_1006b14f
push    0
xor     ecx, ecx
push    0
push    edi
lea     eax, [ecx+38h]
call    sub_10035f90
add     esp, 0ch
mov     [ebp+var_34], eax
test    eax, eax
jz      short loc_1006d4c0
mov     byte ptr [eax+1], 4
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     edx, [ebx-2ch]
mov     [ebp+var_30], edx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
lea     eax, [ebx-0ch]
push    eax
xor     ecx, ecx
push    0
push    edi
lea     eax, [ecx+38h]
call    sub_10035f90
add     esp, 0ch
mov     [ebp+var_34], eax
test    eax, eax
jz      short loc_1006d4f5
mov     cl, [ebx-2ch]
mov     [eax+1], cl
mov     eax, [ebx+8]
add     eax, [ebx+4]
mov     edx, [ebx-4ch]
mov     [ebp+var_30], edx
mov     [ebp+var_2c], eax
jmp     def_1006b14f
mov     [ebp+var_34], 3
jmp     def_1006b14f
mov     eax, [ebx-0ch]
mov     ecx, [ebx+4]
push    eax
push    ecx
push    edi
call    sub_1005eaa0
add     esp, 0ch
jmp     def_1006b14f
mov     edx, [ebx+4]
mov     eax, [ebx-2ch]
mov     ecx, [ebx-0ch]
push    edx
push    ecx
push    eax
push    eax
push    offset dword_1007688c
push    18h
mov     eax, edi
call    sub_1003e590
add     esp, 18h
jmp     def_1006b14f
mov     edx, [ebx+4]
push    edx
mov     eax, edi
call    sub_1003e780
add     esp, 4
jmp     def_1006b14f
push    0
push    0
push    edi
call    sub_100440a0
add     esp, 0ch
jmp     def_1006b14f
lea     eax, [ebx+4]
push    eax
lea     ecx, [ebx-0ch]
push    ecx
push    edi
call    sub_100440a0
add     esp, 0ch
jmp     def_1006b14f
push    0
push    edi
xor     eax, eax
call    sub_1003d9a0
add     esp, 8
jmp     def_1006b14f
lea     edx, [ebx+4]
push    edx
lea     eax, [ebx-0ch]
push    edi
call    sub_1003d9a0
add     esp, 8
jmp     def_1006b14f
mov     ecx, [ebx-2ch]
lea     eax, [ebx+4]
push    eax
push    ecx
mov     eax, edi
call    sub_1003b580
add     esp, 8
jmp     short def_1006b14f
lea     edx, [ebx+4]
push    edx
push    edi
call    sub_1003bb60
add     esp, 8
jmp     short def_1006b14f
mov     eax, [edi]
mov     byte ptr [eax+0e2h], 0
mov     ecx, [ebx+4]
push    ecx
push    edi
call    sub_1003bdc0
add     esp, 8
jmp     short def_1006b14f
push    0
mov     eax, edi
call    sub_10062fa0
add     esp, 4
jmp     short def_1006b14f
lea     edx, [ebx+4]
push    edx
mov     eax, edi
call    sub_10062fa0
add     esp, 4
jmp     short def_1006b14f
lea     eax, [ebx+4]
push    eax
mov     eax, [ebx-3ch]
lea     ecx, [ebx-1ch]
push    ecx
lea     edx, [ebx-2ch]
push    edx
push    edi
call    sub_10062de0
add     esp, 10h
jmp     short def_1006b14f
call    sub_10063190
jmp     short def_1006b14f
lea     eax, [ebx+4]
mov     ecx, edi
call    sub_10063220
mov     ecx, [ebp+arg_4]
movzx   eax, ds:byte_10078cb8[ecx*2]
movzx   ecx, ds:byte_10078cb9[ecx*2]
mov     edx, [ebp+arg_0]
sub     [edx], ecx
mov     esi, [edx]
mov     edx, ecx
shl     edx, 4
sub     ebx, edx
movzx   edx, word ptr [ebx]
movsx   edx, ds:word_100784d8[edx*2]
add     edx, eax
movzx   edx, ds:word_10076f18[edx*2]
cmp     edx, 273h
jge     short loc_1006d6b3
test    ecx, ecx
jz      short loc_1006d69c
mov     ecx, [ebp+arg_0]
inc     esi
mov     [ecx], esi
mov     ecx, [ebp+var_2c]
mov     [ebx+10h], dx
mov     edx, [ebp+var_34]
mov     [ebx+12h], al
mov     eax, [ebp+var_30]
mov     [ebx+14h], edx
mov     [ebx+18h], eax
mov     [ebx+1ch], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    eax
mov     eax, [ebp+arg_0]
push    edx
lea     ecx, [ebp+var_34]
call    sub_1006b0b0
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+arg_0]
call    sub_1006dae0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword ptr [esi], 0
push    edi
mov     edi, [esi+8]
jl      short loc_1006db17
lea     esp, [esp+0]
mov     eax, [esi]
mov     ecx, eax
add     ecx, ecx
lea     edx, [esi+ecx*8+0ch]
test    eax, eax
js      short loc_1006db12
lea     ecx, [edx+4]
movzx   edx, byte ptr [edx+2]
push    edx
mov     eax, esi
call    sub_1006ae50
add     esp, 4
dec     dword ptr [esi]
cmp     dword ptr [esi], 0
jge     short loc_1006daf0
mov     [esi+8], edi
pop     edi
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
cmp     dword ptr [esi], 0
push    edi
jge     short loc_1006db42
xor     eax, eax
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0ffffffffh
mov     [esi+0ch], ax
mov     [esi+0eh], al
mov     edi, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     [ebp+var_c], edi
mov     [ebp+var_8], ecx
mov     [esi+8], edx
mov     cl, bl
mov     eax, esi
call    sub_1006afe0
cmp     eax, 273h
jl      short loc_1006db91
cmp     eax, 3bah
jge     loc_1006dc05
add     eax, 0fffffd8dh
push    eax
push    esi
call    sub_1006b100
add     esp, 8
cmp     ebx, 0fbh
jz      loc_1006dc3a
cmp     dword ptr [esi], 0
jge     short loc_1006db51
pop     edi
mov     esp, ebp
pop     ebp
retn
inc     dword ptr [esi]
mov     ecx, [esi]
cmp     ecx, 64h
jl      short loc_1006dbe2
mov     edi, [esi+8]
dec     ecx
mov     [esi], ecx
js      short loc_1006dbc9
mov     eax, [esi]
mov     ecx, eax
add     ecx, ecx
lea     edx, [esi+ecx*8+0ch]
test    eax, eax
js      short loc_1006dbc4
lea     ecx, [edx+4]
movzx   edx, byte ptr [edx+2]
push    edx
mov     eax, esi
call    sub_1006ae50
add     esp, 4
dec     dword ptr [esi]
cmp     dword ptr [esi], 0
jge     short loc_1006dba2
push    offset aparserstackove
push    edi
call    sub_1000bb30
add     esp, 8
dec     dword ptr [esi+4]
mov     [esi+8], edi
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+var_4]
add     ecx, ecx
lea     ecx, [esi+ecx*8+0ch]
mov     [ecx], ax
mov     eax, [ebp+var_8]
mov     [ecx+4], edi
mov     [ecx+8], eax
mov     [ecx+2], bl
mov     [ecx+0ch], edx
dec     dword ptr [esi+4]
pop     edi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
lea     edx, [ebp+var_18]
push    edx
mov     [ebp+var_18], edi
mov     edi, [esi+8]
push    offset aneartsyntaxerr
push    edi
mov     [ebp+var_14], eax
mov     [ebp+var_10], ecx
call    sub_1000bb30
add     esp, 0ch
push    ebx
lea     ecx, [ebp+var_c]
mov     eax, esi
mov     [esi+8], edi
call    sub_1006ae50
add     esp, 4
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
cmp     edi, 2
jge     short loc_1006dc52
mov     eax, 1ah
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
mov     esi, [ebp+arg_0]
movzx   ecx, byte ptr [esi]
movzx   eax, byte ptr [esi+edi-1]
movzx   eax, ds:byte_10076030[eax]
movzx   edx, ds:byte_10076030[ecx]
add     edx, edx
lea     eax, [eax+eax*2]
add     edx, edx
xor     eax, edx
xor     eax, edi
cdq
mov     ecx, 7fh
idiv    ecx
movzx   ebx, ds:byte_10079168[edx]
dec     ebx
mov     [ebp+var_4], ebx
js      short loc_1006dd01
lea     ecx, [ecx+0]
movzx   edx, ds:byte_10079268[ebx]
cmp     edx, edi
jnz     short loc_1006dcf4
movzx   eax, ds:word_100792e8[ebx*2]
add     eax, offset areindexedescap
mov     ecx, edi
test    edi, edi
jle     short loc_1006dcd4
mov     edi, edi
mov     dl, [eax]
dec     ecx
test    dl, dl
jz      short loc_1006dcd5
movzx   ebx, byte ptr [esi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[ebx]
mov     ebx, [ebp+var_4]
jnz     short loc_1006dcd5
inc     eax
inc     esi
test    ecx, ecx
jg      short loc_1006dcb0
dec     ecx
test    ecx, ecx
js      short loc_1006dd0c
movzx   ecx, byte ptr [esi]
movzx   eax, byte ptr [eax]
movzx   edx, ds:byte_10076030[ecx]
movzx   ecx, ds:byte_10076030[eax]
sub     ecx, edx
jz      short loc_1006dd0c
mov     esi, [ebp+arg_0]
movzx   ebx, ds:byte_100791e8[ebx]
dec     ebx
mov     [ebp+var_4], ebx
jns     short loc_1006dc90
pop     esi
mov     eax, 1ah
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   eax, ds:byte_100793e0[ebx]
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
movzx   edi, byte ptr [ecx]
lea     eax, [edi-9]
cmp     eax, 75h
ja      def_1006dd41
movzx   eax, ds:byte_1006e30c[eax]
mov     dl, 4
jmp     ds:jpt_1006dd41[eax*4]
movzx   esi, byte ptr [ecx+1]
mov     edx, 1
mov     eax, edx
test    ds:byte_10076130[esi], dl
jz      short loc_1006dd6e
jmp     short loc_1006dd60
add     eax, edx
movzx   esi, byte ptr [eax+ecx]
test    ds:byte_10076130[esi], dl
jnz     short loc_1006dd60
pop     edi
pop     esi
mov     dword ptr [ebx], 95h
pop     ebx
pop     ebp
retn
cmp     byte ptr [ecx+1], 2dh
jnz     short loc_1006ddaa
movzx   edx, byte ptr [ecx+2]
mov     eax, 2
test    edx, edx
jz      short loc_1006dd9f
lea     esp, [esp+0]
cmp     edx, 0ah
jz      short loc_1006dd9f
movzx   edx, byte ptr [eax+ecx+1]
inc     eax
test    edx, edx
jnz     short loc_1006dd90
pop     edi
pop     esi
mov     dword ptr [ebx], 95h
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 57h
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 16h
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 17h
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 1
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 56h
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 58h
mov     eax, 1
pop     ebx
pop     ebp
retn
cmp     byte ptr [ecx+1], 2ah
jnz     short loc_1006de42
mov     dl, [ecx+2]
test    dl, dl
jz      short loc_1006de42
mov     eax, 3
movzx   edx, dl
nop
cmp     edx, 2ah
jnz     short loc_1006de2b
cmp     byte ptr [eax+ecx], 2fh
jz      short loc_1006de36
movzx   edx, byte ptr [eax+ecx]
test    edx, edx
jz      short loc_1006de37
inc     eax
jmp     short loc_1006de20
inc     eax
pop     edi
pop     esi
mov     dword ptr [ebx], 95h
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 59h
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 5ah
mov     eax, 1
pop     ebx
pop     ebp
retn
xor     eax, eax
cmp     byte ptr [ecx+1], 3dh
pop     edi
setz    al
pop     esi
mov     dword ptr [ebx], 4ch
pop     ebx
inc     eax
pop     ebp
retn
movzx   eax, byte ptr [ecx+1]
cmp     eax, 3dh
jnz     short loc_1006de90
pop     edi
pop     esi
mov     dword ptr [ebx], 4eh
mov     eax, 2
pop     ebx
pop     ebp
retn
cmp     eax, 3eh
jnz     short loc_1006dea5
pop     edi
pop     esi
mov     dword ptr [ebx], 4bh
mov     eax, 2
pop     ebx
pop     ebp
retn
cmp     eax, 3ch
jnz     short loc_1006deba
pop     edi
pop     esi
mov     dword ptr [ebx], 54h
mov     eax, 2
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 4fh
mov     eax, 1
pop     ebx
pop     ebp
retn
movzx   eax, byte ptr [ecx+1]
cmp     eax, 3dh
jnz     short loc_1006dee3
pop     edi
pop     esi
mov     dword ptr [ebx], 50h
mov     eax, 2
pop     ebx
pop     ebp
retn
cmp     eax, 3eh
jnz     short loc_1006def8
pop     edi
pop     esi
mov     dword ptr [ebx], 55h
mov     eax, 2
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 4dh
mov     eax, 1
pop     ebx
pop     ebp
retn
cmp     byte ptr [ecx+1], 3dh
mov     eax, 2
jnz     loc_1006e1d9
pop     edi
pop     esi
mov     dword ptr [ebx], 4bh
pop     ebx
pop     ebp
retn
cmp     byte ptr [ecx+1], 7ch
jz      short loc_1006df38
pop     edi
pop     esi
mov     dword ptr [ebx], 53h
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 5bh
mov     eax, 2
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 19h
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 52h
mov     eax, 1
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
mov     dword ptr [ebx], 5dh
mov     eax, 1
pop     ebx
pop     ebp
retn
movzx   esi, byte ptr [ecx+1]
mov     eax, 1
test    esi, esi
jz      short loc_1006df9d
cmp     esi, edi
jnz     short loc_1006df93
movzx   edx, byte ptr [ecx+eax+1]
cmp     edx, edi
jnz     short loc_1006df9d
inc     eax
movzx   esi, byte ptr [eax+ecx+1]
inc     eax
test    esi, esi
jnz     short loc_1006df85
cmp     esi, 27h
jnz     short loc_1006dfae
pop     edi
pop     esi
mov     dword ptr [ebx], 5eh
inc     eax
pop     ebx
pop     ebp
retn
test    esi, esi
jz      loc_1006e1d9
pop     edi
pop     esi
mov     dword ptr [ebx], 1ah
inc     eax
pop     ebx
pop     ebp
retn
movzx   eax, byte ptr [ecx+1]
test    ds:byte_10076130[eax], dl
jnz     short loc_1006dfde
pop     edi
pop     esi
mov     dword ptr [ebx], 76h
mov     eax, 1
pop     ebx
pop     ebp
retn
xor     eax, eax
mov     dword ptr [ebx], 81h
test    ds:byte_10076130[edi], dl
jz      short loc_1006dffe
mov     edi, edi
movzx   esi, byte ptr [eax+ecx+1]
inc     eax
test    ds:byte_10076130[esi], dl
jnz     short loc_1006dff0
cmp     byte ptr [eax+ecx], 2eh
jnz     short loc_1006e026
movzx   esi, byte ptr [eax+ecx+1]
inc     eax
test    ds:byte_10076130[esi], dl
jz      short loc_1006e020
movzx   esi, byte ptr [eax+ecx+1]
inc     eax
test    ds:byte_10076130[esi], dl
jnz     short loc_1006e012
mov     dword ptr [ebx], 82h
mov     bl, [eax+ecx]
cmp     bl, 65h
jz      short loc_1006e033
cmp     bl, 45h
jnz     short loc_1006e089
mov     bl, [eax+ecx+1]
movzx   esi, bl
test    ds:byte_10076130[esi], dl
jnz     short loc_1006e059
cmp     bl, 2bh
jz      short loc_1006e04c
cmp     bl, 2dh
jnz     short loc_1006e089
movzx   esi, byte ptr [eax+ecx+2]
test    ds:byte_10076130[esi], dl
jz      short loc_1006e089
movzx   esi, byte ptr [eax+ecx+2]
add     eax, 2
test    ds:byte_10076130[esi], dl
jz      short loc_1006e07e
lea     esp, [esp+0]
movzx   esi, byte ptr [eax+ecx+1]
inc     eax
test    ds:byte_10076130[esi], dl
jnz     short loc_1006e070
mov     edx, [ebp+arg_0]
mov     dword ptr [edx], 82h
jmp     short loc_1006e08c
mov     edx, [ebp+arg_0]
movzx   esi, byte ptr [eax+ecx]
mov     bl, 46h
test    ds:byte_10076130[esi], bl
jz      loc_1006e29e
mov     edi, edi
movzx   esi, byte ptr [eax+ecx+1]
inc     eax
mov     edi, 94h
test    ds:byte_10076130[esi], bl
jnz     short loc_1006e0a0
mov     [edx], edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     edx, edi
mov     eax, 1
cmp     edx, 5dh
jz      short loc_1006e0d4
movzx   edx, byte ptr [eax+ecx]
test    edx, edx
jz      short loc_1006e0d4
inc     eax
cmp     edx, 5dh
jnz     short loc_1006e0c6
sub     edx, 5dh
neg     edx
sbb     edx, edx
and     edx, 7ah
pop     edi
add     edx, 1ah
pop     esi
mov     [ebx], edx
pop     ebx
pop     ebp
retn
movzx   esi, byte ptr [ecx+1]
mov     dl, 4
mov     dword ptr [ebx], 85h
mov     eax, 1
test    ds:byte_10076130[esi], dl
jz      loc_1006e29e
jmp     short loc_1006e110
movzx   esi, byte ptr [eax+ecx+1]
inc     eax
test    ds:byte_10076130[esi], dl
jnz     short loc_1006e110
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
movzx   esi, byte ptr [ecx+1]
mov     dl, 4
mov     eax, 1
test    ds:byte_10076130[esi], dl
jz      short loc_1006e15e
jmp     short loc_1006e140
movzx   esi, byte ptr [eax+ecx+1]
inc     eax
test    ds:byte_10076130[esi], dl
jnz     short loc_1006e140
cmp     eax, 1
jle     short loc_1006e15e
pop     edi
pop     esi
mov     dword ptr [ebx], 84h
pop     ebx
pop     ebp
retn
movzx   edx, byte ptr [ecx+1]
xor     esi, esi
mov     dword ptr [ebx], 85h
lea     eax, [esi+1]
test    edx, edx
jz      short loc_1006e1d9
mov     bl, 46h
movzx   edi, dl
test    ds:byte_10076130[edi], bl
jz      short loc_1006e181
inc     esi
jmp     short loc_1006e192
cmp     edx, 28h
jz      short loc_1006e19e
cmp     edx, 3ah
jnz     short loc_1006e1ce
cmp     [ecx+eax+1], dl
jnz     short loc_1006e1ce
inc     eax
movzx   edx, byte ptr [eax+ecx+1]
inc     eax
test    edx, edx
jnz     short loc_1006e173
jmp     short loc_1006e1ce
test    esi, esi
jle     short loc_1006e1d0
movzx   edx, byte ptr [eax+ecx+1]
inc     eax
test    edx, edx
jz      short loc_1006e1bd
test    ds:byte_10076130[edx], 1
jnz     short loc_1006e1bd
cmp     edx, 29h
jnz     short loc_1006e1a2
inc     eax
jmp     short loc_1006e1ce
cmp     edx, 29h
jnz     short loc_1006e1c5
inc     eax
jmp     short loc_1006e1ce
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx], 94h
test    esi, esi
jnz     loc_1006e29e
mov     ebx, [ebp+arg_0]
pop     edi
pop     esi
mov     dword ptr [ebx], 94h
pop     ebx
pop     ebp
retn
cmp     byte ptr [ecx+1], 27h
jnz     short def_1006dd41
movzx   esi, byte ptr [ecx+2]
mov     dl, 8
mov     dword ptr [ebx], 83h
mov     eax, 2
test    ds:byte_10076130[esi], dl
jz      short loc_1006e211
movzx   esi, byte ptr [eax+ecx+1]
inc     eax
test    ds:byte_10076130[esi], dl
jnz     short loc_1006e203
mov     dl, [eax+ecx]
cmp     dl, 27h
jnz     short loc_1006e22a
mov     esi, eax
and     esi, 80000001h
jns     short loc_1006e228
dec     esi
or      esi, 0fffffffeh
inc     esi
jz      short loc_1006e242
mov     dword ptr [ebx], 94h
test    dl, dl
jz      short loc_1006e242
cmp     dl, 27h
jz      short loc_1006e242
mov     dl, [eax+ecx+1]
inc     eax
test    dl, dl
jnz     short loc_1006e234
cmp     byte ptr [eax+ecx], 0
jz      short loc_1006e29e
pop     edi
pop     esi
inc     eax
pop     ebx
pop     ebp
retn
mov     bl, 46h
test    ds:byte_10076130[edi], bl
jnz     short loc_1006e26b
mov     edx, [ebp+arg_0]
pop     edi
pop     esi
mov     dword ptr [edx], 94h
mov     eax, 1
pop     ebx
pop     ebp
retn
movzx   eax, byte ptr [ecx+1]
mov     edi, 1
test    ds:byte_10076130[eax], bl
jz      short loc_1006e28e
lea     esp, [esp+0]
movzx   edx, byte ptr [edi+ecx+1]
inc     edi
test    ds:byte_10076130[edx], bl
jnz     short loc_1006e280
push    ecx
call    sub_1006dc40
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, [edi]
mov     eax, [ebx+4ch]
xor     esi, esi
mov     [esp+30h+var_18], esi
mov     [esp+30h+var_8], 0ffffffffh
mov     [esp+30h+var_1c], ebx
mov     [esp+30h+var_4], eax
cmp     [ebx+7ch], esi
jnz     short loc_1006e3c5
mov     [ebx+0d8h], esi
mov     ecx, [ebp+arg_4]
push    64ch
mov     [edi+0ch], esi
mov     [edi+1f8h], ecx
call    sub_100094a0
add     esp, 4
mov     [esp+30h+var_14], eax
test    eax, eax
jz      loc_1006e487
mov     dword ptr [eax], 0ffffffffh
mov     dl, [ebx+0e2h]
mov     [esp+30h+var_1d], dl
cmp     [ebx+0fch], esi
jz      short loc_1006e409
mov     byte ptr [ebx+0e2h], 1
cmp     byte ptr [ebx+32h], 0
jnz     loc_1006e517
mov     eax, [ebp+arg_4]
cmp     byte ptr [esi+eax], 0
lea     ecx, [esi+eax]
jz      loc_1006e517
lea     edx, [esp+30h+var_10]
push    edx
mov     [edi+210h], ecx
call    sub_1006dd20
add     esi, eax
add     esp, 4
mov     [edi+214h], eax
mov     [esp+30h+var_c], esi
cmp     esi, [esp+30h+var_4]
jg      loc_1006e4e0
mov     ecx, [esp+30h+var_10]
mov     eax, ecx
dec     eax
jz      short loc_1006e497
sub     eax, 93h
jz      loc_1006e4e9
dec     eax
jnz     short loc_1006e4a0
mov     eax, [ebx+0d8h]
test    eax, eax
jz      short loc_1006e4d4
push    offset ainterrupt
push    edi
call    sub_1000bb30
add     esp, 8
mov     dword ptr [edi+0ch], 9
jmp     loc_1006e517
mov     byte ptr [ebx+32h], 1
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
add     esi, [ebp+arg_4]
mov     [edi+1f8h], esi
mov     eax, [edi+214h]
mov     edx, [edi+210h]
mov     esi, [esp+30h+var_14]
push    eax
push    edx
mov     edx, edi
mov     ebx, ecx
call    sub_1006db20
mov     eax, [esp+38h+var_10]
mov     ebx, [esp+38h+var_1c]
mov     esi, [esp+38h+var_c]
add     esp, 8
cmp     dword ptr [edi+0ch], 0
mov     [esp+30h+var_8], eax
jnz     short loc_1006e517
cmp     byte ptr [ebx+32h], 0
jz      loc_1006e413
jmp     short loc_1006e517
mov     dword ptr [edi+0ch], 12h
jmp     short loc_1006e517
mov     ecx, [ebp+arg_8]
mov     eax, [ecx]
mov     ecx, ebx
call    sub_10009810
lea     edx, [edi+210h]
push    edx
push    offset aunrecognizedto
push    ebx
call    sub_1000ae80
mov     ecx, [ebp+arg_8]
add     esp, 0ch
mov     [ecx], eax
mov     [esp+30h+var_18], 1
add     esi, [ebp+arg_4]
cmp     byte ptr [esi], 0
mov     [esp+30h+var_4], esi
jnz     short loc_1006e583
cmp     [esp+30h+var_18], 0
jnz     short loc_1006e583
cmp     dword ptr [edi+0ch], 0
jnz     short loc_1006e583
mov     ebx, 1
cmp     [esp+30h+var_8], ebx
jz      short loc_1006e561
mov     eax, [edi+214h]
mov     ecx, [edi+210h]
mov     esi, [esp+30h+var_14]
push    eax
push    ecx
mov     edx, edi
call    sub_1006db20
mov     edx, [esp+38h+var_4]
add     esp, 8
mov     [edi+1f8h], edx
mov     eax, [edi+214h]
mov     ecx, [edi+210h]
mov     esi, [esp+30h+var_14]
push    eax
push    ecx
mov     edx, edi
xor     ebx, ebx
call    sub_1006db20
mov     ebx, [esp+38h+var_1c]
add     esp, 8
mov     esi, [esp+30h+var_14]
call    sub_1006afa0
cmp     byte ptr [ebx+32h], 0
mov     dl, [esp+30h+var_1d]
mov     [ebx+0e2h], dl
jz      short loc_1006e5a3
mov     dword ptr [edi+0ch], 7
mov     eax, [edi+0ch]
xor     esi, esi
cmp     eax, esi
jz      short loc_1006e5f9
cmp     eax, 65h
jz      short loc_1006e5f9
cmp     [edi+4], esi
jnz     short loc_1006e5f9
mov     ecx, offset aunknownerror
cmp     eax, 204h
jz      short loc_1006e5db
and     eax, 0ffh
cmp     eax, 1ah
ja      short loc_1006e5e0
mov     eax, ds:off_100794a0[eax*4]
cmp     eax, esi
jz      short loc_1006e5e0
mov     ecx, eax
jmp     short loc_1006e5e0
mov     ecx, offset aabortduetoroll
push    ecx
mov     esi, ebx
push    offset as
lea     ebx, [edi+4]
call    sub_10009bf0
mov     ebx, [esp+38h+var_1c]
add     esp, 8
xor     esi, esi
mov     eax, [edi+4]
cmp     eax, esi
jz      short loc_1006e61e
mov     edx, [edi+0ch]
mov     ecx, [ebp+arg_8]
push    eax
push    offset as
push    edx
mov     [ecx], eax
call    sub_1000b150
add     esp, 0ch
inc     [esp+30h+var_18]
mov     [edi+4], esi
mov     ecx, [edi+8]
cmp     ecx, esi
jz      short loc_1006e638
cmp     [edi+44h], esi
jle     short loc_1006e638
cmp     byte ptr [edi+12h], 0
jnz     short loc_1006e657
call    sub_10028430
mov     [edi+8], esi
cmp     byte ptr [edi+12h], 0
jnz     short loc_1006e657
mov     eax, [edi+1a8h]
mov     ecx, ebx
call    sub_10009810
mov     [edi+1a8h], esi
mov     [edi+1a4h], esi
mov     eax, [edi+220h]
push    eax
call    sub_10009770
add     esp, 4
cmp     byte ptr [edi+1d5h], 0
jnz     short loc_1006e67f
mov     ecx, [edi+1fch]
push    ecx
push    ebx
call    sub_1003fba0
add     esp, 8
mov     esi, [edi+200h]
mov     [esp+30h+var_4], esi
test    esi, esi
jz      short loc_1006e6d9
mov     edx, [esi+1ch]
push    edx
call    sub_1005dfb0
mov     edi, [esp+34h+var_1c]
mov     eax, [esi]
add     esp, 4
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+4]
mov     ecx, edi
call    sub_10009810
mov     eax, [esi+0ch]
push    eax
push    edi
call    sub_10036430
mov     edi, [esi+10h]
mov     esi, [esp+38h+var_1c]
add     esp, 8
call    sub_100433b0
mov     eax, [esp+30h+var_4]
mov     ecx, esi
call    sub_10009810
mov     edi, [ebp+arg_0]
mov     ebx, esi
mov     esi, [edi+1d0h]
dec     esi
js      short loc_1006e6f5
mov     ecx, [edi+1ech]
mov     eax, [ecx+esi*4]
mov     ecx, ebx
call    sub_10009810
dec     esi
jns     short loc_1006e6e2
mov     eax, [edi+1ech]
mov     ecx, ebx
call    sub_10009810
mov     eax, [edi+1f4h]
mov     ecx, ebx
call    sub_10009810
cmp     dword ptr [edi+1ach], 0
jz      loc_1006e7a8
lea     esp, [esp+0]
mov     eax, [edi+1ach]
mov     edx, [eax]
mov     [edi+1ach], edx
cmp     dword ptr [ebx+1e8h], 0
jz      short loc_1006e76c
cmp     eax, [ebx+0fch]
jb      short loc_1006e758
cmp     eax, [ebx+100h]
jnb     short loc_1006e758
movzx   eax, word ptr [ebx+0e0h]
mov     ecx, [ebx+1e8h]
add     [ecx], eax
jmp     short loc_1006e79b
push    eax
call    dword_10080258
mov     ecx, [ebx+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1006e79b
cmp     eax, [ebx+0fch]
jb      short loc_1006e792
cmp     eax, [ebx+100h]
jnb     short loc_1006e792
mov     ecx, [ebx+0f8h]
mov     [eax], ecx
dec     dword ptr [ebx+0e4h]
mov     [ebx+0f8h], eax
jmp     short loc_1006e79b
push    eax
call    sub_10009770
add     esp, 4
cmp     dword ptr [edi+1ach], 0
jnz     loc_1006e720
cmp     dword ptr [edi+224h], 0
jz      short loc_1006e7d3
mov     eax, [edi+224h]
mov     edx, [eax+48h]
push    eax
push    ebx
mov     [edi+224h], edx
call    sub_1003fba0
add     esp, 8
cmp     dword ptr [edi+224h], 0
jnz     short loc_1006e7b1
mov     eax, [esp+30h+var_18]
test    eax, eax
jle     short loc_1006e7e8
cmp     dword ptr [edi+0ch], 0
jnz     short loc_1006e7e8
mov     dword ptr [edi+0ch], 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     ecx, [ebp+arg_0]
mov     al, [ecx]
push    ebx
xor     bl, bl
push    esi
push    edi
mov     [ebp+var_1], bl
test    al, al
jz      short loc_1006e87c
movsx   esi, al
lea     edx, [esi-9]
cmp     edx, 57h
ja      def_1006e81d
movzx   edx, ds:byte_1006ebdc[edx]
jmp     ds:jpt_1006e81d[edx*4]
xor     al, al
jmp     loc_1006e8bc
cmp     byte ptr [ecx+1], 2ah
jnz     loc_1006e8ba
mov     al, [ecx+2]
add     ecx, 2
test    al, al
jz      short loc_1006e852
nop
cmp     al, 2ah
jnz     short loc_1006e84a
cmp     byte ptr [ecx+1], 2fh
jz      short loc_1006e85b
mov     al, [ecx+1]
inc     ecx
test    al, al
jnz     short loc_1006e840
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [ecx], 0
jz      short loc_1006e852
inc     ecx
mov     al, 1
jmp     short loc_1006e8bc
cmp     byte ptr [ecx+1], 2dh
jnz     short loc_1006e8ba
jmp     short loc_1006e870
cmp     al, 0ah
jz      short loc_1006e88b
mov     al, [ecx+1]
inc     ecx
test    al, al
jnz     short loc_1006e870
pop     edi
xor     eax, eax
cmp     bl, 1
pop     esi
setz    al
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [ecx], 0
jz      short loc_1006e87c
mov     al, 1
jmp     short loc_1006e8bc
mov     al, [ecx+1]
inc     ecx
test    al, al
jz      short loc_1006e852
lea     esp, [esp+0]
cmp     al, 5dh
jz      short loc_1006e8b5
mov     al, [ecx+1]
inc     ecx
test    al, al
jnz     short loc_1006e8a0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [ecx], 0
jz      short loc_1006e852
mov     al, 2
movzx   eax, al
movzx   edx, bl
mov     bl, ds:byte_10079460[eax+edx*8]
mov     al, [ecx+1]
inc     ecx
mov     [ebp+var_1], bl
test    al, al
jnz     loc_1006e807
pop     edi
xor     eax, eax
cmp     bl, 1
pop     esi
setz    al
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     al, [ecx+1]
inc     ecx
test    al, al
jz      loc_1006e852
movsx   eax, al
cmp     eax, esi
jz      short loc_1006e8b5
mov     al, [ecx+1]
inc     ecx
test    al, al
jnz     short loc_1006e8f3
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
movzx   edx, al
test    ds:byte_10076130[edx], 46h
jz      short loc_1006e8ba
movzx   eax, byte ptr [ecx+1]
test    ds:byte_10076130[eax], 46h
mov     edx, 1
mov     [ebp+arg_0], edx
jz      short loc_1006e942
lea     esp, [esp+0]
movzx   eax, byte ptr [edx+ecx+1]
inc     edx
test    ds:byte_10076130[eax], 46h
jnz     short loc_1006e930
mov     [ebp+arg_0], edx
lea     eax, [esi-43h]
cmp     eax, 31h
ja      def_1006e955
movzx   eax, ds:byte_1006ec44[eax]
jmp     ds:jpt_1006e955[eax*4]
cmp     edx, 6
jnz     def_1006e955
mov     eax, edx
mov     esi, ecx
mov     edi, offset acreate
mov     edi, edi
mov     dl, [esi]
dec     eax
test    dl, dl
jz      short loc_1006e992
movzx   ebx, byte ptr [edi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[ebx]
jnz     short loc_1006e992
inc     esi
inc     edi
test    eax, eax
jg      short loc_1006e970
dec     eax
test    eax, eax
js      short loc_1006e9b2
movzx   eax, byte ptr [edi]
movzx   edx, ds:byte_10076030[eax]
movzx   eax, byte ptr [esi]
movzx   eax, ds:byte_10076030[eax]
sub     eax, edx
jnz     loc_1006ebaf
mov     edx, [ebp+arg_0]
mov     bl, [ebp+var_1]
mov     al, 4
lea     ecx, [ecx+edx-1]
jmp     loc_1006e8bc
cmp     edx, 7
jnz     short loc_1006ea24
mov     eax, edx
mov     esi, ecx
mov     edi, offset atrigger
mov     dl, [esi]
dec     eax
test    dl, dl
jz      short loc_1006e9f3
movzx   ebx, byte ptr [edi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[ebx]
jnz     short loc_1006e9f3
inc     esi
inc     edi
test    eax, eax
jg      short loc_1006e9d1
dec     eax
test    eax, eax
js      short loc_1006ea13
movzx   eax, byte ptr [edi]
movzx   edx, ds:byte_10076030[eax]
movzx   eax, byte ptr [esi]
movzx   eax, ds:byte_10076030[eax]
sub     eax, edx
jnz     loc_1006ebaf
mov     edx, [ebp+arg_0]
mov     bl, [ebp+var_1]
mov     al, 6
lea     ecx, [ecx+edx-1]
jmp     loc_1006e8bc
cmp     edx, 4
jnz     short loc_1006ea85
mov     eax, edx
mov     esi, ecx
mov     edi, offset atemp
mov     dl, [esi]
dec     eax
test    dl, dl
jz      short loc_1006ea54
movzx   ebx, byte ptr [edi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[ebx]
jnz     short loc_1006ea54
inc     esi
inc     edi
test    eax, eax
jg      short loc_1006ea32
dec     eax
test    eax, eax
js      short loc_1006ea74
movzx   eax, byte ptr [esi]
movzx   edx, ds:byte_10076030[eax]
movzx   eax, byte ptr [edi]
movzx   eax, ds:byte_10076030[eax]
sub     edx, eax
jnz     loc_1006ebaf
mov     edx, [ebp+arg_0]
mov     bl, [ebp+var_1]
mov     al, 5
lea     ecx, [ecx+edx-1]
jmp     loc_1006e8bc
cmp     edx, 9
jnz     def_1006e955
mov     eax, edx
mov     esi, ecx
mov     edi, offset atemporary
mov     dl, [esi]
dec     eax
test    dl, dl
jz      short loc_1006eab9
movzx   ebx, byte ptr [edi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[ebx]
jnz     short loc_1006eab9
inc     esi
inc     edi
test    eax, eax
jg      short loc_1006ea97
dec     eax
test    eax, eax
js      short loc_1006ead9
movzx   eax, byte ptr [edi]
movzx   edx, ds:byte_10076030[eax]
movzx   eax, byte ptr [esi]
movzx   eax, ds:byte_10076030[eax]
sub     eax, edx
jnz     loc_1006ebaf
mov     edx, [ebp+arg_0]
mov     bl, [ebp+var_1]
mov     al, 5
lea     ecx, [ecx+edx-1]
jmp     loc_1006e8bc
cmp     edx, 3
jnz     short loc_1006eb4b
mov     eax, edx
mov     esi, ecx
mov     edi, offset aend
mov     dl, [esi]
dec     eax
test    dl, dl
jz      short loc_1006eb1a
movzx   ebx, byte ptr [edi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[ebx]
jnz     short loc_1006eb1a
inc     esi
inc     edi
test    eax, eax
jg      short loc_1006eaf8
dec     eax
test    eax, eax
js      short loc_1006eb3a
movzx   eax, byte ptr [edi]
movzx   edx, ds:byte_10076030[eax]
movzx   eax, byte ptr [esi]
movzx   eax, ds:byte_10076030[eax]
sub     eax, edx
jnz     loc_1006ebaf
mov     edx, [ebp+arg_0]
mov     bl, [ebp+var_1]
mov     al, 7
lea     ecx, [ecx+edx-1]
jmp     loc_1006e8bc
cmp     edx, 7
jnz     short def_1006e955
mov     eax, edx
mov     esi, ecx
mov     edi, offset aexplain
lea     esp, [esp+0]
mov     dl, [esi]
dec     eax
test    dl, dl
jz      short loc_1006eb82
movzx   ebx, byte ptr [edi]
movzx   edx, dl
mov     dl, ds:byte_10076030[edx]
cmp     dl, ds:byte_10076030[ebx]
jnz     short loc_1006eb82
inc     esi
inc     edi
test    eax, eax
jg      short loc_1006eb60
dec     eax
test    eax, eax
js      short loc_1006eb9e
movzx   eax, byte ptr [edi]
movzx   edx, ds:byte_10076030[eax]
movzx   eax, byte ptr [esi]
movzx   eax, ds:byte_10076030[eax]
sub     eax, edx
jnz     short loc_1006ebaf
mov     edx, [ebp+arg_0]
mov     bl, [ebp+var_1]
mov     al, 3
lea     ecx, [ecx+edx-1]
jmp     loc_1006e8bc
mov     edx, [ebp+arg_0]
mov     bl, [ebp+var_1]
mov     al, 2
lea     ecx, [ecx+edx-1]
jmp     loc_1006e8bc
push    ebp
mov     ebp, esp
push    ecx
call    sub_1006edd0
test    eax, eax
jnz     loc_1006ed8a
push    ebx
push    esi
push    edi
push    28h
call    sub_100094a0
mov     esi, eax
add     esp, 4
test    esi, esi
jz      loc_1006ed4b
mov     ebx, [ebp+arg_0]
xor     eax, eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
mov     [esi+10h], eax
mov     [esi+14h], eax
mov     [esi+18h], eax
mov     [esi+1ch], eax
mov     [esi+20h], eax
mov     [esi+24h], eax
mov     eax, 1
mov     [esi+1ch], ax
mov     al, 5
mov     [esi+1eh], al
mov     dword ptr [esi], 0
test    ebx, ebx
jnz     short loc_1006ecee
mov     ecx, 1
mov     [esi+1ch], cx
mov     [esi+1eh], al
jmp     short loc_1006ed4b
xor     edi, edi
mov     dl, [edi+ebx+1]
or      dl, [edi+ebx]
jz      short loc_1006ed04
add     edi, 2
cmp     edi, 3b9aca00h
jle     short loc_1006ecf0
xor     eax, eax
mov     [ebp+var_4], 202h
push    esi
cmp     eax, offset sub_10009760
jnz     short loc_1006ed22
call    sub_100247d0
mov     eax, [ebp+var_4]
mov     [esi+24h], ebx
jmp     short loc_1006ed2c
call    sub_100247d0
mov     eax, 0a02h
add     esp, 4
mov     dword ptr [esi+20h], 0
mov     [esi+4], ebx
mov     [esi+18h], edi
mov     [esi+1ch], ax
mov     word ptr [esi+1eh], 203h
call    sub_1000b840
mov     bl, 1
mov     edi, esi
call    sub_100253e0
test    eax, eax
jz      short loc_1006ed65
push    eax
call    sub_1006e7f0
add     esp, 4
mov     edi, eax
jmp     short loc_1006ed6a
mov     edi, 7
test    esi, esi
jz      short loc_1006ed80
push    esi
call    sub_100247d0
mov     ecx, [esi]
add     esp, 4
mov     eax, esi
call    sub_10009810
mov     eax, edi
pop     edi
pop     esi
and     eax, 0ffh
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset byte_10076028
retn
mov     eax, offset byte_1007cc98
retn
mov     eax, 2de226h
retn
mov     eax, 1
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
cmp     dword_100802f4, 0
push    esi
push    edi
jz      short loc_1006ede9
xor     eax, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
call    sub_10008e00
mov     esi, eax
test    esi, esi
jnz     loc_1006efba
cmp     dword_10080234, eax
jnz     short loc_1006ee04
xor     edi, edi
jmp     short loc_1006ee1f
push    2
call    dword_10080274
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_1006ee1f
push    edi
call    dword_1008027c
add     esp, 4
cmp     dword_10080300, 0
mov     dword_100802fc, 1
jnz     short loc_1006ee3d
call    sub_10009200
mov     esi, eax
test    esi, esi
jnz     short loc_1006ee85
cmp     dword_10080308, 0
mov     dword_10080300, 1
jnz     short loc_1006ee7f
cmp     dword_10080234, 0
jnz     short loc_1006ee5d
xor     eax, eax
jmp     short loc_1006ee68
push    1
call    dword_10080274
add     esp, 4
cmp     dword_10080234, 0
mov     dword_10080308, eax
jz      short loc_1006ee7f
test    eax, eax
jnz     short loc_1006ee7f
lea     esi, [eax+7]
jmp     short loc_1006ee85
inc     dword_1008030c
test    edi, edi
jz      short loc_1006ee93
push    edi
call    dword_10080284
add     esp, 4
test    esi, esi
jnz     loc_1006efb8
mov     eax, dword_10080308
test    eax, eax
jz      short loc_1006eeae
push    eax
call    dword_1008027c
add     esp, 4
cmp     dword_100802f4, 0
jnz     loc_1006ef5d
cmp     dword_100802f8, 0
jnz     loc_1006ef5d
push    5ch
push    0
push    offset dword_100814b8
mov     dword_100802f8, 1
call    memset
add     esp, 0ch
call    sub_10048a60
cmp     dword_10080304, 0
jnz     short loc_1006ef1e
cmp     dword_10080298, 0
jnz     short loc_1006ef09
push    offset dword_10076434
push    12h
call    sub_1006efc0
add     esp, 8
mov     eax, dword_10080294
push    eax
call    dword_10080298
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_1006ef53
mov     dword_10080304, 1
call    sub_10008ab0
mov     esi, eax
test    esi, esi
jnz     short loc_1006ef53
mov     eax, dword_100802e8
mov     edx, dword_100802e4
mov     ecx, dword_100802e0
call    sub_10010b10
mov     dword_100802f4, 1
mov     dword_100802f8, 0
mov     eax, dword_10080308
test    eax, eax
jz      short loc_1006ef70
push    eax
call    dword_10080284
add     esp, 4
test    edi, edi
jz      short loc_1006ef7e
push    edi
call    dword_1008027c
add     esp, 4
mov     eax, dword_1008030c
dec     eax
mov     dword_1008030c, eax
test    eax, eax
jg      short loc_1006efaa
mov     eax, dword_10080308
test    eax, eax
jz      short loc_1006efa0
push    eax
call    dword_10080278
add     esp, 4
mov     dword_10080308, 0
test    edi, edi
jz      short loc_1006efb8
push    edi
call    dword_10080284
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
xor     ebx, ebx
push    esi
push    edi
cmp     dword_100802f4, ebx
jz      short loc_1006eff7
push    offset ac0d89d4a975292
push    1b534h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
lea     eax, [ebx+15h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
dec     eax
cmp     eax, 12h
ja      def_1006f004
jmp     ds:jpt_1006f004[eax*4]
mov     dword_10080234, ebx
mov     dword_10080238, ebx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dword_10080234, 1
mov     dword_10080238, ebx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
mov     dword_10080234, eax
mov     dword_10080238, eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+arg_4]
mov     ecx, 9
mov     edi, offset dword_1008026c
rep movsd
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+arg_4]
mov     ecx, 9
mov     esi, offset dword_1008026c
rep movsd
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+arg_4]
mov     ecx, 8
mov     edi, offset dword_1008024c
rep movsd
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword_1008024c, ebx
jnz     short loc_1006f0b0
push    offset off_100762e8
push    4
call    sub_1006efc0
add     esp, 8
mov     edi, [ebp+arg_4]
mov     ecx, 8
mov     esi, offset dword_1008024c
rep movsd
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     dword_10080230, eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_8]
mov     dword_100802dc, eax
mov     dword_100802d4, ecx
mov     dword_100802d8, edx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_8]
mov     dword_100802e8, eax
mov     dword_100802e0, ecx
mov     dword_100802e4, edx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+arg_4]
mov     ecx, 0dh
mov     edi, offset dword_10080290
rep movsd
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword_10080298, ebx
jnz     short loc_1006f14e
push    offset dword_10076434
push    12h
call    sub_1006efc0
add     esp, 8
mov     edi, [ebp+arg_4]
mov     ecx, 0dh
mov     esi, offset dword_10080290
rep movsd
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_8]
mov     dword_10080244, ecx
mov     dword_10080248, edx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     dword_10080310, eax
mov     dword_10080314, ecx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
mov     dword_1008023c, edx
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, 1
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    edi
xor     edi, edi
mov     ebx, eax
cmp     [esi+0e4h], edi
jz      short loc_1006f228
lea     eax, [edi+5]
pop     edi
pop     ebx
pop     ebp
retn
cmp     byte ptr [esi+0e3h], 0
jz      short loc_1006f240
mov     eax, [esi+0fch]
push    eax
call    sub_10009770
add     esp, 4
and     ebx, 0fffffff8h
cmp     ebx, 4
jg      short loc_1006f24a
xor     ebx, ebx
cmp     [ebp+arg_4], edi
jge     short loc_1006f252
mov     [ebp+arg_4], edi
cmp     ebx, edi
jz      short loc_1006f2a3
cmp     [ebp+arg_4], edi
jz      short loc_1006f2a3
mov     eax, [ebp+arg_0]
cmp     eax, edi
jnz     short loc_1006f29f
mov     eax, dword_100816bc
cmp     eax, edi
jz      short loc_1006f26d
call    eax
mov     ecx, ebx
imul    ecx, [ebp+arg_4]
push    ecx
call    sub_100094a0
mov     edi, eax
mov     eax, dword_100816c0
add     esp, 4
test    eax, eax
jz      short loc_1006f289
call    eax
test    edi, edi
jz      short loc_1006f2a5
push    edi
call    dword_10080258
cdq
add     esp, 4
idiv    ebx
mov     [ebp+arg_4], eax
jmp     short loc_1006f2a5
mov     edi, eax
jmp     short loc_1006f2a5
xor     ebx, ebx
xor     edx, edx
mov     [esi+0fch], edi
mov     [esi+0f8h], edx
mov     [esi+0e0h], bx
cmp     edi, edx
jz      short loc_1006f302
mov     ecx, [ebp+arg_4]
dec     ecx
mov     eax, edi
cmp     ecx, edx
jl      short loc_1006f2e3
jmp     short loc_1006f2d0
mov     edi, [esi+0f8h]
mov     [eax], edi
mov     [esi+0f8h], eax
add     eax, ebx
dec     ecx
jns     short loc_1006f2d0
cmp     [ebp+arg_0], edx
mov     [esi+100h], eax
setz    dl
mov     byte ptr [esi+0e2h], 1
mov     [esi+0e3h], dl
xor     eax, eax
pop     edi
pop     ebx
pop     ebp
retn
pop     edi
mov     [esi+100h], edx
mov     [esi+0e2h], dx
xor     eax, eax
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax+0ch]
pop     ebp
retn
push    ebx
mov     ebx, eax
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_1006f344
push    eax
call    dword_1008027c
add     esp, 4
push    edi
push    ebx
call    sub_10019440
xor     edi, edi
add     esp, 4
cmp     [ebx+14h], edi
jle     short loc_1006f391
push    esi
xor     esi, esi
jmp     short loc_1006f360
mov     eax, [ebx+10h]
mov     eax, [eax+esi+4]
test    eax, eax
jz      short loc_1006f387
mov     ecx, [eax+4]
mov     edx, [ecx]
mov     eax, [edx+0b4h]
mov     eax, [eax+28h]
test    eax, eax
jz      short loc_1006f387
push    eax
call    dword_100802c0
add     esp, 4
inc     edi
add     esi, 10h
cmp     edi, [ebx+14h]
jl      short loc_1006f360
pop     esi
call    sub_10019550
mov     ebx, [ebx+0ch]
pop     edi
test    ebx, ebx
jz      short loc_1006f3a8
push    ebx
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ebp+arg_4]
push    esi
cmp     edx, 3e9h
jz      short loc_1006f43a
mov     eax, 1
xor     ecx, ecx
cmp     ds:dword_100784bc[ecx*8], edx
jz      short loc_1006f3da
inc     ecx
cmp     ecx, 2
jb      short loc_1006f3c7
pop     esi
pop     ecx
pop     ebp
retn
mov     esi, [ebp+arg_8]
mov     edx, [ebp+arg_0]
mov     eax, [edx+18h]
test    esi, esi
jle     short loc_1006f3f2
mov     esi, ds:dword_100784c0[ecx*8]
or      esi, eax
jmp     short loc_1006f3ff
jnz     short loc_1006f402
mov     esi, ds:dword_100784c0[ecx*8]
not     esi
and     esi, eax
mov     [edx+18h], esi
cmp     eax, [edx+18h]
jz      short loc_1006f41b
mov     eax, [edx+4]
test    eax, eax
jz      short loc_1006f41b
mov     edi, edi
mov     byte ptr [eax+5fh], 1
mov     eax, [eax+3ch]
test    eax, eax
jnz     short loc_1006f410
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_1006f434
mov     ecx, ds:dword_100784c0[ecx*8]
and     ecx, [edx+18h]
neg     ecx
sbb     ecx, ecx
neg     ecx
mov     [eax], ecx
xor     eax, eax
pop     esi
pop     ecx
pop     ebp
retn
mov     edx, [ebp+arg_10]
mov     eax, [ebp+arg_8]
mov     esi, [ebp+arg_0]
push    edx
push    eax
mov     eax, [ebp+arg_c]
call    sub_1006f210
add     esp, 8
pop     esi
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
push    edi
mov     edi, [ebp+arg_c]
cmp     ebx, edi
jge     short loc_1006f471
mov     edi, ebx
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+arg_8]
push    esi
mov     esi, edi
cmp     edi, 4
jb      short loc_1006f494
nop
mov     eax, [edx]
cmp     eax, [ecx]
jnz     short loc_1006f498
sub     esi, 4
add     ecx, 4
add     edx, 4
cmp     esi, 4
jnb     short loc_1006f480
test    esi, esi
jz      short loc_1006f4e1
movzx   ebx, byte ptr [ecx]
movzx   eax, byte ptr [edx]
sub     eax, ebx
jnz     short loc_1006f4d3
cmp     esi, 1
jbe     short loc_1006f4de
movzx   eax, byte ptr [edx+1]
movzx   ebx, byte ptr [ecx+1]
sub     eax, ebx
jnz     short loc_1006f4d3
cmp     esi, 2
jbe     short loc_1006f4de
movzx   eax, byte ptr [edx+2]
movzx   ebx, byte ptr [ecx+2]
sub     eax, ebx
jnz     short loc_1006f4d3
cmp     esi, 3
jbe     short loc_1006f4de
movzx   eax, byte ptr [edx+3]
movzx   ecx, byte ptr [ecx+3]
sub     eax, ecx
mov     ebx, [ebp+arg_4]
sar     eax, 1fh
or      eax, 1
jmp     short loc_1006f4e3
mov     ebx, [ebp+arg_4]
xor     eax, eax
pop     esi
test    eax, eax
jnz     short loc_1006f534
cmp     [ebp+arg_0], eax
jz      short loc_1006f52f
mov     ecx, ebx
sub     ecx, edi
test    ecx, ecx
jle     short loc_1006f50d
mov     edx, [ebp+arg_8]
lea     edx, [edi+edx-1]
lea     esp, [esp+0]
cmp     byte ptr [edx+ecx], 20h
jnz     short loc_1006f50b
dec     ecx
test    ecx, ecx
jg      short loc_1006f500
test    ecx, ecx
jnz     short loc_1006f52f
mov     ecx, [ebp+arg_c]
sub     ecx, edi
test    ecx, ecx
jle     short loc_1006f52d
mov     edx, [ebp+arg_10]
lea     edi, [edi+edx-1]
nop
cmp     byte ptr [edi+ecx], 20h
jnz     short loc_1006f52b
dec     ecx
test    ecx, ecx
jg      short loc_1006f520
test    ecx, ecx
jz      short loc_1006f534
sub     ebx, [ebp+arg_c]
mov     eax, ebx
pop     edi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [ebp+arg_c]
mov     eax, esi
cmp     esi, edi
jl      short loc_1006f553
mov     eax, edi
mov     ecx, [ebp+arg_8]
push    eax
mov     eax, [ebp+arg_10]
push    eax
push    ecx
call    sub_1000bcf0
add     esp, 0ch
test    eax, eax
jnz     short loc_1006f56c
sub     esi, edi
mov     eax, esi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+1ch]
mov     edx, [ecx+20h]
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax+40h]
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax+44h]
pop     ebp
retn
cmp     dword ptr [esi+1d0h], 0
jz      loc_1006f639
lea     ecx, [ecx+0]
cmp     dword ptr [esi+1e8h], 0
mov     eax, [esi+1d0h]
mov     ecx, [eax+0ch]
mov     [esi+1d0h], ecx
jz      short loc_1006f5fd
cmp     eax, [esi+0fch]
jb      short loc_1006f5e9
cmp     eax, [esi+100h]
jnb     short loc_1006f5e9
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_1006f62c
push    eax
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1006f62c
cmp     eax, [esi+0fch]
jb      short loc_1006f623
cmp     eax, [esi+100h]
jnb     short loc_1006f623
mov     edx, [esi+0f8h]
mov     [eax], edx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
jmp     short loc_1006f62c
push    eax
call    sub_10009770
add     esp, 4
cmp     dword ptr [esi+1d0h], 0
jnz     loc_1006f5b0
mov     dword ptr [esi+1d8h], 0
mov     dword ptr [esi+1dch], 0
mov     byte ptr [esi+37h], 0
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [eax+20h]
test    esi, esi
jz      short loc_1006f687
dec     dword ptr [esi]
jnz     short loc_1006f687
mov     ecx, [esi+8]
mov     edx, [esi+4]
push    ecx
call    edx
mov     ecx, [ebp+arg_0]
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
jmp     sub_10009810
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    esi
call    sub_10019440
add     esp, 4
cmp     dword ptr [esi+14h], 0
mov     [ebp+var_8], 0
jle     loc_1006f7cb
push    edi
mov     [ebp+var_4], 0
lea     ecx, [ecx+0]
mov     eax, [esi+10h]
mov     ecx, [ebp+var_4]
mov     eax, [ecx+eax+0ch]
test    eax, eax
jz      loc_1006f7b6
mov     ebx, [eax+10h]
test    ebx, ebx
jz      loc_1006f7b6
lea     ecx, [ecx+0]
mov     eax, [ebx+8]
test    byte ptr [eax+22h], 10h
jz      loc_1006f7a9
add     eax, 34h
cmp     dword ptr [eax], 0
jz      loc_1006f7a9
lea     esp, [esp+0]
mov     ecx, [eax]
cmp     [ecx], esi
jz      short loc_1006f714
cmp     dword ptr [ecx+18h], 0
lea     eax, [ecx+18h]
jnz     short loc_1006f700
jmp     loc_1006f7a9
mov     esi, ecx
mov     edx, [esi+18h]
mov     [eax], edx
dec     dword ptr [esi+0ch]
mov     edi, [esi]
jnz     loc_1006f7a9
mov     eax, [esi+8]
test    eax, eax
jz      short loc_1006f738
mov     ecx, [eax]
mov     edx, [ecx+10h]
push    eax
call    edx
add     esp, 4
test    edi, edi
jz      short loc_1006f7a0
cmp     dword ptr [edi+1e8h], 0
jz      short loc_1006f77a
cmp     esi, [edi+0fch]
jb      short loc_1006f766
cmp     esi, [edi+100h]
jnb     short loc_1006f766
movzx   eax, word ptr [edi+0e0h]
mov     edi, [edi+1e8h]
add     [edi], eax
jmp     short loc_1006f7a9
push    esi
call    dword_10080258
mov     edi, [edi+1e8h]
add     esp, 4
add     [edi], eax
jmp     short loc_1006f7a9
cmp     esi, [edi+0fch]
jb      short loc_1006f7a0
cmp     esi, [edi+100h]
jnb     short loc_1006f7a0
mov     eax, [edi+0f8h]
mov     [esi], eax
dec     dword ptr [edi+0e4h]
mov     [edi+0f8h], esi
jmp     short loc_1006f7a9
push    esi
call    sub_10009770
add     esp, 4
mov     ebx, [ebx]
mov     esi, [ebp+arg_0]
test    ebx, ebx
jnz     loc_1006f6e0
mov     eax, [ebp+var_8]
add     [ebp+var_4], 10h
inc     eax
mov     [ebp+var_8], eax
cmp     eax, [esi+14h]
jl      loc_1006f6c0
pop     edi
mov     ebx, esi
call    sub_10019550
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword ptr [eax+4], 0
jz      short loc_1006f7ec
mov     eax, 1
retn
push    esi
mov     esi, [eax+14h]
xor     ecx, ecx
test    esi, esi
jle     short loc_1006f814
mov     eax, [eax+10h]
add     eax, 4
lea     esp, [esp+0]
mov     edx, [eax]
test    edx, edx
jz      short loc_1006f80c
cmp     dword ptr [edx+10h], 0
jnz     short loc_1006f818
inc     ecx
add     eax, 10h
cmp     ecx, esi
jl      short loc_1006f800
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
push    edi
mov     edi, eax
test    edi, edi
jz      loc_1006f8db
mov     eax, [edi+3ch]
cmp     eax, 4b771290h
jz      short loc_1006f877
cmp     eax, 0a029a697h
jz      short loc_1006f877
cmp     eax, 0f03b7906h
jz      short loc_1006f877
push    offset ainvalid
push    offset aapicallwithsda
push    15h
call    sub_1000b150
add     esp, 0ch
push    offset ac0d89d4a975292
push    1b70bh
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     eax, 15h
pop     edi
retn
mov     eax, [edi+0ch]
test    eax, eax
jz      short loc_1006f888
push    eax
call    dword_1008027c
add     esp, 4
push    edi
call    sub_1006f690
add     esp, 4
push    44h
call    sub_100639d0
add     esp, 4
mov     eax, edi
call    sub_1006f7e0
test    eax, eax
mov     eax, edi
jz      short loc_1006f8cf
push    offset aunabletoclosed
push    5
call    sub_1000ba40
mov     edi, [edi+0ch]
add     esp, 8
test    edi, edi
jz      short loc_1006f8c8
push    edi
call    dword_10080284
add     esp, 4
mov     eax, 5
pop     edi
retn
mov     dword ptr [edi+3ch], 64cffc7fh
call    sub_1006f8f0
xor     eax, eax
pop     edi
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
call    sub_1006f820
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, eax
cmp     dword ptr [esi+3ch], 64cffc7fh
push    edi
jnz     loc_1006fd95
call    sub_1006f7e0
test    eax, eax
jnz     loc_1006fd95
call    sub_1006f5a0
xor     eax, eax
mov     [ebp+var_4], eax
cmp     [esi+14h], eax
jle     short loc_1006f95d
mov     [ebp+var_8], eax
mov     edi, [esi+10h]
add     edi, [ebp+var_8]
mov     ebx, [edi+4]
test    ebx, ebx
jz      short loc_1006f94d
call    sub_1001b4a0
cmp     [ebp+var_4], 1
mov     dword ptr [edi+4], 0
jz      short loc_1006f94d
mov     dword ptr [edi+0ch], 0
mov     eax, [ebp+var_4]
add     [ebp+var_8], 10h
inc     eax
mov     [ebp+var_4], eax
cmp     eax, [esi+14h]
jl      short loc_1006f927
mov     eax, [esi+10h]
mov     eax, [eax+1ch]
test    eax, eax
jz      short loc_1006f970
push    eax
call    sub_100449b0
add     esp, 4
mov     eax, esi
call    sub_10062cf0
mov     ebx, esi
call    sub_1003f920
lea     ecx, [esi+138h]
mov     [ebp+var_8], ecx
mov     [ebp+var_4], 17h
mov     edi, edi
mov     edx, [ebp+var_8]
mov     edi, [edx]
test    edi, edi
jz      loc_1006faaf
lea     ecx, [ecx+0]
mov     eax, [edi+1ch]
mov     [ebp+var_c], eax
mov     ebx, [edi+20h]
test    ebx, ebx
jz      short loc_1006fa2a
dec     dword ptr [ebx]
jnz     short loc_1006fa2a
mov     ecx, [ebx+8]
mov     edx, [ebx+4]
push    ecx
call    edx
add     esp, 4
cmp     dword ptr [esi+1e8h], 0
jz      short loc_1006f9fb
cmp     ebx, [esi+0fch]
jb      short loc_1006f9e7
cmp     ebx, [esi+100h]
jnb     short loc_1006f9e7
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_1006fa2a
push    ebx
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1006fa2a
cmp     ebx, [esi+0fch]
jb      short loc_1006fa21
cmp     ebx, [esi+100h]
jnb     short loc_1006fa21
mov     eax, [esi+0f8h]
mov     [ebx], eax
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], ebx
jmp     short loc_1006fa2a
push    ebx
call    sub_10009770
add     esp, 4
cmp     dword ptr [esi+1e8h], 0
mov     ebx, [edi+8]
jz      short loc_1006fa6b
cmp     edi, [esi+0fch]
jb      short loc_1006fa57
cmp     edi, [esi+100h]
jnb     short loc_1006fa57
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_1006fa9a
push    edi
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1006fa9a
cmp     edi, [esi+0fch]
jb      short loc_1006fa91
cmp     edi, [esi+100h]
jnb     short loc_1006fa91
mov     ecx, [esi+0f8h]
mov     [edi], ecx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], edi
jmp     short loc_1006fa9a
push    edi
call    sub_10009770
add     esp, 4
mov     edi, ebx
test    ebx, ebx
jnz     loc_1006f9a6
mov     edi, [ebp+var_c]
test    edi, edi
jnz     loc_1006f9a0
add     [ebp+var_8], 4
dec     [ebp+var_4]
jnz     loc_1006f990
mov     eax, [esi+19ch]
mov     [ebp+var_8], eax
test    eax, eax
jz      loc_1006fb79
mov     edx, [ebp+var_8]
mov     ebx, [edx+8]
lea     edi, [ebx+10h]
mov     [ebp+var_4], 3
mov     eax, [edi]
test    eax, eax
jz      short loc_1006faec
mov     ecx, [edi-8]
push    ecx
call    eax
add     esp, 4
add     edi, 14h
dec     [ebp+var_4]
jnz     short loc_1006fadd
cmp     dword ptr [esi+1e8h], 0
jz      short loc_1006fb36
test    ebx, ebx
jz      short loc_1006fb22
cmp     ebx, [esi+0fch]
jb      short loc_1006fb22
cmp     ebx, [esi+100h]
jnb     short loc_1006fb22
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_1006fb69
push    ebx
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1006fb69
test    ebx, ebx
jz      short loc_1006fb60
cmp     ebx, [esi+0fch]
jb      short loc_1006fb60
cmp     ebx, [esi+100h]
jnb     short loc_1006fb60
mov     edx, [esi+0f8h]
mov     [ebx], edx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], ebx
jmp     short loc_1006fb69
push    ebx
call    sub_10009770
add     esp, 4
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     [ebp+var_8], eax
test    eax, eax
jnz     loc_1006facd
lea     ebx, [esi+194h]
call    sub_1000cbb0
mov     edi, [esi+124h]
test    edi, edi
jz      loc_1006fc1c
mov     ebx, [edi+8]
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_1006fba5
mov     ecx, [ebx+8]
push    ecx
call    eax
add     esp, 4
cmp     dword ptr [esi+1e8h], 0
jz      short loc_1006fbe3
cmp     ebx, [esi+0fch]
jb      short loc_1006fbcf
cmp     ebx, [esi+100h]
jnb     short loc_1006fbcf
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_1006fc12
push    ebx
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1006fc12
cmp     ebx, [esi+0fch]
jb      short loc_1006fc09
cmp     ebx, [esi+100h]
jnb     short loc_1006fc09
mov     edx, [esi+0f8h]
mov     [ebx], edx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], ebx
jmp     short loc_1006fc12
push    ebx
call    sub_10009770
add     esp, 4
mov     edi, [edi]
test    edi, edi
jnz     loc_1006fb92
lea     ebx, [esi+11ch]
call    sub_1000cbb0
push    0
push    0
mov     eax, esi
call    sub_1000ba40
mov     edi, [esi+0cch]
add     esp, 8
test    edi, edi
jz      short loc_1006fcbb
push    edi
call    sub_100247d0
mov     ebx, [edi]
add     esp, 4
test    ebx, ebx
jz      short loc_1006fcb2
cmp     dword ptr [ebx+1e8h], 0
jz      short loc_1006fc8c
cmp     edi, [ebx+0fch]
jb      short loc_1006fc78
cmp     edi, [ebx+100h]
jnb     short loc_1006fc78
movzx   eax, word ptr [ebx+0e0h]
mov     ebx, [ebx+1e8h]
add     [ebx], eax
jmp     short loc_1006fcbb
push    edi
call    dword_10080258
mov     ebx, [ebx+1e8h]
add     esp, 4
add     [ebx], eax
jmp     short loc_1006fcbb
cmp     edi, [ebx+0fch]
jb      short loc_1006fcb2
cmp     edi, [ebx+100h]
jnb     short loc_1006fcb2
mov     eax, [ebx+0f8h]
mov     [edi], eax
dec     dword ptr [ebx+0e4h]
mov     [ebx+0f8h], edi
jmp     short loc_1006fcbb
push    edi
call    sub_10009770
add     esp, 4
mov     eax, esi
call    sub_10050950
cmp     dword ptr [esi+1e8h], 0
mov     ecx, [esi+10h]
mov     dword ptr [esi+3ch], 0b5357930h
mov     eax, [ecx+1ch]
jz      short loc_1006fd11
test    eax, eax
jz      short loc_1006fcfd
cmp     eax, [esi+0fch]
jb      short loc_1006fcfd
cmp     eax, [esi+100h]
jnb     short loc_1006fcfd
movzx   eax, word ptr [esi+0e0h]
mov     ecx, [esi+1e8h]
add     [ecx], eax
jmp     short loc_1006fd44
push    eax
call    dword_10080258
mov     ecx, [esi+1e8h]
add     esp, 4
add     [ecx], eax
jmp     short loc_1006fd44
test    eax, eax
jz      short loc_1006fd3b
cmp     eax, [esi+0fch]
jb      short loc_1006fd3b
cmp     eax, [esi+100h]
jnb     short loc_1006fd3b
mov     edx, [esi+0f8h]
mov     [eax], edx
dec     dword ptr [esi+0e4h]
mov     [esi+0f8h], eax
jmp     short loc_1006fd44
push    eax
call    sub_10009770
add     esp, 4
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_1006fd55
push    eax
call    dword_10080284
add     esp, 4
mov     eax, [esi+0ch]
mov     dword ptr [esi+3ch], 9f3c2d33h
test    eax, eax
jz      short loc_1006fd6d
push    eax
call    dword_10080278
add     esp, 4
cmp     byte ptr [esi+0e3h], 0
jz      short loc_1006fd85
mov     eax, [esi+0fch]
push    eax
call    sub_10009770
add     esp, 4
push    esi
call    sub_10009770
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1006fda6
push    esi
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, eax
mov     eax, dword_100816bc
xor     esi, esi
mov     [ebp+var_4], esi
cmp     eax, esi
jz      short loc_1006fdcb
call    eax
xor     ebx, ebx
cmp     [edi+14h], esi
jle     short loc_1006fe09
mov     eax, [edi+10h]
mov     eax, [eax+esi+4]
test    eax, eax
jz      short loc_1006fdfe
cmp     byte ptr [eax+8], 2
jnz     short loc_1006fdea
mov     [ebp+var_4], 1
push    eax
mov     eax, [ebp+arg_0]
call    sub_1001ced0
mov     ecx, [edi+10h]
add     esp, 4
mov     byte ptr [ecx+esi+8], 0
inc     ebx
add     esi, 10h
cmp     ebx, [edi+14h]
jl      short loc_1006fdd2
xor     esi, esi
push    44h
call    sub_100639d0
mov     eax, dword_100816c0
add     esp, 4
cmp     eax, esi
jz      short loc_1006fe1e
call    eax
test    dword ptr [edi+18h], 200h
jz      short loc_1006fe42
mov     eax, [edi+4]
cmp     eax, esi
jz      short loc_1006fe3b
mov     edi, edi
mov     byte ptr [eax+5fh], 1
mov     eax, [eax+3ch]
cmp     eax, esi
jnz     short loc_1006fe30
mov     eax, edi
call    sub_1003fad0
mov     eax, [edi+0ach]
mov     [edi+1e0h], esi
mov     [edi+1e4h], esi
cmp     eax, esi
jz      short loc_1006fe6f
cmp     [ebp+var_4], esi
jnz     short loc_1006fe63
cmp     byte ptr [edi+30h], 0
jnz     short loc_1006fe6f
mov     edx, [edi+0a8h]
push    edx
call    eax
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
and     ecx, 0ffh
cmp     ecx, 1ah
ja      short locret_1006fe98
mov     ecx, ds:off_100794a0[ecx*4]
test    ecx, ecx
jz      short locret_1006fe98
mov     eax, ecx
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
mov     edx, [esi+1d4h]
cmp     ecx, 0ch
jge     short loc_1006fec5
movzx   eax, ds:byte_1007816c[ecx]
movzx   ecx, ds:byte_100784cc[ecx]
jmp     short loc_1006fed3
imul    ecx, 64h
mov     eax, 64h
sub     ecx, 368h
push    edi
lea     edi, [ecx+eax]
cmp     edi, edx
pop     edi
jle     short loc_1006fee9
sub     edx, ecx
mov     eax, edx
test    eax, eax
jg      short loc_1006fee9
xor     eax, eax
pop     esi
pop     ebp
retn
mov     ecx, [esi]
imul    eax, 3e8h
push    eax
mov     eax, [ecx+3ch]
push    ecx
call    eax
add     esp, 8
mov     eax, 1
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_1006ff28
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [esi+1a4h], eax
mov     [esi+1a8h], ecx
mov     dword ptr [esi+1ach], 0
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1006ff55
push    esi
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_1006ff78
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
test    eax, eax
jle     short loc_1006ff99
mov     ecx, [ebp+arg_8]
mov     edx, [ebp+arg_c]
mov     [esi+10ch], ecx
mov     [esi+114h], eax
mov     [esi+110h], edx
jmp     short loc_1006ffb7
mov     dword ptr [esi+10ch], 0
mov     dword ptr [esi+114h], 0
mov     dword ptr [esi+110h], 0
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_1006ffc8
push    esi
call    dword_10080284
add     esp, 4
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
push    edi
xor     edi, edi
cmp     eax, edi
jle     short loc_1007001a
mov     [esi+1d4h], eax
mov     eax, [esi+0ch]
cmp     eax, edi
jz      short loc_10070008
push    eax
call    dword_1008027c
add     esp, 4
mov     dword ptr [esi+1a4h], offset sub_1006fea0
mov     [esi+1a8h], esi
jmp     short loc_10070037
mov     eax, [esi+0ch]
cmp     eax, edi
jz      short loc_1007002b
push    eax
call    dword_1008027c
add     esp, 4
mov     [esi+1a4h], edi
mov     [esi+1a8h], edi
mov     [esi+1ach], edi
mov     esi, [esi+0ch]
cmp     esi, edi
jz      short loc_1007004e
push    esi
call    dword_10080284
add     esp, 4
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+0d8h], 1
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
test    edi, edi
jz      short loc_100700e6
mov     edx, [ebp+arg_14]
test    edx, edx
jz      short loc_100700da
cmp     [ebp+arg_1c], 0
jnz     short loc_100700e6
cmp     [ebp+arg_18], 0
jnz     short loc_100700e6
mov     esi, [ebp+arg_8]
lea     eax, [esi+1]
cmp     eax, 80h
ja      short loc_100700e6
mov     ecx, edi
call    sub_1000ba20
mov     [esp+10h+var_4], eax
cmp     eax, 0ffh
jg      short loc_100700e6
mov     ecx, [ebp+arg_c]
mov     ebx, [ebp+arg_0]
cmp     ecx, 4
jnz     short loc_1007010b
mov     [ebp+arg_c], 2
jmp     loc_10070162
cmp     [ebp+arg_1c], 0
jz      short loc_1007009e
cmp     [ebp+arg_18], 0
jnz     short loc_100700a4
push    offset ac0d89d4a975292
push    1b8a3h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     eax, 15h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     ecx, 5
jnz     short loc_10070162
mov     ecx, [ebp+arg_20]
mov     eax, [ebp+arg_1c]
push    ecx
mov     ecx, [ebp+arg_18]
push    eax
push    ecx
push    edx
mov     edx, [ebp+arg_10]
push    edx
push    1
push    esi
push    edi
push    ebx
call    sub_10070080
add     esp, 24h
test    eax, eax
jnz     short loc_10070104
mov     eax, [ebp+arg_20]
mov     ecx, [ebp+arg_1c]
mov     edx, [ebp+arg_18]
push    eax
mov     eax, [ebp+arg_14]
push    ecx
mov     ecx, [ebp+arg_10]
push    edx
push    eax
push    ecx
push    2
push    esi
push    edi
push    ebx
call    sub_10070080
add     esp, 24h
test    eax, eax
jnz     short loc_10070104
mov     eax, [esp+10h+var_4]
mov     [ebp+arg_c], 3
mov     edx, [ebp+arg_c]
push    0
push    edx
push    esi
push    edi
push    ebx
mov     edi, eax
call    sub_100447c0
add     esp, 14h
test    eax, eax
jz      short loc_100701b1
movzx   ecx, byte ptr [eax+2]
cmp     ecx, [ebp+arg_c]
jnz     short loc_100701b1
movsx   edx, word ptr [eax]
cmp     edx, esi
jnz     short loc_100701b1
cmp     dword ptr [ebx+7ch], 0
mov     eax, ebx
jz      short loc_100701ac
push    offset aunabletodelete
push    5
call    sub_1000ba40
add     esp, 8
mov     eax, 5
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    sub_10028ef0
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_4]
mov     edi, [esp+10h+var_4]
push    1
push    eax
push    esi
push    ecx
push    ebx
call    sub_100447c0
mov     esi, eax
add     esp, 14h
test    esi, esi
jnz     short loc_100701d9
lea     eax, [esi+7]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     eax, esi
call    sub_1006f660
mov     eax, [ebp+arg_20]
add     esp, 4
test    eax, eax
jz      short loc_100701ed
inc     dword ptr [eax]
mov     edx, [ebp+arg_14]
mov     ecx, [ebp+arg_1c]
mov     [esi+20h], eax
mov     eax, [ebp+arg_18]
mov     [esi+10h], eax
mov     ax, word ptr [ebp+arg_8]
mov     [esi+0ch], edx
mov     edx, [ebp+arg_10]
pop     edi
mov     [esi], ax
mov     byte ptr [esi+3], 0
mov     [esi+14h], ecx
mov     [esi+4], edx
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_1c]
mov     ecx, [ebp+arg_18]
mov     edx, [ebp+arg_14]
push    0
push    eax
mov     eax, [ebp+arg_10]
push    ecx
mov     ecx, [ebp+arg_c]
push    edx
mov     edx, [ebp+arg_8]
push    eax
mov     eax, [ebp+arg_4]
push    ecx
mov     ecx, [ebp+arg_0]
push    edx
push    eax
push    ecx
call    sub_10070250
add     esp, 24h
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
xor     edi, edi
mov     [ebp+var_4], 1
test    eax, eax
jz      short loc_10070273
push    eax
call    dword_1008027c
add     esp, 4
push    ebx
mov     ebx, [ebp+arg_10]
cmp     [ebp+arg_20], edi
jz      short loc_100702ae
mov     ecx, 0ch
call    sub_10009a40
test    eax, eax
jz      short loc_10070294
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     edi, eax
test    eax, eax
jnz     short loc_100702a5
mov     eax, ebx
push    eax
call    [ebp+arg_20]
add     esp, 4
jmp     short loc_100702ed
mov     ecx, [ebp+arg_20]
mov     [eax+4], ecx
mov     [eax+8], ebx
mov     edx, [ebp+arg_1c]
mov     eax, [ebp+arg_18]
mov     ecx, [ebp+arg_14]
push    edi
push    edx
mov     edx, [ebp+arg_c]
push    eax
mov     eax, [ebp+arg_8]
push    ecx
mov     ecx, [ebp+arg_4]
push    ebx
push    edx
push    eax
push    ecx
push    esi
call    sub_10070080
add     esp, 24h
mov     [ebp+var_4], eax
test    edi, edi
jz      short loc_100702ed
cmp     dword ptr [edi], 0
jnz     short loc_100702ed
push    ebx
call    [ebp+arg_20]
add     esp, 4
mov     eax, edi
mov     ecx, esi
call    sub_10009810
cmp     byte ptr [esi+32h], 0
mov     eax, [ebp+var_4]
pop     ebx
jnz     short loc_100702fe
cmp     eax, 0c0ah
jnz     short loc_10070315
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
test    esi, esi
jz      short loc_1007032b
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_10070359
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
push    ebx
push    eax
or      ecx, 0ffffffffh
call    sub_1000b910
mov     ecx, [ebp+arg_1c]
mov     edx, [ebp+arg_18]
push    0
push    ecx
mov     ecx, [ebp+arg_10]
push    edx
mov     edx, [ebp+arg_c]
mov     edi, eax
mov     eax, [ebp+arg_14]
push    eax
mov     eax, [ebp+arg_8]
push    ecx
push    edx
push    eax
push    edi
push    esi
call    sub_10070080
mov     ebx, eax
add     esp, 28h
mov     eax, edi
mov     ecx, esi
call    sub_10009810
cmp     byte ptr [esi+32h], 0
mov     eax, ebx
jnz     short loc_100703a7
cmp     ebx, 0c0ah
jnz     short loc_100703be
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
pop     ebx
test    esi, esi
jz      short loc_100703d5
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
mov     eax, ebx
test    ebx, ebx
jnz     short loc_100703f3
xor     edi, edi
jmp     short loc_10070407
cmp     byte ptr [ebx], 0
jz      short loc_100703fe
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100703f8
sub     eax, ebx
and     eax, 3fffffffh
mov     edi, eax
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
mov     [ebp+arg_4], 0
test    eax, eax
jz      short loc_10070422
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_8]
push    0
push    1
push    eax
push    ebx
push    esi
call    sub_100447c0
add     esp, 14h
test    eax, eax
jnz     short loc_10070453
mov     ecx, [ebp+arg_8]
push    eax
push    eax
push    eax
push    offset sub_10029e80
push    eax
push    1
push    ecx
push    ebx
push    esi
call    sub_10070080
add     esp, 24h
jmp     short loc_10070456
mov     eax, [ebp+arg_4]
cmp     byte ptr [esi+32h], 0
jnz     short loc_10070463
cmp     eax, 0c0ah
jnz     short loc_1007047a
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
test    esi, esi
jz      short loc_10070490
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_100704b9
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [esi+94h]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [esi+90h], eax
mov     [esi+94h], ecx
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_100704e2
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_10070509
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [esi+9ch]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [esi+98h], eax
mov     [esi+9ch], ecx
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10070532
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_10070559
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [esi+0a0h]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [esi+0a4h], eax
mov     [esi+0a0h], ecx
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10070582
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_100705a9
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [esi+0b0h]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [esi+0b4h], eax
mov     [esi+0b0h], ecx
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_100705d2
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_100705f9
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [esi+0a8h]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [esi+0ach], eax
mov     [esi+0a8h], ecx
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10070622
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_c]
cmp     eax, [ebp+arg_0]
jl      short loc_1007065c
mov     eax, dword_100816bc
test    eax, eax
jz      short loc_10070646
call    eax
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
call    sub_10070720
mov     eax, dword_100816c0
test    eax, eax
jz      short loc_1007065c
call    eax
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
mov     edi, [ebp+arg_4]
test    edi, edi
jle     short loc_10070692
test    eax, eax
jz      short loc_10070680
push    eax
call    dword_1008027c
add     esp, 4
mov     dword ptr [esi+0b8h], offset sub_10070630
mov     [esi+0bch], edi
jmp     short loc_100706b4
test    eax, eax
jz      short loc_100706a0
push    eax
call    dword_1008027c
add     esp, 4
mov     dword ptr [esi+0b8h], 0
mov     dword ptr [esi+0bch], 0
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_100706c5
push    esi
call    dword_10080284
add     esp, 4
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_100706e9
push    eax
call    dword_1008027c
add     esp, 4
mov     edi, [esi+0bch]
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [esi+0b8h], eax
mov     [esi+0bch], ecx
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10070712
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebx
push    esi
mov     esi, ecx
mov     ebx, eax
mov     eax, [esi+0ch]
push    edi
mov     edi, 0ah
test    eax, eax
jz      short loc_1007073d
push    eax
call    dword_1008027c
add     esp, 4
test    ebx, ebx
jz      short loc_1007076b
cmp     byte ptr [ebx], 0
jz      short loc_1007076b
mov     ecx, esi
call    sub_1003ff40
mov     edi, eax
test    edi, edi
jns     short loc_1007076b
push    ebx
mov     edi, 1
push    offset aunknowndatabas_1
push    edi
mov     eax, esi
call    sub_1000ba40
add     esp, 0ch
jmp     short loc_10070787
push    0
push    0
push    edi
push    esi
xor     eax, eax
call    sub_100707e0
mov     edi, eax
push    0
push    edi
mov     eax, esi
call    sub_1000ba40
add     esp, 18h
cmp     byte ptr [esi+32h], 0
mov     eax, edi
jnz     short loc_10070797
cmp     edi, 0c0ah
jnz     short loc_100707ae
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
test    esi, esi
jz      short loc_100707c4
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
pop     ebp
jmp     sub_10070720
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, eax
xor     eax, eax
xor     edx, edx
push    edi
mov     [esp+18h+var_4], eax
mov     [esp+18h+var_8], edx
cmp     [esi+14h], eax
jle     loc_100708eb
mov     [esp+18h+var_c], eax
test    eax, eax
jnz     loc_100708eb
mov     ecx, [ebp+arg_4]
cmp     edx, ecx
jz      short loc_10070822
cmp     ecx, 0ah
jnz     loc_100708c2
mov     eax, [esi+10h]
mov     ecx, [esp+18h+var_c]
mov     edi, [eax+ecx+4]
xor     esi, esi
test    edi, edi
jz      short loc_100708ac
mov     esi, [edi+4]
call    sub_10019320
cmp     byte ptr [esi+13h], 0
jz      short loc_10070848
mov     esi, 6
jmp     short loc_10070889
mov     ecx, [esi]
mov     eax, [ecx+0b8h]
xor     esi, esi
test    eax, eax
jz      short loc_10070889
mov     edx, [ebp+arg_c]
mov     esi, [ecx+9ch]
push    edx
mov     edx, [ecx+0b0h]
push    ebx
push    edx
mov     edx, [ecx+80h]
push    edx
movzx   edx, byte ptr [ecx+9]
push    edx
mov     edx, [ecx+98h]
push    edx
mov     edx, [ebp+arg_8]
push    edx
call    sub_100191a0
add     esp, 1ch
mov     esi, eax
cmp     byte ptr [edi+9], 0
jz      short loc_100708ac
dec     dword ptr [edi+0ch]
jnz     short loc_100708ac
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_100708a8
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
xor     ebx, ebx
mov     eax, esi
mov     [ebp+arg_c], ebx
cmp     esi, 5
jnz     short loc_100708c2
mov     [esp+18h+var_4], 1
xor     eax, eax
mov     edx, [esp+18h+var_8]
mov     esi, [ebp+arg_0]
add     [esp+18h+var_c], 10h
inc     edx
mov     [esp+18h+var_8], edx
cmp     edx, [esi+14h]
jl      loc_1007080a
test    eax, eax
jnz     short loc_100708eb
cmp     [esp+18h+var_4], eax
jz      short loc_100708eb
mov     eax, 5
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
test    esi, esi
jnz     short loc_10070927
mov     ecx, ds:off_100794bc
mov     eax, offset aunknownerror
test    ecx, ecx
jz      loc_10070a02
mov     eax, ecx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [esi+3ch]
cmp     eax, 4b771290h
jz      short loc_10070986
cmp     eax, 0a029a697h
jz      short loc_10070986
cmp     eax, 0f03b7906h
jz      short loc_10070986
push    offset ainvalid
push    offset aapicallwithsda
push    15h
call    sub_1000b150
add     esp, 0ch
push    offset ac0d89d4a975292
push    1ba88h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
mov     ecx, ds:off_100794f4
add     esp, 10h
mov     eax, offset aunknownerror
test    ecx, ecx
jz      loc_10070a02
mov     eax, ecx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10070997
push    eax
call    dword_1008027c
add     esp, 4
cmp     byte ptr [esi+32h], 0
jz      short loc_100709af
mov     eax, ds:off_100794bc
mov     edi, offset aunknownerror
test    eax, eax
jz      short loc_100709ef
mov     edi, eax
jmp     short loc_100709ef
mov     edi, [esi+0cch]
mov     bl, 1
call    sub_100253e0
mov     edi, eax
test    edi, edi
jnz     short loc_100709ef
mov     eax, [esi+28h]
mov     edi, offset aunknownerror
cmp     eax, 204h
jz      short loc_100709ea
and     eax, 0ffh
cmp     eax, 1ah
ja      short loc_100709ef
mov     eax, ds:off_100794a0[eax*4]
test    eax, eax
jz      short loc_100709ef
mov     edi, eax
jmp     short loc_100709ef
mov     edi, offset aabortduetoroll
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10070a00
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jnz     short loc_10070a26
mov     eax, offset aoutofmemory_0
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+3ch]
cmp     eax, 4b771290h
jz      short loc_10070a5c
cmp     eax, 0a029a697h
jz      short loc_10070a5c
cmp     eax, 0f03b7906h
jz      short loc_10070a5c
push    offset ainvalid
push    offset aapicallwithsda
push    15h
call    sub_1000b150
add     esp, 0ch
mov     eax, offset alibraryroutine
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10070a6d
push    eax
call    dword_1008027c
add     esp, 4
cmp     byte ptr [esi+32h], 0
push    edi
jz      short loc_10070a7e
mov     edi, offset aoutofmemory_0
jmp     loc_10070b98
mov     edi, [esi+0cch]
push    ebx
mov     bl, 2
call    sub_100253e0
mov     edi, eax
test    edi, edi
jnz     loc_10070b93
mov     eax, [esi+28h]
mov     esi, offset aunknownerror
cmp     eax, 204h
jz      short loc_10070abe
and     eax, 0ffh
cmp     eax, 1ah
ja      short loc_10070ac3
mov     eax, ds:off_100794a0[eax*4]
test    eax, eax
jz      short loc_10070ac3
mov     esi, eax
jmp     short loc_10070ac3
mov     esi, offset aabortduetoroll
mov     eax, [ebp+arg_0]
mov     edi, [eax+0cch]
test    edi, edi
jz      loc_10070b7e
test    esi, esi
jnz     short loc_10070b16
test    byte ptr [edi+1ch], 40h
jz      short loc_10070af2
mov     eax, [edi+10h]
mov     ecx, [eax]
mov     edx, [ecx+0a8h]
mov     [eax+4], edx
mov     [ecx+0a8h], eax
test    byte ptr [edi+1ch], 20h
jz      short loc_10070b00
mov     ebx, [edi+10h]
call    sub_100117b0
mov     ax, [edi+1ch]
mov     ecx, 0bf01h
and     ax, cx
or      ax, 1
mov     byte ptr [edi+1eh], 5
jmp     short loc_10070b7a
mov     eax, [edi]
test    eax, eax
jz      short loc_10070b21
mov     eax, [eax+48h]
jmp     short loc_10070b26
mov     eax, 3b9aca00h
xor     ebx, ebx
test    eax, eax
js      short loc_10070b3b
lea     esp, [esp+0]
cmp     byte ptr [ebx+esi], 0
jz      short loc_10070b3b
inc     ebx
cmp     ebx, eax
jle     short loc_10070b30
xor     edx, edx
mov     [ebp+var_4], 202h
push    edi
cmp     edx, offset sub_10009760
jnz     short loc_10070b5a
call    sub_100247d0
mov     eax, [ebp+var_4]
mov     [edi+24h], esi
jmp     short loc_10070b64
call    sub_100247d0
mov     eax, 0a02h
mov     dword ptr [edi+20h], 0
mov     [edi+4], esi
add     esp, 4
mov     [edi+18h], ebx
mov     word ptr [edi+1eh], 103h
mov     [edi+1ch], ax
mov     eax, [ebp+arg_0]
mov     edi, [eax+0cch]
mov     bl, 2
call    sub_100253e0
mov     esi, [ebp+arg_0]
mov     edi, eax
mov     byte ptr [esi+32h], 0
pop     ebx
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10070ba9
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
test    ecx, ecx
jz      short loc_10070c27
mov     eax, [ecx+3ch]
cmp     eax, 4b771290h
jz      short loc_10070c18
cmp     eax, 0a029a697h
jz      short loc_10070c18
cmp     eax, 0f03b7906h
jz      short loc_10070c18
push    offset ainvalid
push    offset aapicallwithsda
push    15h
call    sub_1000b150
add     esp, 0ch
push    offset ac0d89d4a975292
push    1bacdh
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
mov     eax, 15h
pop     ecx
pop     ebp
retn
cmp     byte ptr [ecx+32h], 0
jnz     short loc_10070c27
mov     eax, [ecx+2ch]
and     eax, [ecx+28h]
pop     ecx
pop     ebp
retn
mov     eax, 7
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
test    ecx, ecx
jz      short loc_10070c8e
mov     eax, [ecx+3ch]
cmp     eax, 4b771290h
jz      short loc_10070c83
cmp     eax, 0a029a697h
jz      short loc_10070c83
cmp     eax, 0f03b7906h
jz      short loc_10070c83
push    offset ainvalid
push    offset aapicallwithsda
push    15h
call    sub_1000b150
push    offset ac0d89d4a975292
push    1bad6h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 1ch
mov     eax, 15h
pop     ebp
retn
cmp     byte ptr [ecx+32h], 0
jnz     short loc_10070c8e
mov     eax, [ecx+28h]
pop     ebp
retn
mov     eax, 7
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     eax, edi
test    edi, edi
jnz     short loc_10070cb3
mov     [ebp+var_8], edi
jmp     short loc_10070cc8
cmp     byte ptr [edi], 0
jz      short loc_10070cbe
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10070cb8
sub     eax, edi
and     eax, 3fffffffh
mov     [ebp+var_8], eax
movzx   edx, [ebp+arg_4]
mov     [ebp+var_4], edx
cmp     edx, 4
jz      short loc_10070cd9
cmp     edx, 8
jnz     short loc_10070ce5
mov     [ebp+var_4], 2
mov     edx, [ebp+var_4]
jmp     short loc_10070cf7
cmp     edx, 1
jl      loc_10070e49
cmp     edx, 3
jg      loc_10070e49
test    edi, edi
jz      short loc_10070d29
cmp     byte ptr [edi], 0
mov     eax, edi
jz      short loc_10070d08
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10070d02
mov     ebx, [ebp+arg_0]
sub     eax, edi
and     eax, 3fffffffh
lea     ecx, [ebx+194h]
push    edi
push    ecx
mov     esi, eax
call    sub_1000cf50
mov     edx, [ebp+var_4]
add     esp, 8
jmp     short loc_10070d32
mov     eax, [ebp+arg_0]
mov     eax, [eax+8]
mov     ebx, [ebp+arg_0]
test    eax, eax
jz      loc_10070ddc
movzx   ecx, dl
lea     ecx, [ecx+ecx*4]
lea     esi, [eax+ecx*4-14h]
mov     [ebp+var_c], esi
test    esi, esi
jz      loc_10070ddc
cmp     dword ptr [esi+0ch], 0
jz      loc_10070ddc
cmp     dword ptr [ebx+7ch], 0
mov     eax, ebx
jz      short loc_10070d7b
push    offset aunabletodelete_0
push    5
call    sub_1000ba40
add     esp, 8
mov     eax, 5
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    sub_10028ef0
movzx   eax, byte ptr [esi+4]
and     eax, 0fffffff7h
cmp     eax, edx
jnz     short loc_10070ddc
mov     esi, [ebp+var_8]
lea     ecx, [ebx+194h]
push    edi
push    ecx
call    sub_1000cf50
add     esp, 8
lea     esi, [eax+10h]
mov     [ebp+var_8], 3
jmp     short loc_10070db0
mov     dl, [esi-0ch]
mov     eax, [ebp+var_c]
cmp     dl, [eax+4]
jnz     short loc_10070dd1
mov     eax, [esi]
test    eax, eax
jz      short loc_10070dca
mov     ecx, [esi-8]
push    ecx
call    eax
add     esp, 4
mov     dword ptr [esi-4], 0
add     esi, 14h
dec     [ebp+var_8]
jnz     short loc_10070db0
mov     edx, [ebp+var_4]
test    edi, edi
jz      short loc_10070df5
push    1
push    ebx
mov     ebx, edi
call    sub_100445f0
mov     ebx, [ebp+arg_0]
mov     edx, [ebp+var_4]
add     esp, 8
jmp     short loc_10070df8
mov     eax, [ebx+8]
test    eax, eax
jz      short loc_10070e0a
movzx   ecx, dl
lea     edx, [ecx+ecx*4]
lea     eax, [eax+edx*4-14h]
test    eax, eax
jnz     short loc_10070e15
mov     eax, 7
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
mov     [eax+0ch], ecx
mov     ecx, [ebp+arg_10]
mov     [eax+10h], ecx
mov     cl, [ebp+arg_4]
and     cl, 8
or      cl, byte ptr [ebp+var_4]
mov     [eax+8], edx
mov     [eax+4], cl
push    0
push    0
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
xor     eax, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset ac0d89d4a975292
push    1bafbh
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
pop     esi
mov     eax, 15h
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
cmp     edx, 0ah
ja      short loc_10070ea0
mov     ecx, [ebp+arg_8]
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [edi+edx*4+48h]
test    ecx, ecx
js      short loc_10070e9d
push    esi
mov     esi, ds:dword_10078c8c[edx*4]
cmp     ecx, esi
jle     short loc_10070e98
mov     ecx, esi
mov     [edi+edx*4+48h], ecx
pop     esi
pop     edi
pop     ebp
retn
or      eax, 0ffffffffh
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 2ch
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx]
push    ebx
push    esi
push    edi
mov     edi, eax
xor     eax, eax
mov     [esp+38h+var_4], eax
mov     [esp+38h+var_28], ecx
mov     [esp+38h+var_10], edx
mov     esi, edi
cmp     edi, eax
jnz     short loc_10070edb
xor     esi, esi
jmp     short loc_10070eed
cmp     [edi], al
jz      short loc_10070ee5
nop
inc     esi
cmp     [esi], al
jnz     short loc_10070ee0
sub     esi, edi
and     esi, 3fffffffh
test    cl, 40h
jnz     short loc_10070efe
cmp     dword_1008023c, eax
jz      loc_100713ce
cmp     esi, 5
jl      loc_100713ce
cmp     dword ptr [edi], 656c6966h
jnz     loc_100713ce
cmp     byte ptr [edi+4], 3ah
jnz     loc_100713ce
or      [esp+38h+var_28], 40h
xor     edx, edx
xor     ebx, ebx
lea     ecx, [esi+2]
mov     [esp+38h+var_14], edx
mov     [esp+38h+var_20], eax
mov     [esp+38h+var_1c], ecx
cmp     esi, 2
jl      short loc_10070f65
lea     ebx, [ebx+0]
xor     ecx, ecx
cmp     byte ptr [edi+eax], 26h
setz    cl
add     ebx, ecx
xor     ecx, ecx
cmp     byte ptr [edi+eax+1], 26h
setz    cl
add     eax, 2
add     edx, ecx
lea     ecx, [esi-1]
cmp     eax, ecx
jl      short loc_10070f40
mov     [esp+38h+var_14], edx
cmp     eax, esi
jge     short loc_10070f76
xor     edx, edx
cmp     byte ptr [eax+edi], 26h
setz    dl
add     [esp+38h+var_1c], edx
call    sub_1006edd0
test    eax, eax
jnz     short loc_10070f9a
mov     eax, [esp+38h+var_14]
add     eax, ebx
add     eax, [esp+38h+var_1c]
push    eax
call    sub_100094a0
add     esp, 4
mov     [esp+38h+var_24], eax
test    eax, eax
jnz     short loc_10070fa6
mov     eax, 7
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dl, 2fh
cmp     [edi+5], dl
jnz     short loc_1007101e
cmp     [edi+6], dl
jnz     short loc_1007101e
mov     al, [edi+7]
lea     ecx, [edi+7]
mov     esi, 7
mov     [esp+38h+var_8], ecx
test    al, al
jz      short loc_10071023
cmp     al, dl
jz      short loc_10070fd2
mov     al, [esi+edi+1]
inc     esi
test    al, al
jnz     short loc_10070fc5
cmp     esi, 7
jz      short loc_10071023
cmp     esi, 10h
jnz     short loc_10071002
lea     eax, [esi-7]
mov     edx, offset alocalhost
mov     ebx, [edx]
cmp     ebx, [ecx]
jnz     short loc_10070ffe
sub     eax, 4
add     ecx, 4
add     edx, 4
cmp     eax, 4
jnb     short loc_10070fe4
mov     cl, [ecx]
cmp     cl, [edx]
jz      short loc_10071023
mov     ecx, [esp+38h+var_8]
push    ecx
add     esi, 0fffffff9h
push    esi
push    offset ainvaliduriauth
call    sub_1000b020
mov     edx, [ebp+arg_c]
add     esp, 0ch
mov     [edx], eax
jmp     loc_10071438
mov     esi, 5
mov     al, [esi+edi]
xor     edx, edx
mov     [esp+38h+var_1c], edx
test    al, al
jz      loc_10071199
cmp     al, 23h
jz      loc_10071185
inc     esi
cmp     al, 25h
jnz     loc_100710fa
mov     cl, [esi+edi]
movzx   ebx, cl
test    ds:byte_10076130[ebx], 8
jz      loc_100710fa
movzx   ebx, byte ptr [esi+edi+1]
test    ds:byte_10076130[ebx], 8
jz      loc_100710fa
movsx   eax, cl
movsx   ecx, byte ptr [esi+edi+1]
mov     edx, eax
sar     edx, 6
and     dl, 1
mov     bl, dl
add     bl, bl
add     bl, bl
add     bl, bl
sub     bl, dl
sub     al, bl
mov     edx, ecx
sar     edx, 6
and     dl, 1
mov     bl, dl
add     bl, bl
add     bl, bl
add     bl, bl
sub     bl, dl
mov     edx, [esp+38h+var_1c]
sub     cl, bl
and     eax, 0fh
shl     eax, 4
add     esi, 2
and     ecx, 0fh
add     eax, ecx
jnz     loc_1007116a
mov     al, [esi+edi]
test    al, al
jz      loc_1007117a
lea     ecx, [ecx+0]
cmp     al, 23h
jz      loc_1007117a
test    edx, edx
jnz     short loc_100710d0
cmp     al, 3fh
jmp     short loc_100710e6
cmp     edx, 1
jnz     short loc_100710df
cmp     al, 3dh
jz      loc_1007117a
jmp     short loc_100710e4
cmp     edx, 2
jnz     short loc_100710ec
cmp     al, 26h
jz      loc_1007117a
mov     al, [esi+edi+1]
inc     esi
test    al, al
jnz     short loc_100710c0
jmp     loc_1007117a
cmp     edx, 1
jnz     short loc_1007114c
cmp     al, 26h
jz      short loc_10071107
cmp     al, 3dh
jnz     short loc_1007116a
mov     ecx, [esp+38h+var_20]
mov     ebx, [esp+38h+var_24]
cmp     byte ptr [ebx+ecx-1], 0
jnz     short loc_10071136
mov     al, [esi+edi]
test    al, al
jz      short loc_1007117a
lea     ecx, [ecx+0]
cmp     al, 23h
jz      short loc_1007117a
cmp     byte ptr [esi+edi-1], 26h
jz      short loc_1007117a
mov     al, [esi+edi+1]
inc     esi
test    al, al
jnz     short loc_10071120
jmp     short loc_1007117a
cmp     al, 26h
jnz     short loc_10071145
mov     byte ptr [ebx+ecx], 0
inc     ecx
mov     [esp+38h+var_20], ecx
jmp     short loc_10071168
mov     edx, 2
jmp     short loc_10071164
test    edx, edx
jnz     short loc_10071156
cmp     al, 3fh
jz      short loc_1007115f
jmp     short loc_1007116a
cmp     edx, 2
jnz     short loc_1007116a
cmp     al, 26h
jnz     short loc_1007116a
mov     edx, 1
mov     [esp+38h+var_1c], edx
xor     al, al
mov     ecx, [esp+38h+var_20]
mov     ebx, [esp+38h+var_24]
mov     [ebx+ecx], al
inc     ecx
mov     [esp+38h+var_20], ecx
mov     al, [esi+edi]
test    al, al
jnz     loc_10071034
cmp     edx, 1
jnz     short loc_10071199
mov     eax, [esp+38h+var_20]
mov     ecx, [esp+38h+var_24]
mov     byte ptr [ecx+eax], 0
inc     eax
jmp     short loc_1007119d
mov     eax, [esp+38h+var_20]
mov     ecx, [esp+38h+var_24]
mov     word ptr [ecx+eax], 0
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_100711b6
mov     edi, edi
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100711b0
sub     eax, ecx
and     eax, 3fffffffh
cmp     byte ptr [eax+ecx+1], 0
lea     edx, [eax+ecx+1]
jz      loc_1007140b
lea     esp, [esp+0]
mov     eax, edx
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100711d2
sub     eax, edx
and     eax, 3fffffffh
lea     ebx, [eax+edx+1]
xor     esi, esi
mov     [esp+38h+var_1c], ebx
mov     ecx, ebx
cmp     ebx, esi
jnz     short loc_100711f5
mov     [esp+38h+var_20], esi
jmp     short loc_10071212
cmp     byte ptr [ebx], 0
jz      short loc_10071206
lea     ebx, [ebx+0]
inc     ecx
cmp     byte ptr [ecx], 0
jnz     short loc_10071200
sub     ecx, ebx
and     ecx, 3fffffffh
mov     [esp+38h+var_20], ecx
cmp     eax, 3
jnz     short loc_1007123d
cmp     byte ptr [edx], 76h
jnz     loc_1007139a
cmp     byte ptr [edx+1], 66h
jnz     loc_1007139a
cmp     byte ptr [edx+2], 73h
jnz     loc_1007139a
mov     [esp+38h+var_10], ebx
jmp     loc_1007139a
cmp     eax, 5
jnz     short loc_10071270
cmp     dword ptr [edx], 68636163h
jnz     loc_1007139a
cmp     byte ptr [edx+4], 65h
jnz     loc_1007139a
mov     eax, 60000h
mov     [esp+38h+var_8], eax
mov     edi, offset off_10081010
mov     [esp+38h+var_14], offset acache
jmp     short loc_100712a3
cmp     eax, 4
jnz     loc_1007139a
cmp     dword ptr [edx], 65646f6dh
jnz     loc_1007139a
mov     eax, [esp+38h+var_28]
mov     [esp+38h+var_8], 87h
mov     edi, offset off_10081028
and     eax, 87h
mov     [esp+38h+var_14], offset aaccess
mov     ecx, [edi]
mov     [esp+38h+var_c], eax
mov     [esp+38h+var_18], esi
cmp     ecx, esi
jz      loc_10071354
mov     eax, ecx
test    ecx, ecx
jz      short loc_100712cd
cmp     byte ptr [ecx], 0
jz      short loc_100712c6
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100712c0
sub     eax, ecx
and     eax, 3fffffffh
cmp     [esp+38h+var_20], eax
jnz     short loc_1007133f
mov     esi, [esp+38h+var_20]
mov     edx, ebx
cmp     esi, 4
jb      short loc_100712f4
mov     edi, edi
mov     eax, [edx]
cmp     eax, [ecx]
jnz     short loc_100712f8
sub     esi, 4
add     ecx, 4
add     edx, 4
cmp     esi, 4
jnb     short loc_100712e0
test    esi, esi
jz      short loc_10071370
movzx   eax, byte ptr [edx]
movzx   ebx, byte ptr [ecx]
sub     eax, ebx
jnz     short loc_10071333
cmp     esi, 1
jbe     short loc_1007136c
movzx   eax, byte ptr [edx+1]
movzx   ebx, byte ptr [ecx+1]
sub     eax, ebx
jnz     short loc_10071333
cmp     esi, 2
jbe     short loc_1007136c
movzx   eax, byte ptr [edx+2]
movzx   ebx, byte ptr [ecx+2]
sub     eax, ebx
jnz     short loc_10071333
cmp     esi, 3
jbe     short loc_1007136c
movzx   eax, byte ptr [edx+3]
movzx   ecx, byte ptr [ecx+3]
sub     eax, ecx
mov     ebx, [esp+38h+var_1c]
sar     eax, 1fh
or      eax, 1
jz      short loc_10071370
mov     eax, [esp+38h+var_18]
mov     ecx, [edi+eax*8+8]
inc     eax
mov     [esp+38h+var_18], eax
test    ecx, ecx
jnz     loc_100712b5
mov     eax, [esp+38h+var_14]
push    ebx
push    eax
push    offset anosuchsmodes
call    sub_1000b020
add     esp, 0ch
jmp     loc_10071433
mov     ebx, [esp+38h+var_1c]
mov     edx, [esp+38h+var_18]
mov     eax, [edi+edx*8+4]
test    eax, eax
jz      short loc_10071354
mov     ecx, eax
and     ecx, 0ffffff7fh
cmp     ecx, [esp+38h+var_c]
jg      short loc_100713af
mov     ecx, [esp+38h+var_8]
not     ecx
and     ecx, [esp+38h+var_28]
or      ecx, eax
mov     [esp+38h+var_28], ecx
mov     edx, [esp+38h+var_20]
cmp     byte ptr [edx+ebx+1], 0
lea     edx, [edx+ebx+1]
jnz     loc_100711d0
jmp     short loc_1007140b
mov     edx, [esp+38h+var_14]
push    ebx
push    edx
push    offset asmodenotallowe
call    sub_1000b020
mov     ecx, [ebp+arg_c]
add     esp, 0ch
mov     [ecx], eax
mov     esi, 3
jmp     short loc_1007143d
call    sub_1006edd0
test    eax, eax
jnz     loc_10070f9a
lea     edx, [esi+2]
push    edx
call    sub_100094a0
mov     ebx, eax
add     esp, 4
mov     [esp+38h+var_24], ebx
test    ebx, ebx
jz      loc_10070f9a
push    esi
push    edi
push    ebx
call    memcpy
add     esp, 0ch
and     [esp+38h+var_28], 0ffffffbfh
mov     word ptr [ebx+esi], 0
mov     eax, [esp+38h+var_10]
push    eax
call    sub_10008af0
mov     ecx, [ebp+arg_4]
add     esp, 4
mov     [ecx], eax
test    eax, eax
jnz     short loc_10071454
mov     edx, [esp+38h+var_10]
push    edx
push    offset anosuchvfss
call    sub_1000b020
add     esp, 8
mov     ecx, [ebp+arg_c]
mov     [ecx], eax
mov     esi, 1
mov     edx, [esp+38h+var_24]
push    edx
call    sub_10009770
add     esp, 4
mov     [esp+38h+var_24], 0
jmp     short loc_10071458
mov     esi, [esp+38h+var_4]
mov     eax, [ebp+arg_0]
mov     ecx, [esp+38h+var_28]
mov     edx, [ebp+arg_8]
mov     [eax], ecx
mov     eax, [esp+38h+var_24]
pop     edi
mov     [edx], eax
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_4]
push    ebx
push    esi
push    edi
xor     edi, edi
mov     [ebp+var_4], edi
mov     [ebp+var_8], edi
mov     [eax], edi
call    sub_1006edd0
cmp     eax, edi
jnz     loc_10071894
mov     eax, [ebp+arg_8]
mov     ecx, eax
and     ecx, 7
mov     edx, 1
shl     edx, cl
test    dl, 46h
jnz     short loc_100714da
push    offset ac0d89d4a975292
push    1bca0h
push    offset amisuseatlinedo
push    15h
call    sub_1000b150
add     esp, 10h
lea     eax, [edi+15h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dword_10080234, edi
jnz     short loc_100714e6
xor     esi, esi
jmp     short loc_10071503
test    eax, 8000h
jz      short loc_100714f1
xor     esi, esi
jmp     short loc_10071503
mov     esi, 1
test    eax, 10000h
jnz     short loc_10071503
mov     esi, dword_10080238
test    eax, 40000h
jz      short loc_10071511
and     eax, 0fffdffffh
jmp     short loc_1007151e
cmp     dword_100802f0, edi
jz      short loc_1007151e
or      eax, 20000h
and     eax, 0fff600e7h
push    1ech
mov     [ebp+arg_8], eax
call    sub_100094a0
mov     ebx, eax
add     esp, 4
cmp     ebx, edi
jz      loc_10071830
push    1ech
push    edi
push    ebx
call    memset
add     esp, 0ch
cmp     ebx, edi
jz      loc_10071830
cmp     esi, edi
jz      short loc_10071586
cmp     dword_10080234, edi
jnz     short loc_10071564
xor     eax, eax
jmp     short loc_1007156f
push    1
call    dword_10080274
add     esp, 4
mov     [ebx+0ch], eax
cmp     eax, edi
jnz     short loc_10071586
push    ebx
call    sub_10009770
add     esp, 4
xor     ebx, ebx
jmp     loc_10071830
mov     eax, [ebx+0ch]
cmp     eax, edi
jz      short loc_10071597
push    eax
call    dword_1008027c
add     esp, 4
lea     eax, [ebx+1b0h]
mov     [ebx+10h], eax
xor     eax, eax
mov     dword ptr [ebx+2ch], 0ffh
mov     dword ptr [ebx+14h], 2
mov     dword ptr [ebx+3ch], 0f03b7906h
push    eax
push    offset sub_1006f460
push    eax
lea     edi, [ebx+48h]
mov     ecx, 0bh
mov     esi, offset dword_10078c8c
rep movsd
or      dword ptr [ebx+18h], 48000800h
mov     byte ptr [ebx+30h], 1
mov     byte ptr [ebx+34h], 0ffh
mov     [ebx+38h], eax
lea     esi, [ebx+194h]
mov     [esi+8], eax
mov     [esi+4], eax
mov     [esi], eax
mov     [esi+0ch], eax
push    1
push    ebx
mov     edi, offset abinary
mov     [ebx+124h], eax
mov     [ebx+120h], eax
mov     [ebx+11ch], eax
mov     [ebx+128h], eax
call    sub_10070ca0
add     esp, 14h
push    0
push    offset sub_1006f460
push    0
push    3
push    ebx
call    sub_10070ca0
add     esp, 14h
push    0
push    offset sub_1006f460
push    0
push    2
push    ebx
call    sub_10070ca0
add     esp, 14h
push    0
push    offset sub_1006f460
push    1
push    1
push    ebx
mov     edi, offset artrim
call    sub_10070ca0
add     esp, 14h
cmp     byte ptr [ebx+32h], 0
jnz     loc_10071830
mov     eax, offset abinary
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10071668
sub     eax, offset abinary
and     eax, 3fffffffh
push    offset abinary
push    esi
mov     esi, eax
call    sub_1000cf50
push    0
push    offset sub_1006f540
push    0
push    1
push    ebx
mov     edi, offset anocase
mov     [ebx+8], eax
call    sub_10070ca0
mov     ecx, [ebp+arg_8]
add     esp, 1ch
lea     edx, [ebp+var_8]
push    edx
mov     edx, [ebp+arg_c]
lea     eax, [ebp+var_4]
push    eax
mov     eax, [ebp+arg_0]
mov     [ebx+24h], ecx
lea     ecx, [ebp+arg_8]
push    ebx
push    ecx
call    sub_10070eb0
add     esp, 10h
test    eax, eax
jz      short loc_100716f6
cmp     eax, 7
jnz     short loc_100716cf
mov     byte ptr [ebx+32h], 1
mov     esi, [ebp+var_8]
mov     edx, esi
neg     edx
sbb     edx, edx
push    esi
and     edx, offset as
push    edx
push    eax
mov     eax, ebx
call    sub_1000ba40
add     esp, 0ch
push    esi
call    sub_10009770
jmp     loc_1007182d
mov     eax, [ebp+arg_8]
mov     edx, [ebp+var_4]
mov     ecx, [ebx+10h]
or      eax, 100h
push    eax
mov     eax, [ebx]
push    0
push    edx
add     ecx, 4
push    eax
mov     edx, ebx
call    sub_1001adc0
add     esp, 10h
test    eax, eax
jz      short loc_1007173a
cmp     eax, 0c0ah
jnz     short loc_10071728
mov     eax, 7
push    0
push    eax
mov     eax, ebx
call    sub_1000ba40
add     esp, 8
jmp     loc_10071830
mov     ecx, [ebx+10h]
mov     eax, [ecx+4]
push    ebx
call    sub_10044ae0
mov     edx, [ebx+10h]
add     esp, 4
mov     [edx+0ch], eax
push    ebx
xor     eax, eax
call    sub_10044ae0
mov     ecx, [ebx+10h]
mov     [ecx+1ch], eax
mov     edx, [ebx+10h]
mov     dword ptr [edx], offset amain
mov     eax, [ebx+10h]
mov     byte ptr [eax+9], 3
mov     ecx, [ebx+10h]
mov     dword ptr [ecx+10h], offset atemp
mov     edx, [ebx+10h]
mov     byte ptr [edx+19h], 1
add     esp, 4
cmp     byte ptr [ebx+32h], 0
mov     dword ptr [ebx+3ch], 0a029a697h
jnz     loc_10071830
push    0
push    0
mov     eax, ebx
call    sub_1000ba40
push    2
push    offset amatch_0
push    ebx
call    sub_100703e0
add     esp, 14h
cmp     eax, 7
jnz     short loc_100717b6
mov     byte ptr [ebx+32h], 1
push    ebx
call    sub_10070bc0
add     esp, 4
test    eax, eax
jnz     short loc_100717d9
push    ebx
call    sub_10050a00
add     esp, 4
push    ebx
call    sub_10070bc0
add     esp, 4
test    eax, eax
jnz     short loc_10071830
push    0
push    eax
mov     eax, ebx
call    sub_1000ba40
mov     eax, dword_10080248
push    eax
mov     eax, dword_10080244
push    0
mov     esi, ebx
call    sub_1006f210
mov     eax, [ebx+0ch]
add     esp, 10h
test    eax, eax
jz      short loc_1007180b
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebx+0ch]
mov     dword ptr [ebx+0b8h], offset sub_10070630
mov     dword ptr [ebx+0bch], 3e8h
test    eax, eax
jz      short loc_10071830
push    eax
call    dword_10080284
add     esp, 4
mov     ecx, [ebp+var_4]
push    ecx
call    sub_10009770
add     esp, 4
test    ebx, ebx
jz      short loc_10071851
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_10071851
push    eax
call    dword_10080284
add     esp, 4
push    ebx
call    sub_10070bc0
mov     esi, eax
add     esp, 4
cmp     esi, 7
jnz     short loc_1007187d
mov     eax, ebx
call    sub_1006f820
mov     edx, [ebp+arg_4]
xor     ebx, ebx
mov     eax, esi
mov     [edx], ebx
and     eax, 0ffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jz      short loc_10071888
mov     dword ptr [ebx+3ch], 4b771290h
mov     edx, [ebp+arg_4]
mov     eax, esi
mov     [edx], ebx
and     eax, 0ffh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
push    0
push    6
push    eax
push    ecx
call    sub_10071480
add     esp, 10h
pop     ebp
retn
push    ebp
mov     ebp, esp
pop     ebp
jmp     sub_10071480
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+arg_4]
mov     dword ptr [esi], 0
call    sub_1006edd0
test    eax, eax
jnz     loc_10071a07
push    ebx
push    edi
push    28h
call    sub_100094a0
mov     edi, eax
add     esp, 4
test    edi, edi
jz      loc_100719b0
mov     ebx, [ebp+arg_0]
xor     eax, eax
mov     [edi+4], eax
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     [edi+10h], eax
mov     [edi+14h], eax
mov     [edi+18h], eax
mov     [edi+1ch], eax
mov     [edi+20h], eax
mov     [edi+24h], eax
mov     eax, 1
mov     [edi+1ch], ax
mov     al, 5
mov     [edi+1eh], al
mov     dword ptr [edi], 0
test    ebx, ebx
jnz     short loc_10071947
mov     ecx, 1
mov     [edi+1ch], cx
mov     [edi+1eh], al
jmp     short loc_100719b0
xor     esi, esi
lea     esp, [esp+0]
mov     dl, [esi+ebx+1]
or      dl, [esi+ebx]
jz      short loc_10071964
add     esi, 2
cmp     esi, 3b9aca00h
jle     short loc_10071950
xor     eax, eax
mov     [ebp+var_4], 202h
push    edi
cmp     eax, offset sub_10009760
jnz     short loc_10071982
call    sub_100247d0
mov     eax, [ebp+var_4]
mov     [edi+24h], ebx
jmp     short loc_1007198c
call    sub_100247d0
mov     eax, 0a02h
mov     [edi+18h], esi
add     esp, 4
mov     esi, edi
mov     dword ptr [edi+20h], 0
mov     [edi+4], ebx
mov     [edi+1ch], ax
mov     word ptr [edi+1eh], 203h
call    sub_1000b840
mov     esi, [ebp+arg_4]
mov     bl, 1
call    sub_100253e0
test    eax, eax
jz      short loc_100719e3
push    0
push    6
push    esi
push    eax
call    sub_10071480
mov     ebx, eax
add     esp, 10h
test    ebx, ebx
jnz     short loc_100719e8
mov     ecx, [esi]
mov     edx, [ecx+10h]
mov     eax, [edx+0ch]
test    byte ptr [eax+4eh], 1
jnz     short loc_100719e8
mov     byte ptr [eax+4dh], 2
jmp     short loc_100719e8
mov     ebx, 7
test    edi, edi
jz      short loc_100719fe
push    edi
call    sub_100247d0
mov     ecx, [edi]
add     esp, 4
mov     eax, edi
call    sub_10009810
mov     eax, ebx
pop     edi
and     eax, 0ffh
pop     ebx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_10071a29
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_8]
mov     edi, [ebp+arg_4]
push    0
push    eax
push    ecx
push    edx
push    esi
call    sub_10070ca0
add     esp, 14h
cmp     byte ptr [esi+32h], 0
jnz     short loc_10071a50
cmp     eax, 0c0ah
jnz     short loc_10071a67
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
test    esi, esi
jz      short loc_10071a7d
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
push    edi
test    eax, eax
jz      short loc_10071aa9
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_14]
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+arg_c]
mov     edi, [ebp+arg_4]
push    eax
mov     eax, [ebp+arg_8]
push    ecx
push    edx
push    eax
push    esi
call    sub_10070ca0
add     esp, 14h
cmp     byte ptr [esi+32h], 0
jnz     short loc_10071ad2
cmp     eax, 0c0ah
jnz     short loc_10071ae9
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
test    esi, esi
jz      short loc_10071aff
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
xor     ebx, ebx
push    edi
test    eax, eax
jz      short loc_10071b2c
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
push    eax
or      ecx, 0ffffffffh
call    sub_1000b910
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_10071b63
mov     ecx, [ebp+arg_10]
mov     edx, [ebp+arg_c]
mov     eax, [ebp+arg_8]
push    0
push    ecx
push    edx
push    eax
push    esi
call    sub_10070ca0
mov     ebx, eax
add     esp, 14h
mov     eax, edi
mov     ecx, esi
call    sub_10009810
cmp     byte ptr [esi+32h], 0
mov     eax, ebx
jnz     short loc_10071b73
cmp     ebx, 0c0ah
jnz     short loc_10071b8a
push    0
push    7
mov     eax, esi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [esi+32h], 0
mov     eax, 7
mov     edi, [esi+2ch]
mov     esi, [esi+0ch]
and     edi, eax
test    esi, esi
jz      short loc_10071ba0
push    esi
call    dword_10080284
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10071bc8
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
mov     [esi+0c0h], eax
mov     dword ptr [esi+0c4h], 0
mov     [esi+0c8h], ecx
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10071bf5
push    esi
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10071c18
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
mov     dword ptr [esi+0c0h], 0
mov     [esi+0c4h], eax
mov     [esi+0c8h], ecx
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10071c45
push    esi
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
movzx   eax, byte ptr [eax+30h]
pop     ebp
retn
push    ecx
push    offset ac0d89d4a975292
push    eax
push    offset adatabasecorrup
push    0bh
call    sub_1000b150
add     esp, 10h
mov     eax, 0bh
pop     ecx
retn
push    ecx
push    offset ac0d89d4a975292
push    eax
push    offset acannotopenfile
push    0eh
call    sub_1000b150
add     esp, 10h
mov     eax, 0eh
pop     ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
push    ebx
xor     ebx, ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [edi+0ch]
mov     [ebp+var_8], ebx
mov     [ebp+var_4], ebx
mov     [ebp+var_c], ebx
mov     [ebp+var_10], ebx
mov     [ebp+var_24], ebx
mov     [ebp+var_14], ebx
mov     [ebp+var_18], ebx
cmp     eax, ebx
jz      short loc_10071cd4
push    eax
call    dword_1008027c
add     esp, 4
push    edi
call    sub_10019440
add     esp, 4
lea     eax, [ebp+var_8]
push    eax
push    edi
call    sub_100537d0
add     esp, 8
mov     [ebp+var_1c], eax
cmp     eax, ebx
jnz     loc_10071dec
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_8]
push    ecx
push    edx
push    edi
call    sub_1003f510
add     esp, 0ch
mov     [ebp+var_4], eax
cmp     eax, ebx
jz      loc_10071de9
cmp     [eax+1ch], ebx
jnz     loc_10071de9
mov     esi, [ebp+arg_c]
call    sub_10037370
test    eax, eax
jz      short loc_10071d3f
mov     eax, [ebp+var_4]
mov     esi, [eax+4]
test    esi, esi
js      loc_10071dd2
mov     edx, [eax+0ch]
lea     ecx, [esi+esi*2]
lea     ebx, [edx+ecx*8]
jmp     short loc_10071d84
mov     ecx, [ebp+var_4]
mov     eax, [ecx+8]
xor     esi, esi
mov     [ebp+var_20], eax
test    eax, eax
jle     short loc_10071d74
mov     ebx, [ecx+0ch]
mov     [ebp+arg_0], ebx
jmp     short loc_10071d59
mov     ebx, [ebp+arg_0]
mov     edx, [ebp+arg_c]
mov     ecx, [ebx]
call    sub_1000bca0
test    eax, eax
jz      short loc_10071d71
add     [ebp+arg_0], 18h
inc     esi
cmp     esi, [ebp+var_20]
jl      short loc_10071d56
mov     eax, [ebp+var_20]
cmp     esi, eax
jnz     short loc_10071d81
mov     [ebp+var_4], 0
jmp     short loc_10071dec
mov     eax, [ebp+var_4]
test    ebx, ebx
jz      short loc_10071dd2
mov     ecx, [ebx+0ch]
xor     edx, edx
cmp     [ebx+14h], dl
mov     [ebp+var_c], ecx
mov     ecx, [ebx+10h]
setnz   dl
mov     [ebp+var_10], ecx
mov     [ebp+var_24], edx
xor     edx, edx
cmp     [ebx+15h], dl
setnz   dl
mov     [ebp+var_14], edx
cmp     [eax+4], esi
jnz     short loc_10071dc9
test    byte ptr [eax+22h], 8
jz      short loc_10071dc9
mov     [ebp+var_18], 1
test    ecx, ecx
jnz     short loc_10071dec
mov     [ebp+var_10], offset abinary
jmp     short loc_10071dec
mov     [ebp+var_18], 0
jmp     short loc_10071dbc
mov     [ebp+var_c], offset ainteger_1
mov     [ebp+var_14], 1
mov     [ebp+var_10], offset abinary
jmp     short loc_10071dec
mov     [ebp+var_4], ebx
mov     ebx, edi
call    sub_10019550
mov     eax, [ebp+arg_10]
test    eax, eax
jz      short loc_10071dff
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     eax, [ebp+arg_14]
test    eax, eax
jz      short loc_10071e0b
mov     edx, [ebp+var_10]
mov     [eax], edx
mov     eax, [ebp+arg_18]
test    eax, eax
jz      short loc_10071e17
mov     ecx, [ebp+var_24]
mov     [eax], ecx
mov     eax, [ebp+arg_1c]
test    eax, eax
jz      short loc_10071e23
mov     edx, [ebp+var_14]
mov     [eax], edx
mov     eax, [ebp+arg_20]
test    eax, eax
jz      short loc_10071e2f
mov     ecx, [ebp+var_18]
mov     [eax], ecx
cmp     [ebp+var_1c], 0
jnz     short loc_10071e67
cmp     [ebp+var_4], 0
jnz     short loc_10071e67
mov     eax, [ebp+var_8]
mov     ecx, edi
call    sub_10009810
mov     edx, [ebp+arg_c]
mov     eax, [ebp+arg_8]
push    edx
push    eax
push    offset anosuchtablecol
push    edi
call    sub_1000ae80
add     esp, 10h
mov     [ebp+var_8], eax
mov     [ebp+var_1c], 1
jmp     short loc_10071e6a
mov     eax, [ebp+var_8]
mov     esi, [ebp+var_1c]
push    eax
neg     eax
sbb     eax, eax
and     eax, offset as
push    eax
push    esi
mov     eax, edi
call    sub_1000ba40
mov     eax, [ebp+var_8]
add     esp, 0ch
mov     ecx, edi
call    sub_10009810
cmp     byte ptr [edi+32h], 0
mov     eax, esi
jnz     short loc_10071e9d
cmp     esi, 0c0ah
jnz     short loc_10071eb4
push    0
push    7
mov     eax, edi
call    sub_1000ba40
add     esp, 8
mov     byte ptr [edi+32h], 0
mov     eax, 7
mov     esi, [edi+2ch]
mov     edi, [edi+0ch]
and     esi, eax
test    edi, edi
jz      short loc_10071eca
push    edi
call    dword_10080284
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0
call    sub_10008af0
add     esp, 4
test    eax, eax
jnz     short loc_10071ef3
pop     ebp
retn
mov     ecx, [ebp+arg_0]
mov     edx, [eax+3ch]
imul    ecx, 3e8h
push    ecx
push    eax
call    edx
mov     ecx, eax
mov     eax, 10624dd3h
imul    ecx
sar     edx, 6
mov     eax, edx
shr     eax, 1fh
add     esp, 8
add     eax, edx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10071f38
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
neg     eax
sbb     eax, eax
and     eax, 0ffffff00h
add     eax, 0ffh
mov     [esi+2ch], eax
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_10071f5d
push    esi
call    dword_10080284
add     esp, 4
xor     eax, eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [ebx+0ch]
push    esi
push    edi
mov     esi, 1
test    eax, eax
jz      short loc_10071f8f
push    eax
call    dword_1008027c
add     esp, 4
mov     eax, [ebp+arg_4]
push    eax
mov     eax, ebx
call    sub_10072290
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_10072001
call    sub_10019320
mov     ecx, [edi+4]
mov     edx, [ecx]
mov     eax, [edx+3ch]
mov     edx, [ebp+arg_8]
cmp     edx, 7
jnz     short loc_10071fc1
mov     ecx, [ebp+arg_c]
mov     [ecx], eax
xor     esi, esi
jmp     short loc_10071fde
mov     ecx, [eax]
test    ecx, ecx
jz      short loc_10071fd9
mov     esi, [ebp+arg_c]
push    esi
push    edx
mov     edx, [ecx+28h]
push    eax
call    edx
add     esp, 0ch
mov     esi, eax
jmp     short loc_10071fde
mov     esi, 0ch
cmp     byte ptr [edi+9], 0
jz      short loc_10072001
dec     dword ptr [edi+0ch]
jnz     short loc_10072001
mov     eax, [edi+4]
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_10071ffd
push    eax
call    dword_10080284
add     esp, 4
mov     byte ptr [edi+0ah], 0
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_10072012
push    eax
call    dword_10080284
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
push    ebx
add     eax, 0fffffffbh
push    esi
xor     ebx, ebx
push    edi
cmp     eax, 0dh
ja      def_10072038
jmp     ds:jpt_10072038[eax*4]
mov     ecx, 40h
mov     esi, offset byte_100813b0
mov     edi, offset dword_10081560
rep movsd
movsw
movsb
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, 40h
mov     esi, offset dword_10081560
mov     edi, offset byte_100813b0
rep movsd
movsw
movsb
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
mov     byte_100813b0, bl
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
push    eax
push    ecx
call    sub_10010200
add     esp, 8
pop     edi
pop     esi
mov     ebx, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_4]
pop     edi
mov     dword_100816c0, eax
pop     esi
mov     eax, ebx
mov     dword_100816bc, edx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_4]
mov     ebx, dword_1008031c
test    eax, eax
jz      def_10072038
pop     edi
mov     dword_1008031c, eax
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     [ebp+var_4], ebx
mov     ebx, [ebp+var_4]
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [ebp+arg_4]
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+arg_4]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_10072109
push    eax
call    dword_1008027c
add     esp, 4
mov     ecx, [ebp+arg_8]
mov     edx, [esi+10h]
mov     eax, [edx+4]
push    0
push    ecx
push    eax
xor     eax, eax
call    sub_1001b6c0
mov     esi, [esi+0ch]
add     esp, 0ch
test    esi, esi
jz      short def_10072038
push    esi
call    dword_10080284
add     esp, 4
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     cl, byte ptr [ebp+arg_8]
mov     edx, [ebp+arg_4]
pop     edi
pop     esi
mov     eax, ebx
mov     [edx+18h], cl
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_4]
call    sub_1000ba20
push    ecx
mov     edi, eax
call    sub_1006dc40
add     esp, 4
lea     ebx, [eax-1ah]
neg     ebx
sbb     ebx, ebx
pop     edi
and     ebx, 79h
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_10072183
call    sub_10009540
mov     ecx, [ebp+arg_8]
mov     [ecx], eax
mov     esi, [ebp+arg_c]
call    sub_10009650
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [ebp+arg_4]
mov     dword_10080318, edx
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
test    ecx, ecx
jnz     short loc_100721e7
xor     eax, eax
retn
cmp     byte ptr [ecx], 0
mov     eax, ecx
jz      short loc_100721f6
mov     edi, edi
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_100721f0
sub     eax, ecx
push    ebx
and     eax, 3fffffffh
mov     bl, [ecx+eax+1]
push    esi
lea     esi, [ecx+eax+1]
test    bl, bl
jz      short loc_1007227c
jmp     short loc_10072210
mov     ecx, offset apsow
mov     eax, esi
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_10072237
test    dl, dl
jz      short loc_10072233
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_10072237
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_10072217
xor     ecx, ecx
jmp     short loc_1007223c
sbb     ecx, ecx
sbb     ecx, 0ffffffffh
mov     eax, esi
test    bl, bl
jz      short loc_10072248
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_10072242
sub     eax, esi
and     eax, 3fffffffh
lea     eax, [esi+eax+1]
test    ecx, ecx
jz      short loc_1007227e
mov     ecx, eax
test    eax, eax
jz      short loc_10072270
cmp     byte ptr [eax], 0
jz      short loc_10072268
inc     ecx
cmp     byte ptr [ecx], 0
jnz     short loc_10072262
sub     ecx, eax
and     ecx, 3fffffffh
mov     bl, [eax+ecx+1]
lea     esi, [eax+ecx+1]
test    bl, bl
jnz     short loc_10072210
xor     eax, eax
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     ecx, [eax+14h]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
xor     edi, edi
mov     [ebp+var_4], ecx
test    ecx, ecx
jle     short loc_10072307
mov     eax, [eax+10h]
mov     [ebp+var_8], eax
mov     esi, eax
cmp     dword ptr [esi+4], 0
jz      short loc_100722ff
test    ebx, ebx
jz      short loc_10072310
mov     al, [ebx]
mov     edx, [esi]
mov     ecx, ebx
test    al, al
jz      short loc_100722e4
movzx   ebx, byte ptr [edx]
movzx   eax, al
mov     al, ds:byte_10076030[eax]
cmp     al, ds:byte_10076030[ebx]
jnz     short loc_100722e1
mov     al, [ecx+1]
inc     ecx
inc     edx
test    al, al
jnz     short loc_100722c4
mov     ebx, [ebp+arg_0]
movzx   edx, byte ptr [edx]
movzx   ecx, byte ptr [ecx]
movzx   eax, ds:byte_10076030[edx]
movzx   edx, ds:byte_10076030[ecx]
sub     edx, eax
jz      short loc_10072310
mov     ecx, [ebp+var_4]
inc     edi
add     esi, 10h
cmp     edi, ecx
jl      short loc_100722b0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_8]
add     edi, edi
mov     eax, [eax+edi*8+4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
push    80h
call    ds:_malloc_crt
pop     ecx
mov     esi, eax
push    esi
call    ds:encodepointer
mov     ptr, eax
mov     dword_100817c0, eax
test    esi, esi
jnz     short loc_100725d5
xor     eax, eax
inc     eax
pop     esi
retn
and     dword ptr [esi], 0
call    sub_10072b92
push    offset byte_10072bb8
call    _atexit
mov     dword ptr [esp], offset sub_10072ace
call    _atexit
pop     ecx
xor     eax, eax
pop     esi
retn
push    offset dword_1008138c
call    __clean_type_info_names_internal
pop     ecx
retn
mov     edi, edi
push    esi
mov     eax, offset dword_1007d4f4
mov     esi, offset dword_1007d4f4
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_10072bb5
mov     eax, [edi]
test    eax, eax
jz      short loc_10072bae
call    eax
add     edi, 4
cmp     edi, esi
jb      short loc_10072ba6
pop     edi
pop     esi
retn
push    esi
mov     eax, offset dword_1007d4fc
mov     esi, offset dword_1007d4fc
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_10072bdb
mov     eax, [edi]
test    eax, eax
jz      short loc_10072bd4
call    eax
add     edi, 4
cmp     edi, esi
jb      short loc_10072bcc
pop     edi
pop     esi
retn
cmp     dword_100817b4, 0
jz      short __ftol2
sub     esp, 4
fnstcw  word ptr [esp]
pop     eax
and     ax, 7fh
cmp     ax, 7fh
jz      short __ftol2_pentium4
push    0ah
call    ds:isprocessorfeaturepresent
mov     dword_100817b4, eax
xor     eax, eax
retn
mov     ecx, [ebp+var_10]
add     ecx, 4
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d600
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_1c]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_2c]
jmp     loc_100064e0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d63c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_11]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_30]
jmp     ds:??1?$dtarray@e@@qae@xz
lea     ecx, [ebp+var_20]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_40]
jmp     loc_100064e0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-40h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d680
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_54]
jmp     ds:??1dtdatasource@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-58h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d6b4
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_20]
jmp     ds:??1dtstr@@qae@xz
mov     eax, [ebp+var_14]
and     eax, 1
jz      locret_1007347b
and     [ebp+var_14], 0fffffffeh
mov     ecx, [ebp+arg_0]
jmp     ds:??1dtstr@@qae@xz
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d6f0
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d71c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d748
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_24]
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d77c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_20]
jmp     loc_100064e0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d7b0
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_64]
jmp     ds:??1dtdatasource@@qae@xz
lea     ecx, [ebp+var_20]
jmp     loc_100064e0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-68h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d7ec
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_1c]
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d820
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_1c]
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d854
jmp     __cxxframehandler3
mov     ecx, [ebp+var_10]
jmp     ds:??1idtdataparameter@@uae@xz
mov     ecx, [ebp+var_10]
add     ecx, 4
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d888
jmp     __cxxframehandler3
mov     ecx, [ebp+arg_0]
jmp     ds:??1idtdataparameter@@uae@xz
mov     ecx, [ebp+arg_0]
add     ecx, 4
jmp     ds:??1dtstr@@qae@xz
mov     ecx, [ebp+arg_0]
add     ecx, 18h
jmp     ds:??1?$dtarray@e@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d8c4
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_1c]
jmp     ds:??1dtstr@@qae@xz
mov     eax, [ebp+arg_0]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d900
jmp     __cxxframehandler3
lea     ecx, [ebp+var_11]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_38]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_2c]
jmp     ds:??1dtstr@@qae@xz
mov     eax, [ebp+var_20]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     eax, [ebp+var_18]
and     eax, 1
jz      locret_100736f0
and     [ebp+var_18], 0fffffffeh
lea     ecx, [ebp+var_48]
jmp     ds:??1?$dtarray@e@@qae@xz
retn
mov     eax, [ebp+arg_4]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     eax, [ebp+var_18]
and     eax, 2
jz      locret_10073716
and     [ebp+var_18], 0fffffffdh
lea     ecx, [ebp+var_48]
jmp     ds:??1?$dtarray@e@@qae@xz
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-50h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007d970
jmp     __cxxframehandler3
lea     ecx, [ebp+var_11]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_2c]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_38]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_44]
jmp     ds:??1dtstr@@qae@xz
mov     eax, [ebp+var_20]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     eax, [ebp+var_18]
and     eax, 1
jz      locret_10073789
and     [ebp+var_18], 0fffffffeh
lea     ecx, [ebp+var_54]
jmp     ds:??1?$dtarray@e@@qae@xz
retn
mov     eax, [ebp+var_20]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     eax, [ebp+var_18]
and     eax, 2
jz      locret_100737af
and     [ebp+var_18], 0fffffffdh
lea     ecx, [ebp+var_64]
jmp     ds:??1?$dtarray@e@@qae@xz
retn
mov     eax, [ebp+arg_4]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     eax, [ebp+var_18]
and     eax, 4
jz      locret_100737d5
and     [ebp+var_18], 0fffffffbh
lea     ecx, [ebp+var_64]
jmp     ds:??1?$dtarray@e@@qae@xz
retn
mov     eax, [ebp+arg_4]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     eax, [ebp+var_18]
and     eax, 8
jz      locret_100737fb
and     [ebp+var_18], 0fffffff7h
lea     ecx, [ebp+var_64]
jmp     ds:??1?$dtarray@e@@qae@xz
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-68h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007da18
jmp     __cxxframehandler3
lea     ecx, [ebp+var_11]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_4c]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_34]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_28]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_40]
jmp     ds:??1dtstr@@qae@xz
mov     eax, [ebp+var_1c]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     eax, [ebp+var_18]
and     eax, 1
jz      locret_10073872
and     [ebp+var_18], 0fffffffeh
lea     ecx, [ebp+var_5c]
jmp     ds:??1?$dtarray@e@@qae@xz
retn
mov     eax, [ebp+arg_4]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     eax, [ebp+var_18]
and     eax, 2
jz      locret_10073898
and     [ebp+var_18], 0fffffffdh
lea     ecx, [ebp+var_5c]
jmp     ds:??1?$dtarray@e@@qae@xz
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-60h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007da98
jmp     __cxxframehandler3
mov     ecx, [ebp+var_10]
jmp     ds:??1idtdatatransaction@@uae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dac4
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_20]
jmp     loc_100064e0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007daf8
jmp     __cxxframehandler3
mov     ecx, [ebp+arg_0]
jmp     ds:??1idtdataconnection@@uae@xz
mov     esi, [ebp+arg_0]
add     esi, 14h
jmp     loc_100062c0
mov     esi, [ebp+arg_0]
add     esi, 20h
jmp     loc_10006370
mov     esi, [ebp+arg_0]
add     esi, 30h
jmp     loc_10006430
mov     ecx, [ebp+arg_0]
add     ecx, 3ch
jmp     ds:??1dtstr@@qae@xz
mov     ecx, [ebp+arg_0]
add     ecx, 48h
jmp     ds:??1dtasync@@qae@xz
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
mov     eax, [ebp+var_14]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     ecx, [ebp+var_14]
add     ecx, 4
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007db68
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007db94
jmp     __cxxframehandler3
lea     ecx, [ebp+var_2d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_2c]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_20]
jmp     loc_100064e0
mov     edx, [esp-4+arg_4]
lea     eax, [edx-34h]
mov     ecx, [edx-38h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dbd0
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_1c]
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dc04
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dc30
jmp     __cxxframehandler3
lea     ecx, [ebp+var_51]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_6c]
jmp     ds:??1?$dtarray@e@@qae@xz
lea     ecx, [ebp+var_78]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_78]
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-7ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dc74
jmp     __cxxframehandler3
lea     ecx, [ebp+var_15]
jmp     ds:??1dtloghelper@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx-14h]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dca0
jmp     __cxxframehandler3
lea     ecx, [ebp+var_11]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_ac]
jmp     ds:??1dtgeom@@qae@xz
lea     ecx, [ebp+var_34]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_28]
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0b0h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dce4
jmp     __cxxframehandler3
mov     ecx, [ebp+var_10]
add     ecx, 4
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dd10
jmp     __cxxframehandler3
lea     ecx, [ebp+var_20]
jmp     ds:??1?$dtarray@e@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx-1ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dd3c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_e]
jmp     ds:??1dtloghelper@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dd70
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_e]
jmp     ds:??1dtloghelper@@qae@xz
mov     eax, [ebp+var_18]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     ecx, [ebp+var_18]
add     ecx, 4
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007ddb4
jmp     __cxxframehandler3
mov     ecx, [ebp+arg_0]
jmp     ds:??1idtdataconnection@@uae@xz
mov     esi, [ebp+arg_0]
add     esi, 14h
jmp     loc_100062c0
mov     esi, [ebp+arg_0]
add     esi, 20h
jmp     loc_10006370
mov     esi, [ebp+arg_0]
add     esi, 30h
jmp     loc_10006430
mov     ecx, [ebp+arg_0]
add     ecx, 3ch
jmp     ds:??1dtstr@@qae@xz
mov     ecx, [ebp+arg_0]
add     ecx, 48h
jmp     ds:??1dtasync@@qae@xz
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007de10
jmp     __cxxframehandler3
lea     ecx, [ebp+var_32]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_31]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_20]
jmp     ds:??1?$dtarray@e@@qae@xz
lea     ecx, [ebp+var_2c]
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx-34h]
mov     ecx, [edx-38h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007de54
jmp     __cxxframehandler3
lea     ecx, [ebp+var_11]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_44]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_5c]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_50]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_38]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_8c]
jmp     loc_100064e0
lea     ecx, [ebp+var_7c]
jmp     loc_100064e0
lea     ecx, [ebp+var_6c]
jmp     loc_100064e0
lea     ecx, [ebp+arg_0+3]
jmp     ds:??1dtloghelper@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-90h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dec0
jmp     __cxxframehandler3
lea     ecx, [ebp+var_11]
jmp     ds:??1dtloghelper@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx-14h]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007deec
jmp     __cxxframehandler3
lea     ecx, [ebp+var_51]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_50]
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx-74h]
mov     ecx, [edx-78h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007df20
jmp     __cxxframehandler3
lea     ecx, [ebp+var_d]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_44]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_50]
jmp     ds:??1dtstr@@qae@xz
mov     eax, [ebp+var_38]
push    eax
call    ds:__imp_??3@yaxpax@z
pop     ecx
retn
mov     ecx, [ebp+var_38]
jmp     ds:??1dtstr@@qae@xz
mov     ecx, [ebp+var_38]
add     ecx, 0ch
jmp     ds:??1dtstr@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-58h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007df74
jmp     __cxxframehandler3
lea     ecx, [ebp+var_115]
jmp     ds:??1dtloghelper@@qae@xz
lea     ecx, [ebp+var_c4]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_f4]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_d0]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+buffer]
jmp     ds:??1dtstr@@qae@xz
lea     ecx, [ebp+var_b8]
jmp     ds:??1dtgeom@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx-134h]
mov     ecx, [edx-138h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1007dfd0
jmp     __cxxframehandler3