mov     eax, [esp+arg_10]
mov     edx, [esp+arg_8]
push    esi
mov     esi, ecx
mov     ecx, [esp+4+arg_c]
push    eax
mov     eax, [esp+8+arg_4]
push    ecx
mov     ecx, [esp+0ch+arg_0]
push    edx
push    eax
push    ecx
mov     ecx, esi
call    ??0crecentfilelist@@qae@ipbd0hh@z
mov     dword ptr [esi], offset off_403058
mov     eax, esi
pop     esi
retn    14h
push    esi
mov     esi, ecx
call    j_??1crecentfilelist@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_401048
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401060
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 0a4h
push    ebx
push    esi
mov     esi, ecx
push    edi
lea     ecx, [ebp+var_24]
mov     [ebp+var_10], esp
mov     [ebp+var_14], esi
call    ??0cstring@@qae@xz
xor     edi, edi
lea     ecx, [ebp+lpsubkey]
mov     [ebp+var_4], edi
call    ??0cstring@@qae@xz
lea     ecx, [ebp+var_44]
mov     byte ptr [ebp+var_4], 1
mov     [ebp+phkresult], edi
mov     [ebp+var_28], edi
mov     [ebp+var_20], 1
call    ??0afx_exception_link@@qae@xz
mov     eax, [esi+1ch]
mov     ebx, [ebp+arg_0]
add     esi, 1ch
mov     byte ptr [ebp+var_4], 3
mov     ecx, [eax-8]
mov     edi, [ebx+0ch]
test    ecx, ecx
jnz     short loc_401101
test    edi, edi
jz      short loc_401101
mov     ebx, [ebx+4]
push    100h
mov     ecx, esi
call    ?getbuffer@cstring@@qaepadh@z
mov     ecx, [edi+4]
push    0
push    100h
push    eax
push    ebx
push    ecx
call    ds:getmenustringa
push    0ffffffffh
mov     ecx, esi
call    ?releasebuffer@cstring@@qaexh@z
mov     ebx, [ebp+arg_0]
mov     edx, [ebp+var_14]
mov     eax, [edx+8]
mov     ecx, [eax]
mov     eax, [ecx-8]
test    eax, eax
jnz     short loc_401137
mov     esi, [esi]
mov     eax, [esi-8]
test    eax, eax
jz      short loc_401121
mov     edx, [ebx]
push    esi
mov     ecx, ebx
call    dword ptr [edx+0ch]
mov     eax, [ebx]
push    0
mov     ecx, ebx
call    dword ptr [eax]
mov     byte ptr [ebp+var_4], 1
call    ?afxtrycleanup@@ygxxz
jmp     loc_401431
mov     eax, [ebx+0ch]
test    eax, eax
jnz     short loc_40114c
mov     byte ptr [ebp+var_4], 1
call    ?afxtrycleanup@@ygxxz
jmp     loc_401431
push    50a8h
lea     ecx, [ebp+lpsubkey]
call    ?loadstringa@cstring@@qaehi@z
push    50a9h
lea     ecx, [ebp+var_24]
call    ?loadstringa@cstring@@qaehi@z
lea     ecx, [ebp+var_24]
push    ecx
lea     ecx, [ebp+lpsubkey]
call    ??ycstring@@qaeabv0@abv0@@z
mov     eax, [ebp+lpsubkey]
lea     edx, [ebp+phkresult]
push    edx
xor     esi, esi
push    20019h
push    esi
push    eax
push    80000002h
call    ds:regopenkeyexa
cmp     eax, esi
jz      short loc_401194
mov     [ebp+var_20], esi
mov     edi, ds:deletemenu
mov     eax, [ebp+var_14]
cmp     esi, [eax+4]
jge     short loc_4011b6
mov     eax, [ebx+0ch]
mov     ecx, [ebx+4]
add     ecx, esi
push    0
mov     edx, [eax+4]
push    ecx
push    edx
call    edi
inc     esi
jmp     short loc_40119a
mov     [ebp+var_18], 0
mov     edx, [ebp+var_18]
mov     ecx, [eax+4]
cmp     edx, ecx
jge     loc_4013f9
mov     esi, [eax+8]
lea     ecx, ds:0[edx*4]
mov     [ebp+var_30], ecx
mov     ecx, [ecx+esi]
mov     esi, [ecx-8]
test    esi, esi
jz      loc_4013f9
mov     ecx, [ebp+var_20]
test    ecx, ecx
jz      loc_4012ee
xor     edi, edi
mov     ecx, [ebp+phkresult]
push    0
push    0
push    0
lea     edx, [ebp+cchvaluename]
push    0
lea     eax, [ebp+valuename]
push    edx
push    eax
push    edi
push    ecx
mov     [ebp+cchvaluename], 1fh
call    ds:regenumvaluea
test    eax, eax
jz      short loc_401225
mov     [ebp+var_20], 0
jmp     short loc_401264
mov     edx, [ebp+var_14]
mov     ecx, [ebp+var_30]
lea     esi, [ebp+valuename]
mov     eax, [edx+8]
mov     eax, [ecx+eax]
mov     dl, [eax]
mov     cl, dl
cmp     dl, [esi]
jnz     short loc_40125b
test    cl, cl
jz      short loc_401257
mov     dl, [eax+1]
mov     cl, dl
cmp     dl, [esi+1]
jnz     short loc_40125b
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_401237
xor     eax, eax
jmp     short loc_401260
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     short loc_4012e2
mov     eax, [ebp+var_20]
test    eax, eax
jnz     short loc_4012e8
mov     ebx, [ebp+var_18]
mov     eax, ebx
lea     edi, [eax+1]
mov     eax, [ebp+var_14]
cmp     edi, [eax+4]
jge     short loc_4012a4
mov     edx, [eax+8]
lea     esi, ds:0[ebx*4]
mov     ecx, esi
add     ecx, edx
call    ?empty@cstring@@qaexxz
mov     ecx, [ebp+var_14]
mov     eax, [ecx+8]
lea     edx, [eax+edi*4]
lea     ecx, [esi+eax]
push    edx
call    ??4cstring@@qaeabv0@abv0@@z
inc     ebx
inc     edi
jmp     short loc_401273
mov     ecx, [eax+4]
mov     edx, [eax+8]
mov     eax, [edx+ecx*4-4]
lea     ecx, [edx+ecx*4-4]
xor     edx, edx
mov     esi, [eax-8]
test    esi, esi
setz    dl
test    edx, edx
jnz     short loc_4012c5
call    ?empty@cstring@@qaexxz
mov     eax, [ebp+var_18]
mov     ebx, [ebp+arg_0]
dec     eax
mov     [ebp+var_20], 1
mov     [ebp+var_18], eax
inc     eax
mov     [ebp+var_18], eax
mov     eax, [ebp+var_14]
jmp     loc_4011bd
inc     edi
jmp     loc_4011f3
mov     eax, [ebp+var_14]
mov     edx, [ebp+var_18]
mov     eax, [eax+8]
mov     esi, ds:lstrcpya
lea     edi, ds:0[edx*4]
lea     edx, [ebp+string1]
mov     ecx, [edi+eax]
push    ecx
push    edx
call    esi
mov     eax, [ebp+var_14]
mov     ecx, [eax+8]
lea     eax, [ebp+var_74]
mov     edx, [edi+ecx]
push    edx
push    eax
call    esi
lea     esi, [ebp+string1]
lea     edi, [ebp+var_74]
mov     al, [esi]
test    al, al
jz      short loc_401354
cmp     al, 26h
jnz     short loc_401331
mov     [edi], al
inc     edi
call    ds:__p__mbctype
mov     cl, [esi]
mov     edx, ecx
and     edx, 0ffh
test    byte ptr [eax+edx+1], 4
jz      short loc_40134c
mov     [edi], cl
inc     edi
inc     esi
mov     al, [esi]
mov     [edi], al
inc     edi
inc     esi
jmp     short loc_401324
mov     ecx, [ebp+var_14]
mov     eax, [ebp+var_28]
mov     byte ptr [edi], 0
mov     edx, [ecx+14h]
mov     ecx, 0ah
lea     eax, [edx+eax+1]
xor     edx, edx
div     ecx
push    edx
lea     edx, [ebp+var_54]
push    offset ad
push    edx
call    ds:wsprintfa
mov     edx, [ebp+var_28]
add     esp, 0ch
lea     eax, [ebp+var_54]
inc     edx
push    eax
lea     ecx, [ebp+var_3c]
mov     [ebp+var_28], edx
call    ??0cstring@@qae@pbd@z
lea     ecx, [ebp+var_74]
lea     edx, [ebp+var_34]
push    ecx
push    eax
push    edx
mov     byte ptr [ebp+var_4], 4
call    ??h@yg?avcstring@@abv0@pbd@z
mov     ecx, [ebx+8]
mov     edx, [eax]
mov     eax, [ebx+4]
push    edx
lea     esi, [ecx+1]
push    eax
mov     [ebx+8], esi
lea     esi, [eax+1]
mov     [ebx+4], esi
mov     esi, [ebx+0ch]
push    400h
push    ecx
mov     eax, [esi+4]
mov     byte ptr [ebp+var_4], 5
push    eax
call    ds:insertmenua
lea     ecx, [ebp+var_34]
mov     byte ptr [ebp+var_4], 4
call    ??1cstring@@qae@xz
lea     ecx, [ebp+var_3c]
mov     byte ptr [ebp+var_4], 3
call    ??1cstring@@qae@xz
mov     eax, [ebp+var_18]
inc     eax
mov     [ebp+var_18], eax
mov     eax, [ebp+var_14]
jmp     loc_4011bd
mov     ecx, [ebx+8]
mov     eax, [ebx+0ch]
dec     ecx
mov     [ebx+8], ecx
mov     ecx, [eax+4]
push    ecx
call    ds:getmenuitemcount
mov     [ebx+20h], eax
mov     dword ptr [ebx+18h], 1
mov     [ebp+var_4], 1
call    ?afxtrycleanup@@ygxxz
mov     eax, [ebp+phkresult]
test    eax, eax
jz      short loc_401431
push    eax
call    ds:regclosekey
lea     ecx, [ebp+lpsubkey]
mov     byte ptr [ebp+var_4], 0
call    ??1cstring@@qae@xz
lea     ecx, [ebp+var_24]
mov     [ebp+var_4], 0ffffffffh
call    ??1cstring@@qae@xz
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     edx, [ebp+var_48]
mov     eax, offset loc_401417
mov     [ebp+var_40], edx
retn
sub     esp, 108h
push    ebx
push    ebp
push    esi
mov     ebx, ecx
push    edi
mov     edi, [esp+118h+arg_0]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
lea     edx, [esp+118h+var_104]
mov     eax, ecx
mov     esi, edi
mov     edi, edx
mov     [esp+118h+var_108], ebx
shr     ecx, 2
rep movsd
mov     ecx, eax
mov     eax, [ebx+4]
and     ecx, 3
rep movsb
lea     edx, [eax-1]
xor     edi, edi
test    edx, edx
jle     short loc_4014f7
mov     ebp, [ebx+8]
mov     eax, [ebp+0]
lea     esi, [esp+118h+var_104]
mov     bl, [eax]
mov     cl, bl
cmp     bl, [esi]
jnz     short loc_4014e2
test    cl, cl
jz      short loc_4014de
mov     bl, [eax+1]
mov     cl, bl
cmp     bl, [esi+1]
jnz     short loc_4014e2
add     eax, 2
add     esi, 2
test    cl, cl
jnz     short loc_4014be
xor     eax, eax
jmp     short loc_4014e7
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jz      short loc_4014f3
inc     edi
add     ebp, 4
cmp     edi, edx
jl      short loc_4014b7
mov     ebx, [esp+118h+var_108]
test    edi, edi
jle     short loc_40150f
mov     ecx, [ebx+8]
lea     ecx, [ecx+edi*4]
lea     edx, [ecx-4]
push    edx
call    ??4cstring@@qaeabv0@abv0@@z
dec     edi
test    edi, edi
jg      short loc_4014fb
mov     eax, [esp+118h+arg_0]
mov     ecx, [ebx+8]
push    eax
call    ??4cstring@@qaeabv0@pbd@z
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 108h
retn    4
mov     eax, [ecx+14h]
test    eax, eax
jz      short loc_401556
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
push    ecx
push    edx
call    eax
retn    8
xor     eax, eax
retn    8
mov     edx, [ecx+4]
xor     eax, eax
test    edx, edx
setnz   al
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, ecx
push    edi
mov     ecx, 6
mov     edi, eax
rep movsd
pop     edi
pop     esi
retn    4
call    unknown_libname_1
jmp     loc_4015b0
push    offset unknown_libname_2
call    _atexit
add     esp, 4
retn
call    unknown_libname_3
jmp     loc_4015f0
push    offset unknown_libname_4
call    _atexit
add     esp, 4
retn
mov     eax, ds:?messagemap@cwinapp@@1uafx_msgmap@@b
retn
mov     eax, offset off_403090
retn
push    esi
mov     esi, ecx
call    sub_4016e0
test    [esp+4+arg_0], 1
jz      short loc_4016d8
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
push    0ffffffffh
push    offset seh_4016e0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
push    esi
mov     esi, ecx
mov     [esp+14h+var_10], esi
lea     ecx, [esi+434h]
mov     [esp+14h+var_4], 1
call    ??1cload3d@@qae@xz
lea     ecx, [esi+0dch]
mov     byte ptr [esp+14h+var_4], 0
call    ??1cstring@@qae@xz
mov     ecx, esi
mov     [esp+14h+var_4], 0ffffffffh
call    ??1cwinapp@@uae@xz
mov     ecx, [esp+14h+var_c]
pop     esi
mov     large fs:0, ecx
add     esp, 10h
retn
call    unknown_libname_5
jmp     loc_401760
push    offset unknown_libname_6
call    _atexit
add     esp, 4
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401780
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     esi, ecx
mov     [ebp+var_10], esp
mov     [ebp+var_14], esi
call    ?afxoleinit@@yghxz
test    eax, eax
jnz     short loc_4017c1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [esi+6ch]
lea     edi, [esi+434h]
push    eax
mov     ecx, edi
call    ?loadctl3d@cload3d@@qaehpauhinstance__@@@z
lea     ecx, [esi+0c8h]
xor     ebx, ebx
push    edi
push    ecx
mov     [ebp+var_18], eax
mov     [esi+84h], ebx
call    ssguiallocateparent
add     esp, 8
test    eax, eax
jnz     short loc_401802
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     edx, [esi+0cch]
push    edx
call    ssgetprefreshinfo
add     esp, 4
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+0ch]
lea     ecx, [ebp+var_24]
mov     [esi+0d0h], eax
call    ??0afx_exception_link@@qae@xz
mov     [ebp+var_4], ebx
push    1074h
mov     ecx, offset lptext
mov     byte ptr [ebp+var_4], 1
call    ?loadstringa@cstring@@qaehi@z
cmp     eax, ebx
jz      short loc_401854
push    1075h
mov     ecx, offset lpcaption
call    ?loadstringa@cstring@@qaehi@z
cmp     eax, ebx
jnz     short loc_40188a
call    ?afxthrowresourceexception@@ygxxz
jmp     short loc_40188a
mov     eax, [ebp+var_1c]
push    offset aafatalerrorhas
mov     ecx, offset lptext
mov     [ebp+var_20], eax
call    ??4cstring@@qaeabv0@pbd@z
push    offset afatalerror
mov     ecx, offset lpcaption
call    ??4cstring@@qaeabv0@pbd@z
mov     eax, offset loc_401885
retn
mov     esi, [ebp+var_14]
xor     ebx, ebx
mov     [ebp+var_4], 0ffffffffh
call    ?afxtrycleanup@@ygxxz
call    ds:getversion
cmp     al, 4
jnb     short loc_4018b2
cmp     [ebp+var_18], ebx
jnz     short loc_4018b2
push    ebx
push    0c0c0c0h
mov     ecx, esi
call    ?setdialogbkcolor@cwinapp@@iaexkk@z
push    offset amicrosoftsourc
mov     ecx, esi
call    ?setregistrykey@cwinapp@@iaexpbd@z
push    4
mov     ecx, esi
call    sub_401dc0
mov     edi, [esi+78h]
mov     ecx, esi
mov     [esi+78h], ebx
call    ?onfilenew@cwinapp@@iaexxz
mov     [esi+78h], edi
lea     edi, [esi+0e0h]
push    0fe2h
push    edi
call    ssguigethelpfilefromclient
mov     [ebp+var_18], eax
mov     eax, [esi+90h]
add     esp, 8
cmp     eax, ebx
jz      short loc_401902
push    eax
call    ds:free
add     esp, 4
mov     ebx, ds:_strdup
push    edi
call    ebx
mov     edx, [esi]
add     esp, 4
mov     ecx, esi
mov     [esi+90h], eax
call    dword ptr [edx+7ch]
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+0c4h]
mov     ecx, [esi+74h]
push    ecx
push    eax
call    ssguidocinit
add     esp, 8
mov     [esi+0c4h], eax
test    eax, eax
jnz     short loc_401956
mov     ecx, esi
call    ?onappexit@cwinapp@@iaexxz
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_18]
test    eax, eax
jnz     short loc_40198f
push    0fe2h
push    edi
call    ssguigethelpfilefromserver
add     esp, 8
test    eax, eax
jz      short loc_40198f
mov     eax, [esi+90h]
test    eax, eax
jz      short loc_401983
push    eax
call    ds:free
add     esp, 4
push    edi
call    ebx
add     esp, 4
mov     [esi+90h], eax
lea     edx, [esi+1e4h]
push    106ah
push    edx
call    ssguigethelpfile
mov     eax, [esi+0d4h]
add     esp, 8
push    offset timerfunc
push    eax
push    7cbh
push    0
call    ds:settimer
mov     ecx, [ebp+var_c]
mov     [esi+0d8h], eax
pop     edi
pop     esi
mov     eax, 1
mov     large fs:0, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, ecx
mov     eax, [esi+0d8h]
test    eax, eax
jz      short loc_4019f6
push    eax
push    0
call    ds:killtimer
mov     eax, [esi+2e8h]
test    eax, eax
jz      short loc_401a17
mov     ecx, [esi+2ech]
push    0
lea     eax, [esi+1e4h]
push    12h
push    eax
push    ecx
call    sub_401eca
mov     eax, [esi+0c8h]
test    eax, eax
jz      short loc_401a2a
push    eax
call    ssguifreeparent
add     esp, 4
lea     ecx, [esi+434h]
call    ?unloadctl3d@cload3d@@qaexxz
mov     ecx, esi
call    ?exitinstance@cwinapp@@uaehxz
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401a40
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 0ch
push    ebx
push    esi
mov     esi, ecx
push    edi
lea     ecx, [ebp+var_1c]
mov     [ebp+var_10], esp
call    ??0afx_exception_link@@qae@xz
mov     [ebp+var_4], 0
mov     ecx, esi
mov     byte ptr [ebp+var_4], 1
call    ?run@cwinapp@@uaehxz
mov     esi, eax
mov     [ebp+var_4], 0ffffffffh
call    ?afxtrycleanup@@ygxxz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, lpcaption
mov     edx, lptext
mov     eax, [ebp+var_14]
push    0
push    ecx
push    edx
push    0
mov     [ebp+var_18], eax
call    ds:messageboxa
mov     eax, offset loc_401ac3
retn
mov     [ebp+var_4], 0ffffffffh
call    ?afxtrycleanup@@ygxxz
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
or      eax, 0ffffffffh
mov     large fs:0, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ecx+0ach]
test    ecx, ecx
jz      short locret_401b04
mov     edx, [esp+arg_0]
mov     eax, [ecx]
push    edx
call    dword ptr [eax+4]
retn    4
mov     eax, [ecx]
push    105h
push    0
call    dword ptr [eax+0a0h]
retn
retn
push    esi
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+8]
push    offset a106
push    offset a196
push    eax
call    ds:findresourcea
mov     esi, eax
test    esi, esi
jz      short loc_401b96
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+8]
push    esi
push    eax
call    ds:loadresource
test    eax, eax
jz      short loc_401b96
push    eax
call    ds:lockresource
push    0
push    eax
call    ssdoaboutbox
add     esp, 8
pop     esi
retn
push    esi
mov     esi, ecx
call    ?afxgetthread@@ygpavcwinthread@@xz
test    eax, eax
jz      short loc_401bba
call    ?afxgetthread@@ygpavcwinthread@@xz
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+7ch]
jmp     short loc_401bbc
xor     eax, eax
test    eax, eax
jz      short loc_401bc3
mov     eax, [eax+20h]
mov     ecx, [esi+90h]
push    10203h
push    0fh
push    ecx
push    eax
mov     [esi+2ech], eax
call    sub_401eca
test    eax, eax
jnz     short loc_401bf0
push    0ffffffffh
push    eax
push    0f107h
call    ?afxmessagebox@@yghiii@z
pop     esi
retn
mov     eax, [esi+2e8h]
inc     eax
mov     [esi+2e8h], eax
pop     esi
retn
mov     al, [ecx+1e4h]
test    al, al
jnz     short locret_401c26
mov     eax, [esp+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short locret_401c26
mov     ecx, [eax+4]
push    0
push    203h
push    ecx
call    ds:deletemenu
retn    4
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, [esp+0ch+arg_4]
mov     ebx, ecx
test    esi, esi
jge     short loc_401c48
push    edi
push    esi
call    ?processmessagefilter@cwinthread@@uaehhpautagmsg@@@z
push    edi
push    esi
call    ssmessagefilter
add     esp, 8
test    eax, eax
jz      short loc_401c61
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn    8
push    edi
push    esi
call    ?filterhelpmessages@chelphook@@sahhpautagmsg@@@z
add     esp, 8
test    eax, eax
jz      short loc_401c7a
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn    8
push    edi
push    esi
mov     ecx, ebx
call    ?processmessagefilter@cwinthread@@uaehhpautagmsg@@@z
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, dword_404194
cmp     dword ptr [eax], 0
jz      short locret_401cee
mov     ecx, [eax+0ch]
push    esi
mov     esi, [esp+4+arg_c]
test    ecx, ecx
jz      short loc_401cb7
cmp     [eax+4], esi
jbe     short loc_401cb7
mov     dword ptr [eax+0ch], 0
mov     eax, dword_404194
mov     ecx, [eax+0ch]
test    ecx, ecx
jnz     short loc_401cea
cmp     esi, [eax+8]
jb      short loc_401cea
call    sssendrefresh
mov     eax, dword_404194
mov     ecx, [eax]
add     ecx, esi
mov     [eax+8], ecx
mov     eax, dword_404194
cmp     [eax+8], esi
jnb     short loc_401cea
mov     dword ptr [eax+0ch], 1
mov     eax, dword_404194
mov     [eax+4], esi
pop     esi
retn    10h
mov     eax, [esp+arg_4]
sub     esp, 20h
push    esi
push    edi
xor     edi, edi
cmp     eax, 1
mov     esi, ecx
jnz     short loc_401d19
mov     eax, 0fh
jmp     short loc_401d3a
cmp     eax, 105h
jnz     short loc_401d27
mov     eax, 3
jmp     short loc_401d3a
cmp     eax, 0bh
jnz     short loc_401d30
xor     eax, eax
jmp     short loc_401d3a
cmp     eax, 3
jnz     short loc_401d6d
mov     eax, 2
cmp     eax, 3
jnz     short loc_401d6d
mov     [esp+28h+var_20], 20h
mov     [esp+28h+var_1c], edi
mov     [esp+28h+var_18], edi
mov     [esp+28h+var_14], 8
mov     [esp+28h+var_10], edi
mov     [esp+28h+var_c], edi
mov     [esp+28h+var_8], edi
mov     [esp+28h+var_4], edi
lea     ecx, [esp+28h+var_20]
jmp     short loc_401d71
mov     ecx, [esp+28h+arg_0]
push    ecx
mov     ecx, [esi+20h]
push    eax
mov     eax, [esi+90h]
mov     edx, [ecx+20h]
push    eax
push    edx
call    sub_401eca
test    eax, eax
jnz     short loc_401d9f
push    0ffffffffh
push    edi
push    0f107h
call    ?afxmessagebox@@yghiii@z
pop     edi
pop     esi
add     esp, 20h
retn    8
mov     eax, [esi+2e8h]
pop     edi
inc     eax
mov     [esi+2e8h], eax
pop     esi
add     esp, 20h
retn    8
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_401dc0
push    eax
mov     large fs:0, esp
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
test    esi, esi
mov     edi, ecx
jz      short loc_401e2a
push    20h
call    ??2@yapaxi@z
add     esp, 4
mov     [esp+14h+arg_0], eax
test    eax, eax
mov     [esp+14h+var_4], 0
jz      short loc_401e13
push    1fh
push    esi
push    offset afiled
push    offset arecentfilelist
push    0
mov     ecx, eax
call    sub_401000
jmp     short loc_401e15
xor     eax, eax
mov     edx, [eax]
mov     ecx, eax
mov     [esp+14h+var_4], 0ffffffffh
mov     [edi+0ach], eax
call    dword ptr [edx+0ch]
mov     ecx, [esp+14h+var_c]
pop     edi
mov     large fs:0, ecx
pop     esi
add     esp, 0ch
retn    4
push    ebp
mov     ebp, esp
sub     esp, 104h
mov     ecx, hmodule
push    esi
test    ecx, ecx
jnz     short loc_401f27
cmp     dword_404528, ecx
jnz     short loc_401f27
lea     eax, [ebp+libfilename]
push    eax
call    sub_401f63
mov     esi, ds:loadlibrarya
test    eax, eax
jz      short loc_401f0a
lea     eax, [ebp+libfilename]
push    eax
call    esi
mov     hmodule, eax
mov     ecx, hmodule
test    ecx, ecx
jnz     short loc_401f27
push    offset libfilename
call    esi
mov     ecx, eax
test    ecx, ecx
mov     hmodule, ecx
jz      short loc_401f42
mov     eax, dword_404530
test    eax, eax
jnz     short loc_401f50
push    0eh
push    ecx
call    ds:getprocaddress
test    eax, eax
mov     dword_404530, eax
jnz     short loc_401f50
mov     dword_404528, 1
xor     eax, eax
jmp     short loc_401f5e
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    eax
pop     esi
leave
retn    10h
push    ebp
mov     ebp, esp
push    ecx
push    ecx
lea     eax, [ebp+phkresult]
push    esi
xor     esi, esi
push    eax
push    20019h
push    esi
push    offset subkey
push    80000000h
call    ds:regopenkeyexa
test    eax, eax
jnz     short loc_401fbb
lea     eax, [ebp+cbdata]
mov     [ebp+cbdata], 104h
push    eax
push    [ebp+lpdata]
push    esi
push    esi
push    offset valuename
push    [ebp+phkresult]
call    ds:regqueryvalueexa
test    eax, eax
jnz     short loc_401fae
push    1
pop     esi
push    [ebp+phkresult]
call    ds:regclosekey
mov     eax, esi
jmp     short loc_401fbd
xor     eax, eax
pop     esi
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 104h
mov     ecx, dword_404524
push    esi
test    ecx, ecx
jnz     short loc_40201f
cmp     dword_40451c, ecx
jnz     short loc_40201f
lea     eax, [ebp-104h]
push    eax
call    sub_401f63
mov     esi, ds:loadlibrarya
test    eax, eax
jz      short loc_402002
lea     eax, [ebp-104h]
push    eax
call    esi
mov     dword_404524, eax
mov     ecx, dword_404524
test    ecx, ecx
jnz     short loc_40201f
push    offset libfilename
call    esi
mov     ecx, eax
test    ecx, ecx
mov     dword_404524, ecx
jz      short loc_40203a
mov     eax, dword_40452c
test    eax, eax
jnz     short loc_402048
push    0eh
push    ecx
call    ds:getprocaddress
test    eax, eax
mov     dword_40452c, eax
jnz     short loc_402048
mov     dword_40451c, 1
xor     eax, eax
jmp     short loc_402056
push    dword ptr [ebp+14h]
push    dword ptr [ebp+10h]
push    dword ptr [ebp+0ch]
push    dword ptr [ebp+8]
call    eax
pop     esi
leave
retn    10h
jmp     ds:?onhelpusing@cwinapp@@iaexxz
jmp     ds:?onfileopen@cwinapp@@iaexxz
jmp     ds:?messagemap@cwinapp@@1uafx_msgmap@@b
mov     eax, ecx
mov     dword ptr [eax], offset ??_7type_info@@6b@
retn    4
push    esi
mov     esi, ecx
call    ??1type_info@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_402218
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
jmp     ds:__p__mbctype
jmp     ds:_strdup
jmp     ds:free
jmp     ds:_exit
jmp     ds:exit
jmp     ds:__p__acmdln
jmp     ds:__getmainargs
jmp     ds:__setusermatherr
xor     eax, eax
retn
jmp     ds:__p__commode
jmp     ds:__p__fmode
jmp     ds:__set_app_type
jmp     ds:lstrcpya
jmp     ds:getversion
jmp     ds:lockresource
jmp     ds:loadresource
jmp     ds:findresourcea
jmp     ds:getprocaddress
jmp     ds:loadlibrarya
jmp     ds:getmodulehandlea
jmp     ds:getstartupinfoa
jmp     ds:getmenuitemcount
jmp     ds:insertmenua
jmp     ds:wsprintfa
jmp     ds:deletemenu
jmp     ds:getmenustringa
jmp     ds:settimer
jmp     ds:killtimer
jmp     ds:messageboxa
jmp     ds:regclosekey
jmp     ds:regenumvaluea
jmp     ds:regopenkeyexa
jmp     ds:regqueryvalueexa
jmp     $+5
mov     ecx, offset dword_404550
jmp     ??0_afx_term_app_state@@qae@xz
jmp     ds:_setmbcp
lea     ecx, [ebp+var_24]
jmp     ??1cstring@@qae@xz
lea     ecx, [ebp+lpsubkey]
jmp     ??1cstring@@qae@xz
lea     ecx, [ebp+var_44]
jmp     j_?afxtrycleanup@@ygxxz
lea     ecx, [ebp+var_3c]
jmp     ??1cstring@@qae@xz
lea     ecx, [ebp+var_34]
jmp     ??1cstring@@qae@xz
mov     eax, offset stru_4032e0
jmp     __cxxframehandler
mov     ecx, [ebp-10h]
jmp     ??1cwinapp@@uae@xz
mov     ecx, [ebp-10h]
add     ecx, 0dch
jmp     ??1cstring@@qae@xz
mov     eax, offset stru_403390
jmp     __cxxframehandler
lea     ecx, [ebp+var_24]
jmp     j_?afxtrycleanup@@ygxxz
mov     eax, offset stru_4033c0
jmp     __cxxframehandler
lea     ecx, [ebp+var_1c]
jmp     j_?afxtrycleanup@@ygxxz
mov     eax, offset stru_403420
jmp     __cxxframehandler
mov     eax, [ebp+4]
push    eax
call    ??3@yaxpax@z
pop     ecx
retn
mov     eax, offset stru_403480
jmp     __cxxframehandler